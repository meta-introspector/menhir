[
  structure_item (demos/calc-inspection/calc.ml[1,0+0]..[1,0+11])
    Pstr_open Fresh
    module_expr (demos/calc-inspection/calc.ml[1,0+5]..[1,0+11])
      Pmod_ident "Lexing" (demos/calc-inspection/calc.ml[1,0+5]..[1,0+11])
  structure_item (demos/calc-inspection/calc.ml[6,144+0]..[9,212+18])
    Pstr_module
    "P" (demos/calc-inspection/calc.ml[6,144+7]..[6,144+8])
      module_expr (demos/calc-inspection/calc.ml[7,155+2]..[9,212+18])
        Pmod_apply
        module_expr (demos/calc-inspection/calc.ml[7,155+2]..[8,181+30])
          Pmod_apply
          module_expr (demos/calc-inspection/calc.ml[7,155+2]..[7,155+25])
            Pmod_ident "MenhirLib.Printers.Make" (demos/calc-inspection/calc.ml[7,155+2]..[7,155+25])
          module_expr (demos/calc-inspection/calc.ml[8,181+5]..[8,181+29])
            Pmod_ident "Parser.MenhirInterpreter" (demos/calc-inspection/calc.ml[8,181+5]..[8,181+29])
        module_expr (demos/calc-inspection/calc.ml[9,212+5]..[9,212+17])
          Pmod_ident "CalcPrinters" (demos/calc-inspection/calc.ml[9,212+5]..[9,212+17])
  structure_item (demos/calc-inspection/calc.ml[14,356+0]..[17,420+24])
    Pstr_module
    "E" (demos/calc-inspection/calc.ml[14,356+7]..[14,356+8])
      module_expr (demos/calc-inspection/calc.ml[15,367+2]..[17,420+24])
        Pmod_apply
        module_expr (demos/calc-inspection/calc.ml[15,367+2]..[16,389+30])
          Pmod_apply
          module_expr (demos/calc-inspection/calc.ml[15,367+2]..[15,367+21])
            Pmod_ident "ErrorReporting.Make" (demos/calc-inspection/calc.ml[15,367+2]..[15,367+21])
          module_expr (demos/calc-inspection/calc.ml[16,389+5]..[16,389+29])
            Pmod_ident "Parser.MenhirInterpreter" (demos/calc-inspection/calc.ml[16,389+5]..[16,389+29])
        module_expr (demos/calc-inspection/calc.ml[17,420+5]..[17,420+23])
          Pmod_ident "CalcErrorReporting" (demos/calc-inspection/calc.ml[17,420+5]..[17,420+23])
  structure_item (demos/calc-inspection/calc.ml[24,685+0]..[25,721+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (demos/calc-inspection/calc.ml[24,685+4]..[24,685+21])
          Ppat_var "print_explanation" (demos/calc-inspection/calc.ml[24,685+4]..[24,685+21])
        expression (demos/calc-inspection/calc.ml[24,685+22]..[25,721+35]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (demos/calc-inspection/calc.ml[24,685+22]..[24,685+33])
            Ppat_var "explanation" (demos/calc-inspection/calc.ml[24,685+22]..[24,685+33])
          expression (demos/calc-inspection/calc.ml[25,721+2]..[25,721+35])
            Pexp_apply
            expression (demos/calc-inspection/calc.ml[25,721+2]..[25,721+14])
              Pexp_ident "P.print_item" (demos/calc-inspection/calc.ml[25,721+2]..[25,721+14])
            [
              <arg>
              Nolabel
                expression (demos/calc-inspection/calc.ml[25,721+15]..[25,721+35])
                  Pexp_apply
                  expression (demos/calc-inspection/calc.ml[25,721+16]..[25,721+22])
                    Pexp_ident "E.item" (demos/calc-inspection/calc.ml[25,721+16]..[25,721+22])
                  [
                    <arg>
                    Nolabel
                      expression (demos/calc-inspection/calc.ml[25,721+23]..[25,721+34])
                        Pexp_ident "explanation" (demos/calc-inspection/calc.ml[25,721+23]..[25,721+34])
                  ]
            ]
    ]
  structure_item (demos/calc-inspection/calc.ml[27,758+0]..[33,957+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (demos/calc-inspection/calc.ml[27,758+4]..[27,758+22])
          Ppat_var "print_explanations" (demos/calc-inspection/calc.ml[27,758+4]..[27,758+22])
        expression (demos/calc-inspection/calc.ml[27,758+23]..[33,957+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (demos/calc-inspection/calc.ml[27,758+23]..[27,758+29])
            Ppat_var "startp" (demos/calc-inspection/calc.ml[27,758+23]..[27,758+29])
          expression (demos/calc-inspection/calc.ml[27,758+30]..[33,957+14]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (demos/calc-inspection/calc.ml[27,758+30]..[27,758+42])
              Ppat_var "explanations" (demos/calc-inspection/calc.ml[27,758+30]..[27,758+42])
            expression (demos/calc-inspection/calc.ml[28,803+2]..[33,957+14])
              Pexp_sequence
              expression (demos/calc-inspection/calc.ml[28,803+2]..[31,892+19])
                Pexp_apply
                expression (demos/calc-inspection/calc.ml[28,803+2]..[28,803+16])
                  Pexp_ident "Printf.fprintf" (demos/calc-inspection/calc.ml[28,803+2]..[28,803+16])
                [
                  <arg>
                  Nolabel
                    expression (demos/calc-inspection/calc.ml[28,803+17]..[28,803+23])
                      Pexp_ident "stderr" (demos/calc-inspection/calc.ml[28,803+17]..[28,803+23])
                  <arg>
                  Nolabel
                    expression (demos/calc-inspection/calc.ml[29,827+4]..[29,827+44])
                      Pexp_constant PConst_string("At line %d, column %d: syntax error.\n",(demos/calc-inspection/calc.ml[29,827+5]..[29,827+43]),None)
                  <arg>
                  Nolabel
                    expression (demos/calc-inspection/calc.ml[30,872+4]..[30,872+19])
                      Pexp_field
                      expression (demos/calc-inspection/calc.ml[30,872+4]..[30,872+10])
                        Pexp_ident "startp" (demos/calc-inspection/calc.ml[30,872+4]..[30,872+10])
                      "pos_lnum" (demos/calc-inspection/calc.ml[30,872+11]..[30,872+19])
                  <arg>
                  Nolabel
                    expression (demos/calc-inspection/calc.ml[31,892+4]..[31,892+19])
                      Pexp_field
                      expression (demos/calc-inspection/calc.ml[31,892+4]..[31,892+10])
                        Pexp_ident "startp" (demos/calc-inspection/calc.ml[31,892+4]..[31,892+10])
                      "pos_cnum" (demos/calc-inspection/calc.ml[31,892+11]..[31,892+19])
                ]
              expression (demos/calc-inspection/calc.ml[32,913+2]..[33,957+14])
                Pexp_sequence
                expression (demos/calc-inspection/calc.ml[32,913+2]..[32,913+42])
                  Pexp_apply
                  expression (demos/calc-inspection/calc.ml[32,913+2]..[32,913+11])
                    Pexp_ident "List.iter" (demos/calc-inspection/calc.ml[32,913+2]..[32,913+11])
                  [
                    <arg>
                    Nolabel
                      expression (demos/calc-inspection/calc.ml[32,913+12]..[32,913+29])
                        Pexp_ident "print_explanation" (demos/calc-inspection/calc.ml[32,913+12]..[32,913+29])
                    <arg>
                    Nolabel
                      expression (demos/calc-inspection/calc.ml[32,913+30]..[32,913+42])
                        Pexp_ident "explanations" (demos/calc-inspection/calc.ml[32,913+30]..[32,913+42])
                  ]
                expression (demos/calc-inspection/calc.ml[33,957+2]..[33,957+14])
                  Pexp_apply
                  expression (demos/calc-inspection/calc.ml[33,957+2]..[33,957+7])
                    Pexp_ident "flush" (demos/calc-inspection/calc.ml[33,957+2]..[33,957+7])
                  [
                    <arg>
                    Nolabel
                      expression (demos/calc-inspection/calc.ml[33,957+8]..[33,957+14])
                        Pexp_ident "stderr" (demos/calc-inspection/calc.ml[33,957+8]..[33,957+14])
                  ]
    ]
  structure_item (demos/calc-inspection/calc.ml[37,1027+0]..[46,1325+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (demos/calc-inspection/calc.ml[37,1027+4]..[37,1027+11])
          Ppat_var "process" (demos/calc-inspection/calc.ml[37,1027+4]..[37,1027+11])
        expression (demos/calc-inspection/calc.ml[37,1027+12]..[46,1325+44]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (demos/calc-inspection/calc.ml[37,1027+12]..[37,1027+27])
            Ppat_constraint
            pattern (demos/calc-inspection/calc.ml[37,1027+13]..[37,1027+17])
              Ppat_var "line" (demos/calc-inspection/calc.ml[37,1027+13]..[37,1027+17])
            core_type (demos/calc-inspection/calc.ml[37,1027+20]..[37,1027+26])
              Ptyp_constr "string" (demos/calc-inspection/calc.ml[37,1027+20]..[37,1027+26])
              []
          expression (demos/calc-inspection/calc.ml[38,1057+2]..[46,1325+44])
            Pexp_let Nonrec
            [
              <def>
                pattern (demos/calc-inspection/calc.ml[38,1057+6]..[38,1057+12])
                  Ppat_var "lexbuf" (demos/calc-inspection/calc.ml[38,1057+6]..[38,1057+12])
                expression (demos/calc-inspection/calc.ml[38,1057+15]..[38,1057+31])
                  Pexp_apply
                  expression (demos/calc-inspection/calc.ml[38,1057+15]..[38,1057+26])
                    Pexp_ident "from_string" (demos/calc-inspection/calc.ml[38,1057+15]..[38,1057+26])
                  [
                    <arg>
                    Nolabel
                      expression (demos/calc-inspection/calc.ml[38,1057+27]..[38,1057+31])
                        Pexp_ident "line" (demos/calc-inspection/calc.ml[38,1057+27]..[38,1057+31])
                  ]
            ]
            expression (demos/calc-inspection/calc.ml[39,1092+2]..[46,1325+44])
              Pexp_try
              expression (demos/calc-inspection/calc.ml[40,1098+4]..[41,1184+28])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (demos/calc-inspection/calc.ml[40,1098+8]..[40,1098+9])
                      Ppat_var "v" (demos/calc-inspection/calc.ml[40,1098+8]..[40,1098+9])
                    expression (demos/calc-inspection/calc.ml[40,1098+12]..[40,1098+82])
                      Pexp_apply
                      expression (demos/calc-inspection/calc.ml[40,1098+12]..[40,1098+19])
                        Pexp_ident "E.entry" (demos/calc-inspection/calc.ml[40,1098+12]..[40,1098+19])
                      [
                        <arg>
                        Nolabel
                          expression (demos/calc-inspection/calc.ml[40,1098+20]..[40,1098+63])
                            Pexp_apply
                            expression (demos/calc-inspection/calc.ml[40,1098+21]..[40,1098+44])
                              Pexp_ident "Parser.Incremental.main" (demos/calc-inspection/calc.ml[40,1098+21]..[40,1098+44])
                            [
                              <arg>
                              Nolabel
                                expression (demos/calc-inspection/calc.ml[40,1098+45]..[40,1098+62])
                                  Pexp_field
                                  expression (demos/calc-inspection/calc.ml[40,1098+45]..[40,1098+51])
                                    Pexp_ident "lexbuf" (demos/calc-inspection/calc.ml[40,1098+45]..[40,1098+51])
                                  "lex_curr_p" (demos/calc-inspection/calc.ml[40,1098+52]..[40,1098+62])
                            ]
                        <arg>
                        Nolabel
                          expression (demos/calc-inspection/calc.ml[40,1098+64]..[40,1098+75])
                            Pexp_ident "Lexer.token" (demos/calc-inspection/calc.ml[40,1098+64]..[40,1098+75])
                        <arg>
                        Nolabel
                          expression (demos/calc-inspection/calc.ml[40,1098+76]..[40,1098+82])
                            Pexp_ident "lexbuf" (demos/calc-inspection/calc.ml[40,1098+76]..[40,1098+82])
                      ]
                ]
                expression (demos/calc-inspection/calc.ml[41,1184+4]..[41,1184+28])
                  Pexp_apply
                  expression (demos/calc-inspection/calc.ml[41,1184+4]..[41,1184+17])
                    Pexp_ident "Printf.printf" (demos/calc-inspection/calc.ml[41,1184+4]..[41,1184+17])
                  [
                    <arg>
                    Nolabel
                      expression (demos/calc-inspection/calc.ml[41,1184+18]..[41,1184+26])
                        Pexp_constant PConst_string("%d\n%!",(demos/calc-inspection/calc.ml[41,1184+19]..[41,1184+25]),None)
                    <arg>
                    Nolabel
                      expression (demos/calc-inspection/calc.ml[41,1184+27]..[41,1184+28])
                        Pexp_ident "v" (demos/calc-inspection/calc.ml[41,1184+27]..[41,1184+28])
                  ]
              [
                <case>
                  pattern (demos/calc-inspection/calc.ml[43,1220+4]..[43,1220+19])
                    Ppat_construct "Lexer.Error" (demos/calc-inspection/calc.ml[43,1220+4]..[43,1220+15])
                    Some
                      []
                      pattern (demos/calc-inspection/calc.ml[43,1220+16]..[43,1220+19])
                        Ppat_var "msg" (demos/calc-inspection/calc.ml[43,1220+16]..[43,1220+19])
                  expression (demos/calc-inspection/calc.ml[44,1243+6]..[44,1243+38])
                    Pexp_apply
                    expression (demos/calc-inspection/calc.ml[44,1243+6]..[44,1243+20])
                      Pexp_ident "Printf.fprintf" (demos/calc-inspection/calc.ml[44,1243+6]..[44,1243+20])
                    [
                      <arg>
                      Nolabel
                        expression (demos/calc-inspection/calc.ml[44,1243+21]..[44,1243+27])
                          Pexp_ident "stderr" (demos/calc-inspection/calc.ml[44,1243+21]..[44,1243+27])
                      <arg>
                      Nolabel
                        expression (demos/calc-inspection/calc.ml[44,1243+28]..[44,1243+34])
                          Pexp_constant PConst_string("%s%!",(demos/calc-inspection/calc.ml[44,1243+29]..[44,1243+33]),None)
                      <arg>
                      Nolabel
                        expression (demos/calc-inspection/calc.ml[44,1243+35]..[44,1243+38])
                          Pexp_ident "msg" (demos/calc-inspection/calc.ml[44,1243+35]..[44,1243+38])
                    ]
                <case>
                  pattern (demos/calc-inspection/calc.ml[45,1282+4]..[45,1282+39])
                    Ppat_construct "E.Error" (demos/calc-inspection/calc.ml[45,1282+4]..[45,1282+11])
                    Some
                      []
                      pattern (demos/calc-inspection/calc.ml[45,1282+12]..[45,1282+39])
                        Ppat_tuple
                        [
                          pattern (demos/calc-inspection/calc.ml[45,1282+13]..[45,1282+24])
                            Ppat_tuple
                            [
                              pattern (demos/calc-inspection/calc.ml[45,1282+14]..[45,1282+20])
                                Ppat_var "startp" (demos/calc-inspection/calc.ml[45,1282+14]..[45,1282+20])
                              pattern (demos/calc-inspection/calc.ml[45,1282+22]..[45,1282+23])
                                Ppat_any
                            ]
                          pattern (demos/calc-inspection/calc.ml[45,1282+26]..[45,1282+38])
                            Ppat_var "explanations" (demos/calc-inspection/calc.ml[45,1282+26]..[45,1282+38])
                        ]
                  expression (demos/calc-inspection/calc.ml[46,1325+6]..[46,1325+44])
                    Pexp_apply
                    expression (demos/calc-inspection/calc.ml[46,1325+6]..[46,1325+24])
                      Pexp_ident "print_explanations" (demos/calc-inspection/calc.ml[46,1325+6]..[46,1325+24])
                    [
                      <arg>
                      Nolabel
                        expression (demos/calc-inspection/calc.ml[46,1325+25]..[46,1325+31])
                          Pexp_ident "startp" (demos/calc-inspection/calc.ml[46,1325+25]..[46,1325+31])
                      <arg>
                      Nolabel
                        expression (demos/calc-inspection/calc.ml[46,1325+32]..[46,1325+44])
                          Pexp_ident "explanations" (demos/calc-inspection/calc.ml[46,1325+32]..[46,1325+44])
                    ]
              ]
    ]
  structure_item (demos/calc-inspection/calc.ml[48,1371+0]..[53,1482+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (demos/calc-inspection/calc.ml[48,1371+4]..[48,1371+11])
          Ppat_var "process" (demos/calc-inspection/calc.ml[48,1371+4]..[48,1371+11])
        expression (demos/calc-inspection/calc.ml[48,1371+12]..[53,1482+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (demos/calc-inspection/calc.ml[48,1371+12]..[48,1371+43])
            Ppat_constraint
            pattern (demos/calc-inspection/calc.ml[48,1371+13]..[48,1371+26])
              Ppat_var "optional_line" (demos/calc-inspection/calc.ml[48,1371+13]..[48,1371+26])
            core_type (demos/calc-inspection/calc.ml[48,1371+29]..[48,1371+42])
              Ptyp_constr "option" (demos/calc-inspection/calc.ml[48,1371+36]..[48,1371+42])
              [
                core_type (demos/calc-inspection/calc.ml[48,1371+29]..[48,1371+35])
                  Ptyp_constr "string" (demos/calc-inspection/calc.ml[48,1371+29]..[48,1371+35])
                  []
              ]
          expression (demos/calc-inspection/calc.ml[49,1417+2]..[53,1482+18])
            Pexp_match
            expression (demos/calc-inspection/calc.ml[49,1417+8]..[49,1417+21])
              Pexp_ident "optional_line" (demos/calc-inspection/calc.ml[49,1417+8]..[49,1417+21])
            [
              <case>
                pattern (demos/calc-inspection/calc.ml[50,1444+4]..[50,1444+8])
                  Ppat_construct "None" (demos/calc-inspection/calc.ml[50,1444+4]..[50,1444+8])
                  None
                expression (demos/calc-inspection/calc.ml[51,1456+6]..[51,1456+8])
                  Pexp_construct "()" (demos/calc-inspection/calc.ml[51,1456+6]..[51,1456+8])
                  None
              <case>
                pattern (demos/calc-inspection/calc.ml[52,1465+4]..[52,1465+13])
                  Ppat_construct "Some" (demos/calc-inspection/calc.ml[52,1465+4]..[52,1465+8])
                  Some
                    []
                    pattern (demos/calc-inspection/calc.ml[52,1465+9]..[52,1465+13])
                      Ppat_var "line" (demos/calc-inspection/calc.ml[52,1465+9]..[52,1465+13])
                expression (demos/calc-inspection/calc.ml[53,1482+6]..[53,1482+18])
                  Pexp_apply
                  expression (demos/calc-inspection/calc.ml[53,1482+6]..[53,1482+13])
                    Pexp_ident "process" (demos/calc-inspection/calc.ml[53,1482+6]..[53,1482+13])
                  [
                    <arg>
                    Nolabel
                      expression (demos/calc-inspection/calc.ml[53,1482+14]..[53,1482+18])
                        Pexp_ident "line" (demos/calc-inspection/calc.ml[53,1482+14]..[53,1482+18])
                  ]
            ]
    ]
  structure_item (demos/calc-inspection/calc.ml[55,1502+0]..[60,1659+18])
    Pstr_value Rec
    [
      <def>
        pattern (demos/calc-inspection/calc.ml[55,1502+8]..[55,1502+14])
          Ppat_var "repeat" (demos/calc-inspection/calc.ml[55,1502+8]..[55,1502+14])
        expression (demos/calc-inspection/calc.ml[55,1502+15]..[60,1659+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (demos/calc-inspection/calc.ml[55,1502+15]..[55,1502+22])
            Ppat_var "channel" (demos/calc-inspection/calc.ml[55,1502+15]..[55,1502+22])
          expression (demos/calc-inspection/calc.ml[57,1561+2]..[60,1659+18])
            Pexp_let Nonrec
            [
              <def>
                pattern (demos/calc-inspection/calc.ml[57,1561+6]..[57,1561+29])
                  Ppat_tuple
                  [
                    pattern (demos/calc-inspection/calc.ml[57,1561+6]..[57,1561+19])
                      Ppat_var "optional_line" (demos/calc-inspection/calc.ml[57,1561+6]..[57,1561+19])
                    pattern (demos/calc-inspection/calc.ml[57,1561+21]..[57,1561+29])
                      Ppat_var "continue" (demos/calc-inspection/calc.ml[57,1561+21]..[57,1561+29])
                  ]
                expression (demos/calc-inspection/calc.ml[57,1561+32]..[57,1561+50])
                  Pexp_apply
                  expression (demos/calc-inspection/calc.ml[57,1561+32]..[57,1561+42])
                    Pexp_ident "Lexer.line" (demos/calc-inspection/calc.ml[57,1561+32]..[57,1561+42])
                  [
                    <arg>
                    Nolabel
                      expression (demos/calc-inspection/calc.ml[57,1561+43]..[57,1561+50])
                        Pexp_ident "channel" (demos/calc-inspection/calc.ml[57,1561+43]..[57,1561+50])
                  ]
            ]
            expression (demos/calc-inspection/calc.ml[58,1615+2]..[60,1659+18])
              Pexp_sequence
              expression (demos/calc-inspection/calc.ml[58,1615+2]..[58,1615+23])
                Pexp_apply
                expression (demos/calc-inspection/calc.ml[58,1615+2]..[58,1615+9])
                  Pexp_ident "process" (demos/calc-inspection/calc.ml[58,1615+2]..[58,1615+9])
                [
                  <arg>
                  Nolabel
                    expression (demos/calc-inspection/calc.ml[58,1615+10]..[58,1615+23])
                      Pexp_ident "optional_line" (demos/calc-inspection/calc.ml[58,1615+10]..[58,1615+23])
                ]
              expression (demos/calc-inspection/calc.ml[59,1640+2]..[60,1659+18])
                Pexp_ifthenelse
                expression (demos/calc-inspection/calc.ml[59,1640+5]..[59,1640+13])
                  Pexp_ident "continue" (demos/calc-inspection/calc.ml[59,1640+5]..[59,1640+13])
                expression (demos/calc-inspection/calc.ml[60,1659+4]..[60,1659+18])
                  Pexp_apply
                  expression (demos/calc-inspection/calc.ml[60,1659+4]..[60,1659+10])
                    Pexp_ident "repeat" (demos/calc-inspection/calc.ml[60,1659+4]..[60,1659+10])
                  [
                    <arg>
                    Nolabel
                      expression (demos/calc-inspection/calc.ml[60,1659+11]..[60,1659+18])
                        Pexp_ident "channel" (demos/calc-inspection/calc.ml[60,1659+11]..[60,1659+18])
                  ]
                None
    ]
  structure_item (demos/calc-inspection/calc.ml[62,1679+0]..[63,1688+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (demos/calc-inspection/calc.ml[62,1679+4]..[62,1679+6])
          Ppat_construct "()" (demos/calc-inspection/calc.ml[62,1679+4]..[62,1679+6])
          None
        expression (demos/calc-inspection/calc.ml[63,1688+2]..[63,1688+29])
          Pexp_apply
          expression (demos/calc-inspection/calc.ml[63,1688+2]..[63,1688+8])
            Pexp_ident "repeat" (demos/calc-inspection/calc.ml[63,1688+2]..[63,1688+8])
          [
            <arg>
            Nolabel
              expression (demos/calc-inspection/calc.ml[63,1688+9]..[63,1688+29])
                Pexp_apply
                expression (demos/calc-inspection/calc.ml[63,1688+10]..[63,1688+22])
                  Pexp_ident "from_channel" (demos/calc-inspection/calc.ml[63,1688+10]..[63,1688+22])
                [
                  <arg>
                  Nolabel
                    expression (demos/calc-inspection/calc.ml[63,1688+23]..[63,1688+28])
                      Pexp_ident "stdin" (demos/calc-inspection/calc.ml[63,1688+23]..[63,1688+28])
                ]
          ]
    ]
]

open Lexing
module P =
  ((MenhirLib.Printers.Make)(Parser.MenhirInterpreter))(CalcPrinters)
module E =
  ((ErrorReporting.Make)(Parser.MenhirInterpreter))(CalcErrorReporting)
let print_explanation explanation = P.print_item (E.item explanation)
let print_explanations startp explanations =
  Printf.fprintf stderr "At line %d, column %d: syntax error.\n"
    startp.pos_lnum startp.pos_cnum;
  List.iter print_explanation explanations;
  flush stderr
let process (line : string) =
  let lexbuf = from_string line in
  try
    let v =
      E.entry (Parser.Incremental.main lexbuf.lex_curr_p) Lexer.token lexbuf in
    Printf.printf "%d\n%!" v
  with | Lexer.Error msg -> Printf.fprintf stderr "%s%!" msg
  | E.Error ((startp, _), explanations) ->
      print_explanations startp explanations
let process (optional_line : string option) =
  match optional_line with | None -> () | Some line -> process line
let rec repeat channel =
  let (optional_line, continue) = Lexer.line channel in
  process optional_line; if continue then repeat channel
let () = repeat (from_channel stdin)
[
  structure_item (demos/calc-inspection/calc.ml[1,0+0]..demos/calc-inspection/calc.ml[1,0+11])
    Tstr_open Fresh
    module_expr (demos/calc-inspection/calc.ml[1,0+5]..demos/calc-inspection/calc.ml[1,0+11])
      Tmod_ident "Stdlib!.Lexing"
  structure_item (demos/calc-inspection/calc.ml[6,144+0]..demos/calc-inspection/calc.ml[9,212+18])
    Tstr_module
    P/544
      module_expr (demos/calc-inspection/calc.ml[7,155+2]..demos/calc-inspection/calc.ml[9,212+18])
        Tmod_apply
        module_expr (demos/calc-inspection/calc.ml[7,155+2]..demos/calc-inspection/calc.ml[8,181+30])
          Tmod_apply
          module_expr (demos/calc-inspection/calc.ml[7,155+2]..demos/calc-inspection/calc.ml[7,155+25])
            Tmod_ident "MenhirLib!.Printers.Make"
          module_expr (demos/calc-inspection/calc.ml[8,181+5]..demos/calc-inspection/calc.ml[8,181+29])
            module_expr (demos/calc-inspection/calc.ml[8,181+5]..demos/calc-inspection/calc.ml[8,181+29])
              Tmod_ident "Dune__exe!.Parser.MenhirInterpreter"
        module_expr (demos/calc-inspection/calc.ml[9,212+5]..demos/calc-inspection/calc.ml[9,212+17])
          module_expr (demos/calc-inspection/calc.ml[9,212+5]..demos/calc-inspection/calc.ml[9,212+17])
            Tmod_ident "Dune__exe!.CalcPrinters"
  structure_item (demos/calc-inspection/calc.ml[14,356+0]..demos/calc-inspection/calc.ml[17,420+24])
    Tstr_module
    E/578
      module_expr (demos/calc-inspection/calc.ml[15,367+2]..demos/calc-inspection/calc.ml[17,420+24])
        Tmod_apply
        module_expr (demos/calc-inspection/calc.ml[15,367+2]..demos/calc-inspection/calc.ml[16,389+30])
          Tmod_apply
          module_expr (demos/calc-inspection/calc.ml[15,367+2]..demos/calc-inspection/calc.ml[15,367+21])
            module_expr (demos/calc-inspection/calc.ml[15,367+2]..demos/calc-inspection/calc.ml[15,367+21])
              Tmod_ident "Dune__exe!.ErrorReporting.Make"
          module_expr (demos/calc-inspection/calc.ml[16,389+5]..demos/calc-inspection/calc.ml[16,389+29])
            module_expr (demos/calc-inspection/calc.ml[16,389+5]..demos/calc-inspection/calc.ml[16,389+29])
              Tmod_ident "Dune__exe!.Parser.MenhirInterpreter"
        module_expr (demos/calc-inspection/calc.ml[17,420+5]..demos/calc-inspection/calc.ml[17,420+23])
          module_expr (demos/calc-inspection/calc.ml[17,420+5]..demos/calc-inspection/calc.ml[17,420+23])
            Tmod_ident "Dune__exe!.CalcErrorReporting"
  structure_item (demos/calc-inspection/calc.ml[24,685+0]..demos/calc-inspection/calc.ml[25,721+35])
    Tstr_value Nonrec
    [
      <def>
        pattern (demos/calc-inspection/calc.ml[24,685+4]..demos/calc-inspection/calc.ml[24,685+21])
          Tpat_var "print_explanation/579"
        expression (demos/calc-inspection/calc.ml[24,685+22]..demos/calc-inspection/calc.ml[25,721+35]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (demos/calc-inspection/calc.ml[24,685+22]..demos/calc-inspection/calc.ml[24,685+33])
                Tpat_var "explanation/581"
              expression (demos/calc-inspection/calc.ml[25,721+2]..demos/calc-inspection/calc.ml[25,721+35])
                Texp_apply
                expression (demos/calc-inspection/calc.ml[25,721+2]..demos/calc-inspection/calc.ml[25,721+14])
                  Texp_ident "P/544.print_item"
                [
                  <arg>
                    Nolabel
                    expression (demos/calc-inspection/calc.ml[25,721+15]..demos/calc-inspection/calc.ml[25,721+35])
                      Texp_apply
                      expression (demos/calc-inspection/calc.ml[25,721+16]..demos/calc-inspection/calc.ml[25,721+22])
                        Texp_ident "E/578.item"
                      [
                        <arg>
                          Nolabel
                          expression (demos/calc-inspection/calc.ml[25,721+23]..demos/calc-inspection/calc.ml[25,721+34])
                            Texp_ident "explanation/581"
                      ]
                ]
          ]
    ]
  structure_item (demos/calc-inspection/calc.ml[27,758+0]..demos/calc-inspection/calc.ml[33,957+14])
    Tstr_value Nonrec
    [
      <def>
        pattern (demos/calc-inspection/calc.ml[27,758+4]..demos/calc-inspection/calc.ml[27,758+22])
          Tpat_var "print_explanations/639"
        expression (demos/calc-inspection/calc.ml[27,758+23]..demos/calc-inspection/calc.ml[33,957+14]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (demos/calc-inspection/calc.ml[27,758+23]..demos/calc-inspection/calc.ml[27,758+29])
                Tpat_var "startp/641"
              expression (demos/calc-inspection/calc.ml[27,758+30]..demos/calc-inspection/calc.ml[33,957+14]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (demos/calc-inspection/calc.ml[27,758+30]..demos/calc-inspection/calc.ml[27,758+42])
                      Tpat_var "explanations/642"
                    expression (demos/calc-inspection/calc.ml[28,803+2]..demos/calc-inspection/calc.ml[33,957+14])
                      Texp_sequence
                      expression (demos/calc-inspection/calc.ml[28,803+2]..demos/calc-inspection/calc.ml[31,892+19])
                        Texp_apply
                        expression (demos/calc-inspection/calc.ml[28,803+2]..demos/calc-inspection/calc.ml[28,803+16])
                          Texp_ident "Stdlib!.Printf.fprintf"
                        [
                          <arg>
                            Nolabel
                            expression (demos/calc-inspection/calc.ml[28,803+17]..demos/calc-inspection/calc.ml[28,803+23])
                              Texp_ident "Stdlib!.stderr"
                          <arg>
                            Nolabel
                            expression (demos/calc-inspection/calc.ml[29,827+4]..demos/calc-inspection/calc.ml[29,827+44])
                              Texp_construct "CamlinternalFormatBasics.Format"
                              [
                                expression (demos/calc-inspection/calc.ml[29,827+4]..demos/calc-inspection/calc.ml[29,827+44]) ghost
                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                  [
                                    expression (demos/calc-inspection/calc.ml[29,827+4]..demos/calc-inspection/calc.ml[29,827+44]) ghost
                                      Texp_constant Const_string("At line ",(demos/calc-inspection/calc.ml[29,827+4]..demos/calc-inspection/calc.ml[29,827+44]) ghost,None)
                                    expression (demos/calc-inspection/calc.ml[29,827+4]..demos/calc-inspection/calc.ml[29,827+44]) ghost
                                      Texp_construct "CamlinternalFormatBasics.Int"
                                      [
                                        expression (demos/calc-inspection/calc.ml[29,827+4]..demos/calc-inspection/calc.ml[29,827+44]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Int_d"
                                          []
                                        expression (demos/calc-inspection/calc.ml[29,827+4]..demos/calc-inspection/calc.ml[29,827+44]) ghost
                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                          []
                                        expression (demos/calc-inspection/calc.ml[29,827+4]..demos/calc-inspection/calc.ml[29,827+44]) ghost
                                          Texp_construct "CamlinternalFormatBasics.No_precision"
                                          []
                                        expression (demos/calc-inspection/calc.ml[29,827+4]..demos/calc-inspection/calc.ml[29,827+44]) ghost
                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                          [
                                            expression (demos/calc-inspection/calc.ml[29,827+4]..demos/calc-inspection/calc.ml[29,827+44]) ghost
                                              Texp_constant Const_string(", column ",(demos/calc-inspection/calc.ml[29,827+4]..demos/calc-inspection/calc.ml[29,827+44]) ghost,None)
                                            expression (demos/calc-inspection/calc.ml[29,827+4]..demos/calc-inspection/calc.ml[29,827+44]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Int"
                                              [
                                                expression (demos/calc-inspection/calc.ml[29,827+4]..demos/calc-inspection/calc.ml[29,827+44]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Int_d"
                                                  []
                                                expression (demos/calc-inspection/calc.ml[29,827+4]..demos/calc-inspection/calc.ml[29,827+44]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                  []
                                                expression (demos/calc-inspection/calc.ml[29,827+4]..demos/calc-inspection/calc.ml[29,827+44]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_precision"
                                                  []
                                                expression (demos/calc-inspection/calc.ml[29,827+4]..demos/calc-inspection/calc.ml[29,827+44]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                  [
                                                    expression (demos/calc-inspection/calc.ml[29,827+4]..demos/calc-inspection/calc.ml[29,827+44]) ghost
                                                      Texp_constant Const_string(": syntax error.\n",(demos/calc-inspection/calc.ml[29,827+4]..demos/calc-inspection/calc.ml[29,827+44]) ghost,None)
                                                    expression (demos/calc-inspection/calc.ml[29,827+4]..demos/calc-inspection/calc.ml[29,827+44]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                      []
                                                  ]
                                              ]
                                          ]
                                      ]
                                  ]
                                expression (demos/calc-inspection/calc.ml[29,827+4]..demos/calc-inspection/calc.ml[29,827+44]) ghost
                                  Texp_constant Const_string("At line %d, column %d: syntax error.\n",(demos/calc-inspection/calc.ml[29,827+4]..demos/calc-inspection/calc.ml[29,827+44]) ghost,None)
                              ]
                          <arg>
                            Nolabel
                            expression (demos/calc-inspection/calc.ml[30,872+4]..demos/calc-inspection/calc.ml[30,872+19])
                              Texp_field
                              expression (demos/calc-inspection/calc.ml[30,872+4]..demos/calc-inspection/calc.ml[30,872+10])
                                Texp_ident "startp/641"
                              "pos_lnum"
                          <arg>
                            Nolabel
                            expression (demos/calc-inspection/calc.ml[31,892+4]..demos/calc-inspection/calc.ml[31,892+19])
                              Texp_field
                              expression (demos/calc-inspection/calc.ml[31,892+4]..demos/calc-inspection/calc.ml[31,892+10])
                                Texp_ident "startp/641"
                              "pos_cnum"
                        ]
                      expression (demos/calc-inspection/calc.ml[32,913+2]..demos/calc-inspection/calc.ml[33,957+14])
                        Texp_sequence
                        expression (demos/calc-inspection/calc.ml[32,913+2]..demos/calc-inspection/calc.ml[32,913+42])
                          Texp_apply
                          expression (demos/calc-inspection/calc.ml[32,913+2]..demos/calc-inspection/calc.ml[32,913+11])
                            Texp_ident "Stdlib!.List.iter"
                          [
                            <arg>
                              Nolabel
                              expression (demos/calc-inspection/calc.ml[32,913+12]..demos/calc-inspection/calc.ml[32,913+29])
                                Texp_ident "print_explanation/579"
                            <arg>
                              Nolabel
                              expression (demos/calc-inspection/calc.ml[32,913+30]..demos/calc-inspection/calc.ml[32,913+42])
                                Texp_ident "explanations/642"
                          ]
                        expression (demos/calc-inspection/calc.ml[33,957+2]..demos/calc-inspection/calc.ml[33,957+14])
                          Texp_apply
                          expression (demos/calc-inspection/calc.ml[33,957+2]..demos/calc-inspection/calc.ml[33,957+7])
                            Texp_ident "Stdlib!.flush"
                          [
                            <arg>
                              Nolabel
                              expression (demos/calc-inspection/calc.ml[33,957+8]..demos/calc-inspection/calc.ml[33,957+14])
                                Texp_ident "Stdlib!.stderr"
                          ]
                ]
          ]
    ]
  structure_item (demos/calc-inspection/calc.ml[37,1027+0]..demos/calc-inspection/calc.ml[46,1325+44])
    Tstr_value Nonrec
    [
      <def>
        pattern (demos/calc-inspection/calc.ml[37,1027+4]..demos/calc-inspection/calc.ml[37,1027+11])
          Tpat_var "process/769"
        expression (demos/calc-inspection/calc.ml[37,1027+12]..demos/calc-inspection/calc.ml[46,1325+44]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (demos/calc-inspection/calc.ml[37,1027+13]..demos/calc-inspection/calc.ml[37,1027+17])
                extra
                  Tpat_extra_constraint
                  core_type (demos/calc-inspection/calc.ml[37,1027+20]..demos/calc-inspection/calc.ml[37,1027+26])
                    Ttyp_constr "string/15!"
                    []
                Tpat_alias "line/771"
                pattern (demos/calc-inspection/calc.ml[37,1027+13]..demos/calc-inspection/calc.ml[37,1027+17])
                  Tpat_any
              expression (demos/calc-inspection/calc.ml[38,1057+2]..demos/calc-inspection/calc.ml[46,1325+44])
                Texp_let Nonrec
                [
                  <def>
                    pattern (demos/calc-inspection/calc.ml[38,1057+6]..demos/calc-inspection/calc.ml[38,1057+12])
                      Tpat_var "lexbuf/772"
                    expression (demos/calc-inspection/calc.ml[38,1057+15]..demos/calc-inspection/calc.ml[38,1057+31])
                      Texp_apply
                      expression (demos/calc-inspection/calc.ml[38,1057+15]..demos/calc-inspection/calc.ml[38,1057+26])
                        Texp_ident "Stdlib!.Lexing.from_string"
                      [
                        <arg>
                          Optional "with_positions"
                          expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                            Texp_construct "None"
                            []
                        <arg>
                          Nolabel
                          expression (demos/calc-inspection/calc.ml[38,1057+27]..demos/calc-inspection/calc.ml[38,1057+31])
                            Texp_ident "line/771"
                      ]
                ]
                expression (demos/calc-inspection/calc.ml[39,1092+2]..demos/calc-inspection/calc.ml[46,1325+44])
                  Texp_try
                  expression (demos/calc-inspection/calc.ml[40,1098+4]..demos/calc-inspection/calc.ml[41,1184+28])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (demos/calc-inspection/calc.ml[40,1098+8]..demos/calc-inspection/calc.ml[40,1098+9])
                          Tpat_var "v/773"
                        expression (demos/calc-inspection/calc.ml[40,1098+12]..demos/calc-inspection/calc.ml[40,1098+82])
                          Texp_apply
                          expression (demos/calc-inspection/calc.ml[40,1098+12]..demos/calc-inspection/calc.ml[40,1098+19])
                            Texp_ident "E/578.entry"
                          [
                            <arg>
                              Nolabel
                              expression (demos/calc-inspection/calc.ml[40,1098+20]..demos/calc-inspection/calc.ml[40,1098+63])
                                Texp_apply
                                expression (demos/calc-inspection/calc.ml[40,1098+21]..demos/calc-inspection/calc.ml[40,1098+44])
                                  Texp_ident "Dune__exe!.Parser.Incremental.main"
                                [
                                  <arg>
                                    Nolabel
                                    expression (demos/calc-inspection/calc.ml[40,1098+45]..demos/calc-inspection/calc.ml[40,1098+62])
                                      Texp_field
                                      expression (demos/calc-inspection/calc.ml[40,1098+45]..demos/calc-inspection/calc.ml[40,1098+51])
                                        Texp_ident "lexbuf/772"
                                      "lex_curr_p"
                                ]
                            <arg>
                              Nolabel
                              expression (demos/calc-inspection/calc.ml[40,1098+64]..demos/calc-inspection/calc.ml[40,1098+75])
                                Texp_ident "Dune__exe!.Lexer.token"
                            <arg>
                              Nolabel
                              expression (demos/calc-inspection/calc.ml[40,1098+76]..demos/calc-inspection/calc.ml[40,1098+82])
                                Texp_ident "lexbuf/772"
                          ]
                    ]
                    expression (demos/calc-inspection/calc.ml[41,1184+4]..demos/calc-inspection/calc.ml[41,1184+28])
                      Texp_apply
                      expression (demos/calc-inspection/calc.ml[41,1184+4]..demos/calc-inspection/calc.ml[41,1184+17])
                        Texp_ident "Stdlib!.Printf.printf"
                      [
                        <arg>
                          Nolabel
                          expression (demos/calc-inspection/calc.ml[41,1184+18]..demos/calc-inspection/calc.ml[41,1184+26])
                            Texp_construct "CamlinternalFormatBasics.Format"
                            [
                              expression (demos/calc-inspection/calc.ml[41,1184+18]..demos/calc-inspection/calc.ml[41,1184+26]) ghost
                                Texp_construct "CamlinternalFormatBasics.Int"
                                [
                                  expression (demos/calc-inspection/calc.ml[41,1184+18]..demos/calc-inspection/calc.ml[41,1184+26]) ghost
                                    Texp_construct "CamlinternalFormatBasics.Int_d"
                                    []
                                  expression (demos/calc-inspection/calc.ml[41,1184+18]..demos/calc-inspection/calc.ml[41,1184+26]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                    []
                                  expression (demos/calc-inspection/calc.ml[41,1184+18]..demos/calc-inspection/calc.ml[41,1184+26]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_precision"
                                    []
                                  expression (demos/calc-inspection/calc.ml[41,1184+18]..demos/calc-inspection/calc.ml[41,1184+26]) ghost
                                    Texp_construct "CamlinternalFormatBasics.Char_literal"
                                    [
                                      expression (demos/calc-inspection/calc.ml[41,1184+18]..demos/calc-inspection/calc.ml[41,1184+26]) ghost
                                        Texp_constant Const_char 0a
                                      expression (demos/calc-inspection/calc.ml[41,1184+18]..demos/calc-inspection/calc.ml[41,1184+26]) ghost
                                        Texp_construct "CamlinternalFormatBasics.Flush"
                                        [
                                          expression (demos/calc-inspection/calc.ml[41,1184+18]..demos/calc-inspection/calc.ml[41,1184+26]) ghost
                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                            []
                                        ]
                                    ]
                                ]
                              expression (demos/calc-inspection/calc.ml[41,1184+18]..demos/calc-inspection/calc.ml[41,1184+26]) ghost
                                Texp_constant Const_string("%d\n%!",(demos/calc-inspection/calc.ml[41,1184+18]..demos/calc-inspection/calc.ml[41,1184+26]) ghost,None)
                            ]
                        <arg>
                          Nolabel
                          expression (demos/calc-inspection/calc.ml[41,1184+27]..demos/calc-inspection/calc.ml[41,1184+28])
                            Texp_ident "v/773"
                      ]
                  [
                    <case>
                      pattern (demos/calc-inspection/calc.ml[43,1220+4]..demos/calc-inspection/calc.ml[43,1220+19])
                        Tpat_construct "Lexer.Error"
                        [
                          pattern (demos/calc-inspection/calc.ml[43,1220+16]..demos/calc-inspection/calc.ml[43,1220+19])
                            Tpat_var "msg/781"
                        ]
                        None
                      expression (demos/calc-inspection/calc.ml[44,1243+6]..demos/calc-inspection/calc.ml[44,1243+38])
                        Texp_apply
                        expression (demos/calc-inspection/calc.ml[44,1243+6]..demos/calc-inspection/calc.ml[44,1243+20])
                          Texp_ident "Stdlib!.Printf.fprintf"
                        [
                          <arg>
                            Nolabel
                            expression (demos/calc-inspection/calc.ml[44,1243+21]..demos/calc-inspection/calc.ml[44,1243+27])
                              Texp_ident "Stdlib!.stderr"
                          <arg>
                            Nolabel
                            expression (demos/calc-inspection/calc.ml[44,1243+28]..demos/calc-inspection/calc.ml[44,1243+34])
                              Texp_construct "CamlinternalFormatBasics.Format"
                              [
                                expression (demos/calc-inspection/calc.ml[44,1243+28]..demos/calc-inspection/calc.ml[44,1243+34]) ghost
                                  Texp_construct "CamlinternalFormatBasics.String"
                                  [
                                    expression (demos/calc-inspection/calc.ml[44,1243+28]..demos/calc-inspection/calc.ml[44,1243+34]) ghost
                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                      []
                                    expression (demos/calc-inspection/calc.ml[44,1243+28]..demos/calc-inspection/calc.ml[44,1243+34]) ghost
                                      Texp_construct "CamlinternalFormatBasics.Flush"
                                      [
                                        expression (demos/calc-inspection/calc.ml[44,1243+28]..demos/calc-inspection/calc.ml[44,1243+34]) ghost
                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                          []
                                      ]
                                  ]
                                expression (demos/calc-inspection/calc.ml[44,1243+28]..demos/calc-inspection/calc.ml[44,1243+34]) ghost
                                  Texp_constant Const_string("%s%!",(demos/calc-inspection/calc.ml[44,1243+28]..demos/calc-inspection/calc.ml[44,1243+34]) ghost,None)
                              ]
                          <arg>
                            Nolabel
                            expression (demos/calc-inspection/calc.ml[44,1243+35]..demos/calc-inspection/calc.ml[44,1243+38])
                              Texp_ident "msg/781"
                        ]
                    <case>
                      pattern (demos/calc-inspection/calc.ml[45,1282+4]..demos/calc-inspection/calc.ml[45,1282+39])
                        Tpat_construct "E.Error"
                        [
                          pattern (demos/calc-inspection/calc.ml[45,1282+13]..demos/calc-inspection/calc.ml[45,1282+24])
                            Tpat_tuple
                            [
                              pattern (demos/calc-inspection/calc.ml[45,1282+14]..demos/calc-inspection/calc.ml[45,1282+20])
                                Tpat_var "startp/782"
                              pattern (demos/calc-inspection/calc.ml[45,1282+22]..demos/calc-inspection/calc.ml[45,1282+23])
                                Tpat_any
                            ]
                          pattern (demos/calc-inspection/calc.ml[45,1282+26]..demos/calc-inspection/calc.ml[45,1282+38])
                            Tpat_var "explanations/783"
                        ]
                        None
                      expression (demos/calc-inspection/calc.ml[46,1325+6]..demos/calc-inspection/calc.ml[46,1325+44])
                        Texp_apply
                        expression (demos/calc-inspection/calc.ml[46,1325+6]..demos/calc-inspection/calc.ml[46,1325+24])
                          Texp_ident "print_explanations/639"
                        [
                          <arg>
                            Nolabel
                            expression (demos/calc-inspection/calc.ml[46,1325+25]..demos/calc-inspection/calc.ml[46,1325+31])
                              Texp_ident "startp/782"
                          <arg>
                            Nolabel
                            expression (demos/calc-inspection/calc.ml[46,1325+32]..demos/calc-inspection/calc.ml[46,1325+44])
                              Texp_ident "explanations/783"
                        ]
                  ]
          ]
    ]
  structure_item (demos/calc-inspection/calc.ml[48,1371+0]..demos/calc-inspection/calc.ml[53,1482+18])
    Tstr_value Nonrec
    [
      <def>
        pattern (demos/calc-inspection/calc.ml[48,1371+4]..demos/calc-inspection/calc.ml[48,1371+11])
          Tpat_var "process/784"
        expression (demos/calc-inspection/calc.ml[48,1371+12]..demos/calc-inspection/calc.ml[53,1482+18]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (demos/calc-inspection/calc.ml[48,1371+13]..demos/calc-inspection/calc.ml[48,1371+26])
                extra
                  Tpat_extra_constraint
                  core_type (demos/calc-inspection/calc.ml[48,1371+29]..demos/calc-inspection/calc.ml[48,1371+42])
                    Ttyp_constr "option/10!"
                    [
                      core_type (demos/calc-inspection/calc.ml[48,1371+29]..demos/calc-inspection/calc.ml[48,1371+35])
                        Ttyp_constr "string/15!"
                        []
                    ]
                Tpat_alias "optional_line/785"
                pattern (demos/calc-inspection/calc.ml[48,1371+13]..demos/calc-inspection/calc.ml[48,1371+26])
                  Tpat_any
              expression (demos/calc-inspection/calc.ml[49,1417+2]..demos/calc-inspection/calc.ml[53,1482+18])
                Texp_match
                expression (demos/calc-inspection/calc.ml[49,1417+8]..demos/calc-inspection/calc.ml[49,1417+21])
                  Texp_ident "optional_line/785"
                [
                  <case>
                    pattern (demos/calc-inspection/calc.ml[50,1444+4]..demos/calc-inspection/calc.ml[50,1444+8])
                      Tpat_value
                      pattern (demos/calc-inspection/calc.ml[50,1444+4]..demos/calc-inspection/calc.ml[50,1444+8])
                        Tpat_construct "None"
                        []
                        None
                    expression (demos/calc-inspection/calc.ml[51,1456+6]..demos/calc-inspection/calc.ml[51,1456+8])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (demos/calc-inspection/calc.ml[52,1465+4]..demos/calc-inspection/calc.ml[52,1465+13])
                      Tpat_value
                      pattern (demos/calc-inspection/calc.ml[52,1465+4]..demos/calc-inspection/calc.ml[52,1465+13])
                        Tpat_construct "Some"
                        [
                          pattern (demos/calc-inspection/calc.ml[52,1465+9]..demos/calc-inspection/calc.ml[52,1465+13])
                            Tpat_var "line/786"
                        ]
                        None
                    expression (demos/calc-inspection/calc.ml[53,1482+6]..demos/calc-inspection/calc.ml[53,1482+18])
                      Texp_apply
                      expression (demos/calc-inspection/calc.ml[53,1482+6]..demos/calc-inspection/calc.ml[53,1482+13])
                        Texp_ident "process/769"
                      [
                        <arg>
                          Nolabel
                          expression (demos/calc-inspection/calc.ml[53,1482+14]..demos/calc-inspection/calc.ml[53,1482+18])
                            Texp_ident "line/786"
                      ]
                ]
          ]
    ]
  structure_item (demos/calc-inspection/calc.ml[55,1502+0]..demos/calc-inspection/calc.ml[60,1659+18])
    Tstr_value Rec
    [
      <def>
        pattern (demos/calc-inspection/calc.ml[55,1502+8]..demos/calc-inspection/calc.ml[55,1502+14])
          Tpat_var "repeat/787"
        expression (demos/calc-inspection/calc.ml[55,1502+15]..demos/calc-inspection/calc.ml[60,1659+18]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (demos/calc-inspection/calc.ml[55,1502+15]..demos/calc-inspection/calc.ml[55,1502+22])
                Tpat_var "channel/788"
              expression (demos/calc-inspection/calc.ml[57,1561+2]..demos/calc-inspection/calc.ml[60,1659+18])
                Texp_let Nonrec
                [
                  <def>
                    pattern (demos/calc-inspection/calc.ml[57,1561+6]..demos/calc-inspection/calc.ml[57,1561+29])
                      Tpat_tuple
                      [
                        pattern (demos/calc-inspection/calc.ml[57,1561+6]..demos/calc-inspection/calc.ml[57,1561+19])
                          Tpat_var "optional_line/789"
                        pattern (demos/calc-inspection/calc.ml[57,1561+21]..demos/calc-inspection/calc.ml[57,1561+29])
                          Tpat_var "continue/790"
                      ]
                    expression (demos/calc-inspection/calc.ml[57,1561+32]..demos/calc-inspection/calc.ml[57,1561+50])
                      Texp_apply
                      expression (demos/calc-inspection/calc.ml[57,1561+32]..demos/calc-inspection/calc.ml[57,1561+42])
                        Texp_ident "Dune__exe!.Lexer.line"
                      [
                        <arg>
                          Nolabel
                          expression (demos/calc-inspection/calc.ml[57,1561+43]..demos/calc-inspection/calc.ml[57,1561+50])
                            Texp_ident "channel/788"
                      ]
                ]
                expression (demos/calc-inspection/calc.ml[58,1615+2]..demos/calc-inspection/calc.ml[60,1659+18])
                  Texp_sequence
                  expression (demos/calc-inspection/calc.ml[58,1615+2]..demos/calc-inspection/calc.ml[58,1615+23])
                    Texp_apply
                    expression (demos/calc-inspection/calc.ml[58,1615+2]..demos/calc-inspection/calc.ml[58,1615+9])
                      Texp_ident "process/784"
                    [
                      <arg>
                        Nolabel
                        expression (demos/calc-inspection/calc.ml[58,1615+10]..demos/calc-inspection/calc.ml[58,1615+23])
                          Texp_ident "optional_line/789"
                    ]
                  expression (demos/calc-inspection/calc.ml[59,1640+2]..demos/calc-inspection/calc.ml[60,1659+18])
                    Texp_ifthenelse
                    expression (demos/calc-inspection/calc.ml[59,1640+5]..demos/calc-inspection/calc.ml[59,1640+13])
                      Texp_ident "continue/790"
                    expression (demos/calc-inspection/calc.ml[60,1659+4]..demos/calc-inspection/calc.ml[60,1659+18])
                      Texp_apply
                      expression (demos/calc-inspection/calc.ml[60,1659+4]..demos/calc-inspection/calc.ml[60,1659+10])
                        Texp_ident "repeat/787"
                      [
                        <arg>
                          Nolabel
                          expression (demos/calc-inspection/calc.ml[60,1659+11]..demos/calc-inspection/calc.ml[60,1659+18])
                            Texp_ident "channel/788"
                      ]
                    None
          ]
    ]
  structure_item (demos/calc-inspection/calc.ml[62,1679+0]..demos/calc-inspection/calc.ml[63,1688+29])
    Tstr_value Nonrec
    [
      <def>
        pattern (demos/calc-inspection/calc.ml[62,1679+4]..demos/calc-inspection/calc.ml[62,1679+6])
          Tpat_construct "()"
          []
          None
        expression (demos/calc-inspection/calc.ml[63,1688+2]..demos/calc-inspection/calc.ml[63,1688+29])
          Texp_apply
          expression (demos/calc-inspection/calc.ml[63,1688+2]..demos/calc-inspection/calc.ml[63,1688+8])
            Texp_ident "repeat/787"
          [
            <arg>
              Nolabel
              expression (demos/calc-inspection/calc.ml[63,1688+9]..demos/calc-inspection/calc.ml[63,1688+29])
                Texp_apply
                expression (demos/calc-inspection/calc.ml[63,1688+10]..demos/calc-inspection/calc.ml[63,1688+22])
                  Texp_ident "Stdlib!.Lexing.from_channel"
                [
                  <arg>
                    Optional "with_positions"
                    expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                      Texp_construct "None"
                      []
                  <arg>
                    Nolabel
                    expression (demos/calc-inspection/calc.ml[63,1688+23]..demos/calc-inspection/calc.ml[63,1688+28])
                      Texp_ident "Stdlib!.stdin"
                ]
          ]
    ]
]

{<Dune__exe__Calc>
 "E"[module] ->
   CU Dune__exe . "ErrorReporting"[module] . "Make"[module](
   CU Dune__exe . "Parser"[module] . "MenhirInterpreter"[module])(
   CU Dune__exe . "CalcErrorReporting"[module])<Dune__exe__Calc.1>;
 "P"[module] ->
   CU MenhirLib . "Printers"[module] . "Make"[module](
   CU Dune__exe . "Parser"[module] . "MenhirInterpreter"[module])(
   CU Dune__exe . "CalcPrinters"[module])<Dune__exe__Calc.0>;
 "print_explanation"[value] -> <Dune__exe__Calc.2>;
 "print_explanations"[value] -> <Dune__exe__Calc.4>;
 "process"[value] -> <Dune__exe__Calc.14>;
 "repeat"[value] -> <Dune__exe__Calc.17>;
 }

(setglobal Dune__exe__Calc!
  (let
    (P/544 =
       (apply
         (apply (field_imm 0 (field_imm 7 (global MenhirLib!)))
           (let (let/906 = (field_imm 2 (global Dune__exe__Parser!)))
             (field_imm 2 (global Dune__exe__Parser!))))
         (let (let/905 = (global Dune__exe__CalcPrinters!))
           (global Dune__exe__CalcPrinters!)))
     E/578 =
       (apply
         (apply
           (let (let/909 = (field_imm 0 (global Dune__exe__ErrorReporting!)))
             (field_imm 0 (global Dune__exe__ErrorReporting!)))
           (let (let/908 = (field_imm 2 (global Dune__exe__Parser!)))
             (field_imm 2 (global Dune__exe__Parser!))))
         (let (let/907 = (global Dune__exe__CalcErrorReporting!))
           (global Dune__exe__CalcErrorReporting!)))
     print_explanation/579 =
       (function explanation/581 : int
         (funct-body Dune__exe__Calc.print_explanation demos/calc-inspection/calc.ml(24)<ghost>:707-756
           (before Dune__exe__Calc.print_explanation demos/calc-inspection/calc.ml(25):723-756
             (after Dune__exe__Calc.print_explanation demos/calc-inspection/calc.ml(25):723-756
               (apply (field_imm 3 P/544)
                 (after Dune__exe__Calc.print_explanation demos/calc-inspection/calc.ml(25):736-756
                   (apply (field_imm 0 E/578) explanation/581)))))))
     print_explanations/639 =
       (function startp/641 explanations/642 : int
         (funct-body Dune__exe__Calc.print_explanations demos/calc-inspection/calc.ml(27)<ghost>:781-971
           (before Dune__exe__Calc.print_explanations demos/calc-inspection/calc.ml(28):805-971
             (seq
               (after Dune__exe__Calc.print_explanations demos/calc-inspection/calc.ml(28):805-911
                 (apply (field_imm 0 (global Stdlib__Printf!))
                   (field_imm 39 (global Stdlib!))
                   [0:
                    [11:
                     "At line "
                     [4:
                      0 0 0
                      [11:
                       ", column " [4: 0 0 0 [11: ": syntax error.\n" 0]]]]]
                    "At line %d, column %d: syntax error.\n"]
                   (field_int 1 startp/641) (field_int 3 startp/641)))
               (before Dune__exe__Calc.print_explanations demos/calc-inspection/calc.ml(32):915-971
                 (seq
                   (after Dune__exe__Calc.print_explanations demos/calc-inspection/calc.ml(32):915-955
                     (apply (field_imm 17 (global Stdlib__List!))
                       print_explanation/579 explanations/642))
                   (before Dune__exe__Calc.print_explanations demos/calc-inspection/calc.ml(33):959-971
                     (after Dune__exe__Calc.print_explanations demos/calc-inspection/calc.ml(33):959-971
                       (apply (field_imm 62 (global Stdlib!))
                         (field_imm 39 (global Stdlib!)))))))))))
     process/769 =
       (function line/771 : int
         (funct-body Dune__exe__Calc.process demos/calc-inspection/calc.ml(37)<ghost>:1039-1369
           (before Dune__exe__Calc.process demos/calc-inspection/calc.ml(38):1059-1369
             (let
               (lexbuf/772 =
                  (after Dune__exe__Calc.process demos/calc-inspection/calc.ml(38):1072-1088
                    (apply (field_imm 2 (global Stdlib__Lexing!)) 0 line/771)))
               (before Dune__exe__Calc.process demos/calc-inspection/calc.ml(39):1094-1369
                 (try
                   (let
                     (v/773 =[int]
                        (after Dune__exe__Calc.process demos/calc-inspection/calc.ml(40):1110-1180
                          (apply (field_imm 5 E/578)
                            (after Dune__exe__Calc.process demos/calc-inspection/calc.ml(40):1118-1161
                              (apply
                                (field_imm 0
                                  (field_imm 3 (global Dune__exe__Parser!)))
                                (field_mut 11 lexbuf/772)))
                            (field_imm 4 (global Dune__exe__Lexer!))
                            lexbuf/772)))
                     (before Dune__exe__Calc.process demos/calc-inspection/calc.ml(41):1188-1212
                       (after Dune__exe__Calc.process demos/calc-inspection/calc.ml(41):1188-1212
                         (apply (field_imm 1 (global Stdlib__Printf!))
                           [0: [4: 0 0 0 [12: '\n' [10: 0]]] "%d\n%!"] v/773))))
                  with exn/910
                   (catch
                     (catch
                       (let (tag/911 =a (field_imm 0 exn/910))
                         (if
                           (== tag/911
                             (field_imm 0 (global Dune__exe__Lexer!)))
                           (let (msg/781 =a (field_imm 1 exn/910))
                             (before Dune__exe__Calc.process demos/calc-inspection/calc.ml(44):1249-1281
                               (after Dune__exe__Calc.process demos/calc-inspection/calc.ml(44):1249-1281
                                 (apply
                                   (field_imm 0 (global Stdlib__Printf!))
                                   (field_imm 39 (global Stdlib!))
                                   [0: [2: 0 [10: 0]] "%s%!"] msg/781))))
                           (exit 2)))
                      with (2)
                       (let (tag/914 =a (field_imm 0 exn/910))
                         (if (== tag/914 (field_imm 4 E/578))
                           (let
                             (explanations/783 =a (field_imm 2 exn/910)
                              *match*/912 =a (field_imm 1 exn/910)
                              *match*/913 =a (field_imm 1 *match*/912)
                              startp/782 =a (field_imm 0 *match*/912))
                             (before Dune__exe__Calc.process demos/calc-inspection/calc.ml(46):1331-1369
                               (after Dune__exe__Calc.process demos/calc-inspection/calc.ml(46):1331-1369
                                 (apply print_explanations/639 startp/782
                                   explanations/783))))
                           (exit 1))))
                    with (1) (reraise exn/910))))))))
     process/784 =
       (function optional_line/785 : int
         (funct-body Dune__exe__Calc.process demos/calc-inspection/calc.ml(48)<ghost>:1383-1500
           (before Dune__exe__Calc.process demos/calc-inspection/calc.ml(49):1419-1500
             (if optional_line/785
               (let (line/786 =a (field_imm 0 optional_line/785))
                 (before Dune__exe__Calc.process demos/calc-inspection/calc.ml(53):1488-1500
                   (after Dune__exe__Calc.process demos/calc-inspection/calc.ml(53):1488-1500
                     (apply process/769 line/786))))
               (before Dune__exe__Calc.process demos/calc-inspection/calc.ml(51):1462-1464
                 0))))))
    (letrec
      (repeat/787
         (function channel/788 : int
           (funct-body Dune__exe__Calc.repeat demos/calc-inspection/calc.ml(55)<ghost>:1517-1677
             (before Dune__exe__Calc.repeat demos/calc-inspection/calc.ml(57):1563-1677
               (let
                 (*match*/918 =
                    (after Dune__exe__Calc.repeat demos/calc-inspection/calc.ml(57):1593-1611
                      (apply (field_imm 2 (global Dune__exe__Lexer!))
                        channel/788))
                  continue/790 =a (field_imm 1 *match*/918)
                  optional_line/789 =a (field_imm 0 *match*/918))
                 (before Dune__exe__Calc.repeat demos/calc-inspection/calc.ml(58):1617-1677
                   (seq
                     (after Dune__exe__Calc.repeat demos/calc-inspection/calc.ml(58):1617-1638
                       (apply process/784 optional_line/789))
                     (before Dune__exe__Calc.repeat demos/calc-inspection/calc.ml(59):1642-1677
                       (if continue/790
                         (before Dune__exe__Calc.repeat demos/calc-inspection/calc.ml(60):1663-1677
                           (after Dune__exe__Calc.repeat demos/calc-inspection/calc.ml(60):1663-1677
                             (apply repeat/787 channel/788)))
                         0)))))))))
      (let
        (*match*/920 =
           (after Dune__exe__Calc demos/calc-inspection/calc.ml(63):1690-1717
             (apply repeat/787
               (after Dune__exe__Calc demos/calc-inspection/calc.ml(63):1697-1717
                 (apply (field_imm 1 (global Stdlib__Lexing!)) 0
                   (field_imm 37 (global Stdlib!)))))))
        (pseudo <unknown location>
          (makeblock 0 P/544 E/578 print_explanation/579
            print_explanations/639 process/784 repeat/787))))))
(setglobal Dune__exe__Calc!
  (let
    (P/544 =
       (apply
         (apply (field_imm 0 (field_imm 7 (global MenhirLib!)))
           (let (let/906 = (field_imm 2 (global Dune__exe__Parser!)))
             (field_imm 2 (global Dune__exe__Parser!))))
         (let (let/905 = (global Dune__exe__CalcPrinters!))
           (global Dune__exe__CalcPrinters!)))
     E/578 =
       (apply
         (apply
           (let (let/909 = (field_imm 0 (global Dune__exe__ErrorReporting!)))
             (field_imm 0 (global Dune__exe__ErrorReporting!)))
           (let (let/908 = (field_imm 2 (global Dune__exe__Parser!)))
             (field_imm 2 (global Dune__exe__Parser!))))
         (let (let/907 = (global Dune__exe__CalcErrorReporting!))
           (global Dune__exe__CalcErrorReporting!)))
     print_explanation/579 =
       (function explanation/581 : int
         (funct-body Dune__exe__Calc.print_explanation demos/calc-inspection/calc.ml(24)<ghost>:707-756
           (before Dune__exe__Calc.print_explanation demos/calc-inspection/calc.ml(25):723-756
             (after Dune__exe__Calc.print_explanation demos/calc-inspection/calc.ml(25):723-756
               (apply (field_imm 3 P/544)
                 (after Dune__exe__Calc.print_explanation demos/calc-inspection/calc.ml(25):736-756
                   (apply (field_imm 0 E/578) explanation/581)))))))
     print_explanations/639 =
       (function startp/641 explanations/642 : int
         (funct-body Dune__exe__Calc.print_explanations demos/calc-inspection/calc.ml(27)<ghost>:781-971
           (before Dune__exe__Calc.print_explanations demos/calc-inspection/calc.ml(28):805-971
             (seq
               (after Dune__exe__Calc.print_explanations demos/calc-inspection/calc.ml(28):805-911
                 (apply (field_imm 0 (global Stdlib__Printf!))
                   (field_imm 39 (global Stdlib!))
                   [0:
                    [11:
                     "At line "
                     [4:
                      0 0 0
                      [11:
                       ", column " [4: 0 0 0 [11: ": syntax error.\n" 0]]]]]
                    "At line %d, column %d: syntax error.\n"]
                   (field_int 1 startp/641) (field_int 3 startp/641)))
               (before Dune__exe__Calc.print_explanations demos/calc-inspection/calc.ml(32):915-971
                 (seq
                   (after Dune__exe__Calc.print_explanations demos/calc-inspection/calc.ml(32):915-955
                     (apply (field_imm 17 (global Stdlib__List!))
                       print_explanation/579 explanations/642))
                   (before Dune__exe__Calc.print_explanations demos/calc-inspection/calc.ml(33):959-971
                     (after Dune__exe__Calc.print_explanations demos/calc-inspection/calc.ml(33):959-971
                       (apply (field_imm 62 (global Stdlib!))
                         (field_imm 39 (global Stdlib!)))))))))))
     process/769 =
       (function line/771 : int
         (funct-body Dune__exe__Calc.process demos/calc-inspection/calc.ml(37)<ghost>:1039-1369
           (before Dune__exe__Calc.process demos/calc-inspection/calc.ml(38):1059-1369
             (let
               (lexbuf/772 =
                  (after Dune__exe__Calc.process demos/calc-inspection/calc.ml(38):1072-1088
                    (apply (field_imm 2 (global Stdlib__Lexing!)) 0 line/771)))
               (before Dune__exe__Calc.process demos/calc-inspection/calc.ml(39):1094-1369
                 (try
                   (let
                     (v/773 =[int]
                        (after Dune__exe__Calc.process demos/calc-inspection/calc.ml(40):1110-1180
                          (apply (field_imm 5 E/578)
                            (after Dune__exe__Calc.process demos/calc-inspection/calc.ml(40):1118-1161
                              (apply
                                (field_imm 0
                                  (field_imm 3 (global Dune__exe__Parser!)))
                                (field_mut 11 lexbuf/772)))
                            (field_imm 4 (global Dune__exe__Lexer!))
                            lexbuf/772)))
                     (before Dune__exe__Calc.process demos/calc-inspection/calc.ml(41):1188-1212
                       (after Dune__exe__Calc.process demos/calc-inspection/calc.ml(41):1188-1212
                         (apply (field_imm 1 (global Stdlib__Printf!))
                           [0: [4: 0 0 0 [12: '\n' [10: 0]]] "%d\n%!"] v/773))))
                  with exn/910
                   (let (tag/911 =a (field_imm 0 exn/910))
                     (if
                       (== tag/911 (field_imm 0 (global Dune__exe__Lexer!)))
                       (let (msg/781 =a (field_imm 1 exn/910))
                         (before Dune__exe__Calc.process demos/calc-inspection/calc.ml(44):1249-1281
                           (after Dune__exe__Calc.process demos/calc-inspection/calc.ml(44):1249-1281
                             (apply (field_imm 0 (global Stdlib__Printf!))
                               (field_imm 39 (global Stdlib!))
                               [0: [2: 0 [10: 0]] "%s%!"] msg/781))))
                       (let (tag/914 =a (field_imm 0 exn/910))
                         (if (== tag/914 (field_imm 4 E/578))
                           (let
                             (explanations/783 =a (field_imm 2 exn/910)
                              *match*/912 =a (field_imm 1 exn/910)
                              startp/782 =a (field_imm 0 *match*/912))
                             (before Dune__exe__Calc.process demos/calc-inspection/calc.ml(46):1331-1369
                               (after Dune__exe__Calc.process demos/calc-inspection/calc.ml(46):1331-1369
                                 (apply print_explanations/639 startp/782
                                   explanations/783))))
                           (reraise exn/910)))))))))))
     process/784 =
       (function optional_line/785 : int
         (funct-body Dune__exe__Calc.process demos/calc-inspection/calc.ml(48)<ghost>:1383-1500
           (before Dune__exe__Calc.process demos/calc-inspection/calc.ml(49):1419-1500
             (if optional_line/785
               (let (line/786 =a (field_imm 0 optional_line/785))
                 (before Dune__exe__Calc.process demos/calc-inspection/calc.ml(53):1488-1500
                   (after Dune__exe__Calc.process demos/calc-inspection/calc.ml(53):1488-1500
                     (apply process/769 line/786))))
               (before Dune__exe__Calc.process demos/calc-inspection/calc.ml(51):1462-1464
                 0))))))
    (letrec
      (repeat/787
         (function channel/788 : int
           (funct-body Dune__exe__Calc.repeat demos/calc-inspection/calc.ml(55)<ghost>:1517-1677
             (before Dune__exe__Calc.repeat demos/calc-inspection/calc.ml(57):1563-1677
               (let
                 (*match*/918 =
                    (after Dune__exe__Calc.repeat demos/calc-inspection/calc.ml(57):1593-1611
                      (apply (field_imm 2 (global Dune__exe__Lexer!))
                        channel/788))
                  continue/790 =a (field_imm 1 *match*/918)
                  optional_line/789 =a (field_imm 0 *match*/918))
                 (before Dune__exe__Calc.repeat demos/calc-inspection/calc.ml(58):1617-1677
                   (seq
                     (after Dune__exe__Calc.repeat demos/calc-inspection/calc.ml(58):1617-1638
                       (apply process/784 optional_line/789))
                     (before Dune__exe__Calc.repeat demos/calc-inspection/calc.ml(59):1642-1677
                       (if continue/790
                         (before Dune__exe__Calc.repeat demos/calc-inspection/calc.ml(60):1663-1677
                           (after Dune__exe__Calc.repeat demos/calc-inspection/calc.ml(60):1663-1677
                             (apply repeat/787 channel/788)))
                         0)))))))))
      (let
        (*match*/920 =
           (after Dune__exe__Calc demos/calc-inspection/calc.ml(63):1690-1717
             (apply repeat/787
               (after Dune__exe__Calc demos/calc-inspection/calc.ml(63):1697-1717
                 (apply (field_imm 1 (global Stdlib__Lexing!)) 0
                   (field_imm 37 (global Stdlib!)))))))
        (pseudo <unknown location>
          (makeblock 0 P/544 E/578 print_explanation/579
            print_explanations/639 process/784 repeat/787))))))
