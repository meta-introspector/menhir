[
  structure_item (src/cmly_write.ml[14,1000+0]..[14,1000+16])
    Pstr_open Fresh
    module_expr (src/cmly_write.ml[14,1000+5]..[14,1000+16])
      Pmod_ident "BasicSyntax" (src/cmly_write.ml[14,1000+5]..[14,1000+16])
  structure_item (src/cmly_write.ml[15,1017+0]..[15,1017+12])
    Pstr_open Fresh
    module_expr (src/cmly_write.ml[15,1017+5]..[15,1017+12])
      Pmod_ident "Grammar" (src/cmly_write.ml[15,1017+5]..[15,1017+12])
  structure_item (src/cmly_write.ml[16,1030+0]..[16,1030+16])
    Pstr_open Fresh
    module_expr (src/cmly_write.ml[16,1030+5]..[16,1030+16])
      Pmod_ident "Cmly_format" (src/cmly_write.ml[16,1030+5]..[16,1030+16])
  structure_item (src/cmly_write.ml[18,1048+0]..[19,1074+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[18,1048+4]..[18,1048+15])
          Ppat_var "raw_content" (src/cmly_write.ml[18,1048+4]..[18,1048+15])
        expression (src/cmly_write.ml[18,1048+16]..[19,1074+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/cmly_write.ml[18,1048+16]..[18,1048+23])
            Ppat_var "stretch" (src/cmly_write.ml[18,1048+16]..[18,1048+23])
          expression (src/cmly_write.ml[19,1074+2]..[19,1074+37])
            Pexp_field
            expression (src/cmly_write.ml[19,1074+2]..[19,1074+9])
              Pexp_ident "stretch" (src/cmly_write.ml[19,1074+2]..[19,1074+9])
            "Stretch.stretch_raw_content" (src/cmly_write.ml[19,1074+10]..[19,1074+37])
    ]
  structure_item (src/cmly_write.ml[21,1113+0]..[26,1270+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[21,1113+4]..[21,1113+13])
          Ppat_var "ocamltype" (src/cmly_write.ml[21,1113+4]..[21,1113+13])
        expression (src/cmly_write.ml[21,1113+14]..[26,1270+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/cmly_write.ml[21,1113+14]..[21,1113+39])
            Ppat_constraint
            pattern (src/cmly_write.ml[21,1113+15]..[21,1113+18])
              Ppat_var "typ" (src/cmly_write.ml[21,1113+15]..[21,1113+18])
            core_type (src/cmly_write.ml[21,1113+21]..[21,1113+38])
              Ptyp_constr "Stretch.ocamltype" (src/cmly_write.ml[21,1113+21]..[21,1113+38])
              []
          expression (src/cmly_write.ml[21,1113+40]..[26,1270+9])
            Pexp_constraint
            expression (src/cmly_write.ml[22,1167+2]..[26,1270+9])
              Pexp_match
              expression (src/cmly_write.ml[22,1167+8]..[22,1167+11])
                Pexp_ident "typ" (src/cmly_write.ml[22,1167+8]..[22,1167+11])
              [
                <case>
                  pattern (src/cmly_write.ml[23,1184+4]..[23,1184+28])
                    Ppat_construct "Stretch.Declared" (src/cmly_write.ml[23,1184+4]..[23,1184+20])
                    Some
                      []
                      pattern (src/cmly_write.ml[23,1184+21]..[23,1184+28])
                        Ppat_var "stretch" (src/cmly_write.ml[23,1184+21]..[23,1184+28])
                  expression (src/cmly_write.ml[24,1216+6]..[24,1216+25])
                    Pexp_apply
                    expression (src/cmly_write.ml[24,1216+6]..[24,1216+17])
                      Pexp_ident "raw_content" (src/cmly_write.ml[24,1216+6]..[24,1216+17])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[24,1216+18]..[24,1216+25])
                          Pexp_ident "stretch" (src/cmly_write.ml[24,1216+18]..[24,1216+25])
                    ]
                <case>
                  pattern (src/cmly_write.ml[25,1242+4]..[25,1242+24])
                    Ppat_construct "Stretch.Inferred" (src/cmly_write.ml[25,1242+4]..[25,1242+20])
                    Some
                      []
                      pattern (src/cmly_write.ml[25,1242+21]..[25,1242+24])
                        Ppat_var "typ" (src/cmly_write.ml[25,1242+21]..[25,1242+24])
                  expression (src/cmly_write.ml[26,1270+6]..[26,1270+9])
                    Pexp_ident "typ" (src/cmly_write.ml[26,1270+6]..[26,1270+9])
              ]
            core_type (src/cmly_write.ml[21,1113+42]..[21,1113+51])
              Ptyp_constr "ocamltype" (src/cmly_write.ml[21,1113+42]..[21,1113+51])
              []
    ]
  structure_item (src/cmly_write.ml[28,1281+0]..[33,1407+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[28,1281+4]..[28,1281+13])
          Ppat_var "ocamltype" (src/cmly_write.ml[28,1281+4]..[28,1281+13])
        expression (src/cmly_write.ml[28,1281+14]..[33,1407+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/cmly_write.ml[28,1281+14]..[28,1281+47])
            Ppat_constraint
            pattern (src/cmly_write.ml[28,1281+15]..[28,1281+19])
              Ppat_var "typo" (src/cmly_write.ml[28,1281+15]..[28,1281+19])
            core_type (src/cmly_write.ml[28,1281+22]..[28,1281+46])
              Ptyp_constr "option" (src/cmly_write.ml[28,1281+40]..[28,1281+46])
              [
                core_type (src/cmly_write.ml[28,1281+22]..[28,1281+39])
                  Ptyp_constr "Stretch.ocamltype" (src/cmly_write.ml[28,1281+22]..[28,1281+39])
                  []
              ]
          expression (src/cmly_write.ml[28,1281+48]..[33,1407+26])
            Pexp_constraint
            expression (src/cmly_write.ml[29,1350+2]..[33,1407+26])
              Pexp_match
              expression (src/cmly_write.ml[29,1350+8]..[29,1350+12])
                Pexp_ident "typo" (src/cmly_write.ml[29,1350+8]..[29,1350+12])
              [
                <case>
                  pattern (src/cmly_write.ml[30,1368+4]..[30,1368+8])
                    Ppat_construct "None" (src/cmly_write.ml[30,1368+4]..[30,1368+8])
                    None
                  expression (src/cmly_write.ml[31,1380+6]..[31,1380+10])
                    Pexp_construct "None" (src/cmly_write.ml[31,1380+6]..[31,1380+10])
                    None
                <case>
                  pattern (src/cmly_write.ml[32,1391+4]..[32,1391+12])
                    Ppat_construct "Some" (src/cmly_write.ml[32,1391+4]..[32,1391+8])
                    Some
                      []
                      pattern (src/cmly_write.ml[32,1391+9]..[32,1391+12])
                        Ppat_var "typ" (src/cmly_write.ml[32,1391+9]..[32,1391+12])
                  expression (src/cmly_write.ml[33,1407+6]..[33,1407+26])
                    Pexp_construct "Some" (src/cmly_write.ml[33,1407+6]..[33,1407+10])
                    Some
                      expression (src/cmly_write.ml[33,1407+11]..[33,1407+26])
                        Pexp_apply
                        expression (src/cmly_write.ml[33,1407+12]..[33,1407+21])
                          Pexp_ident "ocamltype" (src/cmly_write.ml[33,1407+12]..[33,1407+21])
                        [
                          <arg>
                          Nolabel
                            expression (src/cmly_write.ml[33,1407+22]..[33,1407+25])
                              Pexp_ident "typ" (src/cmly_write.ml[33,1407+22]..[33,1407+25])
                        ]
              ]
            core_type (src/cmly_write.ml[28,1281+50]..[28,1281+66])
              Ptyp_constr "option" (src/cmly_write.ml[28,1281+60]..[28,1281+66])
              [
                core_type (src/cmly_write.ml[28,1281+50]..[28,1281+59])
                  Ptyp_constr "ocamltype" (src/cmly_write.ml[28,1281+50]..[28,1281+59])
                  []
              ]
    ]
  structure_item (src/cmly_write.ml[35,1435+0]..[39,1571+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[35,1435+4]..[35,1435+9])
          Ppat_var "range" (src/cmly_write.ml[35,1435+4]..[35,1435+9])
        expression (src/cmly_write.ml[35,1435+10]..[39,1571+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/cmly_write.ml[35,1435+10]..[35,1435+29])
            Ppat_constraint
            pattern (src/cmly_write.ml[35,1435+11]..[35,1435+14])
              Ppat_var "pos" (src/cmly_write.ml[35,1435+11]..[35,1435+14])
            core_type (src/cmly_write.ml[35,1435+17]..[35,1435+28])
              Ptyp_constr "Positions.t" (src/cmly_write.ml[35,1435+17]..[35,1435+28])
              []
          expression (src/cmly_write.ml[35,1435+30]..[39,1571+3])
            Pexp_constraint
            expression (src/cmly_write.ml[36,1475+2]..[39,1571+3])
              Pexp_record
              [
                "r_start" (src/cmly_write.ml[37,1479+4]..[37,1479+11])
                  expression (src/cmly_write.ml[37,1479+14]..[37,1479+45])
                    Pexp_apply
                    expression (src/cmly_write.ml[37,1479+14]..[37,1479+41])
                      Pexp_ident "Positions.start_of_position" (src/cmly_write.ml[37,1479+14]..[37,1479+41])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[37,1479+42]..[37,1479+45])
                          Pexp_ident "pos" (src/cmly_write.ml[37,1479+42]..[37,1479+45])
                    ]
                "r_end" (src/cmly_write.ml[38,1526+4]..[38,1526+9])
                  expression (src/cmly_write.ml[38,1526+14]..[38,1526+43])
                    Pexp_apply
                    expression (src/cmly_write.ml[38,1526+14]..[38,1526+39])
                      Pexp_ident "Positions.end_of_position" (src/cmly_write.ml[38,1526+14]..[38,1526+39])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[38,1526+40]..[38,1526+43])
                          Pexp_ident "pos" (src/cmly_write.ml[38,1526+40]..[38,1526+43])
                    ]
              ]
              None
            core_type (src/cmly_write.ml[35,1435+32]..[35,1435+37])
              Ptyp_constr "range" (src/cmly_write.ml[35,1435+32]..[35,1435+37])
              []
    ]
  structure_item (src/cmly_write.ml[41,1576+0]..[42,1589+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[41,1576+4]..[41,1576+10])
          Ppat_var "ranges" (src/cmly_write.ml[41,1576+4]..[41,1576+10])
        expression (src/cmly_write.ml[42,1589+2]..[42,1589+16])
          Pexp_apply
          expression (src/cmly_write.ml[42,1589+2]..[42,1589+10])
            Pexp_ident "List.map" (src/cmly_write.ml[42,1589+2]..[42,1589+10])
          [
            <arg>
            Nolabel
              expression (src/cmly_write.ml[42,1589+11]..[42,1589+16])
                Pexp_ident "range" (src/cmly_write.ml[42,1589+11]..[42,1589+16])
          ]
    ]
  structure_item (src/cmly_write.ml[44,1607+0]..[49,1804+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[44,1607+4]..[44,1607+13])
          Ppat_var "attribute" (src/cmly_write.ml[44,1607+4]..[44,1607+13])
        expression (src/cmly_write.ml[44,1607+14]..[49,1804+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/cmly_write.ml[44,1607+14]..[44,1607+49])
            Ppat_constraint
            pattern (src/cmly_write.ml[44,1607+15]..[44,1607+29])
              Ppat_tuple
              [
                pattern (src/cmly_write.ml[44,1607+15]..[44,1607+20])
                  Ppat_var "label" (src/cmly_write.ml[44,1607+15]..[44,1607+20])
                pattern (src/cmly_write.ml[44,1607+22]..[44,1607+29])
                  Ppat_var "payload" (src/cmly_write.ml[44,1607+22]..[44,1607+29])
              ]
            core_type (src/cmly_write.ml[44,1607+32]..[44,1607+48])
              Ptyp_constr "Syntax.attribute" (src/cmly_write.ml[44,1607+32]..[44,1607+48])
              []
          expression (src/cmly_write.ml[44,1607+50]..[49,1804+3])
            Pexp_constraint
            expression (src/cmly_write.ml[45,1671+2]..[49,1804+3])
              Pexp_record
              [
                "a_label" (src/cmly_write.ml[46,1675+4]..[46,1675+11])
                  expression (src/cmly_write.ml[46,1675+17]..[46,1675+38])
                    Pexp_apply
                    expression (src/cmly_write.ml[46,1675+17]..[46,1675+32])
                      Pexp_ident "Positions.value" (src/cmly_write.ml[46,1675+17]..[46,1675+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[46,1675+33]..[46,1675+38])
                          Pexp_ident "label" (src/cmly_write.ml[46,1675+33]..[46,1675+38])
                    ]
                "a_payload" (src/cmly_write.ml[47,1715+4]..[47,1715+13])
                  expression (src/cmly_write.ml[47,1715+17]..[47,1715+36])
                    Pexp_apply
                    expression (src/cmly_write.ml[47,1715+17]..[47,1715+28])
                      Pexp_ident "raw_content" (src/cmly_write.ml[47,1715+17]..[47,1715+28])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[47,1715+29]..[47,1715+36])
                          Pexp_ident "payload" (src/cmly_write.ml[47,1715+29]..[47,1715+36])
                    ]
                "a_position" (src/cmly_write.ml[48,1753+4]..[48,1753+14])
                  expression (src/cmly_write.ml[48,1753+17]..[48,1753+49])
                    Pexp_apply
                    expression (src/cmly_write.ml[48,1753+17]..[48,1753+22])
                      Pexp_ident "range" (src/cmly_write.ml[48,1753+17]..[48,1753+22])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[48,1753+23]..[48,1753+49])
                          Pexp_apply
                          expression (src/cmly_write.ml[48,1753+24]..[48,1753+42])
                            Pexp_ident "Positions.position" (src/cmly_write.ml[48,1753+24]..[48,1753+42])
                          [
                            <arg>
                            Nolabel
                              expression (src/cmly_write.ml[48,1753+43]..[48,1753+48])
                                Pexp_ident "label" (src/cmly_write.ml[48,1753+43]..[48,1753+48])
                          ]
                    ]
              ]
              None
            core_type (src/cmly_write.ml[44,1607+52]..[44,1607+61])
              Ptyp_constr "attribute" (src/cmly_write.ml[44,1607+52]..[44,1607+61])
              []
    ]
  structure_item (src/cmly_write.ml[51,1809+0]..[52,1860+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[51,1809+4]..[51,1809+14])
          Ppat_var "attributes" (src/cmly_write.ml[51,1809+4]..[51,1809+14])
        core_type (src/cmly_write.ml[51,1809+17]..[51,1809+48])
          Ptyp_arrow
          Nolabel
          core_type (src/cmly_write.ml[51,1809+17]..[51,1809+34])
            Ptyp_constr "Syntax.attributes" (src/cmly_write.ml[51,1809+17]..[51,1809+34])
            []
          core_type (src/cmly_write.ml[51,1809+38]..[51,1809+48])
            Ptyp_constr "attributes" (src/cmly_write.ml[51,1809+38]..[51,1809+48])
            []
        expression (src/cmly_write.ml[52,1860+2]..[52,1860+20])
          Pexp_apply
          expression (src/cmly_write.ml[52,1860+2]..[52,1860+10])
            Pexp_ident "List.map" (src/cmly_write.ml[52,1860+2]..[52,1860+10])
          [
            <arg>
            Nolabel
              expression (src/cmly_write.ml[52,1860+11]..[52,1860+20])
                Pexp_ident "attribute" (src/cmly_write.ml[52,1860+11]..[52,1860+20])
          ]
    ]
  structure_item (src/cmly_write.ml[54,1882+0]..[72,2365+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[54,1882+4]..[54,1882+12])
          Ppat_var "terminal" (src/cmly_write.ml[54,1882+4]..[54,1882+12])
        expression (src/cmly_write.ml[54,1882+13]..[72,2365+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/cmly_write.ml[54,1882+13]..[54,1882+29])
            Ppat_constraint
            pattern (src/cmly_write.ml[54,1882+14]..[54,1882+15])
              Ppat_var "t" (src/cmly_write.ml[54,1882+14]..[54,1882+15])
            core_type (src/cmly_write.ml[54,1882+18]..[54,1882+28])
              Ptyp_constr "Terminal.t" (src/cmly_write.ml[54,1882+18]..[54,1882+28])
              []
          expression (src/cmly_write.ml[54,1882+30]..[72,2365+3])
            Pexp_constraint
            expression (src/cmly_write.ml[55,1929+2]..[72,2365+3])
              Pexp_record
              [
                "t_kind" (src/cmly_write.ml[56,1933+4]..[56,1933+10])
                  expression (src/cmly_write.ml[56,1933+13]..[68,2225+5])
                    Pexp_ifthenelse
                    expression (src/cmly_write.ml[57,1948+9]..[57,1948+40])
                      Pexp_apply
                      expression (src/cmly_write.ml[57,1948+9]..[57,1948+23])
                        Pexp_ident "Terminal.equal" (src/cmly_write.ml[57,1948+9]..[57,1948+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/cmly_write.ml[57,1948+24]..[57,1948+25])
                            Pexp_ident "t" (src/cmly_write.ml[57,1948+24]..[57,1948+25])
                        <arg>
                        Nolabel
                          expression (src/cmly_write.ml[57,1948+26]..[57,1948+40])
                            Pexp_ident "Terminal.error" (src/cmly_write.ml[57,1948+26]..[57,1948+40])
                      ]
                    expression (src/cmly_write.ml[58,1994+8]..[58,1994+14])
                      Pexp_variant "ERROR"
                      None
                    Some
                      expression (src/cmly_write.ml[59,2009+11]..[67,2208+16])
                        Pexp_ifthenelse
                        expression (src/cmly_write.ml[60,2023+8]..[62,2081+44])
                          Pexp_match
                          expression (src/cmly_write.ml[60,2023+15]..[60,2023+27])
                            Pexp_ident "Terminal.eof" (src/cmly_write.ml[60,2023+15]..[60,2023+27])
                          [
                            <case>
                              pattern (src/cmly_write.ml[61,2056+11]..[61,2056+15])
                                Ppat_construct "None" (src/cmly_write.ml[61,2056+11]..[61,2056+15])
                                None
                              expression (src/cmly_write.ml[61,2056+19]..[61,2056+24])
                                Pexp_construct "false" (src/cmly_write.ml[61,2056+19]..[61,2056+24])
                                None
                            <case>
                              pattern (src/cmly_write.ml[62,2081+11]..[62,2081+19])
                                Ppat_construct "Some" (src/cmly_write.ml[62,2081+11]..[62,2081+15])
                                Some
                                  []
                                  pattern (src/cmly_write.ml[62,2081+16]..[62,2081+19])
                                    Ppat_var "eof" (src/cmly_write.ml[62,2081+16]..[62,2081+19])
                              expression (src/cmly_write.ml[62,2081+23]..[62,2081+43])
                                Pexp_apply
                                expression (src/cmly_write.ml[62,2081+23]..[62,2081+37])
                                  Pexp_ident "Terminal.equal" (src/cmly_write.ml[62,2081+23]..[62,2081+37])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/cmly_write.ml[62,2081+38]..[62,2081+39])
                                      Pexp_ident "t" (src/cmly_write.ml[62,2081+38]..[62,2081+39])
                                  <arg>
                                  Nolabel
                                    expression (src/cmly_write.ml[62,2081+40]..[62,2081+43])
                                      Pexp_ident "eof" (src/cmly_write.ml[62,2081+40]..[62,2081+43])
                                ]
                          ]
                        expression (src/cmly_write.ml[63,2131+8]..[63,2131+12])
                          Pexp_variant "EOF"
                          None
                        Some
                          expression (src/cmly_write.ml[64,2144+11]..[67,2208+16])
                            Pexp_ifthenelse
                            expression (src/cmly_write.ml[64,2144+14]..[64,2144+31])
                              Pexp_apply
                              expression (src/cmly_write.ml[64,2144+14]..[64,2144+29])
                                Pexp_ident "Terminal.pseudo" (src/cmly_write.ml[64,2144+14]..[64,2144+29])
                              [
                                <arg>
                                Nolabel
                                  expression (src/cmly_write.ml[64,2144+30]..[64,2144+31])
                                    Pexp_ident "t" (src/cmly_write.ml[64,2144+30]..[64,2144+31])
                              ]
                            expression (src/cmly_write.ml[65,2181+8]..[65,2181+15])
                              Pexp_variant "PSEUDO"
                              None
                            Some
                              expression (src/cmly_write.ml[67,2208+8]..[67,2208+16])
                                Pexp_variant "REGULAR"
                                None
                "t_name" (src/cmly_write.ml[69,2232+4]..[69,2232+10])
                  expression (src/cmly_write.ml[69,2232+13]..[69,2232+29])
                    Pexp_apply
                    expression (src/cmly_write.ml[69,2232+13]..[69,2232+27])
                      Pexp_ident "Terminal.print" (src/cmly_write.ml[69,2232+13]..[69,2232+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[69,2232+28]..[69,2232+29])
                          Pexp_ident "t" (src/cmly_write.ml[69,2232+28]..[69,2232+29])
                    ]
                "t_type" (src/cmly_write.ml[70,2263+4]..[70,2263+10])
                  expression (src/cmly_write.ml[70,2263+13]..[70,2263+45])
                    Pexp_apply
                    expression (src/cmly_write.ml[70,2263+13]..[70,2263+22])
                      Pexp_ident "ocamltype" (src/cmly_write.ml[70,2263+13]..[70,2263+22])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[70,2263+23]..[70,2263+45])
                          Pexp_apply
                          expression (src/cmly_write.ml[70,2263+24]..[70,2263+42])
                            Pexp_ident "Terminal.ocamltype" (src/cmly_write.ml[70,2263+24]..[70,2263+42])
                          [
                            <arg>
                            Nolabel
                              expression (src/cmly_write.ml[70,2263+43]..[70,2263+44])
                                Pexp_ident "t" (src/cmly_write.ml[70,2263+43]..[70,2263+44])
                          ]
                    ]
                "t_attributes" (src/cmly_write.ml[71,2310+4]..[71,2310+16])
                  expression (src/cmly_write.ml[71,2310+19]..[71,2310+53])
                    Pexp_apply
                    expression (src/cmly_write.ml[71,2310+19]..[71,2310+29])
                      Pexp_ident "attributes" (src/cmly_write.ml[71,2310+19]..[71,2310+29])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[71,2310+30]..[71,2310+53])
                          Pexp_apply
                          expression (src/cmly_write.ml[71,2310+31]..[71,2310+50])
                            Pexp_ident "Terminal.attributes" (src/cmly_write.ml[71,2310+31]..[71,2310+50])
                          [
                            <arg>
                            Nolabel
                              expression (src/cmly_write.ml[71,2310+51]..[71,2310+52])
                                Pexp_ident "t" (src/cmly_write.ml[71,2310+51]..[71,2310+52])
                          ]
                    ]
              ]
              None
            core_type (src/cmly_write.ml[54,1882+32]..[54,1882+44])
              Ptyp_constr "terminal_def" (src/cmly_write.ml[54,1882+32]..[54,1882+44])
              []
    ]
  structure_item (src/cmly_write.ml[74,2370+0]..[85,2984+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[74,2370+4]..[74,2370+15])
          Ppat_var "nonterminal" (src/cmly_write.ml[74,2370+4]..[74,2370+15])
        expression (src/cmly_write.ml[74,2370+16]..[85,2984+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/cmly_write.ml[74,2370+16]..[74,2370+36])
            Ppat_constraint
            pattern (src/cmly_write.ml[74,2370+17]..[74,2370+19])
              Ppat_var "nt" (src/cmly_write.ml[74,2370+17]..[74,2370+19])
            core_type (src/cmly_write.ml[74,2370+22]..[74,2370+35])
              Ptyp_constr "Nonterminal.t" (src/cmly_write.ml[74,2370+22]..[74,2370+35])
              []
          expression (src/cmly_write.ml[74,2370+37]..[85,2984+3])
            Pexp_constraint
            expression (src/cmly_write.ml[75,2427+2]..[85,2984+3])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/cmly_write.ml[75,2427+6]..[75,2427+14])
                    Ppat_var "is_start" (src/cmly_write.ml[75,2427+6]..[75,2427+14])
                  expression (src/cmly_write.ml[75,2427+17]..[75,2427+49])
                    Pexp_apply
                    expression (src/cmly_write.ml[75,2427+17]..[75,2427+46])
                      Pexp_ident "Nonterminal.is_internal_start" (src/cmly_write.ml[75,2427+17]..[75,2427+46])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[75,2427+47]..[75,2427+49])
                          Pexp_ident "nt" (src/cmly_write.ml[75,2427+47]..[75,2427+49])
                    ]
              ]
              expression (src/cmly_write.ml[76,2480+2]..[85,2984+3])
                Pexp_record
                [
                  "n_kind" (src/cmly_write.ml[77,2484+4]..[77,2484+10])
                    expression (src/cmly_write.ml[77,2484+13]..[77,2484+50])
                      Pexp_ifthenelse
                      expression (src/cmly_write.ml[77,2484+16]..[77,2484+24])
                        Pexp_ident "is_start" (src/cmly_write.ml[77,2484+16]..[77,2484+24])
                      expression (src/cmly_write.ml[77,2484+30]..[77,2484+36])
                        Pexp_variant "START"
                        None
                      Some
                        expression (src/cmly_write.ml[77,2484+42]..[77,2484+50])
                          Pexp_variant "REGULAR"
                          None
                  "n_name" (src/cmly_write.ml[78,2536+4]..[78,2536+10])
                    expression (src/cmly_write.ml[78,2536+13]..[78,2536+39])
                      Pexp_apply
                      expression (src/cmly_write.ml[78,2536+13]..[78,2536+30])
                        Pexp_ident "Nonterminal.print" (src/cmly_write.ml[78,2536+13]..[78,2536+30])
                      [
                        <arg>
                        Nolabel
                          expression (src/cmly_write.ml[78,2536+31]..[78,2536+36])
                            Pexp_construct "false" (src/cmly_write.ml[78,2536+31]..[78,2536+36])
                            None
                        <arg>
                        Nolabel
                          expression (src/cmly_write.ml[78,2536+37]..[78,2536+39])
                            Pexp_ident "nt" (src/cmly_write.ml[78,2536+37]..[78,2536+39])
                      ]
                  "n_mangled_name" (src/cmly_write.ml[79,2577+4]..[79,2577+18])
                    expression (src/cmly_write.ml[79,2577+21]..[79,2577+46])
                      Pexp_apply
                      expression (src/cmly_write.ml[79,2577+21]..[79,2577+38])
                        Pexp_ident "Nonterminal.print" (src/cmly_write.ml[79,2577+21]..[79,2577+38])
                      [
                        <arg>
                        Nolabel
                          expression (src/cmly_write.ml[79,2577+39]..[79,2577+43])
                            Pexp_construct "true" (src/cmly_write.ml[79,2577+39]..[79,2577+43])
                            None
                        <arg>
                        Nolabel
                          expression (src/cmly_write.ml[79,2577+44]..[79,2577+46])
                            Pexp_ident "nt" (src/cmly_write.ml[79,2577+44]..[79,2577+46])
                      ]
                  "n_type" (src/cmly_write.ml[80,2625+4]..[80,2625+10])
                    expression (src/cmly_write.ml[80,2625+13]..[80,2625+76])
                      Pexp_ifthenelse
                      expression (src/cmly_write.ml[80,2625+16]..[80,2625+24])
                        Pexp_ident "is_start" (src/cmly_write.ml[80,2625+16]..[80,2625+24])
                      expression (src/cmly_write.ml[80,2625+30]..[80,2625+34])
                        Pexp_construct "None" (src/cmly_write.ml[80,2625+30]..[80,2625+34])
                        None
                      Some
                        expression (src/cmly_write.ml[80,2625+40]..[80,2625+76])
                          Pexp_apply
                          expression (src/cmly_write.ml[80,2625+40]..[80,2625+49])
                            Pexp_ident "ocamltype" (src/cmly_write.ml[80,2625+40]..[80,2625+49])
                          [
                            <arg>
                            Nolabel
                              expression (src/cmly_write.ml[80,2625+50]..[80,2625+76])
                                Pexp_apply
                                expression (src/cmly_write.ml[80,2625+51]..[80,2625+72])
                                  Pexp_ident "Nonterminal.ocamltype" (src/cmly_write.ml[80,2625+51]..[80,2625+72])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/cmly_write.ml[80,2625+73]..[80,2625+75])
                                      Pexp_ident "nt" (src/cmly_write.ml[80,2625+73]..[80,2625+75])
                                ]
                          ]
                  "n_positions" (src/cmly_write.ml[81,2703+4]..[81,2703+15])
                    expression (src/cmly_write.ml[81,2703+18]..[81,2703+76])
                      Pexp_ifthenelse
                      expression (src/cmly_write.ml[81,2703+21]..[81,2703+29])
                        Pexp_ident "is_start" (src/cmly_write.ml[81,2703+21]..[81,2703+29])
                      expression (src/cmly_write.ml[81,2703+35]..[81,2703+37])
                        Pexp_construct "[]" (src/cmly_write.ml[81,2703+35]..[81,2703+37])
                        None
                      Some
                        expression (src/cmly_write.ml[81,2703+43]..[81,2703+76])
                          Pexp_apply
                          expression (src/cmly_write.ml[81,2703+43]..[81,2703+49])
                            Pexp_ident "ranges" (src/cmly_write.ml[81,2703+43]..[81,2703+49])
                          [
                            <arg>
                            Nolabel
                              expression (src/cmly_write.ml[81,2703+50]..[81,2703+76])
                                Pexp_apply
                                expression (src/cmly_write.ml[81,2703+51]..[81,2703+72])
                                  Pexp_ident "Nonterminal.positions" (src/cmly_write.ml[81,2703+51]..[81,2703+72])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/cmly_write.ml[81,2703+73]..[81,2703+75])
                                      Pexp_ident "nt" (src/cmly_write.ml[81,2703+73]..[81,2703+75])
                                ]
                          ]
                  "n_nullable" (src/cmly_write.ml[82,2781+4]..[82,2781+14])
                    expression (src/cmly_write.ml[82,2781+17]..[82,2781+37])
                      Pexp_apply
                      expression (src/cmly_write.ml[82,2781+17]..[82,2781+34])
                        Pexp_ident "Analysis.nullable" (src/cmly_write.ml[82,2781+17]..[82,2781+34])
                      [
                        <arg>
                        Nolabel
                          expression (src/cmly_write.ml[82,2781+35]..[82,2781+37])
                            Pexp_ident "nt" (src/cmly_write.ml[82,2781+35]..[82,2781+37])
                      ]
                  "n_first" (src/cmly_write.ml[83,2820+4]..[83,2820+11])
                    expression (src/cmly_write.ml[83,2820+14]..[83,2820+78])
                      Pexp_apply
                      expression (src/cmly_write.ml[83,2820+14]..[83,2820+22])
                        Pexp_ident "List.map" (src/cmly_write.ml[83,2820+14]..[83,2820+22])
                      [
                        <arg>
                        Nolabel
                          expression (src/cmly_write.ml[83,2820+23]..[83,2820+35])
                            Pexp_ident "Terminal.t2i" (src/cmly_write.ml[83,2820+23]..[83,2820+35])
                        <arg>
                        Nolabel
                          expression (src/cmly_write.ml[83,2820+36]..[83,2820+78])
                            Pexp_apply
                            expression (src/cmly_write.ml[83,2820+37]..[83,2820+57])
                              Pexp_ident "TerminalSet.elements" (src/cmly_write.ml[83,2820+37]..[83,2820+57])
                            [
                              <arg>
                              Nolabel
                                expression (src/cmly_write.ml[83,2820+58]..[83,2820+77])
                                  Pexp_apply
                                  expression (src/cmly_write.ml[83,2820+59]..[83,2820+73])
                                    Pexp_ident "Analysis.first" (src/cmly_write.ml[83,2820+59]..[83,2820+73])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/cmly_write.ml[83,2820+74]..[83,2820+76])
                                        Pexp_ident "nt" (src/cmly_write.ml[83,2820+74]..[83,2820+76])
                                  ]
                            ]
                      ]
                  "n_attributes" (src/cmly_write.ml[84,2900+4]..[84,2900+16])
                    expression (src/cmly_write.ml[84,2900+19]..[84,2900+82])
                      Pexp_ifthenelse
                      expression (src/cmly_write.ml[84,2900+22]..[84,2900+30])
                        Pexp_ident "is_start" (src/cmly_write.ml[84,2900+22]..[84,2900+30])
                      expression (src/cmly_write.ml[84,2900+36]..[84,2900+38])
                        Pexp_construct "[]" (src/cmly_write.ml[84,2900+36]..[84,2900+38])
                        None
                      Some
                        expression (src/cmly_write.ml[84,2900+44]..[84,2900+82])
                          Pexp_apply
                          expression (src/cmly_write.ml[84,2900+44]..[84,2900+54])
                            Pexp_ident "attributes" (src/cmly_write.ml[84,2900+44]..[84,2900+54])
                          [
                            <arg>
                            Nolabel
                              expression (src/cmly_write.ml[84,2900+55]..[84,2900+82])
                                Pexp_apply
                                expression (src/cmly_write.ml[84,2900+56]..[84,2900+78])
                                  Pexp_ident "Nonterminal.attributes" (src/cmly_write.ml[84,2900+56]..[84,2900+78])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/cmly_write.ml[84,2900+79]..[84,2900+81])
                                      Pexp_ident "nt" (src/cmly_write.ml[84,2900+79]..[84,2900+81])
                                ]
                          ]
                ]
                None
            core_type (src/cmly_write.ml[74,2370+39]..[74,2370+54])
              Ptyp_constr "nonterminal_def" (src/cmly_write.ml[74,2370+39]..[74,2370+54])
              []
    ]
  structure_item (src/cmly_write.ml[87,2989+0]..[90,3085+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[87,2989+4]..[87,2989+10])
          Ppat_var "symbol" (src/cmly_write.ml[87,2989+4]..[87,2989+10])
        expression (src/cmly_write.ml[87,2989+11]..[90,3085+36]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/cmly_write.ml[87,2989+11]..[87,2989+27])
            Ppat_constraint
            pattern (src/cmly_write.ml[87,2989+12]..[87,2989+15])
              Ppat_var "sym" (src/cmly_write.ml[87,2989+12]..[87,2989+15])
            core_type (src/cmly_write.ml[87,2989+18]..[87,2989+26])
              Ptyp_constr "Symbol.t" (src/cmly_write.ml[87,2989+18]..[87,2989+26])
              []
          expression (src/cmly_write.ml[87,2989+28]..[90,3085+36])
            Pexp_constraint
            expression (src/cmly_write.ml[88,3028+2]..[90,3085+36])
              Pexp_match
              expression (src/cmly_write.ml[88,3028+8]..[88,3028+11])
                Pexp_ident "sym" (src/cmly_write.ml[88,3028+8]..[88,3028+11])
              [
                <case>
                  pattern (src/cmly_write.ml[89,3045+4]..[89,3045+14])
                    Ppat_construct "Symbol.N" (src/cmly_write.ml[89,3045+4]..[89,3045+12])
                    Some
                      []
                      pattern (src/cmly_write.ml[89,3045+13]..[89,3045+14])
                        Ppat_var "n" (src/cmly_write.ml[89,3045+13]..[89,3045+14])
                  expression (src/cmly_write.ml[89,3045+18]..[89,3045+39])
                    Pexp_construct "N" (src/cmly_write.ml[89,3045+18]..[89,3045+19])
                    Some
                      expression (src/cmly_write.ml[89,3045+20]..[89,3045+39])
                        Pexp_apply
                        expression (src/cmly_write.ml[89,3045+21]..[89,3045+36])
                          Pexp_ident "Nonterminal.n2i" (src/cmly_write.ml[89,3045+21]..[89,3045+36])
                        [
                          <arg>
                          Nolabel
                            expression (src/cmly_write.ml[89,3045+37]..[89,3045+38])
                              Pexp_ident "n" (src/cmly_write.ml[89,3045+37]..[89,3045+38])
                        ]
                <case>
                  pattern (src/cmly_write.ml[90,3085+4]..[90,3085+14])
                    Ppat_construct "Symbol.T" (src/cmly_write.ml[90,3085+4]..[90,3085+12])
                    Some
                      []
                      pattern (src/cmly_write.ml[90,3085+13]..[90,3085+14])
                        Ppat_var "t" (src/cmly_write.ml[90,3085+13]..[90,3085+14])
                  expression (src/cmly_write.ml[90,3085+18]..[90,3085+36])
                    Pexp_construct "T" (src/cmly_write.ml[90,3085+18]..[90,3085+19])
                    Some
                      expression (src/cmly_write.ml[90,3085+20]..[90,3085+36])
                        Pexp_apply
                        expression (src/cmly_write.ml[90,3085+21]..[90,3085+33])
                          Pexp_ident "Terminal.t2i" (src/cmly_write.ml[90,3085+21]..[90,3085+33])
                        [
                          <arg>
                          Nolabel
                            expression (src/cmly_write.ml[90,3085+34]..[90,3085+35])
                              Pexp_ident "t" (src/cmly_write.ml[90,3085+34]..[90,3085+35])
                        ]
              ]
            core_type (src/cmly_write.ml[87,2989+30]..[87,2989+36])
              Ptyp_constr "symbol" (src/cmly_write.ml[87,2989+30]..[87,2989+36])
              []
    ]
  structure_item (src/cmly_write.ml[92,3123+0]..[96,3289+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[92,3123+4]..[92,3123+10])
          Ppat_var "action" (src/cmly_write.ml[92,3123+4]..[92,3123+10])
        expression (src/cmly_write.ml[92,3123+11]..[96,3289+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/cmly_write.ml[92,3123+11]..[92,3123+25])
            Ppat_constraint
            pattern (src/cmly_write.ml[92,3123+12]..[92,3123+13])
              Ppat_var "a" (src/cmly_write.ml[92,3123+12]..[92,3123+13])
            core_type (src/cmly_write.ml[92,3123+16]..[92,3123+24])
              Ptyp_constr "Action.t" (src/cmly_write.ml[92,3123+16]..[92,3123+24])
              []
          expression (src/cmly_write.ml[92,3123+26]..[96,3289+3])
            Pexp_constraint
            expression (src/cmly_write.ml[93,3160+2]..[96,3289+3])
              Pexp_record
              [
                "a_expr" (src/cmly_write.ml[94,3164+4]..[94,3164+10])
                  expression (src/cmly_write.ml[94,3164+13]..[94,3164+57])
                    Pexp_apply
                    expression (src/cmly_write.ml[94,3164+13]..[94,3164+35])
                      Pexp_ident "Printer.string_of_expr" (src/cmly_write.ml[94,3164+13]..[94,3164+35])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[94,3164+36]..[94,3164+57])
                          Pexp_apply
                          expression (src/cmly_write.ml[94,3164+37]..[94,3164+54])
                            Pexp_ident "Action.to_il_expr" (src/cmly_write.ml[94,3164+37]..[94,3164+54])
                          [
                            <arg>
                            Nolabel
                              expression (src/cmly_write.ml[94,3164+55]..[94,3164+56])
                                Pexp_ident "a" (src/cmly_write.ml[94,3164+55]..[94,3164+56])
                          ]
                    ]
                "a_keywords" (src/cmly_write.ml[95,3223+4]..[95,3223+14])
                  expression (src/cmly_write.ml[95,3223+17]..[95,3223+64])
                    Pexp_apply
                    expression (src/cmly_write.ml[95,3223+17]..[95,3223+44])
                      Pexp_ident "Keyword.KeywordSet.elements" (src/cmly_write.ml[95,3223+17]..[95,3223+44])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[95,3223+45]..[95,3223+64])
                          Pexp_apply
                          expression (src/cmly_write.ml[95,3223+46]..[95,3223+61])
                            Pexp_ident "Action.keywords" (src/cmly_write.ml[95,3223+46]..[95,3223+61])
                          [
                            <arg>
                            Nolabel
                              expression (src/cmly_write.ml[95,3223+62]..[95,3223+63])
                                Pexp_ident "a" (src/cmly_write.ml[95,3223+62]..[95,3223+63])
                          ]
                    ]
              ]
              None
            core_type (src/cmly_write.ml[92,3123+28]..[92,3123+34])
              Ptyp_constr "action" (src/cmly_write.ml[92,3123+28]..[92,3123+34])
              []
    ]
  structure_item (src/cmly_write.ml[98,3294+0]..[107,3645+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[98,3294+4]..[98,3294+7])
          Ppat_var "rhs" (src/cmly_write.ml[98,3294+4]..[98,3294+7])
        expression (src/cmly_write.ml[98,3294+8]..[107,3645+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/cmly_write.ml[98,3294+8]..[98,3294+33])
            Ppat_constraint
            pattern (src/cmly_write.ml[98,3294+9]..[98,3294+13])
              Ppat_var "prod" (src/cmly_write.ml[98,3294+9]..[98,3294+13])
            core_type (src/cmly_write.ml[98,3294+16]..[98,3294+32])
              Ptyp_constr "Production.index" (src/cmly_write.ml[98,3294+16]..[98,3294+32])
              []
          expression (src/cmly_write.ml[98,3294+34]..[107,3645+29])
            Pexp_constraint
            expression (src/cmly_write.ml[99,3351+2]..[107,3645+29])
              Pexp_match
              expression (src/cmly_write.ml[99,3351+8]..[99,3351+32])
                Pexp_apply
                expression (src/cmly_write.ml[99,3351+8]..[99,3351+27])
                  Pexp_ident "Production.classify" (src/cmly_write.ml[99,3351+8]..[99,3351+27])
                [
                  <arg>
                  Nolabel
                    expression (src/cmly_write.ml[99,3351+28]..[99,3351+32])
                      Pexp_ident "prod" (src/cmly_write.ml[99,3351+28]..[99,3351+32])
                ]
              [
                <case>
                  pattern (src/cmly_write.ml[100,3389+4]..[100,3389+10])
                    Ppat_construct "Some" (src/cmly_write.ml[100,3389+4]..[100,3389+8])
                    Some
                      []
                      pattern (src/cmly_write.ml[100,3389+9]..[100,3389+10])
                        Ppat_var "n" (src/cmly_write.ml[100,3389+9]..[100,3389+10])
                  expression (src/cmly_write.ml[101,3403+6]..[101,3403+43])
                    Pexp_array
                    [
                      expression (src/cmly_write.ml[101,3403+9]..[101,3403+40])
                        Pexp_tuple
                        [
                          expression (src/cmly_write.ml[101,3403+10]..[101,3403+31])
                            Pexp_construct "N" (src/cmly_write.ml[101,3403+10]..[101,3403+11])
                            Some
                              expression (src/cmly_write.ml[101,3403+12]..[101,3403+31])
                                Pexp_apply
                                expression (src/cmly_write.ml[101,3403+13]..[101,3403+28])
                                  Pexp_ident "Nonterminal.n2i" (src/cmly_write.ml[101,3403+13]..[101,3403+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/cmly_write.ml[101,3403+29]..[101,3403+30])
                                      Pexp_ident "n" (src/cmly_write.ml[101,3403+29]..[101,3403+30])
                                ]
                          expression (src/cmly_write.ml[101,3403+33]..[101,3403+35])
                            Pexp_constant PConst_string("",(src/cmly_write.ml[101,3403+34]..[101,3403+34]),None)
                          expression (src/cmly_write.ml[101,3403+37]..[101,3403+39])
                            Pexp_construct "[]" (src/cmly_write.ml[101,3403+37]..[101,3403+39])
                            None
                        ]
                    ]
                <case>
                  pattern (src/cmly_write.ml[102,3447+4]..[102,3447+8])
                    Ppat_construct "None" (src/cmly_write.ml[102,3447+4]..[102,3447+8])
                    None
                  expression (src/cmly_write.ml[103,3459+6]..[107,3645+29])
                    Pexp_apply
                    expression (src/cmly_write.ml[103,3459+6]..[103,3459+16])
                      Pexp_ident "Array.mapi" (src/cmly_write.ml[103,3459+6]..[103,3459+16])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[103,3459+17]..[107,3645+7])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/cmly_write.ml[103,3459+22]..[103,3459+23])
                            Ppat_var "i" (src/cmly_write.ml[103,3459+22]..[103,3459+23])
                          expression (src/cmly_write.ml[103,3459+24]..[106,3615+29]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/cmly_write.ml[103,3459+24]..[103,3459+27])
                              Ppat_var "sym" (src/cmly_write.ml[103,3459+24]..[103,3459+27])
                            expression (src/cmly_write.ml[104,3490+8]..[106,3615+29])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/cmly_write.ml[104,3490+12]..[104,3490+14])
                                    Ppat_var "id" (src/cmly_write.ml[104,3490+12]..[104,3490+14])
                                  expression (src/cmly_write.ml[104,3490+17]..[104,3490+50])
                                    Pexp_apply
                                    expression (src/cmly_write.ml[104,3490+17]..[104,3490+50]) ghost
                                      Pexp_ident "Array.get" (src/cmly_write.ml[104,3490+17]..[104,3490+50]) ghost
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/cmly_write.ml[104,3490+17]..[104,3490+46])
                                          Pexp_apply
                                          expression (src/cmly_write.ml[104,3490+18]..[104,3490+40])
                                            Pexp_ident "Production.identifiers" (src/cmly_write.ml[104,3490+18]..[104,3490+40])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/cmly_write.ml[104,3490+41]..[104,3490+45])
                                                Pexp_ident "prod" (src/cmly_write.ml[104,3490+41]..[104,3490+45])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (src/cmly_write.ml[104,3490+48]..[104,3490+49])
                                          Pexp_ident "i" (src/cmly_write.ml[104,3490+48]..[104,3490+49])
                                    ]
                              ]
                              expression (src/cmly_write.ml[105,3544+8]..[106,3615+29])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/cmly_write.ml[105,3544+12]..[105,3544+17])
                                      Ppat_var "attrs" (src/cmly_write.ml[105,3544+12]..[105,3544+17])
                                    expression (src/cmly_write.ml[105,3544+20]..[105,3544+67])
                                      Pexp_apply
                                      expression (src/cmly_write.ml[105,3544+20]..[105,3544+30])
                                        Pexp_ident "attributes" (src/cmly_write.ml[105,3544+20]..[105,3544+30])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/cmly_write.ml[105,3544+31]..[105,3544+67])
                                            Pexp_apply
                                            expression (src/cmly_write.ml[105,3544+31]..[105,3544+67]) ghost
                                              Pexp_ident "Array.get" (src/cmly_write.ml[105,3544+31]..[105,3544+67]) ghost
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/cmly_write.ml[105,3544+31]..[105,3544+63])
                                                  Pexp_apply
                                                  expression (src/cmly_write.ml[105,3544+32]..[105,3544+57])
                                                    Pexp_ident "Production.rhs_attributes" (src/cmly_write.ml[105,3544+32]..[105,3544+57])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/cmly_write.ml[105,3544+58]..[105,3544+62])
                                                        Pexp_ident "prod" (src/cmly_write.ml[105,3544+58]..[105,3544+62])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (src/cmly_write.ml[105,3544+65]..[105,3544+66])
                                                  Pexp_ident "i" (src/cmly_write.ml[105,3544+65]..[105,3544+66])
                                            ]
                                      ]
                                ]
                                expression (src/cmly_write.ml[106,3615+8]..[106,3615+29])
                                  Pexp_tuple
                                  [
                                    expression (src/cmly_write.ml[106,3615+8]..[106,3615+18])
                                      Pexp_apply
                                      expression (src/cmly_write.ml[106,3615+8]..[106,3615+14])
                                        Pexp_ident "symbol" (src/cmly_write.ml[106,3615+8]..[106,3615+14])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/cmly_write.ml[106,3615+15]..[106,3615+18])
                                            Pexp_ident "sym" (src/cmly_write.ml[106,3615+15]..[106,3615+18])
                                      ]
                                    expression (src/cmly_write.ml[106,3615+20]..[106,3615+22])
                                      Pexp_ident "id" (src/cmly_write.ml[106,3615+20]..[106,3615+22])
                                    expression (src/cmly_write.ml[106,3615+24]..[106,3615+29])
                                      Pexp_ident "attrs" (src/cmly_write.ml[106,3615+24]..[106,3615+29])
                                  ]
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[107,3645+8]..[107,3645+29])
                          Pexp_apply
                          expression (src/cmly_write.ml[107,3645+9]..[107,3645+23])
                            Pexp_ident "Production.rhs" (src/cmly_write.ml[107,3645+9]..[107,3645+23])
                          [
                            <arg>
                            Nolabel
                              expression (src/cmly_write.ml[107,3645+24]..[107,3645+28])
                                Pexp_ident "prod" (src/cmly_write.ml[107,3645+24]..[107,3645+28])
                          ]
                    ]
              ]
            core_type (src/cmly_write.ml[98,3294+36]..[98,3294+54])
              Ptyp_constr "array" (src/cmly_write.ml[98,3294+49]..[98,3294+54])
              [
                core_type (src/cmly_write.ml[98,3294+36]..[98,3294+48])
                  Ptyp_constr "producer_def" (src/cmly_write.ml[98,3294+36]..[98,3294+48])
                  []
              ]
    ]
  structure_item (src/cmly_write.ml[109,3676+0]..[118,4111+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[109,3676+4]..[109,3676+14])
          Ppat_var "production" (src/cmly_write.ml[109,3676+4]..[109,3676+14])
        expression (src/cmly_write.ml[109,3676+15]..[118,4111+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/cmly_write.ml[109,3676+15]..[109,3676+40])
            Ppat_constraint
            pattern (src/cmly_write.ml[109,3676+16]..[109,3676+20])
              Ppat_var "prod" (src/cmly_write.ml[109,3676+16]..[109,3676+20])
            core_type (src/cmly_write.ml[109,3676+23]..[109,3676+39])
              Ptyp_constr "Production.index" (src/cmly_write.ml[109,3676+23]..[109,3676+39])
              []
          expression (src/cmly_write.ml[109,3676+41]..[118,4111+3])
            Pexp_constraint
            expression (src/cmly_write.ml[110,3736+2]..[118,4111+3])
              Pexp_record
              [
                "p_kind" (src/cmly_write.ml[111,3740+4]..[111,3740+10])
                  expression (src/cmly_write.ml[111,3740+13]..[111,3740+66])
                    Pexp_ifthenelse
                    expression (src/cmly_write.ml[111,3740+16]..[111,3740+40])
                      Pexp_apply
                      expression (src/cmly_write.ml[111,3740+16]..[111,3740+35])
                        Pexp_ident "Production.is_start" (src/cmly_write.ml[111,3740+16]..[111,3740+35])
                      [
                        <arg>
                        Nolabel
                          expression (src/cmly_write.ml[111,3740+36]..[111,3740+40])
                            Pexp_ident "prod" (src/cmly_write.ml[111,3740+36]..[111,3740+40])
                      ]
                    expression (src/cmly_write.ml[111,3740+46]..[111,3740+52])
                      Pexp_variant "START"
                      None
                    Some
                      expression (src/cmly_write.ml[111,3740+58]..[111,3740+66])
                        Pexp_variant "REGULAR"
                        None
                "p_lhs" (src/cmly_write.ml[112,3808+4]..[112,3808+9])
                  expression (src/cmly_write.ml[112,3808+12]..[112,3808+48])
                    Pexp_apply
                    expression (src/cmly_write.ml[112,3808+12]..[112,3808+27])
                      Pexp_ident "Nonterminal.n2i" (src/cmly_write.ml[112,3808+12]..[112,3808+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[112,3808+28]..[112,3808+48])
                          Pexp_apply
                          expression (src/cmly_write.ml[112,3808+29]..[112,3808+42])
                            Pexp_ident "Production.nt" (src/cmly_write.ml[112,3808+29]..[112,3808+42])
                          [
                            <arg>
                            Nolabel
                              expression (src/cmly_write.ml[112,3808+43]..[112,3808+47])
                                Pexp_ident "prod" (src/cmly_write.ml[112,3808+43]..[112,3808+47])
                          ]
                    ]
                "p_rhs" (src/cmly_write.ml[113,3858+4]..[113,3858+9])
                  expression (src/cmly_write.ml[113,3858+12]..[113,3858+20])
                    Pexp_apply
                    expression (src/cmly_write.ml[113,3858+12]..[113,3858+15])
                      Pexp_ident "rhs" (src/cmly_write.ml[113,3858+12]..[113,3858+15])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[113,3858+16]..[113,3858+20])
                          Pexp_ident "prod" (src/cmly_write.ml[113,3858+16]..[113,3858+20])
                    ]
                "p_positions" (src/cmly_write.ml[114,3880+4]..[114,3880+15])
                  expression (src/cmly_write.ml[114,3880+18]..[114,3880+52])
                    Pexp_apply
                    expression (src/cmly_write.ml[114,3880+18]..[114,3880+24])
                      Pexp_ident "ranges" (src/cmly_write.ml[114,3880+18]..[114,3880+24])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[114,3880+25]..[114,3880+52])
                          Pexp_apply
                          expression (src/cmly_write.ml[114,3880+26]..[114,3880+46])
                            Pexp_ident "Production.positions" (src/cmly_write.ml[114,3880+26]..[114,3880+46])
                          [
                            <arg>
                            Nolabel
                              expression (src/cmly_write.ml[114,3880+47]..[114,3880+51])
                                Pexp_ident "prod" (src/cmly_write.ml[114,3880+47]..[114,3880+51])
                          ]
                    ]
                "p_action" (src/cmly_write.ml[115,3934+4]..[115,3934+12])
                  expression (src/cmly_write.ml[115,3934+15]..[116,3987+58])
                    Pexp_ifthenelse
                    expression (src/cmly_write.ml[115,3934+18]..[115,3934+42])
                      Pexp_apply
                      expression (src/cmly_write.ml[115,3934+18]..[115,3934+37])
                        Pexp_ident "Production.is_start" (src/cmly_write.ml[115,3934+18]..[115,3934+37])
                      [
                        <arg>
                        Nolabel
                          expression (src/cmly_write.ml[115,3934+38]..[115,3934+42])
                            Pexp_ident "prod" (src/cmly_write.ml[115,3934+38]..[115,3934+42])
                      ]
                    expression (src/cmly_write.ml[115,3934+48]..[115,3934+52])
                      Pexp_construct "None" (src/cmly_write.ml[115,3934+48]..[115,3934+52])
                      None
                    Some
                      expression (src/cmly_write.ml[116,3987+20]..[116,3987+58])
                        Pexp_construct "Some" (src/cmly_write.ml[116,3987+20]..[116,3987+24])
                        Some
                          expression (src/cmly_write.ml[116,3987+25]..[116,3987+58])
                            Pexp_apply
                            expression (src/cmly_write.ml[116,3987+26]..[116,3987+32])
                              Pexp_ident "action" (src/cmly_write.ml[116,3987+26]..[116,3987+32])
                            [
                              <arg>
                              Nolabel
                                expression (src/cmly_write.ml[116,3987+33]..[116,3987+57])
                                  Pexp_apply
                                  expression (src/cmly_write.ml[116,3987+34]..[116,3987+51])
                                    Pexp_ident "Production.action" (src/cmly_write.ml[116,3987+34]..[116,3987+51])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/cmly_write.ml[116,3987+52]..[116,3987+56])
                                        Pexp_ident "prod" (src/cmly_write.ml[116,3987+52]..[116,3987+56])
                                  ]
                            ]
                "p_attributes" (src/cmly_write.ml[117,4047+4]..[117,4047+16])
                  expression (src/cmly_write.ml[117,4047+19]..[117,4047+62])
                    Pexp_apply
                    expression (src/cmly_write.ml[117,4047+19]..[117,4047+29])
                      Pexp_ident "attributes" (src/cmly_write.ml[117,4047+19]..[117,4047+29])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[117,4047+30]..[117,4047+62])
                          Pexp_apply
                          expression (src/cmly_write.ml[117,4047+31]..[117,4047+56])
                            Pexp_ident "Production.lhs_attributes" (src/cmly_write.ml[117,4047+31]..[117,4047+56])
                          [
                            <arg>
                            Nolabel
                              expression (src/cmly_write.ml[117,4047+57]..[117,4047+61])
                                Pexp_ident "prod" (src/cmly_write.ml[117,4047+57]..[117,4047+61])
                          ]
                    ]
              ]
              None
            core_type (src/cmly_write.ml[109,3676+43]..[109,3676+57])
              Ptyp_constr "production_def" (src/cmly_write.ml[109,3676+43]..[109,3676+57])
              []
    ]
  structure_item (src/cmly_write.ml[120,4116+0]..[122,4189+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[120,4116+4]..[120,4116+8])
          Ppat_var "item" (src/cmly_write.ml[120,4116+4]..[120,4116+8])
        expression (src/cmly_write.ml[120,4116+9]..[122,4189+23]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/cmly_write.ml[120,4116+9]..[120,4116+21])
            Ppat_constraint
            pattern (src/cmly_write.ml[120,4116+10]..[120,4116+11])
              Ppat_var "i" (src/cmly_write.ml[120,4116+10]..[120,4116+11])
            core_type (src/cmly_write.ml[120,4116+14]..[120,4116+20])
              Ptyp_constr "Item.t" (src/cmly_write.ml[120,4116+14]..[120,4116+20])
              []
          expression (src/cmly_write.ml[120,4116+22]..[122,4189+23])
            Pexp_constraint
            expression (src/cmly_write.ml[121,4159+2]..[122,4189+23])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/cmly_write.ml[121,4159+6]..[121,4159+10])
                    Ppat_tuple
                    [
                      pattern (src/cmly_write.ml[121,4159+6]..[121,4159+7])
                        Ppat_var "p" (src/cmly_write.ml[121,4159+6]..[121,4159+7])
                      pattern (src/cmly_write.ml[121,4159+9]..[121,4159+10])
                        Ppat_var "i" (src/cmly_write.ml[121,4159+9]..[121,4159+10])
                    ]
                  expression (src/cmly_write.ml[121,4159+13]..[121,4159+26])
                    Pexp_apply
                    expression (src/cmly_write.ml[121,4159+13]..[121,4159+24])
                      Pexp_ident "Item.export" (src/cmly_write.ml[121,4159+13]..[121,4159+24])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[121,4159+25]..[121,4159+26])
                          Pexp_ident "i" (src/cmly_write.ml[121,4159+25]..[121,4159+26])
                    ]
              ]
              expression (src/cmly_write.ml[122,4189+2]..[122,4189+23])
                Pexp_tuple
                [
                  expression (src/cmly_write.ml[122,4189+3]..[122,4189+19])
                    Pexp_apply
                    expression (src/cmly_write.ml[122,4189+3]..[122,4189+17])
                      Pexp_ident "Production.p2i" (src/cmly_write.ml[122,4189+3]..[122,4189+17])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[122,4189+18]..[122,4189+19])
                          Pexp_ident "p" (src/cmly_write.ml[122,4189+18]..[122,4189+19])
                    ]
                  expression (src/cmly_write.ml[122,4189+21]..[122,4189+22])
                    Pexp_ident "i" (src/cmly_write.ml[122,4189+21]..[122,4189+22])
                ]
            core_type (src/cmly_write.ml[120,4116+24]..[120,4116+40])
              Ptyp_tuple
              [
                core_type (src/cmly_write.ml[120,4116+24]..[120,4116+34])
                  Ptyp_constr "production" (src/cmly_write.ml[120,4116+24]..[120,4116+34])
                  []
                core_type (src/cmly_write.ml[120,4116+37]..[120,4116+40])
                  Ptyp_constr "int" (src/cmly_write.ml[120,4116+37]..[120,4116+40])
                  []
              ]
    ]
  structure_item (src/cmly_write.ml[124,4214+0]..[125,4272+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[124,4214+4]..[124,4214+11])
          Ppat_var "itemset" (src/cmly_write.ml[124,4214+4]..[124,4214+11])
        expression (src/cmly_write.ml[124,4214+12]..[125,4272+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/cmly_write.ml[124,4214+12]..[124,4214+29])
            Ppat_constraint
            pattern (src/cmly_write.ml[124,4214+13]..[124,4214+15])
              Ppat_var "is" (src/cmly_write.ml[124,4214+13]..[124,4214+15])
            core_type (src/cmly_write.ml[124,4214+18]..[124,4214+28])
              Ptyp_constr "Item.Set.t" (src/cmly_write.ml[124,4214+18]..[124,4214+28])
              []
          expression (src/cmly_write.ml[124,4214+30]..[125,4272+38])
            Pexp_constraint
            expression (src/cmly_write.ml[125,4272+2]..[125,4272+38])
              Pexp_apply
              expression (src/cmly_write.ml[125,4272+2]..[125,4272+10])
                Pexp_ident "List.map" (src/cmly_write.ml[125,4272+2]..[125,4272+10])
              [
                <arg>
                Nolabel
                  expression (src/cmly_write.ml[125,4272+11]..[125,4272+15])
                    Pexp_ident "item" (src/cmly_write.ml[125,4272+11]..[125,4272+15])
                <arg>
                Nolabel
                  expression (src/cmly_write.ml[125,4272+16]..[125,4272+38])
                    Pexp_apply
                    expression (src/cmly_write.ml[125,4272+17]..[125,4272+34])
                      Pexp_ident "Item.Set.elements" (src/cmly_write.ml[125,4272+17]..[125,4272+34])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[125,4272+35]..[125,4272+37])
                          Pexp_ident "is" (src/cmly_write.ml[125,4272+35]..[125,4272+37])
                    ]
              ]
            core_type (src/cmly_write.ml[124,4214+32]..[124,4214+55])
              Ptyp_constr "list" (src/cmly_write.ml[124,4214+51]..[124,4214+55])
              [
                core_type (src/cmly_write.ml[124,4214+33]..[124,4214+49])
                  Ptyp_tuple
                  [
                    core_type (src/cmly_write.ml[124,4214+33]..[124,4214+43])
                      Ptyp_constr "production" (src/cmly_write.ml[124,4214+33]..[124,4214+43])
                      []
                    core_type (src/cmly_write.ml[124,4214+46]..[124,4214+49])
                      Ptyp_constr "int" (src/cmly_write.ml[124,4214+46]..[124,4214+49])
                      []
                  ]
              ]
    ]
  structure_item (src/cmly_write.ml[127,4312+0]..[131,4472+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[127,4312+4]..[127,4312+13])
          Ppat_var "lr0_state" (src/cmly_write.ml[127,4312+4]..[127,4312+13])
        expression (src/cmly_write.ml[127,4312+14]..[131,4472+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/cmly_write.ml[127,4312+14]..[127,4312+31])
            Ppat_constraint
            pattern (src/cmly_write.ml[127,4312+15]..[127,4312+19])
              Ppat_var "node" (src/cmly_write.ml[127,4312+15]..[127,4312+19])
            core_type (src/cmly_write.ml[127,4312+22]..[127,4312+30])
              Ptyp_constr "Lr0.node" (src/cmly_write.ml[127,4312+22]..[127,4312+30])
              []
          expression (src/cmly_write.ml[127,4312+32]..[131,4472+3])
            Pexp_constraint
            expression (src/cmly_write.ml[128,4362+2]..[131,4472+3])
              Pexp_record
              [
                "lr0_incoming" (src/cmly_write.ml[129,4366+4]..[129,4366+16])
                  expression (src/cmly_write.ml[129,4366+19]..[129,4366+63])
                    Pexp_apply
                    expression (src/cmly_write.ml[129,4366+19]..[129,4366+29])
                      Pexp_ident "Option.map" (src/cmly_write.ml[129,4366+19]..[129,4366+29])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[129,4366+30]..[129,4366+36])
                          Pexp_ident "symbol" (src/cmly_write.ml[129,4366+30]..[129,4366+36])
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[129,4366+37]..[129,4366+63])
                          Pexp_apply
                          expression (src/cmly_write.ml[129,4366+38]..[129,4366+57])
                            Pexp_ident "Lr0.incoming_symbol" (src/cmly_write.ml[129,4366+38]..[129,4366+57])
                          [
                            <arg>
                            Nolabel
                              expression (src/cmly_write.ml[129,4366+58]..[129,4366+62])
                                Pexp_ident "node" (src/cmly_write.ml[129,4366+58]..[129,4366+62])
                          ]
                    ]
                "lr0_items" (src/cmly_write.ml[130,4431+4]..[130,4431+13])
                  expression (src/cmly_write.ml[130,4431+16]..[130,4431+40])
                    Pexp_apply
                    expression (src/cmly_write.ml[130,4431+16]..[130,4431+23])
                      Pexp_ident "itemset" (src/cmly_write.ml[130,4431+16]..[130,4431+23])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[130,4431+24]..[130,4431+40])
                          Pexp_apply
                          expression (src/cmly_write.ml[130,4431+25]..[130,4431+34])
                            Pexp_ident "Lr0.items" (src/cmly_write.ml[130,4431+25]..[130,4431+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/cmly_write.ml[130,4431+35]..[130,4431+39])
                                Pexp_ident "node" (src/cmly_write.ml[130,4431+35]..[130,4431+39])
                          ]
                    ]
              ]
              None
            core_type (src/cmly_write.ml[127,4312+34]..[127,4312+47])
              Ptyp_constr "lr0_state_def" (src/cmly_write.ml[127,4312+34]..[127,4312+47])
              []
    ]
  structure_item (src/cmly_write.ml[133,4477+0]..[134,4521+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[133,4477+4]..[133,4477+14])
          Ppat_var "transition" (src/cmly_write.ml[133,4477+4]..[133,4477+14])
        expression (src/cmly_write.ml[133,4477+15]..[134,4521+31]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/cmly_write.ml[133,4477+15]..[133,4477+26])
            Ppat_tuple
            [
              pattern (src/cmly_write.ml[133,4477+16]..[133,4477+19])
                Ppat_var "sym" (src/cmly_write.ml[133,4477+16]..[133,4477+19])
              pattern (src/cmly_write.ml[133,4477+21]..[133,4477+25])
                Ppat_var "node" (src/cmly_write.ml[133,4477+21]..[133,4477+25])
            ]
          expression (src/cmly_write.ml[133,4477+27]..[134,4521+31])
            Pexp_constraint
            expression (src/cmly_write.ml[134,4521+2]..[134,4521+31])
              Pexp_tuple
              [
                expression (src/cmly_write.ml[134,4521+3]..[134,4521+13])
                  Pexp_apply
                  expression (src/cmly_write.ml[134,4521+3]..[134,4521+9])
                    Pexp_ident "symbol" (src/cmly_write.ml[134,4521+3]..[134,4521+9])
                  [
                    <arg>
                    Nolabel
                      expression (src/cmly_write.ml[134,4521+10]..[134,4521+13])
                        Pexp_ident "sym" (src/cmly_write.ml[134,4521+10]..[134,4521+13])
                  ]
                expression (src/cmly_write.ml[134,4521+15]..[134,4521+30])
                  Pexp_apply
                  expression (src/cmly_write.ml[134,4521+15]..[134,4521+25])
                    Pexp_ident "Lr1.number" (src/cmly_write.ml[134,4521+15]..[134,4521+25])
                  [
                    <arg>
                    Nolabel
                      expression (src/cmly_write.ml[134,4521+26]..[134,4521+30])
                        Pexp_ident "node" (src/cmly_write.ml[134,4521+26]..[134,4521+30])
                  ]
              ]
            core_type (src/cmly_write.ml[133,4477+29]..[133,4477+41])
              Ptyp_tuple
              [
                core_type (src/cmly_write.ml[133,4477+29]..[133,4477+35])
                  Ptyp_constr "symbol" (src/cmly_write.ml[133,4477+29]..[133,4477+35])
                  []
                core_type (src/cmly_write.ml[133,4477+38]..[133,4477+41])
                  Ptyp_constr "lr1" (src/cmly_write.ml[133,4477+38]..[133,4477+41])
                  []
              ]
    ]
  structure_item (src/cmly_write.ml[136,4554+0]..[144,4897+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[136,4554+4]..[136,4554+13])
          Ppat_var "lr1_state" (src/cmly_write.ml[136,4554+4]..[136,4554+13])
        expression (src/cmly_write.ml[136,4554+14]..[144,4897+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/cmly_write.ml[136,4554+14]..[136,4554+31])
            Ppat_constraint
            pattern (src/cmly_write.ml[136,4554+15]..[136,4554+19])
              Ppat_var "node" (src/cmly_write.ml[136,4554+15]..[136,4554+19])
            core_type (src/cmly_write.ml[136,4554+22]..[136,4554+30])
              Ptyp_constr "Lr1.node" (src/cmly_write.ml[136,4554+22]..[136,4554+30])
              []
          expression (src/cmly_write.ml[136,4554+32]..[144,4897+3])
            Pexp_constraint
            expression (src/cmly_write.ml[137,4604+2]..[144,4897+3])
              Pexp_record
              [
                "lr1_lr0" (src/cmly_write.ml[138,4608+4]..[138,4608+11])
                  expression (src/cmly_write.ml[138,4608+14]..[138,4608+39])
                    Pexp_apply
                    expression (src/cmly_write.ml[138,4608+14]..[138,4608+22])
                      Pexp_ident "Lr0.core" (src/cmly_write.ml[138,4608+14]..[138,4608+22])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[138,4608+23]..[138,4608+39])
                          Pexp_apply
                          expression (src/cmly_write.ml[138,4608+24]..[138,4608+33])
                            Pexp_ident "Lr1.state" (src/cmly_write.ml[138,4608+24]..[138,4608+33])
                          [
                            <arg>
                            Nolabel
                              expression (src/cmly_write.ml[138,4608+34]..[138,4608+38])
                                Pexp_ident "node" (src/cmly_write.ml[138,4608+34]..[138,4608+38])
                          ]
                    ]
                "lr1_transitions" (src/cmly_write.ml[139,4649+4]..[139,4649+19])
                  expression (src/cmly_write.ml[140,4671+6]..[140,4671+69])
                    Pexp_apply
                    expression (src/cmly_write.ml[140,4671+6]..[140,4671+14])
                      Pexp_ident "List.map" (src/cmly_write.ml[140,4671+6]..[140,4671+14])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[140,4671+15]..[140,4671+25])
                          Pexp_ident "transition" (src/cmly_write.ml[140,4671+15]..[140,4671+25])
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[140,4671+26]..[140,4671+69])
                          Pexp_apply
                          expression (src/cmly_write.ml[140,4671+27]..[140,4671+45])
                            Pexp_ident "SymbolMap.bindings" (src/cmly_write.ml[140,4671+27]..[140,4671+45])
                          [
                            <arg>
                            Nolabel
                              expression (src/cmly_write.ml[140,4671+46]..[140,4671+68])
                                Pexp_apply
                                expression (src/cmly_write.ml[140,4671+47]..[140,4671+62])
                                  Pexp_ident "Lr1.transitions" (src/cmly_write.ml[140,4671+47]..[140,4671+62])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/cmly_write.ml[140,4671+63]..[140,4671+67])
                                      Pexp_ident "node" (src/cmly_write.ml[140,4671+63]..[140,4671+67])
                                ]
                          ]
                    ]
                "lr1_reductions" (src/cmly_write.ml[141,4742+4]..[141,4742+18])
                  expression (src/cmly_write.ml[142,4763+6]..[143,4841+55])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/cmly_write.ml[142,4763+10]..[142,4763+13])
                          Ppat_var "add" (src/cmly_write.ml[142,4763+10]..[142,4763+13])
                        expression (src/cmly_write.ml[142,4763+14]..[142,4763+74]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/cmly_write.ml[142,4763+14]..[142,4763+15])
                            Ppat_var "t" (src/cmly_write.ml[142,4763+14]..[142,4763+15])
                          expression (src/cmly_write.ml[142,4763+16]..[142,4763+74]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/cmly_write.ml[142,4763+16]..[142,4763+18])
                              Ppat_var "ps" (src/cmly_write.ml[142,4763+16]..[142,4763+18])
                            expression (src/cmly_write.ml[142,4763+19]..[142,4763+74]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/cmly_write.ml[142,4763+19]..[142,4763+21])
                                Ppat_var "rs" (src/cmly_write.ml[142,4763+19]..[142,4763+21])
                              expression (src/cmly_write.ml[142,4763+24]..[142,4763+74])
                                Pexp_construct "::" (src/cmly_write.ml[142,4763+69]..[142,4763+71])
                                Some
                                  expression (src/cmly_write.ml[142,4763+24]..[142,4763+74]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/cmly_write.ml[142,4763+24]..[142,4763+68])
                                        Pexp_tuple
                                        [
                                          expression (src/cmly_write.ml[142,4763+25]..[142,4763+39])
                                            Pexp_apply
                                            expression (src/cmly_write.ml[142,4763+25]..[142,4763+37])
                                              Pexp_ident "Terminal.t2i" (src/cmly_write.ml[142,4763+25]..[142,4763+37])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/cmly_write.ml[142,4763+38]..[142,4763+39])
                                                  Pexp_ident "t" (src/cmly_write.ml[142,4763+38]..[142,4763+39])
                                            ]
                                          expression (src/cmly_write.ml[142,4763+41]..[142,4763+67])
                                            Pexp_apply
                                            expression (src/cmly_write.ml[142,4763+41]..[142,4763+49])
                                              Pexp_ident "List.map" (src/cmly_write.ml[142,4763+41]..[142,4763+49])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/cmly_write.ml[142,4763+50]..[142,4763+64])
                                                  Pexp_ident "Production.p2i" (src/cmly_write.ml[142,4763+50]..[142,4763+64])
                                              <arg>
                                              Nolabel
                                                expression (src/cmly_write.ml[142,4763+65]..[142,4763+67])
                                                  Pexp_ident "ps" (src/cmly_write.ml[142,4763+65]..[142,4763+67])
                                            ]
                                        ]
                                      expression (src/cmly_write.ml[142,4763+72]..[142,4763+74])
                                        Pexp_ident "rs" (src/cmly_write.ml[142,4763+72]..[142,4763+74])
                                    ]
                    ]
                    expression (src/cmly_write.ml[143,4841+6]..[143,4841+55])
                      Pexp_apply
                      expression (src/cmly_write.ml[143,4841+6]..[143,4841+26])
                        Pexp_ident "TerminalMap.fold_rev" (src/cmly_write.ml[143,4841+6]..[143,4841+26])
                      [
                        <arg>
                        Nolabel
                          expression (src/cmly_write.ml[143,4841+27]..[143,4841+30])
                            Pexp_ident "add" (src/cmly_write.ml[143,4841+27]..[143,4841+30])
                        <arg>
                        Nolabel
                          expression (src/cmly_write.ml[143,4841+31]..[143,4841+52])
                            Pexp_apply
                            expression (src/cmly_write.ml[143,4841+32]..[143,4841+46])
                              Pexp_ident "Lr1.reductions" (src/cmly_write.ml[143,4841+32]..[143,4841+46])
                            [
                              <arg>
                              Nolabel
                                expression (src/cmly_write.ml[143,4841+47]..[143,4841+51])
                                  Pexp_ident "node" (src/cmly_write.ml[143,4841+47]..[143,4841+51])
                            ]
                        <arg>
                        Nolabel
                          expression (src/cmly_write.ml[143,4841+53]..[143,4841+55])
                            Pexp_construct "[]" (src/cmly_write.ml[143,4841+53]..[143,4841+55])
                            None
                      ]
              ]
              None
            core_type (src/cmly_write.ml[136,4554+34]..[136,4554+47])
              Ptyp_constr "lr1_state_def" (src/cmly_write.ml[136,4554+34]..[136,4554+47])
              []
    ]
  structure_item (src/cmly_write.ml[146,4902+0]..[147,4983+68])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[146,4902+4]..[146,4902+15])
          Ppat_var "entry_point" (src/cmly_write.ml[146,4902+4]..[146,4902+15])
        expression (src/cmly_write.ml[146,4902+16]..[147,4983+68]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/cmly_write.ml[146,4902+16]..[146,4902+20])
            Ppat_var "prod" (src/cmly_write.ml[146,4902+16]..[146,4902+20])
          expression (src/cmly_write.ml[146,4902+21]..[147,4983+68]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/cmly_write.ml[146,4902+21]..[146,4902+25])
              Ppat_var "node" (src/cmly_write.ml[146,4902+21]..[146,4902+25])
            expression (src/cmly_write.ml[146,4902+26]..[147,4983+68]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/cmly_write.ml[146,4902+26]..[146,4902+28])
                Ppat_var "nt" (src/cmly_write.ml[146,4902+26]..[146,4902+28])
              expression (src/cmly_write.ml[146,4902+29]..[147,4983+68]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/cmly_write.ml[146,4902+29]..[146,4902+33])
                  Ppat_var "_typ" (src/cmly_write.ml[146,4902+29]..[146,4902+33])
                expression (src/cmly_write.ml[146,4902+34]..[147,4983+68]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/cmly_write.ml[146,4902+34]..[146,4902+38])
                    Ppat_var "accu" (src/cmly_write.ml[146,4902+34]..[146,4902+38])
                  expression (src/cmly_write.ml[146,4902+39]..[147,4983+68])
                    Pexp_constraint
                    expression (src/cmly_write.ml[147,4983+2]..[147,4983+68])
                      Pexp_construct "::" (src/cmly_write.ml[147,4983+61]..[147,4983+63])
                      Some
                        expression (src/cmly_write.ml[147,4983+2]..[147,4983+68]) ghost
                          Pexp_tuple
                          [
                            expression (src/cmly_write.ml[147,4983+2]..[147,4983+60])
                              Pexp_tuple
                              [
                                expression (src/cmly_write.ml[147,4983+3]..[147,4983+21])
                                  Pexp_apply
                                  expression (src/cmly_write.ml[147,4983+3]..[147,4983+18])
                                    Pexp_ident "Nonterminal.n2i" (src/cmly_write.ml[147,4983+3]..[147,4983+18])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/cmly_write.ml[147,4983+19]..[147,4983+21])
                                        Pexp_ident "nt" (src/cmly_write.ml[147,4983+19]..[147,4983+21])
                                  ]
                                expression (src/cmly_write.ml[147,4983+23]..[147,4983+42])
                                  Pexp_apply
                                  expression (src/cmly_write.ml[147,4983+23]..[147,4983+37])
                                    Pexp_ident "Production.p2i" (src/cmly_write.ml[147,4983+23]..[147,4983+37])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/cmly_write.ml[147,4983+38]..[147,4983+42])
                                        Pexp_ident "prod" (src/cmly_write.ml[147,4983+38]..[147,4983+42])
                                  ]
                                expression (src/cmly_write.ml[147,4983+44]..[147,4983+59])
                                  Pexp_apply
                                  expression (src/cmly_write.ml[147,4983+44]..[147,4983+54])
                                    Pexp_ident "Lr1.number" (src/cmly_write.ml[147,4983+44]..[147,4983+54])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/cmly_write.ml[147,4983+55]..[147,4983+59])
                                        Pexp_ident "node" (src/cmly_write.ml[147,4983+55]..[147,4983+59])
                                  ]
                              ]
                            expression (src/cmly_write.ml[147,4983+64]..[147,4983+68])
                              Pexp_ident "accu" (src/cmly_write.ml[147,4983+64]..[147,4983+68])
                          ]
                    core_type (src/cmly_write.ml[146,4902+41]..[146,4902+78])
                      Ptyp_constr "list" (src/cmly_write.ml[146,4902+74]..[146,4902+78])
                      [
                        core_type (src/cmly_write.ml[146,4902+42]..[146,4902+72])
                          Ptyp_tuple
                          [
                            core_type (src/cmly_write.ml[146,4902+42]..[146,4902+53])
                              Ptyp_constr "nonterminal" (src/cmly_write.ml[146,4902+42]..[146,4902+53])
                              []
                            core_type (src/cmly_write.ml[146,4902+56]..[146,4902+66])
                              Ptyp_constr "production" (src/cmly_write.ml[146,4902+56]..[146,4902+66])
                              []
                            core_type (src/cmly_write.ml[146,4902+69]..[146,4902+72])
                              Ptyp_constr "lr1" (src/cmly_write.ml[146,4902+69]..[146,4902+72])
                              []
                          ]
                      ]
    ]
  structure_item (src/cmly_write.ml[149,5053+0]..[162,5675+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[149,5053+4]..[149,5053+10])
          Ppat_var "encode" (src/cmly_write.ml[149,5053+4]..[149,5053+10])
        expression (src/cmly_write.ml[149,5053+11]..[162,5675+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/cmly_write.ml[149,5053+11]..[149,5053+13])
            Ppat_construct "()" (src/cmly_write.ml[149,5053+11]..[149,5053+13])
            None
          expression (src/cmly_write.ml[149,5053+14]..[162,5675+3])
            Pexp_constraint
            expression (src/cmly_write.ml[150,5079+2]..[162,5675+3])
              Pexp_record
              [
                "g_basename" (src/cmly_write.ml[151,5083+4]..[151,5083+14])
                  expression (src/cmly_write.ml[151,5083+21]..[151,5083+34])
                    Pexp_ident "Settings.base" (src/cmly_write.ml[151,5083+21]..[151,5083+34])
                "g_preludes" (src/cmly_write.ml[152,5119+4]..[152,5119+14])
                  expression (src/cmly_write.ml[152,5119+21]..[152,5119+64])
                    Pexp_apply
                    expression (src/cmly_write.ml[152,5119+21]..[152,5119+29])
                      Pexp_ident "List.map" (src/cmly_write.ml[152,5119+21]..[152,5119+29])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[152,5119+30]..[152,5119+41])
                          Pexp_ident "raw_content" (src/cmly_write.ml[152,5119+30]..[152,5119+41])
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[152,5119+42]..[152,5119+64])
                          Pexp_field
                          expression (src/cmly_write.ml[152,5119+42]..[152,5119+55])
                            Pexp_ident "Front.grammar" (src/cmly_write.ml[152,5119+42]..[152,5119+55])
                          "preludes" (src/cmly_write.ml[152,5119+56]..[152,5119+64])
                    ]
                "g_postludes" (src/cmly_write.ml[153,5185+4]..[153,5185+15])
                  expression (src/cmly_write.ml[153,5185+21]..[153,5185+65])
                    Pexp_apply
                    expression (src/cmly_write.ml[153,5185+21]..[153,5185+29])
                      Pexp_ident "List.map" (src/cmly_write.ml[153,5185+21]..[153,5185+29])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[153,5185+30]..[153,5185+41])
                          Pexp_ident "raw_content" (src/cmly_write.ml[153,5185+30]..[153,5185+41])
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[153,5185+42]..[153,5185+65])
                          Pexp_field
                          expression (src/cmly_write.ml[153,5185+42]..[153,5185+55])
                            Pexp_ident "Front.grammar" (src/cmly_write.ml[153,5185+42]..[153,5185+55])
                          "postludes" (src/cmly_write.ml[153,5185+56]..[153,5185+65])
                    ]
                "g_terminals" (src/cmly_write.ml[154,5252+4]..[154,5252+15])
                  expression (src/cmly_write.ml[154,5252+21]..[154,5252+43])
                    Pexp_apply
                    expression (src/cmly_write.ml[154,5252+21]..[154,5252+34])
                      Pexp_ident "Terminal.init" (src/cmly_write.ml[154,5252+21]..[154,5252+34])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[154,5252+35]..[154,5252+43])
                          Pexp_ident "terminal" (src/cmly_write.ml[154,5252+35]..[154,5252+43])
                    ]
                "g_nonterminals" (src/cmly_write.ml[155,5297+4]..[155,5297+18])
                  expression (src/cmly_write.ml[155,5297+21]..[155,5297+49])
                    Pexp_apply
                    expression (src/cmly_write.ml[155,5297+21]..[155,5297+37])
                      Pexp_ident "Nonterminal.init" (src/cmly_write.ml[155,5297+21]..[155,5297+37])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[155,5297+38]..[155,5297+49])
                          Pexp_ident "nonterminal" (src/cmly_write.ml[155,5297+38]..[155,5297+49])
                    ]
                "g_productions" (src/cmly_write.ml[156,5348+4]..[156,5348+17])
                  expression (src/cmly_write.ml[156,5348+21]..[156,5348+47])
                    Pexp_apply
                    expression (src/cmly_write.ml[156,5348+21]..[156,5348+36])
                      Pexp_ident "Production.init" (src/cmly_write.ml[156,5348+21]..[156,5348+36])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[156,5348+37]..[156,5348+47])
                          Pexp_ident "production" (src/cmly_write.ml[156,5348+37]..[156,5348+47])
                    ]
                "g_lr0_states" (src/cmly_write.ml[157,5397+4]..[157,5397+16])
                  expression (src/cmly_write.ml[157,5397+21]..[157,5397+47])
                    Pexp_apply
                    expression (src/cmly_write.ml[157,5397+21]..[157,5397+31])
                      Pexp_ident "Array.init" (src/cmly_write.ml[157,5397+21]..[157,5397+31])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[157,5397+32]..[157,5397+37])
                          Pexp_ident "Lr0.n" (src/cmly_write.ml[157,5397+32]..[157,5397+37])
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[157,5397+38]..[157,5397+47])
                          Pexp_ident "lr0_state" (src/cmly_write.ml[157,5397+38]..[157,5397+47])
                    ]
                "g_lr1_states" (src/cmly_write.ml[158,5446+4]..[158,5446+16])
                  expression (src/cmly_write.ml[158,5446+21]..[158,5446+54])
                    Pexp_apply
                    expression (src/cmly_write.ml[158,5446+21]..[158,5446+34])
                      Pexp_ident "Array.of_list" (src/cmly_write.ml[158,5446+21]..[158,5446+34])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[158,5446+35]..[158,5446+54])
                          Pexp_apply
                          expression (src/cmly_write.ml[158,5446+36]..[158,5446+43])
                            Pexp_ident "Lr1.map" (src/cmly_write.ml[158,5446+36]..[158,5446+43])
                          [
                            <arg>
                            Nolabel
                              expression (src/cmly_write.ml[158,5446+44]..[158,5446+53])
                                Pexp_ident "lr1_state" (src/cmly_write.ml[158,5446+44]..[158,5446+53])
                          ]
                    ]
                "g_entry_points" (src/cmly_write.ml[159,5502+4]..[159,5502+18])
                  expression (src/cmly_write.ml[159,5502+21]..[159,5502+50])
                    Pexp_apply
                    expression (src/cmly_write.ml[159,5502+21]..[159,5502+35])
                      Pexp_ident "Lr1.fold_entry" (src/cmly_write.ml[159,5502+21]..[159,5502+35])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[159,5502+36]..[159,5502+47])
                          Pexp_ident "entry_point" (src/cmly_write.ml[159,5502+36]..[159,5502+47])
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[159,5502+48]..[159,5502+50])
                          Pexp_construct "[]" (src/cmly_write.ml[159,5502+48]..[159,5502+50])
                          None
                    ]
                "g_attributes" (src/cmly_write.ml[160,5554+4]..[160,5554+16])
                  expression (src/cmly_write.ml[160,5554+21]..[160,5554+51])
                    Pexp_apply
                    expression (src/cmly_write.ml[160,5554+21]..[160,5554+31])
                      Pexp_ident "attributes" (src/cmly_write.ml[160,5554+21]..[160,5554+31])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[160,5554+32]..[160,5554+51])
                          Pexp_ident "Analysis.attributes" (src/cmly_write.ml[160,5554+32]..[160,5554+51])
                    ]
                "g_parameters" (src/cmly_write.ml[161,5607+4]..[161,5607+16])
                  expression (src/cmly_write.ml[161,5607+21]..[161,5607+66])
                    Pexp_apply
                    expression (src/cmly_write.ml[161,5607+21]..[161,5607+29])
                      Pexp_ident "List.map" (src/cmly_write.ml[161,5607+21]..[161,5607+29])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[161,5607+30]..[161,5607+41])
                          Pexp_ident "raw_content" (src/cmly_write.ml[161,5607+30]..[161,5607+41])
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[161,5607+42]..[161,5607+66])
                          Pexp_field
                          expression (src/cmly_write.ml[161,5607+42]..[161,5607+55])
                            Pexp_ident "Front.grammar" (src/cmly_write.ml[161,5607+42]..[161,5607+55])
                          "parameters" (src/cmly_write.ml[161,5607+56]..[161,5607+66])
                    ]
              ]
              None
            core_type (src/cmly_write.ml[149,5053+16]..[149,5053+23])
              Ptyp_constr "grammar" (src/cmly_write.ml[149,5053+16]..[149,5053+23])
              []
    ]
  structure_item (src/cmly_write.ml[164,5680+0]..[168,5826+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[164,5680+4]..[164,5680+9])
          Ppat_var "write" (src/cmly_write.ml[164,5680+4]..[164,5680+9])
        expression (src/cmly_write.ml[164,5680+10]..[168,5826+31]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/cmly_write.ml[164,5680+10]..[164,5680+12])
            Ppat_var "oc" (src/cmly_write.ml[164,5680+10]..[164,5680+12])
          expression (src/cmly_write.ml[164,5680+13]..[168,5826+31]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/cmly_write.ml[164,5680+13]..[164,5680+14])
              Ppat_var "t" (src/cmly_write.ml[164,5680+13]..[164,5680+14])
            expression (src/cmly_write.ml[166,5758+2]..[168,5826+31])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/cmly_write.ml[166,5758+6]..[166,5758+11])
                    Ppat_var "magic" (src/cmly_write.ml[166,5758+6]..[166,5758+11])
                  expression (src/cmly_write.ml[166,5758+14]..[166,5758+38])
                    Pexp_apply
                    expression (src/cmly_write.ml[166,5758+21]..[166,5758+22])
                      Pexp_ident "^" (src/cmly_write.ml[166,5758+21]..[166,5758+22])
                    [
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[166,5758+14]..[166,5758+20])
                          Pexp_constant PConst_string("CMLY",(src/cmly_write.ml[166,5758+15]..[166,5758+19]),None)
                      <arg>
                      Nolabel
                        expression (src/cmly_write.ml[166,5758+23]..[166,5758+38])
                          Pexp_ident "Version.version" (src/cmly_write.ml[166,5758+23]..[166,5758+38])
                    ]
              ]
              expression (src/cmly_write.ml[167,5800+2]..[168,5826+31])
                Pexp_sequence
                expression (src/cmly_write.ml[167,5800+2]..[167,5800+24])
                  Pexp_apply
                  expression (src/cmly_write.ml[167,5800+2]..[167,5800+15])
                    Pexp_ident "output_string" (src/cmly_write.ml[167,5800+2]..[167,5800+15])
                  [
                    <arg>
                    Nolabel
                      expression (src/cmly_write.ml[167,5800+16]..[167,5800+18])
                        Pexp_ident "oc" (src/cmly_write.ml[167,5800+16]..[167,5800+18])
                    <arg>
                    Nolabel
                      expression (src/cmly_write.ml[167,5800+19]..[167,5800+24])
                        Pexp_ident "magic" (src/cmly_write.ml[167,5800+19]..[167,5800+24])
                  ]
                expression (src/cmly_write.ml[168,5826+2]..[168,5826+31])
                  Pexp_apply
                  expression (src/cmly_write.ml[168,5826+2]..[168,5826+14])
                    Pexp_ident "output_value" (src/cmly_write.ml[168,5826+2]..[168,5826+14])
                  [
                    <arg>
                    Nolabel
                      expression (src/cmly_write.ml[168,5826+15]..[168,5826+17])
                        Pexp_ident "oc" (src/cmly_write.ml[168,5826+15]..[168,5826+17])
                    <arg>
                    Nolabel
                      expression (src/cmly_write.ml[168,5826+18]..[168,5826+31])
                        Pexp_constraint
                        expression (src/cmly_write.ml[168,5826+19]..[168,5826+20])
                          Pexp_ident "t" (src/cmly_write.ml[168,5826+19]..[168,5826+20])
                        core_type (src/cmly_write.ml[168,5826+23]..[168,5826+30])
                          Ptyp_constr "grammar" (src/cmly_write.ml[168,5826+23]..[168,5826+30])
                          []
                  ]
    ]
  structure_item (src/cmly_write.ml[170,5859+0]..[175,6050+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[170,5859+4]..[170,5859+9])
          Ppat_var "write" (src/cmly_write.ml[170,5859+4]..[170,5859+9])
        expression (src/cmly_write.ml[170,5859+10]..[175,6050+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/cmly_write.ml[170,5859+10]..[170,5859+18])
            Ppat_var "filename" (src/cmly_write.ml[170,5859+10]..[170,5859+18])
          expression (src/cmly_write.ml[173,5991+2]..[175,6050+14])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/cmly_write.ml[173,5991+6]..[173,5991+8])
                  Ppat_var "oc" (src/cmly_write.ml[173,5991+6]..[173,5991+8])
                expression (src/cmly_write.ml[173,5991+11]..[173,5991+32])
                  Pexp_apply
                  expression (src/cmly_write.ml[173,5991+11]..[173,5991+23])
                    Pexp_ident "open_out_bin" (src/cmly_write.ml[173,5991+11]..[173,5991+23])
                  [
                    <arg>
                    Nolabel
                      expression (src/cmly_write.ml[173,5991+24]..[173,5991+32])
                        Pexp_ident "filename" (src/cmly_write.ml[173,5991+24]..[173,5991+32])
                  ]
            ]
            expression (src/cmly_write.ml[174,6027+2]..[175,6050+14])
              Pexp_sequence
              expression (src/cmly_write.ml[174,6027+2]..[174,6027+21])
                Pexp_apply
                expression (src/cmly_write.ml[174,6027+2]..[174,6027+7])
                  Pexp_ident "write" (src/cmly_write.ml[174,6027+2]..[174,6027+7])
                [
                  <arg>
                  Nolabel
                    expression (src/cmly_write.ml[174,6027+8]..[174,6027+10])
                      Pexp_ident "oc" (src/cmly_write.ml[174,6027+8]..[174,6027+10])
                  <arg>
                  Nolabel
                    expression (src/cmly_write.ml[174,6027+11]..[174,6027+21])
                      Pexp_apply
                      expression (src/cmly_write.ml[174,6027+12]..[174,6027+18])
                        Pexp_ident "encode" (src/cmly_write.ml[174,6027+12]..[174,6027+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/cmly_write.ml[174,6027+18]..[174,6027+20])
                            Pexp_construct "()" (src/cmly_write.ml[174,6027+18]..[174,6027+20])
                            None
                      ]
                ]
              expression (src/cmly_write.ml[175,6050+2]..[175,6050+14])
                Pexp_apply
                expression (src/cmly_write.ml[175,6050+2]..[175,6050+11])
                  Pexp_ident "close_out" (src/cmly_write.ml[175,6050+2]..[175,6050+11])
                [
                  <arg>
                  Nolabel
                    expression (src/cmly_write.ml[175,6050+12]..[175,6050+14])
                      Pexp_ident "oc" (src/cmly_write.ml[175,6050+12]..[175,6050+14])
                ]
    ]
]

open BasicSyntax
open Grammar
open Cmly_format
let raw_content stretch = stretch.Stretch.stretch_raw_content
let ocamltype (typ : Stretch.ocamltype) =
  (match typ with
   | Stretch.Declared stretch -> raw_content stretch
   | Stretch.Inferred typ -> typ : ocamltype)
let ocamltype (typo : Stretch.ocamltype option) =
  (match typo with | None -> None | Some typ -> Some (ocamltype typ) : 
  ocamltype option)
let range (pos : Positions.t) =
  ({
     r_start = (Positions.start_of_position pos);
     r_end = (Positions.end_of_position pos)
   } : range)
let ranges = List.map range
let attribute ((label, payload) : Syntax.attribute) =
  ({
     a_label = (Positions.value label);
     a_payload = (raw_content payload);
     a_position = (range (Positions.position label))
   } : attribute)
let attributes : Syntax.attributes -> attributes = List.map attribute
let terminal (t : Terminal.t) =
  ({
     t_kind =
       (if Terminal.equal t Terminal.error
        then `ERROR
        else
          if
            (match Terminal.eof with
             | None -> false
             | Some eof -> Terminal.equal t eof)
          then `EOF
          else if Terminal.pseudo t then `PSEUDO else `REGULAR);
     t_name = (Terminal.print t);
     t_type = (ocamltype (Terminal.ocamltype t));
     t_attributes = (attributes (Terminal.attributes t))
   } : terminal_def)
let nonterminal (nt : Nonterminal.t) =
  (let is_start = Nonterminal.is_internal_start nt in
   {
     n_kind = (if is_start then `START else `REGULAR);
     n_name = (Nonterminal.print false nt);
     n_mangled_name = (Nonterminal.print true nt);
     n_type =
       (if is_start then None else ocamltype (Nonterminal.ocamltype nt));
     n_positions =
       (if is_start then [] else ranges (Nonterminal.positions nt));
     n_nullable = (Analysis.nullable nt);
     n_first =
       (List.map Terminal.t2i (TerminalSet.elements (Analysis.first nt)));
     n_attributes =
       (if is_start then [] else attributes (Nonterminal.attributes nt))
   } : nonterminal_def)
let symbol (sym : Symbol.t) =
  (match sym with
   | Symbol.N n -> N (Nonterminal.n2i n)
   | Symbol.T t -> T (Terminal.t2i t) : symbol)
let action (a : Action.t) =
  ({
     a_expr = (Printer.string_of_expr (Action.to_il_expr a));
     a_keywords = (Keyword.KeywordSet.elements (Action.keywords a))
   } : action)
let rhs (prod : Production.index) =
  (match Production.classify prod with
   | Some n -> [|((N (Nonterminal.n2i n)), "", [])|]
   | None ->
       Array.mapi
         (fun i ->
            fun sym ->
              let id = (Production.identifiers prod).(i) in
              let attrs = attributes ((Production.rhs_attributes prod).(i)) in
              ((symbol sym), id, attrs)) (Production.rhs prod) : producer_def
                                                                   array)
let production (prod : Production.index) =
  ({
     p_kind = (if Production.is_start prod then `START else `REGULAR);
     p_lhs = (Nonterminal.n2i (Production.nt prod));
     p_rhs = (rhs prod);
     p_positions = (ranges (Production.positions prod));
     p_action =
       (if Production.is_start prod
        then None
        else Some (action (Production.action prod)));
     p_attributes = (attributes (Production.lhs_attributes prod))
   } : production_def)
let item (i : Item.t) =
  (let (p, i) = Item.export i in ((Production.p2i p), i) : (production * int))
let itemset (is : Item.Set.t) =
  (List.map item (Item.Set.elements is) : (production * int) list)
let lr0_state (node : Lr0.node) =
  ({
     lr0_incoming = (Option.map symbol (Lr0.incoming_symbol node));
     lr0_items = (itemset (Lr0.items node))
   } : lr0_state_def)
let transition (sym, node) =
  (((symbol sym), (Lr1.number node)) : (symbol * lr1))
let lr1_state (node : Lr1.node) =
  ({
     lr1_lr0 = (Lr0.core (Lr1.state node));
     lr1_transitions =
       (List.map transition (SymbolMap.bindings (Lr1.transitions node)));
     lr1_reductions =
       (let add t ps rs = ((Terminal.t2i t), (List.map Production.p2i ps)) ::
          rs in
        TerminalMap.fold_rev add (Lr1.reductions node) [])
   } : lr1_state_def)
let entry_point prod node nt _typ accu =
  (((Nonterminal.n2i nt), (Production.p2i prod), (Lr1.number node)) ::
  accu : (nonterminal * production * lr1) list)
let encode () =
  ({
     g_basename = Settings.base;
     g_preludes = (List.map raw_content Front.grammar.preludes);
     g_postludes = (List.map raw_content Front.grammar.postludes);
     g_terminals = (Terminal.init terminal);
     g_nonterminals = (Nonterminal.init nonterminal);
     g_productions = (Production.init production);
     g_lr0_states = (Array.init Lr0.n lr0_state);
     g_lr1_states = (Array.of_list (Lr1.map lr1_state));
     g_entry_points = (Lr1.fold_entry entry_point []);
     g_attributes = (attributes Analysis.attributes);
     g_parameters = (List.map raw_content Front.grammar.parameters)
   } : grammar)
let write oc t =
  let magic = "CMLY" ^ Version.version in
  output_string oc magic; output_value oc (t : grammar)
let write filename =
  let oc = open_out_bin filename in write oc (encode ()); close_out oc
[
  structure_item (src/cmly_write.ml[14,1000+0]..src/cmly_write.ml[14,1000+16])
    Tstr_open Fresh
    module_expr (src/cmly_write.ml[14,1000+5]..src/cmly_write.ml[14,1000+16])
      Tmod_ident "Dune__exe!.BasicSyntax"
  structure_item (src/cmly_write.ml[15,1017+0]..src/cmly_write.ml[15,1017+12])
    Tstr_open Fresh
    module_expr (src/cmly_write.ml[15,1017+5]..src/cmly_write.ml[15,1017+12])
      Tmod_ident "Dune__exe!.Grammar"
  structure_item (src/cmly_write.ml[16,1030+0]..src/cmly_write.ml[16,1030+16])
    Tstr_open Fresh
    module_expr (src/cmly_write.ml[16,1030+5]..src/cmly_write.ml[16,1030+16])
      Tmod_ident "MenhirSdk!.Cmly_format"
  structure_item (src/cmly_write.ml[18,1048+0]..src/cmly_write.ml[19,1074+37])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[18,1048+4]..src/cmly_write.ml[18,1048+15])
          Tpat_var "raw_content/454"
        expression (src/cmly_write.ml[18,1048+16]..src/cmly_write.ml[19,1074+37]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/cmly_write.ml[18,1048+16]..src/cmly_write.ml[18,1048+23])
                Tpat_var "stretch/456"
              expression (src/cmly_write.ml[19,1074+2]..src/cmly_write.ml[19,1074+37])
                Texp_field
                expression (src/cmly_write.ml[19,1074+2]..src/cmly_write.ml[19,1074+9])
                  Texp_ident "stretch/456"
                "Stretch.stretch_raw_content"
          ]
    ]
  structure_item (src/cmly_write.ml[21,1113+0]..src/cmly_write.ml[26,1270+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[21,1113+4]..src/cmly_write.ml[21,1113+13])
          Tpat_var "ocamltype/459"
        expression (src/cmly_write.ml[21,1113+14]..src/cmly_write.ml[26,1270+9]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/cmly_write.ml[21,1113+15]..src/cmly_write.ml[21,1113+18])
                extra
                  Tpat_extra_constraint
                  core_type (src/cmly_write.ml[21,1113+21]..src/cmly_write.ml[21,1113+38])
                    Ttyp_constr "Dune__exe!.Stretch.ocamltype"
                    []
                Tpat_alias "typ/461"
                pattern (src/cmly_write.ml[21,1113+15]..src/cmly_write.ml[21,1113+18])
                  Tpat_any
              expression (src/cmly_write.ml[22,1167+2]..src/cmly_write.ml[26,1270+9])
                extra
                  Texp_constraint
                  core_type (src/cmly_write.ml[21,1113+42]..src/cmly_write.ml[21,1113+51])
                    Ttyp_constr "MenhirSdk!.Cmly_format.ocamltype"
                    []
                Texp_match
                expression (src/cmly_write.ml[22,1167+8]..src/cmly_write.ml[22,1167+11])
                  Texp_ident "typ/461"
                [
                  <case>
                    pattern (src/cmly_write.ml[23,1184+4]..src/cmly_write.ml[23,1184+28])
                      Tpat_value
                      pattern (src/cmly_write.ml[23,1184+4]..src/cmly_write.ml[23,1184+28])
                        Tpat_construct "Stretch.Declared"
                        [
                          pattern (src/cmly_write.ml[23,1184+21]..src/cmly_write.ml[23,1184+28])
                            Tpat_var "stretch/464"
                        ]
                        None
                    expression (src/cmly_write.ml[24,1216+6]..src/cmly_write.ml[24,1216+25])
                      Texp_apply
                      expression (src/cmly_write.ml[24,1216+6]..src/cmly_write.ml[24,1216+17])
                        Texp_ident "raw_content/454"
                      [
                        <arg>
                          Nolabel
                          expression (src/cmly_write.ml[24,1216+18]..src/cmly_write.ml[24,1216+25])
                            Texp_ident "stretch/464"
                      ]
                  <case>
                    pattern (src/cmly_write.ml[25,1242+4]..src/cmly_write.ml[25,1242+24])
                      Tpat_value
                      pattern (src/cmly_write.ml[25,1242+4]..src/cmly_write.ml[25,1242+24])
                        Tpat_construct "Stretch.Inferred"
                        [
                          pattern (src/cmly_write.ml[25,1242+21]..src/cmly_write.ml[25,1242+24])
                            Tpat_var "typ/465"
                        ]
                        None
                    expression (src/cmly_write.ml[26,1270+6]..src/cmly_write.ml[26,1270+9])
                      Texp_ident "typ/465"
                ]
          ]
    ]
  structure_item (src/cmly_write.ml[28,1281+0]..src/cmly_write.ml[33,1407+26])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[28,1281+4]..src/cmly_write.ml[28,1281+13])
          Tpat_var "ocamltype/466"
        expression (src/cmly_write.ml[28,1281+14]..src/cmly_write.ml[33,1407+26]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/cmly_write.ml[28,1281+15]..src/cmly_write.ml[28,1281+19])
                extra
                  Tpat_extra_constraint
                  core_type (src/cmly_write.ml[28,1281+22]..src/cmly_write.ml[28,1281+46])
                    Ttyp_constr "option/10!"
                    [
                      core_type (src/cmly_write.ml[28,1281+22]..src/cmly_write.ml[28,1281+39])
                        Ttyp_constr "Dune__exe!.Stretch.ocamltype"
                        []
                    ]
                Tpat_alias "typo/467"
                pattern (src/cmly_write.ml[28,1281+15]..src/cmly_write.ml[28,1281+19])
                  Tpat_any
              expression (src/cmly_write.ml[29,1350+2]..src/cmly_write.ml[33,1407+26])
                extra
                  Texp_constraint
                  core_type (src/cmly_write.ml[28,1281+50]..src/cmly_write.ml[28,1281+66])
                    Ttyp_constr "option/10!"
                    [
                      core_type (src/cmly_write.ml[28,1281+50]..src/cmly_write.ml[28,1281+59])
                        Ttyp_constr "MenhirSdk!.Cmly_format.ocamltype"
                        []
                    ]
                Texp_match
                expression (src/cmly_write.ml[29,1350+8]..src/cmly_write.ml[29,1350+12])
                  Texp_ident "typo/467"
                [
                  <case>
                    pattern (src/cmly_write.ml[30,1368+4]..src/cmly_write.ml[30,1368+8])
                      Tpat_value
                      pattern (src/cmly_write.ml[30,1368+4]..src/cmly_write.ml[30,1368+8])
                        Tpat_construct "None"
                        []
                        None
                    expression (src/cmly_write.ml[31,1380+6]..src/cmly_write.ml[31,1380+10])
                      Texp_construct "None"
                      []
                  <case>
                    pattern (src/cmly_write.ml[32,1391+4]..src/cmly_write.ml[32,1391+12])
                      Tpat_value
                      pattern (src/cmly_write.ml[32,1391+4]..src/cmly_write.ml[32,1391+12])
                        Tpat_construct "Some"
                        [
                          pattern (src/cmly_write.ml[32,1391+9]..src/cmly_write.ml[32,1391+12])
                            Tpat_var "typ/468"
                        ]
                        None
                    expression (src/cmly_write.ml[33,1407+6]..src/cmly_write.ml[33,1407+26])
                      Texp_construct "Some"
                      [
                        expression (src/cmly_write.ml[33,1407+11]..src/cmly_write.ml[33,1407+26])
                          Texp_apply
                          expression (src/cmly_write.ml[33,1407+12]..src/cmly_write.ml[33,1407+21])
                            Texp_ident "ocamltype/459"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[33,1407+22]..src/cmly_write.ml[33,1407+25])
                                Texp_ident "typ/468"
                          ]
                      ]
                ]
          ]
    ]
  structure_item (src/cmly_write.ml[35,1435+0]..src/cmly_write.ml[39,1571+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[35,1435+4]..src/cmly_write.ml[35,1435+9])
          Tpat_var "range/469"
        expression (src/cmly_write.ml[35,1435+10]..src/cmly_write.ml[39,1571+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/cmly_write.ml[35,1435+11]..src/cmly_write.ml[35,1435+14])
                extra
                  Tpat_extra_constraint
                  core_type (src/cmly_write.ml[35,1435+17]..src/cmly_write.ml[35,1435+28])
                    Ttyp_constr "Dune__exe!.Positions.t"
                    []
                Tpat_alias "pos/506"
                pattern (src/cmly_write.ml[35,1435+11]..src/cmly_write.ml[35,1435+14])
                  Tpat_any
              expression (src/cmly_write.ml[36,1475+2]..src/cmly_write.ml[39,1571+3])
                extra
                  Texp_constraint
                  core_type (src/cmly_write.ml[35,1435+32]..src/cmly_write.ml[35,1435+37])
                    Ttyp_constr "MenhirSdk!.Cmly_format.range"
                    []
                Texp_record
                  fields =
                    [
                      "r_start"
                        expression (src/cmly_write.ml[37,1479+14]..src/cmly_write.ml[37,1479+45])
                          Texp_apply
                          expression (src/cmly_write.ml[37,1479+14]..src/cmly_write.ml[37,1479+41])
                            Texp_ident "Dune__exe!.Positions.start_of_position"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[37,1479+42]..src/cmly_write.ml[37,1479+45])
                                Texp_ident "pos/506"
                          ]
                      "r_end"
                        expression (src/cmly_write.ml[38,1526+14]..src/cmly_write.ml[38,1526+43])
                          Texp_apply
                          expression (src/cmly_write.ml[38,1526+14]..src/cmly_write.ml[38,1526+39])
                            Texp_ident "Dune__exe!.Positions.end_of_position"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[38,1526+40]..src/cmly_write.ml[38,1526+43])
                                Texp_ident "pos/506"
                          ]
                    ]
                  representation =
                    Record_regular
                  extended_expression =
                    None
          ]
    ]
  structure_item (src/cmly_write.ml[41,1576+0]..src/cmly_write.ml[42,1589+16])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[41,1576+4]..src/cmly_write.ml[41,1576+10])
          Tpat_var "ranges/610"
        expression (src/cmly_write.ml[42,1589+2]..src/cmly_write.ml[42,1589+16])
          Texp_apply
          expression (src/cmly_write.ml[42,1589+2]..src/cmly_write.ml[42,1589+10])
            Texp_ident "Stdlib!.List.map"
          [
            <arg>
              Nolabel
              expression (src/cmly_write.ml[42,1589+11]..src/cmly_write.ml[42,1589+16])
                Texp_ident "range/469"
          ]
    ]
  structure_item (src/cmly_write.ml[44,1607+0]..src/cmly_write.ml[49,1804+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[44,1607+4]..src/cmly_write.ml[44,1607+13])
          Tpat_var "attribute/677"
        expression (src/cmly_write.ml[44,1607+14]..src/cmly_write.ml[49,1804+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/cmly_write.ml[44,1607+15]..src/cmly_write.ml[44,1607+29])
                extra
                  Tpat_extra_constraint
                  core_type (src/cmly_write.ml[44,1607+32]..src/cmly_write.ml[44,1607+48])
                    Ttyp_constr "Dune__exe!.Syntax.attribute"
                    []
                Tpat_tuple
                [
                  pattern (src/cmly_write.ml[44,1607+15]..src/cmly_write.ml[44,1607+20])
                    Tpat_var "label/714"
                  pattern (src/cmly_write.ml[44,1607+22]..src/cmly_write.ml[44,1607+29])
                    Tpat_var "payload/715"
                ]
              expression (src/cmly_write.ml[45,1671+2]..src/cmly_write.ml[49,1804+3])
                extra
                  Texp_constraint
                  core_type (src/cmly_write.ml[44,1607+52]..src/cmly_write.ml[44,1607+61])
                    Ttyp_constr "MenhirSdk!.Cmly_format.attribute"
                    []
                Texp_record
                  fields =
                    [
                      "a_label"
                        expression (src/cmly_write.ml[46,1675+17]..src/cmly_write.ml[46,1675+38])
                          Texp_apply
                          expression (src/cmly_write.ml[46,1675+17]..src/cmly_write.ml[46,1675+32])
                            Texp_ident "Dune__exe!.Positions.value"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[46,1675+33]..src/cmly_write.ml[46,1675+38])
                                Texp_ident "label/714"
                          ]
                      "a_payload"
                        expression (src/cmly_write.ml[47,1715+17]..src/cmly_write.ml[47,1715+36])
                          Texp_apply
                          expression (src/cmly_write.ml[47,1715+17]..src/cmly_write.ml[47,1715+28])
                            Texp_ident "raw_content/454"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[47,1715+29]..src/cmly_write.ml[47,1715+36])
                                Texp_ident "payload/715"
                          ]
                      "a_position"
                        expression (src/cmly_write.ml[48,1753+17]..src/cmly_write.ml[48,1753+49])
                          Texp_apply
                          expression (src/cmly_write.ml[48,1753+17]..src/cmly_write.ml[48,1753+22])
                            Texp_ident "range/469"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[48,1753+23]..src/cmly_write.ml[48,1753+49])
                                Texp_apply
                                expression (src/cmly_write.ml[48,1753+24]..src/cmly_write.ml[48,1753+42])
                                  Texp_ident "Dune__exe!.Positions.position"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/cmly_write.ml[48,1753+43]..src/cmly_write.ml[48,1753+48])
                                      Texp_ident "label/714"
                                ]
                          ]
                    ]
                  representation =
                    Record_regular
                  extended_expression =
                    None
          ]
    ]
  structure_item (src/cmly_write.ml[51,1809+0]..src/cmly_write.ml[52,1860+20])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[51,1809+4]..src/cmly_write.ml[51,1809+14])
          extra
            Tpat_extra_constraint
            core_type (src/cmly_write.ml[51,1809+17]..src/cmly_write.ml[51,1809+48])
              Ttyp_arrow
              Nolabel
              core_type (src/cmly_write.ml[51,1809+17]..src/cmly_write.ml[51,1809+34])
                Ttyp_constr "Dune__exe!.Syntax.attributes"
                []
              core_type (src/cmly_write.ml[51,1809+38]..src/cmly_write.ml[51,1809+48])
                Ttyp_constr "MenhirSdk!.Cmly_format.attributes"
                []
          Tpat_alias "attributes/717"
          pattern (src/cmly_write.ml[51,1809+4]..src/cmly_write.ml[51,1809+14])
            Tpat_any
        expression (src/cmly_write.ml[52,1860+2]..src/cmly_write.ml[52,1860+20])
          extra
            Texp_constraint
            core_type (src/cmly_write.ml[51,1809+17]..src/cmly_write.ml[51,1809+48])
              Ttyp_arrow
              Nolabel
              core_type (src/cmly_write.ml[51,1809+17]..src/cmly_write.ml[51,1809+34])
                Ttyp_constr "Dune__exe!.Syntax.attributes"
                []
              core_type (src/cmly_write.ml[51,1809+38]..src/cmly_write.ml[51,1809+48])
                Ttyp_constr "MenhirSdk!.Cmly_format.attributes"
                []
          Texp_apply
          expression (src/cmly_write.ml[52,1860+2]..src/cmly_write.ml[52,1860+10])
            Texp_ident "Stdlib!.List.map"
          [
            <arg>
              Nolabel
              expression (src/cmly_write.ml[52,1860+11]..src/cmly_write.ml[52,1860+20])
                Texp_ident "attribute/677"
          ]
    ]
  structure_item (src/cmly_write.ml[54,1882+0]..src/cmly_write.ml[72,2365+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[54,1882+4]..src/cmly_write.ml[54,1882+12])
          Tpat_var "terminal/718"
        expression (src/cmly_write.ml[54,1882+13]..src/cmly_write.ml[72,2365+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/cmly_write.ml[54,1882+14]..src/cmly_write.ml[54,1882+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/cmly_write.ml[54,1882+18]..src/cmly_write.ml[54,1882+28])
                    Ttyp_constr "Dune__exe!.Grammar.Terminal.t"
                    []
                Tpat_alias "t/766"
                pattern (src/cmly_write.ml[54,1882+14]..src/cmly_write.ml[54,1882+15])
                  Tpat_any
              expression (src/cmly_write.ml[55,1929+2]..src/cmly_write.ml[72,2365+3])
                extra
                  Texp_constraint
                  core_type (src/cmly_write.ml[54,1882+32]..src/cmly_write.ml[54,1882+44])
                    Ttyp_constr "MenhirSdk!.Cmly_format.terminal_def"
                    []
                Texp_record
                  fields =
                    [
                      "t_name"
                        expression (src/cmly_write.ml[69,2232+13]..src/cmly_write.ml[69,2232+29])
                          Texp_apply
                          expression (src/cmly_write.ml[69,2232+13]..src/cmly_write.ml[69,2232+27])
                            Texp_ident "Dune__exe!.Grammar.Terminal.print"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[69,2232+28]..src/cmly_write.ml[69,2232+29])
                                Texp_ident "t/766"
                          ]
                      "t_kind"
                        expression (src/cmly_write.ml[56,1933+13]..src/cmly_write.ml[68,2225+5])
                          Texp_ifthenelse
                          expression (src/cmly_write.ml[57,1948+9]..src/cmly_write.ml[57,1948+40])
                            Texp_apply
                            expression (src/cmly_write.ml[57,1948+9]..src/cmly_write.ml[57,1948+23])
                              Texp_ident "Dune__exe!.Grammar.Terminal.equal"
                            [
                              <arg>
                                Nolabel
                                expression (src/cmly_write.ml[57,1948+24]..src/cmly_write.ml[57,1948+25])
                                  Texp_ident "t/766"
                              <arg>
                                Nolabel
                                expression (src/cmly_write.ml[57,1948+26]..src/cmly_write.ml[57,1948+40])
                                  Texp_ident "Dune__exe!.Grammar.Terminal.error"
                            ]
                          expression (src/cmly_write.ml[58,1994+8]..src/cmly_write.ml[58,1994+14])
                            Texp_variant "ERROR"
                            None
                          Some
                            expression (src/cmly_write.ml[59,2009+11]..src/cmly_write.ml[67,2208+16])
                              Texp_ifthenelse
                              expression (src/cmly_write.ml[60,2023+8]..src/cmly_write.ml[62,2081+44])
                                Texp_match
                                expression (src/cmly_write.ml[60,2023+15]..src/cmly_write.ml[60,2023+27])
                                  Texp_ident "Dune__exe!.Grammar.Terminal.eof"
                                [
                                  <case>
                                    pattern (src/cmly_write.ml[61,2056+11]..src/cmly_write.ml[61,2056+15])
                                      Tpat_value
                                      pattern (src/cmly_write.ml[61,2056+11]..src/cmly_write.ml[61,2056+15])
                                        Tpat_construct "None"
                                        []
                                        None
                                    expression (src/cmly_write.ml[61,2056+19]..src/cmly_write.ml[61,2056+24])
                                      Texp_construct "false"
                                      []
                                  <case>
                                    pattern (src/cmly_write.ml[62,2081+11]..src/cmly_write.ml[62,2081+19])
                                      Tpat_value
                                      pattern (src/cmly_write.ml[62,2081+11]..src/cmly_write.ml[62,2081+19])
                                        Tpat_construct "Some"
                                        [
                                          pattern (src/cmly_write.ml[62,2081+16]..src/cmly_write.ml[62,2081+19])
                                            Tpat_var "eof/797"
                                        ]
                                        None
                                    expression (src/cmly_write.ml[62,2081+23]..src/cmly_write.ml[62,2081+43])
                                      Texp_apply
                                      expression (src/cmly_write.ml[62,2081+23]..src/cmly_write.ml[62,2081+37])
                                        Texp_ident "Dune__exe!.Grammar.Terminal.equal"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/cmly_write.ml[62,2081+38]..src/cmly_write.ml[62,2081+39])
                                            Texp_ident "t/766"
                                        <arg>
                                          Nolabel
                                          expression (src/cmly_write.ml[62,2081+40]..src/cmly_write.ml[62,2081+43])
                                            Texp_ident "eof/797"
                                      ]
                                ]
                              expression (src/cmly_write.ml[63,2131+8]..src/cmly_write.ml[63,2131+12])
                                Texp_variant "EOF"
                                None
                              Some
                                expression (src/cmly_write.ml[64,2144+11]..src/cmly_write.ml[67,2208+16])
                                  Texp_ifthenelse
                                  expression (src/cmly_write.ml[64,2144+14]..src/cmly_write.ml[64,2144+31])
                                    Texp_apply
                                    expression (src/cmly_write.ml[64,2144+14]..src/cmly_write.ml[64,2144+29])
                                      Texp_ident "Dune__exe!.Grammar.Terminal.pseudo"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/cmly_write.ml[64,2144+30]..src/cmly_write.ml[64,2144+31])
                                          Texp_ident "t/766"
                                    ]
                                  expression (src/cmly_write.ml[65,2181+8]..src/cmly_write.ml[65,2181+15])
                                    Texp_variant "PSEUDO"
                                    None
                                  Some
                                    expression (src/cmly_write.ml[67,2208+8]..src/cmly_write.ml[67,2208+16])
                                      Texp_variant "REGULAR"
                                      None
                      "t_type"
                        expression (src/cmly_write.ml[70,2263+13]..src/cmly_write.ml[70,2263+45])
                          Texp_apply
                          expression (src/cmly_write.ml[70,2263+13]..src/cmly_write.ml[70,2263+22])
                            Texp_ident "ocamltype/466"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[70,2263+23]..src/cmly_write.ml[70,2263+45])
                                Texp_apply
                                expression (src/cmly_write.ml[70,2263+24]..src/cmly_write.ml[70,2263+42])
                                  Texp_ident "Dune__exe!.Grammar.Terminal.ocamltype"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/cmly_write.ml[70,2263+43]..src/cmly_write.ml[70,2263+44])
                                      Texp_ident "t/766"
                                ]
                          ]
                      "t_attributes"
                        expression (src/cmly_write.ml[71,2310+19]..src/cmly_write.ml[71,2310+53])
                          Texp_apply
                          expression (src/cmly_write.ml[71,2310+19]..src/cmly_write.ml[71,2310+29])
                            Texp_ident "attributes/717"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[71,2310+30]..src/cmly_write.ml[71,2310+53])
                                Texp_apply
                                expression (src/cmly_write.ml[71,2310+31]..src/cmly_write.ml[71,2310+50])
                                  Texp_ident "Dune__exe!.Grammar.Terminal.attributes"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/cmly_write.ml[71,2310+51]..src/cmly_write.ml[71,2310+52])
                                      Texp_ident "t/766"
                                ]
                          ]
                    ]
                  representation =
                    Record_regular
                  extended_expression =
                    None
          ]
    ]
  structure_item (src/cmly_write.ml[74,2370+0]..src/cmly_write.ml[85,2984+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[74,2370+4]..src/cmly_write.ml[74,2370+15])
          Tpat_var "nonterminal/798"
        expression (src/cmly_write.ml[74,2370+16]..src/cmly_write.ml[85,2984+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/cmly_write.ml[74,2370+17]..src/cmly_write.ml[74,2370+19])
                extra
                  Tpat_extra_constraint
                  core_type (src/cmly_write.ml[74,2370+22]..src/cmly_write.ml[74,2370+35])
                    Ttyp_constr "Dune__exe!.Grammar.Nonterminal.t"
                    []
                Tpat_alias "nt/820"
                pattern (src/cmly_write.ml[74,2370+17]..src/cmly_write.ml[74,2370+19])
                  Tpat_any
              expression (src/cmly_write.ml[75,2427+2]..src/cmly_write.ml[85,2984+3])
                extra
                  Texp_constraint
                  core_type (src/cmly_write.ml[74,2370+39]..src/cmly_write.ml[74,2370+54])
                    Ttyp_constr "MenhirSdk!.Cmly_format.nonterminal_def"
                    []
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/cmly_write.ml[75,2427+6]..src/cmly_write.ml[75,2427+14])
                      Tpat_var "is_start/821"
                    expression (src/cmly_write.ml[75,2427+17]..src/cmly_write.ml[75,2427+49])
                      Texp_apply
                      expression (src/cmly_write.ml[75,2427+17]..src/cmly_write.ml[75,2427+46])
                        Texp_ident "Dune__exe!.Grammar.Nonterminal.is_internal_start"
                      [
                        <arg>
                          Nolabel
                          expression (src/cmly_write.ml[75,2427+47]..src/cmly_write.ml[75,2427+49])
                            Texp_ident "nt/820"
                      ]
                ]
                expression (src/cmly_write.ml[76,2480+2]..src/cmly_write.ml[85,2984+3])
                  Texp_record
                    fields =
                      [
                        "n_name"
                          expression (src/cmly_write.ml[78,2536+13]..src/cmly_write.ml[78,2536+39])
                            Texp_apply
                            expression (src/cmly_write.ml[78,2536+13]..src/cmly_write.ml[78,2536+30])
                              Texp_ident "Dune__exe!.Grammar.Nonterminal.print"
                            [
                              <arg>
                                Nolabel
                                expression (src/cmly_write.ml[78,2536+31]..src/cmly_write.ml[78,2536+36])
                                  Texp_construct "false"
                                  []
                              <arg>
                                Nolabel
                                expression (src/cmly_write.ml[78,2536+37]..src/cmly_write.ml[78,2536+39])
                                  Texp_ident "nt/820"
                            ]
                        "n_kind"
                          expression (src/cmly_write.ml[77,2484+13]..src/cmly_write.ml[77,2484+50])
                            Texp_ifthenelse
                            expression (src/cmly_write.ml[77,2484+16]..src/cmly_write.ml[77,2484+24])
                              Texp_ident "is_start/821"
                            expression (src/cmly_write.ml[77,2484+30]..src/cmly_write.ml[77,2484+36])
                              Texp_variant "START"
                              None
                            Some
                              expression (src/cmly_write.ml[77,2484+42]..src/cmly_write.ml[77,2484+50])
                                Texp_variant "REGULAR"
                                None
                        "n_mangled_name"
                          expression (src/cmly_write.ml[79,2577+21]..src/cmly_write.ml[79,2577+46])
                            Texp_apply
                            expression (src/cmly_write.ml[79,2577+21]..src/cmly_write.ml[79,2577+38])
                              Texp_ident "Dune__exe!.Grammar.Nonterminal.print"
                            [
                              <arg>
                                Nolabel
                                expression (src/cmly_write.ml[79,2577+39]..src/cmly_write.ml[79,2577+43])
                                  Texp_construct "true"
                                  []
                              <arg>
                                Nolabel
                                expression (src/cmly_write.ml[79,2577+44]..src/cmly_write.ml[79,2577+46])
                                  Texp_ident "nt/820"
                            ]
                        "n_type"
                          expression (src/cmly_write.ml[80,2625+13]..src/cmly_write.ml[80,2625+76])
                            Texp_ifthenelse
                            expression (src/cmly_write.ml[80,2625+16]..src/cmly_write.ml[80,2625+24])
                              Texp_ident "is_start/821"
                            expression (src/cmly_write.ml[80,2625+30]..src/cmly_write.ml[80,2625+34])
                              Texp_construct "None"
                              []
                            Some
                              expression (src/cmly_write.ml[80,2625+40]..src/cmly_write.ml[80,2625+76])
                                Texp_apply
                                expression (src/cmly_write.ml[80,2625+40]..src/cmly_write.ml[80,2625+49])
                                  Texp_ident "ocamltype/466"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/cmly_write.ml[80,2625+50]..src/cmly_write.ml[80,2625+76])
                                      Texp_apply
                                      expression (src/cmly_write.ml[80,2625+51]..src/cmly_write.ml[80,2625+72])
                                        Texp_ident "Dune__exe!.Grammar.Nonterminal.ocamltype"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/cmly_write.ml[80,2625+73]..src/cmly_write.ml[80,2625+75])
                                            Texp_ident "nt/820"
                                      ]
                                ]
                        "n_positions"
                          expression (src/cmly_write.ml[81,2703+18]..src/cmly_write.ml[81,2703+76])
                            Texp_ifthenelse
                            expression (src/cmly_write.ml[81,2703+21]..src/cmly_write.ml[81,2703+29])
                              Texp_ident "is_start/821"
                            expression (src/cmly_write.ml[81,2703+35]..src/cmly_write.ml[81,2703+37])
                              Texp_construct "[]"
                              []
                            Some
                              expression (src/cmly_write.ml[81,2703+43]..src/cmly_write.ml[81,2703+76])
                                Texp_apply
                                expression (src/cmly_write.ml[81,2703+43]..src/cmly_write.ml[81,2703+49])
                                  Texp_ident "ranges/610"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/cmly_write.ml[81,2703+50]..src/cmly_write.ml[81,2703+76])
                                      Texp_apply
                                      expression (src/cmly_write.ml[81,2703+51]..src/cmly_write.ml[81,2703+72])
                                        Texp_ident "Dune__exe!.Grammar.Nonterminal.positions"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/cmly_write.ml[81,2703+73]..src/cmly_write.ml[81,2703+75])
                                            Texp_ident "nt/820"
                                      ]
                                ]
                        "n_nullable"
                          expression (src/cmly_write.ml[82,2781+17]..src/cmly_write.ml[82,2781+37])
                            Texp_apply
                            expression (src/cmly_write.ml[82,2781+17]..src/cmly_write.ml[82,2781+34])
                              Texp_ident "Dune__exe!.Grammar.Analysis.nullable"
                            [
                              <arg>
                                Nolabel
                                expression (src/cmly_write.ml[82,2781+35]..src/cmly_write.ml[82,2781+37])
                                  Texp_ident "nt/820"
                            ]
                        "n_first"
                          expression (src/cmly_write.ml[83,2820+14]..src/cmly_write.ml[83,2820+78])
                            Texp_apply
                            expression (src/cmly_write.ml[83,2820+14]..src/cmly_write.ml[83,2820+22])
                              Texp_ident "Stdlib!.List.map"
                            [
                              <arg>
                                Nolabel
                                expression (src/cmly_write.ml[83,2820+23]..src/cmly_write.ml[83,2820+35])
                                  Texp_ident "Dune__exe!.Grammar.Terminal.t2i"
                              <arg>
                                Nolabel
                                expression (src/cmly_write.ml[83,2820+36]..src/cmly_write.ml[83,2820+78])
                                  Texp_apply
                                  expression (src/cmly_write.ml[83,2820+37]..src/cmly_write.ml[83,2820+57])
                                    Texp_ident "Dune__exe!.Grammar.TerminalSet.elements"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/cmly_write.ml[83,2820+58]..src/cmly_write.ml[83,2820+77])
                                        Texp_apply
                                        expression (src/cmly_write.ml[83,2820+59]..src/cmly_write.ml[83,2820+73])
                                          Texp_ident "Dune__exe!.Grammar.Analysis.first"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/cmly_write.ml[83,2820+74]..src/cmly_write.ml[83,2820+76])
                                              Texp_ident "nt/820"
                                        ]
                                  ]
                            ]
                        "n_attributes"
                          expression (src/cmly_write.ml[84,2900+19]..src/cmly_write.ml[84,2900+82])
                            Texp_ifthenelse
                            expression (src/cmly_write.ml[84,2900+22]..src/cmly_write.ml[84,2900+30])
                              Texp_ident "is_start/821"
                            expression (src/cmly_write.ml[84,2900+36]..src/cmly_write.ml[84,2900+38])
                              Texp_construct "[]"
                              []
                            Some
                              expression (src/cmly_write.ml[84,2900+44]..src/cmly_write.ml[84,2900+82])
                                Texp_apply
                                expression (src/cmly_write.ml[84,2900+44]..src/cmly_write.ml[84,2900+54])
                                  Texp_ident "attributes/717"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/cmly_write.ml[84,2900+55]..src/cmly_write.ml[84,2900+82])
                                      Texp_apply
                                      expression (src/cmly_write.ml[84,2900+56]..src/cmly_write.ml[84,2900+78])
                                        Texp_ident "Dune__exe!.Grammar.Nonterminal.attributes"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/cmly_write.ml[84,2900+79]..src/cmly_write.ml[84,2900+81])
                                            Texp_ident "nt/820"
                                      ]
                                ]
                      ]
                    representation =
                      Record_regular
                    extended_expression =
                      None
          ]
    ]
  structure_item (src/cmly_write.ml[87,2989+0]..src/cmly_write.ml[90,3085+36])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[87,2989+4]..src/cmly_write.ml[87,2989+10])
          Tpat_var "symbol/899"
        expression (src/cmly_write.ml[87,2989+11]..src/cmly_write.ml[90,3085+36]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/cmly_write.ml[87,2989+12]..src/cmly_write.ml[87,2989+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/cmly_write.ml[87,2989+18]..src/cmly_write.ml[87,2989+26])
                    Ttyp_constr "Dune__exe!.Grammar.Symbol.t"
                    []
                Tpat_alias "sym/912"
                pattern (src/cmly_write.ml[87,2989+12]..src/cmly_write.ml[87,2989+15])
                  Tpat_any
              expression (src/cmly_write.ml[88,3028+2]..src/cmly_write.ml[90,3085+36])
                extra
                  Texp_constraint
                  core_type (src/cmly_write.ml[87,2989+30]..src/cmly_write.ml[87,2989+36])
                    Ttyp_constr "MenhirSdk!.Cmly_format.symbol"
                    []
                Texp_match
                expression (src/cmly_write.ml[88,3028+8]..src/cmly_write.ml[88,3028+11])
                  Texp_ident "sym/912"
                [
                  <case>
                    pattern (src/cmly_write.ml[89,3045+4]..src/cmly_write.ml[89,3045+14])
                      Tpat_value
                      pattern (src/cmly_write.ml[89,3045+4]..src/cmly_write.ml[89,3045+14])
                        Tpat_construct "Symbol.N"
                        [
                          pattern (src/cmly_write.ml[89,3045+13]..src/cmly_write.ml[89,3045+14])
                            Tpat_var "n/924"
                        ]
                        None
                    expression (src/cmly_write.ml[89,3045+18]..src/cmly_write.ml[89,3045+39])
                      Texp_construct "N"
                      [
                        expression (src/cmly_write.ml[89,3045+20]..src/cmly_write.ml[89,3045+39])
                          Texp_apply
                          expression (src/cmly_write.ml[89,3045+21]..src/cmly_write.ml[89,3045+36])
                            Texp_ident "Dune__exe!.Grammar.Nonterminal.n2i"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[89,3045+37]..src/cmly_write.ml[89,3045+38])
                                Texp_ident "n/924"
                          ]
                      ]
                  <case>
                    pattern (src/cmly_write.ml[90,3085+4]..src/cmly_write.ml[90,3085+14])
                      Tpat_value
                      pattern (src/cmly_write.ml[90,3085+4]..src/cmly_write.ml[90,3085+14])
                        Tpat_construct "Symbol.T"
                        [
                          pattern (src/cmly_write.ml[90,3085+13]..src/cmly_write.ml[90,3085+14])
                            Tpat_var "t/925"
                        ]
                        None
                    expression (src/cmly_write.ml[90,3085+18]..src/cmly_write.ml[90,3085+36])
                      Texp_construct "T"
                      [
                        expression (src/cmly_write.ml[90,3085+20]..src/cmly_write.ml[90,3085+36])
                          Texp_apply
                          expression (src/cmly_write.ml[90,3085+21]..src/cmly_write.ml[90,3085+33])
                            Texp_ident "Dune__exe!.Grammar.Terminal.t2i"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[90,3085+34]..src/cmly_write.ml[90,3085+35])
                                Texp_ident "t/925"
                          ]
                      ]
                ]
          ]
    ]
  structure_item (src/cmly_write.ml[92,3123+0]..src/cmly_write.ml[96,3289+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[92,3123+4]..src/cmly_write.ml[92,3123+10])
          Tpat_var "action/926"
        expression (src/cmly_write.ml[92,3123+11]..src/cmly_write.ml[96,3289+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/cmly_write.ml[92,3123+12]..src/cmly_write.ml[92,3123+13])
                extra
                  Tpat_extra_constraint
                  core_type (src/cmly_write.ml[92,3123+16]..src/cmly_write.ml[92,3123+24])
                    Ttyp_constr "Dune__exe!.Action.t"
                    []
                Tpat_alias "a/946"
                pattern (src/cmly_write.ml[92,3123+12]..src/cmly_write.ml[92,3123+13])
                  Tpat_any
              expression (src/cmly_write.ml[93,3160+2]..src/cmly_write.ml[96,3289+3])
                extra
                  Texp_constraint
                  core_type (src/cmly_write.ml[92,3123+28]..src/cmly_write.ml[92,3123+34])
                    Ttyp_constr "MenhirSdk!.Cmly_format.action"
                    []
                Texp_record
                  fields =
                    [
                      "a_expr"
                        expression (src/cmly_write.ml[94,3164+13]..src/cmly_write.ml[94,3164+57])
                          Texp_apply
                          expression (src/cmly_write.ml[94,3164+13]..src/cmly_write.ml[94,3164+35])
                            Texp_ident "Dune__exe!.Printer.string_of_expr"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[94,3164+36]..src/cmly_write.ml[94,3164+57])
                                Texp_apply
                                expression (src/cmly_write.ml[94,3164+37]..src/cmly_write.ml[94,3164+54])
                                  Texp_ident "Dune__exe!.Action.to_il_expr"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/cmly_write.ml[94,3164+55]..src/cmly_write.ml[94,3164+56])
                                      Texp_ident "a/946"
                                ]
                          ]
                      "a_keywords"
                        expression (src/cmly_write.ml[95,3223+17]..src/cmly_write.ml[95,3223+64])
                          Texp_apply
                          expression (src/cmly_write.ml[95,3223+17]..src/cmly_write.ml[95,3223+44])
                            Texp_ident "MenhirSdk!.Keyword.KeywordSet.elements"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[95,3223+45]..src/cmly_write.ml[95,3223+64])
                                Texp_apply
                                expression (src/cmly_write.ml[95,3223+46]..src/cmly_write.ml[95,3223+61])
                                  Texp_ident "Dune__exe!.Action.keywords"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/cmly_write.ml[95,3223+62]..src/cmly_write.ml[95,3223+63])
                                      Texp_ident "a/946"
                                ]
                          ]
                    ]
                  representation =
                    Record_regular
                  extended_expression =
                    None
          ]
    ]
  structure_item (src/cmly_write.ml[98,3294+0]..src/cmly_write.ml[107,3645+29])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[98,3294+4]..src/cmly_write.ml[98,3294+7])
          Tpat_var "rhs/1125"
        expression (src/cmly_write.ml[98,3294+8]..src/cmly_write.ml[107,3645+29]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/cmly_write.ml[98,3294+9]..src/cmly_write.ml[98,3294+13])
                extra
                  Tpat_extra_constraint
                  core_type (src/cmly_write.ml[98,3294+16]..src/cmly_write.ml[98,3294+32])
                    Ttyp_constr "Dune__exe!.Grammar.Production.index"
                    []
                Tpat_alias "prod/1161"
                pattern (src/cmly_write.ml[98,3294+9]..src/cmly_write.ml[98,3294+13])
                  Tpat_any
              expression (src/cmly_write.ml[99,3351+2]..src/cmly_write.ml[107,3645+29])
                extra
                  Texp_constraint
                  core_type (src/cmly_write.ml[98,3294+36]..src/cmly_write.ml[98,3294+54])
                    Ttyp_constr "array/8!"
                    [
                      core_type (src/cmly_write.ml[98,3294+36]..src/cmly_write.ml[98,3294+48])
                        Ttyp_constr "MenhirSdk!.Cmly_format.producer_def"
                        []
                    ]
                Texp_match
                expression (src/cmly_write.ml[99,3351+8]..src/cmly_write.ml[99,3351+32])
                  Texp_apply
                  expression (src/cmly_write.ml[99,3351+8]..src/cmly_write.ml[99,3351+27])
                    Texp_ident "Dune__exe!.Grammar.Production.classify"
                  [
                    <arg>
                      Nolabel
                      expression (src/cmly_write.ml[99,3351+28]..src/cmly_write.ml[99,3351+32])
                        Texp_ident "prod/1161"
                  ]
                [
                  <case>
                    pattern (src/cmly_write.ml[100,3389+4]..src/cmly_write.ml[100,3389+10])
                      Tpat_value
                      pattern (src/cmly_write.ml[100,3389+4]..src/cmly_write.ml[100,3389+10])
                        Tpat_construct "Some"
                        [
                          pattern (src/cmly_write.ml[100,3389+9]..src/cmly_write.ml[100,3389+10])
                            Tpat_var "n/1196"
                        ]
                        None
                    expression (src/cmly_write.ml[101,3403+6]..src/cmly_write.ml[101,3403+43])
                      Texp_array
                      [
                        expression (src/cmly_write.ml[101,3403+9]..src/cmly_write.ml[101,3403+40])
                          Texp_tuple
                          [
                            expression (src/cmly_write.ml[101,3403+10]..src/cmly_write.ml[101,3403+31])
                              Texp_construct "N"
                              [
                                expression (src/cmly_write.ml[101,3403+12]..src/cmly_write.ml[101,3403+31])
                                  Texp_apply
                                  expression (src/cmly_write.ml[101,3403+13]..src/cmly_write.ml[101,3403+28])
                                    Texp_ident "Dune__exe!.Grammar.Nonterminal.n2i"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/cmly_write.ml[101,3403+29]..src/cmly_write.ml[101,3403+30])
                                        Texp_ident "n/1196"
                                  ]
                              ]
                            expression (src/cmly_write.ml[101,3403+33]..src/cmly_write.ml[101,3403+35])
                              Texp_constant Const_string("",(src/cmly_write.ml[101,3403+34]..src/cmly_write.ml[101,3403+34]),None)
                            expression (src/cmly_write.ml[101,3403+37]..src/cmly_write.ml[101,3403+39])
                              Texp_construct "[]"
                              []
                          ]
                      ]
                  <case>
                    pattern (src/cmly_write.ml[102,3447+4]..src/cmly_write.ml[102,3447+8])
                      Tpat_value
                      pattern (src/cmly_write.ml[102,3447+4]..src/cmly_write.ml[102,3447+8])
                        Tpat_construct "None"
                        []
                        None
                    expression (src/cmly_write.ml[103,3459+6]..src/cmly_write.ml[107,3645+29])
                      Texp_apply
                      expression (src/cmly_write.ml[103,3459+6]..src/cmly_write.ml[103,3459+16])
                        Texp_ident "Stdlib!.Array.mapi"
                      [
                        <arg>
                          Nolabel
                          expression (src/cmly_write.ml[103,3459+17]..src/cmly_write.ml[107,3645+7])
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/cmly_write.ml[103,3459+22]..src/cmly_write.ml[103,3459+23])
                                  Tpat_var "i/1245"
                                expression (src/cmly_write.ml[103,3459+24]..src/cmly_write.ml[106,3615+29]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/cmly_write.ml[103,3459+24]..src/cmly_write.ml[103,3459+27])
                                        Tpat_var "sym/1246"
                                      expression (src/cmly_write.ml[104,3490+8]..src/cmly_write.ml[106,3615+29])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/cmly_write.ml[104,3490+12]..src/cmly_write.ml[104,3490+14])
                                              Tpat_var "id/1247"
                                            expression (src/cmly_write.ml[104,3490+17]..src/cmly_write.ml[104,3490+50])
                                              Texp_apply
                                              expression (src/cmly_write.ml[104,3490+17]..src/cmly_write.ml[104,3490+50]) ghost
                                                Texp_ident "Stdlib!.Array.get"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/cmly_write.ml[104,3490+17]..src/cmly_write.ml[104,3490+46])
                                                    Texp_apply
                                                    expression (src/cmly_write.ml[104,3490+18]..src/cmly_write.ml[104,3490+40])
                                                      Texp_ident "Dune__exe!.Grammar.Production.identifiers"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/cmly_write.ml[104,3490+41]..src/cmly_write.ml[104,3490+45])
                                                          Texp_ident "prod/1161"
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (src/cmly_write.ml[104,3490+48]..src/cmly_write.ml[104,3490+49])
                                                    Texp_ident "i/1245"
                                              ]
                                        ]
                                        expression (src/cmly_write.ml[105,3544+8]..src/cmly_write.ml[106,3615+29])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/cmly_write.ml[105,3544+12]..src/cmly_write.ml[105,3544+17])
                                                Tpat_var "attrs/1248"
                                              expression (src/cmly_write.ml[105,3544+20]..src/cmly_write.ml[105,3544+67])
                                                Texp_apply
                                                expression (src/cmly_write.ml[105,3544+20]..src/cmly_write.ml[105,3544+30])
                                                  Texp_ident "attributes/717"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/cmly_write.ml[105,3544+31]..src/cmly_write.ml[105,3544+67])
                                                      Texp_apply
                                                      expression (src/cmly_write.ml[105,3544+31]..src/cmly_write.ml[105,3544+67]) ghost
                                                        Texp_ident "Stdlib!.Array.get"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/cmly_write.ml[105,3544+31]..src/cmly_write.ml[105,3544+63])
                                                            Texp_apply
                                                            expression (src/cmly_write.ml[105,3544+32]..src/cmly_write.ml[105,3544+57])
                                                              Texp_ident "Dune__exe!.Grammar.Production.rhs_attributes"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/cmly_write.ml[105,3544+58]..src/cmly_write.ml[105,3544+62])
                                                                  Texp_ident "prod/1161"
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/cmly_write.ml[105,3544+65]..src/cmly_write.ml[105,3544+66])
                                                            Texp_ident "i/1245"
                                                      ]
                                                ]
                                          ]
                                          expression (src/cmly_write.ml[106,3615+8]..src/cmly_write.ml[106,3615+29])
                                            Texp_tuple
                                            [
                                              expression (src/cmly_write.ml[106,3615+8]..src/cmly_write.ml[106,3615+18])
                                                Texp_apply
                                                expression (src/cmly_write.ml[106,3615+8]..src/cmly_write.ml[106,3615+14])
                                                  Texp_ident "symbol/899"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/cmly_write.ml[106,3615+15]..src/cmly_write.ml[106,3615+18])
                                                      Texp_ident "sym/1246"
                                                ]
                                              expression (src/cmly_write.ml[106,3615+20]..src/cmly_write.ml[106,3615+22])
                                                Texp_ident "id/1247"
                                              expression (src/cmly_write.ml[106,3615+24]..src/cmly_write.ml[106,3615+29])
                                                Texp_ident "attrs/1248"
                                            ]
                                  ]
                            ]
                        <arg>
                          Nolabel
                          expression (src/cmly_write.ml[107,3645+8]..src/cmly_write.ml[107,3645+29])
                            Texp_apply
                            expression (src/cmly_write.ml[107,3645+9]..src/cmly_write.ml[107,3645+23])
                              Texp_ident "Dune__exe!.Grammar.Production.rhs"
                            [
                              <arg>
                                Nolabel
                                expression (src/cmly_write.ml[107,3645+24]..src/cmly_write.ml[107,3645+28])
                                  Texp_ident "prod/1161"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/cmly_write.ml[109,3676+0]..src/cmly_write.ml[118,4111+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[109,3676+4]..src/cmly_write.ml[109,3676+14])
          Tpat_var "production/1249"
        expression (src/cmly_write.ml[109,3676+15]..src/cmly_write.ml[118,4111+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/cmly_write.ml[109,3676+16]..src/cmly_write.ml[109,3676+20])
                extra
                  Tpat_extra_constraint
                  core_type (src/cmly_write.ml[109,3676+23]..src/cmly_write.ml[109,3676+39])
                    Ttyp_constr "Dune__exe!.Grammar.Production.index"
                    []
                Tpat_alias "prod/1251"
                pattern (src/cmly_write.ml[109,3676+16]..src/cmly_write.ml[109,3676+20])
                  Tpat_any
              expression (src/cmly_write.ml[110,3736+2]..src/cmly_write.ml[118,4111+3])
                extra
                  Texp_constraint
                  core_type (src/cmly_write.ml[109,3676+43]..src/cmly_write.ml[109,3676+57])
                    Ttyp_constr "MenhirSdk!.Cmly_format.production_def"
                    []
                Texp_record
                  fields =
                    [
                      "p_kind"
                        expression (src/cmly_write.ml[111,3740+13]..src/cmly_write.ml[111,3740+66])
                          Texp_ifthenelse
                          expression (src/cmly_write.ml[111,3740+16]..src/cmly_write.ml[111,3740+40])
                            Texp_apply
                            expression (src/cmly_write.ml[111,3740+16]..src/cmly_write.ml[111,3740+35])
                              Texp_ident "Dune__exe!.Grammar.Production.is_start"
                            [
                              <arg>
                                Nolabel
                                expression (src/cmly_write.ml[111,3740+36]..src/cmly_write.ml[111,3740+40])
                                  Texp_ident "prod/1251"
                            ]
                          expression (src/cmly_write.ml[111,3740+46]..src/cmly_write.ml[111,3740+52])
                            Texp_variant "START"
                            None
                          Some
                            expression (src/cmly_write.ml[111,3740+58]..src/cmly_write.ml[111,3740+66])
                              Texp_variant "REGULAR"
                              None
                      "p_lhs"
                        expression (src/cmly_write.ml[112,3808+12]..src/cmly_write.ml[112,3808+48])
                          Texp_apply
                          expression (src/cmly_write.ml[112,3808+12]..src/cmly_write.ml[112,3808+27])
                            Texp_ident "Dune__exe!.Grammar.Nonterminal.n2i"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[112,3808+28]..src/cmly_write.ml[112,3808+48])
                                Texp_apply
                                expression (src/cmly_write.ml[112,3808+29]..src/cmly_write.ml[112,3808+42])
                                  Texp_ident "Dune__exe!.Grammar.Production.nt"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/cmly_write.ml[112,3808+43]..src/cmly_write.ml[112,3808+47])
                                      Texp_ident "prod/1251"
                                ]
                          ]
                      "p_rhs"
                        expression (src/cmly_write.ml[113,3858+12]..src/cmly_write.ml[113,3858+20])
                          Texp_apply
                          expression (src/cmly_write.ml[113,3858+12]..src/cmly_write.ml[113,3858+15])
                            Texp_ident "rhs/1125"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[113,3858+16]..src/cmly_write.ml[113,3858+20])
                                Texp_ident "prod/1251"
                          ]
                      "p_positions"
                        expression (src/cmly_write.ml[114,3880+18]..src/cmly_write.ml[114,3880+52])
                          Texp_apply
                          expression (src/cmly_write.ml[114,3880+18]..src/cmly_write.ml[114,3880+24])
                            Texp_ident "ranges/610"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[114,3880+25]..src/cmly_write.ml[114,3880+52])
                                Texp_apply
                                expression (src/cmly_write.ml[114,3880+26]..src/cmly_write.ml[114,3880+46])
                                  Texp_ident "Dune__exe!.Grammar.Production.positions"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/cmly_write.ml[114,3880+47]..src/cmly_write.ml[114,3880+51])
                                      Texp_ident "prod/1251"
                                ]
                          ]
                      "p_action"
                        expression (src/cmly_write.ml[115,3934+15]..src/cmly_write.ml[116,3987+58])
                          Texp_ifthenelse
                          expression (src/cmly_write.ml[115,3934+18]..src/cmly_write.ml[115,3934+42])
                            Texp_apply
                            expression (src/cmly_write.ml[115,3934+18]..src/cmly_write.ml[115,3934+37])
                              Texp_ident "Dune__exe!.Grammar.Production.is_start"
                            [
                              <arg>
                                Nolabel
                                expression (src/cmly_write.ml[115,3934+38]..src/cmly_write.ml[115,3934+42])
                                  Texp_ident "prod/1251"
                            ]
                          expression (src/cmly_write.ml[115,3934+48]..src/cmly_write.ml[115,3934+52])
                            Texp_construct "None"
                            []
                          Some
                            expression (src/cmly_write.ml[116,3987+20]..src/cmly_write.ml[116,3987+58])
                              Texp_construct "Some"
                              [
                                expression (src/cmly_write.ml[116,3987+25]..src/cmly_write.ml[116,3987+58])
                                  Texp_apply
                                  expression (src/cmly_write.ml[116,3987+26]..src/cmly_write.ml[116,3987+32])
                                    Texp_ident "action/926"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/cmly_write.ml[116,3987+33]..src/cmly_write.ml[116,3987+57])
                                        Texp_apply
                                        expression (src/cmly_write.ml[116,3987+34]..src/cmly_write.ml[116,3987+51])
                                          Texp_ident "Dune__exe!.Grammar.Production.action"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/cmly_write.ml[116,3987+52]..src/cmly_write.ml[116,3987+56])
                                              Texp_ident "prod/1251"
                                        ]
                                  ]
                              ]
                      "p_attributes"
                        expression (src/cmly_write.ml[117,4047+19]..src/cmly_write.ml[117,4047+62])
                          Texp_apply
                          expression (src/cmly_write.ml[117,4047+19]..src/cmly_write.ml[117,4047+29])
                            Texp_ident "attributes/717"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[117,4047+30]..src/cmly_write.ml[117,4047+62])
                                Texp_apply
                                expression (src/cmly_write.ml[117,4047+31]..src/cmly_write.ml[117,4047+56])
                                  Texp_ident "Dune__exe!.Grammar.Production.lhs_attributes"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/cmly_write.ml[117,4047+57]..src/cmly_write.ml[117,4047+61])
                                      Texp_ident "prod/1251"
                                ]
                          ]
                    ]
                  representation =
                    Record_regular
                  extended_expression =
                    None
          ]
    ]
  structure_item (src/cmly_write.ml[120,4116+0]..src/cmly_write.ml[122,4189+23])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[120,4116+4]..src/cmly_write.ml[120,4116+8])
          Tpat_var "item/1252"
        expression (src/cmly_write.ml[120,4116+9]..src/cmly_write.ml[122,4189+23]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/cmly_write.ml[120,4116+10]..src/cmly_write.ml[120,4116+11])
                extra
                  Tpat_extra_constraint
                  core_type (src/cmly_write.ml[120,4116+14]..src/cmly_write.ml[120,4116+20])
                    Ttyp_constr "Dune__exe!.Item.t"
                    []
                Tpat_alias "i/1268"
                pattern (src/cmly_write.ml[120,4116+10]..src/cmly_write.ml[120,4116+11])
                  Tpat_any
              expression (src/cmly_write.ml[121,4159+2]..src/cmly_write.ml[122,4189+23])
                extra
                  Texp_constraint
                  core_type (src/cmly_write.ml[120,4116+24]..src/cmly_write.ml[120,4116+40])
                    Ttyp_tuple
                    [
                      core_type (src/cmly_write.ml[120,4116+24]..src/cmly_write.ml[120,4116+34])
                        Ttyp_constr "MenhirSdk!.Cmly_format.production"
                        []
                      core_type (src/cmly_write.ml[120,4116+37]..src/cmly_write.ml[120,4116+40])
                        Ttyp_constr "int/1!"
                        []
                    ]
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/cmly_write.ml[121,4159+6]..src/cmly_write.ml[121,4159+10])
                      Tpat_tuple
                      [
                        pattern (src/cmly_write.ml[121,4159+6]..src/cmly_write.ml[121,4159+7])
                          Tpat_var "p/1269"
                        pattern (src/cmly_write.ml[121,4159+9]..src/cmly_write.ml[121,4159+10])
                          Tpat_var "i/1270"
                      ]
                    expression (src/cmly_write.ml[121,4159+13]..src/cmly_write.ml[121,4159+26])
                      Texp_apply
                      expression (src/cmly_write.ml[121,4159+13]..src/cmly_write.ml[121,4159+24])
                        Texp_ident "Dune__exe!.Item.export"
                      [
                        <arg>
                          Nolabel
                          expression (src/cmly_write.ml[121,4159+25]..src/cmly_write.ml[121,4159+26])
                            Texp_ident "i/1268"
                      ]
                ]
                expression (src/cmly_write.ml[122,4189+2]..src/cmly_write.ml[122,4189+23])
                  Texp_tuple
                  [
                    expression (src/cmly_write.ml[122,4189+3]..src/cmly_write.ml[122,4189+19])
                      Texp_apply
                      expression (src/cmly_write.ml[122,4189+3]..src/cmly_write.ml[122,4189+17])
                        Texp_ident "Dune__exe!.Grammar.Production.p2i"
                      [
                        <arg>
                          Nolabel
                          expression (src/cmly_write.ml[122,4189+18]..src/cmly_write.ml[122,4189+19])
                            Texp_ident "p/1269"
                      ]
                    expression (src/cmly_write.ml[122,4189+21]..src/cmly_write.ml[122,4189+22])
                      Texp_ident "i/1270"
                  ]
          ]
    ]
  structure_item (src/cmly_write.ml[124,4214+0]..src/cmly_write.ml[125,4272+38])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[124,4214+4]..src/cmly_write.ml[124,4214+11])
          Tpat_var "itemset/1286"
        expression (src/cmly_write.ml[124,4214+12]..src/cmly_write.ml[125,4272+38]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/cmly_write.ml[124,4214+13]..src/cmly_write.ml[124,4214+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/cmly_write.ml[124,4214+18]..src/cmly_write.ml[124,4214+28])
                    Ttyp_constr "Dune__exe!.Item.Set.t"
                    []
                Tpat_alias "is/1308"
                pattern (src/cmly_write.ml[124,4214+13]..src/cmly_write.ml[124,4214+15])
                  Tpat_any
              expression (src/cmly_write.ml[125,4272+2]..src/cmly_write.ml[125,4272+38])
                extra
                  Texp_constraint
                  core_type (src/cmly_write.ml[124,4214+32]..src/cmly_write.ml[124,4214+55])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/cmly_write.ml[124,4214+33]..src/cmly_write.ml[124,4214+49])
                        Ttyp_tuple
                        [
                          core_type (src/cmly_write.ml[124,4214+33]..src/cmly_write.ml[124,4214+43])
                            Ttyp_constr "MenhirSdk!.Cmly_format.production"
                            []
                          core_type (src/cmly_write.ml[124,4214+46]..src/cmly_write.ml[124,4214+49])
                            Ttyp_constr "int/1!"
                            []
                        ]
                    ]
                Texp_apply
                expression (src/cmly_write.ml[125,4272+2]..src/cmly_write.ml[125,4272+10])
                  Texp_ident "Stdlib!.List.map"
                [
                  <arg>
                    Nolabel
                    expression (src/cmly_write.ml[125,4272+11]..src/cmly_write.ml[125,4272+15])
                      Texp_ident "item/1252"
                  <arg>
                    Nolabel
                    expression (src/cmly_write.ml[125,4272+16]..src/cmly_write.ml[125,4272+38])
                      Texp_apply
                      expression (src/cmly_write.ml[125,4272+17]..src/cmly_write.ml[125,4272+34])
                        Texp_ident "Dune__exe!.Item.Set.elements"
                      [
                        <arg>
                          Nolabel
                          expression (src/cmly_write.ml[125,4272+35]..src/cmly_write.ml[125,4272+37])
                            Texp_ident "is/1308"
                      ]
                ]
          ]
    ]
  structure_item (src/cmly_write.ml[127,4312+0]..src/cmly_write.ml[131,4472+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[127,4312+4]..src/cmly_write.ml[127,4312+13])
          Tpat_var "lr0_state/1329"
        expression (src/cmly_write.ml[127,4312+14]..src/cmly_write.ml[131,4472+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/cmly_write.ml[127,4312+15]..src/cmly_write.ml[127,4312+19])
                extra
                  Tpat_extra_constraint
                  core_type (src/cmly_write.ml[127,4312+22]..src/cmly_write.ml[127,4312+30])
                    Ttyp_constr "Dune__exe!.Lr0.node"
                    []
                Tpat_alias "node/1369"
                pattern (src/cmly_write.ml[127,4312+15]..src/cmly_write.ml[127,4312+19])
                  Tpat_any
              expression (src/cmly_write.ml[128,4362+2]..src/cmly_write.ml[131,4472+3])
                extra
                  Texp_constraint
                  core_type (src/cmly_write.ml[127,4312+34]..src/cmly_write.ml[127,4312+47])
                    Ttyp_constr "MenhirSdk!.Cmly_format.lr0_state_def"
                    []
                Texp_record
                  fields =
                    [
                      "lr0_incoming"
                        expression (src/cmly_write.ml[129,4366+19]..src/cmly_write.ml[129,4366+63])
                          Texp_apply
                          expression (src/cmly_write.ml[129,4366+19]..src/cmly_write.ml[129,4366+29])
                            Texp_ident "Dune__exe!.Option.map"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[129,4366+30]..src/cmly_write.ml[129,4366+36])
                                Texp_ident "symbol/899"
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[129,4366+37]..src/cmly_write.ml[129,4366+63])
                                Texp_apply
                                expression (src/cmly_write.ml[129,4366+38]..src/cmly_write.ml[129,4366+57])
                                  Texp_ident "Dune__exe!.Lr0.incoming_symbol"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/cmly_write.ml[129,4366+58]..src/cmly_write.ml[129,4366+62])
                                      Texp_ident "node/1369"
                                ]
                          ]
                      "lr0_items"
                        expression (src/cmly_write.ml[130,4431+16]..src/cmly_write.ml[130,4431+40])
                          Texp_apply
                          expression (src/cmly_write.ml[130,4431+16]..src/cmly_write.ml[130,4431+23])
                            Texp_ident "itemset/1286"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[130,4431+24]..src/cmly_write.ml[130,4431+40])
                                Texp_apply
                                expression (src/cmly_write.ml[130,4431+25]..src/cmly_write.ml[130,4431+34])
                                  Texp_ident "Dune__exe!.Lr0.items"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/cmly_write.ml[130,4431+35]..src/cmly_write.ml[130,4431+39])
                                      Texp_ident "node/1369"
                                ]
                          ]
                    ]
                  representation =
                    Record_regular
                  extended_expression =
                    None
          ]
    ]
  structure_item (src/cmly_write.ml[133,4477+0]..src/cmly_write.ml[134,4521+31])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[133,4477+4]..src/cmly_write.ml[133,4477+14])
          Tpat_var "transition/1381"
        expression (src/cmly_write.ml[133,4477+15]..src/cmly_write.ml[134,4521+31]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/cmly_write.ml[133,4477+15]..src/cmly_write.ml[133,4477+26])
                Tpat_tuple
                [
                  pattern (src/cmly_write.ml[133,4477+16]..src/cmly_write.ml[133,4477+19])
                    Tpat_var "sym/1383"
                  pattern (src/cmly_write.ml[133,4477+21]..src/cmly_write.ml[133,4477+25])
                    Tpat_var "node/1384"
                ]
              expression (src/cmly_write.ml[134,4521+2]..src/cmly_write.ml[134,4521+31])
                extra
                  Texp_constraint
                  core_type (src/cmly_write.ml[133,4477+29]..src/cmly_write.ml[133,4477+41])
                    Ttyp_tuple
                    [
                      core_type (src/cmly_write.ml[133,4477+29]..src/cmly_write.ml[133,4477+35])
                        Ttyp_constr "MenhirSdk!.Cmly_format.symbol"
                        []
                      core_type (src/cmly_write.ml[133,4477+38]..src/cmly_write.ml[133,4477+41])
                        Ttyp_constr "MenhirSdk!.Cmly_format.lr1"
                        []
                    ]
                Texp_tuple
                [
                  expression (src/cmly_write.ml[134,4521+3]..src/cmly_write.ml[134,4521+13])
                    Texp_apply
                    expression (src/cmly_write.ml[134,4521+3]..src/cmly_write.ml[134,4521+9])
                      Texp_ident "symbol/899"
                    [
                      <arg>
                        Nolabel
                        expression (src/cmly_write.ml[134,4521+10]..src/cmly_write.ml[134,4521+13])
                          Texp_ident "sym/1383"
                    ]
                  expression (src/cmly_write.ml[134,4521+15]..src/cmly_write.ml[134,4521+30])
                    Texp_apply
                    expression (src/cmly_write.ml[134,4521+15]..src/cmly_write.ml[134,4521+25])
                      Texp_ident "Dune__exe!.Lr1.number"
                    [
                      <arg>
                        Nolabel
                        expression (src/cmly_write.ml[134,4521+26]..src/cmly_write.ml[134,4521+30])
                          Texp_ident "node/1384"
                    ]
                ]
          ]
    ]
  structure_item (src/cmly_write.ml[136,4554+0]..src/cmly_write.ml[144,4897+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[136,4554+4]..src/cmly_write.ml[136,4554+13])
          Tpat_var "lr1_state/1468"
        expression (src/cmly_write.ml[136,4554+14]..src/cmly_write.ml[144,4897+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/cmly_write.ml[136,4554+15]..src/cmly_write.ml[136,4554+19])
                extra
                  Tpat_extra_constraint
                  core_type (src/cmly_write.ml[136,4554+22]..src/cmly_write.ml[136,4554+30])
                    Ttyp_constr "Dune__exe!.Lr1.node"
                    []
                Tpat_alias "node/1470"
                pattern (src/cmly_write.ml[136,4554+15]..src/cmly_write.ml[136,4554+19])
                  Tpat_any
              expression (src/cmly_write.ml[137,4604+2]..src/cmly_write.ml[144,4897+3])
                extra
                  Texp_constraint
                  core_type (src/cmly_write.ml[136,4554+34]..src/cmly_write.ml[136,4554+47])
                    Ttyp_constr "MenhirSdk!.Cmly_format.lr1_state_def"
                    []
                Texp_record
                  fields =
                    [
                      "lr1_lr0"
                        expression (src/cmly_write.ml[138,4608+14]..src/cmly_write.ml[138,4608+39])
                          Texp_apply
                          expression (src/cmly_write.ml[138,4608+14]..src/cmly_write.ml[138,4608+22])
                            Texp_ident "Dune__exe!.Lr0.core"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[138,4608+23]..src/cmly_write.ml[138,4608+39])
                                Texp_apply
                                expression (src/cmly_write.ml[138,4608+24]..src/cmly_write.ml[138,4608+33])
                                  Texp_ident "Dune__exe!.Lr1.state"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/cmly_write.ml[138,4608+34]..src/cmly_write.ml[138,4608+38])
                                      Texp_ident "node/1470"
                                ]
                          ]
                      "lr1_transitions"
                        expression (src/cmly_write.ml[140,4671+6]..src/cmly_write.ml[140,4671+69])
                          Texp_apply
                          expression (src/cmly_write.ml[140,4671+6]..src/cmly_write.ml[140,4671+14])
                            Texp_ident "Stdlib!.List.map"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[140,4671+15]..src/cmly_write.ml[140,4671+25])
                                Texp_ident "transition/1381"
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[140,4671+26]..src/cmly_write.ml[140,4671+69])
                                Texp_apply
                                expression (src/cmly_write.ml[140,4671+27]..src/cmly_write.ml[140,4671+45])
                                  Texp_ident "Dune__exe!.Grammar.SymbolMap.bindings"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/cmly_write.ml[140,4671+46]..src/cmly_write.ml[140,4671+68])
                                      Texp_apply
                                      expression (src/cmly_write.ml[140,4671+47]..src/cmly_write.ml[140,4671+62])
                                        Texp_ident "Dune__exe!.Lr1.transitions"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/cmly_write.ml[140,4671+63]..src/cmly_write.ml[140,4671+67])
                                            Texp_ident "node/1470"
                                      ]
                                ]
                          ]
                      "lr1_reductions"
                        expression (src/cmly_write.ml[142,4763+6]..src/cmly_write.ml[143,4841+55])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (src/cmly_write.ml[142,4763+10]..src/cmly_write.ml[142,4763+13])
                                Tpat_var "add/1605"
                              expression (src/cmly_write.ml[142,4763+14]..src/cmly_write.ml[142,4763+74]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/cmly_write.ml[142,4763+14]..src/cmly_write.ml[142,4763+15])
                                      Tpat_var "t/1607"
                                    expression (src/cmly_write.ml[142,4763+16]..src/cmly_write.ml[142,4763+74]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (src/cmly_write.ml[142,4763+16]..src/cmly_write.ml[142,4763+18])
                                            Tpat_var "ps/1608"
                                          expression (src/cmly_write.ml[142,4763+19]..src/cmly_write.ml[142,4763+74]) ghost
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (src/cmly_write.ml[142,4763+19]..src/cmly_write.ml[142,4763+21])
                                                  Tpat_var "rs/1609"
                                                expression (src/cmly_write.ml[142,4763+24]..src/cmly_write.ml[142,4763+74])
                                                  Texp_construct "::"
                                                  [
                                                    expression (src/cmly_write.ml[142,4763+24]..src/cmly_write.ml[142,4763+68])
                                                      Texp_tuple
                                                      [
                                                        expression (src/cmly_write.ml[142,4763+25]..src/cmly_write.ml[142,4763+39])
                                                          Texp_apply
                                                          expression (src/cmly_write.ml[142,4763+25]..src/cmly_write.ml[142,4763+37])
                                                            Texp_ident "Dune__exe!.Grammar.Terminal.t2i"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/cmly_write.ml[142,4763+38]..src/cmly_write.ml[142,4763+39])
                                                                Texp_ident "t/1607"
                                                          ]
                                                        expression (src/cmly_write.ml[142,4763+41]..src/cmly_write.ml[142,4763+67])
                                                          Texp_apply
                                                          expression (src/cmly_write.ml[142,4763+41]..src/cmly_write.ml[142,4763+49])
                                                            Texp_ident "Stdlib!.List.map"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/cmly_write.ml[142,4763+50]..src/cmly_write.ml[142,4763+64])
                                                                Texp_ident "Dune__exe!.Grammar.Production.p2i"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/cmly_write.ml[142,4763+65]..src/cmly_write.ml[142,4763+67])
                                                                Texp_ident "ps/1608"
                                                          ]
                                                      ]
                                                    expression (src/cmly_write.ml[142,4763+72]..src/cmly_write.ml[142,4763+74])
                                                      Texp_ident "rs/1609"
                                                  ]
                                            ]
                                      ]
                                ]
                          ]
                          expression (src/cmly_write.ml[143,4841+6]..src/cmly_write.ml[143,4841+55])
                            Texp_apply
                            expression (src/cmly_write.ml[143,4841+6]..src/cmly_write.ml[143,4841+26])
                              Texp_ident "Dune__exe!.Grammar.TerminalMap.fold_rev"
                            [
                              <arg>
                                Nolabel
                                expression (src/cmly_write.ml[143,4841+27]..src/cmly_write.ml[143,4841+30])
                                  Texp_ident "add/1605"
                              <arg>
                                Nolabel
                                expression (src/cmly_write.ml[143,4841+31]..src/cmly_write.ml[143,4841+52])
                                  Texp_apply
                                  expression (src/cmly_write.ml[143,4841+32]..src/cmly_write.ml[143,4841+46])
                                    Texp_ident "Dune__exe!.Lr1.reductions"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/cmly_write.ml[143,4841+47]..src/cmly_write.ml[143,4841+51])
                                        Texp_ident "node/1470"
                                  ]
                              <arg>
                                Nolabel
                                expression (src/cmly_write.ml[143,4841+53]..src/cmly_write.ml[143,4841+55])
                                  Texp_construct "[]"
                                  []
                            ]
                    ]
                  representation =
                    Record_regular
                  extended_expression =
                    None
          ]
    ]
  structure_item (src/cmly_write.ml[146,4902+0]..src/cmly_write.ml[147,4983+68])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[146,4902+4]..src/cmly_write.ml[146,4902+15])
          Tpat_var "entry_point/1676"
        expression (src/cmly_write.ml[146,4902+16]..src/cmly_write.ml[147,4983+68]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/cmly_write.ml[146,4902+16]..src/cmly_write.ml[146,4902+20])
                Tpat_var "prod/1678"
              expression (src/cmly_write.ml[146,4902+21]..src/cmly_write.ml[147,4983+68]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/cmly_write.ml[146,4902+21]..src/cmly_write.ml[146,4902+25])
                      Tpat_var "node/1679"
                    expression (src/cmly_write.ml[146,4902+26]..src/cmly_write.ml[147,4983+68]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/cmly_write.ml[146,4902+26]..src/cmly_write.ml[146,4902+28])
                            Tpat_var "nt/1680"
                          expression (src/cmly_write.ml[146,4902+29]..src/cmly_write.ml[147,4983+68]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/cmly_write.ml[146,4902+29]..src/cmly_write.ml[146,4902+33])
                                  Tpat_var "_typ/1681"
                                expression (src/cmly_write.ml[146,4902+34]..src/cmly_write.ml[147,4983+68]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/cmly_write.ml[146,4902+34]..src/cmly_write.ml[146,4902+38])
                                        Tpat_var "accu/1682"
                                      expression (src/cmly_write.ml[147,4983+2]..src/cmly_write.ml[147,4983+68])
                                        extra
                                          Texp_constraint
                                          core_type (src/cmly_write.ml[146,4902+41]..src/cmly_write.ml[146,4902+78])
                                            Ttyp_constr "list/9!"
                                            [
                                              core_type (src/cmly_write.ml[146,4902+42]..src/cmly_write.ml[146,4902+72])
                                                Ttyp_tuple
                                                [
                                                  core_type (src/cmly_write.ml[146,4902+42]..src/cmly_write.ml[146,4902+53])
                                                    Ttyp_constr "MenhirSdk!.Cmly_format.nonterminal"
                                                    []
                                                  core_type (src/cmly_write.ml[146,4902+56]..src/cmly_write.ml[146,4902+66])
                                                    Ttyp_constr "MenhirSdk!.Cmly_format.production"
                                                    []
                                                  core_type (src/cmly_write.ml[146,4902+69]..src/cmly_write.ml[146,4902+72])
                                                    Ttyp_constr "MenhirSdk!.Cmly_format.lr1"
                                                    []
                                                ]
                                            ]
                                        Texp_construct "::"
                                        [
                                          expression (src/cmly_write.ml[147,4983+2]..src/cmly_write.ml[147,4983+60])
                                            Texp_tuple
                                            [
                                              expression (src/cmly_write.ml[147,4983+3]..src/cmly_write.ml[147,4983+21])
                                                Texp_apply
                                                expression (src/cmly_write.ml[147,4983+3]..src/cmly_write.ml[147,4983+18])
                                                  Texp_ident "Dune__exe!.Grammar.Nonterminal.n2i"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/cmly_write.ml[147,4983+19]..src/cmly_write.ml[147,4983+21])
                                                      Texp_ident "nt/1680"
                                                ]
                                              expression (src/cmly_write.ml[147,4983+23]..src/cmly_write.ml[147,4983+42])
                                                Texp_apply
                                                expression (src/cmly_write.ml[147,4983+23]..src/cmly_write.ml[147,4983+37])
                                                  Texp_ident "Dune__exe!.Grammar.Production.p2i"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/cmly_write.ml[147,4983+38]..src/cmly_write.ml[147,4983+42])
                                                      Texp_ident "prod/1678"
                                                ]
                                              expression (src/cmly_write.ml[147,4983+44]..src/cmly_write.ml[147,4983+59])
                                                Texp_apply
                                                expression (src/cmly_write.ml[147,4983+44]..src/cmly_write.ml[147,4983+54])
                                                  Texp_ident "Dune__exe!.Lr1.number"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/cmly_write.ml[147,4983+55]..src/cmly_write.ml[147,4983+59])
                                                      Texp_ident "node/1679"
                                                ]
                                            ]
                                          expression (src/cmly_write.ml[147,4983+64]..src/cmly_write.ml[147,4983+68])
                                            Texp_ident "accu/1682"
                                        ]
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/cmly_write.ml[149,5053+0]..src/cmly_write.ml[162,5675+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[149,5053+4]..src/cmly_write.ml[149,5053+10])
          Tpat_var "encode/1683"
        expression (src/cmly_write.ml[149,5053+11]..src/cmly_write.ml[162,5675+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/cmly_write.ml[149,5053+11]..src/cmly_write.ml[149,5053+13])
                Tpat_construct "()"
                []
                None
              expression (src/cmly_write.ml[150,5079+2]..src/cmly_write.ml[162,5675+3])
                extra
                  Texp_constraint
                  core_type (src/cmly_write.ml[149,5053+16]..src/cmly_write.ml[149,5053+23])
                    Ttyp_constr "MenhirSdk!.Cmly_format.grammar"
                    []
                Texp_record
                  fields =
                    [
                      "g_basename"
                        expression (src/cmly_write.ml[151,5083+21]..src/cmly_write.ml[151,5083+34])
                          Texp_ident "Dune__exe!.Settings.base"
                      "g_preludes"
                        expression (src/cmly_write.ml[152,5119+21]..src/cmly_write.ml[152,5119+64])
                          Texp_apply
                          expression (src/cmly_write.ml[152,5119+21]..src/cmly_write.ml[152,5119+29])
                            Texp_ident "Stdlib!.List.map"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[152,5119+30]..src/cmly_write.ml[152,5119+41])
                                Texp_ident "raw_content/454"
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[152,5119+42]..src/cmly_write.ml[152,5119+64])
                                Texp_field
                                expression (src/cmly_write.ml[152,5119+42]..src/cmly_write.ml[152,5119+55])
                                  Texp_ident "Dune__exe!.Front.grammar"
                                "preludes"
                          ]
                      "g_postludes"
                        expression (src/cmly_write.ml[153,5185+21]..src/cmly_write.ml[153,5185+65])
                          Texp_apply
                          expression (src/cmly_write.ml[153,5185+21]..src/cmly_write.ml[153,5185+29])
                            Texp_ident "Stdlib!.List.map"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[153,5185+30]..src/cmly_write.ml[153,5185+41])
                                Texp_ident "raw_content/454"
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[153,5185+42]..src/cmly_write.ml[153,5185+65])
                                Texp_field
                                expression (src/cmly_write.ml[153,5185+42]..src/cmly_write.ml[153,5185+55])
                                  Texp_ident "Dune__exe!.Front.grammar"
                                "postludes"
                          ]
                      "g_terminals"
                        expression (src/cmly_write.ml[154,5252+21]..src/cmly_write.ml[154,5252+43])
                          Texp_apply
                          expression (src/cmly_write.ml[154,5252+21]..src/cmly_write.ml[154,5252+34])
                            Texp_ident "Dune__exe!.Grammar.Terminal.init"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[154,5252+35]..src/cmly_write.ml[154,5252+43])
                                Texp_ident "terminal/718"
                          ]
                      "g_nonterminals"
                        expression (src/cmly_write.ml[155,5297+21]..src/cmly_write.ml[155,5297+49])
                          Texp_apply
                          expression (src/cmly_write.ml[155,5297+21]..src/cmly_write.ml[155,5297+37])
                            Texp_ident "Dune__exe!.Grammar.Nonterminal.init"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[155,5297+38]..src/cmly_write.ml[155,5297+49])
                                Texp_ident "nonterminal/798"
                          ]
                      "g_productions"
                        expression (src/cmly_write.ml[156,5348+21]..src/cmly_write.ml[156,5348+47])
                          Texp_apply
                          expression (src/cmly_write.ml[156,5348+21]..src/cmly_write.ml[156,5348+36])
                            Texp_ident "Dune__exe!.Grammar.Production.init"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[156,5348+37]..src/cmly_write.ml[156,5348+47])
                                Texp_ident "production/1249"
                          ]
                      "g_lr0_states"
                        expression (src/cmly_write.ml[157,5397+21]..src/cmly_write.ml[157,5397+47])
                          Texp_apply
                          expression (src/cmly_write.ml[157,5397+21]..src/cmly_write.ml[157,5397+31])
                            Texp_ident "Stdlib!.Array.init"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[157,5397+32]..src/cmly_write.ml[157,5397+37])
                                Texp_ident "Dune__exe!.Lr0.n"
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[157,5397+38]..src/cmly_write.ml[157,5397+47])
                                Texp_ident "lr0_state/1329"
                          ]
                      "g_lr1_states"
                        expression (src/cmly_write.ml[158,5446+21]..src/cmly_write.ml[158,5446+54])
                          Texp_apply
                          expression (src/cmly_write.ml[158,5446+21]..src/cmly_write.ml[158,5446+34])
                            Texp_ident "Stdlib!.Array.of_list"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[158,5446+35]..src/cmly_write.ml[158,5446+54])
                                Texp_apply
                                expression (src/cmly_write.ml[158,5446+36]..src/cmly_write.ml[158,5446+43])
                                  Texp_ident "Dune__exe!.Lr1.map"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/cmly_write.ml[158,5446+44]..src/cmly_write.ml[158,5446+53])
                                      Texp_ident "lr1_state/1468"
                                ]
                          ]
                      "g_entry_points"
                        expression (src/cmly_write.ml[159,5502+21]..src/cmly_write.ml[159,5502+50])
                          Texp_apply
                          expression (src/cmly_write.ml[159,5502+21]..src/cmly_write.ml[159,5502+35])
                            Texp_ident "Dune__exe!.Lr1.fold_entry"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[159,5502+36]..src/cmly_write.ml[159,5502+47])
                                Texp_ident "entry_point/1676"
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[159,5502+48]..src/cmly_write.ml[159,5502+50])
                                Texp_construct "[]"
                                []
                          ]
                      "g_attributes"
                        expression (src/cmly_write.ml[160,5554+21]..src/cmly_write.ml[160,5554+51])
                          Texp_apply
                          expression (src/cmly_write.ml[160,5554+21]..src/cmly_write.ml[160,5554+31])
                            Texp_ident "attributes/717"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[160,5554+32]..src/cmly_write.ml[160,5554+51])
                                Texp_ident "Dune__exe!.Grammar.Analysis.attributes"
                          ]
                      "g_parameters"
                        expression (src/cmly_write.ml[161,5607+21]..src/cmly_write.ml[161,5607+66])
                          Texp_apply
                          expression (src/cmly_write.ml[161,5607+21]..src/cmly_write.ml[161,5607+29])
                            Texp_ident "Stdlib!.List.map"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[161,5607+30]..src/cmly_write.ml[161,5607+41])
                                Texp_ident "raw_content/454"
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[161,5607+42]..src/cmly_write.ml[161,5607+66])
                                Texp_field
                                expression (src/cmly_write.ml[161,5607+42]..src/cmly_write.ml[161,5607+55])
                                  Texp_ident "Dune__exe!.Front.grammar"
                                "parameters"
                          ]
                    ]
                  representation =
                    Record_regular
                  extended_expression =
                    None
          ]
    ]
  structure_item (src/cmly_write.ml[164,5680+0]..src/cmly_write.ml[168,5826+31])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[164,5680+4]..src/cmly_write.ml[164,5680+9])
          Tpat_var "write/1768"
        expression (src/cmly_write.ml[164,5680+10]..src/cmly_write.ml[168,5826+31]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/cmly_write.ml[164,5680+10]..src/cmly_write.ml[164,5680+12])
                Tpat_var "oc/1770"
              expression (src/cmly_write.ml[164,5680+13]..src/cmly_write.ml[168,5826+31]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/cmly_write.ml[164,5680+13]..src/cmly_write.ml[164,5680+14])
                      Tpat_var "t/1771"
                    expression (src/cmly_write.ml[166,5758+2]..src/cmly_write.ml[168,5826+31])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/cmly_write.ml[166,5758+6]..src/cmly_write.ml[166,5758+11])
                            Tpat_var "magic/1772"
                          expression (src/cmly_write.ml[166,5758+14]..src/cmly_write.ml[166,5758+38])
                            Texp_apply
                            expression (src/cmly_write.ml[166,5758+21]..src/cmly_write.ml[166,5758+22])
                              Texp_ident "Stdlib!.^"
                            [
                              <arg>
                                Nolabel
                                expression (src/cmly_write.ml[166,5758+14]..src/cmly_write.ml[166,5758+20])
                                  Texp_constant Const_string("CMLY",(src/cmly_write.ml[166,5758+15]..src/cmly_write.ml[166,5758+19]),None)
                              <arg>
                                Nolabel
                                expression (src/cmly_write.ml[166,5758+23]..src/cmly_write.ml[166,5758+38])
                                  Texp_ident "MenhirSdk!.Version.version"
                            ]
                      ]
                      expression (src/cmly_write.ml[167,5800+2]..src/cmly_write.ml[168,5826+31])
                        Texp_sequence
                        expression (src/cmly_write.ml[167,5800+2]..src/cmly_write.ml[167,5800+24])
                          Texp_apply
                          expression (src/cmly_write.ml[167,5800+2]..src/cmly_write.ml[167,5800+15])
                            Texp_ident "Stdlib!.output_string"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[167,5800+16]..src/cmly_write.ml[167,5800+18])
                                Texp_ident "oc/1770"
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[167,5800+19]..src/cmly_write.ml[167,5800+24])
                                Texp_ident "magic/1772"
                          ]
                        expression (src/cmly_write.ml[168,5826+2]..src/cmly_write.ml[168,5826+31])
                          Texp_apply
                          expression (src/cmly_write.ml[168,5826+2]..src/cmly_write.ml[168,5826+14])
                            Texp_ident "Stdlib!.output_value"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[168,5826+15]..src/cmly_write.ml[168,5826+17])
                                Texp_ident "oc/1770"
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[168,5826+19]..src/cmly_write.ml[168,5826+20])
                                extra
                                  Texp_constraint
                                  core_type (src/cmly_write.ml[168,5826+23]..src/cmly_write.ml[168,5826+30])
                                    Ttyp_constr "MenhirSdk!.Cmly_format.grammar"
                                    []
                                Texp_ident "t/1771"
                          ]
                ]
          ]
    ]
  structure_item (src/cmly_write.ml[170,5859+0]..src/cmly_write.ml[175,6050+14])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/cmly_write.ml[170,5859+4]..src/cmly_write.ml[170,5859+9])
          Tpat_var "write/1774"
        expression (src/cmly_write.ml[170,5859+10]..src/cmly_write.ml[175,6050+14]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/cmly_write.ml[170,5859+10]..src/cmly_write.ml[170,5859+18])
                Tpat_var "filename/1775"
              expression (src/cmly_write.ml[173,5991+2]..src/cmly_write.ml[175,6050+14])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/cmly_write.ml[173,5991+6]..src/cmly_write.ml[173,5991+8])
                      Tpat_var "oc/1776"
                    expression (src/cmly_write.ml[173,5991+11]..src/cmly_write.ml[173,5991+32])
                      Texp_apply
                      expression (src/cmly_write.ml[173,5991+11]..src/cmly_write.ml[173,5991+23])
                        Texp_ident "Stdlib!.open_out_bin"
                      [
                        <arg>
                          Nolabel
                          expression (src/cmly_write.ml[173,5991+24]..src/cmly_write.ml[173,5991+32])
                            Texp_ident "filename/1775"
                      ]
                ]
                expression (src/cmly_write.ml[174,6027+2]..src/cmly_write.ml[175,6050+14])
                  Texp_sequence
                  expression (src/cmly_write.ml[174,6027+2]..src/cmly_write.ml[174,6027+21])
                    Texp_apply
                    expression (src/cmly_write.ml[174,6027+2]..src/cmly_write.ml[174,6027+7])
                      Texp_ident "write/1768"
                    [
                      <arg>
                        Nolabel
                        expression (src/cmly_write.ml[174,6027+8]..src/cmly_write.ml[174,6027+10])
                          Texp_ident "oc/1776"
                      <arg>
                        Nolabel
                        expression (src/cmly_write.ml[174,6027+11]..src/cmly_write.ml[174,6027+21])
                          Texp_apply
                          expression (src/cmly_write.ml[174,6027+12]..src/cmly_write.ml[174,6027+18])
                            Texp_ident "encode/1683"
                          [
                            <arg>
                              Nolabel
                              expression (src/cmly_write.ml[174,6027+18]..src/cmly_write.ml[174,6027+20])
                                Texp_construct "()"
                                []
                          ]
                    ]
                  expression (src/cmly_write.ml[175,6050+2]..src/cmly_write.ml[175,6050+14])
                    Texp_apply
                    expression (src/cmly_write.ml[175,6050+2]..src/cmly_write.ml[175,6050+11])
                      Texp_ident "Stdlib!.close_out"
                    [
                      <arg>
                        Nolabel
                        expression (src/cmly_write.ml[175,6050+12]..src/cmly_write.ml[175,6050+14])
                          Texp_ident "oc/1776"
                    ]
          ]
    ]
]

{<Dune__exe__Cmly_write>
 "write"[value] -> <Dune__exe__Cmly_write.65>;
 }

(seq
  (let (raw_content/454 = (function stretch/456 (field_imm 3 stretch/456)))
    (setfield_ptr(root-init) 1 (global Dune__exe__Cmly_write!)
      raw_content/454))
  (let
    (ocamltype/459 =
       (function typ/461
         (switch* typ/461
          case tag 0:
           (let (stretch/464 =a (field_imm 0 typ/461))
             (apply (field_imm 1 (global Dune__exe__Cmly_write!))
               stretch/464))
          case tag 1: (let (typ/465 =a (field_imm 0 typ/461)) typ/465))))
    (setfield_ptr(root-init) 2 (global Dune__exe__Cmly_write!) ocamltype/459))
  (let
    (ocamltype/466 =
       (function typo/467
         (if (isint typo/467) 0
           (let (typ/468 =a (field_imm 0 typo/467))
             (makeblock 0
               (apply (field_imm 2 (global Dune__exe__Cmly_write!)) typ/468))))))
    (setfield_ptr(root-init) 3 (global Dune__exe__Cmly_write!) ocamltype/466))
  (let
    (range/469 =
       (function pos/506
         (makeblock 0
           (apply (field_imm 15 (global Dune__exe__Positions!)) pos/506)
           (apply (field_imm 16 (global Dune__exe__Positions!)) pos/506))))
    (setfield_ptr(root-init) 4 (global Dune__exe__Cmly_write!) range/469))
  (let
    (ranges/610 =
       (apply (field_imm 19 (global Stdlib__List!))
         (field_imm 4 (global Dune__exe__Cmly_write!))))
    (setfield_ptr(root-init) 5 (global Dune__exe__Cmly_write!) ranges/610))
  (let
    (attribute/677 =
       (function (param/3107, param/3108)
         (let (payload/715 =a param/3108 label/714 =a param/3107)
           (makeblock 0
             (apply (field_imm 0 (global Dune__exe__Positions!)) label/714)
             (apply (field_imm 1 (global Dune__exe__Cmly_write!))
               payload/715)
             (apply (field_imm 4 (global Dune__exe__Cmly_write!))
               (apply (field_imm 1 (global Dune__exe__Positions!)) label/714))))))
    (setfield_ptr(root-init) 6 (global Dune__exe__Cmly_write!) attribute/677))
  (let
    (attributes/717 =
       (apply (field_imm 19 (global Stdlib__List!))
         (field_imm 6 (global Dune__exe__Cmly_write!))))
    (setfield_ptr(root-init) 7 (global Dune__exe__Cmly_write!)
      attributes/717))
  (let
    (terminal/718 =
       (function t/766
         (makeblock 0 (*,int,*,*)
           (apply (field_imm 6 (field_imm 2 (global Dune__exe__Grammar!)))
             t/766)
           (if
             (apply (field_imm 1 (field_imm 2 (global Dune__exe__Grammar!)))
               t/766
               (field_imm 10 (field_imm 2 (global Dune__exe__Grammar!))))
             -250084440
             (if
               (let
                 (*match*/3112 =
                    (field_imm 11 (field_imm 2 (global Dune__exe__Grammar!))))
                 (if (isint *match*/3112) 0
                   (let (eof/797 =a (field_imm 0 *match*/3112))
                     (apply
                       (field_imm 1
                         (field_imm 2 (global Dune__exe__Grammar!)))
                       t/766 eof/797))))
               3448988
               (if
                 (apply
                   (field_imm 12 (field_imm 2 (global Dune__exe__Grammar!)))
                   t/766)
                 -190089346 39593532)))
           (apply (field_imm 3 (global Dune__exe__Cmly_write!))
             (apply (field_imm 8 (field_imm 2 (global Dune__exe__Grammar!)))
               t/766))
           (apply (field_imm 7 (global Dune__exe__Cmly_write!))
             (apply (field_imm 22 (field_imm 2 (global Dune__exe__Grammar!)))
               t/766)))))
    (setfield_ptr(root-init) 8 (global Dune__exe__Cmly_write!) terminal/718))
  (let
    (nonterminal/798 =
       (function nt/820
         (let
           (is_start/821 =[int]
              (apply
                (field_imm 17 (field_imm 0 (global Dune__exe__Grammar!)))
                nt/820))
           (makeblock 0 (*,int,*,*,*,int,*,*)
             (apply (field_imm 5 (field_imm 0 (global Dune__exe__Grammar!)))
               0 nt/820)
             (if is_start/821 33139778 39593532)
             (apply (field_imm 5 (field_imm 0 (global Dune__exe__Grammar!)))
               1 nt/820)
             (if is_start/821 0
               (apply (field_imm 3 (global Dune__exe__Cmly_write!))
                 (apply
                   (field_imm 6 (field_imm 0 (global Dune__exe__Grammar!)))
                   nt/820)))
             (if is_start/821 0
               (apply (field_imm 5 (global Dune__exe__Cmly_write!))
                 (apply
                   (field_imm 15 (field_imm 0 (global Dune__exe__Grammar!)))
                   nt/820)))
             (apply (field_imm 0 (field_imm 11 (global Dune__exe__Grammar!)))
               nt/820)
             (apply (field_imm 19 (global Stdlib__List!))
               (field_imm 4 (field_imm 2 (global Dune__exe__Grammar!)))
               (apply
                 (field_imm 14 (field_imm 3 (global Dune__exe__Grammar!)))
                 (apply
                   (field_imm 2 (field_imm 11 (global Dune__exe__Grammar!)))
                   nt/820)))
             (if is_start/821 0
               (apply (field_imm 7 (global Dune__exe__Cmly_write!))
                 (apply
                   (field_imm 18 (field_imm 0 (global Dune__exe__Grammar!)))
                   nt/820)))))))
    (setfield_ptr(root-init) 9 (global Dune__exe__Cmly_write!)
      nonterminal/798))
  (let
    (symbol/899 =
       (function sym/912
         (switch* sym/912
          case tag 0:
           (let (n/924 =a (field_imm 0 sym/912))
             (makeblock 1 (int)
               (apply
                 (field_imm 4 (field_imm 0 (global Dune__exe__Grammar!)))
                 n/924)))
          case tag 1:
           (let (t/925 =a (field_imm 0 sym/912))
             (makeblock 0 (int)
               (apply
                 (field_imm 4 (field_imm 2 (global Dune__exe__Grammar!)))
                 t/925))))))
    (setfield_ptr(root-init) 10 (global Dune__exe__Cmly_write!) symbol/899))
  (let
    (action/926 =
       (function a/946
         (makeblock 0
           (apply (field_imm 2 (global Dune__exe__Printer!))
             (apply (field_imm 4 (global Dune__exe__Action!)) a/946))
           (apply (field_imm 9 (field_imm 1 (global MenhirSdk__Keyword!)))
             (apply (field_imm 7 (global Dune__exe__Action!)) a/946)))))
    (setfield_ptr(root-init) 11 (global Dune__exe__Cmly_write!) action/926))
  (let
    (rhs/1125 =
       (function prod/1161
         (let
           (*match*/3115 =
              (apply
                (field_imm 25 (field_imm 8 (global Dune__exe__Grammar!)))
                prod/1161))
           (if (isint *match*/3115)
             (apply (field_imm 14 (global Stdlib__Array!))
               (function i/1245[int] sym/1246
                 (let
                   (id/1247 =
                      (array.get[addr]
                        (apply
                          (field_imm 8
                            (field_imm 8 (global Dune__exe__Grammar!)))
                          prod/1161)
                        i/1245)
                    attrs/1248 =
                      (apply (field_imm 7 (global Dune__exe__Cmly_write!))
                        (array.get[addr]
                          (apply
                            (field_imm 12
                              (field_imm 8 (global Dune__exe__Grammar!)))
                            prod/1161)
                          i/1245)))
                   (makeblock 0
                     (apply (field_imm 10 (global Dune__exe__Cmly_write!))
                       sym/1246)
                     id/1247 attrs/1248)))
               (apply
                 (field_imm 6 (field_imm 8 (global Dune__exe__Grammar!)))
                 prod/1161))
             (let (n/1196 =a (field_imm 0 *match*/3115))
               (makearray[addr]
                 (makeblock 0
                   (makeblock 1 (int)
                     (apply
                       (field_imm 4
                         (field_imm 0 (global Dune__exe__Grammar!)))
                       n/1196))
                   "" 0)))))))
    (setfield_ptr(root-init) 12 (global Dune__exe__Cmly_write!) rhs/1125))
  (let
    (production/1249 =
       (function prod/1251
         (makeblock 0 (int,int,*,*,*,*)
           (if
             (apply (field_imm 26 (field_imm 8 (global Dune__exe__Grammar!)))
               prod/1251)
             33139778 39593532)
           (apply (field_imm 4 (field_imm 0 (global Dune__exe__Grammar!)))
             (apply (field_imm 5 (field_imm 8 (global Dune__exe__Grammar!)))
               prod/1251))
           (apply (field_imm 12 (global Dune__exe__Cmly_write!)) prod/1251)
           (apply (field_imm 5 (global Dune__exe__Cmly_write!))
             (apply (field_imm 10 (field_imm 8 (global Dune__exe__Grammar!)))
               prod/1251))
           (if
             (apply (field_imm 26 (field_imm 8 (global Dune__exe__Grammar!)))
               prod/1251)
             0
             (makeblock 0
               (apply (field_imm 11 (global Dune__exe__Cmly_write!))
                 (apply
                   (field_imm 9 (field_imm 8 (global Dune__exe__Grammar!)))
                   prod/1251))))
           (apply (field_imm 7 (global Dune__exe__Cmly_write!))
             (apply (field_imm 11 (field_imm 8 (global Dune__exe__Grammar!)))
               prod/1251)))))
    (setfield_ptr(root-init) 13 (global Dune__exe__Cmly_write!)
      production/1249))
  (let
    (item/1252 =
       (function i/1268
         (let
           (*match*/3120 =
              (apply (field_imm 1 (global Dune__exe__Item!)) i/1268)
            i/1270 =a (field_imm 1 *match*/3120)
            p/1269 =a (field_imm 0 *match*/3120))
           (makeblock 0 (int,int)
             (apply (field_imm 1 (field_imm 8 (global Dune__exe__Grammar!)))
               p/1269)
             i/1270))))
    (setfield_ptr(root-init) 14 (global Dune__exe__Cmly_write!) item/1252))
  (let
    (itemset/1286 =
       (function is/1308
         (apply (field_imm 19 (global Stdlib__List!))
           (field_imm 14 (global Dune__exe__Cmly_write!))
           (apply (field_imm 14 (field_imm 8 (global Dune__exe__Item!)))
             is/1308))))
    (setfield_ptr(root-init) 15 (global Dune__exe__Cmly_write!) itemset/1286))
  (let
    (lr0_state/1329 =
       (function node/1369[int]
         (makeblock 0
           (apply (field_imm 1 (global Dune__exe__Option!))
             (field_imm 10 (global Dune__exe__Cmly_write!))
             (apply (field_imm 3 (global Dune__exe__Lr0!)) node/1369))
           (apply (field_imm 15 (global Dune__exe__Cmly_write!))
             (apply (field_imm 2 (global Dune__exe__Lr0!)) node/1369)))))
    (setfield_ptr(root-init) 16 (global Dune__exe__Cmly_write!)
      lr0_state/1329))
  (let
    (transition/1381 =
       (function (param/3122, param/3123)
         (let (node/1384 =a param/3123 sym/1383 =a param/3122)
           (makeblock 0 (*,int)
             (apply (field_imm 10 (global Dune__exe__Cmly_write!)) sym/1383)
             (apply (field_imm 9 (global Dune__exe__Lr1!)) node/1384)))))
    (setfield_ptr(root-init) 17 (global Dune__exe__Cmly_write!)
      transition/1381))
  (let
    (lr1_state/1468 =
       (function node/1470
         (makeblock 0 (int,*,*)
           (apply (field_imm 11 (global Dune__exe__Lr0!))
             (apply (field_imm 11 (global Dune__exe__Lr1!)) node/1470))
           (apply (field_imm 19 (global Stdlib__List!))
             (field_imm 17 (global Dune__exe__Cmly_write!))
             (apply (field_imm 9 (field_imm 7 (global Dune__exe__Grammar!)))
               (apply (field_imm 19 (global Dune__exe__Lr1!)) node/1470)))
           (let
             (add/1605 =
                (function t/1607 ps/1608 rs/1609
                  (makeblock 0
                    (makeblock 0 (int,*)
                      (apply
                        (field_imm 4
                          (field_imm 2 (global Dune__exe__Grammar!)))
                        t/1607)
                      (apply (field_imm 19 (global Stdlib__List!))
                        (field_imm 1
                          (field_imm 8 (global Dune__exe__Grammar!)))
                        ps/1608))
                    rs/1609)))
             (apply (field_imm 20 (field_imm 4 (global Dune__exe__Grammar!)))
               add/1605
               (apply (field_imm 20 (global Dune__exe__Lr1!)) node/1470) 0)))))
    (setfield_ptr(root-init) 18 (global Dune__exe__Cmly_write!)
      lr1_state/1468))
  (let
    (entry_point/1676 =
       (function prod/1678 node/1679 nt/1680 _typ/1681 accu/1682
         (makeblock 0
           (makeblock 0 (int,int,int)
             (apply (field_imm 4 (field_imm 0 (global Dune__exe__Grammar!)))
               nt/1680)
             (apply (field_imm 1 (field_imm 8 (global Dune__exe__Grammar!)))
               prod/1678)
             (apply (field_imm 9 (global Dune__exe__Lr1!)) node/1679))
           accu/1682)))
    (setfield_ptr(root-init) 19 (global Dune__exe__Cmly_write!)
      entry_point/1676))
  (let
    (encode/1683 =
       (function param/1767[int]
         (makeblock 0 (field_imm 24 (global Dune__exe__Settings!))
           (apply (field_imm 19 (global Stdlib__List!))
             (field_imm 1 (global Dune__exe__Cmly_write!))
             (field_imm 0 (field_imm 0 (global Dune__exe__Front!))))
           (apply (field_imm 19 (global Stdlib__List!))
             (field_imm 1 (global Dune__exe__Cmly_write!))
             (field_imm 1 (field_imm 0 (global Dune__exe__Front!))))
           (apply (field_imm 15 (field_imm 2 (global Dune__exe__Grammar!)))
             (field_imm 8 (global Dune__exe__Cmly_write!)))
           (apply (field_imm 8 (field_imm 0 (global Dune__exe__Grammar!)))
             (field_imm 9 (global Dune__exe__Cmly_write!)))
           (apply (field_imm 13 (field_imm 8 (global Dune__exe__Grammar!)))
             (field_imm 13 (global Dune__exe__Cmly_write!)))
           (apply (field_imm 0 (global Stdlib__Array!))
             (field_imm 0 (global Dune__exe__Lr0!))
             (field_imm 16 (global Dune__exe__Cmly_write!)))
           (apply (field_imm 9 (global Stdlib__Array!))
             (apply (field_imm 26 (global Dune__exe__Lr1!))
               (field_imm 18 (global Dune__exe__Cmly_write!))))
           (apply (field_imm 5 (global Dune__exe__Lr1!))
             (field_imm 19 (global Dune__exe__Cmly_write!)) 0)
           (apply (field_imm 7 (global Dune__exe__Cmly_write!))
             (field_imm 8 (field_imm 11 (global Dune__exe__Grammar!))))
           (apply (field_imm 19 (global Stdlib__List!))
             (field_imm 1 (global Dune__exe__Cmly_write!))
             (field_imm 2 (field_imm 0 (global Dune__exe__Front!)))))))
    (setfield_ptr(root-init) 20 (global Dune__exe__Cmly_write!) encode/1683))
  (let
    (write/1768 =
       (function oc/1770 t/1771 : int
         (let
           (magic/1772 =
              (apply (field_imm 27 (global Stdlib!)) "CMLY"
                (field_imm 0 (global MenhirSdk__Version!))))
           (seq (apply (field_imm 65 (global Stdlib!)) oc/1770 magic/1772)
             (apply (field_imm 71 (global Stdlib!)) oc/1770 t/1771)))))
    (setfield_ptr(root-init) 21 (global Dune__exe__Cmly_write!) write/1768))
  (let
    (write/1774 =
       (function filename/1775 : int
         (let
           (oc/1776 = (apply (field_imm 60 (global Stdlib!)) filename/1775))
           (seq
             (apply (field_imm 21 (global Dune__exe__Cmly_write!)) oc/1776
               (apply (field_imm 20 (global Dune__exe__Cmly_write!)) 0))
             (apply (field_imm 75 (global Stdlib!)) oc/1776)))))
    (setfield_ptr(root-init) 0 (global Dune__exe__Cmly_write!) write/1774))
  0)
(seq
  (let (raw_content/454 = (function stretch/456 (field_imm 3 stretch/456)))
    (setfield_ptr(root-init) 1 (global Dune__exe__Cmly_write!)
      raw_content/454))
  (let
    (ocamltype/459 =
       (function typ/461
         (switch* typ/461
          case tag 0:
           (apply (field_imm 1 (global Dune__exe__Cmly_write!))
             (field_imm 0 typ/461))
          case tag 1: (field_imm 0 typ/461))))
    (setfield_ptr(root-init) 2 (global Dune__exe__Cmly_write!) ocamltype/459))
  (let
    (ocamltype/466 =
       (function typo/467
         (if (isint typo/467) 0
           (makeblock 0
             (apply (field_imm 2 (global Dune__exe__Cmly_write!))
               (field_imm 0 typo/467))))))
    (setfield_ptr(root-init) 3 (global Dune__exe__Cmly_write!) ocamltype/466))
  (let
    (range/469 =
       (function pos/506
         (makeblock 0
           (apply (field_imm 15 (global Dune__exe__Positions!)) pos/506)
           (apply (field_imm 16 (global Dune__exe__Positions!)) pos/506))))
    (setfield_ptr(root-init) 4 (global Dune__exe__Cmly_write!) range/469))
  (let
    (ranges/610 =
       (apply (field_imm 19 (global Stdlib__List!))
         (field_imm 4 (global Dune__exe__Cmly_write!))))
    (setfield_ptr(root-init) 5 (global Dune__exe__Cmly_write!) ranges/610))
  (let
    (attribute/677 =
       (function (param/3107, param/3108)
         (makeblock 0
           (apply (field_imm 0 (global Dune__exe__Positions!)) param/3107)
           (apply (field_imm 1 (global Dune__exe__Cmly_write!)) param/3108)
           (apply (field_imm 4 (global Dune__exe__Cmly_write!))
             (apply (field_imm 1 (global Dune__exe__Positions!)) param/3107)))))
    (setfield_ptr(root-init) 6 (global Dune__exe__Cmly_write!) attribute/677))
  (let
    (attributes/717 =
       (apply (field_imm 19 (global Stdlib__List!))
         (field_imm 6 (global Dune__exe__Cmly_write!))))
    (setfield_ptr(root-init) 7 (global Dune__exe__Cmly_write!)
      attributes/717))
  (let
    (terminal/718 =
       (function t/766
         (makeblock 0 (*,int,*,*)
           (apply (field_imm 6 (field_imm 2 (global Dune__exe__Grammar!)))
             t/766)
           (if
             (apply (field_imm 1 (field_imm 2 (global Dune__exe__Grammar!)))
               t/766
               (field_imm 10 (field_imm 2 (global Dune__exe__Grammar!))))
             -250084440
             (if
               (let
                 (*match*/3112 =
                    (field_imm 11 (field_imm 2 (global Dune__exe__Grammar!))))
                 (if (isint *match*/3112) 0
                   (apply
                     (field_imm 1 (field_imm 2 (global Dune__exe__Grammar!)))
                     t/766 (field_imm 0 *match*/3112))))
               3448988
               (if
                 (apply
                   (field_imm 12 (field_imm 2 (global Dune__exe__Grammar!)))
                   t/766)
                 -190089346 39593532)))
           (apply (field_imm 3 (global Dune__exe__Cmly_write!))
             (apply (field_imm 8 (field_imm 2 (global Dune__exe__Grammar!)))
               t/766))
           (apply (field_imm 7 (global Dune__exe__Cmly_write!))
             (apply (field_imm 22 (field_imm 2 (global Dune__exe__Grammar!)))
               t/766)))))
    (setfield_ptr(root-init) 8 (global Dune__exe__Cmly_write!) terminal/718))
  (let
    (nonterminal/798 =
       (function nt/820
         (let
           (is_start/821 =[int]
              (apply
                (field_imm 17 (field_imm 0 (global Dune__exe__Grammar!)))
                nt/820))
           (makeblock 0 (*,int,*,*,*,int,*,*)
             (apply (field_imm 5 (field_imm 0 (global Dune__exe__Grammar!)))
               0 nt/820)
             (if is_start/821 33139778 39593532)
             (apply (field_imm 5 (field_imm 0 (global Dune__exe__Grammar!)))
               1 nt/820)
             (if is_start/821 0
               (apply (field_imm 3 (global Dune__exe__Cmly_write!))
                 (apply
                   (field_imm 6 (field_imm 0 (global Dune__exe__Grammar!)))
                   nt/820)))
             (if is_start/821 0
               (apply (field_imm 5 (global Dune__exe__Cmly_write!))
                 (apply
                   (field_imm 15 (field_imm 0 (global Dune__exe__Grammar!)))
                   nt/820)))
             (apply (field_imm 0 (field_imm 11 (global Dune__exe__Grammar!)))
               nt/820)
             (apply (field_imm 19 (global Stdlib__List!))
               (field_imm 4 (field_imm 2 (global Dune__exe__Grammar!)))
               (apply
                 (field_imm 14 (field_imm 3 (global Dune__exe__Grammar!)))
                 (apply
                   (field_imm 2 (field_imm 11 (global Dune__exe__Grammar!)))
                   nt/820)))
             (if is_start/821 0
               (apply (field_imm 7 (global Dune__exe__Cmly_write!))
                 (apply
                   (field_imm 18 (field_imm 0 (global Dune__exe__Grammar!)))
                   nt/820)))))))
    (setfield_ptr(root-init) 9 (global Dune__exe__Cmly_write!)
      nonterminal/798))
  (let
    (symbol/899 =
       (function sym/912
         (switch* sym/912
          case tag 0:
           (makeblock 1 (int)
             (apply (field_imm 4 (field_imm 0 (global Dune__exe__Grammar!)))
               (field_imm 0 sym/912)))
          case tag 1:
           (makeblock 0 (int)
             (apply (field_imm 4 (field_imm 2 (global Dune__exe__Grammar!)))
               (field_imm 0 sym/912))))))
    (setfield_ptr(root-init) 10 (global Dune__exe__Cmly_write!) symbol/899))
  (let
    (action/926 =
       (function a/946
         (makeblock 0
           (apply (field_imm 2 (global Dune__exe__Printer!))
             (apply (field_imm 4 (global Dune__exe__Action!)) a/946))
           (apply (field_imm 9 (field_imm 1 (global MenhirSdk__Keyword!)))
             (apply (field_imm 7 (global Dune__exe__Action!)) a/946)))))
    (setfield_ptr(root-init) 11 (global Dune__exe__Cmly_write!) action/926))
  (let
    (rhs/1125 =
       (function prod/1161
         (let
           (*match*/3115 =
              (apply
                (field_imm 25 (field_imm 8 (global Dune__exe__Grammar!)))
                prod/1161))
           (if (isint *match*/3115)
             (apply (field_imm 14 (global Stdlib__Array!))
               (function i/1245[int] sym/1246
                 (let
                   (id/1247 =
                      (array.get[addr]
                        (apply
                          (field_imm 8
                            (field_imm 8 (global Dune__exe__Grammar!)))
                          prod/1161)
                        i/1245)
                    attrs/1248 =
                      (apply (field_imm 7 (global Dune__exe__Cmly_write!))
                        (array.get[addr]
                          (apply
                            (field_imm 12
                              (field_imm 8 (global Dune__exe__Grammar!)))
                            prod/1161)
                          i/1245)))
                   (makeblock 0
                     (apply (field_imm 10 (global Dune__exe__Cmly_write!))
                       sym/1246)
                     id/1247 attrs/1248)))
               (apply
                 (field_imm 6 (field_imm 8 (global Dune__exe__Grammar!)))
                 prod/1161))
             (makearray[addr]
               (makeblock 0
                 (makeblock 1 (int)
                   (apply
                     (field_imm 4 (field_imm 0 (global Dune__exe__Grammar!)))
                     (field_imm 0 *match*/3115)))
                 "" 0))))))
    (setfield_ptr(root-init) 12 (global Dune__exe__Cmly_write!) rhs/1125))
  (let
    (production/1249 =
       (function prod/1251
         (makeblock 0 (int,int,*,*,*,*)
           (if
             (apply (field_imm 26 (field_imm 8 (global Dune__exe__Grammar!)))
               prod/1251)
             33139778 39593532)
           (apply (field_imm 4 (field_imm 0 (global Dune__exe__Grammar!)))
             (apply (field_imm 5 (field_imm 8 (global Dune__exe__Grammar!)))
               prod/1251))
           (apply (field_imm 12 (global Dune__exe__Cmly_write!)) prod/1251)
           (apply (field_imm 5 (global Dune__exe__Cmly_write!))
             (apply (field_imm 10 (field_imm 8 (global Dune__exe__Grammar!)))
               prod/1251))
           (if
             (apply (field_imm 26 (field_imm 8 (global Dune__exe__Grammar!)))
               prod/1251)
             0
             (makeblock 0
               (apply (field_imm 11 (global Dune__exe__Cmly_write!))
                 (apply
                   (field_imm 9 (field_imm 8 (global Dune__exe__Grammar!)))
                   prod/1251))))
           (apply (field_imm 7 (global Dune__exe__Cmly_write!))
             (apply (field_imm 11 (field_imm 8 (global Dune__exe__Grammar!)))
               prod/1251)))))
    (setfield_ptr(root-init) 13 (global Dune__exe__Cmly_write!)
      production/1249))
  (let
    (item/1252 =
       (function i/1268
         (let
           (*match*/3120 =
              (apply (field_imm 1 (global Dune__exe__Item!)) i/1268))
           (makeblock 0 (int,int)
             (apply (field_imm 1 (field_imm 8 (global Dune__exe__Grammar!)))
               (field_imm 0 *match*/3120))
             (field_imm 1 *match*/3120)))))
    (setfield_ptr(root-init) 14 (global Dune__exe__Cmly_write!) item/1252))
  (let
    (itemset/1286 =
       (function is/1308
         (apply (field_imm 19 (global Stdlib__List!))
           (field_imm 14 (global Dune__exe__Cmly_write!))
           (apply (field_imm 14 (field_imm 8 (global Dune__exe__Item!)))
             is/1308))))
    (setfield_ptr(root-init) 15 (global Dune__exe__Cmly_write!) itemset/1286))
  (let
    (lr0_state/1329 =
       (function node/1369[int]
         (makeblock 0
           (apply (field_imm 1 (global Dune__exe__Option!))
             (field_imm 10 (global Dune__exe__Cmly_write!))
             (apply (field_imm 3 (global Dune__exe__Lr0!)) node/1369))
           (apply (field_imm 15 (global Dune__exe__Cmly_write!))
             (apply (field_imm 2 (global Dune__exe__Lr0!)) node/1369)))))
    (setfield_ptr(root-init) 16 (global Dune__exe__Cmly_write!)
      lr0_state/1329))
  (let
    (transition/1381 =
       (function (param/3122, param/3123)
         (makeblock 0 (*,int)
           (apply (field_imm 10 (global Dune__exe__Cmly_write!)) param/3122)
           (apply (field_imm 9 (global Dune__exe__Lr1!)) param/3123))))
    (setfield_ptr(root-init) 17 (global Dune__exe__Cmly_write!)
      transition/1381))
  (let
    (lr1_state/1468 =
       (function node/1470
         (makeblock 0 (int,*,*)
           (apply (field_imm 11 (global Dune__exe__Lr0!))
             (apply (field_imm 11 (global Dune__exe__Lr1!)) node/1470))
           (apply (field_imm 19 (global Stdlib__List!))
             (field_imm 17 (global Dune__exe__Cmly_write!))
             (apply (field_imm 9 (field_imm 7 (global Dune__exe__Grammar!)))
               (apply (field_imm 19 (global Dune__exe__Lr1!)) node/1470)))
           (let
             (add/1605 =
                (function t/1607 ps/1608 rs/1609
                  (makeblock 0
                    (makeblock 0 (int,*)
                      (apply
                        (field_imm 4
                          (field_imm 2 (global Dune__exe__Grammar!)))
                        t/1607)
                      (apply (field_imm 19 (global Stdlib__List!))
                        (field_imm 1
                          (field_imm 8 (global Dune__exe__Grammar!)))
                        ps/1608))
                    rs/1609)))
             (apply (field_imm 20 (field_imm 4 (global Dune__exe__Grammar!)))
               add/1605
               (apply (field_imm 20 (global Dune__exe__Lr1!)) node/1470) 0)))))
    (setfield_ptr(root-init) 18 (global Dune__exe__Cmly_write!)
      lr1_state/1468))
  (let
    (entry_point/1676 =
       (function prod/1678 node/1679 nt/1680 _typ/1681 accu/1682
         (makeblock 0
           (makeblock 0 (int,int,int)
             (apply (field_imm 4 (field_imm 0 (global Dune__exe__Grammar!)))
               nt/1680)
             (apply (field_imm 1 (field_imm 8 (global Dune__exe__Grammar!)))
               prod/1678)
             (apply (field_imm 9 (global Dune__exe__Lr1!)) node/1679))
           accu/1682)))
    (setfield_ptr(root-init) 19 (global Dune__exe__Cmly_write!)
      entry_point/1676))
  (let
    (encode/1683 =
       (function param/1767[int]
         (makeblock 0 (field_imm 24 (global Dune__exe__Settings!))
           (apply (field_imm 19 (global Stdlib__List!))
             (field_imm 1 (global Dune__exe__Cmly_write!))
             (field_imm 0 (field_imm 0 (global Dune__exe__Front!))))
           (apply (field_imm 19 (global Stdlib__List!))
             (field_imm 1 (global Dune__exe__Cmly_write!))
             (field_imm 1 (field_imm 0 (global Dune__exe__Front!))))
           (apply (field_imm 15 (field_imm 2 (global Dune__exe__Grammar!)))
             (field_imm 8 (global Dune__exe__Cmly_write!)))
           (apply (field_imm 8 (field_imm 0 (global Dune__exe__Grammar!)))
             (field_imm 9 (global Dune__exe__Cmly_write!)))
           (apply (field_imm 13 (field_imm 8 (global Dune__exe__Grammar!)))
             (field_imm 13 (global Dune__exe__Cmly_write!)))
           (apply (field_imm 0 (global Stdlib__Array!))
             (field_imm 0 (global Dune__exe__Lr0!))
             (field_imm 16 (global Dune__exe__Cmly_write!)))
           (apply (field_imm 9 (global Stdlib__Array!))
             (apply (field_imm 26 (global Dune__exe__Lr1!))
               (field_imm 18 (global Dune__exe__Cmly_write!))))
           (apply (field_imm 5 (global Dune__exe__Lr1!))
             (field_imm 19 (global Dune__exe__Cmly_write!)) 0)
           (apply (field_imm 7 (global Dune__exe__Cmly_write!))
             (field_imm 8 (field_imm 11 (global Dune__exe__Grammar!))))
           (apply (field_imm 19 (global Stdlib__List!))
             (field_imm 1 (global Dune__exe__Cmly_write!))
             (field_imm 2 (field_imm 0 (global Dune__exe__Front!)))))))
    (setfield_ptr(root-init) 20 (global Dune__exe__Cmly_write!) encode/1683))
  (let
    (write/1768 =
       (function oc/1770 t/1771 : int
         (let
           (magic/1772 =
              (apply (field_imm 27 (global Stdlib!)) "CMLY"
                (field_imm 0 (global MenhirSdk__Version!))))
           (seq (apply (field_imm 65 (global Stdlib!)) oc/1770 magic/1772)
             (apply (field_imm 71 (global Stdlib!)) oc/1770 t/1771)))))
    (setfield_ptr(root-init) 21 (global Dune__exe__Cmly_write!) write/1768))
  (let
    (write/1774 =
       (function filename/1775 : int
         (let
           (oc/1776 = (apply (field_imm 60 (global Stdlib!)) filename/1775))
           (seq
             (apply (field_imm 21 (global Dune__exe__Cmly_write!)) oc/1776
               (apply (field_imm 20 (global Dune__exe__Cmly_write!)) 0))
             (apply (field_imm 75 (global Stdlib!)) oc/1776)))))
    (setfield_ptr(root-init) 0 (global Dune__exe__Cmly_write!) write/1774))
  0)
