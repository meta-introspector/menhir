[
  structure_item (src/conflict.ml[14,998+0]..[14,998+12])
    Pstr_open Fresh
    module_expr (src/conflict.ml[14,998+5]..[14,998+12])
      Pmod_ident "Grammar" (src/conflict.ml[14,998+5]..[14,998+12])
  structure_item (src/conflict.ml[19,1151+0]..[21,1195+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/conflict.ml[19,1151+4]..[19,1151+6])
          Ppat_construct "()" (src/conflict.ml[19,1151+4]..[19,1151+6])
          None
        expression (src/conflict.ml[20,1160+2]..[21,1195+42])
          Pexp_ifthenelse
          expression (src/conflict.ml[20,1160+5]..[20,1160+29])
            Pexp_ident "Settings.reference_graph" (src/conflict.ml[20,1160+5]..[20,1160+29])
          expression (src/conflict.ml[21,1195+4]..[21,1195+42])
            Pexp_apply
            expression (src/conflict.ml[21,1195+4]..[21,1195+40])
              Pexp_ident "ReferenceGraph.print_reference_graph" (src/conflict.ml[21,1195+4]..[21,1195+40])
            [
              <arg>
              Nolabel
                expression (src/conflict.ml[21,1195+40]..[21,1195+42])
                  Pexp_construct "()" (src/conflict.ml[21,1195+40]..[21,1195+42])
                  None
            ]
          None
    ]
  structure_item (src/conflict.ml[26,1399+0]..[33,1635+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/conflict.ml[26,1399+4]..[26,1399+6])
          Ppat_construct "()" (src/conflict.ml[26,1399+4]..[26,1399+6])
          None
        expression (src/conflict.ml[27,1408+2]..[33,1635+41])
          Pexp_ifthenelse
          expression (src/conflict.ml[27,1408+5]..[27,1408+18])
            Pexp_ident "Settings.dump" (src/conflict.ml[27,1408+5]..[27,1408+18])
          expression (src/conflict.ml[29,1506+4]..[33,1635+41])
            Pexp_letmodule "Default" (src/conflict.ml[29,1506+15]..[29,1506+22])
            module_expr (src/conflict.ml[29,1506+25]..[31,1583+7])
              Pmod_structure
              [
                structure_item (src/conflict.ml[30,1538+6]..[30,1538+44])
                  Pstr_value Nonrec
                  [
                    <def>
                      pattern (src/conflict.ml[30,1538+10]..[30,1538+31])
                        Ppat_var "has_default_reduction" (src/conflict.ml[30,1538+10]..[30,1538+31])
                      expression (src/conflict.ml[30,1538+32]..[30,1538+44]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/conflict.ml[30,1538+32]..[30,1538+37])
                          Ppat_var "_node" (src/conflict.ml[30,1538+32]..[30,1538+37])
                        expression (src/conflict.ml[30,1538+40]..[30,1538+44])
                          Pexp_construct "None" (src/conflict.ml[30,1538+40]..[30,1538+44])
                          None
                  ]
              ]
            expression (src/conflict.ml[32,1594+4]..[33,1635+41])
              Pexp_letmodule "D" (src/conflict.ml[32,1594+15]..[32,1594+16])
              module_expr (src/conflict.ml[32,1594+19]..[32,1594+37])
                Pmod_apply
                module_expr (src/conflict.ml[32,1594+19]..[32,1594+28])
                  Pmod_ident "Dump.Make" (src/conflict.ml[32,1594+19]..[32,1594+28])
                module_expr (src/conflict.ml[32,1594+29]..[32,1594+36])
                  Pmod_ident "Default" (src/conflict.ml[32,1594+29]..[32,1594+36])
              expression (src/conflict.ml[33,1635+4]..[33,1635+41])
                Pexp_apply
                expression (src/conflict.ml[33,1635+4]..[33,1635+10])
                  Pexp_ident "D.dump" (src/conflict.ml[33,1635+4]..[33,1635+10])
                [
                  <arg>
                  Nolabel
                    expression (src/conflict.ml[33,1635+11]..[33,1635+41])
                      Pexp_apply
                      expression (src/conflict.ml[33,1635+26]..[33,1635+27])
                        Pexp_ident "^" (src/conflict.ml[33,1635+26]..[33,1635+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/conflict.ml[33,1635+12]..[33,1635+25])
                            Pexp_ident "Settings.base" (src/conflict.ml[33,1635+12]..[33,1635+25])
                        <arg>
                        Nolabel
                          expression (src/conflict.ml[33,1635+28]..[33,1635+40])
                            Pexp_constant PConst_string(".automaton",(src/conflict.ml[33,1635+29]..[33,1635+39]),None)
                      ]
                ]
          None
    ]
  structure_item (src/conflict.ml[58,2844+0]..[59,2866+16])
    Pstr_type Rec
    [
      type_declaration "configuration0" (src/conflict.ml[58,2844+5]..[58,2844+19]) (src/conflict.ml[58,2844+0]..[59,2866+16])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/conflict.ml[59,2866+4]..[59,2866+16])
              Ptyp_tuple
              [
                core_type (src/conflict.ml[59,2866+4]..[59,2866+10])
                  Ptyp_constr "Item.t" (src/conflict.ml[59,2866+4]..[59,2866+10])
                  []
                core_type (src/conflict.ml[59,2866+13]..[59,2866+16])
                  Ptyp_constr "int" (src/conflict.ml[59,2866+13]..[59,2866+16])
                  []
              ]
    ]
  structure_item (src/conflict.ml[66,3139+0]..[82,3707+38])
    Pstr_value Rec
    [
      <def>
        pattern (src/conflict.ml[66,3139+8]..[66,3139+14])
          Ppat_var "follow" (src/conflict.ml[66,3139+8]..[66,3139+14])
        expression (src/conflict.ml[66,3139+15]..[82,3707+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/conflict.ml[66,3139+15]..[66,3139+25])
            Ppat_var "derivation" (src/conflict.ml[66,3139+15]..[66,3139+25])
          expression (src/conflict.ml[66,3139+26]..[82,3707+38]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/conflict.ml[66,3139+26]..[66,3139+33])
              Ppat_var "offset'" (src/conflict.ml[66,3139+26]..[66,3139+33])
            expression (src/conflict.ml[66,3139+36]..[82,3707+38])
              Pexp_function
              [
                <case>
                  pattern (src/conflict.ml[67,3184+4]..[67,3184+6])
                    Ppat_construct "[]" (src/conflict.ml[67,3184+4]..[67,3184+6])
                    None
                  expression (src/conflict.ml[68,3194+6]..[69,3222+16])
                    Pexp_sequence
                    expression (src/conflict.ml[68,3194+6]..[68,3194+26])
                      Pexp_assert
                      expression (src/conflict.ml[68,3194+13]..[68,3194+26])
                        Pexp_apply
                        expression (src/conflict.ml[68,3194+22]..[68,3194+23])
                          Pexp_ident "=" (src/conflict.ml[68,3194+22]..[68,3194+23])
                        [
                          <arg>
                          Nolabel
                            expression (src/conflict.ml[68,3194+14]..[68,3194+21])
                              Pexp_ident "offset'" (src/conflict.ml[68,3194+14]..[68,3194+21])
                          <arg>
                          Nolabel
                            expression (src/conflict.ml[68,3194+24]..[68,3194+25])
                              Pexp_constant PConst_int (0,None)
                        ]
                    expression (src/conflict.ml[69,3222+6]..[69,3222+16])
                      Pexp_ident "derivation" (src/conflict.ml[69,3222+6]..[69,3222+16])
                <case>
                  pattern (src/conflict.ml[70,3239+4]..[70,3239+29])
                    Ppat_construct "::" (src/conflict.ml[70,3239+19]..[70,3239+21])
                    Some
                      []
                      pattern (src/conflict.ml[70,3239+4]..[70,3239+29]) ghost
                        Ppat_tuple
                        [
                          pattern (src/conflict.ml[70,3239+4]..[70,3239+18])
                            Ppat_tuple
                            [
                              pattern (src/conflict.ml[70,3239+5]..[70,3239+9])
                                Ppat_var "item" (src/conflict.ml[70,3239+5]..[70,3239+9])
                              pattern (src/conflict.ml[70,3239+11]..[70,3239+17])
                                Ppat_var "offset" (src/conflict.ml[70,3239+11]..[70,3239+17])
                            ]
                          pattern (src/conflict.ml[70,3239+22]..[70,3239+29])
                            Ppat_var "configs" (src/conflict.ml[70,3239+22]..[70,3239+29])
                        ]
                  expression (src/conflict.ml[71,3272+6]..[82,3707+38])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/conflict.ml[71,3272+10]..[71,3272+27])
                          Ppat_tuple
                          [
                            pattern (src/conflict.ml[71,3272+10]..[71,3272+11])
                              Ppat_any
                            pattern (src/conflict.ml[71,3272+13]..[71,3272+14])
                              Ppat_any
                            pattern (src/conflict.ml[71,3272+16]..[71,3272+19])
                              Ppat_var "rhs" (src/conflict.ml[71,3272+16]..[71,3272+19])
                            pattern (src/conflict.ml[71,3272+21]..[71,3272+24])
                              Ppat_var "pos" (src/conflict.ml[71,3272+21]..[71,3272+24])
                            pattern (src/conflict.ml[71,3272+26]..[71,3272+27])
                              Ppat_any
                          ]
                        expression (src/conflict.ml[71,3272+30]..[71,3272+43])
                          Pexp_apply
                          expression (src/conflict.ml[71,3272+30]..[71,3272+38])
                            Pexp_ident "Item.def" (src/conflict.ml[71,3272+30]..[71,3272+38])
                          [
                            <arg>
                            Nolabel
                              expression (src/conflict.ml[71,3272+39]..[71,3272+43])
                                Pexp_ident "item" (src/conflict.ml[71,3272+39]..[71,3272+43])
                          ]
                    ]
                    expression (src/conflict.ml[72,3319+6]..[82,3707+38])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/conflict.ml[72,3319+10]..[72,3319+20])
                            Ppat_var "derivation" (src/conflict.ml[72,3319+10]..[72,3319+20])
                          expression (src/conflict.ml[73,3342+8]..[80,3648+49])
                            Pexp_ifthenelse
                            expression (src/conflict.ml[73,3342+11]..[73,3342+27])
                              Pexp_apply
                              expression (src/conflict.ml[73,3342+18]..[73,3342+19])
                                Pexp_ident "=" (src/conflict.ml[73,3342+18]..[73,3342+19])
                              [
                                <arg>
                                Nolabel
                                  expression (src/conflict.ml[73,3342+11]..[73,3342+17])
                                    Pexp_ident "offset" (src/conflict.ml[73,3342+11]..[73,3342+17])
                                <arg>
                                Nolabel
                                  expression (src/conflict.ml[73,3342+20]..[73,3342+27])
                                    Pexp_ident "offset'" (src/conflict.ml[73,3342+20]..[73,3342+27])
                              ]
                            expression (src/conflict.ml[76,3490+10]..[76,3490+50])
                              Pexp_apply
                              expression (src/conflict.ml[76,3490+10]..[76,3490+26])
                                Pexp_ident "Derivation.build" (src/conflict.ml[76,3490+10]..[76,3490+26])
                              [
                                <arg>
                                Nolabel
                                  expression (src/conflict.ml[76,3490+27]..[76,3490+30])
                                    Pexp_ident "pos" (src/conflict.ml[76,3490+27]..[76,3490+30])
                                <arg>
                                Nolabel
                                  expression (src/conflict.ml[76,3490+31]..[76,3490+34])
                                    Pexp_ident "rhs" (src/conflict.ml[76,3490+31]..[76,3490+34])
                                <arg>
                                Nolabel
                                  expression (src/conflict.ml[76,3490+35]..[76,3490+45])
                                    Pexp_ident "derivation" (src/conflict.ml[76,3490+35]..[76,3490+45])
                                <arg>
                                Nolabel
                                  expression (src/conflict.ml[76,3490+46]..[76,3490+50])
                                    Pexp_construct "None" (src/conflict.ml[76,3490+46]..[76,3490+50])
                                    None
                              ]
                            Some
                              expression (src/conflict.ml[80,3648+10]..[80,3648+49])
                                Pexp_apply
                                expression (src/conflict.ml[80,3648+10]..[80,3648+28])
                                  Pexp_ident "Derivation.prepend" (src/conflict.ml[80,3648+10]..[80,3648+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/conflict.ml[80,3648+29]..[80,3648+38])
                                      Pexp_apply
                                      expression (src/conflict.ml[80,3648+29]..[80,3648+38]) ghost
                                        Pexp_ident "Array.get" (src/conflict.ml[80,3648+29]..[80,3648+38]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/conflict.ml[80,3648+29]..[80,3648+32])
                                            Pexp_ident "rhs" (src/conflict.ml[80,3648+29]..[80,3648+32])
                                        <arg>
                                        Nolabel
                                          expression (src/conflict.ml[80,3648+34]..[80,3648+37])
                                            Pexp_ident "pos" (src/conflict.ml[80,3648+34]..[80,3648+37])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/conflict.ml[80,3648+39]..[80,3648+49])
                                      Pexp_ident "derivation" (src/conflict.ml[80,3648+39]..[80,3648+49])
                                ]
                      ]
                      expression (src/conflict.ml[82,3707+6]..[82,3707+38])
                        Pexp_apply
                        expression (src/conflict.ml[82,3707+6]..[82,3707+12])
                          Pexp_ident "follow" (src/conflict.ml[82,3707+6]..[82,3707+12])
                        [
                          <arg>
                          Nolabel
                            expression (src/conflict.ml[82,3707+13]..[82,3707+23])
                              Pexp_ident "derivation" (src/conflict.ml[82,3707+13]..[82,3707+23])
                          <arg>
                          Nolabel
                            expression (src/conflict.ml[82,3707+24]..[82,3707+30])
                              Pexp_ident "offset" (src/conflict.ml[82,3707+24]..[82,3707+30])
                          <arg>
                          Nolabel
                            expression (src/conflict.ml[82,3707+31]..[82,3707+38])
                              Pexp_ident "configs" (src/conflict.ml[82,3707+31]..[82,3707+38])
                        ]
              ]
    ]
  structure_item (src/conflict.ml[95,4313+0]..[95,4313+14])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (src/conflict.ml[95,4313+0]..[95,4313+14])
          pext_name = "Done"
          pext_kind =
            Pext_decl
              []
              None
  structure_item (src/conflict.ml[97,4329+0]..[171,6279+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/conflict.ml[97,4329+4]..[97,4329+22])
          Ppat_var "explain_shift_item" (src/conflict.ml[97,4329+4]..[97,4329+22])
        expression (src/conflict.ml[98,4352+4]..[171,6279+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/conflict.ml[98,4352+4]..[98,4352+20])
            Ppat_constraint
            pattern (src/conflict.ml[98,4352+5]..[98,4352+10])
              Ppat_var "start" (src/conflict.ml[98,4352+5]..[98,4352+10])
            core_type (src/conflict.ml[98,4352+13]..[98,4352+19])
              Ptyp_constr "Item.t" (src/conflict.ml[98,4352+13]..[98,4352+19])
              []
          expression (src/conflict.ml[99,4373+4]..[171,6279+14]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/conflict.ml[99,4373+4]..[99,4373+28])
              Ppat_constraint
              pattern (src/conflict.ml[99,4373+5]..[99,4373+10])
                Ppat_var "input" (src/conflict.ml[99,4373+5]..[99,4373+10])
              core_type (src/conflict.ml[99,4373+13]..[99,4373+27])
                Ptyp_constr "array" (src/conflict.ml[99,4373+22]..[99,4373+27])
                [
                  core_type (src/conflict.ml[99,4373+13]..[99,4373+21])
                    Ptyp_constr "Symbol.t" (src/conflict.ml[99,4373+13]..[99,4373+21])
                    []
                ]
            expression (src/conflict.ml[100,4402+4]..[171,6279+14]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/conflict.ml[100,4402+4]..[100,4402+19])
                Ppat_constraint
                pattern (src/conflict.ml[100,4402+5]..[100,4402+9])
                  Ppat_var "stop" (src/conflict.ml[100,4402+5]..[100,4402+9])
                core_type (src/conflict.ml[100,4402+12]..[100,4402+18])
                  Ptyp_constr "Item.t" (src/conflict.ml[100,4402+12]..[100,4402+18])
                  []
              expression (src/conflict.ml[101,4422+4]..[171,6279+14])
                Pexp_constraint
                expression (src/conflict.ml[103,4444+2]..[171,6279+14])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/conflict.ml[103,4444+6]..[103,4444+7])
                        Ppat_var "n" (src/conflict.ml[103,4444+6]..[103,4444+7])
                      expression (src/conflict.ml[104,4454+4]..[104,4454+22])
                        Pexp_apply
                        expression (src/conflict.ml[104,4454+4]..[104,4454+16])
                          Pexp_ident "Array.length" (src/conflict.ml[104,4454+4]..[104,4454+16])
                        [
                          <arg>
                          Nolabel
                            expression (src/conflict.ml[104,4454+17]..[104,4454+22])
                              Pexp_ident "input" (src/conflict.ml[104,4454+17]..[104,4454+22])
                        ]
                  ]
                  expression (src/conflict.ml[107,4483+2]..[171,6279+14])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/conflict.ml[107,4483+6]..[107,4483+11])
                          Ppat_var "table" (src/conflict.ml[107,4483+6]..[107,4483+11])
                        core_type (src/conflict.ml[107,4483+14]..[107,4483+63])
                          Ptyp_constr "Hashtbl.t" (src/conflict.ml[107,4483+54]..[107,4483+63])
                          [
                            core_type (src/conflict.ml[107,4483+15]..[107,4483+29])
                              Ptyp_constr "configuration0" (src/conflict.ml[107,4483+15]..[107,4483+29])
                              []
                            core_type (src/conflict.ml[107,4483+31]..[107,4483+52])
                              Ptyp_constr "option" (src/conflict.ml[107,4483+46]..[107,4483+52])
                              [
                                core_type (src/conflict.ml[107,4483+31]..[107,4483+45])
                                  Ptyp_constr "configuration0" (src/conflict.ml[107,4483+31]..[107,4483+45])
                                  []
                              ]
                          ]
                        expression (src/conflict.ml[108,4549+4]..[108,4549+23])
                          Pexp_apply
                          expression (src/conflict.ml[108,4549+4]..[108,4549+18])
                            Pexp_ident "Hashtbl.create" (src/conflict.ml[108,4549+4]..[108,4549+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/conflict.ml[108,4549+19]..[108,4549+23])
                                Pexp_constant PConst_int (1023,None)
                          ]
                    ]
                    expression (src/conflict.ml[111,4579+2]..[171,6279+14])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/conflict.ml[111,4579+6]..[111,4579+11])
                            Ppat_var "queue" (src/conflict.ml[111,4579+6]..[111,4579+11])
                          core_type (src/conflict.ml[111,4579+14]..[111,4579+36])
                            Ptyp_constr "Queue.t" (src/conflict.ml[111,4579+29]..[111,4579+36])
                            [
                              core_type (src/conflict.ml[111,4579+14]..[111,4579+28])
                                Ptyp_constr "configuration0" (src/conflict.ml[111,4579+14]..[111,4579+28])
                                []
                            ]
                          expression (src/conflict.ml[112,4618+4]..[112,4618+18])
                            Pexp_apply
                            expression (src/conflict.ml[112,4618+4]..[112,4618+16])
                              Pexp_ident "Queue.create" (src/conflict.ml[112,4618+4]..[112,4618+16])
                            [
                              <arg>
                              Nolabel
                                expression (src/conflict.ml[112,4618+16]..[112,4618+18])
                                  Pexp_construct "()" (src/conflict.ml[112,4618+16]..[112,4618+18])
                                  None
                            ]
                      ]
                      expression (src/conflict.ml[115,4643+2]..[171,6279+14])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/conflict.ml[115,4643+6]..[115,4643+13])
                              Ppat_var "enqueue" (src/conflict.ml[115,4643+6]..[115,4643+13])
                            expression (src/conflict.ml[115,4643+14]..[121,4798+28]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/conflict.ml[115,4643+14]..[115,4643+22])
                                Ppat_var "ancestor" (src/conflict.ml[115,4643+14]..[115,4643+22])
                              expression (src/conflict.ml[115,4643+23]..[121,4798+28]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/conflict.ml[115,4643+23]..[115,4643+29])
                                  Ppat_var "config" (src/conflict.ml[115,4643+23]..[115,4643+29])
                                expression (src/conflict.ml[116,4675+4]..[121,4798+28])
                                  Pexp_try
                                  expression (src/conflict.ml[117,4683+6]..[118,4726+8])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/conflict.ml[117,4683+10]..[117,4683+11])
                                          Ppat_any
                                        expression (src/conflict.ml[117,4683+14]..[117,4683+39])
                                          Pexp_apply
                                          expression (src/conflict.ml[117,4683+14]..[117,4683+26])
                                            Pexp_ident "Hashtbl.find" (src/conflict.ml[117,4683+14]..[117,4683+26])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/conflict.ml[117,4683+27]..[117,4683+32])
                                                Pexp_ident "table" (src/conflict.ml[117,4683+27]..[117,4683+32])
                                            <arg>
                                            Nolabel
                                              expression (src/conflict.ml[117,4683+33]..[117,4683+39])
                                                Pexp_ident "config" (src/conflict.ml[117,4683+33]..[117,4683+39])
                                          ]
                                    ]
                                    expression (src/conflict.ml[118,4726+6]..[118,4726+8])
                                      Pexp_construct "()" (src/conflict.ml[118,4726+6]..[118,4726+8])
                                      None
                                  [
                                    <case>
                                      pattern (src/conflict.ml[119,4735+9]..[119,4735+18])
                                        Ppat_construct "Not_found" (src/conflict.ml[119,4735+9]..[119,4735+18])
                                        None
                                      expression (src/conflict.ml[120,4757+6]..[121,4798+28])
                                        Pexp_sequence
                                        expression (src/conflict.ml[120,4757+6]..[120,4757+39])
                                          Pexp_apply
                                          expression (src/conflict.ml[120,4757+6]..[120,4757+17])
                                            Pexp_ident "Hashtbl.add" (src/conflict.ml[120,4757+6]..[120,4757+17])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/conflict.ml[120,4757+18]..[120,4757+23])
                                                Pexp_ident "table" (src/conflict.ml[120,4757+18]..[120,4757+23])
                                            <arg>
                                            Nolabel
                                              expression (src/conflict.ml[120,4757+24]..[120,4757+30])
                                                Pexp_ident "config" (src/conflict.ml[120,4757+24]..[120,4757+30])
                                            <arg>
                                            Nolabel
                                              expression (src/conflict.ml[120,4757+31]..[120,4757+39])
                                                Pexp_ident "ancestor" (src/conflict.ml[120,4757+31]..[120,4757+39])
                                          ]
                                        expression (src/conflict.ml[121,4798+6]..[121,4798+28])
                                          Pexp_apply
                                          expression (src/conflict.ml[121,4798+6]..[121,4798+15])
                                            Pexp_ident "Queue.add" (src/conflict.ml[121,4798+6]..[121,4798+15])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/conflict.ml[121,4798+16]..[121,4798+22])
                                                Pexp_ident "config" (src/conflict.ml[121,4798+16]..[121,4798+22])
                                            <arg>
                                            Nolabel
                                              expression (src/conflict.ml[121,4798+23]..[121,4798+28])
                                                Pexp_ident "queue" (src/conflict.ml[121,4798+23]..[121,4798+28])
                                          ]
                                  ]
                        ]
                        expression (src/conflict.ml[124,4833+2]..[171,6279+14])
                          Pexp_sequence
                          expression (src/conflict.ml[124,4833+2]..[124,4833+25])
                            Pexp_apply
                            expression (src/conflict.ml[124,4833+2]..[124,4833+9])
                              Pexp_ident "enqueue" (src/conflict.ml[124,4833+2]..[124,4833+9])
                            [
                              <arg>
                              Nolabel
                                expression (src/conflict.ml[124,4833+10]..[124,4833+14])
                                  Pexp_construct "None" (src/conflict.ml[124,4833+10]..[124,4833+14])
                                  None
                              <arg>
                              Nolabel
                                expression (src/conflict.ml[124,4833+15]..[124,4833+25])
                                  Pexp_tuple
                                  [
                                    expression (src/conflict.ml[124,4833+16]..[124,4833+21])
                                      Pexp_ident "start" (src/conflict.ml[124,4833+16]..[124,4833+21])
                                    expression (src/conflict.ml[124,4833+23]..[124,4833+24])
                                      Pexp_constant PConst_int (0,None)
                                  ]
                            ]
                          expression (src/conflict.ml[125,4860+2]..[171,6279+14])
                            Pexp_try
                            expression (src/conflict.ml[126,4866+4]..[161,5904+16])
                              Pexp_sequence
                              expression (src/conflict.ml[126,4866+4]..[160,5891+11])
                                Pexp_apply
                                expression (src/conflict.ml[126,4866+4]..[126,4866+14])
                                  Pexp_ident "Misc.qiter" (src/conflict.ml[126,4866+4]..[126,4866+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/conflict.ml[126,4866+15]..[160,5891+5])
                                      Pexp_function
                                      [
                                        <case>
                                          pattern (src/conflict.ml[126,4866+25]..[126,4866+49])
                                            Ppat_alias "config" (src/conflict.ml[126,4866+43]..[126,4866+49])
                                            pattern (src/conflict.ml[126,4866+25]..[126,4866+39])
                                              Ppat_tuple
                                              [
                                                pattern (src/conflict.ml[126,4866+26]..[126,4866+30])
                                                  Ppat_var "item" (src/conflict.ml[126,4866+26]..[126,4866+30])
                                                pattern (src/conflict.ml[126,4866+32]..[126,4866+38])
                                                  Ppat_var "offset" (src/conflict.ml[126,4866+32]..[126,4866+38])
                                              ]
                                          expression (src/conflict.ml[131,5040+6]..[158,5875+14])
                                            Pexp_sequence
                                            expression (src/conflict.ml[131,5040+6]..[132,5093+18])
                                              Pexp_ifthenelse
                                              expression (src/conflict.ml[131,5040+9]..[131,5040+47])
                                                Pexp_apply
                                                expression (src/conflict.ml[131,5040+32]..[131,5040+34])
                                                  Pexp_ident "&&" (src/conflict.ml[131,5040+32]..[131,5040+34])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/conflict.ml[131,5040+9]..[131,5040+31])
                                                      Pexp_apply
                                                      expression (src/conflict.ml[131,5040+10]..[131,5040+20])
                                                        Pexp_ident "Item.equal" (src/conflict.ml[131,5040+10]..[131,5040+20])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/conflict.ml[131,5040+21]..[131,5040+25])
                                                            Pexp_ident "item" (src/conflict.ml[131,5040+21]..[131,5040+25])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/conflict.ml[131,5040+26]..[131,5040+30])
                                                            Pexp_ident "stop" (src/conflict.ml[131,5040+26]..[131,5040+30])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (src/conflict.ml[131,5040+35]..[131,5040+47])
                                                      Pexp_apply
                                                      expression (src/conflict.ml[131,5040+43]..[131,5040+44])
                                                        Pexp_ident "=" (src/conflict.ml[131,5040+43]..[131,5040+44])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/conflict.ml[131,5040+36]..[131,5040+42])
                                                            Pexp_ident "offset" (src/conflict.ml[131,5040+36]..[131,5040+42])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/conflict.ml[131,5040+45]..[131,5040+46])
                                                            Pexp_ident "n" (src/conflict.ml[131,5040+45]..[131,5040+46])
                                                      ]
                                                ]
                                              expression (src/conflict.ml[132,5093+8]..[132,5093+18])
                                                Pexp_apply
                                                expression (src/conflict.ml[132,5093+8]..[132,5093+13])
                                                  Pexp_ident "raise" (src/conflict.ml[132,5093+8]..[132,5093+13])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/conflict.ml[132,5093+14]..[132,5093+18])
                                                      Pexp_construct "Done" (src/conflict.ml[132,5093+14]..[132,5093+18])
                                                      None
                                                ]
                                              None
                                            expression (src/conflict.ml[136,5180+6]..[158,5875+14])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/conflict.ml[136,5180+10]..[136,5180+35])
                                                    Ppat_tuple
                                                    [
                                                      pattern (src/conflict.ml[136,5180+10]..[136,5180+14])
                                                        Ppat_var "prod" (src/conflict.ml[136,5180+10]..[136,5180+14])
                                                      pattern (src/conflict.ml[136,5180+16]..[136,5180+17])
                                                        Ppat_any
                                                      pattern (src/conflict.ml[136,5180+19]..[136,5180+22])
                                                        Ppat_var "rhs" (src/conflict.ml[136,5180+19]..[136,5180+22])
                                                      pattern (src/conflict.ml[136,5180+24]..[136,5180+27])
                                                        Ppat_var "pos" (src/conflict.ml[136,5180+24]..[136,5180+27])
                                                      pattern (src/conflict.ml[136,5180+29]..[136,5180+35])
                                                        Ppat_var "length" (src/conflict.ml[136,5180+29]..[136,5180+35])
                                                    ]
                                                  expression (src/conflict.ml[136,5180+38]..[136,5180+51])
                                                    Pexp_apply
                                                    expression (src/conflict.ml[136,5180+38]..[136,5180+46])
                                                      Pexp_ident "Item.def" (src/conflict.ml[136,5180+38]..[136,5180+46])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/conflict.ml[136,5180+47]..[136,5180+51])
                                                          Pexp_ident "item" (src/conflict.ml[136,5180+47]..[136,5180+51])
                                                    ]
                                              ]
                                              expression (src/conflict.ml[141,5350+6]..[158,5875+14])
                                                Pexp_sequence
                                                expression (src/conflict.ml[141,5350+6]..[146,5557+9])
                                                  Pexp_ifthenelse
                                                  expression (src/conflict.ml[141,5350+9]..[143,5396+48])
                                                    Pexp_apply
                                                    expression (src/conflict.ml[142,5374+6]..[142,5374+8])
                                                      Pexp_ident "&&" (src/conflict.ml[142,5374+6]..[142,5374+8])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/conflict.ml[141,5350+9]..[141,5350+23])
                                                          Pexp_apply
                                                          expression (src/conflict.ml[141,5350+14]..[141,5350+15])
                                                            Pexp_ident "<" (src/conflict.ml[141,5350+14]..[141,5350+15])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/conflict.ml[141,5350+10]..[141,5350+13])
                                                                Pexp_ident "pos" (src/conflict.ml[141,5350+10]..[141,5350+13])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/conflict.ml[141,5350+16]..[141,5350+22])
                                                                Pexp_ident "length" (src/conflict.ml[141,5350+16]..[141,5350+22])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (src/conflict.ml[142,5374+9]..[143,5396+48])
                                                          Pexp_apply
                                                          expression (src/conflict.ml[143,5396+6]..[143,5396+8])
                                                            Pexp_ident "&&" (src/conflict.ml[143,5396+6]..[143,5396+8])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/conflict.ml[142,5374+9]..[142,5374+21])
                                                                Pexp_apply
                                                                expression (src/conflict.ml[142,5374+17]..[142,5374+18])
                                                                  Pexp_ident "<" (src/conflict.ml[142,5374+17]..[142,5374+18])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/conflict.ml[142,5374+10]..[142,5374+16])
                                                                      Pexp_ident "offset" (src/conflict.ml[142,5374+10]..[142,5374+16])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/conflict.ml[142,5374+19]..[142,5374+20])
                                                                      Pexp_ident "n" (src/conflict.ml[142,5374+19]..[142,5374+20])
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (src/conflict.ml[143,5396+9]..[143,5396+48])
                                                                Pexp_apply
                                                                expression (src/conflict.ml[143,5396+10]..[143,5396+22])
                                                                  Pexp_ident "Symbol.equal" (src/conflict.ml[143,5396+10]..[143,5396+22])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/conflict.ml[143,5396+23]..[143,5396+32])
                                                                      Pexp_apply
                                                                      expression (src/conflict.ml[143,5396+23]..[143,5396+32]) ghost
Pexp_ident "Array.get" (src/conflict.ml[143,5396+23]..[143,5396+32]) ghost
                                                                      [
<arg>
Nolabel
  expression (src/conflict.ml[143,5396+23]..[143,5396+26])
    Pexp_ident "rhs" (src/conflict.ml[143,5396+23]..[143,5396+26])
<arg>
Nolabel
  expression (src/conflict.ml[143,5396+28]..[143,5396+31])
    Pexp_ident "pos" (src/conflict.ml[143,5396+28]..[143,5396+31])
                                                                      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/conflict.ml[143,5396+33]..[143,5396+47])
                                                                      Pexp_apply
                                                                      expression (src/conflict.ml[143,5396+33]..[143,5396+47]) ghost
Pexp_ident "Array.get" (src/conflict.ml[143,5396+33]..[143,5396+47]) ghost
                                                                      [
<arg>
Nolabel
  expression (src/conflict.ml[143,5396+33]..[143,5396+38])
    Pexp_ident "input" (src/conflict.ml[143,5396+33]..[143,5396+38])
<arg>
Nolabel
  expression (src/conflict.ml[143,5396+40]..[143,5396+46])
    Pexp_ident "offset" (src/conflict.ml[143,5396+40]..[143,5396+46])
                                                                      ]
                                                                ]
                                                          ]
                                                    ]
                                                  expression (src/conflict.ml[143,5396+54]..[146,5557+9])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (src/conflict.ml[144,5456+12]..[144,5456+19])
                                                          Ppat_var "config'" (src/conflict.ml[144,5456+12]..[144,5456+19])
                                                        expression (src/conflict.ml[144,5456+22]..[144,5456+59])
                                                          Pexp_tuple
                                                          [
                                                            expression (src/conflict.ml[144,5456+23]..[144,5456+48])
                                                              Pexp_apply
                                                              expression (src/conflict.ml[144,5456+23]..[144,5456+34])
                                                                Pexp_ident "Item.import" (src/conflict.ml[144,5456+23]..[144,5456+34])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/conflict.ml[144,5456+35]..[144,5456+48])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (src/conflict.ml[144,5456+36]..[144,5456+40])
Pexp_ident "prod" (src/conflict.ml[144,5456+36]..[144,5456+40])
                                                                      expression (src/conflict.ml[144,5456+42]..[144,5456+47])
Pexp_apply
expression (src/conflict.ml[144,5456+45]..[144,5456+46])
  Pexp_ident "+" (src/conflict.ml[144,5456+45]..[144,5456+46])
[
  <arg>
  Nolabel
    expression (src/conflict.ml[144,5456+42]..[144,5456+45])
      Pexp_ident "pos" (src/conflict.ml[144,5456+42]..[144,5456+45])
  <arg>
  Nolabel
    expression (src/conflict.ml[144,5456+46]..[144,5456+47])
      Pexp_constant PConst_int (1,None)
]
                                                                    ]
                                                              ]
                                                            expression (src/conflict.ml[144,5456+50]..[144,5456+58])
                                                              Pexp_apply
                                                              expression (src/conflict.ml[144,5456+56]..[144,5456+57])
                                                                Pexp_ident "+" (src/conflict.ml[144,5456+56]..[144,5456+57])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/conflict.ml[144,5456+50]..[144,5456+56])
                                                                    Pexp_ident "offset" (src/conflict.ml[144,5456+50]..[144,5456+56])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/conflict.ml[144,5456+57]..[144,5456+58])
                                                                    Pexp_constant PConst_int (1,None)
                                                              ]
                                                          ]
                                                    ]
                                                    expression (src/conflict.ml[145,5519+8]..[145,5519+37])
                                                      Pexp_apply
                                                      expression (src/conflict.ml[145,5519+8]..[145,5519+15])
                                                        Pexp_ident "enqueue" (src/conflict.ml[145,5519+8]..[145,5519+15])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/conflict.ml[145,5519+16]..[145,5519+29])
                                                            Pexp_construct "Some" (src/conflict.ml[145,5519+17]..[145,5519+21])
                                                            Some
                                                              expression (src/conflict.ml[145,5519+22]..[145,5519+28])
                                                                Pexp_ident "config" (src/conflict.ml[145,5519+22]..[145,5519+28])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/conflict.ml[145,5519+30]..[145,5519+37])
                                                            Pexp_ident "config'" (src/conflict.ml[145,5519+30]..[145,5519+37])
                                                      ]
                                                  None
                                                expression (src/conflict.ml[150,5603+6]..[158,5875+14])
                                                  Pexp_ifthenelse
                                                  expression (src/conflict.ml[150,5603+9]..[150,5603+21])
                                                    Pexp_apply
                                                    expression (src/conflict.ml[150,5603+13]..[150,5603+14])
                                                      Pexp_ident "<" (src/conflict.ml[150,5603+13]..[150,5603+14])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/conflict.ml[150,5603+9]..[150,5603+12])
                                                          Pexp_ident "pos" (src/conflict.ml[150,5603+9]..[150,5603+12])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/conflict.ml[150,5603+15]..[150,5603+21])
                                                          Pexp_ident "length" (src/conflict.ml[150,5603+15]..[150,5603+21])
                                                    ]
                                                  expression (src/conflict.ml[151,5630+8]..[158,5875+14])
                                                    Pexp_match
                                                    expression (src/conflict.ml[151,5630+14]..[151,5630+23])
                                                      Pexp_apply
                                                      expression (src/conflict.ml[151,5630+14]..[151,5630+23]) ghost
                                                        Pexp_ident "Array.get" (src/conflict.ml[151,5630+14]..[151,5630+23]) ghost
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/conflict.ml[151,5630+14]..[151,5630+17])
                                                            Pexp_ident "rhs" (src/conflict.ml[151,5630+14]..[151,5630+17])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/conflict.ml[151,5630+19]..[151,5630+22])
                                                            Pexp_ident "pos" (src/conflict.ml[151,5630+19]..[151,5630+22])
                                                      ]
                                                    [
                                                      <case>
                                                        pattern (src/conflict.ml[152,5659+10]..[152,5659+21])
                                                          Ppat_construct "Symbol.N" (src/conflict.ml[152,5659+10]..[152,5659+18])
                                                          Some
                                                            []
                                                            pattern (src/conflict.ml[152,5659+19]..[152,5659+21])
                                                              Ppat_var "nt" (src/conflict.ml[152,5659+19]..[152,5659+21])
                                                        expression (src/conflict.ml[153,5684+12]..[156,5837+13])
                                                          Pexp_apply
                                                          expression (src/conflict.ml[153,5684+12]..[153,5684+29])
                                                            Pexp_ident "Production.iternt" (src/conflict.ml[153,5684+12]..[153,5684+29])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/conflict.ml[153,5684+30]..[153,5684+32])
                                                                Pexp_ident "nt" (src/conflict.ml[153,5684+30]..[153,5684+32])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/conflict.ml[153,5684+33]..[156,5837+13])
                                                                Pexp_fun
                                                                Nolabel
                                                                None
                                                                pattern (src/conflict.ml[153,5684+38]..[153,5684+42])
                                                                  Ppat_var "prod" (src/conflict.ml[153,5684+38]..[153,5684+42])
                                                                expression (src/conflict.ml[154,5730+14]..[155,5793+43])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (src/conflict.ml[154,5730+18]..[154,5730+25])
Ppat_var "config'" (src/conflict.ml[154,5730+18]..[154,5730+25])
                                                                      expression (src/conflict.ml[154,5730+28]..[154,5730+59])
Pexp_tuple
[
  expression (src/conflict.ml[154,5730+29]..[154,5730+50])
    Pexp_apply
    expression (src/conflict.ml[154,5730+29]..[154,5730+40])
      Pexp_ident "Item.import" (src/conflict.ml[154,5730+29]..[154,5730+40])
    [
      <arg>
      Nolabel
        expression (src/conflict.ml[154,5730+41]..[154,5730+50])
          Pexp_tuple
          [
            expression (src/conflict.ml[154,5730+42]..[154,5730+46])
              Pexp_ident "prod" (src/conflict.ml[154,5730+42]..[154,5730+46])
            expression (src/conflict.ml[154,5730+48]..[154,5730+49])
              Pexp_constant PConst_int (0,None)
          ]
    ]
  expression (src/conflict.ml[154,5730+52]..[154,5730+58])
    Pexp_ident "offset" (src/conflict.ml[154,5730+52]..[154,5730+58])
]
                                                                  ]
                                                                  expression (src/conflict.ml[155,5793+14]..[155,5793+43])
                                                                    Pexp_apply
                                                                    expression (src/conflict.ml[155,5793+14]..[155,5793+21])
                                                                      Pexp_ident "enqueue" (src/conflict.ml[155,5793+14]..[155,5793+21])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/conflict.ml[155,5793+22]..[155,5793+35])
  Pexp_construct "Some" (src/conflict.ml[155,5793+23]..[155,5793+27])
  Some
    expression (src/conflict.ml[155,5793+28]..[155,5793+34])
      Pexp_ident "config" (src/conflict.ml[155,5793+28]..[155,5793+34])
                                                                      <arg>
                                                                      Nolabel
expression (src/conflict.ml[155,5793+36]..[155,5793+43])
  Pexp_ident "config'" (src/conflict.ml[155,5793+36]..[155,5793+43])
                                                                    ]
                                                          ]
                                                      <case>
                                                        pattern (src/conflict.ml[157,5851+10]..[157,5851+20])
                                                          Ppat_construct "Symbol.T" (src/conflict.ml[157,5851+10]..[157,5851+18])
                                                          Some
                                                            []
                                                            pattern (src/conflict.ml[157,5851+19]..[157,5851+20])
                                                              Ppat_any
                                                        expression (src/conflict.ml[158,5875+12]..[158,5875+14])
                                                          Pexp_construct "()" (src/conflict.ml[158,5875+12]..[158,5875+14])
                                                          None
                                                    ]
                                                  None
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/conflict.ml[160,5891+6]..[160,5891+11])
                                      Pexp_ident "queue" (src/conflict.ml[160,5891+6]..[160,5891+11])
                                ]
                              expression (src/conflict.ml[161,5904+4]..[161,5904+16])
                                Pexp_assert
                                expression (src/conflict.ml[161,5904+11]..[161,5904+16])
                                  Pexp_construct "false" (src/conflict.ml[161,5904+11]..[161,5904+16])
                                  None
                            [
                              <case>
                                pattern (src/conflict.ml[162,5921+7]..[162,5921+11])
                                  Ppat_construct "Done" (src/conflict.ml[162,5921+7]..[162,5921+11])
                                  None
                                expression (src/conflict.ml[167,6080+4]..[171,6279+14])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/conflict.ml[167,6080+8]..[167,6080+15])
                                        Ppat_var "configs" (src/conflict.ml[167,6080+8]..[167,6080+15])
                                      expression (src/conflict.ml[167,6080+18]..[167,6080+50])
                                        Pexp_apply
                                        expression (src/conflict.ml[167,6080+18]..[167,6080+34])
                                          Pexp_ident "Misc.materialize" (src/conflict.ml[167,6080+18]..[167,6080+34])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/conflict.ml[167,6080+35]..[167,6080+40])
                                              Pexp_ident "table" (src/conflict.ml[167,6080+35]..[167,6080+40])
                                          <arg>
                                          Nolabel
                                            expression (src/conflict.ml[167,6080+41]..[167,6080+50])
                                              Pexp_tuple
                                              [
                                                expression (src/conflict.ml[167,6080+42]..[167,6080+46])
                                                  Pexp_ident "stop" (src/conflict.ml[167,6080+42]..[167,6080+46])
                                                expression (src/conflict.ml[167,6080+48]..[167,6080+49])
                                                  Pexp_ident "n" (src/conflict.ml[167,6080+48]..[167,6080+49])
                                              ]
                                        ]
                                  ]
                                  expression (src/conflict.ml[168,6134+4]..[171,6279+14])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/conflict.ml[168,6134+8]..[168,6134+25])
                                          Ppat_tuple
                                          [
                                            pattern (src/conflict.ml[168,6134+8]..[168,6134+9])
                                              Ppat_any
                                            pattern (src/conflict.ml[168,6134+11]..[168,6134+12])
                                              Ppat_any
                                            pattern (src/conflict.ml[168,6134+14]..[168,6134+17])
                                              Ppat_var "rhs" (src/conflict.ml[168,6134+14]..[168,6134+17])
                                            pattern (src/conflict.ml[168,6134+19]..[168,6134+22])
                                              Ppat_var "pos" (src/conflict.ml[168,6134+19]..[168,6134+22])
                                            pattern (src/conflict.ml[168,6134+24]..[168,6134+25])
                                              Ppat_any
                                          ]
                                        expression (src/conflict.ml[168,6134+28]..[168,6134+41])
                                          Pexp_apply
                                          expression (src/conflict.ml[168,6134+28]..[168,6134+36])
                                            Pexp_ident "Item.def" (src/conflict.ml[168,6134+28]..[168,6134+36])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/conflict.ml[168,6134+37]..[168,6134+41])
                                                Pexp_ident "stop" (src/conflict.ml[168,6134+37]..[168,6134+41])
                                          ]
                                    ]
                                    expression (src/conflict.ml[169,6179+4]..[171,6279+14])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/conflict.ml[169,6179+8]..[169,6179+18])
                                            Ppat_var "derivation" (src/conflict.ml[169,6179+8]..[169,6179+18])
                                          expression (src/conflict.ml[169,6179+21]..[169,6179+44])
                                            Pexp_apply
                                            expression (src/conflict.ml[169,6179+21]..[169,6179+36])
                                              Pexp_ident "Derivation.tail" (src/conflict.ml[169,6179+21]..[169,6179+36])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/conflict.ml[169,6179+37]..[169,6179+40])
                                                  Pexp_ident "pos" (src/conflict.ml[169,6179+37]..[169,6179+40])
                                              <arg>
                                              Nolabel
                                                expression (src/conflict.ml[169,6179+41]..[169,6179+44])
                                                  Pexp_ident "rhs" (src/conflict.ml[169,6179+41]..[169,6179+44])
                                            ]
                                      ]
                                      expression (src/conflict.ml[170,6227+4]..[171,6279+14])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/conflict.ml[170,6227+8]..[170,6227+18])
                                              Ppat_var "derivation" (src/conflict.ml[170,6227+8]..[170,6227+18])
                                            expression (src/conflict.ml[170,6227+21]..[170,6227+48])
                                              Pexp_apply
                                              expression (src/conflict.ml[170,6227+21]..[170,6227+27])
                                                Pexp_ident "follow" (src/conflict.ml[170,6227+21]..[170,6227+27])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/conflict.ml[170,6227+28]..[170,6227+38])
                                                    Pexp_ident "derivation" (src/conflict.ml[170,6227+28]..[170,6227+38])
                                                <arg>
                                                Nolabel
                                                  expression (src/conflict.ml[170,6227+39]..[170,6227+40])
                                                    Pexp_ident "n" (src/conflict.ml[170,6227+39]..[170,6227+40])
                                                <arg>
                                                Nolabel
                                                  expression (src/conflict.ml[170,6227+41]..[170,6227+48])
                                                    Pexp_ident "configs" (src/conflict.ml[170,6227+41]..[170,6227+48])
                                              ]
                                        ]
                                        expression (src/conflict.ml[171,6279+4]..[171,6279+14])
                                          Pexp_ident "derivation" (src/conflict.ml[171,6279+4]..[171,6279+14])
                            ]
                core_type (src/conflict.ml[101,4422+6]..[101,4422+18])
                  Ptyp_constr "Derivation.t" (src/conflict.ml[101,4422+6]..[101,4422+18])
                  []
    ]
  structure_item (src/conflict.ml[196,7509+0]..[197,7531+23])
    Pstr_type Rec
    [
      type_declaration "configuration1" (src/conflict.ml[196,7509+5]..[196,7509+19]) (src/conflict.ml[196,7509+0]..[197,7531+23])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/conflict.ml[197,7531+4]..[197,7531+23])
              Ptyp_tuple
              [
                core_type (src/conflict.ml[197,7531+4]..[197,7531+10])
                  Ptyp_constr "Item.t" (src/conflict.ml[197,7531+4]..[197,7531+10])
                  []
                core_type (src/conflict.ml[197,7531+13]..[197,7531+17])
                  Ptyp_constr "bool" (src/conflict.ml[197,7531+13]..[197,7531+17])
                  []
                core_type (src/conflict.ml[197,7531+20]..[197,7531+23])
                  Ptyp_constr "int" (src/conflict.ml[197,7531+20]..[197,7531+23])
                  []
              ]
    ]
  structure_item (src/conflict.ml[204,7859+0]..[205,7900+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/conflict.ml[204,7859+4]..[204,7859+20])
          Ppat_var "config1toconfig0" (src/conflict.ml[204,7859+4]..[204,7859+20])
        expression (src/conflict.ml[204,7859+21]..[205,7900+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/conflict.ml[204,7859+21]..[204,7859+38])
            Ppat_tuple
            [
              pattern (src/conflict.ml[204,7859+22]..[204,7859+26])
                Ppat_var "item" (src/conflict.ml[204,7859+22]..[204,7859+26])
              pattern (src/conflict.ml[204,7859+28]..[204,7859+29])
                Ppat_any
              pattern (src/conflict.ml[204,7859+31]..[204,7859+37])
                Ppat_var "offset" (src/conflict.ml[204,7859+31]..[204,7859+37])
            ]
          expression (src/conflict.ml[205,7900+2]..[205,7900+16])
            Pexp_tuple
            [
              expression (src/conflict.ml[205,7900+3]..[205,7900+7])
                Pexp_ident "item" (src/conflict.ml[205,7900+3]..[205,7900+7])
              expression (src/conflict.ml[205,7900+9]..[205,7900+15])
                Pexp_ident "offset" (src/conflict.ml[205,7900+9]..[205,7900+15])
            ]
    ]
  structure_item (src/conflict.ml[207,7918+0]..[269,9972+45])
    Pstr_value Rec
    [
      <def>
        pattern (src/conflict.ml[207,7918+8]..[207,7918+15])
          Ppat_var "follow1" (src/conflict.ml[207,7918+8]..[207,7918+15])
        expression (src/conflict.ml[207,7918+16]..[269,9972+45]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/conflict.ml[207,7918+16]..[207,7918+19])
            Ppat_var "tok" (src/conflict.ml[207,7918+16]..[207,7918+19])
          expression (src/conflict.ml[207,7918+20]..[269,9972+45]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/conflict.ml[207,7918+20]..[207,7918+30])
              Ppat_var "derivation" (src/conflict.ml[207,7918+20]..[207,7918+30])
            expression (src/conflict.ml[207,7918+31]..[269,9972+45]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/conflict.ml[207,7918+31]..[207,7918+38])
                Ppat_var "offset'" (src/conflict.ml[207,7918+31]..[207,7918+38])
              expression (src/conflict.ml[207,7918+41]..[269,9972+45])
                Pexp_function
                [
                  <case>
                    pattern (src/conflict.ml[208,7968+4]..[208,7968+6])
                      Ppat_construct "[]" (src/conflict.ml[208,7968+4]..[208,7968+6])
                      None
                    expression (src/conflict.ml[209,7978+6]..[214,8278+16])
                      Pexp_sequence
                      expression (src/conflict.ml[209,7978+6]..[209,7978+48])
                        Pexp_assert
                        expression (src/conflict.ml[209,7978+13]..[209,7978+48])
                          Pexp_apply
                          expression (src/conflict.ml[209,7978+14]..[209,7978+28])
                            Pexp_ident "Terminal.equal" (src/conflict.ml[209,7978+14]..[209,7978+28])
                          [
                            <arg>
                            Nolabel
                              expression (src/conflict.ml[209,7978+29]..[209,7978+32])
                                Pexp_ident "tok" (src/conflict.ml[209,7978+29]..[209,7978+32])
                            <arg>
                            Nolabel
                              expression (src/conflict.ml[209,7978+33]..[209,7978+47])
                                Pexp_ident "Terminal.sharp" (src/conflict.ml[209,7978+33]..[209,7978+47])
                          ]
                      expression (src/conflict.ml[214,8278+6]..[214,8278+16])
                        Pexp_ident "derivation" (src/conflict.ml[214,8278+6]..[214,8278+16])
                  <case>
                    pattern (src/conflict.ml[215,8295+4]..[215,8295+32])
                      Ppat_construct "::" (src/conflict.ml[215,8295+22]..[215,8295+24])
                      Some
                        []
                        pattern (src/conflict.ml[215,8295+4]..[215,8295+32]) ghost
                          Ppat_tuple
                          [
                            pattern (src/conflict.ml[215,8295+4]..[215,8295+21])
                              Ppat_tuple
                              [
                                pattern (src/conflict.ml[215,8295+5]..[215,8295+9])
                                  Ppat_var "item" (src/conflict.ml[215,8295+5]..[215,8295+9])
                                pattern (src/conflict.ml[215,8295+11]..[215,8295+12])
                                  Ppat_any
                                pattern (src/conflict.ml[215,8295+14]..[215,8295+20])
                                  Ppat_var "offset" (src/conflict.ml[215,8295+14]..[215,8295+20])
                              ]
                            pattern (src/conflict.ml[215,8295+25]..[215,8295+32])
                              Ppat_var "configs" (src/conflict.ml[215,8295+25]..[215,8295+32])
                          ]
                    expression (src/conflict.ml[216,8331+6]..[269,9972+45])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/conflict.ml[216,8331+10]..[216,8331+35])
                            Ppat_tuple
                            [
                              pattern (src/conflict.ml[216,8331+10]..[216,8331+14])
                                Ppat_var "prod" (src/conflict.ml[216,8331+10]..[216,8331+14])
                              pattern (src/conflict.ml[216,8331+16]..[216,8331+17])
                                Ppat_any
                              pattern (src/conflict.ml[216,8331+19]..[216,8331+22])
                                Ppat_var "rhs" (src/conflict.ml[216,8331+19]..[216,8331+22])
                              pattern (src/conflict.ml[216,8331+24]..[216,8331+27])
                                Ppat_var "pos" (src/conflict.ml[216,8331+24]..[216,8331+27])
                              pattern (src/conflict.ml[216,8331+29]..[216,8331+35])
                                Ppat_var "length" (src/conflict.ml[216,8331+29]..[216,8331+35])
                            ]
                          expression (src/conflict.ml[216,8331+38]..[216,8331+51])
                            Pexp_apply
                            expression (src/conflict.ml[216,8331+38]..[216,8331+46])
                              Pexp_ident "Item.def" (src/conflict.ml[216,8331+38]..[216,8331+46])
                            [
                              <arg>
                              Nolabel
                                expression (src/conflict.ml[216,8331+47]..[216,8331+51])
                                  Pexp_ident "item" (src/conflict.ml[216,8331+47]..[216,8331+51])
                            ]
                      ]
                      expression (src/conflict.ml[217,8386+6]..[269,9972+45])
                        Pexp_ifthenelse
                        expression (src/conflict.ml[217,8386+9]..[217,8386+25])
                          Pexp_apply
                          expression (src/conflict.ml[217,8386+16]..[217,8386+17])
                            Pexp_ident "=" (src/conflict.ml[217,8386+16]..[217,8386+17])
                          [
                            <arg>
                            Nolabel
                              expression (src/conflict.ml[217,8386+9]..[217,8386+15])
                                Pexp_ident "offset" (src/conflict.ml[217,8386+9]..[217,8386+15])
                            <arg>
                            Nolabel
                              expression (src/conflict.ml[217,8386+18]..[217,8386+25])
                                Pexp_ident "offset'" (src/conflict.ml[217,8386+18]..[217,8386+25])
                          ]
                        expression (src/conflict.ml[223,8587+8]..[259,9785+11])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/conflict.ml[223,8587+12]..[223,8587+27])
                                Ppat_tuple
                                [
                                  pattern (src/conflict.ml[223,8587+12]..[223,8587+20])
                                    Ppat_var "nullable" (src/conflict.ml[223,8587+12]..[223,8587+20])
                                  pattern (src/conflict.ml[223,8587+22]..[223,8587+27])
                                    Ppat_var "first" (src/conflict.ml[223,8587+22]..[223,8587+27])
                                ]
                              expression (src/conflict.ml[223,8587+30]..[223,8587+73])
                                Pexp_apply
                                expression (src/conflict.ml[223,8587+30]..[223,8587+58])
                                  Pexp_ident "Analysis.nullable_first_prod" (src/conflict.ml[223,8587+30]..[223,8587+58])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/conflict.ml[223,8587+59]..[223,8587+63])
                                      Pexp_ident "prod" (src/conflict.ml[223,8587+59]..[223,8587+63])
                                  <arg>
                                  Nolabel
                                    expression (src/conflict.ml[223,8587+64]..[223,8587+73])
                                      Pexp_apply
                                      expression (src/conflict.ml[223,8587+69]..[223,8587+70])
                                        Pexp_ident "+" (src/conflict.ml[223,8587+69]..[223,8587+70])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/conflict.ml[223,8587+65]..[223,8587+68])
                                            Pexp_ident "pos" (src/conflict.ml[223,8587+65]..[223,8587+68])
                                        <arg>
                                        Nolabel
                                          expression (src/conflict.ml[223,8587+71]..[223,8587+72])
                                            Pexp_constant PConst_int (1,None)
                                      ]
                                ]
                          ]
                          expression (src/conflict.ml[225,8665+8]..[259,9785+11])
                            Pexp_ifthenelse
                            expression (src/conflict.ml[225,8665+11]..[225,8665+36])
                              Pexp_apply
                              expression (src/conflict.ml[225,8665+11]..[225,8665+26])
                                Pexp_ident "TerminalSet.mem" (src/conflict.ml[225,8665+11]..[225,8665+26])
                              [
                                <arg>
                                Nolabel
                                  expression (src/conflict.ml[225,8665+27]..[225,8665+30])
                                    Pexp_ident "tok" (src/conflict.ml[225,8665+27]..[225,8665+30])
                                <arg>
                                Nolabel
                                  expression (src/conflict.ml[225,8665+31]..[225,8665+36])
                                    Pexp_ident "first" (src/conflict.ml[225,8665+31]..[225,8665+36])
                              ]
                            expression (src/conflict.ml[230,8824+10]..[241,9226+70])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/conflict.ml[230,8824+14]..[230,8824+15])
                                    Ppat_var "e" (src/conflict.ml[230,8824+14]..[230,8824+15])
                                  expression (src/conflict.ml[230,8824+18]..[230,8824+62])
                                    Pexp_apply
                                    expression (src/conflict.ml[230,8824+18]..[230,8824+44])
                                      Pexp_ident "Analysis.explain_first_rhs" (src/conflict.ml[230,8824+18]..[230,8824+44])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/conflict.ml[230,8824+45]..[230,8824+48])
                                          Pexp_ident "tok" (src/conflict.ml[230,8824+45]..[230,8824+48])
                                      <arg>
                                      Nolabel
                                        expression (src/conflict.ml[230,8824+49]..[230,8824+52])
                                          Pexp_ident "rhs" (src/conflict.ml[230,8824+49]..[230,8824+52])
                                      <arg>
                                      Nolabel
                                        expression (src/conflict.ml[230,8824+53]..[230,8824+62])
                                          Pexp_apply
                                          expression (src/conflict.ml[230,8824+58]..[230,8824+59])
                                            Pexp_ident "+" (src/conflict.ml[230,8824+58]..[230,8824+59])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/conflict.ml[230,8824+54]..[230,8824+57])
                                                Pexp_ident "pos" (src/conflict.ml[230,8824+54]..[230,8824+57])
                                            <arg>
                                            Nolabel
                                              expression (src/conflict.ml[230,8824+60]..[230,8824+61])
                                                Pexp_constant PConst_int (1,None)
                                          ]
                                    ]
                              ]
                              expression (src/conflict.ml[231,8890+10]..[241,9226+70])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/conflict.ml[231,8890+14]..[231,8890+21])
                                      Ppat_var "comment" (src/conflict.ml[231,8890+14]..[231,8890+21])
                                    expression (src/conflict.ml[232,8914+12]..[232,8914+80])
                                      Pexp_apply
                                      expression (src/conflict.ml[232,8914+38]..[232,8914+39])
                                        Pexp_ident "^" (src/conflict.ml[232,8914+38]..[232,8914+39])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/conflict.ml[232,8914+12]..[232,8914+37])
                                            Pexp_constant PConst_string("lookahead token appears",(src/conflict.ml[232,8914+13]..[232,8914+36]),None)
                                        <arg>
                                        Nolabel
                                          expression (src/conflict.ml[232,8914+40]..[232,8914+80])
                                            Pexp_ifthenelse
                                            expression (src/conflict.ml[232,8914+44]..[232,8914+50])
                                              Pexp_apply
                                              expression (src/conflict.ml[232,8914+46]..[232,8914+47])
                                                Pexp_ident "=" (src/conflict.ml[232,8914+46]..[232,8914+47])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/conflict.ml[232,8914+44]..[232,8914+45])
                                                    Pexp_ident "e" (src/conflict.ml[232,8914+44]..[232,8914+45])
                                                <arg>
                                                Nolabel
                                                  expression (src/conflict.ml[232,8914+48]..[232,8914+50])
                                                    Pexp_constant PConst_string("",(src/conflict.ml[232,8914+49]..[232,8914+49]),None)
                                              ]
                                            expression (src/conflict.ml[232,8914+56]..[232,8914+58])
                                              Pexp_constant PConst_string("",(src/conflict.ml[232,8914+57]..[232,8914+57]),None)
                                            Some
                                              expression (src/conflict.ml[232,8914+64]..[232,8914+79])
                                                Pexp_apply
                                                expression (src/conflict.ml[232,8914+76]..[232,8914+77])
                                                  Pexp_ident "^" (src/conflict.ml[232,8914+76]..[232,8914+77])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/conflict.ml[232,8914+64]..[232,8914+75])
                                                      Pexp_constant PConst_string(" because ",(src/conflict.ml[232,8914+65]..[232,8914+74]),None)
                                                  <arg>
                                                  Nolabel
                                                    expression (src/conflict.ml[232,8914+78]..[232,8914+79])
                                                      Pexp_ident "e" (src/conflict.ml[232,8914+78]..[232,8914+79])
                                                ]
                                      ]
                                ]
                                expression (src/conflict.ml[234,9008+10]..[241,9226+70])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/conflict.ml[234,9008+14]..[234,9008+24])
                                        Ppat_var "derivation" (src/conflict.ml[234,9008+14]..[234,9008+24])
                                      expression (src/conflict.ml[235,9035+12]..[235,9035+62])
                                        Pexp_apply
                                        expression (src/conflict.ml[235,9035+12]..[235,9035+28])
                                          Pexp_ident "Derivation.build" (src/conflict.ml[235,9035+12]..[235,9035+28])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/conflict.ml[235,9035+29]..[235,9035+32])
                                              Pexp_ident "pos" (src/conflict.ml[235,9035+29]..[235,9035+32])
                                          <arg>
                                          Nolabel
                                            expression (src/conflict.ml[235,9035+33]..[235,9035+36])
                                              Pexp_ident "rhs" (src/conflict.ml[235,9035+33]..[235,9035+36])
                                          <arg>
                                          Nolabel
                                            expression (src/conflict.ml[235,9035+37]..[235,9035+47])
                                              Pexp_ident "derivation" (src/conflict.ml[235,9035+37]..[235,9035+47])
                                          <arg>
                                          Nolabel
                                            expression (src/conflict.ml[235,9035+48]..[235,9035+62])
                                              Pexp_construct "Some" (src/conflict.ml[235,9035+49]..[235,9035+53])
                                              Some
                                                expression (src/conflict.ml[235,9035+54]..[235,9035+61])
                                                  Pexp_ident "comment" (src/conflict.ml[235,9035+54]..[235,9035+61])
                                        ]
                                  ]
                                  expression (src/conflict.ml[241,9226+10]..[241,9226+70])
                                    Pexp_apply
                                    expression (src/conflict.ml[241,9226+10]..[241,9226+16])
                                      Pexp_ident "follow" (src/conflict.ml[241,9226+10]..[241,9226+16])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/conflict.ml[241,9226+17]..[241,9226+27])
                                          Pexp_ident "derivation" (src/conflict.ml[241,9226+17]..[241,9226+27])
                                      <arg>
                                      Nolabel
                                        expression (src/conflict.ml[241,9226+28]..[241,9226+34])
                                          Pexp_ident "offset" (src/conflict.ml[241,9226+28]..[241,9226+34])
                                      <arg>
                                      Nolabel
                                        expression (src/conflict.ml[241,9226+35]..[241,9226+70])
                                          Pexp_apply
                                          expression (src/conflict.ml[241,9226+36]..[241,9226+44])
                                            Pexp_ident "List.map" (src/conflict.ml[241,9226+36]..[241,9226+44])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/conflict.ml[241,9226+45]..[241,9226+61])
                                                Pexp_ident "config1toconfig0" (src/conflict.ml[241,9226+45]..[241,9226+61])
                                            <arg>
                                            Nolabel
                                              expression (src/conflict.ml[241,9226+62]..[241,9226+69])
                                                Pexp_ident "configs" (src/conflict.ml[241,9226+62]..[241,9226+69])
                                          ]
                                    ]
                            Some
                              expression (src/conflict.ml[243,9298+13]..[259,9785+11])
                                Pexp_sequence
                                expression (src/conflict.ml[247,9404+10]..[247,9404+25])
                                  Pexp_assert
                                  expression (src/conflict.ml[247,9404+17]..[247,9404+25])
                                    Pexp_ident "nullable" (src/conflict.ml[247,9404+17]..[247,9404+25])
                                expression (src/conflict.ml[249,9432+10]..[257,9736+47])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/conflict.ml[249,9432+14]..[249,9432+21])
                                        Ppat_var "comment" (src/conflict.ml[249,9432+14]..[249,9432+21])
                                      expression (src/conflict.ml[250,9456+12]..[251,9501+117])
                                        Pexp_apply
                                        expression (src/conflict.ml[250,9456+43]..[250,9456+44])
                                          Pexp_ident "^" (src/conflict.ml[250,9456+43]..[250,9456+44])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/conflict.ml[250,9456+12]..[250,9456+42])
                                              Pexp_constant PConst_string("lookahead token is inherited",(src/conflict.ml[250,9456+13]..[250,9456+41]),None)
                                          <arg>
                                          Nolabel
                                            expression (src/conflict.ml[251,9501+12]..[251,9501+117])
                                              Pexp_ifthenelse
                                              expression (src/conflict.ml[251,9501+16]..[251,9501+32])
                                                Pexp_apply
                                                expression (src/conflict.ml[251,9501+24]..[251,9501+25])
                                                  Pexp_ident "<" (src/conflict.ml[251,9501+24]..[251,9501+25])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/conflict.ml[251,9501+16]..[251,9501+23])
                                                      Pexp_apply
                                                      expression (src/conflict.ml[251,9501+20]..[251,9501+21])
                                                        Pexp_ident "+" (src/conflict.ml[251,9501+20]..[251,9501+21])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/conflict.ml[251,9501+16]..[251,9501+19])
                                                            Pexp_ident "pos" (src/conflict.ml[251,9501+16]..[251,9501+19])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/conflict.ml[251,9501+22]..[251,9501+23])
                                                            Pexp_constant PConst_int (1,None)
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (src/conflict.ml[251,9501+26]..[251,9501+32])
                                                      Pexp_ident "length" (src/conflict.ml[251,9501+26]..[251,9501+32])
                                                ]
                                              expression (src/conflict.ml[251,9501+38]..[251,9501+108])
                                                Pexp_apply
                                                expression (src/conflict.ml[251,9501+38]..[251,9501+52])
                                                  Pexp_ident "Printf.sprintf" (src/conflict.ml[251,9501+38]..[251,9501+52])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/conflict.ml[251,9501+53]..[251,9501+77])
                                                      Pexp_constant PConst_string(" because %s can vanish",(src/conflict.ml[251,9501+54]..[251,9501+76]),None)
                                                  <arg>
                                                  Nolabel
                                                    expression (src/conflict.ml[251,9501+78]..[251,9501+108])
                                                      Pexp_apply
                                                      expression (src/conflict.ml[251,9501+79]..[251,9501+93])
                                                        Pexp_ident "Symbol.printao" (src/conflict.ml[251,9501+79]..[251,9501+93])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/conflict.ml[251,9501+94]..[251,9501+103])
                                                            Pexp_apply
                                                            expression (src/conflict.ml[251,9501+99]..[251,9501+100])
                                                              Pexp_ident "+" (src/conflict.ml[251,9501+99]..[251,9501+100])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/conflict.ml[251,9501+95]..[251,9501+98])
                                                                  Pexp_ident "pos" (src/conflict.ml[251,9501+95]..[251,9501+98])
                                                              <arg>
                                                              Nolabel
                                                                expression (src/conflict.ml[251,9501+101]..[251,9501+102])
                                                                  Pexp_constant PConst_int (1,None)
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (src/conflict.ml[251,9501+104]..[251,9501+107])
                                                            Pexp_ident "rhs" (src/conflict.ml[251,9501+104]..[251,9501+107])
                                                      ]
                                                ]
                                              Some
                                                expression (src/conflict.ml[251,9501+114]..[251,9501+116])
                                                  Pexp_constant PConst_string("",(src/conflict.ml[251,9501+115]..[251,9501+115]),None)
                                        ]
                                  ]
                                  expression (src/conflict.ml[253,9632+10]..[257,9736+47])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/conflict.ml[253,9632+14]..[253,9632+24])
                                          Ppat_var "derivation" (src/conflict.ml[253,9632+14]..[253,9632+24])
                                        expression (src/conflict.ml[254,9659+12]..[254,9659+62])
                                          Pexp_apply
                                          expression (src/conflict.ml[254,9659+12]..[254,9659+28])
                                            Pexp_ident "Derivation.build" (src/conflict.ml[254,9659+12]..[254,9659+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/conflict.ml[254,9659+29]..[254,9659+32])
                                                Pexp_ident "pos" (src/conflict.ml[254,9659+29]..[254,9659+32])
                                            <arg>
                                            Nolabel
                                              expression (src/conflict.ml[254,9659+33]..[254,9659+36])
                                                Pexp_ident "rhs" (src/conflict.ml[254,9659+33]..[254,9659+36])
                                            <arg>
                                            Nolabel
                                              expression (src/conflict.ml[254,9659+37]..[254,9659+47])
                                                Pexp_ident "derivation" (src/conflict.ml[254,9659+37]..[254,9659+47])
                                            <arg>
                                            Nolabel
                                              expression (src/conflict.ml[254,9659+48]..[254,9659+62])
                                                Pexp_construct "Some" (src/conflict.ml[254,9659+49]..[254,9659+53])
                                                Some
                                                  expression (src/conflict.ml[254,9659+54]..[254,9659+61])
                                                    Pexp_ident "comment" (src/conflict.ml[254,9659+54]..[254,9659+61])
                                          ]
                                    ]
                                    expression (src/conflict.ml[257,9736+10]..[257,9736+47])
                                      Pexp_apply
                                      expression (src/conflict.ml[257,9736+10]..[257,9736+17])
                                        Pexp_ident "follow1" (src/conflict.ml[257,9736+10]..[257,9736+17])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/conflict.ml[257,9736+18]..[257,9736+21])
                                            Pexp_ident "tok" (src/conflict.ml[257,9736+18]..[257,9736+21])
                                        <arg>
                                        Nolabel
                                          expression (src/conflict.ml[257,9736+22]..[257,9736+32])
                                            Pexp_ident "derivation" (src/conflict.ml[257,9736+22]..[257,9736+32])
                                        <arg>
                                        Nolabel
                                          expression (src/conflict.ml[257,9736+33]..[257,9736+39])
                                            Pexp_ident "offset" (src/conflict.ml[257,9736+33]..[257,9736+39])
                                        <arg>
                                        Nolabel
                                          expression (src/conflict.ml[257,9736+40]..[257,9736+47])
                                            Pexp_ident "configs" (src/conflict.ml[257,9736+40]..[257,9736+47])
                                      ]
                        Some
                          expression (src/conflict.ml[265,9885+8]..[269,9972+45])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/conflict.ml[265,9885+12]..[265,9885+22])
                                  Ppat_var "derivation" (src/conflict.ml[265,9885+12]..[265,9885+22])
                                expression (src/conflict.ml[266,9910+10]..[266,9910+49])
                                  Pexp_apply
                                  expression (src/conflict.ml[266,9910+10]..[266,9910+28])
                                    Pexp_ident "Derivation.prepend" (src/conflict.ml[266,9910+10]..[266,9910+28])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/conflict.ml[266,9910+29]..[266,9910+38])
                                        Pexp_apply
                                        expression (src/conflict.ml[266,9910+29]..[266,9910+38]) ghost
                                          Pexp_ident "Array.get" (src/conflict.ml[266,9910+29]..[266,9910+38]) ghost
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/conflict.ml[266,9910+29]..[266,9910+32])
                                              Pexp_ident "rhs" (src/conflict.ml[266,9910+29]..[266,9910+32])
                                          <arg>
                                          Nolabel
                                            expression (src/conflict.ml[266,9910+34]..[266,9910+37])
                                              Pexp_ident "pos" (src/conflict.ml[266,9910+34]..[266,9910+37])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/conflict.ml[266,9910+39]..[266,9910+49])
                                        Pexp_ident "derivation" (src/conflict.ml[266,9910+39]..[266,9910+49])
                                  ]
                            ]
                            expression (src/conflict.ml[269,9972+8]..[269,9972+45])
                              Pexp_apply
                              expression (src/conflict.ml[269,9972+8]..[269,9972+15])
                                Pexp_ident "follow1" (src/conflict.ml[269,9972+8]..[269,9972+15])
                              [
                                <arg>
                                Nolabel
                                  expression (src/conflict.ml[269,9972+16]..[269,9972+19])
                                    Pexp_ident "tok" (src/conflict.ml[269,9972+16]..[269,9972+19])
                                <arg>
                                Nolabel
                                  expression (src/conflict.ml[269,9972+20]..[269,9972+30])
                                    Pexp_ident "derivation" (src/conflict.ml[269,9972+20]..[269,9972+30])
                                <arg>
                                Nolabel
                                  expression (src/conflict.ml[269,9972+31]..[269,9972+37])
                                    Pexp_ident "offset" (src/conflict.ml[269,9972+31]..[269,9972+37])
                                <arg>
                                Nolabel
                                  expression (src/conflict.ml[269,9972+38]..[269,9972+45])
                                    Pexp_ident "configs" (src/conflict.ml[269,9972+38]..[269,9972+45])
                              ]
                ]
    ]
  structure_item (src/conflict.ml[273,10087+0]..[355,12462+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/conflict.ml[273,10087+4]..[273,10087+23])
          Ppat_var "explain_reduce_item" (src/conflict.ml[273,10087+4]..[273,10087+23])
        expression (src/conflict.ml[274,10111+4]..[355,12462+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/conflict.ml[274,10111+4]..[274,10111+22])
            Ppat_constraint
            pattern (src/conflict.ml[274,10111+5]..[274,10111+8])
              Ppat_var "tok" (src/conflict.ml[274,10111+5]..[274,10111+8])
            core_type (src/conflict.ml[274,10111+11]..[274,10111+21])
              Ptyp_constr "Terminal.t" (src/conflict.ml[274,10111+11]..[274,10111+21])
              []
          expression (src/conflict.ml[275,10134+4]..[355,12462+14]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/conflict.ml[275,10134+4]..[275,10134+20])
              Ppat_constraint
              pattern (src/conflict.ml[275,10134+5]..[275,10134+10])
                Ppat_var "start" (src/conflict.ml[275,10134+5]..[275,10134+10])
              core_type (src/conflict.ml[275,10134+13]..[275,10134+19])
                Ptyp_constr "Item.t" (src/conflict.ml[275,10134+13]..[275,10134+19])
                []
            expression (src/conflict.ml[276,10155+4]..[355,12462+14]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/conflict.ml[276,10155+4]..[276,10155+28])
                Ppat_constraint
                pattern (src/conflict.ml[276,10155+5]..[276,10155+10])
                  Ppat_var "input" (src/conflict.ml[276,10155+5]..[276,10155+10])
                core_type (src/conflict.ml[276,10155+13]..[276,10155+27])
                  Ptyp_constr "array" (src/conflict.ml[276,10155+22]..[276,10155+27])
                  [
                    core_type (src/conflict.ml[276,10155+13]..[276,10155+21])
                      Ptyp_constr "Symbol.t" (src/conflict.ml[276,10155+13]..[276,10155+21])
                      []
                  ]
              expression (src/conflict.ml[277,10184+4]..[355,12462+14]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/conflict.ml[277,10184+4]..[277,10184+19])
                  Ppat_constraint
                  pattern (src/conflict.ml[277,10184+5]..[277,10184+9])
                    Ppat_var "stop" (src/conflict.ml[277,10184+5]..[277,10184+9])
                  core_type (src/conflict.ml[277,10184+12]..[277,10184+18])
                    Ptyp_constr "Item.t" (src/conflict.ml[277,10184+12]..[277,10184+18])
                    []
                expression (src/conflict.ml[278,10204+4]..[355,12462+14])
                  Pexp_constraint
                  expression (src/conflict.ml[280,10226+2]..[355,12462+14])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/conflict.ml[280,10226+6]..[280,10226+7])
                          Ppat_var "n" (src/conflict.ml[280,10226+6]..[280,10226+7])
                        expression (src/conflict.ml[281,10236+4]..[281,10236+22])
                          Pexp_apply
                          expression (src/conflict.ml[281,10236+4]..[281,10236+16])
                            Pexp_ident "Array.length" (src/conflict.ml[281,10236+4]..[281,10236+16])
                          [
                            <arg>
                            Nolabel
                              expression (src/conflict.ml[281,10236+17]..[281,10236+22])
                                Pexp_ident "input" (src/conflict.ml[281,10236+17]..[281,10236+22])
                          ]
                    ]
                    expression (src/conflict.ml[284,10265+2]..[355,12462+14])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/conflict.ml[284,10265+6]..[284,10265+11])
                            Ppat_var "table" (src/conflict.ml[284,10265+6]..[284,10265+11])
                          core_type (src/conflict.ml[284,10265+14]..[284,10265+63])
                            Ptyp_constr "Hashtbl.t" (src/conflict.ml[284,10265+54]..[284,10265+63])
                            [
                              core_type (src/conflict.ml[284,10265+15]..[284,10265+29])
                                Ptyp_constr "configuration1" (src/conflict.ml[284,10265+15]..[284,10265+29])
                                []
                              core_type (src/conflict.ml[284,10265+31]..[284,10265+52])
                                Ptyp_constr "option" (src/conflict.ml[284,10265+46]..[284,10265+52])
                                [
                                  core_type (src/conflict.ml[284,10265+31]..[284,10265+45])
                                    Ptyp_constr "configuration1" (src/conflict.ml[284,10265+31]..[284,10265+45])
                                    []
                                ]
                            ]
                          expression (src/conflict.ml[285,10331+4]..[285,10331+23])
                            Pexp_apply
                            expression (src/conflict.ml[285,10331+4]..[285,10331+18])
                              Pexp_ident "Hashtbl.create" (src/conflict.ml[285,10331+4]..[285,10331+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/conflict.ml[285,10331+19]..[285,10331+23])
                                  Pexp_constant PConst_int (1023,None)
                            ]
                      ]
                      expression (src/conflict.ml[288,10361+2]..[355,12462+14])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/conflict.ml[288,10361+6]..[288,10361+11])
                              Ppat_var "queue" (src/conflict.ml[288,10361+6]..[288,10361+11])
                            core_type (src/conflict.ml[288,10361+14]..[288,10361+36])
                              Ptyp_constr "Queue.t" (src/conflict.ml[288,10361+29]..[288,10361+36])
                              [
                                core_type (src/conflict.ml[288,10361+14]..[288,10361+28])
                                  Ptyp_constr "configuration1" (src/conflict.ml[288,10361+14]..[288,10361+28])
                                  []
                              ]
                            expression (src/conflict.ml[289,10400+4]..[289,10400+18])
                              Pexp_apply
                              expression (src/conflict.ml[289,10400+4]..[289,10400+16])
                                Pexp_ident "Queue.create" (src/conflict.ml[289,10400+4]..[289,10400+16])
                              [
                                <arg>
                                Nolabel
                                  expression (src/conflict.ml[289,10400+16]..[289,10400+18])
                                    Pexp_construct "()" (src/conflict.ml[289,10400+16]..[289,10400+18])
                                    None
                              ]
                        ]
                        expression (src/conflict.ml[292,10425+2]..[355,12462+14])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/conflict.ml[292,10425+6]..[292,10425+13])
                                Ppat_var "enqueue" (src/conflict.ml[292,10425+6]..[292,10425+13])
                              expression (src/conflict.ml[292,10425+14]..[298,10580+28]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/conflict.ml[292,10425+14]..[292,10425+22])
                                  Ppat_var "ancestor" (src/conflict.ml[292,10425+14]..[292,10425+22])
                                expression (src/conflict.ml[292,10425+23]..[298,10580+28]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/conflict.ml[292,10425+23]..[292,10425+29])
                                    Ppat_var "config" (src/conflict.ml[292,10425+23]..[292,10425+29])
                                  expression (src/conflict.ml[293,10457+4]..[298,10580+28])
                                    Pexp_try
                                    expression (src/conflict.ml[294,10465+6]..[295,10508+8])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/conflict.ml[294,10465+10]..[294,10465+11])
                                            Ppat_any
                                          expression (src/conflict.ml[294,10465+14]..[294,10465+39])
                                            Pexp_apply
                                            expression (src/conflict.ml[294,10465+14]..[294,10465+26])
                                              Pexp_ident "Hashtbl.find" (src/conflict.ml[294,10465+14]..[294,10465+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/conflict.ml[294,10465+27]..[294,10465+32])
                                                  Pexp_ident "table" (src/conflict.ml[294,10465+27]..[294,10465+32])
                                              <arg>
                                              Nolabel
                                                expression (src/conflict.ml[294,10465+33]..[294,10465+39])
                                                  Pexp_ident "config" (src/conflict.ml[294,10465+33]..[294,10465+39])
                                            ]
                                      ]
                                      expression (src/conflict.ml[295,10508+6]..[295,10508+8])
                                        Pexp_construct "()" (src/conflict.ml[295,10508+6]..[295,10508+8])
                                        None
                                    [
                                      <case>
                                        pattern (src/conflict.ml[296,10517+9]..[296,10517+18])
                                          Ppat_construct "Not_found" (src/conflict.ml[296,10517+9]..[296,10517+18])
                                          None
                                        expression (src/conflict.ml[297,10539+6]..[298,10580+28])
                                          Pexp_sequence
                                          expression (src/conflict.ml[297,10539+6]..[297,10539+39])
                                            Pexp_apply
                                            expression (src/conflict.ml[297,10539+6]..[297,10539+17])
                                              Pexp_ident "Hashtbl.add" (src/conflict.ml[297,10539+6]..[297,10539+17])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/conflict.ml[297,10539+18]..[297,10539+23])
                                                  Pexp_ident "table" (src/conflict.ml[297,10539+18]..[297,10539+23])
                                              <arg>
                                              Nolabel
                                                expression (src/conflict.ml[297,10539+24]..[297,10539+30])
                                                  Pexp_ident "config" (src/conflict.ml[297,10539+24]..[297,10539+30])
                                              <arg>
                                              Nolabel
                                                expression (src/conflict.ml[297,10539+31]..[297,10539+39])
                                                  Pexp_ident "ancestor" (src/conflict.ml[297,10539+31]..[297,10539+39])
                                            ]
                                          expression (src/conflict.ml[298,10580+6]..[298,10580+28])
                                            Pexp_apply
                                            expression (src/conflict.ml[298,10580+6]..[298,10580+15])
                                              Pexp_ident "Queue.add" (src/conflict.ml[298,10580+6]..[298,10580+15])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/conflict.ml[298,10580+16]..[298,10580+22])
                                                  Pexp_ident "config" (src/conflict.ml[298,10580+16]..[298,10580+22])
                                              <arg>
                                              Nolabel
                                                expression (src/conflict.ml[298,10580+23]..[298,10580+28])
                                                  Pexp_ident "queue" (src/conflict.ml[298,10580+23]..[298,10580+28])
                                            ]
                                    ]
                          ]
                          expression (src/conflict.ml[304,10727+2]..[355,12462+14])
                            Pexp_sequence
                            expression (src/conflict.ml[304,10727+2]..[304,10727+60])
                              Pexp_apply
                              expression (src/conflict.ml[304,10727+2]..[304,10727+9])
                                Pexp_ident "enqueue" (src/conflict.ml[304,10727+2]..[304,10727+9])
                              [
                                <arg>
                                Nolabel
                                  expression (src/conflict.ml[304,10727+10]..[304,10727+14])
                                    Pexp_construct "None" (src/conflict.ml[304,10727+10]..[304,10727+14])
                                    None
                                <arg>
                                Nolabel
                                  expression (src/conflict.ml[304,10727+15]..[304,10727+60])
                                    Pexp_tuple
                                    [
                                      expression (src/conflict.ml[304,10727+16]..[304,10727+21])
                                        Pexp_ident "start" (src/conflict.ml[304,10727+16]..[304,10727+21])
                                      expression (src/conflict.ml[304,10727+23]..[304,10727+56])
                                        Pexp_apply
                                        expression (src/conflict.ml[304,10727+23]..[304,10727+37])
                                          Pexp_ident "Terminal.equal" (src/conflict.ml[304,10727+23]..[304,10727+37])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/conflict.ml[304,10727+38]..[304,10727+41])
                                              Pexp_ident "tok" (src/conflict.ml[304,10727+38]..[304,10727+41])
                                          <arg>
                                          Nolabel
                                            expression (src/conflict.ml[304,10727+42]..[304,10727+56])
                                              Pexp_ident "Terminal.sharp" (src/conflict.ml[304,10727+42]..[304,10727+56])
                                        ]
                                      expression (src/conflict.ml[304,10727+58]..[304,10727+59])
                                        Pexp_constant PConst_int (0,None)
                                    ]
                              ]
                            expression (src/conflict.ml[305,10789+2]..[355,12462+14])
                              Pexp_try
                              expression (src/conflict.ml[306,10795+4]..[346,12128+16])
                                Pexp_sequence
                                expression (src/conflict.ml[306,10795+4]..[345,12115+11])
                                  Pexp_apply
                                  expression (src/conflict.ml[306,10795+4]..[306,10795+14])
                                    Pexp_ident "Misc.qiter" (src/conflict.ml[306,10795+4]..[306,10795+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/conflict.ml[306,10795+15]..[345,12115+5])
                                        Pexp_function
                                        [
                                          <case>
                                            pattern (src/conflict.ml[306,10795+25]..[306,10795+60])
                                              Ppat_alias "config" (src/conflict.ml[306,10795+54]..[306,10795+60])
                                              pattern (src/conflict.ml[306,10795+25]..[306,10795+50])
                                                Ppat_tuple
                                                [
                                                  pattern (src/conflict.ml[306,10795+26]..[306,10795+30])
                                                    Ppat_var "item" (src/conflict.ml[306,10795+26]..[306,10795+30])
                                                  pattern (src/conflict.ml[306,10795+32]..[306,10795+41])
                                                    Ppat_var "lookahead" (src/conflict.ml[306,10795+32]..[306,10795+41])
                                                  pattern (src/conflict.ml[306,10795+43]..[306,10795+49])
                                                    Ppat_var "offset" (src/conflict.ml[306,10795+43]..[306,10795+49])
                                                ]
                                            expression (src/conflict.ml[311,10980+6]..[343,12099+14])
                                              Pexp_sequence
                                              expression (src/conflict.ml[311,10980+6]..[312,11046+18])
                                                Pexp_ifthenelse
                                                expression (src/conflict.ml[311,10980+9]..[311,10980+60])
                                                  Pexp_apply
                                                  expression (src/conflict.ml[311,10980+32]..[311,10980+34])
                                                    Pexp_ident "&&" (src/conflict.ml[311,10980+32]..[311,10980+34])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/conflict.ml[311,10980+9]..[311,10980+31])
                                                        Pexp_apply
                                                        expression (src/conflict.ml[311,10980+10]..[311,10980+20])
                                                          Pexp_ident "Item.equal" (src/conflict.ml[311,10980+10]..[311,10980+20])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/conflict.ml[311,10980+21]..[311,10980+25])
                                                              Pexp_ident "item" (src/conflict.ml[311,10980+21]..[311,10980+25])
                                                          <arg>
                                                          Nolabel
                                                            expression (src/conflict.ml[311,10980+26]..[311,10980+30])
                                                              Pexp_ident "stop" (src/conflict.ml[311,10980+26]..[311,10980+30])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (src/conflict.ml[311,10980+35]..[311,10980+60])
                                                        Pexp_apply
                                                        expression (src/conflict.ml[311,10980+45]..[311,10980+47])
                                                          Pexp_ident "&&" (src/conflict.ml[311,10980+45]..[311,10980+47])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/conflict.ml[311,10980+35]..[311,10980+44])
                                                              Pexp_ident "lookahead" (src/conflict.ml[311,10980+35]..[311,10980+44])
                                                          <arg>
                                                          Nolabel
                                                            expression (src/conflict.ml[311,10980+48]..[311,10980+60])
                                                              Pexp_apply
                                                              expression (src/conflict.ml[311,10980+56]..[311,10980+57])
                                                                Pexp_ident "=" (src/conflict.ml[311,10980+56]..[311,10980+57])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/conflict.ml[311,10980+49]..[311,10980+55])
                                                                    Pexp_ident "offset" (src/conflict.ml[311,10980+49]..[311,10980+55])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/conflict.ml[311,10980+58]..[311,10980+59])
                                                                    Pexp_ident "n" (src/conflict.ml[311,10980+58]..[311,10980+59])
                                                              ]
                                                        ]
                                                  ]
                                                expression (src/conflict.ml[312,11046+8]..[312,11046+18])
                                                  Pexp_apply
                                                  expression (src/conflict.ml[312,11046+8]..[312,11046+13])
                                                    Pexp_ident "raise" (src/conflict.ml[312,11046+8]..[312,11046+13])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/conflict.ml[312,11046+14]..[312,11046+18])
                                                        Pexp_construct "Done" (src/conflict.ml[312,11046+14]..[312,11046+18])
                                                        None
                                                  ]
                                                None
                                              expression (src/conflict.ml[316,11133+6]..[343,12099+14])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (src/conflict.ml[316,11133+10]..[316,11133+37])
                                                      Ppat_tuple
                                                      [
                                                        pattern (src/conflict.ml[316,11133+10]..[316,11133+14])
                                                          Ppat_var "prod" (src/conflict.ml[316,11133+10]..[316,11133+14])
                                                        pattern (src/conflict.ml[316,11133+16]..[316,11133+19])
                                                          Ppat_var "_nt" (src/conflict.ml[316,11133+16]..[316,11133+19])
                                                        pattern (src/conflict.ml[316,11133+21]..[316,11133+24])
                                                          Ppat_var "rhs" (src/conflict.ml[316,11133+21]..[316,11133+24])
                                                        pattern (src/conflict.ml[316,11133+26]..[316,11133+29])
                                                          Ppat_var "pos" (src/conflict.ml[316,11133+26]..[316,11133+29])
                                                        pattern (src/conflict.ml[316,11133+31]..[316,11133+37])
                                                          Ppat_var "length" (src/conflict.ml[316,11133+31]..[316,11133+37])
                                                      ]
                                                    expression (src/conflict.ml[316,11133+40]..[316,11133+53])
                                                      Pexp_apply
                                                      expression (src/conflict.ml[316,11133+40]..[316,11133+48])
                                                        Pexp_ident "Item.def" (src/conflict.ml[316,11133+40]..[316,11133+48])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/conflict.ml[316,11133+49]..[316,11133+53])
                                                            Pexp_ident "item" (src/conflict.ml[316,11133+49]..[316,11133+53])
                                                      ]
                                                ]
                                                expression (src/conflict.ml[321,11305+6]..[343,12099+14])
                                                  Pexp_sequence
                                                  expression (src/conflict.ml[321,11305+6]..[326,11523+9])
                                                    Pexp_ifthenelse
                                                    expression (src/conflict.ml[321,11305+9]..[323,11351+48])
                                                      Pexp_apply
                                                      expression (src/conflict.ml[322,11329+6]..[322,11329+8])
                                                        Pexp_ident "&&" (src/conflict.ml[322,11329+6]..[322,11329+8])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/conflict.ml[321,11305+9]..[321,11305+23])
                                                            Pexp_apply
                                                            expression (src/conflict.ml[321,11305+14]..[321,11305+15])
                                                              Pexp_ident "<" (src/conflict.ml[321,11305+14]..[321,11305+15])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/conflict.ml[321,11305+10]..[321,11305+13])
                                                                  Pexp_ident "pos" (src/conflict.ml[321,11305+10]..[321,11305+13])
                                                              <arg>
                                                              Nolabel
                                                                expression (src/conflict.ml[321,11305+16]..[321,11305+22])
                                                                  Pexp_ident "length" (src/conflict.ml[321,11305+16]..[321,11305+22])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (src/conflict.ml[322,11329+9]..[323,11351+48])
                                                            Pexp_apply
                                                            expression (src/conflict.ml[323,11351+6]..[323,11351+8])
                                                              Pexp_ident "&&" (src/conflict.ml[323,11351+6]..[323,11351+8])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/conflict.ml[322,11329+9]..[322,11329+21])
                                                                  Pexp_apply
                                                                  expression (src/conflict.ml[322,11329+17]..[322,11329+18])
                                                                    Pexp_ident "<" (src/conflict.ml[322,11329+17]..[322,11329+18])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/conflict.ml[322,11329+10]..[322,11329+16])
Pexp_ident "offset" (src/conflict.ml[322,11329+10]..[322,11329+16])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/conflict.ml[322,11329+19]..[322,11329+20])
Pexp_ident "n" (src/conflict.ml[322,11329+19]..[322,11329+20])
                                                                  ]
                                                              <arg>
                                                              Nolabel
                                                                expression (src/conflict.ml[323,11351+9]..[323,11351+48])
                                                                  Pexp_apply
                                                                  expression (src/conflict.ml[323,11351+10]..[323,11351+22])
                                                                    Pexp_ident "Symbol.equal" (src/conflict.ml[323,11351+10]..[323,11351+22])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/conflict.ml[323,11351+23]..[323,11351+32])
Pexp_apply
expression (src/conflict.ml[323,11351+23]..[323,11351+32]) ghost
  Pexp_ident "Array.get" (src/conflict.ml[323,11351+23]..[323,11351+32]) ghost
[
  <arg>
  Nolabel
    expression (src/conflict.ml[323,11351+23]..[323,11351+26])
      Pexp_ident "rhs" (src/conflict.ml[323,11351+23]..[323,11351+26])
  <arg>
  Nolabel
    expression (src/conflict.ml[323,11351+28]..[323,11351+31])
      Pexp_ident "pos" (src/conflict.ml[323,11351+28]..[323,11351+31])
]
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/conflict.ml[323,11351+33]..[323,11351+47])
Pexp_apply
expression (src/conflict.ml[323,11351+33]..[323,11351+47]) ghost
  Pexp_ident "Array.get" (src/conflict.ml[323,11351+33]..[323,11351+47]) ghost
[
  <arg>
  Nolabel
    expression (src/conflict.ml[323,11351+33]..[323,11351+38])
      Pexp_ident "input" (src/conflict.ml[323,11351+33]..[323,11351+38])
  <arg>
  Nolabel
    expression (src/conflict.ml[323,11351+40]..[323,11351+46])
      Pexp_ident "offset" (src/conflict.ml[323,11351+40]..[323,11351+46])
]
                                                                  ]
                                                            ]
                                                      ]
                                                    expression (src/conflict.ml[323,11351+54]..[326,11523+9])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (src/conflict.ml[324,11411+12]..[324,11411+19])
                                                            Ppat_var "config'" (src/conflict.ml[324,11411+12]..[324,11411+19])
                                                          expression (src/conflict.ml[324,11411+22]..[324,11411+70])
                                                            Pexp_tuple
                                                            [
                                                              expression (src/conflict.ml[324,11411+23]..[324,11411+48])
                                                                Pexp_apply
                                                                expression (src/conflict.ml[324,11411+23]..[324,11411+34])
                                                                  Pexp_ident "Item.import" (src/conflict.ml[324,11411+23]..[324,11411+34])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/conflict.ml[324,11411+35]..[324,11411+48])
                                                                      Pexp_tuple
                                                                      [
expression (src/conflict.ml[324,11411+36]..[324,11411+40])
  Pexp_ident "prod" (src/conflict.ml[324,11411+36]..[324,11411+40])
expression (src/conflict.ml[324,11411+42]..[324,11411+47])
  Pexp_apply
  expression (src/conflict.ml[324,11411+45]..[324,11411+46])
    Pexp_ident "+" (src/conflict.ml[324,11411+45]..[324,11411+46])
  [
    <arg>
    Nolabel
      expression (src/conflict.ml[324,11411+42]..[324,11411+45])
        Pexp_ident "pos" (src/conflict.ml[324,11411+42]..[324,11411+45])
    <arg>
    Nolabel
      expression (src/conflict.ml[324,11411+46]..[324,11411+47])
        Pexp_constant PConst_int (1,None)
  ]
                                                                      ]
                                                                ]
                                                              expression (src/conflict.ml[324,11411+50]..[324,11411+59])
                                                                Pexp_ident "lookahead" (src/conflict.ml[324,11411+50]..[324,11411+59])
                                                              expression (src/conflict.ml[324,11411+61]..[324,11411+69])
                                                                Pexp_apply
                                                                expression (src/conflict.ml[324,11411+67]..[324,11411+68])
                                                                  Pexp_ident "+" (src/conflict.ml[324,11411+67]..[324,11411+68])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/conflict.ml[324,11411+61]..[324,11411+67])
                                                                      Pexp_ident "offset" (src/conflict.ml[324,11411+61]..[324,11411+67])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/conflict.ml[324,11411+68]..[324,11411+69])
                                                                      Pexp_constant PConst_int (1,None)
                                                                ]
                                                            ]
                                                      ]
                                                      expression (src/conflict.ml[325,11485+8]..[325,11485+37])
                                                        Pexp_apply
                                                        expression (src/conflict.ml[325,11485+8]..[325,11485+15])
                                                          Pexp_ident "enqueue" (src/conflict.ml[325,11485+8]..[325,11485+15])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/conflict.ml[325,11485+16]..[325,11485+29])
                                                              Pexp_construct "Some" (src/conflict.ml[325,11485+17]..[325,11485+21])
                                                              Some
                                                                expression (src/conflict.ml[325,11485+22]..[325,11485+28])
                                                                  Pexp_ident "config" (src/conflict.ml[325,11485+22]..[325,11485+28])
                                                          <arg>
                                                          Nolabel
                                                            expression (src/conflict.ml[325,11485+30]..[325,11485+37])
                                                              Pexp_ident "config'" (src/conflict.ml[325,11485+30]..[325,11485+37])
                                                        ]
                                                    None
                                                  expression (src/conflict.ml[330,11569+6]..[343,12099+14])
                                                    Pexp_ifthenelse
                                                    expression (src/conflict.ml[330,11569+9]..[330,11569+21])
                                                      Pexp_apply
                                                      expression (src/conflict.ml[330,11569+13]..[330,11569+14])
                                                        Pexp_ident "<" (src/conflict.ml[330,11569+13]..[330,11569+14])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/conflict.ml[330,11569+9]..[330,11569+12])
                                                            Pexp_ident "pos" (src/conflict.ml[330,11569+9]..[330,11569+12])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/conflict.ml[330,11569+15]..[330,11569+21])
                                                            Pexp_ident "length" (src/conflict.ml[330,11569+15]..[330,11569+21])
                                                      ]
                                                    expression (src/conflict.ml[331,11596+8]..[343,12099+14])
                                                      Pexp_match
                                                      expression (src/conflict.ml[331,11596+14]..[331,11596+23])
                                                        Pexp_apply
                                                        expression (src/conflict.ml[331,11596+14]..[331,11596+23]) ghost
                                                          Pexp_ident "Array.get" (src/conflict.ml[331,11596+14]..[331,11596+23]) ghost
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/conflict.ml[331,11596+14]..[331,11596+17])
                                                              Pexp_ident "rhs" (src/conflict.ml[331,11596+14]..[331,11596+17])
                                                          <arg>
                                                          Nolabel
                                                            expression (src/conflict.ml[331,11596+19]..[331,11596+22])
                                                              Pexp_ident "pos" (src/conflict.ml[331,11596+19]..[331,11596+22])
                                                        ]
                                                      [
                                                        <case>
                                                          pattern (src/conflict.ml[332,11625+10]..[332,11625+21])
                                                            Ppat_construct "Symbol.N" (src/conflict.ml[332,11625+10]..[332,11625+18])
                                                            Some
                                                              []
                                                              pattern (src/conflict.ml[332,11625+19]..[332,11625+21])
                                                                Ppat_var "nt" (src/conflict.ml[332,11625+19]..[332,11625+21])
                                                          expression (src/conflict.ml[333,11650+12]..[341,12061+13])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (src/conflict.ml[333,11650+16]..[333,11650+31])
                                                                  Ppat_tuple
                                                                  [
                                                                    pattern (src/conflict.ml[333,11650+16]..[333,11650+24])
                                                                      Ppat_var "nullable" (src/conflict.ml[333,11650+16]..[333,11650+24])
                                                                    pattern (src/conflict.ml[333,11650+26]..[333,11650+31])
                                                                      Ppat_var "first" (src/conflict.ml[333,11650+26]..[333,11650+31])
                                                                  ]
                                                                expression (src/conflict.ml[333,11650+34]..[333,11650+77])
                                                                  Pexp_apply
                                                                  expression (src/conflict.ml[333,11650+34]..[333,11650+62])
                                                                    Pexp_ident "Analysis.nullable_first_prod" (src/conflict.ml[333,11650+34]..[333,11650+62])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/conflict.ml[333,11650+63]..[333,11650+67])
Pexp_ident "prod" (src/conflict.ml[333,11650+63]..[333,11650+67])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/conflict.ml[333,11650+68]..[333,11650+77])
Pexp_apply
expression (src/conflict.ml[333,11650+73]..[333,11650+74])
  Pexp_ident "+" (src/conflict.ml[333,11650+73]..[333,11650+74])
[
  <arg>
  Nolabel
    expression (src/conflict.ml[333,11650+69]..[333,11650+72])
      Pexp_ident "pos" (src/conflict.ml[333,11650+69]..[333,11650+72])
  <arg>
  Nolabel
    expression (src/conflict.ml[333,11650+75]..[333,11650+76])
      Pexp_constant PConst_int (1,None)
]
                                                                  ]
                                                            ]
                                                            expression (src/conflict.ml[334,11731+12]..[341,12061+13])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (src/conflict.ml[334,11731+16]..[334,11731+21])
                                                                    Ppat_var "first" (src/conflict.ml[334,11731+16]..[334,11731+21])
                                                                  core_type (src/conflict.ml[334,11731+24]..[334,11731+28])
                                                                    Ptyp_constr "bool" (src/conflict.ml[334,11731+24]..[334,11731+28])
                                                                    []
                                                                  expression (src/conflict.ml[334,11731+31]..[334,11731+56])
                                                                    Pexp_apply
                                                                    expression (src/conflict.ml[334,11731+31]..[334,11731+46])
                                                                      Pexp_ident "TerminalSet.mem" (src/conflict.ml[334,11731+31]..[334,11731+46])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/conflict.ml[334,11731+47]..[334,11731+50])
  Pexp_ident "tok" (src/conflict.ml[334,11731+47]..[334,11731+50])
                                                                      <arg>
                                                                      Nolabel
expression (src/conflict.ml[334,11731+51]..[334,11731+56])
  Pexp_ident "first" (src/conflict.ml[334,11731+51]..[334,11731+56])
                                                                    ]
                                                              ]
                                                              expression (src/conflict.ml[335,11791+12]..[341,12061+13])
                                                                Pexp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (src/conflict.ml[335,11791+16]..[335,11791+26])
                                                                      Ppat_var "lookahead'" (src/conflict.ml[335,11791+16]..[335,11791+26])
                                                                    expression (src/conflict.ml[336,11820+14]..[336,11820+60])
                                                                      Pexp_ifthenelse
                                                                      expression (src/conflict.ml[336,11820+17]..[336,11820+25])
Pexp_ident "nullable" (src/conflict.ml[336,11820+17]..[336,11820+25])
                                                                      expression (src/conflict.ml[336,11820+31]..[336,11820+49])
Pexp_apply
expression (src/conflict.ml[336,11820+37]..[336,11820+39])
  Pexp_ident "||" (src/conflict.ml[336,11820+37]..[336,11820+39])
[
  <arg>
  Nolabel
    expression (src/conflict.ml[336,11820+31]..[336,11820+36])
      Pexp_ident "first" (src/conflict.ml[336,11820+31]..[336,11820+36])
  <arg>
  Nolabel
    expression (src/conflict.ml[336,11820+40]..[336,11820+49])
      Pexp_ident "lookahead" (src/conflict.ml[336,11820+40]..[336,11820+49])
]
                                                                      Some
expression (src/conflict.ml[336,11820+55]..[336,11820+60])
  Pexp_ident "first" (src/conflict.ml[336,11820+55]..[336,11820+60])
                                                                ]
                                                                expression (src/conflict.ml[338,11896+12]..[341,12061+13])
                                                                  Pexp_apply
                                                                  expression (src/conflict.ml[338,11896+12]..[338,11896+29])
                                                                    Pexp_ident "Production.iternt" (src/conflict.ml[338,11896+12]..[338,11896+29])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/conflict.ml[338,11896+30]..[338,11896+32])
Pexp_ident "nt" (src/conflict.ml[338,11896+30]..[338,11896+32])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/conflict.ml[338,11896+33]..[341,12061+13])
Pexp_fun
Nolabel
None
pattern (src/conflict.ml[338,11896+38]..[338,11896+42])
  Ppat_var "prod" (src/conflict.ml[338,11896+38]..[338,11896+42])
expression (src/conflict.ml[339,11942+14]..[340,12017+43])
  Pexp_let Nonrec
  [
    <def>
      pattern (src/conflict.ml[339,11942+18]..[339,11942+25])
        Ppat_var "config'" (src/conflict.ml[339,11942+18]..[339,11942+25])
      expression (src/conflict.ml[339,11942+28]..[339,11942+71])
        Pexp_tuple
        [
          expression (src/conflict.ml[339,11942+29]..[339,11942+50])
            Pexp_apply
            expression (src/conflict.ml[339,11942+29]..[339,11942+40])
              Pexp_ident "Item.import" (src/conflict.ml[339,11942+29]..[339,11942+40])
            [
              <arg>
              Nolabel
                expression (src/conflict.ml[339,11942+41]..[339,11942+50])
                  Pexp_tuple
                  [
                    expression (src/conflict.ml[339,11942+42]..[339,11942+46])
                      Pexp_ident "prod" (src/conflict.ml[339,11942+42]..[339,11942+46])
                    expression (src/conflict.ml[339,11942+48]..[339,11942+49])
                      Pexp_constant PConst_int (0,None)
                  ]
            ]
          expression (src/conflict.ml[339,11942+52]..[339,11942+62])
            Pexp_ident "lookahead'" (src/conflict.ml[339,11942+52]..[339,11942+62])
          expression (src/conflict.ml[339,11942+64]..[339,11942+70])
            Pexp_ident "offset" (src/conflict.ml[339,11942+64]..[339,11942+70])
        ]
  ]
  expression (src/conflict.ml[340,12017+14]..[340,12017+43])
    Pexp_apply
    expression (src/conflict.ml[340,12017+14]..[340,12017+21])
      Pexp_ident "enqueue" (src/conflict.ml[340,12017+14]..[340,12017+21])
    [
      <arg>
      Nolabel
        expression (src/conflict.ml[340,12017+22]..[340,12017+35])
          Pexp_construct "Some" (src/conflict.ml[340,12017+23]..[340,12017+27])
          Some
            expression (src/conflict.ml[340,12017+28]..[340,12017+34])
              Pexp_ident "config" (src/conflict.ml[340,12017+28]..[340,12017+34])
      <arg>
      Nolabel
        expression (src/conflict.ml[340,12017+36]..[340,12017+43])
          Pexp_ident "config'" (src/conflict.ml[340,12017+36]..[340,12017+43])
    ]
                                                                  ]
                                                        <case>
                                                          pattern (src/conflict.ml[342,12075+10]..[342,12075+20])
                                                            Ppat_construct "Symbol.T" (src/conflict.ml[342,12075+10]..[342,12075+18])
                                                            Some
                                                              []
                                                              pattern (src/conflict.ml[342,12075+19]..[342,12075+20])
                                                                Ppat_any
                                                          expression (src/conflict.ml[343,12099+12]..[343,12099+14])
                                                            Pexp_construct "()" (src/conflict.ml[343,12099+12]..[343,12099+14])
                                                            None
                                                      ]
                                                    None
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/conflict.ml[345,12115+6]..[345,12115+11])
                                        Pexp_ident "queue" (src/conflict.ml[345,12115+6]..[345,12115+11])
                                  ]
                                expression (src/conflict.ml[346,12128+4]..[346,12128+16])
                                  Pexp_assert
                                  expression (src/conflict.ml[346,12128+11]..[346,12128+16])
                                    Pexp_construct "false" (src/conflict.ml[346,12128+11]..[346,12128+16])
                                    None
                              [
                                <case>
                                  pattern (src/conflict.ml[347,12145+7]..[347,12145+11])
                                    Ppat_construct "Done" (src/conflict.ml[347,12145+7]..[347,12145+11])
                                    None
                                  expression (src/conflict.ml[352,12304+4]..[355,12462+14])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/conflict.ml[352,12304+8]..[352,12304+15])
                                          Ppat_var "configs" (src/conflict.ml[352,12304+8]..[352,12304+15])
                                        expression (src/conflict.ml[352,12304+18]..[352,12304+56])
                                          Pexp_apply
                                          expression (src/conflict.ml[352,12304+18]..[352,12304+34])
                                            Pexp_ident "Misc.materialize" (src/conflict.ml[352,12304+18]..[352,12304+34])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/conflict.ml[352,12304+35]..[352,12304+40])
                                                Pexp_ident "table" (src/conflict.ml[352,12304+35]..[352,12304+40])
                                            <arg>
                                            Nolabel
                                              expression (src/conflict.ml[352,12304+41]..[352,12304+56])
                                                Pexp_tuple
                                                [
                                                  expression (src/conflict.ml[352,12304+42]..[352,12304+46])
                                                    Pexp_ident "stop" (src/conflict.ml[352,12304+42]..[352,12304+46])
                                                  expression (src/conflict.ml[352,12304+48]..[352,12304+52])
                                                    Pexp_construct "true" (src/conflict.ml[352,12304+48]..[352,12304+52])
                                                    None
                                                  expression (src/conflict.ml[352,12304+54]..[352,12304+55])
                                                    Pexp_ident "n" (src/conflict.ml[352,12304+54]..[352,12304+55])
                                                ]
                                          ]
                                    ]
                                    expression (src/conflict.ml[353,12364+4]..[355,12462+14])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/conflict.ml[353,12364+8]..[353,12364+18])
                                            Ppat_var "derivation" (src/conflict.ml[353,12364+8]..[353,12364+18])
                                          expression (src/conflict.ml[353,12364+21]..[353,12364+37])
                                            Pexp_ident "Derivation.empty" (src/conflict.ml[353,12364+21]..[353,12364+37])
                                      ]
                                      expression (src/conflict.ml[354,12405+4]..[355,12462+14])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/conflict.ml[354,12405+8]..[354,12405+18])
                                              Ppat_var "derivation" (src/conflict.ml[354,12405+8]..[354,12405+18])
                                            expression (src/conflict.ml[354,12405+21]..[354,12405+53])
                                              Pexp_apply
                                              expression (src/conflict.ml[354,12405+21]..[354,12405+28])
                                                Pexp_ident "follow1" (src/conflict.ml[354,12405+21]..[354,12405+28])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/conflict.ml[354,12405+29]..[354,12405+32])
                                                    Pexp_ident "tok" (src/conflict.ml[354,12405+29]..[354,12405+32])
                                                <arg>
                                                Nolabel
                                                  expression (src/conflict.ml[354,12405+33]..[354,12405+43])
                                                    Pexp_ident "derivation" (src/conflict.ml[354,12405+33]..[354,12405+43])
                                                <arg>
                                                Nolabel
                                                  expression (src/conflict.ml[354,12405+44]..[354,12405+45])
                                                    Pexp_ident "n" (src/conflict.ml[354,12405+44]..[354,12405+45])
                                                <arg>
                                                Nolabel
                                                  expression (src/conflict.ml[354,12405+46]..[354,12405+53])
                                                    Pexp_ident "configs" (src/conflict.ml[354,12405+46]..[354,12405+53])
                                              ]
                                        ]
                                        expression (src/conflict.ml[355,12462+4]..[355,12462+14])
                                          Pexp_ident "derivation" (src/conflict.ml[355,12462+4]..[355,12462+14])
                              ]
                  core_type (src/conflict.ml[278,10204+6]..[278,10204+18])
                    Ptyp_constr "Derivation.t" (src/conflict.ml[278,10204+6]..[278,10204+18])
                    []
    ]
  structure_item (src/conflict.ml[363,12770+0]..[364,12790+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/conflict.ml[363,12770+4]..[363,12770+17])
          Ppat_var "unexplainable" (src/conflict.ml[363,12770+4]..[363,12770+17])
        expression (src/conflict.ml[364,12790+2]..[364,12790+7])
          Pexp_apply
          expression (src/conflict.ml[364,12790+2]..[364,12790+5])
            Pexp_ident "ref" (src/conflict.ml[364,12790+2]..[364,12790+5])
          [
            <arg>
            Nolabel
              expression (src/conflict.ml[364,12790+6]..[364,12790+7])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (src/conflict.ml[366,12799+0]..[373,13027+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/conflict.ml[366,12799+4]..[366,12799+21])
          Ppat_var "log_unexplainable" (src/conflict.ml[366,12799+4]..[366,12799+21])
        expression (src/conflict.ml[366,12799+22]..[373,13027+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/conflict.ml[366,12799+22]..[366,12799+24])
            Ppat_construct "()" (src/conflict.ml[366,12799+22]..[366,12799+24])
            None
          expression (src/conflict.ml[367,12826+2]..[373,13027+5])
            Pexp_ifthenelse
            expression (src/conflict.ml[367,12826+5]..[367,12826+23])
              Pexp_apply
              expression (src/conflict.ml[367,12826+20]..[367,12826+21])
                Pexp_ident ">" (src/conflict.ml[367,12826+20]..[367,12826+21])
              [
                <arg>
                Nolabel
                  expression (src/conflict.ml[367,12826+5]..[367,12826+19])
                    Pexp_apply
                    expression (src/conflict.ml[367,12826+5]..[367,12826+6])
                      Pexp_ident "!" (src/conflict.ml[367,12826+5]..[367,12826+6])
                    [
                      <arg>
                      Nolabel
                        expression (src/conflict.ml[367,12826+6]..[367,12826+19])
                          Pexp_ident "unexplainable" (src/conflict.ml[367,12826+6]..[367,12826+19])
                    ]
                <arg>
                Nolabel
                  expression (src/conflict.ml[367,12826+22]..[367,12826+23])
                    Pexp_constant PConst_int (0,None)
              ]
            expression (src/conflict.ml[368,12855+4]..[373,13027+5])
              Pexp_apply
              expression (src/conflict.ml[368,12855+4]..[368,12855+14])
                Pexp_ident "Error.logA" (src/conflict.ml[368,12855+4]..[368,12855+14])
              [
                <arg>
                Nolabel
                  expression (src/conflict.ml[368,12855+15]..[368,12855+16])
                    Pexp_constant PConst_int (2,None)
                <arg>
                Nolabel
                  expression (src/conflict.ml[368,12855+17]..[373,13027+5])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/conflict.ml[368,12855+22]..[368,12855+23])
                      Ppat_var "f" (src/conflict.ml[368,12855+22]..[368,12855+23])
                    expression (src/conflict.ml[369,12882+6]..[372,12978+48])
                      Pexp_apply
                      expression (src/conflict.ml[369,12882+6]..[369,12882+20])
                        Pexp_ident "Printf.fprintf" (src/conflict.ml[369,12882+6]..[369,12882+20])
                      [
                        <arg>
                        Nolabel
                          expression (src/conflict.ml[369,12882+21]..[369,12882+22])
                            Pexp_ident "f" (src/conflict.ml[369,12882+21]..[369,12882+22])
                        <arg>
                        Nolabel
                          expression (src/conflict.ml[370,12905+8]..[370,12905+49])
                            Pexp_constant PConst_string("%d conflict%s could not be explained.\n",(src/conflict.ml[370,12905+9]..[370,12905+48]),None)
                        <arg>
                        Nolabel
                          expression (src/conflict.ml[371,12955+8]..[371,12955+22])
                            Pexp_apply
                            expression (src/conflict.ml[371,12955+8]..[371,12955+9])
                              Pexp_ident "!" (src/conflict.ml[371,12955+8]..[371,12955+9])
                            [
                              <arg>
                              Nolabel
                                expression (src/conflict.ml[371,12955+9]..[371,12955+22])
                                  Pexp_ident "unexplainable" (src/conflict.ml[371,12955+9]..[371,12955+22])
                            ]
                        <arg>
                        Nolabel
                          expression (src/conflict.ml[372,12978+8]..[372,12978+48])
                            Pexp_ifthenelse
                            expression (src/conflict.ml[372,12978+12]..[372,12978+30])
                              Pexp_apply
                              expression (src/conflict.ml[372,12978+27]..[372,12978+28])
                                Pexp_ident ">" (src/conflict.ml[372,12978+27]..[372,12978+28])
                              [
                                <arg>
                                Nolabel
                                  expression (src/conflict.ml[372,12978+12]..[372,12978+26])
                                    Pexp_apply
                                    expression (src/conflict.ml[372,12978+12]..[372,12978+13])
                                      Pexp_ident "!" (src/conflict.ml[372,12978+12]..[372,12978+13])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/conflict.ml[372,12978+13]..[372,12978+26])
                                          Pexp_ident "unexplainable" (src/conflict.ml[372,12978+13]..[372,12978+26])
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/conflict.ml[372,12978+29]..[372,12978+30])
                                    Pexp_constant PConst_int (1,None)
                              ]
                            expression (src/conflict.ml[372,12978+36]..[372,12978+39])
                              Pexp_constant PConst_string("s",(src/conflict.ml[372,12978+37]..[372,12978+38]),None)
                            Some
                              expression (src/conflict.ml[372,12978+45]..[372,12978+47])
                                Pexp_constant PConst_string("",(src/conflict.ml[372,12978+46]..[372,12978+46]),None)
                      ]
              ]
            None
    ]
  structure_item (src/conflict.ml[378,13147+0]..[551,19077+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/conflict.ml[378,13147+4]..[378,13147+6])
          Ppat_construct "()" (src/conflict.ml[378,13147+4]..[378,13147+6])
          None
        expression (src/conflict.ml[379,13156+2]..[551,19077+5])
          Pexp_ifthenelse
          expression (src/conflict.ml[379,13156+5]..[379,13156+21])
            Pexp_ident "Settings.explain" (src/conflict.ml[379,13156+5]..[379,13156+21])
          expression (src/conflict.ml[379,13156+27]..[551,19077+5])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/conflict.ml[386,13437+8]..[386,13437+11])
                  Ppat_var "out" (src/conflict.ml[386,13437+8]..[386,13437+11])
                expression (src/conflict.ml[387,13451+6]..[387,13451+45])
                  Pexp_apply
                  expression (src/conflict.ml[387,13451+6]..[387,13451+14])
                    Pexp_ident "open_out" (src/conflict.ml[387,13451+6]..[387,13451+14])
                  [
                    <arg>
                    Nolabel
                      expression (src/conflict.ml[387,13451+15]..[387,13451+45])
                        Pexp_apply
                        expression (src/conflict.ml[387,13451+30]..[387,13451+31])
                          Pexp_ident "^" (src/conflict.ml[387,13451+30]..[387,13451+31])
                        [
                          <arg>
                          Nolabel
                            expression (src/conflict.ml[387,13451+16]..[387,13451+29])
                              Pexp_ident "Settings.base" (src/conflict.ml[387,13451+16]..[387,13451+29])
                          <arg>
                          Nolabel
                            expression (src/conflict.ml[387,13451+32]..[387,13451+44])
                              Pexp_constant PConst_string(".conflicts",(src/conflict.ml[387,13451+33]..[387,13451+43]),None)
                        ]
                  ]
            ]
            expression (src/conflict.ml[390,13505+4]..[549,19039+36])
              Pexp_sequence
              expression (src/conflict.ml[390,13505+4]..[547,19007+5])
                Pexp_apply
                expression (src/conflict.ml[390,13505+4]..[390,13505+17])
                  Pexp_ident "Lr1.conflicts" (src/conflict.ml[390,13505+4]..[390,13505+17])
                [
                  <arg>
                  Nolabel
                    expression (src/conflict.ml[390,13505+18]..[547,19007+5])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/conflict.ml[390,13505+23]..[390,13505+27])
                        Ppat_var "toks" (src/conflict.ml[390,13505+23]..[390,13505+27])
                      expression (src/conflict.ml[390,13505+28]..[545,18998+7]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/conflict.ml[390,13505+28]..[390,13505+32])
                          Ppat_var "node" (src/conflict.ml[390,13505+28]..[390,13505+32])
                        expression (src/conflict.ml[391,13541+4]..[545,18998+7])
                          Pexp_try
                          expression (src/conflict.ml[405,14205+6]..[521,18051+15])
                            Pexp_letmodule "P" (src/conflict.ml[405,14205+17]..[405,14205+18])
                            module_expr (src/conflict.ml[405,14205+21]..[408,14299+10])
                              Pmod_apply
                              module_expr (src/conflict.ml[405,14205+21]..[405,14205+35])
                                Pmod_ident "Lr1partial.Run" (src/conflict.ml[405,14205+21]..[405,14205+35])
                              module_expr (src/conflict.ml[405,14205+37]..[408,14299+9])
                                Pmod_structure
                                [
                                  structure_item (src/conflict.ml[406,14249+8]..[406,14249+25])
                                    Pstr_value Nonrec
                                    [
                                      <def>
                                        pattern (src/conflict.ml[406,14249+12]..[406,14249+18])
                                          Ppat_var "tokens" (src/conflict.ml[406,14249+12]..[406,14249+18])
                                        expression (src/conflict.ml[406,14249+21]..[406,14249+25])
                                          Pexp_ident "toks" (src/conflict.ml[406,14249+21]..[406,14249+25])
                                    ]
                                  structure_item (src/conflict.ml[407,14275+8]..[407,14275+23])
                                    Pstr_value Nonrec
                                    [
                                      <def>
                                        pattern (src/conflict.ml[407,14275+12]..[407,14275+16])
                                          Ppat_var "goal" (src/conflict.ml[407,14275+12]..[407,14275+16])
                                        expression (src/conflict.ml[407,14275+19]..[407,14275+23])
                                          Pexp_ident "node" (src/conflict.ml[407,14275+19]..[407,14275+23])
                                    ]
                                ]
                            expression (src/conflict.ml[410,14314+6]..[521,18051+15])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/conflict.ml[410,14314+10]..[410,14314+17])
                                    Ppat_var "closure" (src/conflict.ml[410,14314+10]..[410,14314+17])
                                  expression (src/conflict.ml[411,14334+8]..[411,14334+26])
                                    Pexp_apply
                                    expression (src/conflict.ml[411,14334+8]..[411,14334+19])
                                      Pexp_ident "Lr0.closure" (src/conflict.ml[411,14334+8]..[411,14334+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/conflict.ml[411,14334+20]..[411,14334+26])
                                          Pexp_ident "P.goal" (src/conflict.ml[411,14334+20]..[411,14334+26])
                                    ]
                              ]
                              expression (src/conflict.ml[415,14421+6]..[521,18051+15])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/conflict.ml[415,14421+10]..[415,14421+23])
                                      Ppat_tuple
                                      [
                                        pattern (src/conflict.ml[415,14421+10]..[415,14421+15])
                                          Ppat_var "shift" (src/conflict.ml[415,14421+10]..[415,14421+15])
                                        pattern (src/conflict.ml[415,14421+17]..[415,14421+23])
                                          Ppat_var "reduce" (src/conflict.ml[415,14421+17]..[415,14421+23])
                                      ]
                                    expression (src/conflict.ml[415,14421+26]..[425,14791+22])
                                      Pexp_apply
                                      expression (src/conflict.ml[415,14421+26]..[415,14421+39])
                                        Pexp_ident "Item.Map.fold" (src/conflict.ml[415,14421+26]..[415,14421+39])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/conflict.ml[415,14421+40]..[425,14791+7])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (src/conflict.ml[415,14421+45]..[415,14421+49])
                                              Ppat_var "item" (src/conflict.ml[415,14421+45]..[415,14421+49])
                                            expression (src/conflict.ml[415,14421+50]..[424,14765+25]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (src/conflict.ml[415,14421+50]..[415,14421+54])
                                                Ppat_var "toks" (src/conflict.ml[415,14421+50]..[415,14421+54])
                                              expression (src/conflict.ml[415,14421+55]..[424,14765+25]) ghost
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (src/conflict.ml[415,14421+55]..[415,14421+70])
                                                  Ppat_tuple
                                                  [
                                                    pattern (src/conflict.ml[415,14421+56]..[415,14421+61])
                                                      Ppat_var "shift" (src/conflict.ml[415,14421+56]..[415,14421+61])
                                                    pattern (src/conflict.ml[415,14421+63]..[415,14421+69])
                                                      Ppat_var "reduce" (src/conflict.ml[415,14421+63]..[415,14421+69])
                                                  ]
                                                expression (src/conflict.ml[416,14495+8]..[424,14765+25])
                                                  Pexp_match
                                                  expression (src/conflict.ml[416,14495+14]..[416,14495+32])
                                                    Pexp_apply
                                                    expression (src/conflict.ml[416,14495+14]..[416,14495+27])
                                                      Pexp_ident "Item.classify" (src/conflict.ml[416,14495+14]..[416,14495+27])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/conflict.ml[416,14495+28]..[416,14495+32])
                                                          Pexp_ident "item" (src/conflict.ml[416,14495+28]..[416,14495+32])
                                                    ]
                                                  [
                                                    <case>
                                                      pattern (src/conflict.ml[417,14533+10]..[417,14533+38])
                                                        Ppat_construct "Item.Shift" (src/conflict.ml[417,14533+10]..[417,14533+20])
                                                        Some
                                                          []
                                                          pattern (src/conflict.ml[417,14533+21]..[417,14533+38])
                                                            Ppat_tuple
                                                            [
                                                              pattern (src/conflict.ml[417,14533+22]..[417,14533+34])
                                                                Ppat_construct "Symbol.T" (src/conflict.ml[417,14533+22]..[417,14533+30])
                                                                Some
                                                                  []
                                                                  pattern (src/conflict.ml[417,14533+31]..[417,14533+34])
                                                                    Ppat_var "tok" (src/conflict.ml[417,14533+31]..[417,14533+34])
                                                              pattern (src/conflict.ml[417,14533+36]..[417,14533+37])
                                                                Ppat_any
                                                            ]
                                                      <when>
                                                        expression (src/conflict.ml[418,14572+15]..[418,14572+41])
                                                          Pexp_apply
                                                          expression (src/conflict.ml[418,14572+15]..[418,14572+29])
                                                            Pexp_ident "Terminal.equal" (src/conflict.ml[418,14572+15]..[418,14572+29])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/conflict.ml[418,14572+30]..[418,14572+33])
                                                                Pexp_ident "tok" (src/conflict.ml[418,14572+30]..[418,14572+33])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/conflict.ml[418,14572+34]..[418,14572+41])
                                                                Pexp_ident "P.token" (src/conflict.ml[418,14572+34]..[418,14572+41])
                                                          ]
                                                      expression (src/conflict.ml[419,14617+14]..[419,14617+31])
                                                        Pexp_tuple
                                                        [
                                                          expression (src/conflict.ml[419,14617+14]..[419,14617+23])
                                                            Pexp_apply
                                                            expression (src/conflict.ml[419,14617+20]..[419,14617+21])
                                                              Pexp_ident "+" (src/conflict.ml[419,14617+20]..[419,14617+21])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/conflict.ml[419,14617+14]..[419,14617+19])
                                                                  Pexp_ident "shift" (src/conflict.ml[419,14617+14]..[419,14617+19])
                                                              <arg>
                                                              Nolabel
                                                                expression (src/conflict.ml[419,14617+22]..[419,14617+23])
                                                                  Pexp_constant PConst_int (1,None)
                                                            ]
                                                          expression (src/conflict.ml[419,14617+25]..[419,14617+31])
                                                            Pexp_ident "reduce" (src/conflict.ml[419,14617+25]..[419,14617+31])
                                                        ]
                                                    <case>
                                                      pattern (src/conflict.ml[420,14649+10]..[420,14649+23])
                                                        Ppat_construct "Item.Reduce" (src/conflict.ml[420,14649+10]..[420,14649+21])
                                                        Some
                                                          []
                                                          pattern (src/conflict.ml[420,14649+22]..[420,14649+23])
                                                            Ppat_any
                                                      <when>
                                                        expression (src/conflict.ml[421,14673+15]..[421,14673+43])
                                                          Pexp_apply
                                                          expression (src/conflict.ml[421,14673+15]..[421,14673+30])
                                                            Pexp_ident "TerminalSet.mem" (src/conflict.ml[421,14673+15]..[421,14673+30])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/conflict.ml[421,14673+31]..[421,14673+38])
                                                                Pexp_ident "P.token" (src/conflict.ml[421,14673+31]..[421,14673+38])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/conflict.ml[421,14673+39]..[421,14673+43])
                                                                Pexp_ident "toks" (src/conflict.ml[421,14673+39]..[421,14673+43])
                                                          ]
                                                      expression (src/conflict.ml[422,14720+12]..[422,14720+29])
                                                        Pexp_tuple
                                                        [
                                                          expression (src/conflict.ml[422,14720+12]..[422,14720+17])
                                                            Pexp_ident "shift" (src/conflict.ml[422,14720+12]..[422,14720+17])
                                                          expression (src/conflict.ml[422,14720+19]..[422,14720+29])
                                                            Pexp_apply
                                                            expression (src/conflict.ml[422,14720+26]..[422,14720+27])
                                                              Pexp_ident "+" (src/conflict.ml[422,14720+26]..[422,14720+27])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/conflict.ml[422,14720+19]..[422,14720+25])
                                                                  Pexp_ident "reduce" (src/conflict.ml[422,14720+19]..[422,14720+25])
                                                              <arg>
                                                              Nolabel
                                                                expression (src/conflict.ml[422,14720+28]..[422,14720+29])
                                                                  Pexp_constant PConst_int (1,None)
                                                            ]
                                                        ]
                                                    <case>
                                                      pattern (src/conflict.ml[423,14750+10]..[423,14750+11])
                                                        Ppat_any
                                                      expression (src/conflict.ml[424,14765+12]..[424,14765+25])
                                                        Pexp_tuple
                                                        [
                                                          expression (src/conflict.ml[424,14765+12]..[424,14765+17])
                                                            Pexp_ident "shift" (src/conflict.ml[424,14765+12]..[424,14765+17])
                                                          expression (src/conflict.ml[424,14765+19]..[424,14765+25])
                                                            Pexp_ident "reduce" (src/conflict.ml[424,14765+19]..[424,14765+25])
                                                        ]
                                                  ]
                                        <arg>
                                        Nolabel
                                          expression (src/conflict.ml[425,14791+8]..[425,14791+15])
                                            Pexp_ident "closure" (src/conflict.ml[425,14791+8]..[425,14791+15])
                                        <arg>
                                        Nolabel
                                          expression (src/conflict.ml[425,14791+16]..[425,14791+22])
                                            Pexp_tuple
                                            [
                                              expression (src/conflict.ml[425,14791+17]..[425,14791+18])
                                                Pexp_constant PConst_int (0,None)
                                              expression (src/conflict.ml[425,14791+20]..[425,14791+21])
                                                Pexp_constant PConst_int (0,None)
                                            ]
                                      ]
                                ]
                                expression (src/conflict.ml[427,14818+6]..[521,18051+15])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/conflict.ml[427,14818+10]..[427,14818+14])
                                        Ppat_var "kind" (src/conflict.ml[427,14818+10]..[427,14818+14])
                                      expression (src/conflict.ml[428,14835+8]..[433,14982+25])
                                        Pexp_ifthenelse
                                        expression (src/conflict.ml[428,14835+11]..[428,14835+38])
                                          Pexp_apply
                                          expression (src/conflict.ml[428,14835+23]..[428,14835+25])
                                            Pexp_ident "&&" (src/conflict.ml[428,14835+23]..[428,14835+25])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/conflict.ml[428,14835+11]..[428,14835+22])
                                                Pexp_apply
                                                expression (src/conflict.ml[428,14835+18]..[428,14835+19])
                                                  Pexp_ident ">" (src/conflict.ml[428,14835+18]..[428,14835+19])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/conflict.ml[428,14835+12]..[428,14835+17])
                                                      Pexp_ident "shift" (src/conflict.ml[428,14835+12]..[428,14835+17])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/conflict.ml[428,14835+20]..[428,14835+21])
                                                      Pexp_constant PConst_int (0,None)
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (src/conflict.ml[428,14835+26]..[428,14835+38])
                                                Pexp_apply
                                                expression (src/conflict.ml[428,14835+34]..[428,14835+35])
                                                  Pexp_ident ">" (src/conflict.ml[428,14835+34]..[428,14835+35])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/conflict.ml[428,14835+27]..[428,14835+33])
                                                      Pexp_ident "reduce" (src/conflict.ml[428,14835+27]..[428,14835+33])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/conflict.ml[428,14835+36]..[428,14835+37])
                                                      Pexp_constant PConst_int (1,None)
                                                ]
                                          ]
                                        expression (src/conflict.ml[429,14879+10]..[429,14879+31])
                                          Pexp_constant PConst_string("shift/reduce/reduce",(src/conflict.ml[429,14879+11]..[429,14879+30]),None)
                                        Some
                                          expression (src/conflict.ml[430,14911+13]..[433,14982+25])
                                            Pexp_ifthenelse
                                            expression (src/conflict.ml[430,14911+16]..[430,14911+27])
                                              Pexp_apply
                                              expression (src/conflict.ml[430,14911+23]..[430,14911+24])
                                                Pexp_ident ">" (src/conflict.ml[430,14911+23]..[430,14911+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/conflict.ml[430,14911+17]..[430,14911+22])
                                                    Pexp_ident "shift" (src/conflict.ml[430,14911+17]..[430,14911+22])
                                                <arg>
                                                Nolabel
                                                  expression (src/conflict.ml[430,14911+25]..[430,14911+26])
                                                    Pexp_constant PConst_int (0,None)
                                              ]
                                            expression (src/conflict.ml[431,14944+10]..[431,14944+24])
                                              Pexp_constant PConst_string("shift/reduce",(src/conflict.ml[431,14944+11]..[431,14944+23]),None)
                                            Some
                                              expression (src/conflict.ml[433,14982+10]..[433,14982+25])
                                                Pexp_constant PConst_string("reduce/reduce",(src/conflict.ml[433,14982+11]..[433,14982+24]),None)
                                  ]
                                  expression (src/conflict.ml[438,15074+6]..[521,18051+15])
                                    Pexp_sequence
                                    expression (src/conflict.ml[438,15074+6]..[449,15588+28])
                                      Pexp_apply
                                      expression (src/conflict.ml[438,15074+6]..[438,15074+20])
                                        Pexp_ident "Printf.fprintf" (src/conflict.ml[438,15074+6]..[438,15074+20])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/conflict.ml[438,15074+21]..[438,15074+24])
                                            Pexp_ident "out" (src/conflict.ml[438,15074+21]..[438,15074+24])
                                        <arg>
                                        Nolabel
                                          expression (src/conflict.ml[438,15074+25]..[441,15182+64])
                                            Pexp_constant PConst_string("\n** Conflict (%s) in state %d.\n** Token%s involved: %s\n%s** This state is reached from %s after reading:\n\n%s\n",(src/conflict.ml[438,15074+26]..[441,15182+63]),None)
                                        <arg>
                                        Nolabel
                                          expression (src/conflict.ml[442,15247+6]..[442,15247+10])
                                            Pexp_ident "kind" (src/conflict.ml[442,15247+6]..[442,15247+10])
                                        <arg>
                                        Nolabel
                                          expression (src/conflict.ml[442,15247+11]..[442,15247+28])
                                            Pexp_apply
                                            expression (src/conflict.ml[442,15247+12]..[442,15247+22])
                                              Pexp_ident "Lr1.number" (src/conflict.ml[442,15247+12]..[442,15247+22])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/conflict.ml[442,15247+23]..[442,15247+27])
                                                  Pexp_ident "node" (src/conflict.ml[442,15247+23]..[442,15247+27])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (src/conflict.ml[443,15276+6]..[443,15276+57])
                                            Pexp_ifthenelse
                                            expression (src/conflict.ml[443,15276+10]..[443,15276+39])
                                              Pexp_apply
                                              expression (src/conflict.ml[443,15276+36]..[443,15276+37])
                                                Pexp_ident ">" (src/conflict.ml[443,15276+36]..[443,15276+37])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/conflict.ml[443,15276+10]..[443,15276+35])
                                                    Pexp_apply
                                                    expression (src/conflict.ml[443,15276+10]..[443,15276+30])
                                                      Pexp_ident "TerminalSet.cardinal" (src/conflict.ml[443,15276+10]..[443,15276+30])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/conflict.ml[443,15276+31]..[443,15276+35])
                                                          Pexp_ident "toks" (src/conflict.ml[443,15276+31]..[443,15276+35])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (src/conflict.ml[443,15276+38]..[443,15276+39])
                                                    Pexp_constant PConst_int (1,None)
                                              ]
                                            expression (src/conflict.ml[443,15276+45]..[443,15276+48])
                                              Pexp_constant PConst_string("s",(src/conflict.ml[443,15276+46]..[443,15276+47]),None)
                                            Some
                                              expression (src/conflict.ml[443,15276+54]..[443,15276+56])
                                                Pexp_constant PConst_string("",(src/conflict.ml[443,15276+55]..[443,15276+55]),None)
                                        <arg>
                                        Nolabel
                                          expression (src/conflict.ml[444,15334+6]..[444,15334+30])
                                            Pexp_apply
                                            expression (src/conflict.ml[444,15334+7]..[444,15334+24])
                                              Pexp_ident "TerminalSet.print" (src/conflict.ml[444,15334+7]..[444,15334+24])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/conflict.ml[444,15334+25]..[444,15334+29])
                                                  Pexp_ident "toks" (src/conflict.ml[444,15334+25]..[444,15334+29])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (src/conflict.ml[445,15365+6]..[447,15517+14])
                                            Pexp_ifthenelse
                                            expression (src/conflict.ml[445,15365+10]..[445,15365+39])
                                              Pexp_apply
                                              expression (src/conflict.ml[445,15365+36]..[445,15365+37])
                                                Pexp_ident ">" (src/conflict.ml[445,15365+36]..[445,15365+37])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/conflict.ml[445,15365+10]..[445,15365+35])
                                                    Pexp_apply
                                                    expression (src/conflict.ml[445,15365+10]..[445,15365+30])
                                                      Pexp_ident "TerminalSet.cardinal" (src/conflict.ml[445,15365+10]..[445,15365+30])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/conflict.ml[445,15365+31]..[445,15365+35])
                                                          Pexp_ident "toks" (src/conflict.ml[445,15365+31]..[445,15365+35])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (src/conflict.ml[445,15365+38]..[445,15365+39])
                                                    Pexp_constant PConst_int (1,None)
                                              ]
                                            expression (src/conflict.ml[446,15410+8]..[446,15410+106])
                                              Pexp_apply
                                              expression (src/conflict.ml[446,15410+8]..[446,15410+22])
                                                Pexp_ident "Printf.sprintf" (src/conflict.ml[446,15410+8]..[446,15410+22])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/conflict.ml[446,15410+23]..[446,15410+81])
                                                    Pexp_constant PConst_string("** The following explanations concentrate on token %s.\n",(src/conflict.ml[446,15410+24]..[446,15410+80]),None)
                                                <arg>
                                                Nolabel
                                                  expression (src/conflict.ml[446,15410+82]..[446,15410+106])
                                                    Pexp_apply
                                                    expression (src/conflict.ml[446,15410+83]..[446,15410+97])
                                                      Pexp_ident "Terminal.print" (src/conflict.ml[446,15410+83]..[446,15410+97])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/conflict.ml[446,15410+98]..[446,15410+105])
                                                          Pexp_ident "P.token" (src/conflict.ml[446,15410+98]..[446,15410+105])
                                                    ]
                                              ]
                                            Some
                                              expression (src/conflict.ml[447,15517+11]..[447,15517+13])
                                                Pexp_constant PConst_string("",(src/conflict.ml[447,15517+12]..[447,15517+12]),None)
                                        <arg>
                                        Nolabel
                                          expression (src/conflict.ml[448,15532+6]..[448,15532+55])
                                            Pexp_apply
                                            expression (src/conflict.ml[448,15532+7]..[448,15532+24])
                                              Pexp_ident "Nonterminal.print" (src/conflict.ml[448,15532+7]..[448,15532+24])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/conflict.ml[448,15532+25]..[448,15532+30])
                                                  Pexp_construct "false" (src/conflict.ml[448,15532+25]..[448,15532+30])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (src/conflict.ml[448,15532+31]..[448,15532+54])
                                                  Pexp_apply
                                                  expression (src/conflict.ml[448,15532+32]..[448,15532+44])
                                                    Pexp_ident "Item.startnt" (src/conflict.ml[448,15532+32]..[448,15532+44])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/conflict.ml[448,15532+45]..[448,15532+53])
                                                        Pexp_ident "P.source" (src/conflict.ml[448,15532+45]..[448,15532+53])
                                                  ]
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (src/conflict.ml[449,15588+6]..[449,15588+28])
                                            Pexp_apply
                                            expression (src/conflict.ml[449,15588+7]..[449,15588+20])
                                              Pexp_ident "Symbol.printa" (src/conflict.ml[449,15588+7]..[449,15588+20])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/conflict.ml[449,15588+21]..[449,15588+27])
                                                  Pexp_ident "P.path" (src/conflict.ml[449,15588+21]..[449,15588+27])
                                            ]
                                      ]
                                    expression (src/conflict.ml[457,15881+6]..[521,18051+15])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/conflict.ml[457,15881+10]..[457,15881+33])
                                            Ppat_tuple
                                            [
                                              pattern (src/conflict.ml[457,15881+10]..[457,15881+20])
                                                Ppat_constraint
                                                pattern (src/conflict.ml[457,15881+11]..[457,15881+12])
                                                  Ppat_any
                                                core_type (src/conflict.ml[457,15881+15]..[457,15881+19])
                                                  Ptyp_constr "bool" (src/conflict.ml[457,15881+15]..[457,15881+19])
                                                  []
                                              pattern (src/conflict.ml[457,15881+22]..[457,15881+33])
                                                Ppat_var "derivations" (src/conflict.ml[457,15881+22]..[457,15881+33])
                                            ]
                                          expression (src/conflict.ml[458,15917+8]..[480,16664+40])
                                            Pexp_apply
                                            expression (src/conflict.ml[458,15917+8]..[458,15917+21])
                                              Pexp_ident "Item.Map.fold" (src/conflict.ml[458,15917+8]..[458,15917+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/conflict.ml[458,15917+22]..[480,16664+9])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (src/conflict.ml[458,15917+27]..[458,15917+31])
                                                    Ppat_var "item" (src/conflict.ml[458,15917+27]..[458,15917+31])
                                                  expression (src/conflict.ml[458,15917+32]..[478,16637+25]) ghost
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (src/conflict.ml[458,15917+32]..[458,15917+36])
                                                      Ppat_var "toks" (src/conflict.ml[458,15917+32]..[458,15917+36])
                                                    expression (src/conflict.ml[458,15917+37]..[478,16637+25]) ghost
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (src/conflict.ml[458,15917+37]..[458,15917+80])
                                                        Ppat_tuple
                                                        [
                                                          pattern (src/conflict.ml[458,15917+38]..[458,15917+66])
                                                            Ppat_var "still_looking_for_shift_item" (src/conflict.ml[458,15917+38]..[458,15917+66])
                                                          pattern (src/conflict.ml[458,15917+68]..[458,15917+79])
                                                            Ppat_var "derivations" (src/conflict.ml[458,15917+68]..[458,15917+79])
                                                        ]
                                                      expression (src/conflict.ml[459,16001+10]..[478,16637+25])
                                                        Pexp_match
                                                        expression (src/conflict.ml[459,16001+16]..[459,16001+34])
                                                          Pexp_apply
                                                          expression (src/conflict.ml[459,16001+16]..[459,16001+29])
                                                            Pexp_ident "Item.classify" (src/conflict.ml[459,16001+16]..[459,16001+29])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/conflict.ml[459,16001+30]..[459,16001+34])
                                                                Pexp_ident "item" (src/conflict.ml[459,16001+30]..[459,16001+34])
                                                          ]
                                                        [
                                                          <case>
                                                            pattern (src/conflict.ml[461,16042+12]..[461,16042+40])
                                                              Ppat_construct "Item.Shift" (src/conflict.ml[461,16042+12]..[461,16042+22])
                                                              Some
                                                                []
                                                                pattern (src/conflict.ml[461,16042+23]..[461,16042+40])
                                                                  Ppat_tuple
                                                                  [
                                                                    pattern (src/conflict.ml[461,16042+24]..[461,16042+36])
                                                                      Ppat_construct "Symbol.T" (src/conflict.ml[461,16042+24]..[461,16042+32])
                                                                      Some
[]
pattern (src/conflict.ml[461,16042+33]..[461,16042+36])
  Ppat_var "tok" (src/conflict.ml[461,16042+33]..[461,16042+36])
                                                                    pattern (src/conflict.ml[461,16042+38]..[461,16042+39])
                                                                      Ppat_any
                                                                  ]
                                                            <when>
                                                              expression (src/conflict.ml[462,16083+17]..[462,16083+77])
                                                                Pexp_apply
                                                                expression (src/conflict.ml[462,16083+46]..[462,16083+48])
                                                                  Pexp_ident "&&" (src/conflict.ml[462,16083+46]..[462,16083+48])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/conflict.ml[462,16083+17]..[462,16083+45])
                                                                      Pexp_ident "still_looking_for_shift_item" (src/conflict.ml[462,16083+17]..[462,16083+45])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/conflict.ml[462,16083+49]..[462,16083+77])
                                                                      Pexp_apply
                                                                      expression (src/conflict.ml[462,16083+50]..[462,16083+64])
Pexp_ident "Terminal.equal" (src/conflict.ml[462,16083+50]..[462,16083+64])
                                                                      [
<arg>
Nolabel
  expression (src/conflict.ml[462,16083+65]..[462,16083+68])
    Pexp_ident "tok" (src/conflict.ml[462,16083+65]..[462,16083+68])
<arg>
Nolabel
  expression (src/conflict.ml[462,16083+69]..[462,16083+76])
    Pexp_ident "P.token" (src/conflict.ml[462,16083+69]..[462,16083+76])
                                                                      ]
                                                                ]
                                                            expression (src/conflict.ml[464,16165+14]..[466,16260+54])
                                                              Pexp_tuple
                                                              [
                                                                expression (src/conflict.ml[464,16165+14]..[464,16165+19])
                                                                  Pexp_construct "false" (src/conflict.ml[464,16165+14]..[464,16165+19])
                                                                  None
                                                                expression (src/conflict.ml[465,16186+14]..[466,16260+54])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (src/conflict.ml[465,16186+18]..[465,16186+28])
Ppat_var "derivation" (src/conflict.ml[465,16186+18]..[465,16186+28])
                                                                      expression (src/conflict.ml[465,16186+31]..[465,16186+70])
Pexp_apply
expression (src/conflict.ml[465,16186+31]..[465,16186+49])
  Pexp_ident "explain_shift_item" (src/conflict.ml[465,16186+31]..[465,16186+49])
[
  <arg>
  Nolabel
    expression (src/conflict.ml[465,16186+50]..[465,16186+58])
      Pexp_ident "P.source" (src/conflict.ml[465,16186+50]..[465,16186+58])
  <arg>
  Nolabel
    expression (src/conflict.ml[465,16186+59]..[465,16186+65])
      Pexp_ident "P.path" (src/conflict.ml[465,16186+59]..[465,16186+65])
  <arg>
  Nolabel
    expression (src/conflict.ml[465,16186+66]..[465,16186+70])
      Pexp_ident "item" (src/conflict.ml[465,16186+66]..[465,16186+70])
]
                                                                  ]
                                                                  expression (src/conflict.ml[466,16260+14]..[466,16260+54])
                                                                    Pexp_apply
                                                                    expression (src/conflict.ml[466,16260+14]..[466,16260+26])
                                                                      Pexp_ident "Item.Map.add" (src/conflict.ml[466,16260+14]..[466,16260+26])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/conflict.ml[466,16260+27]..[466,16260+31])
  Pexp_ident "item" (src/conflict.ml[466,16260+27]..[466,16260+31])
                                                                      <arg>
                                                                      Nolabel
expression (src/conflict.ml[466,16260+32]..[466,16260+42])
  Pexp_ident "derivation" (src/conflict.ml[466,16260+32]..[466,16260+42])
                                                                      <arg>
                                                                      Nolabel
expression (src/conflict.ml[466,16260+43]..[466,16260+54])
  Pexp_ident "derivations" (src/conflict.ml[466,16260+43]..[466,16260+54])
                                                                    ]
                                                              ]
                                                          <case>
                                                            pattern (src/conflict.ml[468,16316+12]..[468,16316+25])
                                                              Ppat_construct "Item.Reduce" (src/conflict.ml[468,16316+12]..[468,16316+23])
                                                              Some
                                                                []
                                                                pattern (src/conflict.ml[468,16316+24]..[468,16316+25])
                                                                  Ppat_any
                                                            <when>
                                                              expression (src/conflict.ml[469,16342+17]..[469,16342+45])
                                                                Pexp_apply
                                                                expression (src/conflict.ml[469,16342+17]..[469,16342+32])
                                                                  Pexp_ident "TerminalSet.mem" (src/conflict.ml[469,16342+17]..[469,16342+32])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/conflict.ml[469,16342+33]..[469,16342+40])
                                                                      Pexp_ident "P.token" (src/conflict.ml[469,16342+33]..[469,16342+40])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/conflict.ml[469,16342+41]..[469,16342+45])
                                                                      Pexp_ident "toks" (src/conflict.ml[469,16342+41]..[469,16342+45])
                                                                ]
                                                            expression (src/conflict.ml[471,16392+14]..[473,16519+54])
                                                              Pexp_tuple
                                                              [
                                                                expression (src/conflict.ml[471,16392+14]..[471,16392+42])
                                                                  Pexp_ident "still_looking_for_shift_item" (src/conflict.ml[471,16392+14]..[471,16392+42])
                                                                expression (src/conflict.ml[472,16436+14]..[473,16519+54])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (src/conflict.ml[472,16436+18]..[472,16436+28])
Ppat_var "derivation" (src/conflict.ml[472,16436+18]..[472,16436+28])
                                                                      expression (src/conflict.ml[472,16436+31]..[472,16436+79])
Pexp_apply
expression (src/conflict.ml[472,16436+31]..[472,16436+50])
  Pexp_ident "explain_reduce_item" (src/conflict.ml[472,16436+31]..[472,16436+50])
[
  <arg>
  Nolabel
    expression (src/conflict.ml[472,16436+51]..[472,16436+58])
      Pexp_ident "P.token" (src/conflict.ml[472,16436+51]..[472,16436+58])
  <arg>
  Nolabel
    expression (src/conflict.ml[472,16436+59]..[472,16436+67])
      Pexp_ident "P.source" (src/conflict.ml[472,16436+59]..[472,16436+67])
  <arg>
  Nolabel
    expression (src/conflict.ml[472,16436+68]..[472,16436+74])
      Pexp_ident "P.path" (src/conflict.ml[472,16436+68]..[472,16436+74])
  <arg>
  Nolabel
    expression (src/conflict.ml[472,16436+75]..[472,16436+79])
      Pexp_ident "item" (src/conflict.ml[472,16436+75]..[472,16436+79])
]
                                                                  ]
                                                                  expression (src/conflict.ml[473,16519+14]..[473,16519+54])
                                                                    Pexp_apply
                                                                    expression (src/conflict.ml[473,16519+14]..[473,16519+26])
                                                                      Pexp_ident "Item.Map.add" (src/conflict.ml[473,16519+14]..[473,16519+26])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/conflict.ml[473,16519+27]..[473,16519+31])
  Pexp_ident "item" (src/conflict.ml[473,16519+27]..[473,16519+31])
                                                                      <arg>
                                                                      Nolabel
expression (src/conflict.ml[473,16519+32]..[473,16519+42])
  Pexp_ident "derivation" (src/conflict.ml[473,16519+32]..[473,16519+42])
                                                                      <arg>
                                                                      Nolabel
expression (src/conflict.ml[473,16519+43]..[473,16519+54])
  Pexp_ident "derivations" (src/conflict.ml[473,16519+43]..[473,16519+54])
                                                                    ]
                                                              ]
                                                          <case>
                                                            pattern (src/conflict.ml[475,16575+12]..[475,16575+13])
                                                              Ppat_any
                                                            expression (src/conflict.ml[477,16593+14]..[478,16637+25])
                                                              Pexp_tuple
                                                              [
                                                                expression (src/conflict.ml[477,16593+14]..[477,16593+42])
                                                                  Pexp_ident "still_looking_for_shift_item" (src/conflict.ml[477,16593+14]..[477,16593+42])
                                                                expression (src/conflict.ml[478,16637+14]..[478,16637+25])
                                                                  Pexp_ident "derivations" (src/conflict.ml[478,16637+14]..[478,16637+25])
                                                              ]
                                                        ]
                                              <arg>
                                              Nolabel
                                                expression (src/conflict.ml[480,16664+10]..[480,16664+17])
                                                  Pexp_ident "closure" (src/conflict.ml[480,16664+10]..[480,16664+17])
                                              <arg>
                                              Nolabel
                                                expression (src/conflict.ml[480,16664+18]..[480,16664+40])
                                                  Pexp_tuple
                                                  [
                                                    expression (src/conflict.ml[480,16664+19]..[480,16664+23])
                                                      Pexp_construct "true" (src/conflict.ml[480,16664+19]..[480,16664+23])
                                                      None
                                                    expression (src/conflict.ml[480,16664+25]..[480,16664+39])
                                                      Pexp_ident "Item.Map.empty" (src/conflict.ml[480,16664+25]..[480,16664+39])
                                                  ]
                                            ]
                                      ]
                                      expression (src/conflict.ml[488,16981+6]..[521,18051+15])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/conflict.ml[488,16981+10]..[488,16981+30])
                                              Ppat_tuple
                                              [
                                                pattern (src/conflict.ml[488,16981+10]..[488,16981+17])
                                                  Ppat_var "context" (src/conflict.ml[488,16981+10]..[488,16981+17])
                                                pattern (src/conflict.ml[488,16981+19]..[488,16981+30])
                                                  Ppat_var "derivations" (src/conflict.ml[488,16981+19]..[488,16981+30])
                                              ]
                                            expression (src/conflict.ml[489,17014+8]..[489,17014+37])
                                              Pexp_apply
                                              expression (src/conflict.ml[489,17014+8]..[489,17014+25])
                                                Pexp_ident "Derivation.factor" (src/conflict.ml[489,17014+8]..[489,17014+25])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/conflict.ml[489,17014+26]..[489,17014+37])
                                                    Pexp_ident "derivations" (src/conflict.ml[489,17014+26]..[489,17014+37])
                                              ]
                                        ]
                                        expression (src/conflict.ml[494,17103+6]..[521,18051+15])
                                          Pexp_sequence
                                          expression (src/conflict.ml[494,17103+6]..[496,17211+108])
                                            Pexp_apply
                                            expression (src/conflict.ml[494,17103+6]..[494,17103+20])
                                              Pexp_ident "Printf.fprintf" (src/conflict.ml[494,17103+6]..[494,17103+20])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/conflict.ml[494,17103+21]..[494,17103+24])
                                                  Pexp_ident "out" (src/conflict.ml[494,17103+21]..[494,17103+24])
                                              <arg>
                                              Nolabel
                                                expression (src/conflict.ml[495,17128+8]..[496,17211+108])
                                                  Pexp_constant PConst_string("\n** The derivations that appear below have the following common factor:\n** (The question mark symbol (?) represents the spot where the derivations begin to differ.)\n\n",(src/conflict.ml[495,17128+9]..[496,17211+107]),None)
                                            ]
                                          expression (src/conflict.ml[497,17321+6]..[521,18051+15])
                                            Pexp_sequence
                                            expression (src/conflict.ml[497,17321+6]..[497,17321+35])
                                              Pexp_apply
                                              expression (src/conflict.ml[497,17321+6]..[497,17321+23])
                                                Pexp_ident "Derivation.printc" (src/conflict.ml[497,17321+6]..[497,17321+23])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/conflict.ml[497,17321+24]..[497,17321+27])
                                                    Pexp_ident "out" (src/conflict.ml[497,17321+24]..[497,17321+27])
                                                <arg>
                                                Nolabel
                                                  expression (src/conflict.ml[497,17321+28]..[497,17321+35])
                                                    Pexp_ident "context" (src/conflict.ml[497,17321+28]..[497,17321+35])
                                              ]
                                            expression (src/conflict.ml[501,17407+6]..[521,18051+15])
                                              Pexp_sequence
                                              expression (src/conflict.ml[501,17407+6]..[519,18029+19])
                                                Pexp_apply
                                                expression (src/conflict.ml[501,17407+6]..[501,17407+19])
                                                  Pexp_ident "Item.Map.iter" (src/conflict.ml[501,17407+6]..[501,17407+19])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/conflict.ml[501,17407+20]..[519,18029+7])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (src/conflict.ml[501,17407+25]..[501,17407+29])
                                                        Ppat_var "item" (src/conflict.ml[501,17407+25]..[501,17407+29])
                                                      expression (src/conflict.ml[501,17407+30]..[517,17988+39]) ghost
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (src/conflict.ml[501,17407+30]..[501,17407+40])
                                                          Ppat_var "derivation" (src/conflict.ml[501,17407+30]..[501,17407+40])
                                                        expression (src/conflict.ml[503,17452+8]..[517,17988+39])
                                                          Pexp_sequence
                                                          expression (src/conflict.ml[503,17452+8]..[506,17559+34])
                                                            Pexp_apply
                                                            expression (src/conflict.ml[503,17452+8]..[503,17452+22])
                                                              Pexp_ident "Printf.fprintf" (src/conflict.ml[503,17452+8]..[503,17452+22])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/conflict.ml[503,17452+23]..[503,17452+26])
                                                                  Pexp_ident "out" (src/conflict.ml[503,17452+23]..[503,17452+26])
                                                              <arg>
                                                              Nolabel
                                                                expression (src/conflict.ml[504,17479+10]..[504,17479+51])
                                                                  Pexp_constant PConst_string("\n** In state %d, looking ahead at %s, ",(src/conflict.ml[504,17479+11]..[504,17479+50]),None)
                                                              <arg>
                                                              Nolabel
                                                                expression (src/conflict.ml[505,17531+10]..[505,17531+27])
                                                                  Pexp_apply
                                                                  expression (src/conflict.ml[505,17531+11]..[505,17531+21])
                                                                    Pexp_ident "Lr1.number" (src/conflict.ml[505,17531+11]..[505,17531+21])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/conflict.ml[505,17531+22]..[505,17531+26])
Pexp_ident "node" (src/conflict.ml[505,17531+22]..[505,17531+26])
                                                                  ]
                                                              <arg>
                                                              Nolabel
                                                                expression (src/conflict.ml[506,17559+10]..[506,17559+34])
                                                                  Pexp_apply
                                                                  expression (src/conflict.ml[506,17559+11]..[506,17559+25])
                                                                    Pexp_ident "Terminal.print" (src/conflict.ml[506,17559+11]..[506,17559+25])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/conflict.ml[506,17559+26]..[506,17559+33])
Pexp_ident "P.token" (src/conflict.ml[506,17559+26]..[506,17559+33])
                                                                  ]
                                                            ]
                                                          expression (src/conflict.ml[508,17596+8]..[517,17988+39])
                                                            Pexp_sequence
                                                            expression (src/conflict.ml[508,17596+8]..[515,17974+11])
                                                              Pexp_match
                                                              expression (src/conflict.ml[508,17596+20]..[508,17596+38])
                                                                Pexp_apply
                                                                expression (src/conflict.ml[508,17596+20]..[508,17596+33])
                                                                  Pexp_ident "Item.classify" (src/conflict.ml[508,17596+20]..[508,17596+33])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/conflict.ml[508,17596+34]..[508,17596+38])
                                                                      Pexp_ident "item" (src/conflict.ml[508,17596+34]..[508,17596+38])
                                                                ]
                                                              [
                                                                <case>
                                                                  pattern (src/conflict.ml[509,17640+10]..[509,17640+22])
                                                                    Ppat_construct "Item.Shift" (src/conflict.ml[509,17640+10]..[509,17640+20])
                                                                    Some
                                                                      []
                                                                      pattern (src/conflict.ml[509,17640+21]..[509,17640+22])
Ppat_any
                                                                  expression (src/conflict.ml[510,17666+12]..[510,17666+103])
                                                                    Pexp_apply
                                                                    expression (src/conflict.ml[510,17666+12]..[510,17666+26])
                                                                      Pexp_ident "Printf.fprintf" (src/conflict.ml[510,17666+12]..[510,17666+26])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/conflict.ml[510,17666+27]..[510,17666+30])
  Pexp_ident "out" (src/conflict.ml[510,17666+27]..[510,17666+30])
                                                                      <arg>
                                                                      Nolabel
expression (src/conflict.ml[510,17666+31]..[510,17666+103])
  Pexp_constant PConst_string("shifting is permitted\n** because of the following sub-derivation:\n\n",(src/conflict.ml[510,17666+32]..[510,17666+102]),None)
                                                                    ]
                                                                <case>
                                                                  pattern (src/conflict.ml[511,17770+10]..[511,17770+26])
                                                                    Ppat_construct "Item.Reduce" (src/conflict.ml[511,17770+10]..[511,17770+21])
                                                                    Some
                                                                      []
                                                                      pattern (src/conflict.ml[511,17770+22]..[511,17770+26])
Ppat_var "prod" (src/conflict.ml[511,17770+22]..[511,17770+26])
                                                                  expression (src/conflict.ml[512,17800+12]..[514,17936+37])
                                                                    Pexp_apply
                                                                    expression (src/conflict.ml[512,17800+12]..[512,17800+26])
                                                                      Pexp_ident "Printf.fprintf" (src/conflict.ml[512,17800+12]..[512,17800+26])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/conflict.ml[512,17800+27]..[512,17800+30])
  Pexp_ident "out" (src/conflict.ml[512,17800+27]..[512,17800+30])
                                                                      <arg>
                                                                      Nolabel
expression (src/conflict.ml[513,17831+14]..[513,17831+104])
  Pexp_constant PConst_string("reducing production\n** %s\n** is permitted because of the following sub-derivation:\n\n",(src/conflict.ml[513,17831+15]..[513,17831+103]),None)
                                                                      <arg>
                                                                      Nolabel
expression (src/conflict.ml[514,17936+14]..[514,17936+37])
  Pexp_apply
  expression (src/conflict.ml[514,17936+15]..[514,17936+31])
    Pexp_ident "Production.print" (src/conflict.ml[514,17936+15]..[514,17936+31])
  [
    <arg>
    Nolabel
      expression (src/conflict.ml[514,17936+32]..[514,17936+36])
        Pexp_ident "prod" (src/conflict.ml[514,17936+32]..[514,17936+36])
  ]
                                                                    ]
                                                              ]
                                                            expression (src/conflict.ml[517,17988+8]..[517,17988+39])
                                                              Pexp_apply
                                                              expression (src/conflict.ml[517,17988+8]..[517,17988+24])
                                                                Pexp_ident "Derivation.print" (src/conflict.ml[517,17988+8]..[517,17988+24])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/conflict.ml[517,17988+25]..[517,17988+28])
                                                                    Pexp_ident "out" (src/conflict.ml[517,17988+25]..[517,17988+28])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/conflict.ml[517,17988+29]..[517,17988+39])
                                                                    Pexp_ident "derivation" (src/conflict.ml[517,17988+29]..[517,17988+39])
                                                              ]
                                                  <arg>
                                                  Nolabel
                                                    expression (src/conflict.ml[519,18029+8]..[519,18029+19])
                                                      Pexp_ident "derivations" (src/conflict.ml[519,18029+8]..[519,18029+19])
                                                ]
                                              expression (src/conflict.ml[521,18051+6]..[521,18051+15])
                                                Pexp_apply
                                                expression (src/conflict.ml[521,18051+6]..[521,18051+11])
                                                  Pexp_ident "flush" (src/conflict.ml[521,18051+6]..[521,18051+11])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/conflict.ml[521,18051+12]..[521,18051+15])
                                                      Pexp_ident "out" (src/conflict.ml[521,18051+12]..[521,18051+15])
                                                ]
                          [
                            <case>
                              pattern (src/conflict.ml[523,18068+9]..[523,18068+24])
                                Ppat_construct "Lr1partial.Oops" (src/conflict.ml[523,18068+9]..[523,18068+24])
                                None
                              expression (src/conflict.ml[530,18416+6]..[545,18998+7])
                                Pexp_sequence
                                expression (src/conflict.ml[530,18416+6]..[530,18416+24])
                                  Pexp_apply
                                  expression (src/conflict.ml[530,18416+6]..[530,18416+10])
                                    Pexp_ident "incr" (src/conflict.ml[530,18416+6]..[530,18416+10])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/conflict.ml[530,18416+11]..[530,18416+24])
                                        Pexp_ident "unexplainable" (src/conflict.ml[530,18416+11]..[530,18416+24])
                                  ]
                                expression (src/conflict.ml[531,18442+6]..[545,18998+7])
                                  Pexp_apply
                                  expression (src/conflict.ml[531,18442+6]..[531,18442+20])
                                    Pexp_ident "Printf.fprintf" (src/conflict.ml[531,18442+6]..[531,18442+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/conflict.ml[531,18442+21]..[531,18442+24])
                                        Pexp_ident "out" (src/conflict.ml[531,18442+21]..[531,18442+24])
                                    <arg>
                                    Nolabel
                                      expression (src/conflict.ml[531,18442+25]..[534,18559+19])
                                        Pexp_constant PConst_string("\n** Conflict (unexplainable) in state %d.\n** Token%s involved: %s\n** %s.\n%!",(src/conflict.ml[531,18442+26]..[534,18559+18]),None)
                                    <arg>
                                    Nolabel
                                      expression (src/conflict.ml[535,18579+6]..[535,18579+23])
                                        Pexp_apply
                                        expression (src/conflict.ml[535,18579+7]..[535,18579+17])
                                          Pexp_ident "Lr1.number" (src/conflict.ml[535,18579+7]..[535,18579+17])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/conflict.ml[535,18579+18]..[535,18579+22])
                                              Pexp_ident "node" (src/conflict.ml[535,18579+18]..[535,18579+22])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/conflict.ml[536,18603+6]..[536,18603+57])
                                        Pexp_ifthenelse
                                        expression (src/conflict.ml[536,18603+10]..[536,18603+39])
                                          Pexp_apply
                                          expression (src/conflict.ml[536,18603+36]..[536,18603+37])
                                            Pexp_ident ">" (src/conflict.ml[536,18603+36]..[536,18603+37])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/conflict.ml[536,18603+10]..[536,18603+35])
                                                Pexp_apply
                                                expression (src/conflict.ml[536,18603+10]..[536,18603+30])
                                                  Pexp_ident "TerminalSet.cardinal" (src/conflict.ml[536,18603+10]..[536,18603+30])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/conflict.ml[536,18603+31]..[536,18603+35])
                                                      Pexp_ident "toks" (src/conflict.ml[536,18603+31]..[536,18603+35])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (src/conflict.ml[536,18603+38]..[536,18603+39])
                                                Pexp_constant PConst_int (1,None)
                                          ]
                                        expression (src/conflict.ml[536,18603+45]..[536,18603+48])
                                          Pexp_constant PConst_string("s",(src/conflict.ml[536,18603+46]..[536,18603+47]),None)
                                        Some
                                          expression (src/conflict.ml[536,18603+54]..[536,18603+56])
                                            Pexp_constant PConst_string("",(src/conflict.ml[536,18603+55]..[536,18603+55]),None)
                                    <arg>
                                    Nolabel
                                      expression (src/conflict.ml[537,18661+6]..[537,18661+30])
                                        Pexp_apply
                                        expression (src/conflict.ml[537,18661+7]..[537,18661+24])
                                          Pexp_ident "TerminalSet.print" (src/conflict.ml[537,18661+7]..[537,18661+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/conflict.ml[537,18661+25]..[537,18661+29])
                                              Pexp_ident "toks" (src/conflict.ml[537,18661+25]..[537,18661+29])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/conflict.ml[538,18692+6]..[545,18998+7])
                                        Pexp_match
                                        expression (src/conflict.ml[538,18692+13]..[538,18692+39])
                                          Pexp_ident "Settings.construction_mode" (src/conflict.ml[538,18692+13]..[538,18692+39])
                                        [
                                          <case>
                                            pattern (src/conflict.ml[539,18737+8]..[539,18737+25])
                                              Ppat_construct "Settings.ModeLALR" (src/conflict.ml[539,18737+8]..[539,18737+25])
                                              None
                                            expression (src/conflict.ml[540,18766+10]..[540,18766+75])
                                              Pexp_constant PConst_string("This may be an artificial conflict caused by your use of --lalr",(src/conflict.ml[540,18766+11]..[540,18766+74]),None)
                                          <case>
                                            pattern (src/conflict.ml[541,18842+8]..[543,18908+26])
                                              Ppat_or
                                              pattern (src/conflict.ml[541,18842+8]..[542,18873+34])
                                                Ppat_or
                                                pattern (src/conflict.ml[541,18842+8]..[541,18842+30])
                                                  Ppat_construct "Settings.ModeCanonical" (src/conflict.ml[541,18842+8]..[541,18842+30])
                                                  None
                                                pattern (src/conflict.ml[542,18873+8]..[542,18873+34])
                                                  Ppat_construct "Settings.ModeInclusionOnly" (src/conflict.ml[542,18873+8]..[542,18873+34])
                                                  None
                                              pattern (src/conflict.ml[543,18908+8]..[543,18908+26])
                                                Ppat_construct "Settings.ModePager" (src/conflict.ml[543,18908+8]..[543,18908+26])
                                                None
                                            expression (src/conflict.ml[544,18938+10]..[544,18938+59])
                                              Pexp_constant PConst_string("Please send your grammar to Menhir's developers",(src/conflict.ml[544,18938+11]..[544,18938+58]),None)
                                        ]
                                  ]
                          ]
                ]
              expression (src/conflict.ml[548,19014+4]..[549,19039+36])
                Pexp_sequence
                expression (src/conflict.ml[548,19014+4]..[548,19014+23])
                  Pexp_apply
                  expression (src/conflict.ml[548,19014+4]..[548,19014+21])
                    Pexp_ident "log_unexplainable" (src/conflict.ml[548,19014+4]..[548,19014+21])
                  [
                    <arg>
                    Nolabel
                      expression (src/conflict.ml[548,19014+21]..[548,19014+23])
                        Pexp_construct "()" (src/conflict.ml[548,19014+21]..[548,19014+23])
                        None
                  ]
                expression (src/conflict.ml[549,19039+4]..[549,19039+36])
                  Pexp_apply
                  expression (src/conflict.ml[549,19039+4]..[549,19039+13])
                    Pexp_ident "Time.tick" (src/conflict.ml[549,19039+4]..[549,19039+13])
                  [
                    <arg>
                    Nolabel
                      expression (src/conflict.ml[549,19039+14]..[549,19039+36])
                        Pexp_constant PConst_string("Explaining conflicts",(src/conflict.ml[549,19039+15]..[549,19039+35]),None)
                  ]
          None
    ]
  structure_item (src/conflict.ml[556,19222+0]..[558,19268+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/conflict.ml[556,19222+4]..[556,19222+6])
          Ppat_construct "()" (src/conflict.ml[556,19222+4]..[556,19222+6])
          None
        expression (src/conflict.ml[557,19231+2]..[558,19268+43])
          Pexp_sequence
          expression (src/conflict.ml[557,19231+2]..[557,19231+35])
            Pexp_apply
            expression (src/conflict.ml[557,19231+2]..[557,19231+33])
              Pexp_ident "Lr1.default_conflict_resolution" (src/conflict.ml[557,19231+2]..[557,19231+33])
            [
              <arg>
              Nolabel
                expression (src/conflict.ml[557,19231+33]..[557,19231+35])
                  Pexp_construct "()" (src/conflict.ml[557,19231+33]..[557,19231+35])
                  None
            ]
          expression (src/conflict.ml[558,19268+2]..[558,19268+43])
            Pexp_apply
            expression (src/conflict.ml[558,19268+2]..[558,19268+11])
              Pexp_ident "Time.tick" (src/conflict.ml[558,19268+2]..[558,19268+11])
            [
              <arg>
              Nolabel
                expression (src/conflict.ml[558,19268+12]..[558,19268+43])
                  Pexp_constant PConst_string("Resolving remaining conflicts",(src/conflict.ml[558,19268+13]..[558,19268+42]),None)
            ]
    ]
  structure_item (src/conflict.ml[564,19536+0]..[566,19571+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/conflict.ml[564,19536+4]..[564,19536+6])
          Ppat_construct "()" (src/conflict.ml[564,19536+4]..[564,19536+6])
          None
        expression (src/conflict.ml[565,19545+2]..[566,19571+37])
          Pexp_sequence
          expression (src/conflict.ml[565,19545+2]..[565,19545+24])
            Pexp_apply
            expression (src/conflict.ml[565,19545+2]..[565,19545+22])
              Pexp_ident "Lr1.extra_reductions" (src/conflict.ml[565,19545+2]..[565,19545+22])
            [
              <arg>
              Nolabel
                expression (src/conflict.ml[565,19545+22]..[565,19545+24])
                  Pexp_construct "()" (src/conflict.ml[565,19545+22]..[565,19545+24])
                  None
            ]
          expression (src/conflict.ml[566,19571+2]..[566,19571+37])
            Pexp_apply
            expression (src/conflict.ml[566,19571+2]..[566,19571+11])
              Pexp_ident "Time.tick" (src/conflict.ml[566,19571+2]..[566,19571+11])
            [
              <arg>
              Nolabel
                expression (src/conflict.ml[566,19571+12]..[566,19571+37])
                  Pexp_constant PConst_string("Adding extra reductions",(src/conflict.ml[566,19571+13]..[566,19571+36]),None)
            ]
    ]
  structure_item (src/conflict.ml[573,19859+0]..[574,19868+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/conflict.ml[573,19859+4]..[573,19859+6])
          Ppat_construct "()" (src/conflict.ml[573,19859+4]..[573,19859+6])
          None
        expression (src/conflict.ml[574,19868+2]..[574,19868+39])
          Pexp_apply
          expression (src/conflict.ml[574,19868+2]..[574,19868+15])
            Pexp_ident "Error.exit_if" (src/conflict.ml[574,19868+2]..[574,19868+15])
          [
            <arg>
            Nolabel
              expression (src/conflict.ml[574,19868+16]..[574,19868+39])
                Pexp_ident "Error.grammatical_error" (src/conflict.ml[574,19868+16]..[574,19868+39])
          ]
    ]
]

open Grammar
let () =
  if Settings.reference_graph then ReferenceGraph.print_reference_graph ()
let () =
  if Settings.dump
  then
    let module Default = struct let has_default_reduction _node = None end in
      let module D = (Dump.Make)(Default) in
        D.dump (Settings.base ^ ".automaton")
type configuration0 = (Item.t * int)
let rec follow derivation offset' =
  function
  | [] -> (assert (offset' = 0); derivation)
  | (item, offset)::configs ->
      let (_, _, rhs, pos, _) = Item.def item in
      let derivation =
        if offset = offset'
        then Derivation.build pos rhs derivation None
        else Derivation.prepend (rhs.(pos)) derivation in
      follow derivation offset configs
exception Done 
let explain_shift_item (start : Item.t) (input : Symbol.t array)
  (stop : Item.t) =
  (let n = Array.length input in
   let table : (configuration0, configuration0 option) Hashtbl.t =
     Hashtbl.create 1023 in
   let queue : configuration0 Queue.t = Queue.create () in
   let enqueue ancestor config =
     try let _ = Hashtbl.find table config in ()
     with
     | Not_found ->
         (Hashtbl.add table config ancestor; Queue.add config queue) in
   enqueue None (start, 0);
   (try
      Misc.qiter
        (function
         | (item, offset) as config ->
             (if (Item.equal item stop) && (offset = n) then raise Done;
              (let (prod, _, rhs, pos, length) = Item.def item in
               if
                 (pos < length) &&
                   ((offset < n) &&
                      (Symbol.equal (rhs.(pos)) (input.(offset))))
               then
                 (let config' =
                    ((Item.import (prod, (pos + 1))), (offset + 1)) in
                  enqueue (Some config) config');
               if pos < length
               then
                 (match rhs.(pos) with
                  | Symbol.N nt ->
                      Production.iternt nt
                        (fun prod ->
                           let config' = ((Item.import (prod, 0)), offset) in
                           enqueue (Some config) config')
                  | Symbol.T _ -> ())))) queue;
      assert false
    with
    | Done ->
        let configs = Misc.materialize table (stop, n) in
        let (_, _, rhs, pos, _) = Item.def stop in
        let derivation = Derivation.tail pos rhs in
        let derivation = follow derivation n configs in derivation) : 
  Derivation.t)
type configuration1 = (Item.t * bool * int)
let config1toconfig0 (item, _, offset) = (item, offset)
let rec follow1 tok derivation offset' =
  function
  | [] -> (assert (Terminal.equal tok Terminal.sharp); derivation)
  | (item, _, offset)::configs ->
      let (prod, _, rhs, pos, length) = Item.def item in
      if offset = offset'
      then
        let (nullable, first) = Analysis.nullable_first_prod prod (pos + 1) in
        (if TerminalSet.mem tok first
         then
           let e = Analysis.explain_first_rhs tok rhs (pos + 1) in
           let comment =
             "lookahead token appears" ^
               (if e = "" then "" else " because " ^ e) in
           let derivation =
             Derivation.build pos rhs derivation (Some comment) in
           follow derivation offset (List.map config1toconfig0 configs)
         else
           (assert nullable;
            (let comment =
               "lookahead token is inherited" ^
                 (if (pos + 1) < length
                  then
                    Printf.sprintf " because %s can vanish"
                      (Symbol.printao (pos + 1) rhs)
                  else "") in
             let derivation =
               Derivation.build pos rhs derivation (Some comment) in
             follow1 tok derivation offset configs)))
      else
        (let derivation = Derivation.prepend (rhs.(pos)) derivation in
         follow1 tok derivation offset configs)
let explain_reduce_item (tok : Terminal.t) (start : Item.t)
  (input : Symbol.t array) (stop : Item.t) =
  (let n = Array.length input in
   let table : (configuration1, configuration1 option) Hashtbl.t =
     Hashtbl.create 1023 in
   let queue : configuration1 Queue.t = Queue.create () in
   let enqueue ancestor config =
     try let _ = Hashtbl.find table config in ()
     with
     | Not_found ->
         (Hashtbl.add table config ancestor; Queue.add config queue) in
   enqueue None (start, (Terminal.equal tok Terminal.sharp), 0);
   (try
      Misc.qiter
        (function
         | (item, lookahead, offset) as config ->
             (if (Item.equal item stop) && (lookahead && (offset = n))
              then raise Done;
              (let (prod, _nt, rhs, pos, length) = Item.def item in
               if
                 (pos < length) &&
                   ((offset < n) &&
                      (Symbol.equal (rhs.(pos)) (input.(offset))))
               then
                 (let config' =
                    ((Item.import (prod, (pos + 1))), lookahead,
                      (offset + 1)) in
                  enqueue (Some config) config');
               if pos < length
               then
                 (match rhs.(pos) with
                  | Symbol.N nt ->
                      let (nullable, first) =
                        Analysis.nullable_first_prod prod (pos + 1) in
                      let first : bool = TerminalSet.mem tok first in
                      let lookahead' =
                        if nullable then first || lookahead else first in
                      Production.iternt nt
                        (fun prod ->
                           let config' =
                             ((Item.import (prod, 0)), lookahead', offset) in
                           enqueue (Some config) config')
                  | Symbol.T _ -> ())))) queue;
      assert false
    with
    | Done ->
        let configs = Misc.materialize table (stop, true, n) in
        let derivation = Derivation.empty in
        let derivation = follow1 tok derivation n configs in derivation) : 
  Derivation.t)
let unexplainable = ref 0
let log_unexplainable () =
  if (!unexplainable) > 0
  then
    Error.logA 2
      (fun f ->
         Printf.fprintf f "%d conflict%s could not be explained.\n"
           (!unexplainable) (if (!unexplainable) > 1 then "s" else ""))
let () =
  if Settings.explain
  then
    let out = open_out (Settings.base ^ ".conflicts") in
    (Lr1.conflicts
       (fun toks ->
          fun node ->
            try
              let module P =
                (Lr1partial.Run)(struct let tokens = toks
                                        let goal = node end) in
                let closure = Lr0.closure P.goal in
                let (shift, reduce) =
                  Item.Map.fold
                    (fun item ->
                       fun toks ->
                         fun (shift, reduce) ->
                           match Item.classify item with
                           | Item.Shift (Symbol.T tok, _) when
                               Terminal.equal tok P.token ->
                               ((shift + 1), reduce)
                           | Item.Reduce _ when TerminalSet.mem P.token toks
                               -> (shift, (reduce + 1))
                           | _ -> (shift, reduce)) closure (0, 0) in
                let kind =
                  if (shift > 0) && (reduce > 1)
                  then "shift/reduce/reduce"
                  else if shift > 0 then "shift/reduce" else "reduce/reduce" in
                Printf.fprintf out
                  "\n** Conflict (%s) in state %d.\n** Token%s involved: %s\n%s** This state is reached from %s after reading:\n\n%s\n"
                  kind (Lr1.number node)
                  (if (TerminalSet.cardinal toks) > 1 then "s" else "")
                  (TerminalSet.print toks)
                  (if (TerminalSet.cardinal toks) > 1
                   then
                     Printf.sprintf
                       "** The following explanations concentrate on token %s.\n"
                       (Terminal.print P.token)
                   else "") (Nonterminal.print false (Item.startnt P.source))
                  (Symbol.printa P.path);
                (let ((_ : bool), derivations) =
                   Item.Map.fold
                     (fun item ->
                        fun toks ->
                          fun (still_looking_for_shift_item, derivations) ->
                            match Item.classify item with
                            | Item.Shift (Symbol.T tok, _) when
                                still_looking_for_shift_item &&
                                  (Terminal.equal tok P.token)
                                ->
                                (false,
                                  (let derivation =
                                     explain_shift_item P.source P.path item in
                                   Item.Map.add item derivation derivations))
                            | Item.Reduce _ when TerminalSet.mem P.token toks
                                ->
                                (still_looking_for_shift_item,
                                  (let derivation =
                                     explain_reduce_item P.token P.source
                                       P.path item in
                                   Item.Map.add item derivation derivations))
                            | _ ->
                                (still_looking_for_shift_item, derivations))
                     closure (true, Item.Map.empty) in
                 let (context, derivations) = Derivation.factor derivations in
                 Printf.fprintf out
                   "\n** The derivations that appear below have the following common factor:\n** (The question mark symbol (?) represents the spot where the derivations begin to differ.)\n\n";
                 Derivation.printc out context;
                 Item.Map.iter
                   (fun item ->
                      fun derivation ->
                        Printf.fprintf out
                          "\n** In state %d, looking ahead at %s, "
                          (Lr1.number node) (Terminal.print P.token);
                        (match Item.classify item with
                         | Item.Shift _ ->
                             Printf.fprintf out
                               "shifting is permitted\n** because of the following sub-derivation:\n\n"
                         | Item.Reduce prod ->
                             Printf.fprintf out
                               "reducing production\n** %s\n** is permitted because of the following sub-derivation:\n\n"
                               (Production.print prod));
                        Derivation.print out derivation) derivations;
                 flush out)
            with
            | Lr1partial.Oops ->
                (incr unexplainable;
                 Printf.fprintf out
                   "\n** Conflict (unexplainable) in state %d.\n** Token%s involved: %s\n** %s.\n%!"
                   (Lr1.number node)
                   (if (TerminalSet.cardinal toks) > 1 then "s" else "")
                   (TerminalSet.print toks)
                   (match Settings.construction_mode with
                    | Settings.ModeLALR ->
                        "This may be an artificial conflict caused by your use of --lalr"
                    | Settings.ModeCanonical | Settings.ModeInclusionOnly
                      | Settings.ModePager ->
                        "Please send your grammar to Menhir's developers")));
     log_unexplainable ();
     Time.tick "Explaining conflicts")
let () =
  Lr1.default_conflict_resolution ();
  Time.tick "Resolving remaining conflicts"
let () = Lr1.extra_reductions (); Time.tick "Adding extra reductions"
let () = Error.exit_if Error.grammatical_error
[
  structure_item (src/conflict.ml[14,998+0]..src/conflict.ml[14,998+12])
    Tstr_open Fresh
    module_expr (src/conflict.ml[14,998+5]..src/conflict.ml[14,998+12])
      Tmod_ident "Dune__exe!.Grammar"
  structure_item (src/conflict.ml[19,1151+0]..src/conflict.ml[21,1195+42])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/conflict.ml[19,1151+4]..src/conflict.ml[19,1151+6])
          Tpat_construct "()"
          []
          None
        expression (src/conflict.ml[20,1160+2]..src/conflict.ml[21,1195+42])
          Texp_ifthenelse
          expression (src/conflict.ml[20,1160+5]..src/conflict.ml[20,1160+29])
            Texp_ident "Dune__exe!.Settings.reference_graph"
          expression (src/conflict.ml[21,1195+4]..src/conflict.ml[21,1195+42])
            Texp_apply
            expression (src/conflict.ml[21,1195+4]..src/conflict.ml[21,1195+40])
              Texp_ident "Dune__exe!.ReferenceGraph.print_reference_graph"
            [
              <arg>
                Nolabel
                expression (src/conflict.ml[21,1195+40]..src/conflict.ml[21,1195+42])
                  Texp_construct "()"
                  []
            ]
          None
    ]
  structure_item (src/conflict.ml[26,1399+0]..src/conflict.ml[33,1635+41])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/conflict.ml[26,1399+4]..src/conflict.ml[26,1399+6])
          Tpat_construct "()"
          []
          None
        expression (src/conflict.ml[27,1408+2]..src/conflict.ml[33,1635+41])
          Texp_ifthenelse
          expression (src/conflict.ml[27,1408+5]..src/conflict.ml[27,1408+18])
            Texp_ident "Dune__exe!.Settings.dump"
          expression (src/conflict.ml[29,1506+4]..src/conflict.ml[33,1635+41])
            Texp_letmodule "Default/478"
            module_expr (src/conflict.ml[29,1506+25]..src/conflict.ml[31,1583+7])
              Tmod_structure
              [
                structure_item (src/conflict.ml[30,1538+6]..src/conflict.ml[30,1538+44])
                  Tstr_value Nonrec
                  [
                    <def>
                      pattern (src/conflict.ml[30,1538+10]..src/conflict.ml[30,1538+31])
                        Tpat_var "has_default_reduction/475"
                      expression (src/conflict.ml[30,1538+32]..src/conflict.ml[30,1538+44]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/conflict.ml[30,1538+32]..src/conflict.ml[30,1538+37])
                              Tpat_var "_node/477"
                            expression (src/conflict.ml[30,1538+40]..src/conflict.ml[30,1538+44])
                              Texp_construct "None"
                              []
                        ]
                  ]
              ]
            expression (src/conflict.ml[32,1594+4]..src/conflict.ml[33,1635+41])
              Texp_letmodule "D/487"
              module_expr (src/conflict.ml[32,1594+19]..src/conflict.ml[32,1594+37])
                Tmod_apply
                module_expr (src/conflict.ml[32,1594+19]..src/conflict.ml[32,1594+28])
                  module_expr (src/conflict.ml[32,1594+19]..src/conflict.ml[32,1594+28])
                    Tmod_ident "Dune__exe!.Dump.Make"
                module_expr (src/conflict.ml[32,1594+29]..src/conflict.ml[32,1594+36])
                  Tmod_ident "Default/478"
              expression (src/conflict.ml[33,1635+4]..src/conflict.ml[33,1635+41])
                Texp_apply
                expression (src/conflict.ml[33,1635+4]..src/conflict.ml[33,1635+10])
                  Texp_ident "D/487.dump"
                [
                  <arg>
                    Nolabel
                    expression (src/conflict.ml[33,1635+11]..src/conflict.ml[33,1635+41])
                      Texp_apply
                      expression (src/conflict.ml[33,1635+26]..src/conflict.ml[33,1635+27])
                        Texp_ident "Stdlib!.^"
                      [
                        <arg>
                          Nolabel
                          expression (src/conflict.ml[33,1635+12]..src/conflict.ml[33,1635+25])
                            Texp_ident "Dune__exe!.Settings.base"
                        <arg>
                          Nolabel
                          expression (src/conflict.ml[33,1635+28]..src/conflict.ml[33,1635+40])
                            Texp_constant Const_string(".automaton",(src/conflict.ml[33,1635+29]..src/conflict.ml[33,1635+39]),None)
                      ]
                ]
          None
    ]
  structure_item (src/conflict.ml[58,2844+0]..src/conflict.ml[59,2866+16])
    Tstr_type Rec
    [
      type_declaration configuration0/488 (src/conflict.ml[58,2844+0]..src/conflict.ml[59,2866+16])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/conflict.ml[59,2866+4]..src/conflict.ml[59,2866+16])
              Ttyp_tuple
              [
                core_type (src/conflict.ml[59,2866+4]..src/conflict.ml[59,2866+10])
                  Ttyp_constr "Dune__exe!.Item.t"
                  []
                core_type (src/conflict.ml[59,2866+13]..src/conflict.ml[59,2866+16])
                  Ttyp_constr "int/1!"
                  []
              ]
    ]
  structure_item (src/conflict.ml[66,3139+0]..src/conflict.ml[82,3707+38])
    Tstr_value Rec
    [
      <def>
        pattern (src/conflict.ml[66,3139+8]..src/conflict.ml[66,3139+14])
          Tpat_var "follow/518"
        expression (src/conflict.ml[66,3139+15]..src/conflict.ml[82,3707+38]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/conflict.ml[66,3139+15]..src/conflict.ml[66,3139+25])
                Tpat_var "derivation/519"
              expression (src/conflict.ml[66,3139+26]..src/conflict.ml[82,3707+38]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/conflict.ml[66,3139+26]..src/conflict.ml[66,3139+33])
                      Tpat_var "offset'/520"
                    expression (src/conflict.ml[66,3139+36]..src/conflict.ml[82,3707+38])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/conflict.ml[67,3184+4]..src/conflict.ml[67,3184+6])
                            Tpat_construct "[]"
                            []
                            None
                          expression (src/conflict.ml[68,3194+6]..src/conflict.ml[69,3222+16])
                            Texp_sequence
                            expression (src/conflict.ml[68,3194+6]..src/conflict.ml[68,3194+26])
                              Texp_assert                              expression (src/conflict.ml[68,3194+13]..src/conflict.ml[68,3194+26])
                                Texp_apply
                                expression (src/conflict.ml[68,3194+22]..src/conflict.ml[68,3194+23])
                                  Texp_ident "Stdlib!.="
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/conflict.ml[68,3194+14]..src/conflict.ml[68,3194+21])
                                      Texp_ident "offset'/520"
                                  <arg>
                                    Nolabel
                                    expression (src/conflict.ml[68,3194+24]..src/conflict.ml[68,3194+25])
                                      Texp_constant Const_int 0
                                ]
                            expression (src/conflict.ml[69,3222+6]..src/conflict.ml[69,3222+16])
                              Texp_ident "derivation/519"
                        <case>
                          pattern (src/conflict.ml[70,3239+4]..src/conflict.ml[70,3239+29])
                            Tpat_construct "::"
                            [
                              pattern (src/conflict.ml[70,3239+4]..src/conflict.ml[70,3239+18])
                                Tpat_tuple
                                [
                                  pattern (src/conflict.ml[70,3239+5]..src/conflict.ml[70,3239+9])
                                    Tpat_var "item/521"
                                  pattern (src/conflict.ml[70,3239+11]..src/conflict.ml[70,3239+17])
                                    Tpat_var "offset/522"
                                ]
                              pattern (src/conflict.ml[70,3239+22]..src/conflict.ml[70,3239+29])
                                Tpat_var "configs/523"
                            ]
                            None
                          expression (src/conflict.ml[71,3272+6]..src/conflict.ml[82,3707+38])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/conflict.ml[71,3272+10]..src/conflict.ml[71,3272+27])
                                  Tpat_tuple
                                  [
                                    pattern (src/conflict.ml[71,3272+10]..src/conflict.ml[71,3272+11])
                                      Tpat_any
                                    pattern (src/conflict.ml[71,3272+13]..src/conflict.ml[71,3272+14])
                                      Tpat_any
                                    pattern (src/conflict.ml[71,3272+16]..src/conflict.ml[71,3272+19])
                                      Tpat_var "rhs/524"
                                    pattern (src/conflict.ml[71,3272+21]..src/conflict.ml[71,3272+24])
                                      Tpat_var "pos/525"
                                    pattern (src/conflict.ml[71,3272+26]..src/conflict.ml[71,3272+27])
                                      Tpat_any
                                  ]
                                expression (src/conflict.ml[71,3272+30]..src/conflict.ml[71,3272+43])
                                  Texp_apply
                                  expression (src/conflict.ml[71,3272+30]..src/conflict.ml[71,3272+38])
                                    Texp_ident "Dune__exe!.Item.def"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/conflict.ml[71,3272+39]..src/conflict.ml[71,3272+43])
                                        Texp_ident "item/521"
                                  ]
                            ]
                            expression (src/conflict.ml[72,3319+6]..src/conflict.ml[82,3707+38])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/conflict.ml[72,3319+10]..src/conflict.ml[72,3319+20])
                                    Tpat_var "derivation/526"
                                  expression (src/conflict.ml[73,3342+8]..src/conflict.ml[80,3648+49])
                                    Texp_ifthenelse
                                    expression (src/conflict.ml[73,3342+11]..src/conflict.ml[73,3342+27])
                                      Texp_apply
                                      expression (src/conflict.ml[73,3342+18]..src/conflict.ml[73,3342+19])
                                        Texp_ident "Stdlib!.="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/conflict.ml[73,3342+11]..src/conflict.ml[73,3342+17])
                                            Texp_ident "offset/522"
                                        <arg>
                                          Nolabel
                                          expression (src/conflict.ml[73,3342+20]..src/conflict.ml[73,3342+27])
                                            Texp_ident "offset'/520"
                                      ]
                                    expression (src/conflict.ml[76,3490+10]..src/conflict.ml[76,3490+50])
                                      Texp_apply
                                      expression (src/conflict.ml[76,3490+10]..src/conflict.ml[76,3490+26])
                                        Texp_ident "Dune__exe!.Derivation.build"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/conflict.ml[76,3490+27]..src/conflict.ml[76,3490+30])
                                            Texp_ident "pos/525"
                                        <arg>
                                          Nolabel
                                          expression (src/conflict.ml[76,3490+31]..src/conflict.ml[76,3490+34])
                                            Texp_ident "rhs/524"
                                        <arg>
                                          Nolabel
                                          expression (src/conflict.ml[76,3490+35]..src/conflict.ml[76,3490+45])
                                            Texp_ident "derivation/519"
                                        <arg>
                                          Nolabel
                                          expression (src/conflict.ml[76,3490+46]..src/conflict.ml[76,3490+50])
                                            Texp_construct "None"
                                            []
                                      ]
                                    Some
                                      expression (src/conflict.ml[80,3648+10]..src/conflict.ml[80,3648+49])
                                        Texp_apply
                                        expression (src/conflict.ml[80,3648+10]..src/conflict.ml[80,3648+28])
                                          Texp_ident "Dune__exe!.Derivation.prepend"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/conflict.ml[80,3648+29]..src/conflict.ml[80,3648+38])
                                              Texp_apply
                                              expression (src/conflict.ml[80,3648+29]..src/conflict.ml[80,3648+38]) ghost
                                                Texp_ident "Stdlib!.Array.get"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/conflict.ml[80,3648+29]..src/conflict.ml[80,3648+32])
                                                    Texp_ident "rhs/524"
                                                <arg>
                                                  Nolabel
                                                  expression (src/conflict.ml[80,3648+34]..src/conflict.ml[80,3648+37])
                                                    Texp_ident "pos/525"
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/conflict.ml[80,3648+39]..src/conflict.ml[80,3648+49])
                                              Texp_ident "derivation/519"
                                        ]
                              ]
                              expression (src/conflict.ml[82,3707+6]..src/conflict.ml[82,3707+38])
                                Texp_apply
                                expression (src/conflict.ml[82,3707+6]..src/conflict.ml[82,3707+12])
                                  Texp_ident "follow/518"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/conflict.ml[82,3707+13]..src/conflict.ml[82,3707+23])
                                      Texp_ident "derivation/526"
                                  <arg>
                                    Nolabel
                                    expression (src/conflict.ml[82,3707+24]..src/conflict.ml[82,3707+30])
                                      Texp_ident "offset/522"
                                  <arg>
                                    Nolabel
                                    expression (src/conflict.ml[82,3707+31]..src/conflict.ml[82,3707+38])
                                      Texp_ident "configs/523"
                                ]
                      ]
                ]
          ]
    ]
  structure_item (src/conflict.ml[95,4313+0]..src/conflict.ml[95,4313+14])
    Tstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (src/conflict.ml[95,4313+0]..src/conflict.ml[95,4313+14])
          pext_name = "Done/633"
          pext_kind =
            Text_decl
              []
              None
  structure_item (src/conflict.ml[97,4329+0]..src/conflict.ml[171,6279+14])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/conflict.ml[97,4329+4]..src/conflict.ml[97,4329+22])
          Tpat_var "explain_shift_item/634"
        expression (src/conflict.ml[98,4352+4]..src/conflict.ml[171,6279+14]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/conflict.ml[98,4352+5]..src/conflict.ml[98,4352+10])
                extra
                  Tpat_extra_constraint
                  core_type (src/conflict.ml[98,4352+13]..src/conflict.ml[98,4352+19])
                    Ttyp_constr "Dune__exe!.Item.t"
                    []
                Tpat_alias "start/636"
                pattern (src/conflict.ml[98,4352+5]..src/conflict.ml[98,4352+10])
                  Tpat_any
              expression (src/conflict.ml[99,4373+4]..src/conflict.ml[171,6279+14]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/conflict.ml[99,4373+5]..src/conflict.ml[99,4373+10])
                      extra
                        Tpat_extra_constraint
                        core_type (src/conflict.ml[99,4373+13]..src/conflict.ml[99,4373+27])
                          Ttyp_constr "array/8!"
                          [
                            core_type (src/conflict.ml[99,4373+13]..src/conflict.ml[99,4373+21])
                              Ttyp_constr "Dune__exe!.Grammar.Symbol.t"
                              []
                          ]
                      Tpat_alias "input/637"
                      pattern (src/conflict.ml[99,4373+5]..src/conflict.ml[99,4373+10])
                        Tpat_any
                    expression (src/conflict.ml[100,4402+4]..src/conflict.ml[171,6279+14]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/conflict.ml[100,4402+5]..src/conflict.ml[100,4402+9])
                            extra
                              Tpat_extra_constraint
                              core_type (src/conflict.ml[100,4402+12]..src/conflict.ml[100,4402+18])
                                Ttyp_constr "Dune__exe!.Item.t"
                                []
                            Tpat_alias "stop/638"
                            pattern (src/conflict.ml[100,4402+5]..src/conflict.ml[100,4402+9])
                              Tpat_any
                          expression (src/conflict.ml[103,4444+2]..src/conflict.ml[171,6279+14])
                            extra
                              Texp_constraint
                              core_type (src/conflict.ml[101,4422+6]..src/conflict.ml[101,4422+18])
                                Ttyp_constr "Dune__exe!.Derivation.t"
                                []
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/conflict.ml[103,4444+6]..src/conflict.ml[103,4444+7])
                                  Tpat_var "n/639"
                                expression (src/conflict.ml[104,4454+4]..src/conflict.ml[104,4454+22])
                                  Texp_apply
                                  expression (src/conflict.ml[104,4454+4]..src/conflict.ml[104,4454+16])
                                    Texp_ident "Stdlib!.Array.length"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/conflict.ml[104,4454+17]..src/conflict.ml[104,4454+22])
                                        Texp_ident "input/637"
                                  ]
                            ]
                            expression (src/conflict.ml[107,4483+2]..src/conflict.ml[171,6279+14])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/conflict.ml[107,4483+6]..src/conflict.ml[107,4483+11])
                                    extra
                                      Tpat_extra_constraint
                                      core_type (src/conflict.ml[107,4483+14]..src/conflict.ml[107,4483+63])
                                        Ttyp_constr "Stdlib!.Hashtbl.t"
                                        [
                                          core_type (src/conflict.ml[107,4483+15]..src/conflict.ml[107,4483+29])
                                            Ttyp_constr "configuration0/488"
                                            []
                                          core_type (src/conflict.ml[107,4483+31]..src/conflict.ml[107,4483+52])
                                            Ttyp_constr "option/10!"
                                            [
                                              core_type (src/conflict.ml[107,4483+31]..src/conflict.ml[107,4483+45])
                                                Ttyp_constr "configuration0/488"
                                                []
                                            ]
                                        ]
                                    Tpat_alias "table/679"
                                    pattern (src/conflict.ml[107,4483+6]..src/conflict.ml[107,4483+11])
                                      Tpat_any
                                  expression (src/conflict.ml[108,4549+4]..src/conflict.ml[108,4549+23])
                                    extra
                                      Texp_constraint
                                      core_type (src/conflict.ml[107,4483+14]..src/conflict.ml[107,4483+63])
                                        Ttyp_constr "Stdlib!.Hashtbl.t"
                                        [
                                          core_type (src/conflict.ml[107,4483+15]..src/conflict.ml[107,4483+29])
                                            Ttyp_constr "configuration0/488"
                                            []
                                          core_type (src/conflict.ml[107,4483+31]..src/conflict.ml[107,4483+52])
                                            Ttyp_constr "option/10!"
                                            [
                                              core_type (src/conflict.ml[107,4483+31]..src/conflict.ml[107,4483+45])
                                                Ttyp_constr "configuration0/488"
                                                []
                                            ]
                                        ]
                                    Texp_apply
                                    expression (src/conflict.ml[108,4549+4]..src/conflict.ml[108,4549+18])
                                      Texp_ident "Stdlib!.Hashtbl.create"
                                    [
                                      <arg>
                                        Optional "random"
                                        expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                          Texp_construct "None"
                                          []
                                      <arg>
                                        Nolabel
                                        expression (src/conflict.ml[108,4549+19]..src/conflict.ml[108,4549+23])
                                          Texp_constant Const_int 1023
                                    ]
                              ]
                              expression (src/conflict.ml[111,4579+2]..src/conflict.ml[171,6279+14])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (src/conflict.ml[111,4579+6]..src/conflict.ml[111,4579+11])
                                      extra
                                        Tpat_extra_constraint
                                        core_type (src/conflict.ml[111,4579+14]..src/conflict.ml[111,4579+36])
                                          Ttyp_constr "Stdlib!.Queue.t"
                                          [
                                            core_type (src/conflict.ml[111,4579+14]..src/conflict.ml[111,4579+28])
                                              Ttyp_constr "configuration0/488"
                                              []
                                          ]
                                      Tpat_alias "queue/742"
                                      pattern (src/conflict.ml[111,4579+6]..src/conflict.ml[111,4579+11])
                                        Tpat_any
                                    expression (src/conflict.ml[112,4618+4]..src/conflict.ml[112,4618+18])
                                      extra
                                        Texp_constraint
                                        core_type (src/conflict.ml[111,4579+14]..src/conflict.ml[111,4579+36])
                                          Ttyp_constr "Stdlib!.Queue.t"
                                          [
                                            core_type (src/conflict.ml[111,4579+14]..src/conflict.ml[111,4579+28])
                                              Ttyp_constr "configuration0/488"
                                              []
                                          ]
                                      Texp_apply
                                      expression (src/conflict.ml[112,4618+4]..src/conflict.ml[112,4618+16])
                                        Texp_ident "Stdlib!.Queue.create"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/conflict.ml[112,4618+16]..src/conflict.ml[112,4618+18])
                                            Texp_construct "()"
                                            []
                                      ]
                                ]
                                expression (src/conflict.ml[115,4643+2]..src/conflict.ml[171,6279+14])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/conflict.ml[115,4643+6]..src/conflict.ml[115,4643+13])
                                        Tpat_var "enqueue/764"
                                      expression (src/conflict.ml[115,4643+14]..src/conflict.ml[121,4798+28]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/conflict.ml[115,4643+14]..src/conflict.ml[115,4643+22])
                                              Tpat_var "ancestor/766"
                                            expression (src/conflict.ml[115,4643+23]..src/conflict.ml[121,4798+28]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/conflict.ml[115,4643+23]..src/conflict.ml[115,4643+29])
                                                    Tpat_var "config/767"
                                                  expression (src/conflict.ml[116,4675+4]..src/conflict.ml[121,4798+28])
                                                    Texp_try
                                                    expression (src/conflict.ml[117,4683+6]..src/conflict.ml[118,4726+8])
                                                      Texp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (src/conflict.ml[117,4683+10]..src/conflict.ml[117,4683+11])
                                                            Tpat_any
                                                          expression (src/conflict.ml[117,4683+14]..src/conflict.ml[117,4683+39])
                                                            Texp_apply
                                                            expression (src/conflict.ml[117,4683+14]..src/conflict.ml[117,4683+26])
                                                              Texp_ident "Stdlib!.Hashtbl.find"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/conflict.ml[117,4683+27]..src/conflict.ml[117,4683+32])
                                                                  Texp_ident "table/679"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/conflict.ml[117,4683+33]..src/conflict.ml[117,4683+39])
                                                                  Texp_ident "config/767"
                                                            ]
                                                      ]
                                                      expression (src/conflict.ml[118,4726+6]..src/conflict.ml[118,4726+8])
                                                        Texp_construct "()"
                                                        []
                                                    [
                                                      <case>
                                                        pattern (src/conflict.ml[119,4735+9]..src/conflict.ml[119,4735+18])
                                                          Tpat_construct "Not_found"
                                                          []
                                                          None
                                                        expression (src/conflict.ml[120,4757+6]..src/conflict.ml[121,4798+28])
                                                          Texp_sequence
                                                          expression (src/conflict.ml[120,4757+6]..src/conflict.ml[120,4757+39])
                                                            Texp_apply
                                                            expression (src/conflict.ml[120,4757+6]..src/conflict.ml[120,4757+17])
                                                              Texp_ident "Stdlib!.Hashtbl.add"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/conflict.ml[120,4757+18]..src/conflict.ml[120,4757+23])
                                                                  Texp_ident "table/679"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/conflict.ml[120,4757+24]..src/conflict.ml[120,4757+30])
                                                                  Texp_ident "config/767"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/conflict.ml[120,4757+31]..src/conflict.ml[120,4757+39])
                                                                  Texp_ident "ancestor/766"
                                                            ]
                                                          expression (src/conflict.ml[121,4798+6]..src/conflict.ml[121,4798+28])
                                                            Texp_apply
                                                            expression (src/conflict.ml[121,4798+6]..src/conflict.ml[121,4798+15])
                                                              Texp_ident "Stdlib!.Queue.add"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/conflict.ml[121,4798+16]..src/conflict.ml[121,4798+22])
                                                                  Texp_ident "config/767"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/conflict.ml[121,4798+23]..src/conflict.ml[121,4798+28])
                                                                  Texp_ident "queue/742"
                                                            ]
                                                    ]
                                              ]
                                        ]
                                  ]
                                  expression (src/conflict.ml[124,4833+2]..src/conflict.ml[171,6279+14])
                                    Texp_sequence
                                    expression (src/conflict.ml[124,4833+2]..src/conflict.ml[124,4833+25])
                                      Texp_apply
                                      expression (src/conflict.ml[124,4833+2]..src/conflict.ml[124,4833+9])
                                        Texp_ident "enqueue/764"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/conflict.ml[124,4833+10]..src/conflict.ml[124,4833+14])
                                            Texp_construct "None"
                                            []
                                        <arg>
                                          Nolabel
                                          expression (src/conflict.ml[124,4833+15]..src/conflict.ml[124,4833+25])
                                            Texp_tuple
                                            [
                                              expression (src/conflict.ml[124,4833+16]..src/conflict.ml[124,4833+21])
                                                Texp_ident "start/636"
                                              expression (src/conflict.ml[124,4833+23]..src/conflict.ml[124,4833+24])
                                                Texp_constant Const_int 0
                                            ]
                                      ]
                                    expression (src/conflict.ml[125,4860+2]..src/conflict.ml[171,6279+14])
                                      Texp_try
                                      expression (src/conflict.ml[126,4866+4]..src/conflict.ml[161,5904+16])
                                        Texp_sequence
                                        expression (src/conflict.ml[126,4866+4]..src/conflict.ml[160,5891+11])
                                          Texp_apply
                                          expression (src/conflict.ml[126,4866+4]..src/conflict.ml[126,4866+14])
                                            Texp_ident "Dune__exe!.Misc.qiter"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/conflict.ml[126,4866+15]..src/conflict.ml[160,5891+5])
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (src/conflict.ml[126,4866+25]..src/conflict.ml[126,4866+49])
                                                      Tpat_alias "config/806"
                                                      pattern (src/conflict.ml[126,4866+25]..src/conflict.ml[126,4866+39])
                                                        Tpat_tuple
                                                        [
                                                          pattern (src/conflict.ml[126,4866+26]..src/conflict.ml[126,4866+30])
                                                            Tpat_var "item/804"
                                                          pattern (src/conflict.ml[126,4866+32]..src/conflict.ml[126,4866+38])
                                                            Tpat_var "offset/805"
                                                        ]
                                                    expression (src/conflict.ml[131,5040+6]..src/conflict.ml[158,5875+14])
                                                      Texp_sequence
                                                      expression (src/conflict.ml[131,5040+6]..src/conflict.ml[132,5093+18])
                                                        Texp_ifthenelse
                                                        expression (src/conflict.ml[131,5040+9]..src/conflict.ml[131,5040+47])
                                                          Texp_apply
                                                          expression (src/conflict.ml[131,5040+32]..src/conflict.ml[131,5040+34])
                                                            Texp_ident "Stdlib!.&&"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/conflict.ml[131,5040+9]..src/conflict.ml[131,5040+31])
                                                                Texp_apply
                                                                expression (src/conflict.ml[131,5040+10]..src/conflict.ml[131,5040+20])
                                                                  Texp_ident "Dune__exe!.Item.equal"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/conflict.ml[131,5040+21]..src/conflict.ml[131,5040+25])
                                                                      Texp_ident "item/804"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/conflict.ml[131,5040+26]..src/conflict.ml[131,5040+30])
                                                                      Texp_ident "stop/638"
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (src/conflict.ml[131,5040+35]..src/conflict.ml[131,5040+47])
                                                                Texp_apply
                                                                expression (src/conflict.ml[131,5040+43]..src/conflict.ml[131,5040+44])
                                                                  Texp_ident "Stdlib!.="
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/conflict.ml[131,5040+36]..src/conflict.ml[131,5040+42])
                                                                      Texp_ident "offset/805"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/conflict.ml[131,5040+45]..src/conflict.ml[131,5040+46])
                                                                      Texp_ident "n/639"
                                                                ]
                                                          ]
                                                        expression (src/conflict.ml[132,5093+8]..src/conflict.ml[132,5093+18])
                                                          Texp_apply
                                                          expression (src/conflict.ml[132,5093+8]..src/conflict.ml[132,5093+13])
                                                            Texp_ident "Stdlib!.raise"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/conflict.ml[132,5093+14]..src/conflict.ml[132,5093+18])
                                                                Texp_construct "Done"
                                                                []
                                                          ]
                                                        None
                                                      expression (src/conflict.ml[136,5180+6]..src/conflict.ml[158,5875+14])
                                                        Texp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (src/conflict.ml[136,5180+10]..src/conflict.ml[136,5180+35])
                                                              Tpat_tuple
                                                              [
                                                                pattern (src/conflict.ml[136,5180+10]..src/conflict.ml[136,5180+14])
                                                                  Tpat_var "prod/807"
                                                                pattern (src/conflict.ml[136,5180+16]..src/conflict.ml[136,5180+17])
                                                                  Tpat_any
                                                                pattern (src/conflict.ml[136,5180+19]..src/conflict.ml[136,5180+22])
                                                                  Tpat_var "rhs/808"
                                                                pattern (src/conflict.ml[136,5180+24]..src/conflict.ml[136,5180+27])
                                                                  Tpat_var "pos/809"
                                                                pattern (src/conflict.ml[136,5180+29]..src/conflict.ml[136,5180+35])
                                                                  Tpat_var "length/810"
                                                              ]
                                                            expression (src/conflict.ml[136,5180+38]..src/conflict.ml[136,5180+51])
                                                              Texp_apply
                                                              expression (src/conflict.ml[136,5180+38]..src/conflict.ml[136,5180+46])
                                                                Texp_ident "Dune__exe!.Item.def"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/conflict.ml[136,5180+47]..src/conflict.ml[136,5180+51])
                                                                    Texp_ident "item/804"
                                                              ]
                                                        ]
                                                        expression (src/conflict.ml[141,5350+6]..src/conflict.ml[158,5875+14])
                                                          Texp_sequence
                                                          expression (src/conflict.ml[141,5350+6]..src/conflict.ml[146,5557+9])
                                                            Texp_ifthenelse
                                                            expression (src/conflict.ml[141,5350+9]..src/conflict.ml[143,5396+48])
                                                              Texp_apply
                                                              expression (src/conflict.ml[142,5374+6]..src/conflict.ml[142,5374+8])
                                                                Texp_ident "Stdlib!.&&"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/conflict.ml[141,5350+9]..src/conflict.ml[141,5350+23])
                                                                    Texp_apply
                                                                    expression (src/conflict.ml[141,5350+14]..src/conflict.ml[141,5350+15])
                                                                      Texp_ident "Stdlib!.<"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/conflict.ml[141,5350+10]..src/conflict.ml[141,5350+13])
                                                                          Texp_ident "pos/809"
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/conflict.ml[141,5350+16]..src/conflict.ml[141,5350+22])
                                                                          Texp_ident "length/810"
                                                                    ]
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/conflict.ml[142,5374+9]..src/conflict.ml[143,5396+48])
                                                                    Texp_apply
                                                                    expression (src/conflict.ml[143,5396+6]..src/conflict.ml[143,5396+8])
                                                                      Texp_ident "Stdlib!.&&"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/conflict.ml[142,5374+9]..src/conflict.ml[142,5374+21])
                                                                          Texp_apply
                                                                          expression (src/conflict.ml[142,5374+17]..src/conflict.ml[142,5374+18])
                                                                            Texp_ident "Stdlib!.<"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/conflict.ml[142,5374+10]..src/conflict.ml[142,5374+16])
                                                                                Texp_ident "offset/805"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/conflict.ml[142,5374+19]..src/conflict.ml[142,5374+20])
                                                                                Texp_ident "n/639"
                                                                          ]
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/conflict.ml[143,5396+9]..src/conflict.ml[143,5396+48])
                                                                          Texp_apply
                                                                          expression (src/conflict.ml[143,5396+10]..src/conflict.ml[143,5396+22])
                                                                            Texp_ident "Dune__exe!.Grammar.Symbol.equal"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/conflict.ml[143,5396+23]..src/conflict.ml[143,5396+32])
                                                                                Texp_apply
                                                                                expression (src/conflict.ml[143,5396+23]..src/conflict.ml[143,5396+32]) ghost
                                                                                  Texp_ident "Stdlib!.Array.get"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/conflict.ml[143,5396+23]..src/conflict.ml[143,5396+26])
                                                                                      Texp_ident "rhs/808"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/conflict.ml[143,5396+28]..src/conflict.ml[143,5396+31])
                                                                                      Texp_ident "pos/809"
                                                                                ]
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/conflict.ml[143,5396+33]..src/conflict.ml[143,5396+47])
                                                                                Texp_apply
                                                                                expression (src/conflict.ml[143,5396+33]..src/conflict.ml[143,5396+47]) ghost
                                                                                  Texp_ident "Stdlib!.Array.get"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/conflict.ml[143,5396+33]..src/conflict.ml[143,5396+38])
                                                                                      Texp_ident "input/637"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/conflict.ml[143,5396+40]..src/conflict.ml[143,5396+46])
                                                                                      Texp_ident "offset/805"
                                                                                ]
                                                                          ]
                                                                    ]
                                                              ]
                                                            expression (src/conflict.ml[143,5396+54]..src/conflict.ml[146,5557+9])
                                                              Texp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (src/conflict.ml[144,5456+12]..src/conflict.ml[144,5456+19])
                                                                    Tpat_var "config'/811"
                                                                  expression (src/conflict.ml[144,5456+22]..src/conflict.ml[144,5456+59])
                                                                    Texp_tuple
                                                                    [
                                                                      expression (src/conflict.ml[144,5456+23]..src/conflict.ml[144,5456+48])
                                                                        Texp_apply
                                                                        expression (src/conflict.ml[144,5456+23]..src/conflict.ml[144,5456+34])
                                                                          Texp_ident "Dune__exe!.Item.import"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/conflict.ml[144,5456+35]..src/conflict.ml[144,5456+48])
                                                                              Texp_tuple
                                                                              [
                                                                                expression (src/conflict.ml[144,5456+36]..src/conflict.ml[144,5456+40])
                                                                                  Texp_ident "prod/807"
                                                                                expression (src/conflict.ml[144,5456+42]..src/conflict.ml[144,5456+47])
                                                                                  Texp_apply
                                                                                  expression (src/conflict.ml[144,5456+45]..src/conflict.ml[144,5456+46])
                                                                                    Texp_ident "Stdlib!.+"
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/conflict.ml[144,5456+42]..src/conflict.ml[144,5456+45])
                                                                                        Texp_ident "pos/809"
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/conflict.ml[144,5456+46]..src/conflict.ml[144,5456+47])
                                                                                        Texp_constant Const_int 1
                                                                                  ]
                                                                              ]
                                                                        ]
                                                                      expression (src/conflict.ml[144,5456+50]..src/conflict.ml[144,5456+58])
                                                                        Texp_apply
                                                                        expression (src/conflict.ml[144,5456+56]..src/conflict.ml[144,5456+57])
                                                                          Texp_ident "Stdlib!.+"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/conflict.ml[144,5456+50]..src/conflict.ml[144,5456+56])
                                                                              Texp_ident "offset/805"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/conflict.ml[144,5456+57]..src/conflict.ml[144,5456+58])
                                                                              Texp_constant Const_int 1
                                                                        ]
                                                                    ]
                                                              ]
                                                              expression (src/conflict.ml[145,5519+8]..src/conflict.ml[145,5519+37])
                                                                Texp_apply
                                                                expression (src/conflict.ml[145,5519+8]..src/conflict.ml[145,5519+15])
                                                                  Texp_ident "enqueue/764"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/conflict.ml[145,5519+16]..src/conflict.ml[145,5519+29])
                                                                      Texp_construct "Some"
                                                                      [
                                                                        expression (src/conflict.ml[145,5519+22]..src/conflict.ml[145,5519+28])
                                                                          Texp_ident "config/806"
                                                                      ]
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/conflict.ml[145,5519+30]..src/conflict.ml[145,5519+37])
                                                                      Texp_ident "config'/811"
                                                                ]
                                                            None
                                                          expression (src/conflict.ml[150,5603+6]..src/conflict.ml[158,5875+14])
                                                            Texp_ifthenelse
                                                            expression (src/conflict.ml[150,5603+9]..src/conflict.ml[150,5603+21])
                                                              Texp_apply
                                                              expression (src/conflict.ml[150,5603+13]..src/conflict.ml[150,5603+14])
                                                                Texp_ident "Stdlib!.<"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/conflict.ml[150,5603+9]..src/conflict.ml[150,5603+12])
                                                                    Texp_ident "pos/809"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/conflict.ml[150,5603+15]..src/conflict.ml[150,5603+21])
                                                                    Texp_ident "length/810"
                                                              ]
                                                            expression (src/conflict.ml[151,5630+8]..src/conflict.ml[158,5875+14])
                                                              Texp_match
                                                              expression (src/conflict.ml[151,5630+14]..src/conflict.ml[151,5630+23])
                                                                Texp_apply
                                                                expression (src/conflict.ml[151,5630+14]..src/conflict.ml[151,5630+23]) ghost
                                                                  Texp_ident "Stdlib!.Array.get"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/conflict.ml[151,5630+14]..src/conflict.ml[151,5630+17])
                                                                      Texp_ident "rhs/808"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/conflict.ml[151,5630+19]..src/conflict.ml[151,5630+22])
                                                                      Texp_ident "pos/809"
                                                                ]
                                                              [
                                                                <case>
                                                                  pattern (src/conflict.ml[152,5659+10]..src/conflict.ml[152,5659+21])
                                                                    Tpat_value
                                                                    pattern (src/conflict.ml[152,5659+10]..src/conflict.ml[152,5659+21])
                                                                      Tpat_construct "Symbol.N"
                                                                      [
                                                                        pattern (src/conflict.ml[152,5659+19]..src/conflict.ml[152,5659+21])
                                                                          Tpat_var "nt/812"
                                                                      ]
                                                                      None
                                                                  expression (src/conflict.ml[153,5684+12]..src/conflict.ml[156,5837+13])
                                                                    Texp_apply
                                                                    expression (src/conflict.ml[153,5684+12]..src/conflict.ml[153,5684+29])
                                                                      Texp_ident "Dune__exe!.Grammar.Production.iternt"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/conflict.ml[153,5684+30]..src/conflict.ml[153,5684+32])
                                                                          Texp_ident "nt/812"
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/conflict.ml[153,5684+33]..src/conflict.ml[156,5837+13])
                                                                          Texp_function
                                                                          Nolabel
                                                                          [
                                                                            <case>
                                                                              pattern (src/conflict.ml[153,5684+38]..src/conflict.ml[153,5684+42])
                                                                                Tpat_var "prod/867"
                                                                              expression (src/conflict.ml[154,5730+14]..src/conflict.ml[155,5793+43])
                                                                                Texp_let Nonrec
                                                                                [
                                                                                  <def>
                                                                                    pattern (src/conflict.ml[154,5730+18]..src/conflict.ml[154,5730+25])
                                                                                      Tpat_var "config'/868"
                                                                                    expression (src/conflict.ml[154,5730+28]..src/conflict.ml[154,5730+59])
                                                                                      Texp_tuple
                                                                                      [
                                                                                        expression (src/conflict.ml[154,5730+29]..src/conflict.ml[154,5730+50])
                                                                                          Texp_apply
                                                                                          expression (src/conflict.ml[154,5730+29]..src/conflict.ml[154,5730+40])
                                                                                            Texp_ident "Dune__exe!.Item.import"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/conflict.ml[154,5730+41]..src/conflict.ml[154,5730+50])
                                                                                                Texp_tuple
                                                                                                [
                                                                                                  expression (src/conflict.ml[154,5730+42]..src/conflict.ml[154,5730+46])
                                                                                                    Texp_ident "prod/867"
                                                                                                  expression (src/conflict.ml[154,5730+48]..src/conflict.ml[154,5730+49])
                                                                                                    Texp_constant Const_int 0
                                                                                                ]
                                                                                          ]
                                                                                        expression (src/conflict.ml[154,5730+52]..src/conflict.ml[154,5730+58])
                                                                                          Texp_ident "offset/805"
                                                                                      ]
                                                                                ]
                                                                                expression (src/conflict.ml[155,5793+14]..src/conflict.ml[155,5793+43])
                                                                                  Texp_apply
                                                                                  expression (src/conflict.ml[155,5793+14]..src/conflict.ml[155,5793+21])
                                                                                    Texp_ident "enqueue/764"
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/conflict.ml[155,5793+22]..src/conflict.ml[155,5793+35])
                                                                                        Texp_construct "Some"
                                                                                        [
                                                                                          expression (src/conflict.ml[155,5793+28]..src/conflict.ml[155,5793+34])
                                                                                            Texp_ident "config/806"
                                                                                        ]
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/conflict.ml[155,5793+36]..src/conflict.ml[155,5793+43])
                                                                                        Texp_ident "config'/868"
                                                                                  ]
                                                                          ]
                                                                    ]
                                                                <case>
                                                                  pattern (src/conflict.ml[157,5851+10]..src/conflict.ml[157,5851+20])
                                                                    Tpat_value
                                                                    pattern (src/conflict.ml[157,5851+10]..src/conflict.ml[157,5851+20])
                                                                      Tpat_construct "Symbol.T"
                                                                      [
                                                                        pattern (src/conflict.ml[157,5851+19]..src/conflict.ml[157,5851+20])
                                                                          Tpat_any
                                                                      ]
                                                                      None
                                                                  expression (src/conflict.ml[158,5875+12]..src/conflict.ml[158,5875+14])
                                                                    Texp_construct "()"
                                                                    []
                                                              ]
                                                            None
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/conflict.ml[160,5891+6]..src/conflict.ml[160,5891+11])
                                                Texp_ident "queue/742"
                                          ]
                                        expression (src/conflict.ml[161,5904+4]..src/conflict.ml[161,5904+16])
                                          Texp_assert                                          expression (src/conflict.ml[161,5904+11]..src/conflict.ml[161,5904+16])
                                            Texp_construct "false"
                                            []
                                      [
                                        <case>
                                          pattern (src/conflict.ml[162,5921+7]..src/conflict.ml[162,5921+11])
                                            Tpat_construct "Done"
                                            []
                                            None
                                          expression (src/conflict.ml[167,6080+4]..src/conflict.ml[171,6279+14])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/conflict.ml[167,6080+8]..src/conflict.ml[167,6080+15])
                                                  Tpat_var "configs/899"
                                                expression (src/conflict.ml[167,6080+18]..src/conflict.ml[167,6080+50])
                                                  Texp_apply
                                                  expression (src/conflict.ml[167,6080+18]..src/conflict.ml[167,6080+34])
                                                    Texp_ident "Dune__exe!.Misc.materialize"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/conflict.ml[167,6080+35]..src/conflict.ml[167,6080+40])
                                                        Texp_ident "table/679"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/conflict.ml[167,6080+41]..src/conflict.ml[167,6080+50])
                                                        Texp_tuple
                                                        [
                                                          expression (src/conflict.ml[167,6080+42]..src/conflict.ml[167,6080+46])
                                                            Texp_ident "stop/638"
                                                          expression (src/conflict.ml[167,6080+48]..src/conflict.ml[167,6080+49])
                                                            Texp_ident "n/639"
                                                        ]
                                                  ]
                                            ]
                                            expression (src/conflict.ml[168,6134+4]..src/conflict.ml[171,6279+14])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/conflict.ml[168,6134+8]..src/conflict.ml[168,6134+25])
                                                    Tpat_tuple
                                                    [
                                                      pattern (src/conflict.ml[168,6134+8]..src/conflict.ml[168,6134+9])
                                                        Tpat_any
                                                      pattern (src/conflict.ml[168,6134+11]..src/conflict.ml[168,6134+12])
                                                        Tpat_any
                                                      pattern (src/conflict.ml[168,6134+14]..src/conflict.ml[168,6134+17])
                                                        Tpat_var "rhs/900"
                                                      pattern (src/conflict.ml[168,6134+19]..src/conflict.ml[168,6134+22])
                                                        Tpat_var "pos/901"
                                                      pattern (src/conflict.ml[168,6134+24]..src/conflict.ml[168,6134+25])
                                                        Tpat_any
                                                    ]
                                                  expression (src/conflict.ml[168,6134+28]..src/conflict.ml[168,6134+41])
                                                    Texp_apply
                                                    expression (src/conflict.ml[168,6134+28]..src/conflict.ml[168,6134+36])
                                                      Texp_ident "Dune__exe!.Item.def"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/conflict.ml[168,6134+37]..src/conflict.ml[168,6134+41])
                                                          Texp_ident "stop/638"
                                                    ]
                                              ]
                                              expression (src/conflict.ml[169,6179+4]..src/conflict.ml[171,6279+14])
                                                Texp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (src/conflict.ml[169,6179+8]..src/conflict.ml[169,6179+18])
                                                      Tpat_var "derivation/902"
                                                    expression (src/conflict.ml[169,6179+21]..src/conflict.ml[169,6179+44])
                                                      Texp_apply
                                                      expression (src/conflict.ml[169,6179+21]..src/conflict.ml[169,6179+36])
                                                        Texp_ident "Dune__exe!.Derivation.tail"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/conflict.ml[169,6179+37]..src/conflict.ml[169,6179+40])
                                                            Texp_ident "pos/901"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/conflict.ml[169,6179+41]..src/conflict.ml[169,6179+44])
                                                            Texp_ident "rhs/900"
                                                      ]
                                                ]
                                                expression (src/conflict.ml[170,6227+4]..src/conflict.ml[171,6279+14])
                                                  Texp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (src/conflict.ml[170,6227+8]..src/conflict.ml[170,6227+18])
                                                        Tpat_var "derivation/903"
                                                      expression (src/conflict.ml[170,6227+21]..src/conflict.ml[170,6227+48])
                                                        Texp_apply
                                                        expression (src/conflict.ml[170,6227+21]..src/conflict.ml[170,6227+27])
                                                          Texp_ident "follow/518"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/conflict.ml[170,6227+28]..src/conflict.ml[170,6227+38])
                                                              Texp_ident "derivation/902"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/conflict.ml[170,6227+39]..src/conflict.ml[170,6227+40])
                                                              Texp_ident "n/639"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/conflict.ml[170,6227+41]..src/conflict.ml[170,6227+48])
                                                              Texp_ident "configs/899"
                                                        ]
                                                  ]
                                                  expression (src/conflict.ml[171,6279+4]..src/conflict.ml[171,6279+14])
                                                    Texp_ident "derivation/903"
                                      ]
                      ]
                ]
          ]
    ]
  structure_item (src/conflict.ml[196,7509+0]..src/conflict.ml[197,7531+23])
    Tstr_type Rec
    [
      type_declaration configuration1/904 (src/conflict.ml[196,7509+0]..src/conflict.ml[197,7531+23])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/conflict.ml[197,7531+4]..src/conflict.ml[197,7531+23])
              Ttyp_tuple
              [
                core_type (src/conflict.ml[197,7531+4]..src/conflict.ml[197,7531+10])
                  Ttyp_constr "Dune__exe!.Item.t"
                  []
                core_type (src/conflict.ml[197,7531+13]..src/conflict.ml[197,7531+17])
                  Ttyp_constr "bool/5!"
                  []
                core_type (src/conflict.ml[197,7531+20]..src/conflict.ml[197,7531+23])
                  Ttyp_constr "int/1!"
                  []
              ]
    ]
  structure_item (src/conflict.ml[204,7859+0]..src/conflict.ml[205,7900+16])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/conflict.ml[204,7859+4]..src/conflict.ml[204,7859+20])
          Tpat_var "config1toconfig0/905"
        expression (src/conflict.ml[204,7859+21]..src/conflict.ml[205,7900+16]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/conflict.ml[204,7859+21]..src/conflict.ml[204,7859+38])
                Tpat_tuple
                [
                  pattern (src/conflict.ml[204,7859+22]..src/conflict.ml[204,7859+26])
                    Tpat_var "item/907"
                  pattern (src/conflict.ml[204,7859+28]..src/conflict.ml[204,7859+29])
                    Tpat_any
                  pattern (src/conflict.ml[204,7859+31]..src/conflict.ml[204,7859+37])
                    Tpat_var "offset/908"
                ]
              expression (src/conflict.ml[205,7900+2]..src/conflict.ml[205,7900+16])
                Texp_tuple
                [
                  expression (src/conflict.ml[205,7900+3]..src/conflict.ml[205,7900+7])
                    Texp_ident "item/907"
                  expression (src/conflict.ml[205,7900+9]..src/conflict.ml[205,7900+15])
                    Texp_ident "offset/908"
                ]
          ]
    ]
  structure_item (src/conflict.ml[207,7918+0]..src/conflict.ml[269,9972+45])
    Tstr_value Rec
    [
      <def>
        pattern (src/conflict.ml[207,7918+8]..src/conflict.ml[207,7918+15])
          Tpat_var "follow1/910"
        expression (src/conflict.ml[207,7918+16]..src/conflict.ml[269,9972+45]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/conflict.ml[207,7918+16]..src/conflict.ml[207,7918+19])
                Tpat_var "tok/911"
              expression (src/conflict.ml[207,7918+20]..src/conflict.ml[269,9972+45]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/conflict.ml[207,7918+20]..src/conflict.ml[207,7918+30])
                      Tpat_var "derivation/912"
                    expression (src/conflict.ml[207,7918+31]..src/conflict.ml[269,9972+45]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/conflict.ml[207,7918+31]..src/conflict.ml[207,7918+38])
                            Tpat_var "offset'/913"
                          expression (src/conflict.ml[207,7918+41]..src/conflict.ml[269,9972+45])
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/conflict.ml[208,7968+4]..src/conflict.ml[208,7968+6])
                                  Tpat_construct "[]"
                                  []
                                  None
                                expression (src/conflict.ml[209,7978+6]..src/conflict.ml[214,8278+16])
                                  Texp_sequence
                                  expression (src/conflict.ml[209,7978+6]..src/conflict.ml[209,7978+48])
                                    Texp_assert                                    expression (src/conflict.ml[209,7978+13]..src/conflict.ml[209,7978+48])
                                      Texp_apply
                                      expression (src/conflict.ml[209,7978+14]..src/conflict.ml[209,7978+28])
                                        Texp_ident "Dune__exe!.Grammar.Terminal.equal"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/conflict.ml[209,7978+29]..src/conflict.ml[209,7978+32])
                                            Texp_ident "tok/911"
                                        <arg>
                                          Nolabel
                                          expression (src/conflict.ml[209,7978+33]..src/conflict.ml[209,7978+47])
                                            Texp_ident "Dune__exe!.Grammar.Terminal.sharp"
                                      ]
                                  expression (src/conflict.ml[214,8278+6]..src/conflict.ml[214,8278+16])
                                    Texp_ident "derivation/912"
                              <case>
                                pattern (src/conflict.ml[215,8295+4]..src/conflict.ml[215,8295+32])
                                  Tpat_construct "::"
                                  [
                                    pattern (src/conflict.ml[215,8295+4]..src/conflict.ml[215,8295+21])
                                      Tpat_tuple
                                      [
                                        pattern (src/conflict.ml[215,8295+5]..src/conflict.ml[215,8295+9])
                                          Tpat_var "item/914"
                                        pattern (src/conflict.ml[215,8295+11]..src/conflict.ml[215,8295+12])
                                          Tpat_any
                                        pattern (src/conflict.ml[215,8295+14]..src/conflict.ml[215,8295+20])
                                          Tpat_var "offset/915"
                                      ]
                                    pattern (src/conflict.ml[215,8295+25]..src/conflict.ml[215,8295+32])
                                      Tpat_var "configs/916"
                                  ]
                                  None
                                expression (src/conflict.ml[216,8331+6]..src/conflict.ml[269,9972+45])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/conflict.ml[216,8331+10]..src/conflict.ml[216,8331+35])
                                        Tpat_tuple
                                        [
                                          pattern (src/conflict.ml[216,8331+10]..src/conflict.ml[216,8331+14])
                                            Tpat_var "prod/946"
                                          pattern (src/conflict.ml[216,8331+16]..src/conflict.ml[216,8331+17])
                                            Tpat_any
                                          pattern (src/conflict.ml[216,8331+19]..src/conflict.ml[216,8331+22])
                                            Tpat_var "rhs/947"
                                          pattern (src/conflict.ml[216,8331+24]..src/conflict.ml[216,8331+27])
                                            Tpat_var "pos/948"
                                          pattern (src/conflict.ml[216,8331+29]..src/conflict.ml[216,8331+35])
                                            Tpat_var "length/949"
                                        ]
                                      expression (src/conflict.ml[216,8331+38]..src/conflict.ml[216,8331+51])
                                        Texp_apply
                                        expression (src/conflict.ml[216,8331+38]..src/conflict.ml[216,8331+46])
                                          Texp_ident "Dune__exe!.Item.def"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/conflict.ml[216,8331+47]..src/conflict.ml[216,8331+51])
                                              Texp_ident "item/914"
                                        ]
                                  ]
                                  expression (src/conflict.ml[217,8386+6]..src/conflict.ml[269,9972+45])
                                    Texp_ifthenelse
                                    expression (src/conflict.ml[217,8386+9]..src/conflict.ml[217,8386+25])
                                      Texp_apply
                                      expression (src/conflict.ml[217,8386+16]..src/conflict.ml[217,8386+17])
                                        Texp_ident "Stdlib!.="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/conflict.ml[217,8386+9]..src/conflict.ml[217,8386+15])
                                            Texp_ident "offset/915"
                                        <arg>
                                          Nolabel
                                          expression (src/conflict.ml[217,8386+18]..src/conflict.ml[217,8386+25])
                                            Texp_ident "offset'/913"
                                      ]
                                    expression (src/conflict.ml[223,8587+8]..src/conflict.ml[259,9785+11])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/conflict.ml[223,8587+12]..src/conflict.ml[223,8587+27])
                                            Tpat_tuple
                                            [
                                              pattern (src/conflict.ml[223,8587+12]..src/conflict.ml[223,8587+20])
                                                Tpat_var "nullable/950"
                                              pattern (src/conflict.ml[223,8587+22]..src/conflict.ml[223,8587+27])
                                                Tpat_var "first/951"
                                            ]
                                          expression (src/conflict.ml[223,8587+30]..src/conflict.ml[223,8587+73])
                                            Texp_apply
                                            expression (src/conflict.ml[223,8587+30]..src/conflict.ml[223,8587+58])
                                              Texp_ident "Dune__exe!.Grammar.Analysis.nullable_first_prod"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/conflict.ml[223,8587+59]..src/conflict.ml[223,8587+63])
                                                  Texp_ident "prod/946"
                                              <arg>
                                                Nolabel
                                                expression (src/conflict.ml[223,8587+64]..src/conflict.ml[223,8587+73])
                                                  Texp_apply
                                                  expression (src/conflict.ml[223,8587+69]..src/conflict.ml[223,8587+70])
                                                    Texp_ident "Stdlib!.+"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/conflict.ml[223,8587+65]..src/conflict.ml[223,8587+68])
                                                        Texp_ident "pos/948"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/conflict.ml[223,8587+71]..src/conflict.ml[223,8587+72])
                                                        Texp_constant Const_int 1
                                                  ]
                                            ]
                                      ]
                                      expression (src/conflict.ml[225,8665+8]..src/conflict.ml[259,9785+11])
                                        Texp_ifthenelse
                                        expression (src/conflict.ml[225,8665+11]..src/conflict.ml[225,8665+36])
                                          Texp_apply
                                          expression (src/conflict.ml[225,8665+11]..src/conflict.ml[225,8665+26])
                                            Texp_ident "Dune__exe!.Grammar.TerminalSet.mem"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/conflict.ml[225,8665+27]..src/conflict.ml[225,8665+30])
                                                Texp_ident "tok/911"
                                            <arg>
                                              Nolabel
                                              expression (src/conflict.ml[225,8665+31]..src/conflict.ml[225,8665+36])
                                                Texp_ident "first/951"
                                          ]
                                        expression (src/conflict.ml[230,8824+10]..src/conflict.ml[241,9226+70])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/conflict.ml[230,8824+14]..src/conflict.ml[230,8824+15])
                                                Tpat_var "e/1043"
                                              expression (src/conflict.ml[230,8824+18]..src/conflict.ml[230,8824+62])
                                                Texp_apply
                                                expression (src/conflict.ml[230,8824+18]..src/conflict.ml[230,8824+44])
                                                  Texp_ident "Dune__exe!.Grammar.Analysis.explain_first_rhs"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/conflict.ml[230,8824+45]..src/conflict.ml[230,8824+48])
                                                      Texp_ident "tok/911"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/conflict.ml[230,8824+49]..src/conflict.ml[230,8824+52])
                                                      Texp_ident "rhs/947"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/conflict.ml[230,8824+53]..src/conflict.ml[230,8824+62])
                                                      Texp_apply
                                                      expression (src/conflict.ml[230,8824+58]..src/conflict.ml[230,8824+59])
                                                        Texp_ident "Stdlib!.+"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/conflict.ml[230,8824+54]..src/conflict.ml[230,8824+57])
                                                            Texp_ident "pos/948"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/conflict.ml[230,8824+60]..src/conflict.ml[230,8824+61])
                                                            Texp_constant Const_int 1
                                                      ]
                                                ]
                                          ]
                                          expression (src/conflict.ml[231,8890+10]..src/conflict.ml[241,9226+70])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/conflict.ml[231,8890+14]..src/conflict.ml[231,8890+21])
                                                  Tpat_var "comment/1044"
                                                expression (src/conflict.ml[232,8914+12]..src/conflict.ml[232,8914+80])
                                                  Texp_apply
                                                  expression (src/conflict.ml[232,8914+38]..src/conflict.ml[232,8914+39])
                                                    Texp_ident "Stdlib!.^"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/conflict.ml[232,8914+12]..src/conflict.ml[232,8914+37])
                                                        Texp_constant Const_string("lookahead token appears",(src/conflict.ml[232,8914+13]..src/conflict.ml[232,8914+36]),None)
                                                    <arg>
                                                      Nolabel
                                                      expression (src/conflict.ml[232,8914+40]..src/conflict.ml[232,8914+80])
                                                        Texp_ifthenelse
                                                        expression (src/conflict.ml[232,8914+44]..src/conflict.ml[232,8914+50])
                                                          Texp_apply
                                                          expression (src/conflict.ml[232,8914+46]..src/conflict.ml[232,8914+47])
                                                            Texp_ident "Stdlib!.="
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/conflict.ml[232,8914+44]..src/conflict.ml[232,8914+45])
                                                                Texp_ident "e/1043"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/conflict.ml[232,8914+48]..src/conflict.ml[232,8914+50])
                                                                Texp_constant Const_string("",(src/conflict.ml[232,8914+49]..src/conflict.ml[232,8914+49]),None)
                                                          ]
                                                        expression (src/conflict.ml[232,8914+56]..src/conflict.ml[232,8914+58])
                                                          Texp_constant Const_string("",(src/conflict.ml[232,8914+57]..src/conflict.ml[232,8914+57]),None)
                                                        Some
                                                          expression (src/conflict.ml[232,8914+64]..src/conflict.ml[232,8914+79])
                                                            Texp_apply
                                                            expression (src/conflict.ml[232,8914+76]..src/conflict.ml[232,8914+77])
                                                              Texp_ident "Stdlib!.^"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/conflict.ml[232,8914+64]..src/conflict.ml[232,8914+75])
                                                                  Texp_constant Const_string(" because ",(src/conflict.ml[232,8914+65]..src/conflict.ml[232,8914+74]),None)
                                                              <arg>
                                                                Nolabel
                                                                expression (src/conflict.ml[232,8914+78]..src/conflict.ml[232,8914+79])
                                                                  Texp_ident "e/1043"
                                                            ]
                                                  ]
                                            ]
                                            expression (src/conflict.ml[234,9008+10]..src/conflict.ml[241,9226+70])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/conflict.ml[234,9008+14]..src/conflict.ml[234,9008+24])
                                                    Tpat_var "derivation/1045"
                                                  expression (src/conflict.ml[235,9035+12]..src/conflict.ml[235,9035+62])
                                                    Texp_apply
                                                    expression (src/conflict.ml[235,9035+12]..src/conflict.ml[235,9035+28])
                                                      Texp_ident "Dune__exe!.Derivation.build"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/conflict.ml[235,9035+29]..src/conflict.ml[235,9035+32])
                                                          Texp_ident "pos/948"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/conflict.ml[235,9035+33]..src/conflict.ml[235,9035+36])
                                                          Texp_ident "rhs/947"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/conflict.ml[235,9035+37]..src/conflict.ml[235,9035+47])
                                                          Texp_ident "derivation/912"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/conflict.ml[235,9035+48]..src/conflict.ml[235,9035+62])
                                                          Texp_construct "Some"
                                                          [
                                                            expression (src/conflict.ml[235,9035+54]..src/conflict.ml[235,9035+61])
                                                              Texp_ident "comment/1044"
                                                          ]
                                                    ]
                                              ]
                                              expression (src/conflict.ml[241,9226+10]..src/conflict.ml[241,9226+70])
                                                Texp_apply
                                                expression (src/conflict.ml[241,9226+10]..src/conflict.ml[241,9226+16])
                                                  Texp_ident "follow/518"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/conflict.ml[241,9226+17]..src/conflict.ml[241,9226+27])
                                                      Texp_ident "derivation/1045"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/conflict.ml[241,9226+28]..src/conflict.ml[241,9226+34])
                                                      Texp_ident "offset/915"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/conflict.ml[241,9226+35]..src/conflict.ml[241,9226+70])
                                                      Texp_apply
                                                      expression (src/conflict.ml[241,9226+36]..src/conflict.ml[241,9226+44])
                                                        Texp_ident "Stdlib!.List.map"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/conflict.ml[241,9226+45]..src/conflict.ml[241,9226+61])
                                                            Texp_ident "config1toconfig0/905"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/conflict.ml[241,9226+62]..src/conflict.ml[241,9226+69])
                                                            Texp_ident "configs/916"
                                                      ]
                                                ]
                                        Some
                                          expression (src/conflict.ml[243,9298+13]..src/conflict.ml[259,9785+11])
                                            Texp_sequence
                                            expression (src/conflict.ml[247,9404+10]..src/conflict.ml[247,9404+25])
                                              Texp_assert                                              expression (src/conflict.ml[247,9404+17]..src/conflict.ml[247,9404+25])
                                                Texp_ident "nullable/950"
                                            expression (src/conflict.ml[249,9432+10]..src/conflict.ml[257,9736+47])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/conflict.ml[249,9432+14]..src/conflict.ml[249,9432+21])
                                                    Tpat_var "comment/1112"
                                                  expression (src/conflict.ml[250,9456+12]..src/conflict.ml[251,9501+117])
                                                    Texp_apply
                                                    expression (src/conflict.ml[250,9456+43]..src/conflict.ml[250,9456+44])
                                                      Texp_ident "Stdlib!.^"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/conflict.ml[250,9456+12]..src/conflict.ml[250,9456+42])
                                                          Texp_constant Const_string("lookahead token is inherited",(src/conflict.ml[250,9456+13]..src/conflict.ml[250,9456+41]),None)
                                                      <arg>
                                                        Nolabel
                                                        expression (src/conflict.ml[251,9501+12]..src/conflict.ml[251,9501+117])
                                                          Texp_ifthenelse
                                                          expression (src/conflict.ml[251,9501+16]..src/conflict.ml[251,9501+32])
                                                            Texp_apply
                                                            expression (src/conflict.ml[251,9501+24]..src/conflict.ml[251,9501+25])
                                                              Texp_ident "Stdlib!.<"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/conflict.ml[251,9501+16]..src/conflict.ml[251,9501+23])
                                                                  Texp_apply
                                                                  expression (src/conflict.ml[251,9501+20]..src/conflict.ml[251,9501+21])
                                                                    Texp_ident "Stdlib!.+"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/conflict.ml[251,9501+16]..src/conflict.ml[251,9501+19])
                                                                        Texp_ident "pos/948"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/conflict.ml[251,9501+22]..src/conflict.ml[251,9501+23])
                                                                        Texp_constant Const_int 1
                                                                  ]
                                                              <arg>
                                                                Nolabel
                                                                expression (src/conflict.ml[251,9501+26]..src/conflict.ml[251,9501+32])
                                                                  Texp_ident "length/949"
                                                            ]
                                                          expression (src/conflict.ml[251,9501+38]..src/conflict.ml[251,9501+108])
                                                            Texp_apply
                                                            expression (src/conflict.ml[251,9501+38]..src/conflict.ml[251,9501+52])
                                                              Texp_ident "Stdlib!.Printf.sprintf"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/conflict.ml[251,9501+53]..src/conflict.ml[251,9501+77])
                                                                  Texp_construct "CamlinternalFormatBasics.Format"
                                                                  [
                                                                    expression (src/conflict.ml[251,9501+53]..src/conflict.ml[251,9501+77]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                      [
                                                                        expression (src/conflict.ml[251,9501+53]..src/conflict.ml[251,9501+77]) ghost
                                                                          Texp_constant Const_string(" because ",(src/conflict.ml[251,9501+53]..src/conflict.ml[251,9501+77]) ghost,None)
                                                                        expression (src/conflict.ml[251,9501+53]..src/conflict.ml[251,9501+77]) ghost
                                                                          Texp_construct "CamlinternalFormatBasics.String"
                                                                          [
                                                                            expression (src/conflict.ml[251,9501+53]..src/conflict.ml[251,9501+77]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                              []
                                                                            expression (src/conflict.ml[251,9501+53]..src/conflict.ml[251,9501+77]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                              [
                                                                                expression (src/conflict.ml[251,9501+53]..src/conflict.ml[251,9501+77]) ghost
                                                                                  Texp_constant Const_string(" can vanish",(src/conflict.ml[251,9501+53]..src/conflict.ml[251,9501+77]) ghost,None)
                                                                                expression (src/conflict.ml[251,9501+53]..src/conflict.ml[251,9501+77]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                  []
                                                                              ]
                                                                          ]
                                                                      ]
                                                                    expression (src/conflict.ml[251,9501+53]..src/conflict.ml[251,9501+77]) ghost
                                                                      Texp_constant Const_string(" because %s can vanish",(src/conflict.ml[251,9501+53]..src/conflict.ml[251,9501+77]) ghost,None)
                                                                  ]
                                                              <arg>
                                                                Nolabel
                                                                expression (src/conflict.ml[251,9501+78]..src/conflict.ml[251,9501+108])
                                                                  Texp_apply
                                                                  expression (src/conflict.ml[251,9501+79]..src/conflict.ml[251,9501+93])
                                                                    Texp_ident "Dune__exe!.Grammar.Symbol.printao"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/conflict.ml[251,9501+94]..src/conflict.ml[251,9501+103])
                                                                        Texp_apply
                                                                        expression (src/conflict.ml[251,9501+99]..src/conflict.ml[251,9501+100])
                                                                          Texp_ident "Stdlib!.+"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/conflict.ml[251,9501+95]..src/conflict.ml[251,9501+98])
                                                                              Texp_ident "pos/948"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/conflict.ml[251,9501+101]..src/conflict.ml[251,9501+102])
                                                                              Texp_constant Const_int 1
                                                                        ]
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/conflict.ml[251,9501+104]..src/conflict.ml[251,9501+107])
                                                                        Texp_ident "rhs/947"
                                                                  ]
                                                            ]
                                                          Some
                                                            expression (src/conflict.ml[251,9501+114]..src/conflict.ml[251,9501+116])
                                                              Texp_constant Const_string("",(src/conflict.ml[251,9501+115]..src/conflict.ml[251,9501+115]),None)
                                                    ]
                                              ]
                                              expression (src/conflict.ml[253,9632+10]..src/conflict.ml[257,9736+47])
                                                Texp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (src/conflict.ml[253,9632+14]..src/conflict.ml[253,9632+24])
                                                      Tpat_var "derivation/1149"
                                                    expression (src/conflict.ml[254,9659+12]..src/conflict.ml[254,9659+62])
                                                      Texp_apply
                                                      expression (src/conflict.ml[254,9659+12]..src/conflict.ml[254,9659+28])
                                                        Texp_ident "Dune__exe!.Derivation.build"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/conflict.ml[254,9659+29]..src/conflict.ml[254,9659+32])
                                                            Texp_ident "pos/948"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/conflict.ml[254,9659+33]..src/conflict.ml[254,9659+36])
                                                            Texp_ident "rhs/947"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/conflict.ml[254,9659+37]..src/conflict.ml[254,9659+47])
                                                            Texp_ident "derivation/912"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/conflict.ml[254,9659+48]..src/conflict.ml[254,9659+62])
                                                            Texp_construct "Some"
                                                            [
                                                              expression (src/conflict.ml[254,9659+54]..src/conflict.ml[254,9659+61])
                                                                Texp_ident "comment/1112"
                                                            ]
                                                      ]
                                                ]
                                                expression (src/conflict.ml[257,9736+10]..src/conflict.ml[257,9736+47])
                                                  Texp_apply
                                                  expression (src/conflict.ml[257,9736+10]..src/conflict.ml[257,9736+17])
                                                    Texp_ident "follow1/910"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/conflict.ml[257,9736+18]..src/conflict.ml[257,9736+21])
                                                        Texp_ident "tok/911"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/conflict.ml[257,9736+22]..src/conflict.ml[257,9736+32])
                                                        Texp_ident "derivation/1149"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/conflict.ml[257,9736+33]..src/conflict.ml[257,9736+39])
                                                        Texp_ident "offset/915"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/conflict.ml[257,9736+40]..src/conflict.ml[257,9736+47])
                                                        Texp_ident "configs/916"
                                                  ]
                                    Some
                                      expression (src/conflict.ml[265,9885+8]..src/conflict.ml[269,9972+45])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/conflict.ml[265,9885+12]..src/conflict.ml[265,9885+22])
                                              Tpat_var "derivation/1150"
                                            expression (src/conflict.ml[266,9910+10]..src/conflict.ml[266,9910+49])
                                              Texp_apply
                                              expression (src/conflict.ml[266,9910+10]..src/conflict.ml[266,9910+28])
                                                Texp_ident "Dune__exe!.Derivation.prepend"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/conflict.ml[266,9910+29]..src/conflict.ml[266,9910+38])
                                                    Texp_apply
                                                    expression (src/conflict.ml[266,9910+29]..src/conflict.ml[266,9910+38]) ghost
                                                      Texp_ident "Stdlib!.Array.get"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/conflict.ml[266,9910+29]..src/conflict.ml[266,9910+32])
                                                          Texp_ident "rhs/947"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/conflict.ml[266,9910+34]..src/conflict.ml[266,9910+37])
                                                          Texp_ident "pos/948"
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (src/conflict.ml[266,9910+39]..src/conflict.ml[266,9910+49])
                                                    Texp_ident "derivation/912"
                                              ]
                                        ]
                                        expression (src/conflict.ml[269,9972+8]..src/conflict.ml[269,9972+45])
                                          Texp_apply
                                          expression (src/conflict.ml[269,9972+8]..src/conflict.ml[269,9972+15])
                                            Texp_ident "follow1/910"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/conflict.ml[269,9972+16]..src/conflict.ml[269,9972+19])
                                                Texp_ident "tok/911"
                                            <arg>
                                              Nolabel
                                              expression (src/conflict.ml[269,9972+20]..src/conflict.ml[269,9972+30])
                                                Texp_ident "derivation/1150"
                                            <arg>
                                              Nolabel
                                              expression (src/conflict.ml[269,9972+31]..src/conflict.ml[269,9972+37])
                                                Texp_ident "offset/915"
                                            <arg>
                                              Nolabel
                                              expression (src/conflict.ml[269,9972+38]..src/conflict.ml[269,9972+45])
                                                Texp_ident "configs/916"
                                          ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/conflict.ml[273,10087+0]..src/conflict.ml[355,12462+14])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/conflict.ml[273,10087+4]..src/conflict.ml[273,10087+23])
          Tpat_var "explain_reduce_item/1152"
        expression (src/conflict.ml[274,10111+4]..src/conflict.ml[355,12462+14]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/conflict.ml[274,10111+5]..src/conflict.ml[274,10111+8])
                extra
                  Tpat_extra_constraint
                  core_type (src/conflict.ml[274,10111+11]..src/conflict.ml[274,10111+21])
                    Ttyp_constr "Dune__exe!.Grammar.Terminal.t"
                    []
                Tpat_alias "tok/1154"
                pattern (src/conflict.ml[274,10111+5]..src/conflict.ml[274,10111+8])
                  Tpat_any
              expression (src/conflict.ml[275,10134+4]..src/conflict.ml[355,12462+14]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/conflict.ml[275,10134+5]..src/conflict.ml[275,10134+10])
                      extra
                        Tpat_extra_constraint
                        core_type (src/conflict.ml[275,10134+13]..src/conflict.ml[275,10134+19])
                          Ttyp_constr "Dune__exe!.Item.t"
                          []
                      Tpat_alias "start/1155"
                      pattern (src/conflict.ml[275,10134+5]..src/conflict.ml[275,10134+10])
                        Tpat_any
                    expression (src/conflict.ml[276,10155+4]..src/conflict.ml[355,12462+14]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/conflict.ml[276,10155+5]..src/conflict.ml[276,10155+10])
                            extra
                              Tpat_extra_constraint
                              core_type (src/conflict.ml[276,10155+13]..src/conflict.ml[276,10155+27])
                                Ttyp_constr "array/8!"
                                [
                                  core_type (src/conflict.ml[276,10155+13]..src/conflict.ml[276,10155+21])
                                    Ttyp_constr "Dune__exe!.Grammar.Symbol.t"
                                    []
                                ]
                            Tpat_alias "input/1156"
                            pattern (src/conflict.ml[276,10155+5]..src/conflict.ml[276,10155+10])
                              Tpat_any
                          expression (src/conflict.ml[277,10184+4]..src/conflict.ml[355,12462+14]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/conflict.ml[277,10184+5]..src/conflict.ml[277,10184+9])
                                  extra
                                    Tpat_extra_constraint
                                    core_type (src/conflict.ml[277,10184+12]..src/conflict.ml[277,10184+18])
                                      Ttyp_constr "Dune__exe!.Item.t"
                                      []
                                  Tpat_alias "stop/1157"
                                  pattern (src/conflict.ml[277,10184+5]..src/conflict.ml[277,10184+9])
                                    Tpat_any
                                expression (src/conflict.ml[280,10226+2]..src/conflict.ml[355,12462+14])
                                  extra
                                    Texp_constraint
                                    core_type (src/conflict.ml[278,10204+6]..src/conflict.ml[278,10204+18])
                                      Ttyp_constr "Dune__exe!.Derivation.t"
                                      []
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/conflict.ml[280,10226+6]..src/conflict.ml[280,10226+7])
                                        Tpat_var "n/1158"
                                      expression (src/conflict.ml[281,10236+4]..src/conflict.ml[281,10236+22])
                                        Texp_apply
                                        expression (src/conflict.ml[281,10236+4]..src/conflict.ml[281,10236+16])
                                          Texp_ident "Stdlib!.Array.length"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/conflict.ml[281,10236+17]..src/conflict.ml[281,10236+22])
                                              Texp_ident "input/1156"
                                        ]
                                  ]
                                  expression (src/conflict.ml[284,10265+2]..src/conflict.ml[355,12462+14])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/conflict.ml[284,10265+6]..src/conflict.ml[284,10265+11])
                                          extra
                                            Tpat_extra_constraint
                                            core_type (src/conflict.ml[284,10265+14]..src/conflict.ml[284,10265+63])
                                              Ttyp_constr "Stdlib!.Hashtbl.t"
                                              [
                                                core_type (src/conflict.ml[284,10265+15]..src/conflict.ml[284,10265+29])
                                                  Ttyp_constr "configuration1/904"
                                                  []
                                                core_type (src/conflict.ml[284,10265+31]..src/conflict.ml[284,10265+52])
                                                  Ttyp_constr "option/10!"
                                                  [
                                                    core_type (src/conflict.ml[284,10265+31]..src/conflict.ml[284,10265+45])
                                                      Ttyp_constr "configuration1/904"
                                                      []
                                                  ]
                                              ]
                                          Tpat_alias "table/1159"
                                          pattern (src/conflict.ml[284,10265+6]..src/conflict.ml[284,10265+11])
                                            Tpat_any
                                        expression (src/conflict.ml[285,10331+4]..src/conflict.ml[285,10331+23])
                                          extra
                                            Texp_constraint
                                            core_type (src/conflict.ml[284,10265+14]..src/conflict.ml[284,10265+63])
                                              Ttyp_constr "Stdlib!.Hashtbl.t"
                                              [
                                                core_type (src/conflict.ml[284,10265+15]..src/conflict.ml[284,10265+29])
                                                  Ttyp_constr "configuration1/904"
                                                  []
                                                core_type (src/conflict.ml[284,10265+31]..src/conflict.ml[284,10265+52])
                                                  Ttyp_constr "option/10!"
                                                  [
                                                    core_type (src/conflict.ml[284,10265+31]..src/conflict.ml[284,10265+45])
                                                      Ttyp_constr "configuration1/904"
                                                      []
                                                  ]
                                              ]
                                          Texp_apply
                                          expression (src/conflict.ml[285,10331+4]..src/conflict.ml[285,10331+18])
                                            Texp_ident "Stdlib!.Hashtbl.create"
                                          [
                                            <arg>
                                              Optional "random"
                                              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                Texp_construct "None"
                                                []
                                            <arg>
                                              Nolabel
                                              expression (src/conflict.ml[285,10331+19]..src/conflict.ml[285,10331+23])
                                                Texp_constant Const_int 1023
                                          ]
                                    ]
                                    expression (src/conflict.ml[288,10361+2]..src/conflict.ml[355,12462+14])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/conflict.ml[288,10361+6]..src/conflict.ml[288,10361+11])
                                            extra
                                              Tpat_extra_constraint
                                              core_type (src/conflict.ml[288,10361+14]..src/conflict.ml[288,10361+36])
                                                Ttyp_constr "Stdlib!.Queue.t"
                                                [
                                                  core_type (src/conflict.ml[288,10361+14]..src/conflict.ml[288,10361+28])
                                                    Ttyp_constr "configuration1/904"
                                                    []
                                                ]
                                            Tpat_alias "queue/1160"
                                            pattern (src/conflict.ml[288,10361+6]..src/conflict.ml[288,10361+11])
                                              Tpat_any
                                          expression (src/conflict.ml[289,10400+4]..src/conflict.ml[289,10400+18])
                                            extra
                                              Texp_constraint
                                              core_type (src/conflict.ml[288,10361+14]..src/conflict.ml[288,10361+36])
                                                Ttyp_constr "Stdlib!.Queue.t"
                                                [
                                                  core_type (src/conflict.ml[288,10361+14]..src/conflict.ml[288,10361+28])
                                                    Ttyp_constr "configuration1/904"
                                                    []
                                                ]
                                            Texp_apply
                                            expression (src/conflict.ml[289,10400+4]..src/conflict.ml[289,10400+16])
                                              Texp_ident "Stdlib!.Queue.create"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/conflict.ml[289,10400+16]..src/conflict.ml[289,10400+18])
                                                  Texp_construct "()"
                                                  []
                                            ]
                                      ]
                                      expression (src/conflict.ml[292,10425+2]..src/conflict.ml[355,12462+14])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/conflict.ml[292,10425+6]..src/conflict.ml[292,10425+13])
                                              Tpat_var "enqueue/1161"
                                            expression (src/conflict.ml[292,10425+14]..src/conflict.ml[298,10580+28]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/conflict.ml[292,10425+14]..src/conflict.ml[292,10425+22])
                                                    Tpat_var "ancestor/1163"
                                                  expression (src/conflict.ml[292,10425+23]..src/conflict.ml[298,10580+28]) ghost
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (src/conflict.ml[292,10425+23]..src/conflict.ml[292,10425+29])
                                                          Tpat_var "config/1164"
                                                        expression (src/conflict.ml[293,10457+4]..src/conflict.ml[298,10580+28])
                                                          Texp_try
                                                          expression (src/conflict.ml[294,10465+6]..src/conflict.ml[295,10508+8])
                                                            Texp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (src/conflict.ml[294,10465+10]..src/conflict.ml[294,10465+11])
                                                                  Tpat_any
                                                                expression (src/conflict.ml[294,10465+14]..src/conflict.ml[294,10465+39])
                                                                  Texp_apply
                                                                  expression (src/conflict.ml[294,10465+14]..src/conflict.ml[294,10465+26])
                                                                    Texp_ident "Stdlib!.Hashtbl.find"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/conflict.ml[294,10465+27]..src/conflict.ml[294,10465+32])
                                                                        Texp_ident "table/1159"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/conflict.ml[294,10465+33]..src/conflict.ml[294,10465+39])
                                                                        Texp_ident "config/1164"
                                                                  ]
                                                            ]
                                                            expression (src/conflict.ml[295,10508+6]..src/conflict.ml[295,10508+8])
                                                              Texp_construct "()"
                                                              []
                                                          [
                                                            <case>
                                                              pattern (src/conflict.ml[296,10517+9]..src/conflict.ml[296,10517+18])
                                                                Tpat_construct "Not_found"
                                                                []
                                                                None
                                                              expression (src/conflict.ml[297,10539+6]..src/conflict.ml[298,10580+28])
                                                                Texp_sequence
                                                                expression (src/conflict.ml[297,10539+6]..src/conflict.ml[297,10539+39])
                                                                  Texp_apply
                                                                  expression (src/conflict.ml[297,10539+6]..src/conflict.ml[297,10539+17])
                                                                    Texp_ident "Stdlib!.Hashtbl.add"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/conflict.ml[297,10539+18]..src/conflict.ml[297,10539+23])
                                                                        Texp_ident "table/1159"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/conflict.ml[297,10539+24]..src/conflict.ml[297,10539+30])
                                                                        Texp_ident "config/1164"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/conflict.ml[297,10539+31]..src/conflict.ml[297,10539+39])
                                                                        Texp_ident "ancestor/1163"
                                                                  ]
                                                                expression (src/conflict.ml[298,10580+6]..src/conflict.ml[298,10580+28])
                                                                  Texp_apply
                                                                  expression (src/conflict.ml[298,10580+6]..src/conflict.ml[298,10580+15])
                                                                    Texp_ident "Stdlib!.Queue.add"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/conflict.ml[298,10580+16]..src/conflict.ml[298,10580+22])
                                                                        Texp_ident "config/1164"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/conflict.ml[298,10580+23]..src/conflict.ml[298,10580+28])
                                                                        Texp_ident "queue/1160"
                                                                  ]
                                                          ]
                                                    ]
                                              ]
                                        ]
                                        expression (src/conflict.ml[304,10727+2]..src/conflict.ml[355,12462+14])
                                          Texp_sequence
                                          expression (src/conflict.ml[304,10727+2]..src/conflict.ml[304,10727+60])
                                            Texp_apply
                                            expression (src/conflict.ml[304,10727+2]..src/conflict.ml[304,10727+9])
                                              Texp_ident "enqueue/1161"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/conflict.ml[304,10727+10]..src/conflict.ml[304,10727+14])
                                                  Texp_construct "None"
                                                  []
                                              <arg>
                                                Nolabel
                                                expression (src/conflict.ml[304,10727+15]..src/conflict.ml[304,10727+60])
                                                  Texp_tuple
                                                  [
                                                    expression (src/conflict.ml[304,10727+16]..src/conflict.ml[304,10727+21])
                                                      Texp_ident "start/1155"
                                                    expression (src/conflict.ml[304,10727+23]..src/conflict.ml[304,10727+56])
                                                      Texp_apply
                                                      expression (src/conflict.ml[304,10727+23]..src/conflict.ml[304,10727+37])
                                                        Texp_ident "Dune__exe!.Grammar.Terminal.equal"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/conflict.ml[304,10727+38]..src/conflict.ml[304,10727+41])
                                                            Texp_ident "tok/1154"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/conflict.ml[304,10727+42]..src/conflict.ml[304,10727+56])
                                                            Texp_ident "Dune__exe!.Grammar.Terminal.sharp"
                                                      ]
                                                    expression (src/conflict.ml[304,10727+58]..src/conflict.ml[304,10727+59])
                                                      Texp_constant Const_int 0
                                                  ]
                                            ]
                                          expression (src/conflict.ml[305,10789+2]..src/conflict.ml[355,12462+14])
                                            Texp_try
                                            expression (src/conflict.ml[306,10795+4]..src/conflict.ml[346,12128+16])
                                              Texp_sequence
                                              expression (src/conflict.ml[306,10795+4]..src/conflict.ml[345,12115+11])
                                                Texp_apply
                                                expression (src/conflict.ml[306,10795+4]..src/conflict.ml[306,10795+14])
                                                  Texp_ident "Dune__exe!.Misc.qiter"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/conflict.ml[306,10795+15]..src/conflict.ml[345,12115+5])
                                                      Texp_function
                                                      Nolabel
                                                      [
                                                        <case>
                                                          pattern (src/conflict.ml[306,10795+25]..src/conflict.ml[306,10795+60])
                                                            Tpat_alias "config/1168"
                                                            pattern (src/conflict.ml[306,10795+25]..src/conflict.ml[306,10795+50])
                                                              Tpat_tuple
                                                              [
                                                                pattern (src/conflict.ml[306,10795+26]..src/conflict.ml[306,10795+30])
                                                                  Tpat_var "item/1165"
                                                                pattern (src/conflict.ml[306,10795+32]..src/conflict.ml[306,10795+41])
                                                                  Tpat_var "lookahead/1166"
                                                                pattern (src/conflict.ml[306,10795+43]..src/conflict.ml[306,10795+49])
                                                                  Tpat_var "offset/1167"
                                                              ]
                                                          expression (src/conflict.ml[311,10980+6]..src/conflict.ml[343,12099+14])
                                                            Texp_sequence
                                                            expression (src/conflict.ml[311,10980+6]..src/conflict.ml[312,11046+18])
                                                              Texp_ifthenelse
                                                              expression (src/conflict.ml[311,10980+9]..src/conflict.ml[311,10980+60])
                                                                Texp_apply
                                                                expression (src/conflict.ml[311,10980+32]..src/conflict.ml[311,10980+34])
                                                                  Texp_ident "Stdlib!.&&"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/conflict.ml[311,10980+9]..src/conflict.ml[311,10980+31])
                                                                      Texp_apply
                                                                      expression (src/conflict.ml[311,10980+10]..src/conflict.ml[311,10980+20])
                                                                        Texp_ident "Dune__exe!.Item.equal"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/conflict.ml[311,10980+21]..src/conflict.ml[311,10980+25])
                                                                            Texp_ident "item/1165"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/conflict.ml[311,10980+26]..src/conflict.ml[311,10980+30])
                                                                            Texp_ident "stop/1157"
                                                                      ]
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/conflict.ml[311,10980+35]..src/conflict.ml[311,10980+60])
                                                                      Texp_apply
                                                                      expression (src/conflict.ml[311,10980+45]..src/conflict.ml[311,10980+47])
                                                                        Texp_ident "Stdlib!.&&"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/conflict.ml[311,10980+35]..src/conflict.ml[311,10980+44])
                                                                            Texp_ident "lookahead/1166"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/conflict.ml[311,10980+48]..src/conflict.ml[311,10980+60])
                                                                            Texp_apply
                                                                            expression (src/conflict.ml[311,10980+56]..src/conflict.ml[311,10980+57])
                                                                              Texp_ident "Stdlib!.="
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/conflict.ml[311,10980+49]..src/conflict.ml[311,10980+55])
                                                                                  Texp_ident "offset/1167"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/conflict.ml[311,10980+58]..src/conflict.ml[311,10980+59])
                                                                                  Texp_ident "n/1158"
                                                                            ]
                                                                      ]
                                                                ]
                                                              expression (src/conflict.ml[312,11046+8]..src/conflict.ml[312,11046+18])
                                                                Texp_apply
                                                                expression (src/conflict.ml[312,11046+8]..src/conflict.ml[312,11046+13])
                                                                  Texp_ident "Stdlib!.raise"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/conflict.ml[312,11046+14]..src/conflict.ml[312,11046+18])
                                                                      Texp_construct "Done"
                                                                      []
                                                                ]
                                                              None
                                                            expression (src/conflict.ml[316,11133+6]..src/conflict.ml[343,12099+14])
                                                              Texp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (src/conflict.ml[316,11133+10]..src/conflict.ml[316,11133+37])
                                                                    Tpat_tuple
                                                                    [
                                                                      pattern (src/conflict.ml[316,11133+10]..src/conflict.ml[316,11133+14])
                                                                        Tpat_var "prod/1169"
                                                                      pattern (src/conflict.ml[316,11133+16]..src/conflict.ml[316,11133+19])
                                                                        Tpat_var "_nt/1170"
                                                                      pattern (src/conflict.ml[316,11133+21]..src/conflict.ml[316,11133+24])
                                                                        Tpat_var "rhs/1171"
                                                                      pattern (src/conflict.ml[316,11133+26]..src/conflict.ml[316,11133+29])
                                                                        Tpat_var "pos/1172"
                                                                      pattern (src/conflict.ml[316,11133+31]..src/conflict.ml[316,11133+37])
                                                                        Tpat_var "length/1173"
                                                                    ]
                                                                  expression (src/conflict.ml[316,11133+40]..src/conflict.ml[316,11133+53])
                                                                    Texp_apply
                                                                    expression (src/conflict.ml[316,11133+40]..src/conflict.ml[316,11133+48])
                                                                      Texp_ident "Dune__exe!.Item.def"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/conflict.ml[316,11133+49]..src/conflict.ml[316,11133+53])
                                                                          Texp_ident "item/1165"
                                                                    ]
                                                              ]
                                                              expression (src/conflict.ml[321,11305+6]..src/conflict.ml[343,12099+14])
                                                                Texp_sequence
                                                                expression (src/conflict.ml[321,11305+6]..src/conflict.ml[326,11523+9])
                                                                  Texp_ifthenelse
                                                                  expression (src/conflict.ml[321,11305+9]..src/conflict.ml[323,11351+48])
                                                                    Texp_apply
                                                                    expression (src/conflict.ml[322,11329+6]..src/conflict.ml[322,11329+8])
                                                                      Texp_ident "Stdlib!.&&"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/conflict.ml[321,11305+9]..src/conflict.ml[321,11305+23])
                                                                          Texp_apply
                                                                          expression (src/conflict.ml[321,11305+14]..src/conflict.ml[321,11305+15])
                                                                            Texp_ident "Stdlib!.<"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/conflict.ml[321,11305+10]..src/conflict.ml[321,11305+13])
                                                                                Texp_ident "pos/1172"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/conflict.ml[321,11305+16]..src/conflict.ml[321,11305+22])
                                                                                Texp_ident "length/1173"
                                                                          ]
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/conflict.ml[322,11329+9]..src/conflict.ml[323,11351+48])
                                                                          Texp_apply
                                                                          expression (src/conflict.ml[323,11351+6]..src/conflict.ml[323,11351+8])
                                                                            Texp_ident "Stdlib!.&&"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/conflict.ml[322,11329+9]..src/conflict.ml[322,11329+21])
                                                                                Texp_apply
                                                                                expression (src/conflict.ml[322,11329+17]..src/conflict.ml[322,11329+18])
                                                                                  Texp_ident "Stdlib!.<"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/conflict.ml[322,11329+10]..src/conflict.ml[322,11329+16])
                                                                                      Texp_ident "offset/1167"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/conflict.ml[322,11329+19]..src/conflict.ml[322,11329+20])
                                                                                      Texp_ident "n/1158"
                                                                                ]
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/conflict.ml[323,11351+9]..src/conflict.ml[323,11351+48])
                                                                                Texp_apply
                                                                                expression (src/conflict.ml[323,11351+10]..src/conflict.ml[323,11351+22])
                                                                                  Texp_ident "Dune__exe!.Grammar.Symbol.equal"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/conflict.ml[323,11351+23]..src/conflict.ml[323,11351+32])
                                                                                      Texp_apply
                                                                                      expression (src/conflict.ml[323,11351+23]..src/conflict.ml[323,11351+32]) ghost
                                                                                        Texp_ident "Stdlib!.Array.get"
                                                                                      [
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/conflict.ml[323,11351+23]..src/conflict.ml[323,11351+26])
                                                                                            Texp_ident "rhs/1171"
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/conflict.ml[323,11351+28]..src/conflict.ml[323,11351+31])
                                                                                            Texp_ident "pos/1172"
                                                                                      ]
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/conflict.ml[323,11351+33]..src/conflict.ml[323,11351+47])
                                                                                      Texp_apply
                                                                                      expression (src/conflict.ml[323,11351+33]..src/conflict.ml[323,11351+47]) ghost
                                                                                        Texp_ident "Stdlib!.Array.get"
                                                                                      [
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/conflict.ml[323,11351+33]..src/conflict.ml[323,11351+38])
                                                                                            Texp_ident "input/1156"
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/conflict.ml[323,11351+40]..src/conflict.ml[323,11351+46])
                                                                                            Texp_ident "offset/1167"
                                                                                      ]
                                                                                ]
                                                                          ]
                                                                    ]
                                                                  expression (src/conflict.ml[323,11351+54]..src/conflict.ml[326,11523+9])
                                                                    Texp_let Nonrec
                                                                    [
                                                                      <def>
                                                                        pattern (src/conflict.ml[324,11411+12]..src/conflict.ml[324,11411+19])
                                                                          Tpat_var "config'/1174"
                                                                        expression (src/conflict.ml[324,11411+22]..src/conflict.ml[324,11411+70])
                                                                          Texp_tuple
                                                                          [
                                                                            expression (src/conflict.ml[324,11411+23]..src/conflict.ml[324,11411+48])
                                                                              Texp_apply
                                                                              expression (src/conflict.ml[324,11411+23]..src/conflict.ml[324,11411+34])
                                                                                Texp_ident "Dune__exe!.Item.import"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/conflict.ml[324,11411+35]..src/conflict.ml[324,11411+48])
                                                                                    Texp_tuple
                                                                                    [
                                                                                      expression (src/conflict.ml[324,11411+36]..src/conflict.ml[324,11411+40])
                                                                                        Texp_ident "prod/1169"
                                                                                      expression (src/conflict.ml[324,11411+42]..src/conflict.ml[324,11411+47])
                                                                                        Texp_apply
                                                                                        expression (src/conflict.ml[324,11411+45]..src/conflict.ml[324,11411+46])
                                                                                          Texp_ident "Stdlib!.+"
                                                                                        [
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/conflict.ml[324,11411+42]..src/conflict.ml[324,11411+45])
                                                                                              Texp_ident "pos/1172"
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/conflict.ml[324,11411+46]..src/conflict.ml[324,11411+47])
                                                                                              Texp_constant Const_int 1
                                                                                        ]
                                                                                    ]
                                                                              ]
                                                                            expression (src/conflict.ml[324,11411+50]..src/conflict.ml[324,11411+59])
                                                                              Texp_ident "lookahead/1166"
                                                                            expression (src/conflict.ml[324,11411+61]..src/conflict.ml[324,11411+69])
                                                                              Texp_apply
                                                                              expression (src/conflict.ml[324,11411+67]..src/conflict.ml[324,11411+68])
                                                                                Texp_ident "Stdlib!.+"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/conflict.ml[324,11411+61]..src/conflict.ml[324,11411+67])
                                                                                    Texp_ident "offset/1167"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/conflict.ml[324,11411+68]..src/conflict.ml[324,11411+69])
                                                                                    Texp_constant Const_int 1
                                                                              ]
                                                                          ]
                                                                    ]
                                                                    expression (src/conflict.ml[325,11485+8]..src/conflict.ml[325,11485+37])
                                                                      Texp_apply
                                                                      expression (src/conflict.ml[325,11485+8]..src/conflict.ml[325,11485+15])
                                                                        Texp_ident "enqueue/1161"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/conflict.ml[325,11485+16]..src/conflict.ml[325,11485+29])
                                                                            Texp_construct "Some"
                                                                            [
                                                                              expression (src/conflict.ml[325,11485+22]..src/conflict.ml[325,11485+28])
                                                                                Texp_ident "config/1168"
                                                                            ]
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/conflict.ml[325,11485+30]..src/conflict.ml[325,11485+37])
                                                                            Texp_ident "config'/1174"
                                                                      ]
                                                                  None
                                                                expression (src/conflict.ml[330,11569+6]..src/conflict.ml[343,12099+14])
                                                                  Texp_ifthenelse
                                                                  expression (src/conflict.ml[330,11569+9]..src/conflict.ml[330,11569+21])
                                                                    Texp_apply
                                                                    expression (src/conflict.ml[330,11569+13]..src/conflict.ml[330,11569+14])
                                                                      Texp_ident "Stdlib!.<"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/conflict.ml[330,11569+9]..src/conflict.ml[330,11569+12])
                                                                          Texp_ident "pos/1172"
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/conflict.ml[330,11569+15]..src/conflict.ml[330,11569+21])
                                                                          Texp_ident "length/1173"
                                                                    ]
                                                                  expression (src/conflict.ml[331,11596+8]..src/conflict.ml[343,12099+14])
                                                                    Texp_match
                                                                    expression (src/conflict.ml[331,11596+14]..src/conflict.ml[331,11596+23])
                                                                      Texp_apply
                                                                      expression (src/conflict.ml[331,11596+14]..src/conflict.ml[331,11596+23]) ghost
                                                                        Texp_ident "Stdlib!.Array.get"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/conflict.ml[331,11596+14]..src/conflict.ml[331,11596+17])
                                                                            Texp_ident "rhs/1171"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/conflict.ml[331,11596+19]..src/conflict.ml[331,11596+22])
                                                                            Texp_ident "pos/1172"
                                                                      ]
                                                                    [
                                                                      <case>
                                                                        pattern (src/conflict.ml[332,11625+10]..src/conflict.ml[332,11625+21])
                                                                          Tpat_value
                                                                          pattern (src/conflict.ml[332,11625+10]..src/conflict.ml[332,11625+21])
                                                                            Tpat_construct "Symbol.N"
                                                                            [
                                                                              pattern (src/conflict.ml[332,11625+19]..src/conflict.ml[332,11625+21])
                                                                                Tpat_var "nt/1175"
                                                                            ]
                                                                            None
                                                                        expression (src/conflict.ml[333,11650+12]..src/conflict.ml[341,12061+13])
                                                                          Texp_let Nonrec
                                                                          [
                                                                            <def>
                                                                              pattern (src/conflict.ml[333,11650+16]..src/conflict.ml[333,11650+31])
                                                                                Tpat_tuple
                                                                                [
                                                                                  pattern (src/conflict.ml[333,11650+16]..src/conflict.ml[333,11650+24])
                                                                                    Tpat_var "nullable/1176"
                                                                                  pattern (src/conflict.ml[333,11650+26]..src/conflict.ml[333,11650+31])
                                                                                    Tpat_var "first/1177"
                                                                                ]
                                                                              expression (src/conflict.ml[333,11650+34]..src/conflict.ml[333,11650+77])
                                                                                Texp_apply
                                                                                expression (src/conflict.ml[333,11650+34]..src/conflict.ml[333,11650+62])
                                                                                  Texp_ident "Dune__exe!.Grammar.Analysis.nullable_first_prod"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/conflict.ml[333,11650+63]..src/conflict.ml[333,11650+67])
                                                                                      Texp_ident "prod/1169"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/conflict.ml[333,11650+68]..src/conflict.ml[333,11650+77])
                                                                                      Texp_apply
                                                                                      expression (src/conflict.ml[333,11650+73]..src/conflict.ml[333,11650+74])
                                                                                        Texp_ident "Stdlib!.+"
                                                                                      [
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/conflict.ml[333,11650+69]..src/conflict.ml[333,11650+72])
                                                                                            Texp_ident "pos/1172"
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/conflict.ml[333,11650+75]..src/conflict.ml[333,11650+76])
                                                                                            Texp_constant Const_int 1
                                                                                      ]
                                                                                ]
                                                                          ]
                                                                          expression (src/conflict.ml[334,11731+12]..src/conflict.ml[341,12061+13])
                                                                            Texp_let Nonrec
                                                                            [
                                                                              <def>
                                                                                pattern (src/conflict.ml[334,11731+16]..src/conflict.ml[334,11731+21])
                                                                                  extra
                                                                                    Tpat_extra_constraint
                                                                                    core_type (src/conflict.ml[334,11731+24]..src/conflict.ml[334,11731+28])
                                                                                      Ttyp_constr "bool/5!"
                                                                                      []
                                                                                  Tpat_alias "first/1178"
                                                                                  pattern (src/conflict.ml[334,11731+16]..src/conflict.ml[334,11731+21])
                                                                                    Tpat_any
                                                                                expression (src/conflict.ml[334,11731+31]..src/conflict.ml[334,11731+56])
                                                                                  extra
                                                                                    Texp_constraint
                                                                                    core_type (src/conflict.ml[334,11731+24]..src/conflict.ml[334,11731+28])
                                                                                      Ttyp_constr "bool/5!"
                                                                                      []
                                                                                  Texp_apply
                                                                                  expression (src/conflict.ml[334,11731+31]..src/conflict.ml[334,11731+46])
                                                                                    Texp_ident "Dune__exe!.Grammar.TerminalSet.mem"
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/conflict.ml[334,11731+47]..src/conflict.ml[334,11731+50])
                                                                                        Texp_ident "tok/1154"
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/conflict.ml[334,11731+51]..src/conflict.ml[334,11731+56])
                                                                                        Texp_ident "first/1177"
                                                                                  ]
                                                                            ]
                                                                            expression (src/conflict.ml[335,11791+12]..src/conflict.ml[341,12061+13])
                                                                              Texp_let Nonrec
                                                                              [
                                                                                <def>
                                                                                  pattern (src/conflict.ml[335,11791+16]..src/conflict.ml[335,11791+26])
                                                                                    Tpat_var "lookahead'/1179"
                                                                                  expression (src/conflict.ml[336,11820+14]..src/conflict.ml[336,11820+60])
                                                                                    Texp_ifthenelse
                                                                                    expression (src/conflict.ml[336,11820+17]..src/conflict.ml[336,11820+25])
                                                                                      Texp_ident "nullable/1176"
                                                                                    expression (src/conflict.ml[336,11820+31]..src/conflict.ml[336,11820+49])
                                                                                      Texp_apply
                                                                                      expression (src/conflict.ml[336,11820+37]..src/conflict.ml[336,11820+39])
                                                                                        Texp_ident "Stdlib!.||"
                                                                                      [
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/conflict.ml[336,11820+31]..src/conflict.ml[336,11820+36])
                                                                                            Texp_ident "first/1178"
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/conflict.ml[336,11820+40]..src/conflict.ml[336,11820+49])
                                                                                            Texp_ident "lookahead/1166"
                                                                                      ]
                                                                                    Some
                                                                                      expression (src/conflict.ml[336,11820+55]..src/conflict.ml[336,11820+60])
                                                                                        Texp_ident "first/1178"
                                                                              ]
                                                                              expression (src/conflict.ml[338,11896+12]..src/conflict.ml[341,12061+13])
                                                                                Texp_apply
                                                                                expression (src/conflict.ml[338,11896+12]..src/conflict.ml[338,11896+29])
                                                                                  Texp_ident "Dune__exe!.Grammar.Production.iternt"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/conflict.ml[338,11896+30]..src/conflict.ml[338,11896+32])
                                                                                      Texp_ident "nt/1175"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/conflict.ml[338,11896+33]..src/conflict.ml[341,12061+13])
                                                                                      Texp_function
                                                                                      Nolabel
                                                                                      [
                                                                                        <case>
                                                                                          pattern (src/conflict.ml[338,11896+38]..src/conflict.ml[338,11896+42])
                                                                                            Tpat_var "prod/1180"
                                                                                          expression (src/conflict.ml[339,11942+14]..src/conflict.ml[340,12017+43])
                                                                                            Texp_let Nonrec
                                                                                            [
                                                                                              <def>
                                                                                                pattern (src/conflict.ml[339,11942+18]..src/conflict.ml[339,11942+25])
                                                                                                  Tpat_var "config'/1181"
                                                                                                expression (src/conflict.ml[339,11942+28]..src/conflict.ml[339,11942+71])
                                                                                                  Texp_tuple
                                                                                                  [
                                                                                                    expression (src/conflict.ml[339,11942+29]..src/conflict.ml[339,11942+50])
                                                                                                      Texp_apply
                                                                                                      expression (src/conflict.ml[339,11942+29]..src/conflict.ml[339,11942+40])
                                                                                                        Texp_ident "Dune__exe!.Item.import"
                                                                                                      [
                                                                                                        <arg>
                                                                                                          Nolabel
                                                                                                          expression (src/conflict.ml[339,11942+41]..src/conflict.ml[339,11942+50])
                                                                                                            Texp_tuple
                                                                                                            [
                                                                                                              expression (src/conflict.ml[339,11942+42]..src/conflict.ml[339,11942+46])
                                                                                                                Texp_ident "prod/1180"
                                                                                                              expression (src/conflict.ml[339,11942+48]..src/conflict.ml[339,11942+49])
                                                                                                                Texp_constant Const_int 0
                                                                                                            ]
                                                                                                      ]
                                                                                                    expression (src/conflict.ml[339,11942+52]..src/conflict.ml[339,11942+62])
                                                                                                      Texp_ident "lookahead'/1179"
                                                                                                    expression (src/conflict.ml[339,11942+64]..src/conflict.ml[339,11942+70])
                                                                                                      Texp_ident "offset/1167"
                                                                                                  ]
                                                                                            ]
                                                                                            expression (src/conflict.ml[340,12017+14]..src/conflict.ml[340,12017+43])
                                                                                              Texp_apply
                                                                                              expression (src/conflict.ml[340,12017+14]..src/conflict.ml[340,12017+21])
                                                                                                Texp_ident "enqueue/1161"
                                                                                              [
                                                                                                <arg>
                                                                                                  Nolabel
                                                                                                  expression (src/conflict.ml[340,12017+22]..src/conflict.ml[340,12017+35])
                                                                                                    Texp_construct "Some"
                                                                                                    [
                                                                                                      expression (src/conflict.ml[340,12017+28]..src/conflict.ml[340,12017+34])
                                                                                                        Texp_ident "config/1168"
                                                                                                    ]
                                                                                                <arg>
                                                                                                  Nolabel
                                                                                                  expression (src/conflict.ml[340,12017+36]..src/conflict.ml[340,12017+43])
                                                                                                    Texp_ident "config'/1181"
                                                                                              ]
                                                                                      ]
                                                                                ]
                                                                      <case>
                                                                        pattern (src/conflict.ml[342,12075+10]..src/conflict.ml[342,12075+20])
                                                                          Tpat_value
                                                                          pattern (src/conflict.ml[342,12075+10]..src/conflict.ml[342,12075+20])
                                                                            Tpat_construct "Symbol.T"
                                                                            [
                                                                              pattern (src/conflict.ml[342,12075+19]..src/conflict.ml[342,12075+20])
                                                                                Tpat_any
                                                                            ]
                                                                            None
                                                                        expression (src/conflict.ml[343,12099+12]..src/conflict.ml[343,12099+14])
                                                                          Texp_construct "()"
                                                                          []
                                                                    ]
                                                                  None
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (src/conflict.ml[345,12115+6]..src/conflict.ml[345,12115+11])
                                                      Texp_ident "queue/1160"
                                                ]
                                              expression (src/conflict.ml[346,12128+4]..src/conflict.ml[346,12128+16])
                                                Texp_assert                                                expression (src/conflict.ml[346,12128+11]..src/conflict.ml[346,12128+16])
                                                  Texp_construct "false"
                                                  []
                                            [
                                              <case>
                                                pattern (src/conflict.ml[347,12145+7]..src/conflict.ml[347,12145+11])
                                                  Tpat_construct "Done"
                                                  []
                                                  None
                                                expression (src/conflict.ml[352,12304+4]..src/conflict.ml[355,12462+14])
                                                  Texp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (src/conflict.ml[352,12304+8]..src/conflict.ml[352,12304+15])
                                                        Tpat_var "configs/1182"
                                                      expression (src/conflict.ml[352,12304+18]..src/conflict.ml[352,12304+56])
                                                        Texp_apply
                                                        expression (src/conflict.ml[352,12304+18]..src/conflict.ml[352,12304+34])
                                                          Texp_ident "Dune__exe!.Misc.materialize"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/conflict.ml[352,12304+35]..src/conflict.ml[352,12304+40])
                                                              Texp_ident "table/1159"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/conflict.ml[352,12304+41]..src/conflict.ml[352,12304+56])
                                                              Texp_tuple
                                                              [
                                                                expression (src/conflict.ml[352,12304+42]..src/conflict.ml[352,12304+46])
                                                                  Texp_ident "stop/1157"
                                                                expression (src/conflict.ml[352,12304+48]..src/conflict.ml[352,12304+52])
                                                                  Texp_construct "true"
                                                                  []
                                                                expression (src/conflict.ml[352,12304+54]..src/conflict.ml[352,12304+55])
                                                                  Texp_ident "n/1158"
                                                              ]
                                                        ]
                                                  ]
                                                  expression (src/conflict.ml[353,12364+4]..src/conflict.ml[355,12462+14])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (src/conflict.ml[353,12364+8]..src/conflict.ml[353,12364+18])
                                                          Tpat_var "derivation/1183"
                                                        expression (src/conflict.ml[353,12364+21]..src/conflict.ml[353,12364+37])
                                                          Texp_ident "Dune__exe!.Derivation.empty"
                                                    ]
                                                    expression (src/conflict.ml[354,12405+4]..src/conflict.ml[355,12462+14])
                                                      Texp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (src/conflict.ml[354,12405+8]..src/conflict.ml[354,12405+18])
                                                            Tpat_var "derivation/1184"
                                                          expression (src/conflict.ml[354,12405+21]..src/conflict.ml[354,12405+53])
                                                            Texp_apply
                                                            expression (src/conflict.ml[354,12405+21]..src/conflict.ml[354,12405+28])
                                                              Texp_ident "follow1/910"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/conflict.ml[354,12405+29]..src/conflict.ml[354,12405+32])
                                                                  Texp_ident "tok/1154"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/conflict.ml[354,12405+33]..src/conflict.ml[354,12405+43])
                                                                  Texp_ident "derivation/1183"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/conflict.ml[354,12405+44]..src/conflict.ml[354,12405+45])
                                                                  Texp_ident "n/1158"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/conflict.ml[354,12405+46]..src/conflict.ml[354,12405+53])
                                                                  Texp_ident "configs/1182"
                                                            ]
                                                      ]
                                                      expression (src/conflict.ml[355,12462+4]..src/conflict.ml[355,12462+14])
                                                        Texp_ident "derivation/1184"
                                            ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/conflict.ml[363,12770+0]..src/conflict.ml[364,12790+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/conflict.ml[363,12770+4]..src/conflict.ml[363,12770+17])
          Tpat_var "unexplainable/1185"
        expression (src/conflict.ml[364,12790+2]..src/conflict.ml[364,12790+7])
          Texp_apply
          expression (src/conflict.ml[364,12790+2]..src/conflict.ml[364,12790+5])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (src/conflict.ml[364,12790+6]..src/conflict.ml[364,12790+7])
                Texp_constant Const_int 0
          ]
    ]
  structure_item (src/conflict.ml[366,12799+0]..src/conflict.ml[373,13027+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/conflict.ml[366,12799+4]..src/conflict.ml[366,12799+21])
          Tpat_var "log_unexplainable/1186"
        expression (src/conflict.ml[366,12799+22]..src/conflict.ml[373,13027+5]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/conflict.ml[366,12799+22]..src/conflict.ml[366,12799+24])
                Tpat_construct "()"
                []
                None
              expression (src/conflict.ml[367,12826+2]..src/conflict.ml[373,13027+5])
                Texp_ifthenelse
                expression (src/conflict.ml[367,12826+5]..src/conflict.ml[367,12826+23])
                  Texp_apply
                  expression (src/conflict.ml[367,12826+20]..src/conflict.ml[367,12826+21])
                    Texp_ident "Stdlib!.>"
                  [
                    <arg>
                      Nolabel
                      expression (src/conflict.ml[367,12826+5]..src/conflict.ml[367,12826+19])
                        Texp_apply
                        expression (src/conflict.ml[367,12826+5]..src/conflict.ml[367,12826+6])
                          Texp_ident "Stdlib!.!"
                        [
                          <arg>
                            Nolabel
                            expression (src/conflict.ml[367,12826+6]..src/conflict.ml[367,12826+19])
                              Texp_ident "unexplainable/1185"
                        ]
                    <arg>
                      Nolabel
                      expression (src/conflict.ml[367,12826+22]..src/conflict.ml[367,12826+23])
                        Texp_constant Const_int 0
                  ]
                expression (src/conflict.ml[368,12855+4]..src/conflict.ml[373,13027+5])
                  Texp_apply
                  expression (src/conflict.ml[368,12855+4]..src/conflict.ml[368,12855+14])
                    Texp_ident "Dune__exe!.Error.logA"
                  [
                    <arg>
                      Nolabel
                      expression (src/conflict.ml[368,12855+15]..src/conflict.ml[368,12855+16])
                        Texp_constant Const_int 2
                    <arg>
                      Nolabel
                      expression (src/conflict.ml[368,12855+17]..src/conflict.ml[373,13027+5])
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/conflict.ml[368,12855+22]..src/conflict.ml[368,12855+23])
                              Tpat_var "f/1203"
                            expression (src/conflict.ml[369,12882+6]..src/conflict.ml[372,12978+48])
                              Texp_apply
                              expression (src/conflict.ml[369,12882+6]..src/conflict.ml[369,12882+20])
                                Texp_ident "Stdlib!.Printf.fprintf"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/conflict.ml[369,12882+21]..src/conflict.ml[369,12882+22])
                                    Texp_ident "f/1203"
                                <arg>
                                  Nolabel
                                  expression (src/conflict.ml[370,12905+8]..src/conflict.ml[370,12905+49])
                                    Texp_construct "CamlinternalFormatBasics.Format"
                                    [
                                      expression (src/conflict.ml[370,12905+8]..src/conflict.ml[370,12905+49]) ghost
                                        Texp_construct "CamlinternalFormatBasics.Int"
                                        [
                                          expression (src/conflict.ml[370,12905+8]..src/conflict.ml[370,12905+49]) ghost
                                            Texp_construct "CamlinternalFormatBasics.Int_d"
                                            []
                                          expression (src/conflict.ml[370,12905+8]..src/conflict.ml[370,12905+49]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                            []
                                          expression (src/conflict.ml[370,12905+8]..src/conflict.ml[370,12905+49]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_precision"
                                            []
                                          expression (src/conflict.ml[370,12905+8]..src/conflict.ml[370,12905+49]) ghost
                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                            [
                                              expression (src/conflict.ml[370,12905+8]..src/conflict.ml[370,12905+49]) ghost
                                                Texp_constant Const_string(" conflict",(src/conflict.ml[370,12905+8]..src/conflict.ml[370,12905+49]) ghost,None)
                                              expression (src/conflict.ml[370,12905+8]..src/conflict.ml[370,12905+49]) ghost
                                                Texp_construct "CamlinternalFormatBasics.String"
                                                [
                                                  expression (src/conflict.ml[370,12905+8]..src/conflict.ml[370,12905+49]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                    []
                                                  expression (src/conflict.ml[370,12905+8]..src/conflict.ml[370,12905+49]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                    [
                                                      expression (src/conflict.ml[370,12905+8]..src/conflict.ml[370,12905+49]) ghost
                                                        Texp_constant Const_string(" could not be explained.\n",(src/conflict.ml[370,12905+8]..src/conflict.ml[370,12905+49]) ghost,None)
                                                      expression (src/conflict.ml[370,12905+8]..src/conflict.ml[370,12905+49]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                        []
                                                    ]
                                                ]
                                            ]
                                        ]
                                      expression (src/conflict.ml[370,12905+8]..src/conflict.ml[370,12905+49]) ghost
                                        Texp_constant Const_string("%d conflict%s could not be explained.\n",(src/conflict.ml[370,12905+8]..src/conflict.ml[370,12905+49]) ghost,None)
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/conflict.ml[371,12955+8]..src/conflict.ml[371,12955+22])
                                    Texp_apply
                                    expression (src/conflict.ml[371,12955+8]..src/conflict.ml[371,12955+9])
                                      Texp_ident "Stdlib!.!"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/conflict.ml[371,12955+9]..src/conflict.ml[371,12955+22])
                                          Texp_ident "unexplainable/1185"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/conflict.ml[372,12978+8]..src/conflict.ml[372,12978+48])
                                    Texp_ifthenelse
                                    expression (src/conflict.ml[372,12978+12]..src/conflict.ml[372,12978+30])
                                      Texp_apply
                                      expression (src/conflict.ml[372,12978+27]..src/conflict.ml[372,12978+28])
                                        Texp_ident "Stdlib!.>"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/conflict.ml[372,12978+12]..src/conflict.ml[372,12978+26])
                                            Texp_apply
                                            expression (src/conflict.ml[372,12978+12]..src/conflict.ml[372,12978+13])
                                              Texp_ident "Stdlib!.!"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/conflict.ml[372,12978+13]..src/conflict.ml[372,12978+26])
                                                  Texp_ident "unexplainable/1185"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/conflict.ml[372,12978+29]..src/conflict.ml[372,12978+30])
                                            Texp_constant Const_int 1
                                      ]
                                    expression (src/conflict.ml[372,12978+36]..src/conflict.ml[372,12978+39])
                                      Texp_constant Const_string("s",(src/conflict.ml[372,12978+37]..src/conflict.ml[372,12978+38]),None)
                                    Some
                                      expression (src/conflict.ml[372,12978+45]..src/conflict.ml[372,12978+47])
                                        Texp_constant Const_string("",(src/conflict.ml[372,12978+46]..src/conflict.ml[372,12978+46]),None)
                              ]
                        ]
                  ]
                None
          ]
    ]
  structure_item (src/conflict.ml[378,13147+0]..src/conflict.ml[551,19077+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/conflict.ml[378,13147+4]..src/conflict.ml[378,13147+6])
          Tpat_construct "()"
          []
          None
        expression (src/conflict.ml[379,13156+2]..src/conflict.ml[551,19077+5])
          Texp_ifthenelse
          expression (src/conflict.ml[379,13156+5]..src/conflict.ml[379,13156+21])
            Texp_ident "Dune__exe!.Settings.explain"
          expression (src/conflict.ml[379,13156+27]..src/conflict.ml[551,19077+5])
            Texp_let Nonrec
            [
              <def>
                pattern (src/conflict.ml[386,13437+8]..src/conflict.ml[386,13437+11])
                  Tpat_var "out/1205"
                expression (src/conflict.ml[387,13451+6]..src/conflict.ml[387,13451+45])
                  Texp_apply
                  expression (src/conflict.ml[387,13451+6]..src/conflict.ml[387,13451+14])
                    Texp_ident "Stdlib!.open_out"
                  [
                    <arg>
                      Nolabel
                      expression (src/conflict.ml[387,13451+15]..src/conflict.ml[387,13451+45])
                        Texp_apply
                        expression (src/conflict.ml[387,13451+30]..src/conflict.ml[387,13451+31])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (src/conflict.ml[387,13451+16]..src/conflict.ml[387,13451+29])
                              Texp_ident "Dune__exe!.Settings.base"
                          <arg>
                            Nolabel
                            expression (src/conflict.ml[387,13451+32]..src/conflict.ml[387,13451+44])
                              Texp_constant Const_string(".conflicts",(src/conflict.ml[387,13451+33]..src/conflict.ml[387,13451+43]),None)
                        ]
                  ]
            ]
            expression (src/conflict.ml[390,13505+4]..src/conflict.ml[549,19039+36])
              Texp_sequence
              expression (src/conflict.ml[390,13505+4]..src/conflict.ml[547,19007+5])
                Texp_apply
                expression (src/conflict.ml[390,13505+4]..src/conflict.ml[390,13505+17])
                  Texp_ident "Dune__exe!.Lr1.conflicts"
                [
                  <arg>
                    Nolabel
                    expression (src/conflict.ml[390,13505+18]..src/conflict.ml[547,19007+5])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/conflict.ml[390,13505+23]..src/conflict.ml[390,13505+27])
                            Tpat_var "toks/1247"
                          expression (src/conflict.ml[390,13505+28]..src/conflict.ml[545,18998+7]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/conflict.ml[390,13505+28]..src/conflict.ml[390,13505+32])
                                  Tpat_var "node/1248"
                                expression (src/conflict.ml[391,13541+4]..src/conflict.ml[545,18998+7])
                                  Texp_try
                                  expression (src/conflict.ml[405,14205+6]..src/conflict.ml[521,18051+15])
                                    Texp_letmodule "P/1268"
                                    module_expr (src/conflict.ml[405,14205+21]..src/conflict.ml[408,14299+10])
                                      Tmod_apply
                                      module_expr (src/conflict.ml[405,14205+21]..src/conflict.ml[405,14205+35])
                                        module_expr (src/conflict.ml[405,14205+21]..src/conflict.ml[405,14205+35])
                                          Tmod_ident "Dune__exe!.Lr1partial.Run"
                                      module_expr (src/conflict.ml[405,14205+37]..src/conflict.ml[408,14299+9])
                                        Tmod_structure
                                        [
                                          structure_item (src/conflict.ml[406,14249+8]..src/conflict.ml[406,14249+25])
                                            Tstr_value Nonrec
                                            [
                                              <def>
                                                pattern (src/conflict.ml[406,14249+12]..src/conflict.ml[406,14249+18])
                                                  Tpat_var "tokens/1249"
                                                expression (src/conflict.ml[406,14249+21]..src/conflict.ml[406,14249+25])
                                                  Texp_ident "toks/1247"
                                            ]
                                          structure_item (src/conflict.ml[407,14275+8]..src/conflict.ml[407,14275+23])
                                            Tstr_value Nonrec
                                            [
                                              <def>
                                                pattern (src/conflict.ml[407,14275+12]..src/conflict.ml[407,14275+16])
                                                  Tpat_var "goal/1250"
                                                expression (src/conflict.ml[407,14275+19]..src/conflict.ml[407,14275+23])
                                                  Texp_ident "node/1248"
                                            ]
                                        ]
                                    expression (src/conflict.ml[410,14314+6]..src/conflict.ml[521,18051+15])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/conflict.ml[410,14314+10]..src/conflict.ml[410,14314+17])
                                            Tpat_var "closure/1269"
                                          expression (src/conflict.ml[411,14334+8]..src/conflict.ml[411,14334+26])
                                            Texp_apply
                                            expression (src/conflict.ml[411,14334+8]..src/conflict.ml[411,14334+19])
                                              Texp_ident "Dune__exe!.Lr0.closure"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/conflict.ml[411,14334+20]..src/conflict.ml[411,14334+26])
                                                  Texp_ident "P/1268.goal"
                                            ]
                                      ]
                                      expression (src/conflict.ml[415,14421+6]..src/conflict.ml[521,18051+15])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/conflict.ml[415,14421+10]..src/conflict.ml[415,14421+23])
                                              Tpat_tuple
                                              [
                                                pattern (src/conflict.ml[415,14421+10]..src/conflict.ml[415,14421+15])
                                                  Tpat_var "shift/1374"
                                                pattern (src/conflict.ml[415,14421+17]..src/conflict.ml[415,14421+23])
                                                  Tpat_var "reduce/1375"
                                              ]
                                            expression (src/conflict.ml[415,14421+26]..src/conflict.ml[425,14791+22])
                                              Texp_apply
                                              expression (src/conflict.ml[415,14421+26]..src/conflict.ml[415,14421+39])
                                                Texp_ident "Dune__exe!.Item.Map.fold"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/conflict.ml[415,14421+40]..src/conflict.ml[425,14791+7])
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (src/conflict.ml[415,14421+45]..src/conflict.ml[415,14421+49])
                                                          Tpat_var "item/1376"
                                                        expression (src/conflict.ml[415,14421+50]..src/conflict.ml[424,14765+25]) ghost
                                                          Texp_function
                                                          Nolabel
                                                          [
                                                            <case>
                                                              pattern (src/conflict.ml[415,14421+50]..src/conflict.ml[415,14421+54])
                                                                Tpat_var "toks/1377"
                                                              expression (src/conflict.ml[415,14421+55]..src/conflict.ml[424,14765+25]) ghost
                                                                Texp_function
                                                                Nolabel
                                                                [
                                                                  <case>
                                                                    pattern (src/conflict.ml[415,14421+55]..src/conflict.ml[415,14421+70])
                                                                      Tpat_tuple
                                                                      [
                                                                        pattern (src/conflict.ml[415,14421+56]..src/conflict.ml[415,14421+61])
                                                                          Tpat_var "shift/1378"
                                                                        pattern (src/conflict.ml[415,14421+63]..src/conflict.ml[415,14421+69])
                                                                          Tpat_var "reduce/1379"
                                                                      ]
                                                                    expression (src/conflict.ml[416,14495+8]..src/conflict.ml[424,14765+25])
                                                                      Texp_match
                                                                      expression (src/conflict.ml[416,14495+14]..src/conflict.ml[416,14495+32])
                                                                        Texp_apply
                                                                        expression (src/conflict.ml[416,14495+14]..src/conflict.ml[416,14495+27])
                                                                          Texp_ident "Dune__exe!.Item.classify"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/conflict.ml[416,14495+28]..src/conflict.ml[416,14495+32])
                                                                              Texp_ident "item/1376"
                                                                        ]
                                                                      [
                                                                        <case>
                                                                          pattern (src/conflict.ml[417,14533+10]..src/conflict.ml[417,14533+38])
                                                                            Tpat_value
                                                                            pattern (src/conflict.ml[417,14533+10]..src/conflict.ml[417,14533+38])
                                                                              Tpat_construct "Item.Shift"
                                                                              [
                                                                                pattern (src/conflict.ml[417,14533+22]..src/conflict.ml[417,14533+34])
                                                                                  Tpat_construct "Symbol.T"
                                                                                  [
                                                                                    pattern (src/conflict.ml[417,14533+31]..src/conflict.ml[417,14533+34])
                                                                                      Tpat_var "tok/1380"
                                                                                  ]
                                                                                  None
                                                                                pattern (src/conflict.ml[417,14533+36]..src/conflict.ml[417,14533+37])
                                                                                  Tpat_any
                                                                              ]
                                                                              None
                                                                          <when>
                                                                            expression (src/conflict.ml[418,14572+15]..src/conflict.ml[418,14572+41])
                                                                              Texp_apply
                                                                              expression (src/conflict.ml[418,14572+15]..src/conflict.ml[418,14572+29])
                                                                                Texp_ident "Dune__exe!.Grammar.Terminal.equal"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/conflict.ml[418,14572+30]..src/conflict.ml[418,14572+33])
                                                                                    Texp_ident "tok/1380"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/conflict.ml[418,14572+34]..src/conflict.ml[418,14572+41])
                                                                                    Texp_ident "P/1268.token"
                                                                              ]
                                                                          expression (src/conflict.ml[419,14617+14]..src/conflict.ml[419,14617+31])
                                                                            Texp_tuple
                                                                            [
                                                                              expression (src/conflict.ml[419,14617+14]..src/conflict.ml[419,14617+23])
                                                                                Texp_apply
                                                                                expression (src/conflict.ml[419,14617+20]..src/conflict.ml[419,14617+21])
                                                                                  Texp_ident "Stdlib!.+"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/conflict.ml[419,14617+14]..src/conflict.ml[419,14617+19])
                                                                                      Texp_ident "shift/1378"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/conflict.ml[419,14617+22]..src/conflict.ml[419,14617+23])
                                                                                      Texp_constant Const_int 1
                                                                                ]
                                                                              expression (src/conflict.ml[419,14617+25]..src/conflict.ml[419,14617+31])
                                                                                Texp_ident "reduce/1379"
                                                                            ]
                                                                        <case>
                                                                          pattern (src/conflict.ml[420,14649+10]..src/conflict.ml[420,14649+23])
                                                                            Tpat_value
                                                                            pattern (src/conflict.ml[420,14649+10]..src/conflict.ml[420,14649+23])
                                                                              Tpat_construct "Item.Reduce"
                                                                              [
                                                                                pattern (src/conflict.ml[420,14649+22]..src/conflict.ml[420,14649+23])
                                                                                  Tpat_any
                                                                              ]
                                                                              None
                                                                          <when>
                                                                            expression (src/conflict.ml[421,14673+15]..src/conflict.ml[421,14673+43])
                                                                              Texp_apply
                                                                              expression (src/conflict.ml[421,14673+15]..src/conflict.ml[421,14673+30])
                                                                                Texp_ident "Dune__exe!.Grammar.TerminalSet.mem"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/conflict.ml[421,14673+31]..src/conflict.ml[421,14673+38])
                                                                                    Texp_ident "P/1268.token"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/conflict.ml[421,14673+39]..src/conflict.ml[421,14673+43])
                                                                                    Texp_ident "toks/1377"
                                                                              ]
                                                                          expression (src/conflict.ml[422,14720+12]..src/conflict.ml[422,14720+29])
                                                                            Texp_tuple
                                                                            [
                                                                              expression (src/conflict.ml[422,14720+12]..src/conflict.ml[422,14720+17])
                                                                                Texp_ident "shift/1378"
                                                                              expression (src/conflict.ml[422,14720+19]..src/conflict.ml[422,14720+29])
                                                                                Texp_apply
                                                                                expression (src/conflict.ml[422,14720+26]..src/conflict.ml[422,14720+27])
                                                                                  Texp_ident "Stdlib!.+"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/conflict.ml[422,14720+19]..src/conflict.ml[422,14720+25])
                                                                                      Texp_ident "reduce/1379"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/conflict.ml[422,14720+28]..src/conflict.ml[422,14720+29])
                                                                                      Texp_constant Const_int 1
                                                                                ]
                                                                            ]
                                                                        <case>
                                                                          pattern (src/conflict.ml[423,14750+10]..src/conflict.ml[423,14750+11])
                                                                            Tpat_value
                                                                            pattern (src/conflict.ml[423,14750+10]..src/conflict.ml[423,14750+11])
                                                                              Tpat_any
                                                                          expression (src/conflict.ml[424,14765+12]..src/conflict.ml[424,14765+25])
                                                                            Texp_tuple
                                                                            [
                                                                              expression (src/conflict.ml[424,14765+12]..src/conflict.ml[424,14765+17])
                                                                                Texp_ident "shift/1378"
                                                                              expression (src/conflict.ml[424,14765+19]..src/conflict.ml[424,14765+25])
                                                                                Texp_ident "reduce/1379"
                                                                            ]
                                                                      ]
                                                                ]
                                                          ]
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (src/conflict.ml[425,14791+8]..src/conflict.ml[425,14791+15])
                                                    Texp_ident "closure/1269"
                                                <arg>
                                                  Nolabel
                                                  expression (src/conflict.ml[425,14791+16]..src/conflict.ml[425,14791+22])
                                                    Texp_tuple
                                                    [
                                                      expression (src/conflict.ml[425,14791+17]..src/conflict.ml[425,14791+18])
                                                        Texp_constant Const_int 0
                                                      expression (src/conflict.ml[425,14791+20]..src/conflict.ml[425,14791+21])
                                                        Texp_constant Const_int 0
                                                    ]
                                              ]
                                        ]
                                        expression (src/conflict.ml[427,14818+6]..src/conflict.ml[521,18051+15])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/conflict.ml[427,14818+10]..src/conflict.ml[427,14818+14])
                                                Tpat_var "kind/1382"
                                              expression (src/conflict.ml[428,14835+8]..src/conflict.ml[433,14982+25])
                                                Texp_ifthenelse
                                                expression (src/conflict.ml[428,14835+11]..src/conflict.ml[428,14835+38])
                                                  Texp_apply
                                                  expression (src/conflict.ml[428,14835+23]..src/conflict.ml[428,14835+25])
                                                    Texp_ident "Stdlib!.&&"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/conflict.ml[428,14835+11]..src/conflict.ml[428,14835+22])
                                                        Texp_apply
                                                        expression (src/conflict.ml[428,14835+18]..src/conflict.ml[428,14835+19])
                                                          Texp_ident "Stdlib!.>"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/conflict.ml[428,14835+12]..src/conflict.ml[428,14835+17])
                                                              Texp_ident "shift/1374"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/conflict.ml[428,14835+20]..src/conflict.ml[428,14835+21])
                                                              Texp_constant Const_int 0
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (src/conflict.ml[428,14835+26]..src/conflict.ml[428,14835+38])
                                                        Texp_apply
                                                        expression (src/conflict.ml[428,14835+34]..src/conflict.ml[428,14835+35])
                                                          Texp_ident "Stdlib!.>"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/conflict.ml[428,14835+27]..src/conflict.ml[428,14835+33])
                                                              Texp_ident "reduce/1375"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/conflict.ml[428,14835+36]..src/conflict.ml[428,14835+37])
                                                              Texp_constant Const_int 1
                                                        ]
                                                  ]
                                                expression (src/conflict.ml[429,14879+10]..src/conflict.ml[429,14879+31])
                                                  Texp_constant Const_string("shift/reduce/reduce",(src/conflict.ml[429,14879+11]..src/conflict.ml[429,14879+30]),None)
                                                Some
                                                  expression (src/conflict.ml[430,14911+13]..src/conflict.ml[433,14982+25])
                                                    Texp_ifthenelse
                                                    expression (src/conflict.ml[430,14911+16]..src/conflict.ml[430,14911+27])
                                                      Texp_apply
                                                      expression (src/conflict.ml[430,14911+23]..src/conflict.ml[430,14911+24])
                                                        Texp_ident "Stdlib!.>"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/conflict.ml[430,14911+17]..src/conflict.ml[430,14911+22])
                                                            Texp_ident "shift/1374"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/conflict.ml[430,14911+25]..src/conflict.ml[430,14911+26])
                                                            Texp_constant Const_int 0
                                                      ]
                                                    expression (src/conflict.ml[431,14944+10]..src/conflict.ml[431,14944+24])
                                                      Texp_constant Const_string("shift/reduce",(src/conflict.ml[431,14944+11]..src/conflict.ml[431,14944+23]),None)
                                                    Some
                                                      expression (src/conflict.ml[433,14982+10]..src/conflict.ml[433,14982+25])
                                                        Texp_constant Const_string("reduce/reduce",(src/conflict.ml[433,14982+11]..src/conflict.ml[433,14982+24]),None)
                                          ]
                                          expression (src/conflict.ml[438,15074+6]..src/conflict.ml[521,18051+15])
                                            Texp_sequence
                                            expression (src/conflict.ml[438,15074+6]..src/conflict.ml[449,15588+28])
                                              Texp_apply
                                              expression (src/conflict.ml[438,15074+6]..src/conflict.ml[438,15074+20])
                                                Texp_ident "Stdlib!.Printf.fprintf"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/conflict.ml[438,15074+21]..src/conflict.ml[438,15074+24])
                                                    Texp_ident "out/1205"
                                                <arg>
                                                  Nolabel
                                                  expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64])
                                                    Texp_construct "CamlinternalFormatBasics.Format"
                                                    [
                                                      expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                        [
                                                          expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                            Texp_constant Const_string("\n** Conflict (",(src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost,None)
                                                          expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.String"
                                                            [
                                                              expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                []
                                                              expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                [
                                                                  expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                    Texp_constant Const_string(") in state ",(src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost,None)
                                                                  expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.Int"
                                                                    [
                                                                      expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.Int_d"
                                                                        []
                                                                      expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                        []
                                                                      expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.No_precision"
                                                                        []
                                                                      expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                        [
                                                                          expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                            Texp_constant Const_string(".\n** Token",(src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost,None)
                                                                          expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.String"
                                                                            [
                                                                              expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                []
                                                                              expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                [
                                                                                  expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                                    Texp_constant Const_string(" involved: ",(src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost,None)
                                                                                  expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.String"
                                                                                    [
                                                                                      expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                        []
                                                                                      expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                        [
                                                                                          expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                                            Texp_constant Const_char 0a
                                                                                          expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.String"
                                                                                            [
                                                                                              expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                []
                                                                                              expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                [
                                                                                                  expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                                                    Texp_constant Const_string("** This state is reached from ",(src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost,None)
                                                                                                  expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                                                    Texp_construct "CamlinternalFormatBasics.String"
                                                                                                    [
                                                                                                      expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                        []
                                                                                                      expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                        [
                                                                                                          expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                                                            Texp_constant Const_string(" after reading:\n\n",(src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost,None)
                                                                                                          expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                                                            Texp_construct "CamlinternalFormatBasics.String"
                                                                                                            [
                                                                                                              expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                                []
                                                                                                              expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                                                                Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                                                [
                                                                                                                  expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                                                                    Texp_constant Const_char 0a
                                                                                                                  expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                                                                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                                    []
                                                                                                                ]
                                                                                                            ]
                                                                                                        ]
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                      expression (src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost
                                                        Texp_constant Const_string("\n** Conflict (%s) in state %d.\n** Token%s involved: %s\n%s** This state is reached from %s after reading:\n\n%s\n",(src/conflict.ml[438,15074+25]..src/conflict.ml[441,15182+64]) ghost,None)
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (src/conflict.ml[442,15247+6]..src/conflict.ml[442,15247+10])
                                                    Texp_ident "kind/1382"
                                                <arg>
                                                  Nolabel
                                                  expression (src/conflict.ml[442,15247+11]..src/conflict.ml[442,15247+28])
                                                    Texp_apply
                                                    expression (src/conflict.ml[442,15247+12]..src/conflict.ml[442,15247+22])
                                                      Texp_ident "Dune__exe!.Lr1.number"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/conflict.ml[442,15247+23]..src/conflict.ml[442,15247+27])
                                                          Texp_ident "node/1248"
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (src/conflict.ml[443,15276+6]..src/conflict.ml[443,15276+57])
                                                    Texp_ifthenelse
                                                    expression (src/conflict.ml[443,15276+10]..src/conflict.ml[443,15276+39])
                                                      Texp_apply
                                                      expression (src/conflict.ml[443,15276+36]..src/conflict.ml[443,15276+37])
                                                        Texp_ident "Stdlib!.>"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/conflict.ml[443,15276+10]..src/conflict.ml[443,15276+35])
                                                            Texp_apply
                                                            expression (src/conflict.ml[443,15276+10]..src/conflict.ml[443,15276+30])
                                                              Texp_ident "Dune__exe!.Grammar.TerminalSet.cardinal"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/conflict.ml[443,15276+31]..src/conflict.ml[443,15276+35])
                                                                  Texp_ident "toks/1247"
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/conflict.ml[443,15276+38]..src/conflict.ml[443,15276+39])
                                                            Texp_constant Const_int 1
                                                      ]
                                                    expression (src/conflict.ml[443,15276+45]..src/conflict.ml[443,15276+48])
                                                      Texp_constant Const_string("s",(src/conflict.ml[443,15276+46]..src/conflict.ml[443,15276+47]),None)
                                                    Some
                                                      expression (src/conflict.ml[443,15276+54]..src/conflict.ml[443,15276+56])
                                                        Texp_constant Const_string("",(src/conflict.ml[443,15276+55]..src/conflict.ml[443,15276+55]),None)
                                                <arg>
                                                  Nolabel
                                                  expression (src/conflict.ml[444,15334+6]..src/conflict.ml[444,15334+30])
                                                    Texp_apply
                                                    expression (src/conflict.ml[444,15334+7]..src/conflict.ml[444,15334+24])
                                                      Texp_ident "Dune__exe!.Grammar.TerminalSet.print"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/conflict.ml[444,15334+25]..src/conflict.ml[444,15334+29])
                                                          Texp_ident "toks/1247"
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (src/conflict.ml[445,15365+6]..src/conflict.ml[447,15517+14])
                                                    Texp_ifthenelse
                                                    expression (src/conflict.ml[445,15365+10]..src/conflict.ml[445,15365+39])
                                                      Texp_apply
                                                      expression (src/conflict.ml[445,15365+36]..src/conflict.ml[445,15365+37])
                                                        Texp_ident "Stdlib!.>"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/conflict.ml[445,15365+10]..src/conflict.ml[445,15365+35])
                                                            Texp_apply
                                                            expression (src/conflict.ml[445,15365+10]..src/conflict.ml[445,15365+30])
                                                              Texp_ident "Dune__exe!.Grammar.TerminalSet.cardinal"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/conflict.ml[445,15365+31]..src/conflict.ml[445,15365+35])
                                                                  Texp_ident "toks/1247"
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/conflict.ml[445,15365+38]..src/conflict.ml[445,15365+39])
                                                            Texp_constant Const_int 1
                                                      ]
                                                    expression (src/conflict.ml[446,15410+8]..src/conflict.ml[446,15410+106])
                                                      Texp_apply
                                                      expression (src/conflict.ml[446,15410+8]..src/conflict.ml[446,15410+22])
                                                        Texp_ident "Stdlib!.Printf.sprintf"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/conflict.ml[446,15410+23]..src/conflict.ml[446,15410+81])
                                                            Texp_construct "CamlinternalFormatBasics.Format"
                                                            [
                                                              expression (src/conflict.ml[446,15410+23]..src/conflict.ml[446,15410+81]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                [
                                                                  expression (src/conflict.ml[446,15410+23]..src/conflict.ml[446,15410+81]) ghost
                                                                    Texp_constant Const_string("** The following explanations concentrate on token ",(src/conflict.ml[446,15410+23]..src/conflict.ml[446,15410+81]) ghost,None)
                                                                  expression (src/conflict.ml[446,15410+23]..src/conflict.ml[446,15410+81]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.String"
                                                                    [
                                                                      expression (src/conflict.ml[446,15410+23]..src/conflict.ml[446,15410+81]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                        []
                                                                      expression (src/conflict.ml[446,15410+23]..src/conflict.ml[446,15410+81]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                        [
                                                                          expression (src/conflict.ml[446,15410+23]..src/conflict.ml[446,15410+81]) ghost
                                                                            Texp_constant Const_string(".\n",(src/conflict.ml[446,15410+23]..src/conflict.ml[446,15410+81]) ghost,None)
                                                                          expression (src/conflict.ml[446,15410+23]..src/conflict.ml[446,15410+81]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                            []
                                                                        ]
                                                                    ]
                                                                ]
                                                              expression (src/conflict.ml[446,15410+23]..src/conflict.ml[446,15410+81]) ghost
                                                                Texp_constant Const_string("** The following explanations concentrate on token %s.\n",(src/conflict.ml[446,15410+23]..src/conflict.ml[446,15410+81]) ghost,None)
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/conflict.ml[446,15410+82]..src/conflict.ml[446,15410+106])
                                                            Texp_apply
                                                            expression (src/conflict.ml[446,15410+83]..src/conflict.ml[446,15410+97])
                                                              Texp_ident "Dune__exe!.Grammar.Terminal.print"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/conflict.ml[446,15410+98]..src/conflict.ml[446,15410+105])
                                                                  Texp_ident "P/1268.token"
                                                            ]
                                                      ]
                                                    Some
                                                      expression (src/conflict.ml[447,15517+11]..src/conflict.ml[447,15517+13])
                                                        Texp_constant Const_string("",(src/conflict.ml[447,15517+12]..src/conflict.ml[447,15517+12]),None)
                                                <arg>
                                                  Nolabel
                                                  expression (src/conflict.ml[448,15532+6]..src/conflict.ml[448,15532+55])
                                                    Texp_apply
                                                    expression (src/conflict.ml[448,15532+7]..src/conflict.ml[448,15532+24])
                                                      Texp_ident "Dune__exe!.Grammar.Nonterminal.print"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/conflict.ml[448,15532+25]..src/conflict.ml[448,15532+30])
                                                          Texp_construct "false"
                                                          []
                                                      <arg>
                                                        Nolabel
                                                        expression (src/conflict.ml[448,15532+31]..src/conflict.ml[448,15532+54])
                                                          Texp_apply
                                                          expression (src/conflict.ml[448,15532+32]..src/conflict.ml[448,15532+44])
                                                            Texp_ident "Dune__exe!.Item.startnt"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/conflict.ml[448,15532+45]..src/conflict.ml[448,15532+53])
                                                                Texp_ident "P/1268.source"
                                                          ]
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (src/conflict.ml[449,15588+6]..src/conflict.ml[449,15588+28])
                                                    Texp_apply
                                                    expression (src/conflict.ml[449,15588+7]..src/conflict.ml[449,15588+20])
                                                      Texp_ident "Dune__exe!.Grammar.Symbol.printa"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/conflict.ml[449,15588+21]..src/conflict.ml[449,15588+27])
                                                          Texp_ident "P/1268.path"
                                                    ]
                                              ]
                                            expression (src/conflict.ml[457,15881+6]..src/conflict.ml[521,18051+15])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/conflict.ml[457,15881+10]..src/conflict.ml[457,15881+33])
                                                    Tpat_tuple
                                                    [
                                                      pattern (src/conflict.ml[457,15881+11]..src/conflict.ml[457,15881+12])
                                                        extra
                                                          Tpat_extra_constraint
                                                          core_type (src/conflict.ml[457,15881+15]..src/conflict.ml[457,15881+19])
                                                            Ttyp_constr "bool/5!"
                                                            []
                                                        Tpat_any
                                                      pattern (src/conflict.ml[457,15881+22]..src/conflict.ml[457,15881+33])
                                                        Tpat_var "derivations/1444"
                                                    ]
                                                  expression (src/conflict.ml[458,15917+8]..src/conflict.ml[480,16664+40])
                                                    Texp_apply
                                                    expression (src/conflict.ml[458,15917+8]..src/conflict.ml[458,15917+21])
                                                      Texp_ident "Dune__exe!.Item.Map.fold"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/conflict.ml[458,15917+22]..src/conflict.ml[480,16664+9])
                                                          Texp_function
                                                          Nolabel
                                                          [
                                                            <case>
                                                              pattern (src/conflict.ml[458,15917+27]..src/conflict.ml[458,15917+31])
                                                                Tpat_var "item/1445"
                                                              expression (src/conflict.ml[458,15917+32]..src/conflict.ml[478,16637+25]) ghost
                                                                Texp_function
                                                                Nolabel
                                                                [
                                                                  <case>
                                                                    pattern (src/conflict.ml[458,15917+32]..src/conflict.ml[458,15917+36])
                                                                      Tpat_var "toks/1446"
                                                                    expression (src/conflict.ml[458,15917+37]..src/conflict.ml[478,16637+25]) ghost
                                                                      Texp_function
                                                                      Nolabel
                                                                      [
                                                                        <case>
                                                                          pattern (src/conflict.ml[458,15917+37]..src/conflict.ml[458,15917+80])
                                                                            Tpat_tuple
                                                                            [
                                                                              pattern (src/conflict.ml[458,15917+38]..src/conflict.ml[458,15917+66])
                                                                                Tpat_var "still_looking_for_shift_item/1447"
                                                                              pattern (src/conflict.ml[458,15917+68]..src/conflict.ml[458,15917+79])
                                                                                Tpat_var "derivations/1448"
                                                                            ]
                                                                          expression (src/conflict.ml[459,16001+10]..src/conflict.ml[478,16637+25])
                                                                            Texp_match
                                                                            expression (src/conflict.ml[459,16001+16]..src/conflict.ml[459,16001+34])
                                                                              Texp_apply
                                                                              expression (src/conflict.ml[459,16001+16]..src/conflict.ml[459,16001+29])
                                                                                Texp_ident "Dune__exe!.Item.classify"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/conflict.ml[459,16001+30]..src/conflict.ml[459,16001+34])
                                                                                    Texp_ident "item/1445"
                                                                              ]
                                                                            [
                                                                              <case>
                                                                                pattern (src/conflict.ml[461,16042+12]..src/conflict.ml[461,16042+40])
                                                                                  Tpat_value
                                                                                  pattern (src/conflict.ml[461,16042+12]..src/conflict.ml[461,16042+40])
                                                                                    Tpat_construct "Item.Shift"
                                                                                    [
                                                                                      pattern (src/conflict.ml[461,16042+24]..src/conflict.ml[461,16042+36])
                                                                                        Tpat_construct "Symbol.T"
                                                                                        [
                                                                                          pattern (src/conflict.ml[461,16042+33]..src/conflict.ml[461,16042+36])
                                                                                            Tpat_var "tok/1449"
                                                                                        ]
                                                                                        None
                                                                                      pattern (src/conflict.ml[461,16042+38]..src/conflict.ml[461,16042+39])
                                                                                        Tpat_any
                                                                                    ]
                                                                                    None
                                                                                <when>
                                                                                  expression (src/conflict.ml[462,16083+17]..src/conflict.ml[462,16083+77])
                                                                                    Texp_apply
                                                                                    expression (src/conflict.ml[462,16083+46]..src/conflict.ml[462,16083+48])
                                                                                      Texp_ident "Stdlib!.&&"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/conflict.ml[462,16083+17]..src/conflict.ml[462,16083+45])
                                                                                          Texp_ident "still_looking_for_shift_item/1447"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/conflict.ml[462,16083+49]..src/conflict.ml[462,16083+77])
                                                                                          Texp_apply
                                                                                          expression (src/conflict.ml[462,16083+50]..src/conflict.ml[462,16083+64])
                                                                                            Texp_ident "Dune__exe!.Grammar.Terminal.equal"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/conflict.ml[462,16083+65]..src/conflict.ml[462,16083+68])
                                                                                                Texp_ident "tok/1449"
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/conflict.ml[462,16083+69]..src/conflict.ml[462,16083+76])
                                                                                                Texp_ident "P/1268.token"
                                                                                          ]
                                                                                    ]
                                                                                expression (src/conflict.ml[464,16165+14]..src/conflict.ml[466,16260+54])
                                                                                  Texp_tuple
                                                                                  [
                                                                                    expression (src/conflict.ml[464,16165+14]..src/conflict.ml[464,16165+19])
                                                                                      Texp_construct "false"
                                                                                      []
                                                                                    expression (src/conflict.ml[465,16186+14]..src/conflict.ml[466,16260+54])
                                                                                      Texp_let Nonrec
                                                                                      [
                                                                                        <def>
                                                                                          pattern (src/conflict.ml[465,16186+18]..src/conflict.ml[465,16186+28])
                                                                                            Tpat_var "derivation/1450"
                                                                                          expression (src/conflict.ml[465,16186+31]..src/conflict.ml[465,16186+70])
                                                                                            Texp_apply
                                                                                            expression (src/conflict.ml[465,16186+31]..src/conflict.ml[465,16186+49])
                                                                                              Texp_ident "explain_shift_item/634"
                                                                                            [
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/conflict.ml[465,16186+50]..src/conflict.ml[465,16186+58])
                                                                                                  Texp_ident "P/1268.source"
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/conflict.ml[465,16186+59]..src/conflict.ml[465,16186+65])
                                                                                                  Texp_ident "P/1268.path"
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/conflict.ml[465,16186+66]..src/conflict.ml[465,16186+70])
                                                                                                  Texp_ident "item/1445"
                                                                                            ]
                                                                                      ]
                                                                                      expression (src/conflict.ml[466,16260+14]..src/conflict.ml[466,16260+54])
                                                                                        Texp_apply
                                                                                        expression (src/conflict.ml[466,16260+14]..src/conflict.ml[466,16260+26])
                                                                                          Texp_ident "Dune__exe!.Item.Map.add"
                                                                                        [
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/conflict.ml[466,16260+27]..src/conflict.ml[466,16260+31])
                                                                                              Texp_ident "item/1445"
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/conflict.ml[466,16260+32]..src/conflict.ml[466,16260+42])
                                                                                              Texp_ident "derivation/1450"
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/conflict.ml[466,16260+43]..src/conflict.ml[466,16260+54])
                                                                                              Texp_ident "derivations/1448"
                                                                                        ]
                                                                                  ]
                                                                              <case>
                                                                                pattern (src/conflict.ml[468,16316+12]..src/conflict.ml[468,16316+25])
                                                                                  Tpat_value
                                                                                  pattern (src/conflict.ml[468,16316+12]..src/conflict.ml[468,16316+25])
                                                                                    Tpat_construct "Item.Reduce"
                                                                                    [
                                                                                      pattern (src/conflict.ml[468,16316+24]..src/conflict.ml[468,16316+25])
                                                                                        Tpat_any
                                                                                    ]
                                                                                    None
                                                                                <when>
                                                                                  expression (src/conflict.ml[469,16342+17]..src/conflict.ml[469,16342+45])
                                                                                    Texp_apply
                                                                                    expression (src/conflict.ml[469,16342+17]..src/conflict.ml[469,16342+32])
                                                                                      Texp_ident "Dune__exe!.Grammar.TerminalSet.mem"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/conflict.ml[469,16342+33]..src/conflict.ml[469,16342+40])
                                                                                          Texp_ident "P/1268.token"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/conflict.ml[469,16342+41]..src/conflict.ml[469,16342+45])
                                                                                          Texp_ident "toks/1446"
                                                                                    ]
                                                                                expression (src/conflict.ml[471,16392+14]..src/conflict.ml[473,16519+54])
                                                                                  Texp_tuple
                                                                                  [
                                                                                    expression (src/conflict.ml[471,16392+14]..src/conflict.ml[471,16392+42])
                                                                                      Texp_ident "still_looking_for_shift_item/1447"
                                                                                    expression (src/conflict.ml[472,16436+14]..src/conflict.ml[473,16519+54])
                                                                                      Texp_let Nonrec
                                                                                      [
                                                                                        <def>
                                                                                          pattern (src/conflict.ml[472,16436+18]..src/conflict.ml[472,16436+28])
                                                                                            Tpat_var "derivation/1451"
                                                                                          expression (src/conflict.ml[472,16436+31]..src/conflict.ml[472,16436+79])
                                                                                            Texp_apply
                                                                                            expression (src/conflict.ml[472,16436+31]..src/conflict.ml[472,16436+50])
                                                                                              Texp_ident "explain_reduce_item/1152"
                                                                                            [
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/conflict.ml[472,16436+51]..src/conflict.ml[472,16436+58])
                                                                                                  Texp_ident "P/1268.token"
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/conflict.ml[472,16436+59]..src/conflict.ml[472,16436+67])
                                                                                                  Texp_ident "P/1268.source"
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/conflict.ml[472,16436+68]..src/conflict.ml[472,16436+74])
                                                                                                  Texp_ident "P/1268.path"
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/conflict.ml[472,16436+75]..src/conflict.ml[472,16436+79])
                                                                                                  Texp_ident "item/1445"
                                                                                            ]
                                                                                      ]
                                                                                      expression (src/conflict.ml[473,16519+14]..src/conflict.ml[473,16519+54])
                                                                                        Texp_apply
                                                                                        expression (src/conflict.ml[473,16519+14]..src/conflict.ml[473,16519+26])
                                                                                          Texp_ident "Dune__exe!.Item.Map.add"
                                                                                        [
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/conflict.ml[473,16519+27]..src/conflict.ml[473,16519+31])
                                                                                              Texp_ident "item/1445"
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/conflict.ml[473,16519+32]..src/conflict.ml[473,16519+42])
                                                                                              Texp_ident "derivation/1451"
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/conflict.ml[473,16519+43]..src/conflict.ml[473,16519+54])
                                                                                              Texp_ident "derivations/1448"
                                                                                        ]
                                                                                  ]
                                                                              <case>
                                                                                pattern (src/conflict.ml[475,16575+12]..src/conflict.ml[475,16575+13])
                                                                                  Tpat_value
                                                                                  pattern (src/conflict.ml[475,16575+12]..src/conflict.ml[475,16575+13])
                                                                                    Tpat_any
                                                                                expression (src/conflict.ml[477,16593+14]..src/conflict.ml[478,16637+25])
                                                                                  Texp_tuple
                                                                                  [
                                                                                    expression (src/conflict.ml[477,16593+14]..src/conflict.ml[477,16593+42])
                                                                                      Texp_ident "still_looking_for_shift_item/1447"
                                                                                    expression (src/conflict.ml[478,16637+14]..src/conflict.ml[478,16637+25])
                                                                                      Texp_ident "derivations/1448"
                                                                                  ]
                                                                            ]
                                                                      ]
                                                                ]
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (src/conflict.ml[480,16664+10]..src/conflict.ml[480,16664+17])
                                                          Texp_ident "closure/1269"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/conflict.ml[480,16664+18]..src/conflict.ml[480,16664+40])
                                                          Texp_tuple
                                                          [
                                                            expression (src/conflict.ml[480,16664+19]..src/conflict.ml[480,16664+23])
                                                              Texp_construct "true"
                                                              []
                                                            expression (src/conflict.ml[480,16664+25]..src/conflict.ml[480,16664+39])
                                                              Texp_ident "Dune__exe!.Item.Map.empty"
                                                          ]
                                                    ]
                                              ]
                                              expression (src/conflict.ml[488,16981+6]..src/conflict.ml[521,18051+15])
                                                Texp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (src/conflict.ml[488,16981+10]..src/conflict.ml[488,16981+30])
                                                      Tpat_tuple
                                                      [
                                                        pattern (src/conflict.ml[488,16981+10]..src/conflict.ml[488,16981+17])
                                                          Tpat_var "context/1453"
                                                        pattern (src/conflict.ml[488,16981+19]..src/conflict.ml[488,16981+30])
                                                          Tpat_var "derivations/1454"
                                                      ]
                                                    expression (src/conflict.ml[489,17014+8]..src/conflict.ml[489,17014+37])
                                                      Texp_apply
                                                      expression (src/conflict.ml[489,17014+8]..src/conflict.ml[489,17014+25])
                                                        Texp_ident "Dune__exe!.Derivation.factor"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/conflict.ml[489,17014+26]..src/conflict.ml[489,17014+37])
                                                            Texp_ident "derivations/1444"
                                                      ]
                                                ]
                                                expression (src/conflict.ml[494,17103+6]..src/conflict.ml[521,18051+15])
                                                  Texp_sequence
                                                  expression (src/conflict.ml[494,17103+6]..src/conflict.ml[496,17211+108])
                                                    Texp_apply
                                                    expression (src/conflict.ml[494,17103+6]..src/conflict.ml[494,17103+20])
                                                      Texp_ident "Stdlib!.Printf.fprintf"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/conflict.ml[494,17103+21]..src/conflict.ml[494,17103+24])
                                                          Texp_ident "out/1205"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/conflict.ml[495,17128+8]..src/conflict.ml[496,17211+108])
                                                          Texp_construct "CamlinternalFormatBasics.Format"
                                                          [
                                                            expression (src/conflict.ml[495,17128+8]..src/conflict.ml[496,17211+108]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                              [
                                                                expression (src/conflict.ml[495,17128+8]..src/conflict.ml[496,17211+108]) ghost
                                                                  Texp_constant Const_string("\n** The derivations that appear below have the following common factor:\n** (The question mark symbol (?) represents the spot where the derivations begin to differ.)\n\n",(src/conflict.ml[495,17128+8]..src/conflict.ml[496,17211+108]) ghost,None)
                                                                expression (src/conflict.ml[495,17128+8]..src/conflict.ml[496,17211+108]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                  []
                                                              ]
                                                            expression (src/conflict.ml[495,17128+8]..src/conflict.ml[496,17211+108]) ghost
                                                              Texp_constant Const_string("\n** The derivations that appear below have the following common factor:\n** (The question mark symbol (?) represents the spot where the derivations begin to differ.)\n\n",(src/conflict.ml[495,17128+8]..src/conflict.ml[496,17211+108]) ghost,None)
                                                          ]
                                                    ]
                                                  expression (src/conflict.ml[497,17321+6]..src/conflict.ml[521,18051+15])
                                                    Texp_sequence
                                                    expression (src/conflict.ml[497,17321+6]..src/conflict.ml[497,17321+35])
                                                      Texp_apply
                                                      expression (src/conflict.ml[497,17321+6]..src/conflict.ml[497,17321+23])
                                                        Texp_ident "Dune__exe!.Derivation.printc"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/conflict.ml[497,17321+24]..src/conflict.ml[497,17321+27])
                                                            Texp_ident "out/1205"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/conflict.ml[497,17321+28]..src/conflict.ml[497,17321+35])
                                                            Texp_ident "context/1453"
                                                      ]
                                                    expression (src/conflict.ml[501,17407+6]..src/conflict.ml[521,18051+15])
                                                      Texp_sequence
                                                      expression (src/conflict.ml[501,17407+6]..src/conflict.ml[519,18029+19])
                                                        Texp_apply
                                                        expression (src/conflict.ml[501,17407+6]..src/conflict.ml[501,17407+19])
                                                          Texp_ident "Dune__exe!.Item.Map.iter"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/conflict.ml[501,17407+20]..src/conflict.ml[519,18029+7])
                                                              Texp_function
                                                              Nolabel
                                                              [
                                                                <case>
                                                                  pattern (src/conflict.ml[501,17407+25]..src/conflict.ml[501,17407+29])
                                                                    Tpat_var "item/1455"
                                                                  expression (src/conflict.ml[501,17407+30]..src/conflict.ml[517,17988+39]) ghost
                                                                    Texp_function
                                                                    Nolabel
                                                                    [
                                                                      <case>
                                                                        pattern (src/conflict.ml[501,17407+30]..src/conflict.ml[501,17407+40])
                                                                          Tpat_var "derivation/1456"
                                                                        expression (src/conflict.ml[503,17452+8]..src/conflict.ml[517,17988+39])
                                                                          Texp_sequence
                                                                          expression (src/conflict.ml[503,17452+8]..src/conflict.ml[506,17559+34])
                                                                            Texp_apply
                                                                            expression (src/conflict.ml[503,17452+8]..src/conflict.ml[503,17452+22])
                                                                              Texp_ident "Stdlib!.Printf.fprintf"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/conflict.ml[503,17452+23]..src/conflict.ml[503,17452+26])
                                                                                  Texp_ident "out/1205"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/conflict.ml[504,17479+10]..src/conflict.ml[504,17479+51])
                                                                                  Texp_construct "CamlinternalFormatBasics.Format"
                                                                                  [
                                                                                    expression (src/conflict.ml[504,17479+10]..src/conflict.ml[504,17479+51]) ghost
                                                                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                      [
                                                                                        expression (src/conflict.ml[504,17479+10]..src/conflict.ml[504,17479+51]) ghost
                                                                                          Texp_constant Const_string("\n** In state ",(src/conflict.ml[504,17479+10]..src/conflict.ml[504,17479+51]) ghost,None)
                                                                                        expression (src/conflict.ml[504,17479+10]..src/conflict.ml[504,17479+51]) ghost
                                                                                          Texp_construct "CamlinternalFormatBasics.Int"
                                                                                          [
                                                                                            expression (src/conflict.ml[504,17479+10]..src/conflict.ml[504,17479+51]) ghost
                                                                                              Texp_construct "CamlinternalFormatBasics.Int_d"
                                                                                              []
                                                                                            expression (src/conflict.ml[504,17479+10]..src/conflict.ml[504,17479+51]) ghost
                                                                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                              []
                                                                                            expression (src/conflict.ml[504,17479+10]..src/conflict.ml[504,17479+51]) ghost
                                                                                              Texp_construct "CamlinternalFormatBasics.No_precision"
                                                                                              []
                                                                                            expression (src/conflict.ml[504,17479+10]..src/conflict.ml[504,17479+51]) ghost
                                                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                              [
                                                                                                expression (src/conflict.ml[504,17479+10]..src/conflict.ml[504,17479+51]) ghost
                                                                                                  Texp_constant Const_string(", looking ahead at ",(src/conflict.ml[504,17479+10]..src/conflict.ml[504,17479+51]) ghost,None)
                                                                                                expression (src/conflict.ml[504,17479+10]..src/conflict.ml[504,17479+51]) ghost
                                                                                                  Texp_construct "CamlinternalFormatBasics.String"
                                                                                                  [
                                                                                                    expression (src/conflict.ml[504,17479+10]..src/conflict.ml[504,17479+51]) ghost
                                                                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                      []
                                                                                                    expression (src/conflict.ml[504,17479+10]..src/conflict.ml[504,17479+51]) ghost
                                                                                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                      [
                                                                                                        expression (src/conflict.ml[504,17479+10]..src/conflict.ml[504,17479+51]) ghost
                                                                                                          Texp_constant Const_string(", ",(src/conflict.ml[504,17479+10]..src/conflict.ml[504,17479+51]) ghost,None)
                                                                                                        expression (src/conflict.ml[504,17479+10]..src/conflict.ml[504,17479+51]) ghost
                                                                                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                          []
                                                                                                      ]
                                                                                                  ]
                                                                                              ]
                                                                                          ]
                                                                                      ]
                                                                                    expression (src/conflict.ml[504,17479+10]..src/conflict.ml[504,17479+51]) ghost
                                                                                      Texp_constant Const_string("\n** In state %d, looking ahead at %s, ",(src/conflict.ml[504,17479+10]..src/conflict.ml[504,17479+51]) ghost,None)
                                                                                  ]
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/conflict.ml[505,17531+10]..src/conflict.ml[505,17531+27])
                                                                                  Texp_apply
                                                                                  expression (src/conflict.ml[505,17531+11]..src/conflict.ml[505,17531+21])
                                                                                    Texp_ident "Dune__exe!.Lr1.number"
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/conflict.ml[505,17531+22]..src/conflict.ml[505,17531+26])
                                                                                        Texp_ident "node/1248"
                                                                                  ]
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/conflict.ml[506,17559+10]..src/conflict.ml[506,17559+34])
                                                                                  Texp_apply
                                                                                  expression (src/conflict.ml[506,17559+11]..src/conflict.ml[506,17559+25])
                                                                                    Texp_ident "Dune__exe!.Grammar.Terminal.print"
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/conflict.ml[506,17559+26]..src/conflict.ml[506,17559+33])
                                                                                        Texp_ident "P/1268.token"
                                                                                  ]
                                                                            ]
                                                                          expression (src/conflict.ml[508,17596+8]..src/conflict.ml[517,17988+39])
                                                                            Texp_sequence
                                                                            expression (src/conflict.ml[508,17596+8]..src/conflict.ml[515,17974+11])
                                                                              Texp_match
                                                                              expression (src/conflict.ml[508,17596+20]..src/conflict.ml[508,17596+38])
                                                                                Texp_apply
                                                                                expression (src/conflict.ml[508,17596+20]..src/conflict.ml[508,17596+33])
                                                                                  Texp_ident "Dune__exe!.Item.classify"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/conflict.ml[508,17596+34]..src/conflict.ml[508,17596+38])
                                                                                      Texp_ident "item/1455"
                                                                                ]
                                                                              [
                                                                                <case>
                                                                                  pattern (src/conflict.ml[509,17640+10]..src/conflict.ml[509,17640+22])
                                                                                    Tpat_value
                                                                                    pattern (src/conflict.ml[509,17640+10]..src/conflict.ml[509,17640+22])
                                                                                      Tpat_construct "Item.Shift"
                                                                                      [
                                                                                        pattern (src/conflict.ml[509,17640+21]..src/conflict.ml[509,17640+22])
                                                                                          Tpat_any
                                                                                        pattern (src/conflict.ml[509,17640+21]..src/conflict.ml[509,17640+22])
                                                                                          Tpat_any
                                                                                      ]
                                                                                      None
                                                                                  expression (src/conflict.ml[510,17666+12]..src/conflict.ml[510,17666+103])
                                                                                    Texp_apply
                                                                                    expression (src/conflict.ml[510,17666+12]..src/conflict.ml[510,17666+26])
                                                                                      Texp_ident "Stdlib!.Printf.fprintf"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/conflict.ml[510,17666+27]..src/conflict.ml[510,17666+30])
                                                                                          Texp_ident "out/1205"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/conflict.ml[510,17666+31]..src/conflict.ml[510,17666+103])
                                                                                          Texp_construct "CamlinternalFormatBasics.Format"
                                                                                          [
                                                                                            expression (src/conflict.ml[510,17666+31]..src/conflict.ml[510,17666+103]) ghost
                                                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                              [
                                                                                                expression (src/conflict.ml[510,17666+31]..src/conflict.ml[510,17666+103]) ghost
                                                                                                  Texp_constant Const_string("shifting is permitted\n** because of the following sub-derivation:\n\n",(src/conflict.ml[510,17666+31]..src/conflict.ml[510,17666+103]) ghost,None)
                                                                                                expression (src/conflict.ml[510,17666+31]..src/conflict.ml[510,17666+103]) ghost
                                                                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                  []
                                                                                              ]
                                                                                            expression (src/conflict.ml[510,17666+31]..src/conflict.ml[510,17666+103]) ghost
                                                                                              Texp_constant Const_string("shifting is permitted\n** because of the following sub-derivation:\n\n",(src/conflict.ml[510,17666+31]..src/conflict.ml[510,17666+103]) ghost,None)
                                                                                          ]
                                                                                    ]
                                                                                <case>
                                                                                  pattern (src/conflict.ml[511,17770+10]..src/conflict.ml[511,17770+26])
                                                                                    Tpat_value
                                                                                    pattern (src/conflict.ml[511,17770+10]..src/conflict.ml[511,17770+26])
                                                                                      Tpat_construct "Item.Reduce"
                                                                                      [
                                                                                        pattern (src/conflict.ml[511,17770+22]..src/conflict.ml[511,17770+26])
                                                                                          Tpat_var "prod/1457"
                                                                                      ]
                                                                                      None
                                                                                  expression (src/conflict.ml[512,17800+12]..src/conflict.ml[514,17936+37])
                                                                                    Texp_apply
                                                                                    expression (src/conflict.ml[512,17800+12]..src/conflict.ml[512,17800+26])
                                                                                      Texp_ident "Stdlib!.Printf.fprintf"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/conflict.ml[512,17800+27]..src/conflict.ml[512,17800+30])
                                                                                          Texp_ident "out/1205"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/conflict.ml[513,17831+14]..src/conflict.ml[513,17831+104])
                                                                                          Texp_construct "CamlinternalFormatBasics.Format"
                                                                                          [
                                                                                            expression (src/conflict.ml[513,17831+14]..src/conflict.ml[513,17831+104]) ghost
                                                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                              [
                                                                                                expression (src/conflict.ml[513,17831+14]..src/conflict.ml[513,17831+104]) ghost
                                                                                                  Texp_constant Const_string("reducing production\n** ",(src/conflict.ml[513,17831+14]..src/conflict.ml[513,17831+104]) ghost,None)
                                                                                                expression (src/conflict.ml[513,17831+14]..src/conflict.ml[513,17831+104]) ghost
                                                                                                  Texp_construct "CamlinternalFormatBasics.String"
                                                                                                  [
                                                                                                    expression (src/conflict.ml[513,17831+14]..src/conflict.ml[513,17831+104]) ghost
                                                                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                      []
                                                                                                    expression (src/conflict.ml[513,17831+14]..src/conflict.ml[513,17831+104]) ghost
                                                                                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                      [
                                                                                                        expression (src/conflict.ml[513,17831+14]..src/conflict.ml[513,17831+104]) ghost
                                                                                                          Texp_constant Const_string("\n** is permitted because of the following sub-derivation:\n\n",(src/conflict.ml[513,17831+14]..src/conflict.ml[513,17831+104]) ghost,None)
                                                                                                        expression (src/conflict.ml[513,17831+14]..src/conflict.ml[513,17831+104]) ghost
                                                                                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                          []
                                                                                                      ]
                                                                                                  ]
                                                                                              ]
                                                                                            expression (src/conflict.ml[513,17831+14]..src/conflict.ml[513,17831+104]) ghost
                                                                                              Texp_constant Const_string("reducing production\n** %s\n** is permitted because of the following sub-derivation:\n\n",(src/conflict.ml[513,17831+14]..src/conflict.ml[513,17831+104]) ghost,None)
                                                                                          ]
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/conflict.ml[514,17936+14]..src/conflict.ml[514,17936+37])
                                                                                          Texp_apply
                                                                                          expression (src/conflict.ml[514,17936+15]..src/conflict.ml[514,17936+31])
                                                                                            Texp_ident "Dune__exe!.Grammar.Production.print"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/conflict.ml[514,17936+32]..src/conflict.ml[514,17936+36])
                                                                                                Texp_ident "prod/1457"
                                                                                          ]
                                                                                    ]
                                                                              ]
                                                                            expression (src/conflict.ml[517,17988+8]..src/conflict.ml[517,17988+39])
                                                                              Texp_apply
                                                                              expression (src/conflict.ml[517,17988+8]..src/conflict.ml[517,17988+24])
                                                                                Texp_ident "Dune__exe!.Derivation.print"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/conflict.ml[517,17988+25]..src/conflict.ml[517,17988+28])
                                                                                    Texp_ident "out/1205"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/conflict.ml[517,17988+29]..src/conflict.ml[517,17988+39])
                                                                                    Texp_ident "derivation/1456"
                                                                              ]
                                                                    ]
                                                              ]
                                                          <arg>
                                                            Nolabel
                                                            expression (src/conflict.ml[519,18029+8]..src/conflict.ml[519,18029+19])
                                                              Texp_ident "derivations/1454"
                                                        ]
                                                      expression (src/conflict.ml[521,18051+6]..src/conflict.ml[521,18051+15])
                                                        Texp_apply
                                                        expression (src/conflict.ml[521,18051+6]..src/conflict.ml[521,18051+11])
                                                          Texp_ident "Stdlib!.flush"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/conflict.ml[521,18051+12]..src/conflict.ml[521,18051+15])
                                                              Texp_ident "out/1205"
                                                        ]
                                  [
                                    <case>
                                      pattern (src/conflict.ml[523,18068+9]..src/conflict.ml[523,18068+24])
                                        Tpat_construct "Lr1partial.Oops"
                                        []
                                        None
                                      expression (src/conflict.ml[530,18416+6]..src/conflict.ml[545,18998+7])
                                        Texp_sequence
                                        expression (src/conflict.ml[530,18416+6]..src/conflict.ml[530,18416+24])
                                          Texp_apply
                                          expression (src/conflict.ml[530,18416+6]..src/conflict.ml[530,18416+10])
                                            Texp_ident "Stdlib!.incr"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/conflict.ml[530,18416+11]..src/conflict.ml[530,18416+24])
                                                Texp_ident "unexplainable/1185"
                                          ]
                                        expression (src/conflict.ml[531,18442+6]..src/conflict.ml[545,18998+7])
                                          Texp_apply
                                          expression (src/conflict.ml[531,18442+6]..src/conflict.ml[531,18442+20])
                                            Texp_ident "Stdlib!.Printf.fprintf"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/conflict.ml[531,18442+21]..src/conflict.ml[531,18442+24])
                                                Texp_ident "out/1205"
                                            <arg>
                                              Nolabel
                                              expression (src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19])
                                                Texp_construct "CamlinternalFormatBasics.Format"
                                                [
                                                  expression (src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                    [
                                                      expression (src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost
                                                        Texp_constant Const_string("\n** Conflict (unexplainable) in state ",(src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost,None)
                                                      expression (src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.Int"
                                                        [
                                                          expression (src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.Int_d"
                                                            []
                                                          expression (src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                            []
                                                          expression (src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.No_precision"
                                                            []
                                                          expression (src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                            [
                                                              expression (src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost
                                                                Texp_constant Const_string(".\n** Token",(src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost,None)
                                                              expression (src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.String"
                                                                [
                                                                  expression (src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                    []
                                                                  expression (src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                    [
                                                                      expression (src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost
                                                                        Texp_constant Const_string(" involved: ",(src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost,None)
                                                                      expression (src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.String"
                                                                        [
                                                                          expression (src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                            []
                                                                          expression (src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                            [
                                                                              expression (src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost
                                                                                Texp_constant Const_string("\n** ",(src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost,None)
                                                                              expression (src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.String"
                                                                                [
                                                                                  expression (src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                    []
                                                                                  expression (src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                    [
                                                                                      expression (src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost
                                                                                        Texp_constant Const_string(".\n",(src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost,None)
                                                                                      expression (src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.Flush"
                                                                                        [
                                                                                          expression (src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                            []
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                  expression (src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost
                                                    Texp_constant Const_string("\n** Conflict (unexplainable) in state %d.\n** Token%s involved: %s\n** %s.\n%!",(src/conflict.ml[531,18442+25]..src/conflict.ml[534,18559+19]) ghost,None)
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/conflict.ml[535,18579+6]..src/conflict.ml[535,18579+23])
                                                Texp_apply
                                                expression (src/conflict.ml[535,18579+7]..src/conflict.ml[535,18579+17])
                                                  Texp_ident "Dune__exe!.Lr1.number"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/conflict.ml[535,18579+18]..src/conflict.ml[535,18579+22])
                                                      Texp_ident "node/1248"
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/conflict.ml[536,18603+6]..src/conflict.ml[536,18603+57])
                                                Texp_ifthenelse
                                                expression (src/conflict.ml[536,18603+10]..src/conflict.ml[536,18603+39])
                                                  Texp_apply
                                                  expression (src/conflict.ml[536,18603+36]..src/conflict.ml[536,18603+37])
                                                    Texp_ident "Stdlib!.>"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/conflict.ml[536,18603+10]..src/conflict.ml[536,18603+35])
                                                        Texp_apply
                                                        expression (src/conflict.ml[536,18603+10]..src/conflict.ml[536,18603+30])
                                                          Texp_ident "Dune__exe!.Grammar.TerminalSet.cardinal"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/conflict.ml[536,18603+31]..src/conflict.ml[536,18603+35])
                                                              Texp_ident "toks/1247"
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (src/conflict.ml[536,18603+38]..src/conflict.ml[536,18603+39])
                                                        Texp_constant Const_int 1
                                                  ]
                                                expression (src/conflict.ml[536,18603+45]..src/conflict.ml[536,18603+48])
                                                  Texp_constant Const_string("s",(src/conflict.ml[536,18603+46]..src/conflict.ml[536,18603+47]),None)
                                                Some
                                                  expression (src/conflict.ml[536,18603+54]..src/conflict.ml[536,18603+56])
                                                    Texp_constant Const_string("",(src/conflict.ml[536,18603+55]..src/conflict.ml[536,18603+55]),None)
                                            <arg>
                                              Nolabel
                                              expression (src/conflict.ml[537,18661+6]..src/conflict.ml[537,18661+30])
                                                Texp_apply
                                                expression (src/conflict.ml[537,18661+7]..src/conflict.ml[537,18661+24])
                                                  Texp_ident "Dune__exe!.Grammar.TerminalSet.print"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/conflict.ml[537,18661+25]..src/conflict.ml[537,18661+29])
                                                      Texp_ident "toks/1247"
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/conflict.ml[538,18692+6]..src/conflict.ml[545,18998+7])
                                                Texp_match
                                                expression (src/conflict.ml[538,18692+13]..src/conflict.ml[538,18692+39])
                                                  Texp_ident "Dune__exe!.Settings.construction_mode"
                                                [
                                                  <case>
                                                    pattern (src/conflict.ml[539,18737+8]..src/conflict.ml[539,18737+25])
                                                      Tpat_value
                                                      pattern (src/conflict.ml[539,18737+8]..src/conflict.ml[539,18737+25])
                                                        Tpat_construct "Settings.ModeLALR"
                                                        []
                                                        None
                                                    expression (src/conflict.ml[540,18766+10]..src/conflict.ml[540,18766+75])
                                                      Texp_constant Const_string("This may be an artificial conflict caused by your use of --lalr",(src/conflict.ml[540,18766+11]..src/conflict.ml[540,18766+74]),None)
                                                  <case>
                                                    pattern (src/conflict.ml[541,18842+8]..src/conflict.ml[543,18908+26])
                                                      Tpat_or
                                                      pattern (src/conflict.ml[541,18842+8]..src/conflict.ml[542,18873+34])
                                                        Tpat_or
                                                        pattern (src/conflict.ml[541,18842+8]..src/conflict.ml[541,18842+30])
                                                          Tpat_value
                                                          pattern (src/conflict.ml[541,18842+8]..src/conflict.ml[541,18842+30])
                                                            Tpat_construct "Settings.ModeCanonical"
                                                            []
                                                            None
                                                        pattern (src/conflict.ml[542,18873+8]..src/conflict.ml[542,18873+34])
                                                          Tpat_value
                                                          pattern (src/conflict.ml[542,18873+8]..src/conflict.ml[542,18873+34])
                                                            Tpat_construct "Settings.ModeInclusionOnly"
                                                            []
                                                            None
                                                      pattern (src/conflict.ml[543,18908+8]..src/conflict.ml[543,18908+26])
                                                        Tpat_value
                                                        pattern (src/conflict.ml[543,18908+8]..src/conflict.ml[543,18908+26])
                                                          Tpat_construct "Settings.ModePager"
                                                          []
                                                          None
                                                    expression (src/conflict.ml[544,18938+10]..src/conflict.ml[544,18938+59])
                                                      Texp_constant Const_string("Please send your grammar to Menhir's developers",(src/conflict.ml[544,18938+11]..src/conflict.ml[544,18938+58]),None)
                                                ]
                                          ]
                                  ]
                            ]
                      ]
                ]
              expression (src/conflict.ml[548,19014+4]..src/conflict.ml[549,19039+36])
                Texp_sequence
                expression (src/conflict.ml[548,19014+4]..src/conflict.ml[548,19014+23])
                  Texp_apply
                  expression (src/conflict.ml[548,19014+4]..src/conflict.ml[548,19014+21])
                    Texp_ident "log_unexplainable/1186"
                  [
                    <arg>
                      Nolabel
                      expression (src/conflict.ml[548,19014+21]..src/conflict.ml[548,19014+23])
                        Texp_construct "()"
                        []
                  ]
                expression (src/conflict.ml[549,19039+4]..src/conflict.ml[549,19039+36])
                  Texp_apply
                  expression (src/conflict.ml[549,19039+4]..src/conflict.ml[549,19039+13])
                    Texp_ident "Dune__exe!.Time.tick"
                  [
                    <arg>
                      Nolabel
                      expression (src/conflict.ml[549,19039+14]..src/conflict.ml[549,19039+36])
                        Texp_constant Const_string("Explaining conflicts",(src/conflict.ml[549,19039+15]..src/conflict.ml[549,19039+35]),None)
                  ]
          None
    ]
  structure_item (src/conflict.ml[556,19222+0]..src/conflict.ml[558,19268+43])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/conflict.ml[556,19222+4]..src/conflict.ml[556,19222+6])
          Tpat_construct "()"
          []
          None
        expression (src/conflict.ml[557,19231+2]..src/conflict.ml[558,19268+43])
          Texp_sequence
          expression (src/conflict.ml[557,19231+2]..src/conflict.ml[557,19231+35])
            Texp_apply
            expression (src/conflict.ml[557,19231+2]..src/conflict.ml[557,19231+33])
              Texp_ident "Dune__exe!.Lr1.default_conflict_resolution"
            [
              <arg>
                Nolabel
                expression (src/conflict.ml[557,19231+33]..src/conflict.ml[557,19231+35])
                  Texp_construct "()"
                  []
            ]
          expression (src/conflict.ml[558,19268+2]..src/conflict.ml[558,19268+43])
            Texp_apply
            expression (src/conflict.ml[558,19268+2]..src/conflict.ml[558,19268+11])
              Texp_ident "Dune__exe!.Time.tick"
            [
              <arg>
                Nolabel
                expression (src/conflict.ml[558,19268+12]..src/conflict.ml[558,19268+43])
                  Texp_constant Const_string("Resolving remaining conflicts",(src/conflict.ml[558,19268+13]..src/conflict.ml[558,19268+42]),None)
            ]
    ]
  structure_item (src/conflict.ml[564,19536+0]..src/conflict.ml[566,19571+37])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/conflict.ml[564,19536+4]..src/conflict.ml[564,19536+6])
          Tpat_construct "()"
          []
          None
        expression (src/conflict.ml[565,19545+2]..src/conflict.ml[566,19571+37])
          Texp_sequence
          expression (src/conflict.ml[565,19545+2]..src/conflict.ml[565,19545+24])
            Texp_apply
            expression (src/conflict.ml[565,19545+2]..src/conflict.ml[565,19545+22])
              Texp_ident "Dune__exe!.Lr1.extra_reductions"
            [
              <arg>
                Nolabel
                expression (src/conflict.ml[565,19545+22]..src/conflict.ml[565,19545+24])
                  Texp_construct "()"
                  []
            ]
          expression (src/conflict.ml[566,19571+2]..src/conflict.ml[566,19571+37])
            Texp_apply
            expression (src/conflict.ml[566,19571+2]..src/conflict.ml[566,19571+11])
              Texp_ident "Dune__exe!.Time.tick"
            [
              <arg>
                Nolabel
                expression (src/conflict.ml[566,19571+12]..src/conflict.ml[566,19571+37])
                  Texp_constant Const_string("Adding extra reductions",(src/conflict.ml[566,19571+13]..src/conflict.ml[566,19571+36]),None)
            ]
    ]
  structure_item (src/conflict.ml[573,19859+0]..src/conflict.ml[574,19868+39])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/conflict.ml[573,19859+4]..src/conflict.ml[573,19859+6])
          Tpat_construct "()"
          []
          None
        expression (src/conflict.ml[574,19868+2]..src/conflict.ml[574,19868+39])
          Texp_apply
          expression (src/conflict.ml[574,19868+2]..src/conflict.ml[574,19868+15])
            Texp_ident "Dune__exe!.Error.exit_if"
          [
            <arg>
              Nolabel
              expression (src/conflict.ml[574,19868+16]..src/conflict.ml[574,19868+39])
                Texp_ident "Dune__exe!.Error.grammatical_error"
          ]
    ]
]

{<Dune__exe__Conflict>
 }

(seq
  (let
    (*match*/4284 =
       (if (field_imm 6 (global Dune__exe__Settings!))
         (apply (field_imm 0 (global Dune__exe__ReferenceGraph!)) 0) 0))
    0)
  (let
    (*match*/4288 =
       (if (field_imm 4 (global Dune__exe__Settings!))
         (let
           (Default/478 =
              (let (has_default_reduction/475 = (function _node/477 0))
                (makeblock 0 has_default_reduction/475))
            D/487 =
              (apply
                (let (let/4285 = (field_imm 0 (global Dune__exe__Dump!)))
                  (field_imm 0 (global Dune__exe__Dump!)))
                Default/478))
           (apply (field_imm 0 D/487)
             (apply (field_imm 27 (global Stdlib!))
               (field_imm 24 (global Dune__exe__Settings!)) ".automaton")))
         0))
    0)
  (letrec
    (follow/518
       (function derivation/519 offset'/520[int] param/632
         (if (isint param/632)
           (seq
             (if (== offset'/520 0) 0
               (raise
                 (makeblock 0 (global Assert_failure/28!)
                   [0: "src/conflict.ml" 68 6])))
             derivation/519)
           (let
             (configs/523 =a (field_imm 1 param/632)
              *match*/4299 =a (field_imm 0 param/632)
              offset/522 =a (field_imm 1 *match*/4299)
              item/521 =a (field_imm 0 *match*/4299)
              *match*/4295 =
                (apply (field_imm 4 (global Dune__exe__Item!)) item/521)
              *match*/4298 =a (field_imm 4 *match*/4295)
              pos/525 =a (field_imm 3 *match*/4295)
              rhs/524 =a (field_imm 2 *match*/4295)
              *match*/4297 =a (field_imm 1 *match*/4295)
              *match*/4296 =a (field_imm 0 *match*/4295)
              derivation/526 =
                (if (== offset/522 offset'/520)
                  (apply (field_imm 2 (global Dune__exe__Derivation!))
                    pos/525 rhs/524 derivation/519 0)
                  (apply (field_imm 3 (global Dune__exe__Derivation!))
                    (array.get[addr] rhs/524 pos/525) derivation/519)))
             (apply follow/518 derivation/526 offset/522 configs/523)))))
    (setfield_ptr(root-init) 0 (global Dune__exe__Conflict!) follow/518))
  (let
    (Done/633 =
       (makeblock 248 "Dune__exe__Conflict.Done" (caml_fresh_oo_id 0)))
    (setfield_ptr(root-init) 1 (global Dune__exe__Conflict!) Done/633))
  (let
    (explain_shift_item/634 =
       (function start/636 input/637 stop/638
         (let
           (n/639 =[int] (array.length[addr] input/637)
            table/679 =
              (apply (field_imm 0 (global Stdlib__Hashtbl!)) 0 1023)
            queue/742 = (apply (field_imm 1 (global Stdlib__Queue!)) 0)
            enqueue/764 =
              (function ancestor/766 config/767 : int
                (try
                  (seq
                    (apply (field_imm 5 (global Stdlib__Hashtbl!)) table/679
                      config/767)
                    0)
                 with exn/4321
                  (catch
                    (if (== exn/4321 (field_imm 7 (global Stdlib!)))
                      (seq
                        (apply (field_imm 4 (global Stdlib__Hashtbl!))
                          table/679 config/767 ancestor/766)
                        (apply (field_imm 2 (global Stdlib__Queue!))
                          config/767 queue/742))
                      (exit 19))
                   with (19) (reraise exn/4321)))))
           (seq (apply enqueue/764 0 (makeblock 0 (*,int) start/636 0))
             (try
               (seq
                 (apply (field_imm 18 (global Dune__exe__Misc!))
                   (function config/806 : int
                     (let
                       (offset/805 =a (field_imm 1 config/806)
                        item/804 =a (field_imm 0 config/806))
                       (seq
                         (if
                           (&&
                             (apply (field_imm 3 (global Dune__exe__Item!))
                               item/804 stop/638)
                             (== offset/805 n/639))
                           (raise
                             (field_imm 1 (global Dune__exe__Conflict!)))
                           0)
                         (let
                           (*match*/4319 =
                              (apply (field_imm 4 (global Dune__exe__Item!))
                                item/804)
                            length/810 =a (field_imm 4 *match*/4319)
                            pos/809 =a (field_imm 3 *match*/4319)
                            rhs/808 =a (field_imm 2 *match*/4319)
                            *match*/4320 =a (field_imm 1 *match*/4319)
                            prod/807 =a (field_imm 0 *match*/4319))
                           (seq
                             (if
                               (&& (< pos/809 length/810)
                                 (&& (< offset/805 n/639)
                                   (apply
                                     (field_imm 2
                                       (field_imm 5
                                         (global Dune__exe__Grammar!)))
                                     (array.get[addr] rhs/808 pos/809)
                                     (array.get[addr] input/637 offset/805))))
                               (let
                                 (config'/811 =
                                    (makeblock 0 (*,int)
                                      (apply
                                        (field_imm 0
                                          (global Dune__exe__Item!))
                                        (makeblock 0 (*,int) prod/807
                                          (+ pos/809 1)))
                                      (+ offset/805 1)))
                                 (apply enqueue/764 (makeblock 0 config/806)
                                   config'/811))
                               0)
                             (if (< pos/809 length/810)
                               (let
                                 (*match*/4311 =
                                    (array.get[addr] rhs/808 pos/809))
                                 (switch* *match*/4311
                                  case tag 0:
                                   (let
                                     (nt/812 =a (field_imm 0 *match*/4311))
                                     (apply
                                       (field_imm 22
                                         (field_imm 8
                                           (global Dune__exe__Grammar!)))
                                       nt/812
                                       (function prod/867 : int
                                         (let
                                           (config'/868 =
                                              (makeblock 0 (*,int)
                                                (apply
                                                  (field_imm 0
                                                    (global Dune__exe__Item!))
                                                  (makeblock 0 (*,int)
                                                    prod/867 0))
                                                offset/805))
                                           (apply enqueue/764
                                             (makeblock 0 config/806)
                                             config'/868)))))
                                  case tag 1:
                                   (let
                                     (*match*/4312 =a
                                        (field_imm 0 *match*/4311))
                                     0)))
                               0))))))
                   queue/742)
                 (raise
                   (makeblock 0 (global Assert_failure/28!)
                     [0: "src/conflict.ml" 161 4])))
              with exn/4300
               (catch
                 (if
                   (== exn/4300 (field_imm 1 (global Dune__exe__Conflict!)))
                   (let
                     (configs/899 =
                        (apply (field_imm 9 (global Dune__exe__Misc!))
                          table/679 (makeblock 0 (*,int) stop/638 n/639))
                      *match*/4307 =
                        (apply (field_imm 4 (global Dune__exe__Item!))
                          stop/638)
                      *match*/4310 =a (field_imm 4 *match*/4307)
                      pos/901 =a (field_imm 3 *match*/4307)
                      rhs/900 =a (field_imm 2 *match*/4307)
                      *match*/4309 =a (field_imm 1 *match*/4307)
                      *match*/4308 =a (field_imm 0 *match*/4307)
                      derivation/902 =
                        (apply (field_imm 1 (global Dune__exe__Derivation!))
                          pos/901 rhs/900)
                      derivation/903 =
                        (apply (field_imm 0 (global Dune__exe__Conflict!))
                          derivation/902 n/639 configs/899))
                     derivation/903)
                   (exit 15))
                with (15) (reraise exn/4300)))))))
    (setfield_ptr(root-init) 2 (global Dune__exe__Conflict!)
      explain_shift_item/634))
  (let
    (config1toconfig0/905 =
       (function (param/4324, param/4325, param/4326)
         (let (offset/908 =a param/4326 item/907 =a param/4324)
           (makeblock 0 item/907 offset/908))))
    (setfield_ptr(root-init) 3 (global Dune__exe__Conflict!)
      config1toconfig0/905))
  (letrec
    (follow1/910
       (function tok/911 derivation/912 offset'/913[int] param/1151
         (if (isint param/1151)
           (seq
             (if
               (apply
                 (field_imm 1 (field_imm 2 (global Dune__exe__Grammar!)))
                 tok/911
                 (field_imm 9 (field_imm 2 (global Dune__exe__Grammar!))))
               0
               (raise
                 (makeblock 0 (global Assert_failure/28!)
                   [0: "src/conflict.ml" 209 6])))
             derivation/912)
           (let
             (configs/916 =a (field_imm 1 param/1151)
              *match*/4339 =a (field_imm 0 param/1151)
              offset/915 =a (field_imm 2 *match*/4339)
              *match*/4340 =a (field_imm 1 *match*/4339)
              item/914 =a (field_imm 0 *match*/4339)
              *match*/4337 =
                (apply (field_imm 4 (global Dune__exe__Item!)) item/914)
              length/949 =a (field_imm 4 *match*/4337)
              pos/948 =a (field_imm 3 *match*/4337)
              rhs/947 =a (field_imm 2 *match*/4337)
              *match*/4338 =a (field_imm 1 *match*/4337)
              prod/946 =a (field_imm 0 *match*/4337))
             (if (== offset/915 offset'/913)
               (let
                 (*match*/4330 =
                    (apply
                      (field_imm 4
                        (field_imm 11 (global Dune__exe__Grammar!)))
                      prod/946 (+ pos/948 1))
                  first/951 =a (field_imm 1 *match*/4330)
                  nullable/950 =a (field_imm 0 *match*/4330))
                 (if
                   (apply
                     (field_imm 6 (field_imm 3 (global Dune__exe__Grammar!)))
                     tok/911 first/951)
                   (let
                     (e/1043 =
                        (apply
                          (field_imm 6
                            (field_imm 11 (global Dune__exe__Grammar!)))
                          tok/911 rhs/947 (+ pos/948 1))
                      comment/1044 =
                        (apply (field_imm 27 (global Stdlib!))
                          "lookahead token appears"
                          (if (caml_string_equal e/1043 "") ""
                            (apply (field_imm 27 (global Stdlib!))
                              " because " e/1043)))
                      derivation/1045 =
                        (apply (field_imm 2 (global Dune__exe__Derivation!))
                          pos/948 rhs/947 derivation/912
                          (makeblock 0 comment/1044)))
                     (apply (field_imm 0 (global Dune__exe__Conflict!))
                       derivation/1045 offset/915
                       (apply (field_imm 19 (global Stdlib__List!))
                         (field_imm 3 (global Dune__exe__Conflict!))
                         configs/916)))
                   (seq
                     (if nullable/950 0
                       (raise
                         (makeblock 0 (global Assert_failure/28!)
                           [0: "src/conflict.ml" 247 10])))
                     (let
                       (comment/1112 =
                          (apply (field_imm 27 (global Stdlib!))
                            "lookahead token is inherited"
                            (if (< (+ pos/948 1) length/949)
                              (apply (field_imm 3 (global Stdlib__Printf!))
                                [0:
                                 [11:
                                  " because " [2: 0 [11: " can vanish" 0]]]
                                 " because %s can vanish"]
                                (apply
                                  (field_imm 8
                                    (field_imm 5
                                      (global Dune__exe__Grammar!)))
                                  (+ pos/948 1) rhs/947))
                              ""))
                        derivation/1149 =
                          (apply
                            (field_imm 2 (global Dune__exe__Derivation!))
                            pos/948 rhs/947 derivation/912
                            (makeblock 0 comment/1112)))
                       (apply follow1/910 tok/911 derivation/1149 offset/915
                         configs/916)))))
               (let
                 (derivation/1150 =
                    (apply (field_imm 3 (global Dune__exe__Derivation!))
                      (array.get[addr] rhs/947 pos/948) derivation/912))
                 (apply follow1/910 tok/911 derivation/1150 offset/915
                   configs/916)))))))
    (setfield_ptr(root-init) 4 (global Dune__exe__Conflict!) follow1/910))
  (let
    (explain_reduce_item/1152 =
       (function tok/1154 start/1155 input/1156 stop/1157
         (let
           (n/1158 =[int] (array.length[addr] input/1156)
            table/1159 =
              (apply (field_imm 0 (global Stdlib__Hashtbl!)) 0 1023)
            queue/1160 = (apply (field_imm 1 (global Stdlib__Queue!)) 0)
            enqueue/1161 =
              (function ancestor/1163 config/1164 : int
                (try
                  (seq
                    (apply (field_imm 5 (global Stdlib__Hashtbl!)) table/1159
                      config/1164)
                    0)
                 with exn/4356
                  (catch
                    (if (== exn/4356 (field_imm 7 (global Stdlib!)))
                      (seq
                        (apply (field_imm 4 (global Stdlib__Hashtbl!))
                          table/1159 config/1164 ancestor/1163)
                        (apply (field_imm 2 (global Stdlib__Queue!))
                          config/1164 queue/1160))
                      (exit 42))
                   with (42) (reraise exn/4356)))))
           (seq
             (apply enqueue/1161 0
               (makeblock 0 (*,int,int) start/1155
                 (apply
                   (field_imm 1 (field_imm 2 (global Dune__exe__Grammar!)))
                   tok/1154
                   (field_imm 9 (field_imm 2 (global Dune__exe__Grammar!))))
                 0))
             (try
               (seq
                 (apply (field_imm 18 (global Dune__exe__Misc!))
                   (function config/1168 : int
                     (let
                       (offset/1167 =a (field_imm 2 config/1168)
                        lookahead/1166 =a (field_imm 1 config/1168)
                        item/1165 =a (field_imm 0 config/1168))
                       (seq
                         (if
                           (&&
                             (apply (field_imm 3 (global Dune__exe__Item!))
                               item/1165 stop/1157)
                             (&& lookahead/1166 (== offset/1167 n/1158)))
                           (raise
                             (field_imm 1 (global Dune__exe__Conflict!)))
                           0)
                         (let
                           (*match*/4355 =
                              (apply (field_imm 4 (global Dune__exe__Item!))
                                item/1165)
                            length/1173 =a (field_imm 4 *match*/4355)
                            pos/1172 =a (field_imm 3 *match*/4355)
                            rhs/1171 =a (field_imm 2 *match*/4355)
                            _nt/1170 =a (field_imm 1 *match*/4355)
                            prod/1169 =a (field_imm 0 *match*/4355))
                           (seq
                             (if
                               (&& (< pos/1172 length/1173)
                                 (&& (< offset/1167 n/1158)
                                   (apply
                                     (field_imm 2
                                       (field_imm 5
                                         (global Dune__exe__Grammar!)))
                                     (array.get[addr] rhs/1171 pos/1172)
                                     (array.get[addr] input/1156 offset/1167))))
                               (let
                                 (config'/1174 =
                                    (makeblock 0 (*,int,int)
                                      (apply
                                        (field_imm 0
                                          (global Dune__exe__Item!))
                                        (makeblock 0 (*,int) prod/1169
                                          (+ pos/1172 1)))
                                      lookahead/1166 (+ offset/1167 1)))
                                 (apply enqueue/1161
                                   (makeblock 0 config/1168) config'/1174))
                               0)
                             (if (< pos/1172 length/1173)
                               (let
                                 (*match*/4347 =
                                    (array.get[addr] rhs/1171 pos/1172))
                                 (switch* *match*/4347
                                  case tag 0:
                                   (let
                                     (nt/1175 =a (field_imm 0 *match*/4347)
                                      *match*/4346 =
                                        (apply
                                          (field_imm 4
                                            (field_imm 11
                                              (global Dune__exe__Grammar!)))
                                          prod/1169 (+ pos/1172 1))
                                      first/1177 =a
                                        (field_imm 1 *match*/4346)
                                      nullable/1176 =a
                                        (field_imm 0 *match*/4346)
                                      first/1178 =
                                        (apply
                                          (field_imm 6
                                            (field_imm 3
                                              (global Dune__exe__Grammar!)))
                                          tok/1154 first/1177)
                                      lookahead'/1179 =[int]
                                        (if nullable/1176
                                          (|| first/1178 lookahead/1166)
                                          first/1178))
                                     (apply
                                       (field_imm 22
                                         (field_imm 8
                                           (global Dune__exe__Grammar!)))
                                       nt/1175
                                       (function prod/1180 : int
                                         (let
                                           (config'/1181 =
                                              (makeblock 0 (*,int,int)
                                                (apply
                                                  (field_imm 0
                                                    (global Dune__exe__Item!))
                                                  (makeblock 0 (*,int)
                                                    prod/1180 0))
                                                lookahead'/1179 offset/1167))
                                           (apply enqueue/1161
                                             (makeblock 0 config/1168)
                                             config'/1181)))))
                                  case tag 1:
                                   (let
                                     (*match*/4348 =a
                                        (field_imm 0 *match*/4347))
                                     0)))
                               0))))))
                   queue/1160)
                 (raise
                   (makeblock 0 (global Assert_failure/28!)
                     [0: "src/conflict.ml" 346 4])))
              with exn/4341
               (catch
                 (if
                   (== exn/4341 (field_imm 1 (global Dune__exe__Conflict!)))
                   (let
                     (configs/1182 =
                        (apply (field_imm 9 (global Dune__exe__Misc!))
                          table/1159
                          (makeblock 0 (*,int,int) stop/1157 1 n/1158))
                      derivation/1183 =
                        (field_imm 0 (global Dune__exe__Derivation!))
                      derivation/1184 =
                        (apply (field_imm 4 (global Dune__exe__Conflict!))
                          tok/1154 derivation/1183 n/1158 configs/1182))
                     derivation/1184)
                   (exit 32))
                with (32) (reraise exn/4341)))))))
    (setfield_ptr(root-init) 5 (global Dune__exe__Conflict!)
      explain_reduce_item/1152))
  (let (unexplainable/1185 = (makemutable 0 (int) 0))
    (setfield_ptr(root-init) 6 (global Dune__exe__Conflict!)
      unexplainable/1185))
  (let
    (log_unexplainable/1186 =
       (function param/1204[int] : int
         (if (> (field_int 0 (field_imm 6 (global Dune__exe__Conflict!))) 0)
           (apply (field_imm 3 (global Dune__exe__Error!)) 2
             (function f/1203 : int
               (apply (field_imm 0 (global Stdlib__Printf!)) f/1203
                 [0:
                  [4:
                   0 0 0
                   [11:
                    " conflict" [2: 0 [11: " could not be explained.\n" 0]]]]
                  "%d conflict%s could not be explained.\n"]
                 (field_int 0 (field_imm 6 (global Dune__exe__Conflict!)))
                 (if
                   (>
                     (field_int 0
                       (field_imm 6 (global Dune__exe__Conflict!)))
                     1)
                   "s" ""))))
           0)))
    (setfield_ptr(root-init) 7 (global Dune__exe__Conflict!)
      log_unexplainable/1186))
  (let
    (*match*/4388 =
       (if (field_imm 3 (global Dune__exe__Settings!))
         (let
           (out/1205 =
              (apply (field_imm 59 (global Stdlib!))
                (apply (field_imm 27 (global Stdlib!))
                  (field_imm 24 (global Dune__exe__Settings!)) ".conflicts")))
           (seq
             (apply (field_imm 34 (global Dune__exe__Lr1!))
               (function toks/1247 node/1248 : int
                 (try
                   (let
                     (P/1268 =
                        (apply
                          (let
                            (let/4361 =
                               (field_imm 1 (global Dune__exe__Lr1partial!)))
                            (field_imm 1 (global Dune__exe__Lr1partial!)))
                          (let
                            (tokens/1249 = toks/1247 goal/1250 = node/1248)
                            (makeblock 0 tokens/1249 goal/1250)))
                      closure/1269 =
                        (apply (field_imm 10 (global Dune__exe__Lr0!))
                          (field_imm 2 P/1268))
                      *match*/4385 =
                        (apply
                          (field_imm 19
                            (field_imm 9 (global Dune__exe__Item!)))
                          (function item/1376 toks/1377 param/1381
                            (let
                              (reduce/1379 =a (field_imm 1 param/1381)
                               shift/1378 =a (field_imm 0 param/1381)
                               *match*/4378 =
                                 (apply
                                   (field_imm 7 (global Dune__exe__Item!))
                                   item/1376))
                              (catch
                                (switch* *match*/4378
                                 case tag 0:
                                  (let
                                    (*match*/4379 =a
                                       (field_imm 0 *match*/4378))
                                    (switch* *match*/4379
                                     case tag 0: (exit 58)
                                     case tag 1:
                                      (let
                                        (*match*/4380 =a
                                           (field_imm 1 *match*/4378)
                                         tok/1380 =a
                                           (field_imm 0 *match*/4379))
                                        (if
                                          (apply
                                            (field_imm 1
                                              (field_imm 2
                                                (global Dune__exe__Grammar!)))
                                            tok/1380 (field_imm 3 P/1268))
                                          (makeblock 0 (int,int)
                                            (+ shift/1378 1) reduce/1379)
                                          (exit 58)))))
                                 case tag 1:
                                  (let
                                    (*match*/4381 =a
                                       (field_imm 0 *match*/4378))
                                    (if
                                      (apply
                                        (field_imm 6
                                          (field_imm 3
                                            (global Dune__exe__Grammar!)))
                                        (field_imm 3 P/1268) toks/1377)
                                      (makeblock 0 (int,int) shift/1378
                                        (+ reduce/1379 1))
                                      (exit 58))))
                               with (58)
                                (makeblock 0 (int,int) shift/1378
                                  reduce/1379))))
                          closure/1269 [0: 0 0])
                      reduce/1375 =a (field_imm 1 *match*/4385)
                      shift/1374 =a (field_imm 0 *match*/4385)
                      kind/1382 =
                        (if (&& (> shift/1374 0) (> reduce/1375 1))
                          "shift/reduce/reduce"
                          (if (> shift/1374 0) "shift/reduce"
                            "reduce/reduce")))
                     (seq
                       (apply (field_imm 0 (global Stdlib__Printf!)) out/1205
                         [0:
                          [11:
                           "\n** Conflict ("
                           [2:
                            0
                            [11:
                             ") in state "
                             [4:
                              0 0 0
                              [11:
                               ".\n** Token"
                               [2:
                                0
                                [11:
                                 " involved: "
                                 [2:
                                  0
                                  [12:
                                   '\n'
                                   [2:
                                    0
                                    [11:
                                     "** This state is reached from "
                                     [2:
                                      0
                                      [11:
                                       " after reading:\n\n"
                                       [2: 0 [12: '\n' 0]]]]]]]]]]]]]]]
                          "\n** Conflict (%s) in state %d.\n** Token%s involved: %s\n%s** This state is reached from %s after reading:\n\n%s\n"]
                         kind/1382
                         (apply (field_imm 9 (global Dune__exe__Lr1!))
                           node/1248)
                         (if
                           (>
                             (apply
                               (field_imm 4
                                 (field_imm 3 (global Dune__exe__Grammar!)))
                               toks/1247)
                             1)
                           "s" "")
                         (apply
                           (field_imm 18
                             (field_imm 3 (global Dune__exe__Grammar!)))
                           toks/1247)
                         (if
                           (>
                             (apply
                               (field_imm 4
                                 (field_imm 3 (global Dune__exe__Grammar!)))
                               toks/1247)
                             1)
                           (apply (field_imm 3 (global Stdlib__Printf!))
                             [0:
                              [11:
                               "** The following explanations concentrate on token "
                               [2: 0 [11: ".\n" 0]]]
                              "** The following explanations concentrate on token %s.\n"]
                             (apply
                               (field_imm 6
                                 (field_imm 2 (global Dune__exe__Grammar!)))
                               (field_imm 3 P/1268)))
                           "")
                         (apply
                           (field_imm 5
                             (field_imm 0 (global Dune__exe__Grammar!)))
                           0
                           (apply (field_imm 5 (global Dune__exe__Item!))
                             (field_imm 0 P/1268)))
                         (apply
                           (field_imm 7
                             (field_imm 5 (global Dune__exe__Grammar!)))
                           (field_imm 1 P/1268)))
                       (let
                         (*match*/4376 =
                            (apply
                              (field_imm 19
                                (field_imm 9 (global Dune__exe__Item!)))
                              (function item/1445 toks/1446 param/1452
                                (let
                                  (derivations/1448 =a
                                     (field_imm 1 param/1452)
                                   still_looking_for_shift_item/1447 =a
                                     (field_imm 0 param/1452)
                                   *match*/4369 =
                                     (apply
                                       (field_imm 7
                                         (global Dune__exe__Item!))
                                       item/1445))
                                  (catch
                                    (switch* *match*/4369
                                     case tag 0:
                                      (let
                                        (*match*/4370 =a
                                           (field_imm 0 *match*/4369))
                                        (switch* *match*/4370
                                         case tag 0: (exit 54)
                                         case tag 1:
                                          (let
                                            (*match*/4371 =a
                                               (field_imm 1 *match*/4369)
                                             tok/1449 =a
                                               (field_imm 0 *match*/4370))
                                            (if
                                              (&&
                                                still_looking_for_shift_item/1447
                                                (apply
                                                  (field_imm 1
                                                    (field_imm 2
                                                      (global Dune__exe__Grammar!)))
                                                  tok/1449
                                                  (field_imm 3 P/1268)))
                                              (makeblock 0 (int,*) 0
                                                (let
                                                  (derivation/1450 =
                                                     (apply
                                                       (field_imm 2
                                                         (global Dune__exe__Conflict!))
                                                       (field_imm 0 P/1268)
                                                       (field_imm 1 P/1268)
                                                       item/1445))
                                                  (apply
                                                    (field_imm 3
                                                      (field_imm 9
                                                        (global Dune__exe__Item!)))
                                                    item/1445 derivation/1450
                                                    derivations/1448)))
                                              (exit 54)))))
                                     case tag 1:
                                      (let
                                        (*match*/4372 =a
                                           (field_imm 0 *match*/4369))
                                        (if
                                          (apply
                                            (field_imm 6
                                              (field_imm 3
                                                (global Dune__exe__Grammar!)))
                                            (field_imm 3 P/1268) toks/1446)
                                          (makeblock 0 (int,*)
                                            still_looking_for_shift_item/1447
                                            (let
                                              (derivation/1451 =
                                                 (apply
                                                   (field_imm 5
                                                     (global Dune__exe__Conflict!))
                                                   (field_imm 3 P/1268)
                                                   (field_imm 0 P/1268)
                                                   (field_imm 1 P/1268)
                                                   item/1445))
                                              (apply
                                                (field_imm 3
                                                  (field_imm 9
                                                    (global Dune__exe__Item!)))
                                                item/1445 derivation/1451
                                                derivations/1448)))
                                          (exit 54))))
                                   with (54)
                                    (makeblock 0 (int,*)
                                      still_looking_for_shift_item/1447
                                      derivations/1448))))
                              closure/1269
                              (makeblock 0 (int,*) 1
                                (field_imm 0
                                  (field_imm 9 (global Dune__exe__Item!)))))
                          derivations/1444 =a (field_imm 1 *match*/4376)
                          *match*/4377 =a (field_imm 0 *match*/4376)
                          *match*/4368 =
                            (apply
                              (field_imm 4 (global Dune__exe__Derivation!))
                              derivations/1444)
                          derivations/1454 =a (field_imm 1 *match*/4368)
                          context/1453 =a (field_imm 0 *match*/4368))
                         (seq
                           (apply (field_imm 0 (global Stdlib__Printf!))
                             out/1205
                             [0:
                              [11:
                               "\n** The derivations that appear below have the following common factor:\n** (The question mark symbol (?) represents the spot where the derivations begin to differ.)\n\n"
                               0]
                              "\n** The derivations that appear below have the following common factor:\n** (The question mark symbol (?) represents the spot where the derivations begin to differ.)\n\n"])
                           (apply
                             (field_imm 6 (global Dune__exe__Derivation!))
                             out/1205 context/1453)
                           (apply
                             (field_imm 18
                               (field_imm 9 (global Dune__exe__Item!)))
                             (function item/1455 derivation/1456 : int
                               (seq
                                 (apply
                                   (field_imm 0 (global Stdlib__Printf!))
                                   out/1205
                                   [0:
                                    [11:
                                     "\n** In state "
                                     [4:
                                      0 0 0
                                      [11:
                                       ", looking ahead at "
                                       [2: 0 [11: ", " 0]]]]]
                                    "\n** In state %d, looking ahead at %s, "]
                                   (apply
                                     (field_imm 9 (global Dune__exe__Lr1!))
                                     node/1248)
                                   (apply
                                     (field_imm 6
                                       (field_imm 2
                                         (global Dune__exe__Grammar!)))
                                     (field_imm 3 P/1268)))
                                 (let
                                   (*match*/4362 =
                                      (apply
                                        (field_imm 7
                                          (global Dune__exe__Item!))
                                        item/1455))
                                   (switch* *match*/4362
                                    case tag 0:
                                     (let
                                       (*match*/4364 =a
                                          (field_imm 1 *match*/4362)
                                        *match*/4363 =a
                                          (field_imm 0 *match*/4362))
                                       (apply
                                         (field_imm 0
                                           (global Stdlib__Printf!))
                                         out/1205
                                         [0:
                                          [11:
                                           "shifting is permitted\n** because of the following sub-derivation:\n\n"
                                           0]
                                          "shifting is permitted\n** because of the following sub-derivation:\n\n"]))
                                    case tag 1:
                                     (let
                                       (prod/1457 =a
                                          (field_imm 0 *match*/4362))
                                       (apply
                                         (field_imm 0
                                           (global Stdlib__Printf!))
                                         out/1205
                                         [0:
                                          [11:
                                           "reducing production\n** "
                                           [2:
                                            0
                                            [11:
                                             "\n** is permitted because of the following sub-derivation:\n\n"
                                             0]]]
                                          "reducing production\n** %s\n** is permitted because of the following sub-derivation:\n\n"]
                                         (apply
                                           (field_imm 29
                                             (field_imm 8
                                               (global Dune__exe__Grammar!)))
                                           prod/1457)))))
                                 (apply
                                   (field_imm 5
                                     (global Dune__exe__Derivation!))
                                   out/1205 derivation/1456)))
                             derivations/1454)
                           (apply (field_imm 62 (global Stdlib!)) out/1205)))))
                  with exn/4359
                   (catch
                     (if
                       (== exn/4359
                         (field_imm 0 (global Dune__exe__Lr1partial!)))
                       (seq
                         (+:=1 (field_imm 6 (global Dune__exe__Conflict!)))
                         (apply (field_imm 0 (global Stdlib__Printf!))
                           out/1205
                           [0:
                            [11:
                             "\n** Conflict (unexplainable) in state "
                             [4:
                              0 0 0
                              [11:
                               ".\n** Token"
                               [2:
                                0
                                [11:
                                 " involved: "
                                 [2:
                                  0 [11: "\n** " [2: 0 [11: ".\n" [10: 0]]]]]]]]]]
                            "\n** Conflict (unexplainable) in state %d.\n** Token%s involved: %s\n** %s.\n%!"]
                           (apply (field_imm 9 (global Dune__exe__Lr1!))
                             node/1248)
                           (if
                             (>
                               (apply
                                 (field_imm 4
                                   (field_imm 3 (global Dune__exe__Grammar!)))
                                 toks/1247)
                               1)
                             "s" "")
                           (apply
                             (field_imm 18
                               (field_imm 3 (global Dune__exe__Grammar!)))
                             toks/1247)
                           (let
                             (*match*/4360 =
                                (field_imm 2 (global Dune__exe__Settings!)))
                             (catch
                               (if (>= *match*/4360 3)
                                 "This may be an artificial conflict caused by your use of --lalr"
                                 (exit 49))
                              with (49)
                               "Please send your grammar to Menhir's developers"))))
                       (exit 50))
                    with (50) (reraise exn/4359)))))
             (apply (field_imm 7 (global Dune__exe__Conflict!)) 0)
             (apply (field_imm 0 (global Dune__exe__Time!))
               "Explaining conflicts")))
         0))
    0)
  (let
    (*match*/4390 =
       (seq (apply (field_imm 37 (global Dune__exe__Lr1!)) 0)
         (apply (field_imm 0 (global Dune__exe__Time!))
           "Resolving remaining conflicts")))
    0)
  (let
    (*match*/4392 =
       (seq (apply (field_imm 38 (global Dune__exe__Lr1!)) 0)
         (apply (field_imm 0 (global Dune__exe__Time!))
           "Adding extra reductions")))
    0)
  (let
    (*match*/4394 =
       (apply (field_imm 10 (global Dune__exe__Error!))
         (field_imm 12 (global Dune__exe__Error!))))
    0)
  0)
(seq
  (let
    (*match*/4284 =
       (if (field_imm 6 (global Dune__exe__Settings!))
         (apply (field_imm 0 (global Dune__exe__ReferenceGraph!)) 0) 0))
    0)
  (let
    (*match*/4288 =
       (if (field_imm 4 (global Dune__exe__Settings!))
         (let
           (Default/478 =
              (let (has_default_reduction/475 = (function _node/477 0))
                (makeblock 0 has_default_reduction/475))
            D/487 =
              (apply
                (let (let/4285 = (field_imm 0 (global Dune__exe__Dump!)))
                  (field_imm 0 (global Dune__exe__Dump!)))
                Default/478))
           (apply (field_imm 0 D/487)
             (apply (field_imm 27 (global Stdlib!))
               (field_imm 24 (global Dune__exe__Settings!)) ".automaton")))
         0))
    0)
  (letrec
    (follow/518
       (function derivation/519 offset'/520[int] param/632
         (if (isint param/632)
           (seq
             (if (== offset'/520 0) 0
               (raise
                 (makeblock 0 (global Assert_failure/28!)
                   [0: "src/conflict.ml" 68 6])))
             derivation/519)
           (let
             (*match*/4299 =a (field_imm 0 param/632)
              offset/522 =a (field_imm 1 *match*/4299)
              *match*/4295 =
                (apply (field_imm 4 (global Dune__exe__Item!))
                  (field_imm 0 *match*/4299))
              pos/525 =a (field_imm 3 *match*/4295)
              rhs/524 =a (field_imm 2 *match*/4295)
              derivation/526 =
                (if (== offset/522 offset'/520)
                  (apply (field_imm 2 (global Dune__exe__Derivation!))
                    pos/525 rhs/524 derivation/519 0)
                  (apply (field_imm 3 (global Dune__exe__Derivation!))
                    (array.get[addr] rhs/524 pos/525) derivation/519)))
             (apply follow/518 derivation/526 offset/522
               (field_imm 1 param/632))))))
    (setfield_ptr(root-init) 0 (global Dune__exe__Conflict!) follow/518))
  (let
    (Done/633 =
       (makeblock 248 "Dune__exe__Conflict.Done" (caml_fresh_oo_id 0)))
    (setfield_ptr(root-init) 1 (global Dune__exe__Conflict!) Done/633))
  (let
    (explain_shift_item/634 =
       (function start/636 input/637 stop/638
         (let
           (n/639 =[int] (array.length[addr] input/637)
            table/679 =
              (apply (field_imm 0 (global Stdlib__Hashtbl!)) 0 1023)
            queue/742 = (apply (field_imm 1 (global Stdlib__Queue!)) 0)
            enqueue/764 =
              (function ancestor/766 config/767 : int
                (try
                  (seq
                    (apply (field_imm 5 (global Stdlib__Hashtbl!)) table/679
                      config/767)
                    0)
                 with exn/4321
                  (if (== exn/4321 (field_imm 7 (global Stdlib!)))
                    (seq
                      (apply (field_imm 4 (global Stdlib__Hashtbl!))
                        table/679 config/767 ancestor/766)
                      (apply (field_imm 2 (global Stdlib__Queue!)) config/767
                        queue/742))
                    (reraise exn/4321)))))
           (seq (apply enqueue/764 0 (makeblock 0 (*,int) start/636 0))
             (try
               (seq
                 (apply (field_imm 18 (global Dune__exe__Misc!))
                   (function config/806 : int
                     (let
                       (offset/805 =a (field_imm 1 config/806)
                        item/804 =a (field_imm 0 config/806))
                       (seq
                         (if
                           (&&
                             (apply (field_imm 3 (global Dune__exe__Item!))
                               item/804 stop/638)
                             (== offset/805 n/639))
                           (raise
                             (field_imm 1 (global Dune__exe__Conflict!)))
                           0)
                         (let
                           (*match*/4319 =
                              (apply (field_imm 4 (global Dune__exe__Item!))
                                item/804)
                            length/810 =a (field_imm 4 *match*/4319)
                            pos/809 =a (field_imm 3 *match*/4319)
                            rhs/808 =a (field_imm 2 *match*/4319))
                           (seq
                             (if
                               (&& (< pos/809 length/810)
                                 (&& (< offset/805 n/639)
                                   (apply
                                     (field_imm 2
                                       (field_imm 5
                                         (global Dune__exe__Grammar!)))
                                     (array.get[addr] rhs/808 pos/809)
                                     (array.get[addr] input/637 offset/805))))
                               (let
                                 (config'/811 =
                                    (makeblock 0 (*,int)
                                      (apply
                                        (field_imm 0
                                          (global Dune__exe__Item!))
                                        (makeblock 0 (*,int)
                                          (field_imm 0 *match*/4319)
                                          (+ pos/809 1)))
                                      (+ offset/805 1)))
                                 (apply enqueue/764 (makeblock 0 config/806)
                                   config'/811))
                               0)
                             (if (< pos/809 length/810)
                               (let
                                 (*match*/4311 =
                                    (array.get[addr] rhs/808 pos/809))
                                 (switch* *match*/4311
                                  case tag 0:
                                   (apply
                                     (field_imm 22
                                       (field_imm 8
                                         (global Dune__exe__Grammar!)))
                                     (field_imm 0 *match*/4311)
                                     (function prod/867 : int
                                       (let
                                         (config'/868 =
                                            (makeblock 0 (*,int)
                                              (apply
                                                (field_imm 0
                                                  (global Dune__exe__Item!))
                                                (makeblock 0 (*,int) prod/867
                                                  0))
                                              offset/805))
                                         (apply enqueue/764
                                           (makeblock 0 config/806)
                                           config'/868))))
                                  case tag 1: 0))
                               0))))))
                   queue/742)
                 (raise
                   (makeblock 0 (global Assert_failure/28!)
                     [0: "src/conflict.ml" 161 4])))
              with exn/4300
               (if (== exn/4300 (field_imm 1 (global Dune__exe__Conflict!)))
                 (let
                   (configs/899 =
                      (apply (field_imm 9 (global Dune__exe__Misc!))
                        table/679 (makeblock 0 (*,int) stop/638 n/639))
                    *match*/4307 =
                      (apply (field_imm 4 (global Dune__exe__Item!))
                        stop/638)
                    derivation/902 =
                      (apply (field_imm 1 (global Dune__exe__Derivation!))
                        (field_imm 3 *match*/4307)
                        (field_imm 2 *match*/4307)))
                   (apply (field_imm 0 (global Dune__exe__Conflict!))
                     derivation/902 n/639 configs/899))
                 (reraise exn/4300)))))))
    (setfield_ptr(root-init) 2 (global Dune__exe__Conflict!)
      explain_shift_item/634))
  (let
    (config1toconfig0/905 =
       (function (param/4324, param/4325, param/4326)
         (makeblock 0 param/4324 param/4326)))
    (setfield_ptr(root-init) 3 (global Dune__exe__Conflict!)
      config1toconfig0/905))
  (letrec
    (follow1/910
       (function tok/911 derivation/912 offset'/913[int] param/1151
         (if (isint param/1151)
           (seq
             (if
               (apply
                 (field_imm 1 (field_imm 2 (global Dune__exe__Grammar!)))
                 tok/911
                 (field_imm 9 (field_imm 2 (global Dune__exe__Grammar!))))
               0
               (raise
                 (makeblock 0 (global Assert_failure/28!)
                   [0: "src/conflict.ml" 209 6])))
             derivation/912)
           (let
             (configs/916 =a (field_imm 1 param/1151)
              *match*/4339 =a (field_imm 0 param/1151)
              offset/915 =a (field_imm 2 *match*/4339)
              *match*/4337 =
                (apply (field_imm 4 (global Dune__exe__Item!))
                  (field_imm 0 *match*/4339))
              pos/948 =a (field_imm 3 *match*/4337)
              rhs/947 =a (field_imm 2 *match*/4337))
             (if (== offset/915 offset'/913)
               (let
                 (*match*/4330 =
                    (apply
                      (field_imm 4
                        (field_imm 11 (global Dune__exe__Grammar!)))
                      (field_imm 0 *match*/4337) (+ pos/948 1)))
                 (if
                   (apply
                     (field_imm 6 (field_imm 3 (global Dune__exe__Grammar!)))
                     tok/911 (field_imm 1 *match*/4330))
                   (let
                     (e/1043 =
                        (apply
                          (field_imm 6
                            (field_imm 11 (global Dune__exe__Grammar!)))
                          tok/911 rhs/947 (+ pos/948 1))
                      comment/1044 =
                        (apply (field_imm 27 (global Stdlib!))
                          "lookahead token appears"
                          (if (caml_string_equal e/1043 "") ""
                            (apply (field_imm 27 (global Stdlib!))
                              " because " e/1043)))
                      derivation/1045 =
                        (apply (field_imm 2 (global Dune__exe__Derivation!))
                          pos/948 rhs/947 derivation/912
                          (makeblock 0 comment/1044)))
                     (apply (field_imm 0 (global Dune__exe__Conflict!))
                       derivation/1045 offset/915
                       (apply (field_imm 19 (global Stdlib__List!))
                         (field_imm 3 (global Dune__exe__Conflict!))
                         configs/916)))
                   (seq
                     (if (field_imm 0 *match*/4330) 0
                       (raise
                         (makeblock 0 (global Assert_failure/28!)
                           [0: "src/conflict.ml" 247 10])))
                     (let
                       (comment/1112 =
                          (apply (field_imm 27 (global Stdlib!))
                            "lookahead token is inherited"
                            (if (< (+ pos/948 1) (field_imm 4 *match*/4337))
                              (apply (field_imm 3 (global Stdlib__Printf!))
                                [0:
                                 [11:
                                  " because " [2: 0 [11: " can vanish" 0]]]
                                 " because %s can vanish"]
                                (apply
                                  (field_imm 8
                                    (field_imm 5
                                      (global Dune__exe__Grammar!)))
                                  (+ pos/948 1) rhs/947))
                              ""))
                        derivation/1149 =
                          (apply
                            (field_imm 2 (global Dune__exe__Derivation!))
                            pos/948 rhs/947 derivation/912
                            (makeblock 0 comment/1112)))
                       (apply follow1/910 tok/911 derivation/1149 offset/915
                         configs/916)))))
               (let
                 (derivation/1150 =
                    (apply (field_imm 3 (global Dune__exe__Derivation!))
                      (array.get[addr] rhs/947 pos/948) derivation/912))
                 (apply follow1/910 tok/911 derivation/1150 offset/915
                   configs/916)))))))
    (setfield_ptr(root-init) 4 (global Dune__exe__Conflict!) follow1/910))
  (let
    (explain_reduce_item/1152 =
       (function tok/1154 start/1155 input/1156 stop/1157
         (let
           (n/1158 =[int] (array.length[addr] input/1156)
            table/1159 =
              (apply (field_imm 0 (global Stdlib__Hashtbl!)) 0 1023)
            queue/1160 = (apply (field_imm 1 (global Stdlib__Queue!)) 0)
            enqueue/1161 =
              (function ancestor/1163 config/1164 : int
                (try
                  (seq
                    (apply (field_imm 5 (global Stdlib__Hashtbl!)) table/1159
                      config/1164)
                    0)
                 with exn/4356
                  (if (== exn/4356 (field_imm 7 (global Stdlib!)))
                    (seq
                      (apply (field_imm 4 (global Stdlib__Hashtbl!))
                        table/1159 config/1164 ancestor/1163)
                      (apply (field_imm 2 (global Stdlib__Queue!))
                        config/1164 queue/1160))
                    (reraise exn/4356)))))
           (seq
             (apply enqueue/1161 0
               (makeblock 0 (*,int,int) start/1155
                 (apply
                   (field_imm 1 (field_imm 2 (global Dune__exe__Grammar!)))
                   tok/1154
                   (field_imm 9 (field_imm 2 (global Dune__exe__Grammar!))))
                 0))
             (try
               (seq
                 (apply (field_imm 18 (global Dune__exe__Misc!))
                   (function config/1168 : int
                     (let
                       (offset/1167 =a (field_imm 2 config/1168)
                        lookahead/1166 =a (field_imm 1 config/1168)
                        item/1165 =a (field_imm 0 config/1168))
                       (seq
                         (if
                           (&&
                             (apply (field_imm 3 (global Dune__exe__Item!))
                               item/1165 stop/1157)
                             (&& lookahead/1166 (== offset/1167 n/1158)))
                           (raise
                             (field_imm 1 (global Dune__exe__Conflict!)))
                           0)
                         (let
                           (*match*/4355 =
                              (apply (field_imm 4 (global Dune__exe__Item!))
                                item/1165)
                            length/1173 =a (field_imm 4 *match*/4355)
                            pos/1172 =a (field_imm 3 *match*/4355)
                            rhs/1171 =a (field_imm 2 *match*/4355)
                            prod/1169 =a (field_imm 0 *match*/4355))
                           (seq
                             (if
                               (&& (< pos/1172 length/1173)
                                 (&& (< offset/1167 n/1158)
                                   (apply
                                     (field_imm 2
                                       (field_imm 5
                                         (global Dune__exe__Grammar!)))
                                     (array.get[addr] rhs/1171 pos/1172)
                                     (array.get[addr] input/1156 offset/1167))))
                               (let
                                 (config'/1174 =
                                    (makeblock 0 (*,int,int)
                                      (apply
                                        (field_imm 0
                                          (global Dune__exe__Item!))
                                        (makeblock 0 (*,int) prod/1169
                                          (+ pos/1172 1)))
                                      lookahead/1166 (+ offset/1167 1)))
                                 (apply enqueue/1161
                                   (makeblock 0 config/1168) config'/1174))
                               0)
                             (if (< pos/1172 length/1173)
                               (let
                                 (*match*/4347 =
                                    (array.get[addr] rhs/1171 pos/1172))
                                 (switch* *match*/4347
                                  case tag 0:
                                   (let
                                     (*match*/4346 =
                                        (apply
                                          (field_imm 4
                                            (field_imm 11
                                              (global Dune__exe__Grammar!)))
                                          prod/1169 (+ pos/1172 1))
                                      first/1178 =
                                        (apply
                                          (field_imm 6
                                            (field_imm 3
                                              (global Dune__exe__Grammar!)))
                                          tok/1154
                                          (field_imm 1 *match*/4346))
                                      lookahead'/1179 =[int]
                                        (if (field_imm 0 *match*/4346)
                                          (|| first/1178 lookahead/1166)
                                          first/1178))
                                     (apply
                                       (field_imm 22
                                         (field_imm 8
                                           (global Dune__exe__Grammar!)))
                                       (field_imm 0 *match*/4347)
                                       (function prod/1180 : int
                                         (let
                                           (config'/1181 =
                                              (makeblock 0 (*,int,int)
                                                (apply
                                                  (field_imm 0
                                                    (global Dune__exe__Item!))
                                                  (makeblock 0 (*,int)
                                                    prod/1180 0))
                                                lookahead'/1179 offset/1167))
                                           (apply enqueue/1161
                                             (makeblock 0 config/1168)
                                             config'/1181)))))
                                  case tag 1: 0))
                               0))))))
                   queue/1160)
                 (raise
                   (makeblock 0 (global Assert_failure/28!)
                     [0: "src/conflict.ml" 346 4])))
              with exn/4341
               (if (== exn/4341 (field_imm 1 (global Dune__exe__Conflict!)))
                 (let
                   (configs/1182 =
                      (apply (field_imm 9 (global Dune__exe__Misc!))
                        table/1159
                        (makeblock 0 (*,int,int) stop/1157 1 n/1158))
                    derivation/1183 =
                      (field_imm 0 (global Dune__exe__Derivation!)))
                   (apply (field_imm 4 (global Dune__exe__Conflict!))
                     tok/1154 derivation/1183 n/1158 configs/1182))
                 (reraise exn/4341)))))))
    (setfield_ptr(root-init) 5 (global Dune__exe__Conflict!)
      explain_reduce_item/1152))
  (let (unexplainable/1185 = (makemutable 0 (int) 0))
    (setfield_ptr(root-init) 6 (global Dune__exe__Conflict!)
      unexplainable/1185))
  (let
    (log_unexplainable/1186 =
       (function param/1204[int] : int
         (if (> (field_int 0 (field_imm 6 (global Dune__exe__Conflict!))) 0)
           (apply (field_imm 3 (global Dune__exe__Error!)) 2
             (function f/1203 : int
               (apply (field_imm 0 (global Stdlib__Printf!)) f/1203
                 [0:
                  [4:
                   0 0 0
                   [11:
                    " conflict" [2: 0 [11: " could not be explained.\n" 0]]]]
                  "%d conflict%s could not be explained.\n"]
                 (field_int 0 (field_imm 6 (global Dune__exe__Conflict!)))
                 (if
                   (>
                     (field_int 0
                       (field_imm 6 (global Dune__exe__Conflict!)))
                     1)
                   "s" ""))))
           0)))
    (setfield_ptr(root-init) 7 (global Dune__exe__Conflict!)
      log_unexplainable/1186))
  (let
    (*match*/4388 =
       (if (field_imm 3 (global Dune__exe__Settings!))
         (let
           (out/1205 =
              (apply (field_imm 59 (global Stdlib!))
                (apply (field_imm 27 (global Stdlib!))
                  (field_imm 24 (global Dune__exe__Settings!)) ".conflicts")))
           (seq
             (apply (field_imm 34 (global Dune__exe__Lr1!))
               (function toks/1247 node/1248 : int
                 (try
                   (let
                     (P/1268 =
                        (apply
                          (let
                            (let/4361 =
                               (field_imm 1 (global Dune__exe__Lr1partial!)))
                            (field_imm 1 (global Dune__exe__Lr1partial!)))
                          (makeblock 0 toks/1247 node/1248))
                      closure/1269 =
                        (apply (field_imm 10 (global Dune__exe__Lr0!))
                          (field_imm 2 P/1268))
                      *match*/4385 =
                        (apply
                          (field_imm 19
                            (field_imm 9 (global Dune__exe__Item!)))
                          (function item/1376 toks/1377 param/1381
                            (let
                              (reduce/1379 =a (field_imm 1 param/1381)
                               shift/1378 =a (field_imm 0 param/1381)
                               *match*/4378 =
                                 (apply
                                   (field_imm 7 (global Dune__exe__Item!))
                                   item/1376))
                              (catch
                                (switch* *match*/4378
                                 case tag 0:
                                  (let
                                    (*match*/4379 =a
                                       (field_imm 0 *match*/4378))
                                    (switch* *match*/4379
                                     case tag 0: (exit 58)
                                     case tag 1:
                                      (if
                                        (apply
                                          (field_imm 1
                                            (field_imm 2
                                              (global Dune__exe__Grammar!)))
                                          (field_imm 0 *match*/4379)
                                          (field_imm 3 P/1268))
                                        (makeblock 0 (int,int)
                                          (+ shift/1378 1) reduce/1379)
                                        (exit 58))))
                                 case tag 1:
                                  (if
                                    (apply
                                      (field_imm 6
                                        (field_imm 3
                                          (global Dune__exe__Grammar!)))
                                      (field_imm 3 P/1268) toks/1377)
                                    (makeblock 0 (int,int) shift/1378
                                      (+ reduce/1379 1))
                                    (exit 58)))
                               with (58)
                                (makeblock 0 (int,int) shift/1378
                                  reduce/1379))))
                          closure/1269 [0: 0 0])
                      shift/1374 =a (field_imm 0 *match*/4385)
                      kind/1382 =
                        (if
                          (&& (> shift/1374 0)
                            (> (field_imm 1 *match*/4385) 1))
                          "shift/reduce/reduce"
                          (if (> shift/1374 0) "shift/reduce"
                            "reduce/reduce")))
                     (seq
                       (apply (field_imm 0 (global Stdlib__Printf!)) out/1205
                         [0:
                          [11:
                           "\n** Conflict ("
                           [2:
                            0
                            [11:
                             ") in state "
                             [4:
                              0 0 0
                              [11:
                               ".\n** Token"
                               [2:
                                0
                                [11:
                                 " involved: "
                                 [2:
                                  0
                                  [12:
                                   '\n'
                                   [2:
                                    0
                                    [11:
                                     "** This state is reached from "
                                     [2:
                                      0
                                      [11:
                                       " after reading:\n\n"
                                       [2: 0 [12: '\n' 0]]]]]]]]]]]]]]]
                          "\n** Conflict (%s) in state %d.\n** Token%s involved: %s\n%s** This state is reached from %s after reading:\n\n%s\n"]
                         kind/1382
                         (apply (field_imm 9 (global Dune__exe__Lr1!))
                           node/1248)
                         (if
                           (>
                             (apply
                               (field_imm 4
                                 (field_imm 3 (global Dune__exe__Grammar!)))
                               toks/1247)
                             1)
                           "s" "")
                         (apply
                           (field_imm 18
                             (field_imm 3 (global Dune__exe__Grammar!)))
                           toks/1247)
                         (if
                           (>
                             (apply
                               (field_imm 4
                                 (field_imm 3 (global Dune__exe__Grammar!)))
                               toks/1247)
                             1)
                           (apply (field_imm 3 (global Stdlib__Printf!))
                             [0:
                              [11:
                               "** The following explanations concentrate on token "
                               [2: 0 [11: ".\n" 0]]]
                              "** The following explanations concentrate on token %s.\n"]
                             (apply
                               (field_imm 6
                                 (field_imm 2 (global Dune__exe__Grammar!)))
                               (field_imm 3 P/1268)))
                           "")
                         (apply
                           (field_imm 5
                             (field_imm 0 (global Dune__exe__Grammar!)))
                           0
                           (apply (field_imm 5 (global Dune__exe__Item!))
                             (field_imm 0 P/1268)))
                         (apply
                           (field_imm 7
                             (field_imm 5 (global Dune__exe__Grammar!)))
                           (field_imm 1 P/1268)))
                       (let
                         (*match*/4376 =
                            (apply
                              (field_imm 19
                                (field_imm 9 (global Dune__exe__Item!)))
                              (function item/1445 toks/1446 param/1452
                                (let
                                  (derivations/1448 =a
                                     (field_imm 1 param/1452)
                                   still_looking_for_shift_item/1447 =a
                                     (field_imm 0 param/1452)
                                   *match*/4369 =
                                     (apply
                                       (field_imm 7
                                         (global Dune__exe__Item!))
                                       item/1445))
                                  (catch
                                    (switch* *match*/4369
                                     case tag 0:
                                      (let
                                        (*match*/4370 =a
                                           (field_imm 0 *match*/4369))
                                        (switch* *match*/4370
                                         case tag 0: (exit 54)
                                         case tag 1:
                                          (if
                                            (&&
                                              still_looking_for_shift_item/1447
                                              (apply
                                                (field_imm 1
                                                  (field_imm 2
                                                    (global Dune__exe__Grammar!)))
                                                (field_imm 0 *match*/4370)
                                                (field_imm 3 P/1268)))
                                            (makeblock 0 (int,*) 0
                                              (let
                                                (derivation/1450 =
                                                   (apply
                                                     (field_imm 2
                                                       (global Dune__exe__Conflict!))
                                                     (field_imm 0 P/1268)
                                                     (field_imm 1 P/1268)
                                                     item/1445))
                                                (apply
                                                  (field_imm 3
                                                    (field_imm 9
                                                      (global Dune__exe__Item!)))
                                                  item/1445 derivation/1450
                                                  derivations/1448)))
                                            (exit 54))))
                                     case tag 1:
                                      (if
                                        (apply
                                          (field_imm 6
                                            (field_imm 3
                                              (global Dune__exe__Grammar!)))
                                          (field_imm 3 P/1268) toks/1446)
                                        (makeblock 0 (int,*)
                                          still_looking_for_shift_item/1447
                                          (let
                                            (derivation/1451 =
                                               (apply
                                                 (field_imm 5
                                                   (global Dune__exe__Conflict!))
                                                 (field_imm 3 P/1268)
                                                 (field_imm 0 P/1268)
                                                 (field_imm 1 P/1268)
                                                 item/1445))
                                            (apply
                                              (field_imm 3
                                                (field_imm 9
                                                  (global Dune__exe__Item!)))
                                              item/1445 derivation/1451
                                              derivations/1448)))
                                        (exit 54)))
                                   with (54)
                                    (makeblock 0 (int,*)
                                      still_looking_for_shift_item/1447
                                      derivations/1448))))
                              closure/1269
                              (makeblock 0 (int,*) 1
                                (field_imm 0
                                  (field_imm 9 (global Dune__exe__Item!)))))
                          *match*/4368 =
                            (apply
                              (field_imm 4 (global Dune__exe__Derivation!))
                              (field_imm 1 *match*/4376)))
                         (seq
                           (apply (field_imm 0 (global Stdlib__Printf!))
                             out/1205
                             [0:
                              [11:
                               "\n** The derivations that appear below have the following common factor:\n** (The question mark symbol (?) represents the spot where the derivations begin to differ.)\n\n"
                               0]
                              "\n** The derivations that appear below have the following common factor:\n** (The question mark symbol (?) represents the spot where the derivations begin to differ.)\n\n"])
                           (apply
                             (field_imm 6 (global Dune__exe__Derivation!))
                             out/1205 (field_imm 0 *match*/4368))
                           (apply
                             (field_imm 18
                               (field_imm 9 (global Dune__exe__Item!)))
                             (function item/1455 derivation/1456 : int
                               (seq
                                 (apply
                                   (field_imm 0 (global Stdlib__Printf!))
                                   out/1205
                                   [0:
                                    [11:
                                     "\n** In state "
                                     [4:
                                      0 0 0
                                      [11:
                                       ", looking ahead at "
                                       [2: 0 [11: ", " 0]]]]]
                                    "\n** In state %d, looking ahead at %s, "]
                                   (apply
                                     (field_imm 9 (global Dune__exe__Lr1!))
                                     node/1248)
                                   (apply
                                     (field_imm 6
                                       (field_imm 2
                                         (global Dune__exe__Grammar!)))
                                     (field_imm 3 P/1268)))
                                 (let
                                   (*match*/4362 =
                                      (apply
                                        (field_imm 7
                                          (global Dune__exe__Item!))
                                        item/1455))
                                   (switch* *match*/4362
                                    case tag 0:
                                     (apply
                                       (field_imm 0 (global Stdlib__Printf!))
                                       out/1205
                                       [0:
                                        [11:
                                         "shifting is permitted\n** because of the following sub-derivation:\n\n"
                                         0]
                                        "shifting is permitted\n** because of the following sub-derivation:\n\n"])
                                    case tag 1:
                                     (apply
                                       (field_imm 0 (global Stdlib__Printf!))
                                       out/1205
                                       [0:
                                        [11:
                                         "reducing production\n** "
                                         [2:
                                          0
                                          [11:
                                           "\n** is permitted because of the following sub-derivation:\n\n"
                                           0]]]
                                        "reducing production\n** %s\n** is permitted because of the following sub-derivation:\n\n"]
                                       (apply
                                         (field_imm 29
                                           (field_imm 8
                                             (global Dune__exe__Grammar!)))
                                         (field_imm 0 *match*/4362)))))
                                 (apply
                                   (field_imm 5
                                     (global Dune__exe__Derivation!))
                                   out/1205 derivation/1456)))
                             (field_imm 1 *match*/4368))
                           (apply (field_imm 62 (global Stdlib!)) out/1205)))))
                  with exn/4359
                   (if
                     (== exn/4359
                       (field_imm 0 (global Dune__exe__Lr1partial!)))
                     (seq (+:=1 (field_imm 6 (global Dune__exe__Conflict!)))
                       (apply (field_imm 0 (global Stdlib__Printf!)) out/1205
                         [0:
                          [11:
                           "\n** Conflict (unexplainable) in state "
                           [4:
                            0 0 0
                            [11:
                             ".\n** Token"
                             [2:
                              0
                              [11:
                               " involved: "
                               [2:
                                0 [11: "\n** " [2: 0 [11: ".\n" [10: 0]]]]]]]]]]
                          "\n** Conflict (unexplainable) in state %d.\n** Token%s involved: %s\n** %s.\n%!"]
                         (apply (field_imm 9 (global Dune__exe__Lr1!))
                           node/1248)
                         (if
                           (>
                             (apply
                               (field_imm 4
                                 (field_imm 3 (global Dune__exe__Grammar!)))
                               toks/1247)
                             1)
                           "s" "")
                         (apply
                           (field_imm 18
                             (field_imm 3 (global Dune__exe__Grammar!)))
                           toks/1247)
                         (let
                           (*match*/4360 =
                              (field_imm 2 (global Dune__exe__Settings!)))
                           (if (>= *match*/4360 3)
                             "This may be an artificial conflict caused by your use of --lalr"
                             "Please send your grammar to Menhir's developers"))))
                     (reraise exn/4359)))))
             (apply (field_imm 7 (global Dune__exe__Conflict!)) 0)
             (apply (field_imm 0 (global Dune__exe__Time!))
               "Explaining conflicts")))
         0))
    0)
  (let
    (*match*/4390 =
       (seq (apply (field_imm 37 (global Dune__exe__Lr1!)) 0)
         (apply (field_imm 0 (global Dune__exe__Time!))
           "Resolving remaining conflicts")))
    0)
  (let
    (*match*/4392 =
       (seq (apply (field_imm 38 (global Dune__exe__Lr1!)) 0)
         (apply (field_imm 0 (global Dune__exe__Time!))
           "Adding extra reductions")))
    0)
  (let
    (*match*/4394 =
       (apply (field_imm 10 (global Dune__exe__Error!))
         (field_imm 12 (global Dune__exe__Error!))))
    0)
  0)
