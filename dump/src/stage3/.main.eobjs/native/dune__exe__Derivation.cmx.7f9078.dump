[
  structure_item (src/derivation.ml[14,1000+0]..[14,1000+12])
    Pstr_open Fresh
    module_expr (src/derivation.ml[14,1000+5]..[14,1000+12])
      Pmod_ident "Grammar" (src/derivation.ml[14,1000+5]..[14,1000+12])
  structure_item (src/derivation.ml[33,1812+0]..[38,1927+3])
    Pstr_type Rec
    [
      type_declaration "level" (src/derivation.ml[33,1812+12]..[33,1812+17]) (src/derivation.ml[33,1812+0]..[38,1927+3])
        ptype_params =
          [
            core_type (src/derivation.ml[33,1812+5]..[33,1812+11])
              Ptyp_var focus
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (src/derivation.ml[34,1834+4]..[34,1834+26])
                Immutable
                "prefix" (src/derivation.ml[34,1834+4]..[34,1834+10])                core_type (src/derivation.ml[34,1834+12]..[34,1834+25])
                  Ptyp_constr "list" (src/derivation.ml[34,1834+21]..[34,1834+25])
                  [
                    core_type (src/derivation.ml[34,1834+12]..[34,1834+20])
                      Ptyp_constr "Symbol.t" (src/derivation.ml[34,1834+12]..[34,1834+20])
                      []
                  ]
              (src/derivation.ml[35,1861+4]..[35,1861+18])
                Immutable
                "focus" (src/derivation.ml[35,1861+4]..[35,1861+9])                core_type (src/derivation.ml[35,1861+11]..[35,1861+17])
                  Ptyp_var focus
              (src/derivation.ml[36,1880+4]..[36,1880+26])
                Immutable
                "suffix" (src/derivation.ml[36,1880+4]..[36,1880+10])                core_type (src/derivation.ml[36,1880+12]..[36,1880+25])
                  Ptyp_constr "list" (src/derivation.ml[36,1880+21]..[36,1880+25])
                  [
                    core_type (src/derivation.ml[36,1880+12]..[36,1880+20])
                      Ptyp_constr "Symbol.t" (src/derivation.ml[36,1880+12]..[36,1880+20])
                      []
                  ]
              (src/derivation.ml[37,1907+4]..[37,1907+19])
                Immutable
                "comment" (src/derivation.ml[37,1907+4]..[37,1907+11])                core_type (src/derivation.ml[37,1907+13]..[37,1907+19])
                  Ptyp_constr "string" (src/derivation.ml[37,1907+13]..[37,1907+19])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/derivation.ml[40,1932+0]..[45,2002+14])
    Pstr_type Rec
    [
      type_declaration "tree" (src/derivation.ml[40,1932+5]..[40,1932+9]) (src/derivation.ml[40,1932+0]..[42,1955+32])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (src/derivation.ml[41,1944+2]..[41,1944+10])
                "TEmpty" (src/derivation.ml[41,1944+4]..[41,1944+10])
                []
                None
              (src/derivation.ml[42,1955+2]..[42,1955+32])
                "TRooted" (src/derivation.ml[42,1955+4]..[42,1955+11])
                [
                  core_type (src/derivation.ml[42,1955+15]..[42,1955+23])
                    Ptyp_constr "Symbol.t" (src/derivation.ml[42,1955+15]..[42,1955+23])
                    []
                  core_type (src/derivation.ml[42,1955+26]..[42,1955+32])
                    Ptyp_constr "forest" (src/derivation.ml[42,1955+26]..[42,1955+32])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "forest" (src/derivation.ml[44,1989+4]..[44,1989+10]) (src/derivation.ml[44,1989+0]..[45,2002+14])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/derivation.ml[45,2002+4]..[45,2002+14])
              Ptyp_constr "level" (src/derivation.ml[45,2002+9]..[45,2002+14])
              [
                core_type (src/derivation.ml[45,2002+4]..[45,2002+8])
                  Ptyp_constr "tree" (src/derivation.ml[45,2002+4]..[45,2002+8])
                  []
              ]
    ]
  structure_item (src/derivation.ml[53,2244+0]..[58,2316+24])
    Pstr_type Rec
    [
      type_declaration "ctree" (src/derivation.ml[53,2244+5]..[53,2244+10]) (src/derivation.ml[53,2244+0]..[54,2257+33])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (src/derivation.ml[54,2257+2]..[54,2257+33])
                "CRooted" (src/derivation.ml[54,2257+4]..[54,2257+11])
                [
                  core_type (src/derivation.ml[54,2257+15]..[54,2257+23])
                    Ptyp_constr "Symbol.t" (src/derivation.ml[54,2257+15]..[54,2257+23])
                    []
                  core_type (src/derivation.ml[54,2257+26]..[54,2257+33])
                    Ptyp_constr "cforest" (src/derivation.ml[54,2257+26]..[54,2257+33])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "cforest" (src/derivation.ml[56,2292+4]..[56,2292+11]) (src/derivation.ml[56,2292+0]..[58,2316+24])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (src/derivation.ml[57,2306+2]..[57,2306+9])
                "CHole" (src/derivation.ml[57,2306+4]..[57,2306+9])
                []
                None
              (src/derivation.ml[58,2316+2]..[58,2316+24])
                "CCons" (src/derivation.ml[58,2316+4]..[58,2316+9])
                [
                  core_type (src/derivation.ml[58,2316+13]..[58,2316+24])
                    Ptyp_constr "level" (src/derivation.ml[58,2316+19]..[58,2316+24])
                    [
                      core_type (src/derivation.ml[58,2316+13]..[58,2316+18])
                        Ptyp_constr "ctree" (src/derivation.ml[58,2316+13]..[58,2316+18])
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/derivation.ml[62,2386+0]..[63,2395+10])
    Pstr_type Rec
    [
      type_declaration "t" (src/derivation.ml[62,2386+5]..[62,2386+6]) (src/derivation.ml[62,2386+0]..[63,2395+10])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/derivation.ml[63,2395+4]..[63,2395+10])
              Ptyp_constr "forest" (src/derivation.ml[63,2395+4]..[63,2395+10])
              []
    ]
  structure_item (src/derivation.ml[65,2407+0]..[66,2422+11])
    Pstr_type Rec
    [
      type_declaration "context" (src/derivation.ml[65,2407+5]..[65,2407+12]) (src/derivation.ml[65,2407+0]..[66,2422+11])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/derivation.ml[66,2422+4]..[66,2422+11])
              Ptyp_constr "cforest" (src/derivation.ml[66,2422+4]..[66,2422+11])
              []
    ]
  structure_item (src/derivation.ml[72,2538+0]..[76,2598+38])
    Pstr_value Rec
    [
      <def>
        pattern (src/derivation.ml[72,2538+8]..[72,2538+21])
          Ppat_var "array_to_list" (src/derivation.ml[72,2538+8]..[72,2538+21])
        expression (src/derivation.ml[72,2538+22]..[76,2598+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/derivation.ml[72,2538+22]..[72,2538+23])
            Ppat_var "a" (src/derivation.ml[72,2538+22]..[72,2538+23])
          expression (src/derivation.ml[72,2538+24]..[76,2598+38]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/derivation.ml[72,2538+24]..[72,2538+25])
              Ppat_var "i" (src/derivation.ml[72,2538+24]..[72,2538+25])
            expression (src/derivation.ml[72,2538+26]..[76,2598+38]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/derivation.ml[72,2538+26]..[72,2538+27])
                Ppat_var "j" (src/derivation.ml[72,2538+26]..[72,2538+27])
              expression (src/derivation.ml[73,2568+2]..[76,2598+38])
                Pexp_ifthenelse
                expression (src/derivation.ml[73,2568+5]..[73,2568+10])
                  Pexp_apply
                  expression (src/derivation.ml[73,2568+7]..[73,2568+8])
                    Pexp_ident "=" (src/derivation.ml[73,2568+7]..[73,2568+8])
                  [
                    <arg>
                    Nolabel
                      expression (src/derivation.ml[73,2568+5]..[73,2568+6])
                        Pexp_ident "i" (src/derivation.ml[73,2568+5]..[73,2568+6])
                    <arg>
                    Nolabel
                      expression (src/derivation.ml[73,2568+9]..[73,2568+10])
                        Pexp_ident "j" (src/derivation.ml[73,2568+9]..[73,2568+10])
                  ]
                expression (src/derivation.ml[74,2584+4]..[74,2584+6])
                  Pexp_construct "[]" (src/derivation.ml[74,2584+4]..[74,2584+6])
                  None
                Some
                  expression (src/derivation.ml[76,2598+4]..[76,2598+38])
                    Pexp_construct "::" (src/derivation.ml[76,2598+10]..[76,2598+12])
                    Some
                      expression (src/derivation.ml[76,2598+4]..[76,2598+38]) ghost
                        Pexp_tuple
                        [
                          expression (src/derivation.ml[76,2598+4]..[76,2598+9])
                            Pexp_apply
                            expression (src/derivation.ml[76,2598+4]..[76,2598+9]) ghost
                              Pexp_ident "Array.get" (src/derivation.ml[76,2598+4]..[76,2598+9]) ghost
                            [
                              <arg>
                              Nolabel
                                expression (src/derivation.ml[76,2598+4]..[76,2598+5])
                                  Pexp_ident "a" (src/derivation.ml[76,2598+4]..[76,2598+5])
                              <arg>
                              Nolabel
                                expression (src/derivation.ml[76,2598+7]..[76,2598+8])
                                  Pexp_ident "i" (src/derivation.ml[76,2598+7]..[76,2598+8])
                            ]
                          expression (src/derivation.ml[76,2598+13]..[76,2598+38])
                            Pexp_apply
                            expression (src/derivation.ml[76,2598+13]..[76,2598+26])
                              Pexp_ident "array_to_list" (src/derivation.ml[76,2598+13]..[76,2598+26])
                            [
                              <arg>
                              Nolabel
                                expression (src/derivation.ml[76,2598+27]..[76,2598+28])
                                  Pexp_ident "a" (src/derivation.ml[76,2598+27]..[76,2598+28])
                              <arg>
                              Nolabel
                                expression (src/derivation.ml[76,2598+29]..[76,2598+36])
                                  Pexp_apply
                                  expression (src/derivation.ml[76,2598+32]..[76,2598+33])
                                    Pexp_ident "+" (src/derivation.ml[76,2598+32]..[76,2598+33])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/derivation.ml[76,2598+30]..[76,2598+31])
                                        Pexp_ident "i" (src/derivation.ml[76,2598+30]..[76,2598+31])
                                    <arg>
                                    Nolabel
                                      expression (src/derivation.ml[76,2598+34]..[76,2598+35])
                                        Pexp_constant PConst_int (1,None)
                                  ]
                              <arg>
                              Nolabel
                                expression (src/derivation.ml[76,2598+37]..[76,2598+38])
                                  Pexp_ident "j" (src/derivation.ml[76,2598+37]..[76,2598+38])
                            ]
                        ]
    ]
  structure_item (src/derivation.ml[78,2638+0]..[84,2725+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[78,2638+4]..[78,2638+9])
          Ppat_var "empty" (src/derivation.ml[78,2638+4]..[78,2638+9])
        expression (src/derivation.ml[79,2650+2]..[84,2725+3])
          Pexp_record
          [
            "prefix" (src/derivation.ml[80,2654+4]..[80,2654+10])
              expression (src/derivation.ml[80,2654+13]..[80,2654+15])
                Pexp_construct "[]" (src/derivation.ml[80,2654+13]..[80,2654+15])
                None
            "focus" (src/derivation.ml[81,2671+4]..[81,2671+9])
              expression (src/derivation.ml[81,2671+12]..[81,2671+18])
                Pexp_construct "TEmpty" (src/derivation.ml[81,2671+12]..[81,2671+18])
                None
            "suffix" (src/derivation.ml[82,2691+4]..[82,2691+10])
              expression (src/derivation.ml[82,2691+13]..[82,2691+15])
                Pexp_construct "[]" (src/derivation.ml[82,2691+13]..[82,2691+15])
                None
            "comment" (src/derivation.ml[83,2708+4]..[83,2708+11])
              expression (src/derivation.ml[83,2708+14]..[83,2708+16])
                Pexp_constant PConst_string("",(src/derivation.ml[83,2708+15]..[83,2708+15]),None)
          ]
          None
    ]
  structure_item (src/derivation.ml[86,2730+0]..[94,2910+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[86,2730+4]..[86,2730+8])
          Ppat_var "tail" (src/derivation.ml[86,2730+4]..[86,2730+8])
        expression (src/derivation.ml[86,2730+9]..[94,2910+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/derivation.ml[86,2730+9]..[86,2730+12])
            Ppat_var "pos" (src/derivation.ml[86,2730+9]..[86,2730+12])
          expression (src/derivation.ml[86,2730+13]..[94,2910+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/derivation.ml[86,2730+13]..[86,2730+16])
              Ppat_var "rhs" (src/derivation.ml[86,2730+13]..[86,2730+16])
            expression (src/derivation.ml[87,2749+2]..[94,2910+3])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/derivation.ml[87,2749+6]..[87,2749+12])
                    Ppat_var "length" (src/derivation.ml[87,2749+6]..[87,2749+12])
                  expression (src/derivation.ml[87,2749+15]..[87,2749+31])
                    Pexp_apply
                    expression (src/derivation.ml[87,2749+15]..[87,2749+27])
                      Pexp_ident "Array.length" (src/derivation.ml[87,2749+15]..[87,2749+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/derivation.ml[87,2749+28]..[87,2749+31])
                          Pexp_ident "rhs" (src/derivation.ml[87,2749+28]..[87,2749+31])
                    ]
              ]
              expression (src/derivation.ml[88,2784+2]..[94,2910+3])
                Pexp_sequence
                expression (src/derivation.ml[88,2784+2]..[88,2784+23])
                  Pexp_assert
                  expression (src/derivation.ml[88,2784+9]..[88,2784+23])
                    Pexp_apply
                    expression (src/derivation.ml[88,2784+14]..[88,2784+15])
                      Pexp_ident "<" (src/derivation.ml[88,2784+14]..[88,2784+15])
                    [
                      <arg>
                      Nolabel
                        expression (src/derivation.ml[88,2784+10]..[88,2784+13])
                          Pexp_ident "pos" (src/derivation.ml[88,2784+10]..[88,2784+13])
                      <arg>
                      Nolabel
                        expression (src/derivation.ml[88,2784+16]..[88,2784+22])
                          Pexp_ident "length" (src/derivation.ml[88,2784+16]..[88,2784+22])
                    ]
                expression (src/derivation.ml[89,2809+2]..[94,2910+3])
                  Pexp_record
                  [
                    "prefix" (src/derivation.ml[90,2813+4]..[90,2813+10])
                      expression (src/derivation.ml[90,2813+13]..[90,2813+15])
                        Pexp_construct "[]" (src/derivation.ml[90,2813+13]..[90,2813+15])
                        None
                    "focus" (src/derivation.ml[91,2830+4]..[91,2830+9])
                      expression (src/derivation.ml[91,2830+12]..[91,2830+18])
                        Pexp_construct "TEmpty" (src/derivation.ml[91,2830+12]..[91,2830+18])
                        None
                    "suffix" (src/derivation.ml[92,2850+4]..[92,2850+10])
                      expression (src/derivation.ml[92,2850+13]..[92,2850+41])
                        Pexp_apply
                        expression (src/derivation.ml[92,2850+13]..[92,2850+26])
                          Pexp_ident "array_to_list" (src/derivation.ml[92,2850+13]..[92,2850+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/derivation.ml[92,2850+27]..[92,2850+30])
                              Pexp_ident "rhs" (src/derivation.ml[92,2850+27]..[92,2850+30])
                          <arg>
                          Nolabel
                            expression (src/derivation.ml[92,2850+31]..[92,2850+34])
                              Pexp_ident "pos" (src/derivation.ml[92,2850+31]..[92,2850+34])
                          <arg>
                          Nolabel
                            expression (src/derivation.ml[92,2850+35]..[92,2850+41])
                              Pexp_ident "length" (src/derivation.ml[92,2850+35]..[92,2850+41])
                        ]
                    "comment" (src/derivation.ml[93,2893+4]..[93,2893+11])
                      expression (src/derivation.ml[93,2893+14]..[93,2893+16])
                        Pexp_constant PConst_string("",(src/derivation.ml[93,2893+15]..[93,2893+15]),None)
                  ]
                  None
    ]
  structure_item (src/derivation.ml[96,2915+0]..[108,3298+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[96,2915+4]..[96,2915+9])
          Ppat_var "build" (src/derivation.ml[96,2915+4]..[96,2915+9])
        expression (src/derivation.ml[96,2915+10]..[108,3298+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/derivation.ml[96,2915+10]..[96,2915+13])
            Ppat_var "pos" (src/derivation.ml[96,2915+10]..[96,2915+13])
          expression (src/derivation.ml[96,2915+14]..[108,3298+7]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/derivation.ml[96,2915+14]..[96,2915+17])
              Ppat_var "rhs" (src/derivation.ml[96,2915+14]..[96,2915+17])
            expression (src/derivation.ml[96,2915+18]..[108,3298+7]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/derivation.ml[96,2915+18]..[96,2915+24])
                Ppat_var "forest" (src/derivation.ml[96,2915+18]..[96,2915+24])
              expression (src/derivation.ml[96,2915+25]..[108,3298+7]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/derivation.ml[96,2915+25]..[96,2915+32])
                  Ppat_var "comment" (src/derivation.ml[96,2915+25]..[96,2915+32])
                expression (src/derivation.ml[97,2950+2]..[108,3298+7])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/derivation.ml[97,2950+6]..[97,2950+12])
                        Ppat_var "length" (src/derivation.ml[97,2950+6]..[97,2950+12])
                      expression (src/derivation.ml[97,2950+15]..[97,2950+31])
                        Pexp_apply
                        expression (src/derivation.ml[97,2950+15]..[97,2950+27])
                          Pexp_ident "Array.length" (src/derivation.ml[97,2950+15]..[97,2950+27])
                        [
                          <arg>
                          Nolabel
                            expression (src/derivation.ml[97,2950+28]..[97,2950+31])
                              Pexp_ident "rhs" (src/derivation.ml[97,2950+28]..[97,2950+31])
                        ]
                  ]
                  expression (src/derivation.ml[98,2985+2]..[108,3298+7])
                    Pexp_sequence
                    expression (src/derivation.ml[98,2985+2]..[98,2985+23])
                      Pexp_assert
                      expression (src/derivation.ml[98,2985+9]..[98,2985+23])
                        Pexp_apply
                        expression (src/derivation.ml[98,2985+14]..[98,2985+15])
                          Pexp_ident "<" (src/derivation.ml[98,2985+14]..[98,2985+15])
                        [
                          <arg>
                          Nolabel
                            expression (src/derivation.ml[98,2985+10]..[98,2985+13])
                              Pexp_ident "pos" (src/derivation.ml[98,2985+10]..[98,2985+13])
                          <arg>
                          Nolabel
                            expression (src/derivation.ml[98,2985+16]..[98,2985+22])
                              Pexp_ident "length" (src/derivation.ml[98,2985+16]..[98,2985+22])
                        ]
                    expression (src/derivation.ml[99,3010+2]..[108,3298+7])
                      Pexp_match
                      expression (src/derivation.ml[99,3010+8]..[99,3010+17])
                        Pexp_apply
                        expression (src/derivation.ml[99,3010+8]..[99,3010+17]) ghost
                          Pexp_ident "Array.get" (src/derivation.ml[99,3010+8]..[99,3010+17]) ghost
                        [
                          <arg>
                          Nolabel
                            expression (src/derivation.ml[99,3010+8]..[99,3010+11])
                              Pexp_ident "rhs" (src/derivation.ml[99,3010+8]..[99,3010+11])
                          <arg>
                          Nolabel
                            expression (src/derivation.ml[99,3010+13]..[99,3010+16])
                              Pexp_ident "pos" (src/derivation.ml[99,3010+13]..[99,3010+16])
                        ]
                      [
                        <case>
                          pattern (src/derivation.ml[100,3033+4]..[100,3033+14])
                            Ppat_construct "Symbol.T" (src/derivation.ml[100,3033+4]..[100,3033+12])
                            Some
                              []
                              pattern (src/derivation.ml[100,3033+13]..[100,3033+14])
                                Ppat_any
                          expression (src/derivation.ml[101,3051+6]..[101,3051+18])
                            Pexp_assert
                            expression (src/derivation.ml[101,3051+13]..[101,3051+18])
                              Pexp_construct "false" (src/derivation.ml[101,3051+13]..[101,3051+18])
                              None
                        <case>
                          pattern (src/derivation.ml[102,3070+4]..[102,3070+24])
                            Ppat_alias "symbol" (src/derivation.ml[102,3070+18]..[102,3070+24])
                            pattern (src/derivation.ml[102,3070+4]..[102,3070+14])
                              Ppat_construct "Symbol.N" (src/derivation.ml[102,3070+4]..[102,3070+12])
                              Some
                                []
                                pattern (src/derivation.ml[102,3070+13]..[102,3070+14])
                                  Ppat_any
                          expression (src/derivation.ml[103,3098+6]..[108,3298+7])
                            Pexp_record
                            [
                              "prefix" (src/derivation.ml[104,3106+8]..[104,3106+14])
                                expression (src/derivation.ml[104,3106+17]..[104,3106+19])
                                  Pexp_construct "[]" (src/derivation.ml[104,3106+17]..[104,3106+19])
                                  None
                              "focus" (src/derivation.ml[105,3127+8]..[105,3127+13])
                                expression (src/derivation.ml[105,3127+16]..[105,3127+40])
                                  Pexp_construct "TRooted" (src/derivation.ml[105,3127+16]..[105,3127+23])
                                  Some
                                    expression (src/derivation.ml[105,3127+24]..[105,3127+40])
                                      Pexp_tuple
                                      [
                                        expression (src/derivation.ml[105,3127+25]..[105,3127+31])
                                          Pexp_ident "symbol" (src/derivation.ml[105,3127+25]..[105,3127+31])
                                        expression (src/derivation.ml[105,3127+33]..[105,3127+39])
                                          Pexp_ident "forest" (src/derivation.ml[105,3127+33]..[105,3127+39])
                                      ]
                              "suffix" (src/derivation.ml[106,3169+8]..[106,3169+14])
                                expression (src/derivation.ml[106,3169+17]..[106,3169+51])
                                  Pexp_apply
                                  expression (src/derivation.ml[106,3169+17]..[106,3169+30])
                                    Pexp_ident "array_to_list" (src/derivation.ml[106,3169+17]..[106,3169+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/derivation.ml[106,3169+31]..[106,3169+34])
                                        Pexp_ident "rhs" (src/derivation.ml[106,3169+31]..[106,3169+34])
                                    <arg>
                                    Nolabel
                                      expression (src/derivation.ml[106,3169+35]..[106,3169+44])
                                        Pexp_apply
                                        expression (src/derivation.ml[106,3169+40]..[106,3169+41])
                                          Pexp_ident "+" (src/derivation.ml[106,3169+40]..[106,3169+41])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/derivation.ml[106,3169+36]..[106,3169+39])
                                              Pexp_ident "pos" (src/derivation.ml[106,3169+36]..[106,3169+39])
                                          <arg>
                                          Nolabel
                                            expression (src/derivation.ml[106,3169+42]..[106,3169+43])
                                              Pexp_constant PConst_int (1,None)
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/derivation.ml[106,3169+45]..[106,3169+51])
                                        Pexp_ident "length" (src/derivation.ml[106,3169+45]..[106,3169+51])
                                  ]
                              "comment" (src/derivation.ml[107,3222+8]..[107,3222+15])
                                expression (src/derivation.ml[107,3222+18]..[107,3222+75])
                                  Pexp_match
                                  expression (src/derivation.ml[107,3222+25]..[107,3222+32])
                                    Pexp_ident "comment" (src/derivation.ml[107,3222+25]..[107,3222+32])
                                  [
                                    <case>
                                      pattern (src/derivation.ml[107,3222+38]..[107,3222+42])
                                        Ppat_construct "None" (src/derivation.ml[107,3222+38]..[107,3222+42])
                                        None
                                      expression (src/derivation.ml[107,3222+46]..[107,3222+48])
                                        Pexp_constant PConst_string("",(src/derivation.ml[107,3222+47]..[107,3222+47]),None)
                                    <case>
                                      pattern (src/derivation.ml[107,3222+51]..[107,3222+63])
                                        Ppat_construct "Some" (src/derivation.ml[107,3222+51]..[107,3222+55])
                                        Some
                                          []
                                          pattern (src/derivation.ml[107,3222+56]..[107,3222+63])
                                            Ppat_var "comment" (src/derivation.ml[107,3222+56]..[107,3222+63])
                                      expression (src/derivation.ml[107,3222+67]..[107,3222+74])
                                        Pexp_ident "comment" (src/derivation.ml[107,3222+67]..[107,3222+74])
                                  ]
                            ]
                            None
                      ]
    ]
  structure_item (src/derivation.ml[110,3307+0]..[112,3351+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[110,3307+4]..[110,3307+11])
          Ppat_var "prepend" (src/derivation.ml[110,3307+4]..[110,3307+11])
        expression (src/derivation.ml[110,3307+12]..[112,3351+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/derivation.ml[110,3307+12]..[110,3307+18])
            Ppat_var "symbol" (src/derivation.ml[110,3307+12]..[110,3307+18])
          expression (src/derivation.ml[110,3307+19]..[112,3351+38]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/derivation.ml[110,3307+19]..[110,3307+25])
              Ppat_var "forest" (src/derivation.ml[110,3307+19]..[110,3307+25])
            expression (src/derivation.ml[111,3335+2]..[112,3351+38])
              Pexp_record
              [
                "prefix" (src/derivation.ml[112,3351+4]..[112,3351+10])
                  expression (src/derivation.ml[112,3351+13]..[112,3351+36])
                    Pexp_construct "::" (src/derivation.ml[112,3351+20]..[112,3351+22])
                    Some
                      expression (src/derivation.ml[112,3351+13]..[112,3351+36]) ghost
                        Pexp_tuple
                        [
                          expression (src/derivation.ml[112,3351+13]..[112,3351+19])
                            Pexp_ident "symbol" (src/derivation.ml[112,3351+13]..[112,3351+19])
                          expression (src/derivation.ml[112,3351+23]..[112,3351+36])
                            Pexp_field
                            expression (src/derivation.ml[112,3351+23]..[112,3351+29])
                              Pexp_ident "forest" (src/derivation.ml[112,3351+23]..[112,3351+29])
                            "prefix" (src/derivation.ml[112,3351+30]..[112,3351+36])
                        ]
              ]
              Some
                expression (src/derivation.ml[111,3335+4]..[111,3335+10])
                  Pexp_ident "forest" (src/derivation.ml[111,3335+4]..[111,3335+10])
    ]
  structure_item (src/derivation.ml[118,3489+0]..[119,3502+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[118,3489+4]..[118,3489+10])
          Ppat_var "buffer" (src/derivation.ml[118,3489+4]..[118,3489+10])
        expression (src/derivation.ml[119,3502+2]..[119,3502+21])
          Pexp_apply
          expression (src/derivation.ml[119,3502+2]..[119,3502+15])
            Pexp_ident "Buffer.create" (src/derivation.ml[119,3502+2]..[119,3502+15])
          [
            <arg>
            Nolabel
              expression (src/derivation.ml[119,3502+16]..[119,3502+21])
                Pexp_constant PConst_int (32768,None)
          ]
    ]
  structure_item (src/derivation.ml[121,3525+0]..[125,3627+5])
    Pstr_value Rec
    [
      <def>
        pattern (src/derivation.ml[121,3525+8]..[121,3525+19])
          Ppat_var "print_blank" (src/derivation.ml[121,3525+8]..[121,3525+19])
        expression (src/derivation.ml[121,3525+20]..[125,3627+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/derivation.ml[121,3525+20]..[121,3525+21])
            Ppat_var "k" (src/derivation.ml[121,3525+20]..[121,3525+21])
          expression (src/derivation.ml[122,3549+2]..[125,3627+5])
            Pexp_ifthenelse
            expression (src/derivation.ml[122,3549+5]..[122,3549+10])
              Pexp_apply
              expression (src/derivation.ml[122,3549+7]..[122,3549+8])
                Pexp_ident ">" (src/derivation.ml[122,3549+7]..[122,3549+8])
              [
                <arg>
                Nolabel
                  expression (src/derivation.ml[122,3549+5]..[122,3549+6])
                    Pexp_ident "k" (src/derivation.ml[122,3549+5]..[122,3549+6])
                <arg>
                Nolabel
                  expression (src/derivation.ml[122,3549+9]..[122,3549+10])
                    Pexp_constant PConst_int (0,None)
              ]
            expression (src/derivation.ml[122,3549+16]..[125,3627+5])
              Pexp_sequence
              expression (src/derivation.ml[123,3571+4]..[123,3571+30])
                Pexp_apply
                expression (src/derivation.ml[123,3571+4]..[123,3571+19])
                  Pexp_ident "Buffer.add_char" (src/derivation.ml[123,3571+4]..[123,3571+19])
                [
                  <arg>
                  Nolabel
                    expression (src/derivation.ml[123,3571+20]..[123,3571+26])
                      Pexp_ident "buffer" (src/derivation.ml[123,3571+20]..[123,3571+26])
                  <arg>
                  Nolabel
                    expression (src/derivation.ml[123,3571+27]..[123,3571+30])
                      Pexp_constant PConst_char 20
                ]
              expression (src/derivation.ml[124,3603+4]..[124,3603+23])
                Pexp_apply
                expression (src/derivation.ml[124,3603+4]..[124,3603+15])
                  Pexp_ident "print_blank" (src/derivation.ml[124,3603+4]..[124,3603+15])
                [
                  <arg>
                  Nolabel
                    expression (src/derivation.ml[124,3603+16]..[124,3603+23])
                      Pexp_apply
                      expression (src/derivation.ml[124,3603+19]..[124,3603+20])
                        Pexp_ident "-" (src/derivation.ml[124,3603+19]..[124,3603+20])
                      [
                        <arg>
                        Nolabel
                          expression (src/derivation.ml[124,3603+17]..[124,3603+18])
                            Pexp_ident "k" (src/derivation.ml[124,3603+17]..[124,3603+18])
                        <arg>
                        Nolabel
                          expression (src/derivation.ml[124,3603+21]..[124,3603+22])
                            Pexp_constant PConst_int (1,None)
                      ]
                ]
            None
    ]
  structure_item (src/derivation.ml[127,3634+0]..[131,3759+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[127,3634+4]..[127,3634+16])
          Ppat_var "print_symbol" (src/derivation.ml[127,3634+4]..[127,3634+16])
        expression (src/derivation.ml[127,3634+17]..[131,3759+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/derivation.ml[127,3634+17]..[127,3634+23])
            Ppat_var "symbol" (src/derivation.ml[127,3634+17]..[127,3634+23])
          expression (src/derivation.ml[128,3660+2]..[131,3759+24])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/derivation.ml[128,3660+6]..[128,3660+10])
                  Ppat_var "word" (src/derivation.ml[128,3660+6]..[128,3660+10])
                expression (src/derivation.ml[128,3660+13]..[128,3660+32])
                  Pexp_apply
                  expression (src/derivation.ml[128,3660+13]..[128,3660+25])
                    Pexp_ident "Symbol.print" (src/derivation.ml[128,3660+13]..[128,3660+25])
                  [
                    <arg>
                    Nolabel
                      expression (src/derivation.ml[128,3660+26]..[128,3660+32])
                        Pexp_ident "symbol" (src/derivation.ml[128,3660+26]..[128,3660+32])
                  ]
            ]
            expression (src/derivation.ml[129,3696+2]..[131,3759+24])
              Pexp_sequence
              expression (src/derivation.ml[129,3696+2]..[129,3696+31])
                Pexp_apply
                expression (src/derivation.ml[129,3696+2]..[129,3696+19])
                  Pexp_ident "Buffer.add_string" (src/derivation.ml[129,3696+2]..[129,3696+19])
                [
                  <arg>
                  Nolabel
                    expression (src/derivation.ml[129,3696+20]..[129,3696+26])
                      Pexp_ident "buffer" (src/derivation.ml[129,3696+20]..[129,3696+26])
                  <arg>
                  Nolabel
                    expression (src/derivation.ml[129,3696+27]..[129,3696+31])
                      Pexp_ident "word" (src/derivation.ml[129,3696+27]..[129,3696+31])
                ]
              expression (src/derivation.ml[130,3729+2]..[131,3759+24])
                Pexp_sequence
                expression (src/derivation.ml[130,3729+2]..[130,3729+28])
                  Pexp_apply
                  expression (src/derivation.ml[130,3729+2]..[130,3729+17])
                    Pexp_ident "Buffer.add_char" (src/derivation.ml[130,3729+2]..[130,3729+17])
                  [
                    <arg>
                    Nolabel
                      expression (src/derivation.ml[130,3729+18]..[130,3729+24])
                        Pexp_ident "buffer" (src/derivation.ml[130,3729+18]..[130,3729+24])
                    <arg>
                    Nolabel
                      expression (src/derivation.ml[130,3729+25]..[130,3729+28])
                        Pexp_constant PConst_char 20
                  ]
                expression (src/derivation.ml[131,3759+2]..[131,3759+24])
                  Pexp_apply
                  expression (src/derivation.ml[131,3759+21]..[131,3759+22])
                    Pexp_ident "+" (src/derivation.ml[131,3759+21]..[131,3759+22])
                  [
                    <arg>
                    Nolabel
                      expression (src/derivation.ml[131,3759+2]..[131,3759+20])
                        Pexp_apply
                        expression (src/derivation.ml[131,3759+2]..[131,3759+15])
                          Pexp_ident "String.length" (src/derivation.ml[131,3759+2]..[131,3759+15])
                        [
                          <arg>
                          Nolabel
                            expression (src/derivation.ml[131,3759+16]..[131,3759+20])
                              Pexp_ident "word" (src/derivation.ml[131,3759+16]..[131,3759+20])
                        ]
                    <arg>
                    Nolabel
                      expression (src/derivation.ml[131,3759+23]..[131,3759+24])
                        Pexp_constant PConst_int (1,None)
                  ]
    ]
  structure_item (src/derivation.ml[133,3785+0]..[136,3885+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[133,3785+4]..[133,3785+17])
          Ppat_var "print_symbols" (src/derivation.ml[133,3785+4]..[133,3785+17])
        expression (src/derivation.ml[133,3785+18]..[136,3885+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/derivation.ml[133,3785+18]..[133,3785+25])
            Ppat_var "symbols" (src/derivation.ml[133,3785+18]..[133,3785+25])
          expression (src/derivation.ml[134,3813+2]..[136,3885+13])
            Pexp_apply
            expression (src/derivation.ml[134,3813+2]..[134,3813+16])
              Pexp_ident "List.fold_left" (src/derivation.ml[134,3813+2]..[134,3813+16])
            [
              <arg>
              Nolabel
                expression (src/derivation.ml[134,3813+17]..[136,3885+3])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/derivation.ml[134,3813+22]..[134,3813+28])
                    Ppat_var "offset" (src/derivation.ml[134,3813+22]..[134,3813+28])
                  expression (src/derivation.ml[134,3813+29]..[135,3852+32]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/derivation.ml[134,3813+29]..[134,3813+35])
                      Ppat_var "symbol" (src/derivation.ml[134,3813+29]..[134,3813+35])
                    expression (src/derivation.ml[135,3852+4]..[135,3852+32])
                      Pexp_apply
                      expression (src/derivation.ml[135,3852+11]..[135,3852+12])
                        Pexp_ident "+" (src/derivation.ml[135,3852+11]..[135,3852+12])
                      [
                        <arg>
                        Nolabel
                          expression (src/derivation.ml[135,3852+4]..[135,3852+10])
                            Pexp_ident "offset" (src/derivation.ml[135,3852+4]..[135,3852+10])
                        <arg>
                        Nolabel
                          expression (src/derivation.ml[135,3852+13]..[135,3852+32])
                            Pexp_apply
                            expression (src/derivation.ml[135,3852+13]..[135,3852+25])
                              Pexp_ident "print_symbol" (src/derivation.ml[135,3852+13]..[135,3852+25])
                            [
                              <arg>
                              Nolabel
                                expression (src/derivation.ml[135,3852+26]..[135,3852+32])
                                  Pexp_ident "symbol" (src/derivation.ml[135,3852+26]..[135,3852+32])
                            ]
                      ]
              <arg>
              Nolabel
                expression (src/derivation.ml[136,3885+4]..[136,3885+5])
                  Pexp_constant PConst_int (0,None)
              <arg>
              Nolabel
                expression (src/derivation.ml[136,3885+6]..[136,3885+13])
                  Pexp_ident "symbols" (src/derivation.ml[136,3885+6]..[136,3885+13])
            ]
    ]
  structure_item (src/derivation.ml[138,3900+0]..[148,4297+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[138,3900+4]..[138,3900+15])
          Ppat_var "print_level" (src/derivation.ml[138,3900+4]..[138,3900+15])
        expression (src/derivation.ml[138,3900+16]..[148,4297+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/derivation.ml[138,3900+16]..[138,3900+32])
            Ppat_var "print_focus_root" (src/derivation.ml[138,3900+16]..[138,3900+32])
          expression (src/derivation.ml[138,3900+33]..[148,4297+43]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/derivation.ml[138,3900+33]..[138,3900+54])
              Ppat_var "print_focus_remainder" (src/derivation.ml[138,3900+33]..[138,3900+54])
            expression (src/derivation.ml[138,3900+55]..[148,4297+43]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/derivation.ml[138,3900+55]..[138,3900+61])
                Ppat_var "offset" (src/derivation.ml[138,3900+55]..[138,3900+61])
              expression (src/derivation.ml[138,3900+62]..[148,4297+43]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/derivation.ml[138,3900+62]..[138,3900+68])
                  Ppat_var "forest" (src/derivation.ml[138,3900+62]..[138,3900+68])
                expression (src/derivation.ml[139,3971+2]..[148,4297+43])
                  Pexp_sequence
                  expression (src/derivation.ml[139,3971+2]..[139,3971+20])
                    Pexp_apply
                    expression (src/derivation.ml[139,3971+2]..[139,3971+13])
                      Pexp_ident "print_blank" (src/derivation.ml[139,3971+2]..[139,3971+13])
                    [
                      <arg>
                      Nolabel
                        expression (src/derivation.ml[139,3971+14]..[139,3971+20])
                          Pexp_ident "offset" (src/derivation.ml[139,3971+14]..[139,3971+20])
                    ]
                  expression (src/derivation.ml[140,3993+2]..[148,4297+43])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/derivation.ml[140,3993+6]..[140,3993+12])
                          Ppat_var "offset" (src/derivation.ml[140,3993+6]..[140,3993+12])
                        expression (src/derivation.ml[140,3993+15]..[140,3993+51])
                          Pexp_apply
                          expression (src/derivation.ml[140,3993+22]..[140,3993+23])
                            Pexp_ident "+" (src/derivation.ml[140,3993+22]..[140,3993+23])
                          [
                            <arg>
                            Nolabel
                              expression (src/derivation.ml[140,3993+15]..[140,3993+21])
                                Pexp_ident "offset" (src/derivation.ml[140,3993+15]..[140,3993+21])
                            <arg>
                            Nolabel
                              expression (src/derivation.ml[140,3993+24]..[140,3993+51])
                                Pexp_apply
                                expression (src/derivation.ml[140,3993+24]..[140,3993+37])
                                  Pexp_ident "print_symbols" (src/derivation.ml[140,3993+24]..[140,3993+37])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/derivation.ml[140,3993+38]..[140,3993+51])
                                      Pexp_field
                                      expression (src/derivation.ml[140,3993+38]..[140,3993+44])
                                        Pexp_ident "forest" (src/derivation.ml[140,3993+38]..[140,3993+44])
                                      "prefix" (src/derivation.ml[140,3993+45]..[140,3993+51])
                                ]
                          ]
                    ]
                    expression (src/derivation.ml[141,4048+2]..[148,4297+43])
                      Pexp_sequence
                      expression (src/derivation.ml[141,4048+2]..[141,4048+31])
                        Pexp_apply
                        expression (src/derivation.ml[141,4048+2]..[141,4048+18])
                          Pexp_ident "print_focus_root" (src/derivation.ml[141,4048+2]..[141,4048+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/derivation.ml[141,4048+19]..[141,4048+31])
                              Pexp_field
                              expression (src/derivation.ml[141,4048+19]..[141,4048+25])
                                Pexp_ident "forest" (src/derivation.ml[141,4048+19]..[141,4048+25])
                              "focus" (src/derivation.ml[141,4048+26]..[141,4048+31])
                        ]
                      expression (src/derivation.ml[142,4081+2]..[148,4297+43])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/derivation.ml[142,4081+6]..[142,4081+15])
                              Ppat_constraint
                              pattern (src/derivation.ml[142,4081+7]..[142,4081+8])
                                Ppat_any
                              core_type (src/derivation.ml[142,4081+11]..[142,4081+14])
                                Ptyp_constr "int" (src/derivation.ml[142,4081+11]..[142,4081+14])
                                []
                            expression (src/derivation.ml[142,4081+18]..[142,4081+45])
                              Pexp_apply
                              expression (src/derivation.ml[142,4081+18]..[142,4081+31])
                                Pexp_ident "print_symbols" (src/derivation.ml[142,4081+18]..[142,4081+31])
                              [
                                <arg>
                                Nolabel
                                  expression (src/derivation.ml[142,4081+32]..[142,4081+45])
                                    Pexp_field
                                    expression (src/derivation.ml[142,4081+32]..[142,4081+38])
                                      Pexp_ident "forest" (src/derivation.ml[142,4081+32]..[142,4081+38])
                                    "suffix" (src/derivation.ml[142,4081+39]..[142,4081+45])
                              ]
                        ]
                        expression (src/derivation.ml[143,4130+2]..[148,4297+43])
                          Pexp_sequence
                          expression (src/derivation.ml[143,4130+2]..[146,4259+5])
                            Pexp_ifthenelse
                            expression (src/derivation.ml[143,4130+5]..[143,4130+37])
                              Pexp_apply
                              expression (src/derivation.ml[143,4130+34]..[143,4130+35])
                                Pexp_ident ">" (src/derivation.ml[143,4130+34]..[143,4130+35])
                              [
                                <arg>
                                Nolabel
                                  expression (src/derivation.ml[143,4130+5]..[143,4130+33])
                                    Pexp_apply
                                    expression (src/derivation.ml[143,4130+5]..[143,4130+18])
                                      Pexp_ident "String.length" (src/derivation.ml[143,4130+5]..[143,4130+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/derivation.ml[143,4130+19]..[143,4130+33])
                                          Pexp_field
                                          expression (src/derivation.ml[143,4130+19]..[143,4130+25])
                                            Pexp_ident "forest" (src/derivation.ml[143,4130+19]..[143,4130+25])
                                          "comment" (src/derivation.ml[143,4130+26]..[143,4130+33])
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/derivation.ml[143,4130+36]..[143,4130+37])
                                    Pexp_constant PConst_int (0,None)
                              ]
                            expression (src/derivation.ml[143,4130+43]..[146,4259+5])
                              Pexp_sequence
                              expression (src/derivation.ml[144,4179+4]..[144,4179+34])
                                Pexp_apply
                                expression (src/derivation.ml[144,4179+4]..[144,4179+21])
                                  Pexp_ident "Buffer.add_string" (src/derivation.ml[144,4179+4]..[144,4179+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/derivation.ml[144,4179+22]..[144,4179+28])
                                      Pexp_ident "buffer" (src/derivation.ml[144,4179+22]..[144,4179+28])
                                  <arg>
                                  Nolabel
                                    expression (src/derivation.ml[144,4179+29]..[144,4179+34])
                                      Pexp_constant PConst_string("// ",(src/derivation.ml[144,4179+30]..[144,4179+33]),None)
                                ]
                              expression (src/derivation.ml[145,4215+4]..[145,4215+43])
                                Pexp_apply
                                expression (src/derivation.ml[145,4215+4]..[145,4215+21])
                                  Pexp_ident "Buffer.add_string" (src/derivation.ml[145,4215+4]..[145,4215+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/derivation.ml[145,4215+22]..[145,4215+28])
                                      Pexp_ident "buffer" (src/derivation.ml[145,4215+22]..[145,4215+28])
                                  <arg>
                                  Nolabel
                                    expression (src/derivation.ml[145,4215+29]..[145,4215+43])
                                      Pexp_field
                                      expression (src/derivation.ml[145,4215+29]..[145,4215+35])
                                        Pexp_ident "forest" (src/derivation.ml[145,4215+29]..[145,4215+35])
                                      "comment" (src/derivation.ml[145,4215+36]..[145,4215+43])
                                ]
                            None
                          expression (src/derivation.ml[147,4266+2]..[148,4297+43])
                            Pexp_sequence
                            expression (src/derivation.ml[147,4266+2]..[147,4266+29])
                              Pexp_apply
                              expression (src/derivation.ml[147,4266+2]..[147,4266+17])
                                Pexp_ident "Buffer.add_char" (src/derivation.ml[147,4266+2]..[147,4266+17])
                              [
                                <arg>
                                Nolabel
                                  expression (src/derivation.ml[147,4266+18]..[147,4266+24])
                                    Pexp_ident "buffer" (src/derivation.ml[147,4266+18]..[147,4266+24])
                                <arg>
                                Nolabel
                                  expression (src/derivation.ml[147,4266+25]..[147,4266+29])
                                    Pexp_constant PConst_char 0a
                              ]
                            expression (src/derivation.ml[148,4297+2]..[148,4297+43])
                              Pexp_apply
                              expression (src/derivation.ml[148,4297+2]..[148,4297+23])
                                Pexp_ident "print_focus_remainder" (src/derivation.ml[148,4297+2]..[148,4297+23])
                              [
                                <arg>
                                Nolabel
                                  expression (src/derivation.ml[148,4297+24]..[148,4297+30])
                                    Pexp_ident "offset" (src/derivation.ml[148,4297+24]..[148,4297+30])
                                <arg>
                                Nolabel
                                  expression (src/derivation.ml[148,4297+31]..[148,4297+43])
                                    Pexp_field
                                    expression (src/derivation.ml[148,4297+31]..[148,4297+37])
                                      Pexp_ident "forest" (src/derivation.ml[148,4297+31]..[148,4297+37])
                                    "focus" (src/derivation.ml[148,4297+38]..[148,4297+43])
                              ]
    ]
  structure_item (src/derivation.ml[150,4342+0]..[155,4495+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[150,4342+4]..[150,4342+19])
          Ppat_var "print_tree_root" (src/derivation.ml[150,4342+4]..[150,4342+19])
        expression (src/derivation.ml[150,4342+22]..[155,4495+8])
          Pexp_function
          [
            <case>
              pattern (src/derivation.ml[151,4373+4]..[151,4373+10])
                Ppat_construct "TEmpty" (src/derivation.ml[151,4373+4]..[151,4373+10])
                None
              expression (src/derivation.ml[152,4387+6]..[152,4387+35])
                Pexp_apply
                expression (src/derivation.ml[152,4387+6]..[152,4387+23])
                  Pexp_ident "Buffer.add_string" (src/derivation.ml[152,4387+6]..[152,4387+23])
                [
                  <arg>
                  Nolabel
                    expression (src/derivation.ml[152,4387+24]..[152,4387+30])
                      Pexp_ident "buffer" (src/derivation.ml[152,4387+24]..[152,4387+30])
                  <arg>
                  Nolabel
                    expression (src/derivation.ml[152,4387+31]..[152,4387+35])
                      Pexp_constant PConst_string(". ",(src/derivation.ml[152,4387+32]..[152,4387+34]),None)
                ]
            <case>
              pattern (src/derivation.ml[153,4423+4]..[153,4423+23])
                Ppat_construct "TRooted" (src/derivation.ml[153,4423+4]..[153,4423+11])
                Some
                  []
                  pattern (src/derivation.ml[153,4423+12]..[153,4423+23])
                    Ppat_tuple
                    [
                      pattern (src/derivation.ml[153,4423+13]..[153,4423+19])
                        Ppat_var "symbol" (src/derivation.ml[153,4423+13]..[153,4423+19])
                      pattern (src/derivation.ml[153,4423+21]..[153,4423+22])
                        Ppat_any
                    ]
              expression (src/derivation.ml[154,4450+6]..[155,4495+8])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/derivation.ml[154,4450+10]..[154,4450+19])
                      Ppat_constraint
                      pattern (src/derivation.ml[154,4450+11]..[154,4450+12])
                        Ppat_any
                      core_type (src/derivation.ml[154,4450+15]..[154,4450+18])
                        Ptyp_constr "int" (src/derivation.ml[154,4450+15]..[154,4450+18])
                        []
                    expression (src/derivation.ml[154,4450+22]..[154,4450+41])
                      Pexp_apply
                      expression (src/derivation.ml[154,4450+22]..[154,4450+34])
                        Pexp_ident "print_symbol" (src/derivation.ml[154,4450+22]..[154,4450+34])
                      [
                        <arg>
                        Nolabel
                          expression (src/derivation.ml[154,4450+35]..[154,4450+41])
                            Pexp_ident "symbol" (src/derivation.ml[154,4450+35]..[154,4450+41])
                      ]
                ]
                expression (src/derivation.ml[155,4495+6]..[155,4495+8])
                  Pexp_construct "()" (src/derivation.ml[155,4495+6]..[155,4495+8])
                  None
          ]
    ]
  structure_item (src/derivation.ml[157,4505+0]..[164,4701+32])
    Pstr_value Rec
    [
      <def>
        pattern (src/derivation.ml[157,4505+8]..[157,4505+20])
          Ppat_var "print_forest" (src/derivation.ml[157,4505+8]..[157,4505+20])
        expression (src/derivation.ml[157,4505+21]..[158,4542+64]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/derivation.ml[157,4505+21]..[157,4505+27])
            Ppat_var "offset" (src/derivation.ml[157,4505+21]..[157,4505+27])
          expression (src/derivation.ml[157,4505+28]..[158,4542+64]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/derivation.ml[157,4505+28]..[157,4505+34])
              Ppat_var "forest" (src/derivation.ml[157,4505+28]..[157,4505+34])
            expression (src/derivation.ml[158,4542+2]..[158,4542+64])
              Pexp_apply
              expression (src/derivation.ml[158,4542+2]..[158,4542+13])
                Pexp_ident "print_level" (src/derivation.ml[158,4542+2]..[158,4542+13])
              [
                <arg>
                Nolabel
                  expression (src/derivation.ml[158,4542+14]..[158,4542+29])
                    Pexp_ident "print_tree_root" (src/derivation.ml[158,4542+14]..[158,4542+29])
                <arg>
                Nolabel
                  expression (src/derivation.ml[158,4542+30]..[158,4542+50])
                    Pexp_ident "print_tree_remainder" (src/derivation.ml[158,4542+30]..[158,4542+50])
                <arg>
                Nolabel
                  expression (src/derivation.ml[158,4542+51]..[158,4542+57])
                    Pexp_ident "offset" (src/derivation.ml[158,4542+51]..[158,4542+57])
                <arg>
                Nolabel
                  expression (src/derivation.ml[158,4542+58]..[158,4542+64])
                    Pexp_ident "forest" (src/derivation.ml[158,4542+58]..[158,4542+64])
              ]
      <def>
        pattern (src/derivation.ml[160,4608+4]..[160,4608+24])
          Ppat_var "print_tree_remainder" (src/derivation.ml[160,4608+4]..[160,4608+24])
        expression (src/derivation.ml[160,4608+25]..[164,4701+32]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/derivation.ml[160,4608+25]..[160,4608+31])
            Ppat_var "offset" (src/derivation.ml[160,4608+25]..[160,4608+31])
          expression (src/derivation.ml[160,4608+34]..[164,4701+32])
            Pexp_function
            [
              <case>
                pattern (src/derivation.ml[161,4651+4]..[161,4651+10])
                  Ppat_construct "TEmpty" (src/derivation.ml[161,4651+4]..[161,4651+10])
                  None
                expression (src/derivation.ml[162,4665+6]..[162,4665+8])
                  Pexp_construct "()" (src/derivation.ml[162,4665+6]..[162,4665+8])
                  None
              <case>
                pattern (src/derivation.ml[163,4674+4]..[163,4674+23])
                  Ppat_construct "TRooted" (src/derivation.ml[163,4674+4]..[163,4674+11])
                  Some
                    []
                    pattern (src/derivation.ml[163,4674+12]..[163,4674+23])
                      Ppat_tuple
                      [
                        pattern (src/derivation.ml[163,4674+13]..[163,4674+14])
                          Ppat_any
                        pattern (src/derivation.ml[163,4674+16]..[163,4674+22])
                          Ppat_var "forest" (src/derivation.ml[163,4674+16]..[163,4674+22])
                      ]
                expression (src/derivation.ml[164,4701+6]..[164,4701+32])
                  Pexp_apply
                  expression (src/derivation.ml[164,4701+6]..[164,4701+18])
                    Pexp_ident "print_forest" (src/derivation.ml[164,4701+6]..[164,4701+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/derivation.ml[164,4701+19]..[164,4701+25])
                        Pexp_ident "offset" (src/derivation.ml[164,4701+19]..[164,4701+25])
                    <arg>
                    Nolabel
                      expression (src/derivation.ml[164,4701+26]..[164,4701+32])
                        Pexp_ident "forest" (src/derivation.ml[164,4701+26]..[164,4701+32])
                  ]
            ]
    ]
  structure_item (src/derivation.ml[166,4735+0]..[169,4839+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[166,4735+4]..[166,4735+20])
          Ppat_var "print_ctree_root" (src/derivation.ml[166,4735+4]..[166,4735+20])
        expression (src/derivation.ml[166,4735+23]..[169,4839+8])
          Pexp_function
          [
            <case>
              pattern (src/derivation.ml[167,4767+4]..[167,4767+23])
                Ppat_construct "CRooted" (src/derivation.ml[167,4767+4]..[167,4767+11])
                Some
                  []
                  pattern (src/derivation.ml[167,4767+12]..[167,4767+23])
                    Ppat_tuple
                    [
                      pattern (src/derivation.ml[167,4767+13]..[167,4767+19])
                        Ppat_var "symbol" (src/derivation.ml[167,4767+13]..[167,4767+19])
                      pattern (src/derivation.ml[167,4767+21]..[167,4767+22])
                        Ppat_any
                    ]
              expression (src/derivation.ml[168,4794+6]..[169,4839+8])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/derivation.ml[168,4794+10]..[168,4794+19])
                      Ppat_constraint
                      pattern (src/derivation.ml[168,4794+11]..[168,4794+12])
                        Ppat_any
                      core_type (src/derivation.ml[168,4794+15]..[168,4794+18])
                        Ptyp_constr "int" (src/derivation.ml[168,4794+15]..[168,4794+18])
                        []
                    expression (src/derivation.ml[168,4794+22]..[168,4794+41])
                      Pexp_apply
                      expression (src/derivation.ml[168,4794+22]..[168,4794+34])
                        Pexp_ident "print_symbol" (src/derivation.ml[168,4794+22]..[168,4794+34])
                      [
                        <arg>
                        Nolabel
                          expression (src/derivation.ml[168,4794+35]..[168,4794+41])
                            Pexp_ident "symbol" (src/derivation.ml[168,4794+35]..[168,4794+41])
                      ]
                ]
                expression (src/derivation.ml[169,4839+6]..[169,4839+8])
                  Pexp_construct "()" (src/derivation.ml[169,4839+6]..[169,4839+8])
                  None
          ]
    ]
  structure_item (src/derivation.ml[171,4849+0]..[181,5151+34])
    Pstr_value Rec
    [
      <def>
        pattern (src/derivation.ml[171,4849+8]..[171,4849+21])
          Ppat_var "print_cforest" (src/derivation.ml[171,4849+8]..[171,4849+21])
        expression (src/derivation.ml[171,4849+22]..[177,5007+70]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/derivation.ml[171,4849+22]..[171,4849+28])
            Ppat_var "offset" (src/derivation.ml[171,4849+22]..[171,4849+28])
          expression (src/derivation.ml[171,4849+29]..[177,5007+70]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/derivation.ml[171,4849+29]..[171,4849+36])
              Ppat_var "cforest" (src/derivation.ml[171,4849+29]..[171,4849+36])
            expression (src/derivation.ml[172,4888+2]..[177,5007+70])
              Pexp_match
              expression (src/derivation.ml[172,4888+8]..[172,4888+15])
                Pexp_ident "cforest" (src/derivation.ml[172,4888+8]..[172,4888+15])
              [
                <case>
                  pattern (src/derivation.ml[173,4909+4]..[173,4909+9])
                    Ppat_construct "CHole" (src/derivation.ml[173,4909+4]..[173,4909+9])
                    None
                  expression (src/derivation.ml[174,4922+6]..[175,4948+38])
                    Pexp_sequence
                    expression (src/derivation.ml[174,4922+6]..[174,4922+24])
                      Pexp_apply
                      expression (src/derivation.ml[174,4922+6]..[174,4922+17])
                        Pexp_ident "print_blank" (src/derivation.ml[174,4922+6]..[174,4922+17])
                      [
                        <arg>
                        Nolabel
                          expression (src/derivation.ml[174,4922+18]..[174,4922+24])
                            Pexp_ident "offset" (src/derivation.ml[174,4922+18]..[174,4922+24])
                      ]
                    expression (src/derivation.ml[175,4948+6]..[175,4948+38])
                      Pexp_apply
                      expression (src/derivation.ml[175,4948+6]..[175,4948+23])
                        Pexp_ident "Buffer.add_string" (src/derivation.ml[175,4948+6]..[175,4948+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/derivation.ml[175,4948+24]..[175,4948+30])
                            Pexp_ident "buffer" (src/derivation.ml[175,4948+24]..[175,4948+30])
                        <arg>
                        Nolabel
                          expression (src/derivation.ml[175,4948+31]..[175,4948+38])
                            Pexp_constant PConst_string("(?)\n",(src/derivation.ml[175,4948+32]..[175,4948+37]),None)
                      ]
                <case>
                  pattern (src/derivation.ml[176,4987+4]..[176,4987+16])
                    Ppat_construct "CCons" (src/derivation.ml[176,4987+4]..[176,4987+9])
                    Some
                      []
                      pattern (src/derivation.ml[176,4987+10]..[176,4987+16])
                        Ppat_var "forest" (src/derivation.ml[176,4987+10]..[176,4987+16])
                  expression (src/derivation.ml[177,5007+6]..[177,5007+70])
                    Pexp_apply
                    expression (src/derivation.ml[177,5007+6]..[177,5007+17])
                      Pexp_ident "print_level" (src/derivation.ml[177,5007+6]..[177,5007+17])
                    [
                      <arg>
                      Nolabel
                        expression (src/derivation.ml[177,5007+18]..[177,5007+34])
                          Pexp_ident "print_ctree_root" (src/derivation.ml[177,5007+18]..[177,5007+34])
                      <arg>
                      Nolabel
                        expression (src/derivation.ml[177,5007+35]..[177,5007+56])
                          Pexp_ident "print_ctree_remainder" (src/derivation.ml[177,5007+35]..[177,5007+56])
                      <arg>
                      Nolabel
                        expression (src/derivation.ml[177,5007+57]..[177,5007+63])
                          Pexp_ident "offset" (src/derivation.ml[177,5007+57]..[177,5007+63])
                      <arg>
                      Nolabel
                        expression (src/derivation.ml[177,5007+64]..[177,5007+70])
                          Pexp_ident "forest" (src/derivation.ml[177,5007+64]..[177,5007+70])
                    ]
              ]
      <def>
        pattern (src/derivation.ml[179,5079+4]..[179,5079+25])
          Ppat_var "print_ctree_remainder" (src/derivation.ml[179,5079+4]..[179,5079+25])
        expression (src/derivation.ml[179,5079+26]..[181,5151+34]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/derivation.ml[179,5079+26]..[179,5079+32])
            Ppat_var "offset" (src/derivation.ml[179,5079+26]..[179,5079+32])
          expression (src/derivation.ml[179,5079+35]..[181,5151+34])
            Pexp_function
            [
              <case>
                pattern (src/derivation.ml[180,5123+4]..[180,5123+24])
                  Ppat_construct "CRooted" (src/derivation.ml[180,5123+4]..[180,5123+11])
                  Some
                    []
                    pattern (src/derivation.ml[180,5123+12]..[180,5123+24])
                      Ppat_tuple
                      [
                        pattern (src/derivation.ml[180,5123+13]..[180,5123+14])
                          Ppat_any
                        pattern (src/derivation.ml[180,5123+16]..[180,5123+23])
                          Ppat_var "cforest" (src/derivation.ml[180,5123+16]..[180,5123+23])
                      ]
                expression (src/derivation.ml[181,5151+6]..[181,5151+34])
                  Pexp_apply
                  expression (src/derivation.ml[181,5151+6]..[181,5151+19])
                    Pexp_ident "print_cforest" (src/derivation.ml[181,5151+6]..[181,5151+19])
                  [
                    <arg>
                    Nolabel
                      expression (src/derivation.ml[181,5151+20]..[181,5151+26])
                        Pexp_ident "offset" (src/derivation.ml[181,5151+20]..[181,5151+26])
                    <arg>
                    Nolabel
                      expression (src/derivation.ml[181,5151+27]..[181,5151+34])
                        Pexp_ident "cforest" (src/derivation.ml[181,5151+27]..[181,5151+34])
                  ]
            ]
    ]
  structure_item (src/derivation.ml[183,5187+0]..[186,5250+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[183,5187+4]..[183,5187+8])
          Ppat_var "wrap" (src/derivation.ml[183,5187+4]..[183,5187+8])
        expression (src/derivation.ml[183,5187+9]..[186,5250+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/derivation.ml[183,5187+9]..[183,5187+14])
            Ppat_var "print" (src/derivation.ml[183,5187+9]..[183,5187+14])
          expression (src/derivation.ml[183,5187+15]..[186,5250+37]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/derivation.ml[183,5187+15]..[183,5187+22])
              Ppat_var "channel" (src/derivation.ml[183,5187+15]..[183,5187+22])
            expression (src/derivation.ml[183,5187+23]..[186,5250+37]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/derivation.ml[183,5187+23]..[183,5187+24])
                Ppat_var "x" (src/derivation.ml[183,5187+23]..[183,5187+24])
              expression (src/derivation.ml[184,5214+2]..[186,5250+37])
                Pexp_sequence
                expression (src/derivation.ml[184,5214+2]..[184,5214+21])
                  Pexp_apply
                  expression (src/derivation.ml[184,5214+2]..[184,5214+14])
                    Pexp_ident "Buffer.clear" (src/derivation.ml[184,5214+2]..[184,5214+14])
                  [
                    <arg>
                    Nolabel
                      expression (src/derivation.ml[184,5214+15]..[184,5214+21])
                        Pexp_ident "buffer" (src/derivation.ml[184,5214+15]..[184,5214+21])
                  ]
                expression (src/derivation.ml[185,5237+2]..[186,5250+37])
                  Pexp_sequence
                  expression (src/derivation.ml[185,5237+2]..[185,5237+11])
                    Pexp_apply
                    expression (src/derivation.ml[185,5237+2]..[185,5237+7])
                      Pexp_ident "print" (src/derivation.ml[185,5237+2]..[185,5237+7])
                    [
                      <arg>
                      Nolabel
                        expression (src/derivation.ml[185,5237+8]..[185,5237+9])
                          Pexp_constant PConst_int (0,None)
                      <arg>
                      Nolabel
                        expression (src/derivation.ml[185,5237+10]..[185,5237+11])
                          Pexp_ident "x" (src/derivation.ml[185,5237+10]..[185,5237+11])
                    ]
                  expression (src/derivation.ml[186,5250+2]..[186,5250+37])
                    Pexp_apply
                    expression (src/derivation.ml[186,5250+2]..[186,5250+22])
                      Pexp_ident "Buffer.output_buffer" (src/derivation.ml[186,5250+2]..[186,5250+22])
                    [
                      <arg>
                      Nolabel
                        expression (src/derivation.ml[186,5250+23]..[186,5250+30])
                          Pexp_ident "channel" (src/derivation.ml[186,5250+23]..[186,5250+30])
                      <arg>
                      Nolabel
                        expression (src/derivation.ml[186,5250+31]..[186,5250+37])
                          Pexp_ident "buffer" (src/derivation.ml[186,5250+31]..[186,5250+37])
                    ]
    ]
  structure_item (src/derivation.ml[188,5289+0]..[189,5301+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[188,5289+4]..[188,5289+9])
          Ppat_var "print" (src/derivation.ml[188,5289+4]..[188,5289+9])
        expression (src/derivation.ml[189,5301+2]..[189,5301+19])
          Pexp_apply
          expression (src/derivation.ml[189,5301+2]..[189,5301+6])
            Pexp_ident "wrap" (src/derivation.ml[189,5301+2]..[189,5301+6])
          [
            <arg>
            Nolabel
              expression (src/derivation.ml[189,5301+7]..[189,5301+19])
                Pexp_ident "print_forest" (src/derivation.ml[189,5301+7]..[189,5301+19])
          ]
    ]
  structure_item (src/derivation.ml[191,5322+0]..[192,5335+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[191,5322+4]..[191,5322+10])
          Ppat_var "printc" (src/derivation.ml[191,5322+4]..[191,5322+10])
        expression (src/derivation.ml[192,5335+2]..[192,5335+20])
          Pexp_apply
          expression (src/derivation.ml[192,5335+2]..[192,5335+6])
            Pexp_ident "wrap" (src/derivation.ml[192,5335+2]..[192,5335+6])
          [
            <arg>
            Nolabel
              expression (src/derivation.ml[192,5335+7]..[192,5335+20])
                Pexp_ident "print_cforest" (src/derivation.ml[192,5335+7]..[192,5335+20])
          ]
    ]
  structure_item (src/derivation.ml[200,5676+0]..[218,6183+16])
    Pstr_value Rec
    [
      <def>
        pattern (src/derivation.ml[200,5676+8]..[200,5676+18])
          Ppat_var "punch_tree" (src/derivation.ml[200,5676+8]..[200,5676+18])
        expression (src/derivation.ml[200,5676+19]..[206,5855+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/derivation.ml[200,5676+19]..[200,5676+23])
            Ppat_var "tree" (src/derivation.ml[200,5676+19]..[200,5676+23])
          expression (src/derivation.ml[200,5676+24]..[206,5855+47])
            Pexp_constraint
            expression (src/derivation.ml[201,5728+2]..[206,5855+47])
              Pexp_match
              expression (src/derivation.ml[201,5728+8]..[201,5728+12])
                Pexp_ident "tree" (src/derivation.ml[201,5728+8]..[201,5728+12])
              [
                <case>
                  pattern (src/derivation.ml[202,5746+4]..[202,5746+10])
                    Ppat_construct "TEmpty" (src/derivation.ml[202,5746+4]..[202,5746+10])
                    None
                  expression (src/derivation.ml[203,5760+6]..[203,5760+10])
                    Pexp_construct "None" (src/derivation.ml[203,5760+6]..[203,5760+10])
                    None
                <case>
                  pattern (src/derivation.ml[204,5771+4]..[204,5771+28])
                    Ppat_construct "TRooted" (src/derivation.ml[204,5771+4]..[204,5771+11])
                    Some
                      []
                      pattern (src/derivation.ml[204,5771+12]..[204,5771+28])
                        Ppat_tuple
                        [
                          pattern (src/derivation.ml[204,5771+13]..[204,5771+19])
                            Ppat_var "symbol" (src/derivation.ml[204,5771+13]..[204,5771+19])
                          pattern (src/derivation.ml[204,5771+21]..[204,5771+27])
                            Ppat_var "forest" (src/derivation.ml[204,5771+21]..[204,5771+27])
                        ]
                  expression (src/derivation.ml[205,5803+6]..[206,5855+47])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/derivation.ml[205,5803+10]..[205,5803+26])
                          Ppat_tuple
                          [
                            pattern (src/derivation.ml[205,5803+10]..[205,5803+17])
                              Ppat_var "forest1" (src/derivation.ml[205,5803+10]..[205,5803+17])
                            pattern (src/derivation.ml[205,5803+19]..[205,5803+26])
                              Ppat_var "forest2" (src/derivation.ml[205,5803+19]..[205,5803+26])
                          ]
                        expression (src/derivation.ml[205,5803+29]..[205,5803+48])
                          Pexp_apply
                          expression (src/derivation.ml[205,5803+29]..[205,5803+41])
                            Pexp_ident "punch_forest" (src/derivation.ml[205,5803+29]..[205,5803+41])
                          [
                            <arg>
                            Nolabel
                              expression (src/derivation.ml[205,5803+42]..[205,5803+48])
                                Pexp_ident "forest" (src/derivation.ml[205,5803+42]..[205,5803+48])
                          ]
                    ]
                    expression (src/derivation.ml[206,5855+6]..[206,5855+47])
                      Pexp_construct "Some" (src/derivation.ml[206,5855+6]..[206,5855+10])
                      Some
                        expression (src/derivation.ml[206,5855+11]..[206,5855+47])
                          Pexp_tuple
                          [
                            expression (src/derivation.ml[206,5855+12]..[206,5855+37])
                              Pexp_construct "CRooted" (src/derivation.ml[206,5855+12]..[206,5855+19])
                              Some
                                expression (src/derivation.ml[206,5855+20]..[206,5855+37])
                                  Pexp_tuple
                                  [
                                    expression (src/derivation.ml[206,5855+21]..[206,5855+27])
                                      Pexp_ident "symbol" (src/derivation.ml[206,5855+21]..[206,5855+27])
                                    expression (src/derivation.ml[206,5855+29]..[206,5855+36])
                                      Pexp_ident "forest1" (src/derivation.ml[206,5855+29]..[206,5855+36])
                                  ]
                            expression (src/derivation.ml[206,5855+39]..[206,5855+46])
                              Pexp_ident "forest2" (src/derivation.ml[206,5855+39]..[206,5855+46])
                          ]
              ]
            core_type (src/derivation.ml[200,5676+26]..[200,5676+49])
              Ptyp_constr "option" (src/derivation.ml[200,5676+43]..[200,5676+49])
              [
                core_type (src/derivation.ml[200,5676+27]..[200,5676+41])
                  Ptyp_tuple
                  [
                    core_type (src/derivation.ml[200,5676+27]..[200,5676+32])
                      Ptyp_constr "ctree" (src/derivation.ml[200,5676+27]..[200,5676+32])
                      []
                    core_type (src/derivation.ml[200,5676+35]..[200,5676+41])
                      Ptyp_constr "forest" (src/derivation.ml[200,5676+35]..[200,5676+41])
                      []
                  ]
              ]
      <def>
        pattern (src/derivation.ml[208,5904+4]..[208,5904+16])
          Ppat_var "punch_forest" (src/derivation.ml[208,5904+4]..[208,5904+16])
        expression (src/derivation.ml[208,5904+17]..[218,6183+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/derivation.ml[208,5904+17]..[208,5904+23])
            Ppat_var "forest" (src/derivation.ml[208,5904+17]..[208,5904+23])
          expression (src/derivation.ml[208,5904+24]..[218,6183+16])
            Pexp_constraint
            expression (src/derivation.ml[209,5949+2]..[218,6183+16])
              Pexp_match
              expression (src/derivation.ml[209,5949+8]..[209,5949+31])
                Pexp_apply
                expression (src/derivation.ml[209,5949+8]..[209,5949+18])
                  Pexp_ident "punch_tree" (src/derivation.ml[209,5949+8]..[209,5949+18])
                [
                  <arg>
                  Nolabel
                    expression (src/derivation.ml[209,5949+19]..[209,5949+31])
                      Pexp_field
                      expression (src/derivation.ml[209,5949+19]..[209,5949+25])
                        Pexp_ident "forest" (src/derivation.ml[209,5949+19]..[209,5949+25])
                      "focus" (src/derivation.ml[209,5949+26]..[209,5949+31])
                ]
              [
                <case>
                  pattern (src/derivation.ml[210,5986+4]..[210,5986+8])
                    Ppat_construct "None" (src/derivation.ml[210,5986+4]..[210,5986+8])
                    None
                  expression (src/derivation.ml[211,5998+6]..[211,5998+19])
                    Pexp_tuple
                    [
                      expression (src/derivation.ml[211,5998+6]..[211,5998+11])
                        Pexp_construct "CHole" (src/derivation.ml[211,5998+6]..[211,5998+11])
                        None
                      expression (src/derivation.ml[211,5998+13]..[211,5998+19])
                        Pexp_ident "forest" (src/derivation.ml[211,5998+13]..[211,5998+19])
                    ]
                <case>
                  pattern (src/derivation.ml[212,6018+4]..[212,6018+26])
                    Ppat_construct "Some" (src/derivation.ml[212,6018+4]..[212,6018+8])
                    Some
                      []
                      pattern (src/derivation.ml[212,6018+9]..[212,6018+26])
                        Ppat_tuple
                        [
                          pattern (src/derivation.ml[212,6018+10]..[212,6018+16])
                            Ppat_var "ctree1" (src/derivation.ml[212,6018+10]..[212,6018+16])
                          pattern (src/derivation.ml[212,6018+18]..[212,6018+25])
                            Ppat_var "forest2" (src/derivation.ml[212,6018+18]..[212,6018+25])
                        ]
                  expression (src/derivation.ml[213,6048+6]..[218,6183+16])
                    Pexp_tuple
                    [
                      expression (src/derivation.ml[213,6048+6]..[218,6183+7])
                        Pexp_construct "CCons" (src/derivation.ml[213,6048+6]..[213,6048+11])
                        Some
                          expression (src/derivation.ml[213,6048+12]..[218,6183+7])
                            Pexp_record
                            [
                              "prefix" (src/derivation.ml[214,6062+8]..[214,6062+14])
                                expression (src/derivation.ml[214,6062+17]..[214,6062+30])
                                  Pexp_field
                                  expression (src/derivation.ml[214,6062+17]..[214,6062+23])
                                    Pexp_ident "forest" (src/derivation.ml[214,6062+17]..[214,6062+23])
                                  "prefix" (src/derivation.ml[214,6062+24]..[214,6062+30])
                              "focus" (src/derivation.ml[215,6094+8]..[215,6094+13])
                                expression (src/derivation.ml[215,6094+16]..[215,6094+22])
                                  Pexp_ident "ctree1" (src/derivation.ml[215,6094+16]..[215,6094+22])
                              "suffix" (src/derivation.ml[216,6118+8]..[216,6118+14])
                                expression (src/derivation.ml[216,6118+17]..[216,6118+30])
                                  Pexp_field
                                  expression (src/derivation.ml[216,6118+17]..[216,6118+23])
                                    Pexp_ident "forest" (src/derivation.ml[216,6118+17]..[216,6118+23])
                                  "suffix" (src/derivation.ml[216,6118+24]..[216,6118+30])
                              "comment" (src/derivation.ml[217,6150+8]..[217,6150+15])
                                expression (src/derivation.ml[217,6150+18]..[217,6150+32])
                                  Pexp_field
                                  expression (src/derivation.ml[217,6150+18]..[217,6150+24])
                                    Pexp_ident "forest" (src/derivation.ml[217,6150+18]..[217,6150+24])
                                  "comment" (src/derivation.ml[217,6150+25]..[217,6150+32])
                            ]
                            None
                      expression (src/derivation.ml[218,6183+9]..[218,6183+16])
                        Pexp_ident "forest2" (src/derivation.ml[218,6183+9]..[218,6183+16])
                    ]
              ]
            core_type (src/derivation.ml[208,5904+26]..[208,5904+42])
              Ptyp_tuple
              [
                core_type (src/derivation.ml[208,5904+26]..[208,5904+33])
                  Ptyp_constr "cforest" (src/derivation.ml[208,5904+26]..[208,5904+33])
                  []
                core_type (src/derivation.ml[208,5904+36]..[208,5904+42])
                  Ptyp_constr "forest" (src/derivation.ml[208,5904+36]..[208,5904+42])
                  []
              ]
    ]
  structure_item (src/derivation.ml[223,6306+0]..[238,6724+7])
    Pstr_value Rec
    [
      <def>
        pattern (src/derivation.ml[223,6306+8]..[223,6306+17])
          Ppat_var "fill_tree" (src/derivation.ml[223,6306+8]..[223,6306+17])
        expression (src/derivation.ml[223,6306+18]..[226,6403+53]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/derivation.ml[223,6306+18]..[223,6306+24])
            Ppat_var "ctree1" (src/derivation.ml[223,6306+18]..[223,6306+24])
          expression (src/derivation.ml[223,6306+25]..[226,6403+53]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/derivation.ml[223,6306+25]..[223,6306+32])
              Ppat_var "forest2" (src/derivation.ml[223,6306+25]..[223,6306+32])
            expression (src/derivation.ml[223,6306+33]..[226,6403+53])
              Pexp_constraint
              expression (src/derivation.ml[224,6348+2]..[226,6403+53])
                Pexp_match
                expression (src/derivation.ml[224,6348+8]..[224,6348+14])
                  Pexp_ident "ctree1" (src/derivation.ml[224,6348+8]..[224,6348+14])
                [
                  <case>
                    pattern (src/derivation.ml[225,6368+4]..[225,6368+31])
                      Ppat_construct "CRooted" (src/derivation.ml[225,6368+4]..[225,6368+11])
                      Some
                        []
                        pattern (src/derivation.ml[225,6368+12]..[225,6368+31])
                          Ppat_tuple
                          [
                            pattern (src/derivation.ml[225,6368+13]..[225,6368+20])
                              Ppat_var "symbol1" (src/derivation.ml[225,6368+13]..[225,6368+20])
                            pattern (src/derivation.ml[225,6368+22]..[225,6368+30])
                              Ppat_var "cforest1" (src/derivation.ml[225,6368+22]..[225,6368+30])
                          ]
                    expression (src/derivation.ml[226,6403+6]..[226,6403+53])
                      Pexp_construct "TRooted" (src/derivation.ml[226,6403+6]..[226,6403+13])
                      Some
                        expression (src/derivation.ml[226,6403+14]..[226,6403+53])
                          Pexp_tuple
                          [
                            expression (src/derivation.ml[226,6403+15]..[226,6403+22])
                              Pexp_ident "symbol1" (src/derivation.ml[226,6403+15]..[226,6403+22])
                            expression (src/derivation.ml[226,6403+24]..[226,6403+52])
                              Pexp_apply
                              expression (src/derivation.ml[226,6403+24]..[226,6403+35])
                                Pexp_ident "fill_forest" (src/derivation.ml[226,6403+24]..[226,6403+35])
                              [
                                <arg>
                                Nolabel
                                  expression (src/derivation.ml[226,6403+36]..[226,6403+44])
                                    Pexp_ident "cforest1" (src/derivation.ml[226,6403+36]..[226,6403+44])
                                <arg>
                                Nolabel
                                  expression (src/derivation.ml[226,6403+45]..[226,6403+52])
                                    Pexp_ident "forest2" (src/derivation.ml[226,6403+45]..[226,6403+52])
                              ]
                          ]
                ]
              core_type (src/derivation.ml[223,6306+35]..[223,6306+39])
                Ptyp_constr "tree" (src/derivation.ml[223,6306+35]..[223,6306+39])
                []
      <def>
        pattern (src/derivation.ml[228,6458+4]..[228,6458+15])
          Ppat_var "fill_forest" (src/derivation.ml[228,6458+4]..[228,6458+15])
        expression (src/derivation.ml[228,6458+16]..[238,6724+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/derivation.ml[228,6458+16]..[228,6458+24])
            Ppat_var "cforest1" (src/derivation.ml[228,6458+16]..[228,6458+24])
          expression (src/derivation.ml[228,6458+25]..[238,6724+7]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/derivation.ml[228,6458+25]..[228,6458+32])
              Ppat_var "forest2" (src/derivation.ml[228,6458+25]..[228,6458+32])
            expression (src/derivation.ml[228,6458+33]..[238,6724+7])
              Pexp_constraint
              expression (src/derivation.ml[229,6502+2]..[238,6724+7])
                Pexp_match
                expression (src/derivation.ml[229,6502+8]..[229,6502+16])
                  Pexp_ident "cforest1" (src/derivation.ml[229,6502+8]..[229,6502+16])
                [
                  <case>
                    pattern (src/derivation.ml[230,6524+4]..[230,6524+9])
                      Ppat_construct "CHole" (src/derivation.ml[230,6524+4]..[230,6524+9])
                      None
                    expression (src/derivation.ml[231,6537+6]..[231,6537+13])
                      Pexp_ident "forest2" (src/derivation.ml[231,6537+6]..[231,6537+13])
                  <case>
                    pattern (src/derivation.ml[232,6551+4]..[232,6551+16])
                      Ppat_construct "CCons" (src/derivation.ml[232,6551+4]..[232,6551+9])
                      Some
                        []
                        pattern (src/derivation.ml[232,6551+10]..[232,6551+16])
                          Ppat_var "level1" (src/derivation.ml[232,6551+10]..[232,6551+16])
                    expression (src/derivation.ml[233,6571+6]..[238,6724+7])
                      Pexp_record
                      [
                        "prefix" (src/derivation.ml[234,6579+8]..[234,6579+14])
                          expression (src/derivation.ml[234,6579+17]..[234,6579+30])
                            Pexp_field
                            expression (src/derivation.ml[234,6579+17]..[234,6579+23])
                              Pexp_ident "level1" (src/derivation.ml[234,6579+17]..[234,6579+23])
                            "prefix" (src/derivation.ml[234,6579+24]..[234,6579+30])
                        "focus" (src/derivation.ml[235,6611+8]..[235,6611+13])
                          expression (src/derivation.ml[235,6611+16]..[235,6611+46])
                            Pexp_apply
                            expression (src/derivation.ml[235,6611+16]..[235,6611+25])
                              Pexp_ident "fill_tree" (src/derivation.ml[235,6611+16]..[235,6611+25])
                            [
                              <arg>
                              Nolabel
                                expression (src/derivation.ml[235,6611+26]..[235,6611+38])
                                  Pexp_field
                                  expression (src/derivation.ml[235,6611+26]..[235,6611+32])
                                    Pexp_ident "level1" (src/derivation.ml[235,6611+26]..[235,6611+32])
                                  "focus" (src/derivation.ml[235,6611+33]..[235,6611+38])
                              <arg>
                              Nolabel
                                expression (src/derivation.ml[235,6611+39]..[235,6611+46])
                                  Pexp_ident "forest2" (src/derivation.ml[235,6611+39]..[235,6611+46])
                            ]
                        "suffix" (src/derivation.ml[236,6659+8]..[236,6659+14])
                          expression (src/derivation.ml[236,6659+17]..[236,6659+30])
                            Pexp_field
                            expression (src/derivation.ml[236,6659+17]..[236,6659+23])
                              Pexp_ident "level1" (src/derivation.ml[236,6659+17]..[236,6659+23])
                            "suffix" (src/derivation.ml[236,6659+24]..[236,6659+30])
                        "comment" (src/derivation.ml[237,6691+8]..[237,6691+15])
                          expression (src/derivation.ml[237,6691+18]..[237,6691+32])
                            Pexp_field
                            expression (src/derivation.ml[237,6691+18]..[237,6691+24])
                              Pexp_ident "level1" (src/derivation.ml[237,6691+18]..[237,6691+24])
                            "comment" (src/derivation.ml[237,6691+25]..[237,6691+32])
                      ]
                      None
                ]
              core_type (src/derivation.ml[228,6458+35]..[228,6458+41])
                Ptyp_constr "forest" (src/derivation.ml[228,6458+35]..[228,6458+41])
                []
    ]
  structure_item (src/derivation.ml[244,6963+0]..[279,8130+32])
    Pstr_value Rec
    [
      <def>
        pattern (src/derivation.ml[244,6963+8]..[244,6963+19])
          Ppat_var "common_tree" (src/derivation.ml[244,6963+8]..[244,6963+19])
        expression (src/derivation.ml[244,6963+20]..[255,7368+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/derivation.ml[244,6963+20]..[244,6963+26])
            Ppat_var "ctree1" (src/derivation.ml[244,6963+20]..[244,6963+26])
          expression (src/derivation.ml[244,6963+27]..[255,7368+12]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/derivation.ml[244,6963+27]..[244,6963+32])
              Ppat_var "tree2" (src/derivation.ml[244,6963+27]..[244,6963+32])
            expression (src/derivation.ml[244,6963+33]..[255,7368+12])
              Pexp_constraint
              expression (src/derivation.ml[245,7034+2]..[255,7368+12])
                Pexp_match
                expression (src/derivation.ml[245,7034+8]..[245,7034+21])
                  Pexp_tuple
                  [
                    expression (src/derivation.ml[245,7034+8]..[245,7034+14])
                      Pexp_ident "ctree1" (src/derivation.ml[245,7034+8]..[245,7034+14])
                    expression (src/derivation.ml[245,7034+16]..[245,7034+21])
                      Pexp_ident "tree2" (src/derivation.ml[245,7034+16]..[245,7034+21])
                  ]
                [
                  <case>
                    pattern (src/derivation.ml[246,7061+4]..[246,7061+21])
                      Ppat_tuple
                      [
                        pattern (src/derivation.ml[246,7061+4]..[246,7061+13])
                          Ppat_construct "CRooted" (src/derivation.ml[246,7061+4]..[246,7061+11])
                          Some
                            []
                            pattern (src/derivation.ml[246,7061+12]..[246,7061+13])
                              Ppat_any
                        pattern (src/derivation.ml[246,7061+15]..[246,7061+21])
                          Ppat_construct "TEmpty" (src/derivation.ml[246,7061+15]..[246,7061+21])
                          None
                      ]
                    expression (src/derivation.ml[247,7086+6]..[247,7086+10])
                      Pexp_construct "None" (src/derivation.ml[247,7086+6]..[247,7086+10])
                      None
                  <case>
                    pattern (src/derivation.ml[248,7097+4]..[248,7097+59])
                      Ppat_tuple
                      [
                        pattern (src/derivation.ml[248,7097+4]..[248,7097+31])
                          Ppat_construct "CRooted" (src/derivation.ml[248,7097+4]..[248,7097+11])
                          Some
                            []
                            pattern (src/derivation.ml[248,7097+12]..[248,7097+31])
                              Ppat_tuple
                              [
                                pattern (src/derivation.ml[248,7097+13]..[248,7097+20])
                                  Ppat_var "symbol1" (src/derivation.ml[248,7097+13]..[248,7097+20])
                                pattern (src/derivation.ml[248,7097+22]..[248,7097+30])
                                  Ppat_var "cforest1" (src/derivation.ml[248,7097+22]..[248,7097+30])
                              ]
                        pattern (src/derivation.ml[248,7097+33]..[248,7097+59])
                          Ppat_construct "TRooted" (src/derivation.ml[248,7097+33]..[248,7097+40])
                          Some
                            []
                            pattern (src/derivation.ml[248,7097+41]..[248,7097+59])
                              Ppat_tuple
                              [
                                pattern (src/derivation.ml[248,7097+42]..[248,7097+49])
                                  Ppat_var "symbol2" (src/derivation.ml[248,7097+42]..[248,7097+49])
                                pattern (src/derivation.ml[248,7097+51]..[248,7097+58])
                                  Ppat_var "forest2" (src/derivation.ml[248,7097+51]..[248,7097+58])
                              ]
                      ]
                    expression (src/derivation.ml[249,7160+6]..[255,7368+12])
                      Pexp_ifthenelse
                      expression (src/derivation.ml[249,7160+9]..[249,7160+37])
                        Pexp_apply
                        expression (src/derivation.ml[249,7160+9]..[249,7160+21])
                          Pexp_ident "Symbol.equal" (src/derivation.ml[249,7160+9]..[249,7160+21])
                        [
                          <arg>
                          Nolabel
                            expression (src/derivation.ml[249,7160+22]..[249,7160+29])
                              Pexp_ident "symbol1" (src/derivation.ml[249,7160+22]..[249,7160+29])
                          <arg>
                          Nolabel
                            expression (src/derivation.ml[249,7160+30]..[249,7160+37])
                              Pexp_ident "symbol2" (src/derivation.ml[249,7160+30]..[249,7160+37])
                        ]
                      expression (src/derivation.ml[250,7203+8]..[253,7296+60])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/derivation.ml[250,7203+12]..[250,7203+38])
                              Ppat_tuple
                              [
                                pattern (src/derivation.ml[250,7203+12]..[250,7203+19])
                                  Ppat_var "cforest" (src/derivation.ml[250,7203+12]..[250,7203+19])
                                pattern (src/derivation.ml[250,7203+21]..[250,7203+29])
                                  Ppat_var "cforest1" (src/derivation.ml[250,7203+21]..[250,7203+29])
                                pattern (src/derivation.ml[250,7203+31]..[250,7203+38])
                                  Ppat_var "forest2" (src/derivation.ml[250,7203+31]..[250,7203+38])
                              ]
                            expression (src/derivation.ml[251,7244+10]..[251,7244+40])
                              Pexp_apply
                              expression (src/derivation.ml[251,7244+10]..[251,7244+23])
                                Pexp_ident "common_forest" (src/derivation.ml[251,7244+10]..[251,7244+23])
                              [
                                <arg>
                                Nolabel
                                  expression (src/derivation.ml[251,7244+24]..[251,7244+32])
                                    Pexp_ident "cforest1" (src/derivation.ml[251,7244+24]..[251,7244+32])
                                <arg>
                                Nolabel
                                  expression (src/derivation.ml[251,7244+33]..[251,7244+40])
                                    Pexp_ident "forest2" (src/derivation.ml[251,7244+33]..[251,7244+40])
                              ]
                        ]
                        expression (src/derivation.ml[253,7296+8]..[253,7296+60])
                          Pexp_construct "Some" (src/derivation.ml[253,7296+8]..[253,7296+12])
                          Some
                            expression (src/derivation.ml[253,7296+13]..[253,7296+60])
                              Pexp_tuple
                              [
                                expression (src/derivation.ml[253,7296+14]..[253,7296+40])
                                  Pexp_construct "CRooted" (src/derivation.ml[253,7296+14]..[253,7296+21])
                                  Some
                                    expression (src/derivation.ml[253,7296+22]..[253,7296+40])
                                      Pexp_tuple
                                      [
                                        expression (src/derivation.ml[253,7296+23]..[253,7296+30])
                                          Pexp_ident "symbol1" (src/derivation.ml[253,7296+23]..[253,7296+30])
                                        expression (src/derivation.ml[253,7296+32]..[253,7296+39])
                                          Pexp_ident "cforest" (src/derivation.ml[253,7296+32]..[253,7296+39])
                                      ]
                                expression (src/derivation.ml[253,7296+42]..[253,7296+50])
                                  Pexp_ident "cforest1" (src/derivation.ml[253,7296+42]..[253,7296+50])
                                expression (src/derivation.ml[253,7296+52]..[253,7296+59])
                                  Pexp_ident "forest2" (src/derivation.ml[253,7296+52]..[253,7296+59])
                              ]
                      Some
                        expression (src/derivation.ml[255,7368+8]..[255,7368+12])
                          Pexp_construct "None" (src/derivation.ml[255,7368+8]..[255,7368+12])
                          None
                ]
              core_type (src/derivation.ml[244,6963+35]..[244,6963+68])
                Ptyp_constr "option" (src/derivation.ml[244,6963+62]..[244,6963+68])
                [
                  core_type (src/derivation.ml[244,6963+36]..[244,6963+60])
                    Ptyp_tuple
                    [
                      core_type (src/derivation.ml[244,6963+36]..[244,6963+41])
                        Ptyp_constr "ctree" (src/derivation.ml[244,6963+36]..[244,6963+41])
                        []
                      core_type (src/derivation.ml[244,6963+44]..[244,6963+51])
                        Ptyp_constr "cforest" (src/derivation.ml[244,6963+44]..[244,6963+51])
                        []
                      core_type (src/derivation.ml[244,6963+54]..[244,6963+60])
                        Ptyp_constr "forest" (src/derivation.ml[244,6963+54]..[244,6963+60])
                        []
                    ]
                ]
      <def>
        pattern (src/derivation.ml[257,7382+4]..[257,7382+17])
          Ppat_var "common_forest" (src/derivation.ml[257,7382+4]..[257,7382+17])
        expression (src/derivation.ml[257,7382+18]..[279,8130+32]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/derivation.ml[257,7382+18]..[257,7382+26])
            Ppat_var "cforest1" (src/derivation.ml[257,7382+18]..[257,7382+26])
          expression (src/derivation.ml[257,7382+27]..[279,8130+32]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/derivation.ml[257,7382+27]..[257,7382+34])
              Ppat_var "forest2" (src/derivation.ml[257,7382+27]..[257,7382+34])
            expression (src/derivation.ml[257,7382+35]..[279,8130+32])
              Pexp_constraint
              expression (src/derivation.ml[258,7448+2]..[279,8130+32])
                Pexp_match
                expression (src/derivation.ml[258,7448+8]..[258,7448+16])
                  Pexp_ident "cforest1" (src/derivation.ml[258,7448+8]..[258,7448+16])
                [
                  <case>
                    pattern (src/derivation.ml[259,7470+4]..[259,7470+9])
                      Ppat_construct "CHole" (src/derivation.ml[259,7470+4]..[259,7470+9])
                      None
                    expression (src/derivation.ml[260,7483+6]..[260,7483+30])
                      Pexp_tuple
                      [
                        expression (src/derivation.ml[260,7483+6]..[260,7483+11])
                          Pexp_construct "CHole" (src/derivation.ml[260,7483+6]..[260,7483+11])
                          None
                        expression (src/derivation.ml[260,7483+13]..[260,7483+21])
                          Pexp_ident "cforest1" (src/derivation.ml[260,7483+13]..[260,7483+21])
                        expression (src/derivation.ml[260,7483+23]..[260,7483+30])
                          Pexp_ident "forest2" (src/derivation.ml[260,7483+23]..[260,7483+30])
                      ]
                  <case>
                    pattern (src/derivation.ml[261,7514+4]..[261,7514+17])
                      Ppat_construct "CCons" (src/derivation.ml[261,7514+4]..[261,7514+9])
                      Some
                        []
                        pattern (src/derivation.ml[261,7514+10]..[261,7514+17])
                          Ppat_var "forest1" (src/derivation.ml[261,7514+10]..[261,7514+17])
                    expression (src/derivation.ml[262,7535+6]..[279,8130+32])
                      Pexp_ifthenelse
                      expression (src/derivation.ml[262,7535+9]..[264,7641+42])
                        Pexp_apply
                        expression (src/derivation.ml[263,7588+6]..[263,7588+8])
                          Pexp_ident "&&" (src/derivation.ml[263,7588+6]..[263,7588+8])
                        [
                          <arg>
                          Nolabel
                            expression (src/derivation.ml[262,7535+9]..[262,7535+52])
                              Pexp_apply
                              expression (src/derivation.ml[262,7535+9]..[262,7535+22])
                                Pexp_ident "Symbol.lequal" (src/derivation.ml[262,7535+9]..[262,7535+22])
                              [
                                <arg>
                                Nolabel
                                  expression (src/derivation.ml[262,7535+23]..[262,7535+37])
                                    Pexp_field
                                    expression (src/derivation.ml[262,7535+23]..[262,7535+30])
                                      Pexp_ident "forest1" (src/derivation.ml[262,7535+23]..[262,7535+30])
                                    "prefix" (src/derivation.ml[262,7535+31]..[262,7535+37])
                                <arg>
                                Nolabel
                                  expression (src/derivation.ml[262,7535+38]..[262,7535+52])
                                    Pexp_field
                                    expression (src/derivation.ml[262,7535+38]..[262,7535+45])
                                      Pexp_ident "forest2" (src/derivation.ml[262,7535+38]..[262,7535+45])
                                    "prefix" (src/derivation.ml[262,7535+46]..[262,7535+52])
                              ]
                          <arg>
                          Nolabel
                            expression (src/derivation.ml[263,7588+9]..[264,7641+42])
                              Pexp_apply
                              expression (src/derivation.ml[264,7641+6]..[264,7641+8])
                                Pexp_ident "&&" (src/derivation.ml[264,7641+6]..[264,7641+8])
                              [
                                <arg>
                                Nolabel
                                  expression (src/derivation.ml[263,7588+9]..[263,7588+52])
                                    Pexp_apply
                                    expression (src/derivation.ml[263,7588+9]..[263,7588+22])
                                      Pexp_ident "Symbol.lequal" (src/derivation.ml[263,7588+9]..[263,7588+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/derivation.ml[263,7588+23]..[263,7588+37])
                                          Pexp_field
                                          expression (src/derivation.ml[263,7588+23]..[263,7588+30])
                                            Pexp_ident "forest1" (src/derivation.ml[263,7588+23]..[263,7588+30])
                                          "suffix" (src/derivation.ml[263,7588+31]..[263,7588+37])
                                      <arg>
                                      Nolabel
                                        expression (src/derivation.ml[263,7588+38]..[263,7588+52])
                                          Pexp_field
                                          expression (src/derivation.ml[263,7588+38]..[263,7588+45])
                                            Pexp_ident "forest2" (src/derivation.ml[263,7588+38]..[263,7588+45])
                                          "suffix" (src/derivation.ml[263,7588+46]..[263,7588+52])
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/derivation.ml[264,7641+9]..[264,7641+42])
                                    Pexp_apply
                                    expression (src/derivation.ml[264,7641+25]..[264,7641+26])
                                      Pexp_ident "=" (src/derivation.ml[264,7641+25]..[264,7641+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/derivation.ml[264,7641+9]..[264,7641+24])
                                          Pexp_field
                                          expression (src/derivation.ml[264,7641+9]..[264,7641+16])
                                            Pexp_ident "forest1" (src/derivation.ml[264,7641+9]..[264,7641+16])
                                          "comment" (src/derivation.ml[264,7641+17]..[264,7641+24])
                                      <arg>
                                      Nolabel
                                        expression (src/derivation.ml[264,7641+27]..[264,7641+42])
                                          Pexp_field
                                          expression (src/derivation.ml[264,7641+27]..[264,7641+34])
                                            Pexp_ident "forest2" (src/derivation.ml[264,7641+27]..[264,7641+34])
                                          "comment" (src/derivation.ml[264,7641+35]..[264,7641+42])
                                    ]
                              ]
                        ]
                      expression (src/derivation.ml[265,7684+11]..[277,8109+9])
                        Pexp_match
                        expression (src/derivation.ml[266,7701+14]..[266,7701+53])
                          Pexp_apply
                          expression (src/derivation.ml[266,7701+14]..[266,7701+25])
                            Pexp_ident "common_tree" (src/derivation.ml[266,7701+14]..[266,7701+25])
                          [
                            <arg>
                            Nolabel
                              expression (src/derivation.ml[266,7701+26]..[266,7701+39])
                                Pexp_field
                                expression (src/derivation.ml[266,7701+26]..[266,7701+33])
                                  Pexp_ident "forest1" (src/derivation.ml[266,7701+26]..[266,7701+33])
                                "focus" (src/derivation.ml[266,7701+34]..[266,7701+39])
                            <arg>
                            Nolabel
                              expression (src/derivation.ml[266,7701+40]..[266,7701+53])
                                Pexp_field
                                expression (src/derivation.ml[266,7701+40]..[266,7701+47])
                                  Pexp_ident "forest2" (src/derivation.ml[266,7701+40]..[266,7701+47])
                                "focus" (src/derivation.ml[266,7701+48]..[266,7701+53])
                          ]
                        [
                          <case>
                            pattern (src/derivation.ml[267,7760+10]..[267,7760+14])
                              Ppat_construct "None" (src/derivation.ml[267,7760+10]..[267,7760+14])
                              None
                            expression (src/derivation.ml[268,7778+12]..[268,7778+36])
                              Pexp_tuple
                              [
                                expression (src/derivation.ml[268,7778+12]..[268,7778+17])
                                  Pexp_construct "CHole" (src/derivation.ml[268,7778+12]..[268,7778+17])
                                  None
                                expression (src/derivation.ml[268,7778+19]..[268,7778+27])
                                  Pexp_ident "cforest1" (src/derivation.ml[268,7778+19]..[268,7778+27])
                                expression (src/derivation.ml[268,7778+29]..[268,7778+36])
                                  Pexp_ident "forest2" (src/derivation.ml[268,7778+29]..[268,7778+36])
                              ]
                          <case>
                            pattern (src/derivation.ml[269,7815+10]..[269,7815+47])
                              Ppat_construct "Some" (src/derivation.ml[269,7815+10]..[269,7815+14])
                              Some
                                []
                                pattern (src/derivation.ml[269,7815+15]..[269,7815+47])
                                  Ppat_tuple
                                  [
                                    pattern (src/derivation.ml[269,7815+16]..[269,7815+21])
                                      Ppat_var "ctree" (src/derivation.ml[269,7815+16]..[269,7815+21])
                                    pattern (src/derivation.ml[269,7815+23]..[269,7815+34])
                                      Ppat_var "csubforest1" (src/derivation.ml[269,7815+23]..[269,7815+34])
                                    pattern (src/derivation.ml[269,7815+36]..[269,7815+46])
                                      Ppat_var "subforest2" (src/derivation.ml[269,7815+36]..[269,7815+46])
                                  ]
                            expression (src/derivation.ml[270,7866+12]..[276,8058+50])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/derivation.ml[270,7866+16]..[270,7866+23])
                                    Ppat_var "cforest" (src/derivation.ml[270,7866+16]..[270,7866+23])
                                  expression (src/derivation.ml[270,7866+26]..[275,8041+13])
                                    Pexp_record
                                    [
                                      "prefix" (src/derivation.ml[271,7894+14]..[271,7894+20])
                                        expression (src/derivation.ml[271,7894+23]..[271,7894+37])
                                          Pexp_field
                                          expression (src/derivation.ml[271,7894+23]..[271,7894+30])
                                            Pexp_ident "forest1" (src/derivation.ml[271,7894+23]..[271,7894+30])
                                          "prefix" (src/derivation.ml[271,7894+31]..[271,7894+37])
                                      "focus" (src/derivation.ml[272,7933+14]..[272,7933+19])
                                        expression (src/derivation.ml[272,7933+22]..[272,7933+27])
                                          Pexp_ident "ctree" (src/derivation.ml[272,7933+22]..[272,7933+27])
                                      "suffix" (src/derivation.ml[273,7962+14]..[273,7962+20])
                                        expression (src/derivation.ml[273,7962+23]..[273,7962+37])
                                          Pexp_field
                                          expression (src/derivation.ml[273,7962+23]..[273,7962+30])
                                            Pexp_ident "forest1" (src/derivation.ml[273,7962+23]..[273,7962+30])
                                          "suffix" (src/derivation.ml[273,7962+31]..[273,7962+37])
                                      "comment" (src/derivation.ml[274,8001+14]..[274,8001+21])
                                        expression (src/derivation.ml[274,8001+24]..[274,8001+39])
                                          Pexp_field
                                          expression (src/derivation.ml[274,8001+24]..[274,8001+31])
                                            Pexp_ident "forest1" (src/derivation.ml[274,8001+24]..[274,8001+31])
                                          "comment" (src/derivation.ml[274,8001+32]..[274,8001+39])
                                    ]
                                    None
                              ]
                              expression (src/derivation.ml[276,8058+12]..[276,8058+50])
                                Pexp_tuple
                                [
                                  expression (src/derivation.ml[276,8058+12]..[276,8058+25])
                                    Pexp_construct "CCons" (src/derivation.ml[276,8058+12]..[276,8058+17])
                                    Some
                                      expression (src/derivation.ml[276,8058+18]..[276,8058+25])
                                        Pexp_ident "cforest" (src/derivation.ml[276,8058+18]..[276,8058+25])
                                  expression (src/derivation.ml[276,8058+27]..[276,8058+38])
                                    Pexp_ident "csubforest1" (src/derivation.ml[276,8058+27]..[276,8058+38])
                                  expression (src/derivation.ml[276,8058+40]..[276,8058+50])
                                    Pexp_ident "subforest2" (src/derivation.ml[276,8058+40]..[276,8058+50])
                                ]
                        ]
                      Some
                        expression (src/derivation.ml[279,8130+8]..[279,8130+32])
                          Pexp_tuple
                          [
                            expression (src/derivation.ml[279,8130+8]..[279,8130+13])
                              Pexp_construct "CHole" (src/derivation.ml[279,8130+8]..[279,8130+13])
                              None
                            expression (src/derivation.ml[279,8130+15]..[279,8130+23])
                              Pexp_ident "cforest1" (src/derivation.ml[279,8130+15]..[279,8130+23])
                            expression (src/derivation.ml[279,8130+25]..[279,8130+32])
                              Pexp_ident "forest2" (src/derivation.ml[279,8130+25]..[279,8130+32])
                          ]
                ]
              core_type (src/derivation.ml[257,7382+37]..[257,7382+63])
                Ptyp_tuple
                [
                  core_type (src/derivation.ml[257,7382+37]..[257,7382+44])
                    Ptyp_constr "cforest" (src/derivation.ml[257,7382+37]..[257,7382+44])
                    []
                  core_type (src/derivation.ml[257,7382+47]..[257,7382+54])
                    Ptyp_constr "cforest" (src/derivation.ml[257,7382+47]..[257,7382+54])
                    []
                  core_type (src/derivation.ml[257,7382+57]..[257,7382+63])
                    Ptyp_constr "forest" (src/derivation.ml[257,7382+57]..[257,7382+63])
                    []
                ]
    ]
  structure_item (src/derivation.ml[286,8447+0]..[326,9929+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[286,8447+4]..[286,8447+10])
          Ppat_var "factor" (src/derivation.ml[286,8447+4]..[286,8447+10])
        expression (src/derivation.ml[286,8447+11]..[326,9929+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/derivation.ml[286,8447+11]..[286,8447+18])
            Ppat_var "forests" (src/derivation.ml[286,8447+11]..[286,8447+18])
          expression (src/derivation.ml[287,8468+2]..[326,9929+24])
            Pexp_match
            expression (src/derivation.ml[288,8476+4]..[321,9796+18])
              Pexp_apply
              expression (src/derivation.ml[288,8476+4]..[288,8476+17])
                Pexp_ident "Item.Map.fold" (src/derivation.ml[288,8476+4]..[288,8476+17])
              [
                <arg>
                Nolabel
                  expression (src/derivation.ml[288,8476+18]..[321,9796+5])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/derivation.ml[288,8476+23]..[288,8476+27])
                      Ppat_var "item" (src/derivation.ml[288,8476+23]..[288,8476+27])
                    expression (src/derivation.ml[288,8476+28]..[319,9759+35]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/derivation.ml[288,8476+28]..[288,8476+34])
                        Ppat_var "forest" (src/derivation.ml[288,8476+28]..[288,8476+34])
                      expression (src/derivation.ml[288,8476+35]..[319,9759+35]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/derivation.ml[288,8476+35]..[288,8476+39])
                          Ppat_var "accu" (src/derivation.ml[288,8476+35]..[288,8476+39])
                        expression (src/derivation.ml[289,8519+6]..[319,9759+35])
                          Pexp_match
                          expression (src/derivation.ml[289,8519+12]..[289,8519+16])
                            Pexp_ident "accu" (src/derivation.ml[289,8519+12]..[289,8519+16])
                          [
                            <case>
                              pattern (src/derivation.ml[290,8541+8]..[290,8541+12])
                                Ppat_construct "None" (src/derivation.ml[290,8541+8]..[290,8541+12])
                                None
                              expression (src/derivation.ml[296,8754+10]..[297,8811+58])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/derivation.ml[296,8754+14]..[296,8754+31])
                                      Ppat_tuple
                                      [
                                        pattern (src/derivation.ml[296,8754+14]..[296,8754+21])
                                          Ppat_var "context" (src/derivation.ml[296,8754+14]..[296,8754+21])
                                        pattern (src/derivation.ml[296,8754+23]..[296,8754+31])
                                          Ppat_var "residual" (src/derivation.ml[296,8754+23]..[296,8754+31])
                                      ]
                                    expression (src/derivation.ml[296,8754+34]..[296,8754+53])
                                      Pexp_apply
                                      expression (src/derivation.ml[296,8754+34]..[296,8754+46])
                                        Pexp_ident "punch_forest" (src/derivation.ml[296,8754+34]..[296,8754+46])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/derivation.ml[296,8754+47]..[296,8754+53])
                                            Pexp_ident "forest" (src/derivation.ml[296,8754+47]..[296,8754+53])
                                      ]
                                ]
                                expression (src/derivation.ml[297,8811+10]..[297,8811+58])
                                  Pexp_construct "Some" (src/derivation.ml[297,8811+10]..[297,8811+14])
                                  Some
                                    expression (src/derivation.ml[297,8811+15]..[297,8811+58])
                                      Pexp_tuple
                                      [
                                        expression (src/derivation.ml[297,8811+16]..[297,8811+23])
                                          Pexp_ident "context" (src/derivation.ml[297,8811+16]..[297,8811+23])
                                        expression (src/derivation.ml[297,8811+25]..[297,8811+57])
                                          Pexp_apply
                                          expression (src/derivation.ml[297,8811+25]..[297,8811+43])
                                            Pexp_ident "Item.Map.singleton" (src/derivation.ml[297,8811+25]..[297,8811+43])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/derivation.ml[297,8811+44]..[297,8811+48])
                                                Pexp_ident "item" (src/derivation.ml[297,8811+44]..[297,8811+48])
                                            <arg>
                                            Nolabel
                                              expression (src/derivation.ml[297,8811+49]..[297,8811+57])
                                                Pexp_ident "residual" (src/derivation.ml[297,8811+49]..[297,8811+57])
                                          ]
                                      ]
                            <case>
                              pattern (src/derivation.ml[299,8871+8]..[299,8871+33])
                                Ppat_construct "Some" (src/derivation.ml[299,8871+8]..[299,8871+12])
                                Some
                                  []
                                  pattern (src/derivation.ml[299,8871+13]..[299,8871+33])
                                    Ppat_tuple
                                    [
                                      pattern (src/derivation.ml[299,8871+14]..[299,8871+21])
                                        Ppat_var "context" (src/derivation.ml[299,8871+14]..[299,8871+21])
                                      pattern (src/derivation.ml[299,8871+23]..[299,8871+32])
                                        Ppat_var "residuals" (src/derivation.ml[299,8871+23]..[299,8871+32])
                                    ]
                              expression (src/derivation.ml[309,9330+10]..[319,9759+35])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/derivation.ml[309,9330+14]..[309,9330+40])
                                      Ppat_tuple
                                      [
                                        pattern (src/derivation.ml[309,9330+14]..[309,9330+21])
                                          Ppat_var "context" (src/derivation.ml[309,9330+14]..[309,9330+21])
                                        pattern (src/derivation.ml[309,9330+23]..[309,9330+31])
                                          Ppat_var "contextr" (src/derivation.ml[309,9330+23]..[309,9330+31])
                                        pattern (src/derivation.ml[309,9330+33]..[309,9330+40])
                                          Ppat_var "forestr" (src/derivation.ml[309,9330+33]..[309,9330+40])
                                      ]
                                    expression (src/derivation.ml[309,9330+43]..[309,9330+71])
                                      Pexp_apply
                                      expression (src/derivation.ml[309,9330+43]..[309,9330+56])
                                        Pexp_ident "common_forest" (src/derivation.ml[309,9330+43]..[309,9330+56])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/derivation.ml[309,9330+57]..[309,9330+64])
                                            Pexp_ident "context" (src/derivation.ml[309,9330+57]..[309,9330+64])
                                        <arg>
                                        Nolabel
                                          expression (src/derivation.ml[309,9330+65]..[309,9330+71])
                                            Pexp_ident "forest" (src/derivation.ml[309,9330+65]..[309,9330+71])
                                      ]
                                ]
                                expression (src/derivation.ml[315,9633+10]..[319,9759+35])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/derivation.ml[315,9633+14]..[315,9633+23])
                                        Ppat_var "residuals" (src/derivation.ml[315,9633+14]..[315,9633+23])
                                      expression (src/derivation.ml[316,9659+12]..[316,9659+85])
                                        Pexp_apply
                                        expression (src/derivation.ml[316,9659+12]..[316,9659+24])
                                          Pexp_ident "Item.Map.add" (src/derivation.ml[316,9659+12]..[316,9659+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/derivation.ml[316,9659+25]..[316,9659+29])
                                              Pexp_ident "item" (src/derivation.ml[316,9659+25]..[316,9659+29])
                                          <arg>
                                          Nolabel
                                            expression (src/derivation.ml[316,9659+30]..[316,9659+37])
                                              Pexp_ident "forestr" (src/derivation.ml[316,9659+30]..[316,9659+37])
                                          <arg>
                                          Nolabel
                                            expression (src/derivation.ml[316,9659+38]..[316,9659+85])
                                              Pexp_apply
                                              expression (src/derivation.ml[316,9659+39]..[316,9659+51])
                                                Pexp_ident "Item.Map.map" (src/derivation.ml[316,9659+39]..[316,9659+51])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/derivation.ml[316,9659+52]..[316,9659+74])
                                                    Pexp_apply
                                                    expression (src/derivation.ml[316,9659+53]..[316,9659+64])
                                                      Pexp_ident "fill_forest" (src/derivation.ml[316,9659+53]..[316,9659+64])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/derivation.ml[316,9659+65]..[316,9659+73])
                                                          Pexp_ident "contextr" (src/derivation.ml[316,9659+65]..[316,9659+73])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (src/derivation.ml[316,9659+75]..[316,9659+84])
                                                    Pexp_ident "residuals" (src/derivation.ml[316,9659+75]..[316,9659+84])
                                              ]
                                        ]
                                  ]
                                  expression (src/derivation.ml[319,9759+10]..[319,9759+35])
                                    Pexp_construct "Some" (src/derivation.ml[319,9759+10]..[319,9759+14])
                                    Some
                                      expression (src/derivation.ml[319,9759+15]..[319,9759+35])
                                        Pexp_tuple
                                        [
                                          expression (src/derivation.ml[319,9759+16]..[319,9759+23])
                                            Pexp_ident "context" (src/derivation.ml[319,9759+16]..[319,9759+23])
                                          expression (src/derivation.ml[319,9759+25]..[319,9759+34])
                                            Pexp_ident "residuals" (src/derivation.ml[319,9759+25]..[319,9759+34])
                                        ]
                          ]
                <arg>
                Nolabel
                  expression (src/derivation.ml[321,9796+6]..[321,9796+13])
                    Pexp_ident "forests" (src/derivation.ml[321,9796+6]..[321,9796+13])
                <arg>
                Nolabel
                  expression (src/derivation.ml[321,9796+14]..[321,9796+18])
                    Pexp_construct "None" (src/derivation.ml[321,9796+14]..[321,9796+18])
                    None
              ]
            [
              <case>
                pattern (src/derivation.ml[323,9822+4]..[323,9822+8])
                  Ppat_construct "None" (src/derivation.ml[323,9822+4]..[323,9822+8])
                  None
                expression (src/derivation.ml[324,9834+6]..[324,9834+18])
                  Pexp_assert
                  expression (src/derivation.ml[324,9834+13]..[324,9834+18])
                    Pexp_construct "false" (src/derivation.ml[324,9834+13]..[324,9834+18])
                    None
              <case>
                pattern (src/derivation.ml[325,9896+4]..[325,9896+29])
                  Ppat_construct "Some" (src/derivation.ml[325,9896+4]..[325,9896+8])
                  Some
                    []
                    pattern (src/derivation.ml[325,9896+9]..[325,9896+29])
                      Ppat_tuple
                      [
                        pattern (src/derivation.ml[325,9896+10]..[325,9896+17])
                          Ppat_var "context" (src/derivation.ml[325,9896+10]..[325,9896+17])
                        pattern (src/derivation.ml[325,9896+19]..[325,9896+28])
                          Ppat_var "residuals" (src/derivation.ml[325,9896+19]..[325,9896+28])
                      ]
                expression (src/derivation.ml[326,9929+6]..[326,9929+24])
                  Pexp_tuple
                  [
                    expression (src/derivation.ml[326,9929+6]..[326,9929+13])
                      Pexp_ident "context" (src/derivation.ml[326,9929+6]..[326,9929+13])
                    expression (src/derivation.ml[326,9929+15]..[326,9929+24])
                      Pexp_ident "residuals" (src/derivation.ml[326,9929+15]..[326,9929+24])
                  ]
            ]
    ]
]

open Grammar
type 'focus level =
  {
  prefix: Symbol.t list ;
  focus: 'focus ;
  suffix: Symbol.t list ;
  comment: string }
type tree =
  | TEmpty 
  | TRooted of Symbol.t * forest 
and forest = tree level
type ctree =
  | CRooted of Symbol.t * cforest 
and cforest =
  | CHole 
  | CCons of ctree level 
type t = forest
type context = cforest
let rec array_to_list a i j =
  if i = j then [] else (a.(i)) :: (array_to_list a (i + 1) j)
let empty = { prefix = []; focus = TEmpty; suffix = []; comment = "" }
let tail pos rhs =
  let length = Array.length rhs in
  assert (pos < length);
  {
    prefix = [];
    focus = TEmpty;
    suffix = (array_to_list rhs pos length);
    comment = ""
  }
let build pos rhs forest comment =
  let length = Array.length rhs in
  assert (pos < length);
  (match rhs.(pos) with
   | Symbol.T _ -> assert false
   | Symbol.N _ as symbol ->
       {
         prefix = [];
         focus = (TRooted (symbol, forest));
         suffix = (array_to_list rhs (pos + 1) length);
         comment =
           ((match comment with | None -> "" | Some comment -> comment))
       })
let prepend symbol forest =
  { forest with prefix = (symbol :: (forest.prefix)) }
let buffer = Buffer.create 32768
let rec print_blank k =
  if k > 0 then (Buffer.add_char buffer ' '; print_blank (k - 1))
let print_symbol symbol =
  let word = Symbol.print symbol in
  Buffer.add_string buffer word;
  Buffer.add_char buffer ' ';
  (String.length word) + 1
let print_symbols symbols =
  List.fold_left (fun offset -> fun symbol -> offset + (print_symbol symbol))
    0 symbols
let print_level print_focus_root print_focus_remainder offset forest =
  print_blank offset;
  (let offset = offset + (print_symbols forest.prefix) in
   print_focus_root forest.focus;
   (let (_ : int) = print_symbols forest.suffix in
    if (String.length forest.comment) > 0
    then
      (Buffer.add_string buffer "// ";
       Buffer.add_string buffer forest.comment);
    Buffer.add_char buffer '\n';
    print_focus_remainder offset forest.focus))
let print_tree_root =
  function
  | TEmpty -> Buffer.add_string buffer ". "
  | TRooted (symbol, _) -> let (_ : int) = print_symbol symbol in ()
let rec print_forest offset forest =
  print_level print_tree_root print_tree_remainder offset forest
and print_tree_remainder offset =
  function | TEmpty -> () | TRooted (_, forest) -> print_forest offset forest
let print_ctree_root =
  function | CRooted (symbol, _) -> let (_ : int) = print_symbol symbol in ()
let rec print_cforest offset cforest =
  match cforest with
  | CHole -> (print_blank offset; Buffer.add_string buffer "(?)\n")
  | CCons forest ->
      print_level print_ctree_root print_ctree_remainder offset forest
and print_ctree_remainder offset =
  function | CRooted (_, cforest) -> print_cforest offset cforest
let wrap print channel x =
  Buffer.clear buffer; print 0 x; Buffer.output_buffer channel buffer
let print = wrap print_forest
let printc = wrap print_cforest
let rec punch_tree tree =
  (match tree with
   | TEmpty -> None
   | TRooted (symbol, forest) ->
       let (forest1, forest2) = punch_forest forest in
       Some ((CRooted (symbol, forest1)), forest2) : (ctree * forest) option)
and punch_forest forest =
  (match punch_tree forest.focus with
   | None -> (CHole, forest)
   | Some (ctree1, forest2) ->
       ((CCons
           {
             prefix = (forest.prefix);
             focus = ctree1;
             suffix = (forest.suffix);
             comment = (forest.comment)
           }), forest2) : (cforest * forest))
let rec fill_tree ctree1 forest2 =
  (match ctree1 with
   | CRooted (symbol1, cforest1) ->
       TRooted (symbol1, (fill_forest cforest1 forest2)) : tree)
and fill_forest cforest1 forest2 =
  (match cforest1 with
   | CHole -> forest2
   | CCons level1 ->
       {
         prefix = (level1.prefix);
         focus = (fill_tree level1.focus forest2);
         suffix = (level1.suffix);
         comment = (level1.comment)
       } : forest)
let rec common_tree ctree1 tree2 =
  (match (ctree1, tree2) with
   | (CRooted _, TEmpty) -> None
   | (CRooted (symbol1, cforest1), TRooted (symbol2, forest2)) ->
       if Symbol.equal symbol1 symbol2
       then
         let (cforest, cforest1, forest2) = common_forest cforest1 forest2 in
         Some ((CRooted (symbol1, cforest)), cforest1, forest2)
       else None : (ctree * cforest * forest) option)
and common_forest cforest1 forest2 =
  (match cforest1 with
   | CHole -> (CHole, cforest1, forest2)
   | CCons forest1 ->
       if
         (Symbol.lequal forest1.prefix forest2.prefix) &&
           ((Symbol.lequal forest1.suffix forest2.suffix) &&
              (forest1.comment = forest2.comment))
       then
         (match common_tree forest1.focus forest2.focus with
          | None -> (CHole, cforest1, forest2)
          | Some (ctree, csubforest1, subforest2) ->
              let cforest =
                {
                  prefix = (forest1.prefix);
                  focus = ctree;
                  suffix = (forest1.suffix);
                  comment = (forest1.comment)
                } in
              ((CCons cforest), csubforest1, subforest2))
       else (CHole, cforest1, forest2) : (cforest * cforest * forest))
let factor forests =
  match Item.Map.fold
          (fun item ->
             fun forest ->
               fun accu ->
                 match accu with
                 | None ->
                     let (context, residual) = punch_forest forest in
                     Some (context, (Item.Map.singleton item residual))
                 | Some (context, residuals) ->
                     let (context, contextr, forestr) =
                       common_forest context forest in
                     let residuals =
                       Item.Map.add item forestr
                         (Item.Map.map (fill_forest contextr) residuals) in
                     Some (context, residuals)) forests None
  with
  | None -> assert false
  | Some (context, residuals) -> (context, residuals)
[
  structure_item (src/derivation.ml[14,1000+0]..src/derivation.ml[14,1000+12])
    Tstr_open Fresh
    module_expr (src/derivation.ml[14,1000+5]..src/derivation.ml[14,1000+12])
      Tmod_ident "Dune__exe!.Grammar"
  structure_item (src/derivation.ml[33,1812+0]..src/derivation.ml[38,1927+3])
    Tstr_type Rec
    [
      type_declaration level/414 (src/derivation.ml[33,1812+0]..src/derivation.ml[38,1927+3])
        ptype_params =
          [
            core_type (src/derivation.ml[33,1812+5]..src/derivation.ml[33,1812+11])
              Ttyp_var focus
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (src/derivation.ml[34,1834+4]..src/derivation.ml[34,1834+26])
                Immutable
                prefix/443                core_type (src/derivation.ml[34,1834+12]..src/derivation.ml[34,1834+25])
                  Ttyp_poly
                  core_type (src/derivation.ml[34,1834+12]..src/derivation.ml[34,1834+25])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/derivation.ml[34,1834+12]..src/derivation.ml[34,1834+20])
                        Ttyp_constr "Dune__exe!.Grammar.Symbol.t"
                        []
                    ]
              (src/derivation.ml[35,1861+4]..src/derivation.ml[35,1861+18])
                Immutable
                focus/444                core_type (src/derivation.ml[35,1861+11]..src/derivation.ml[35,1861+17])
                  Ttyp_poly
                  core_type (src/derivation.ml[35,1861+11]..src/derivation.ml[35,1861+17])
                    Ttyp_var focus
              (src/derivation.ml[36,1880+4]..src/derivation.ml[36,1880+26])
                Immutable
                suffix/445                core_type (src/derivation.ml[36,1880+12]..src/derivation.ml[36,1880+25])
                  Ttyp_poly
                  core_type (src/derivation.ml[36,1880+12]..src/derivation.ml[36,1880+25])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/derivation.ml[36,1880+12]..src/derivation.ml[36,1880+20])
                        Ttyp_constr "Dune__exe!.Grammar.Symbol.t"
                        []
                    ]
              (src/derivation.ml[37,1907+4]..src/derivation.ml[37,1907+19])
                Immutable
                comment/446                core_type (src/derivation.ml[37,1907+13]..src/derivation.ml[37,1907+19])
                  Ttyp_poly
                  core_type (src/derivation.ml[37,1907+13]..src/derivation.ml[37,1907+19])
                    Ttyp_constr "string/15!"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/derivation.ml[40,1932+0]..src/derivation.ml[45,2002+14])
    Tstr_type Rec
    [
      type_declaration tree/458 (src/derivation.ml[40,1932+0]..src/derivation.ml[42,1955+32])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (src/derivation.ml[41,1944+2]..src/derivation.ml[41,1944+10])
                TEmpty/460
                []
                None
              (src/derivation.ml[42,1955+2]..src/derivation.ml[42,1955+32])
                TRooted/461
                [
                  core_type (src/derivation.ml[42,1955+15]..src/derivation.ml[42,1955+23])
                    Ttyp_constr "Dune__exe!.Grammar.Symbol.t"
                    []
                  core_type (src/derivation.ml[42,1955+26]..src/derivation.ml[42,1955+32])
                    Ttyp_constr "forest/459"
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration forest/459 (src/derivation.ml[44,1989+0]..src/derivation.ml[45,2002+14])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/derivation.ml[45,2002+4]..src/derivation.ml[45,2002+14])
              Ttyp_constr "level/414"
              [
                core_type (src/derivation.ml[45,2002+4]..src/derivation.ml[45,2002+8])
                  Ttyp_constr "tree/458"
                  []
              ]
    ]
  structure_item (src/derivation.ml[53,2244+0]..src/derivation.ml[58,2316+24])
    Tstr_type Rec
    [
      type_declaration ctree/462 (src/derivation.ml[53,2244+0]..src/derivation.ml[54,2257+33])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (src/derivation.ml[54,2257+2]..src/derivation.ml[54,2257+33])
                CRooted/464
                [
                  core_type (src/derivation.ml[54,2257+15]..src/derivation.ml[54,2257+23])
                    Ttyp_constr "Dune__exe!.Grammar.Symbol.t"
                    []
                  core_type (src/derivation.ml[54,2257+26]..src/derivation.ml[54,2257+33])
                    Ttyp_constr "cforest/463"
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration cforest/463 (src/derivation.ml[56,2292+0]..src/derivation.ml[58,2316+24])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (src/derivation.ml[57,2306+2]..src/derivation.ml[57,2306+9])
                CHole/465
                []
                None
              (src/derivation.ml[58,2316+2]..src/derivation.ml[58,2316+24])
                CCons/466
                [
                  core_type (src/derivation.ml[58,2316+13]..src/derivation.ml[58,2316+24])
                    Ttyp_constr "level/414"
                    [
                      core_type (src/derivation.ml[58,2316+13]..src/derivation.ml[58,2316+18])
                        Ttyp_constr "ctree/462"
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/derivation.ml[62,2386+0]..src/derivation.ml[63,2395+10])
    Tstr_type Rec
    [
      type_declaration t/467 (src/derivation.ml[62,2386+0]..src/derivation.ml[63,2395+10])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/derivation.ml[63,2395+4]..src/derivation.ml[63,2395+10])
              Ttyp_constr "forest/459"
              []
    ]
  structure_item (src/derivation.ml[65,2407+0]..src/derivation.ml[66,2422+11])
    Tstr_type Rec
    [
      type_declaration context/468 (src/derivation.ml[65,2407+0]..src/derivation.ml[66,2422+11])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/derivation.ml[66,2422+4]..src/derivation.ml[66,2422+11])
              Ttyp_constr "cforest/463"
              []
    ]
  structure_item (src/derivation.ml[72,2538+0]..src/derivation.ml[76,2598+38])
    Tstr_value Rec
    [
      <def>
        pattern (src/derivation.ml[72,2538+8]..src/derivation.ml[72,2538+21])
          Tpat_var "array_to_list/469"
        expression (src/derivation.ml[72,2538+22]..src/derivation.ml[76,2598+38]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/derivation.ml[72,2538+22]..src/derivation.ml[72,2538+23])
                Tpat_var "a/470"
              expression (src/derivation.ml[72,2538+24]..src/derivation.ml[76,2598+38]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/derivation.ml[72,2538+24]..src/derivation.ml[72,2538+25])
                      Tpat_var "i/471"
                    expression (src/derivation.ml[72,2538+26]..src/derivation.ml[76,2598+38]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/derivation.ml[72,2538+26]..src/derivation.ml[72,2538+27])
                            Tpat_var "j/472"
                          expression (src/derivation.ml[73,2568+2]..src/derivation.ml[76,2598+38])
                            Texp_ifthenelse
                            expression (src/derivation.ml[73,2568+5]..src/derivation.ml[73,2568+10])
                              Texp_apply
                              expression (src/derivation.ml[73,2568+7]..src/derivation.ml[73,2568+8])
                                Texp_ident "Stdlib!.="
                              [
                                <arg>
                                  Nolabel
                                  expression (src/derivation.ml[73,2568+5]..src/derivation.ml[73,2568+6])
                                    Texp_ident "i/471"
                                <arg>
                                  Nolabel
                                  expression (src/derivation.ml[73,2568+9]..src/derivation.ml[73,2568+10])
                                    Texp_ident "j/472"
                              ]
                            expression (src/derivation.ml[74,2584+4]..src/derivation.ml[74,2584+6])
                              Texp_construct "[]"
                              []
                            Some
                              expression (src/derivation.ml[76,2598+4]..src/derivation.ml[76,2598+38])
                                Texp_construct "::"
                                [
                                  expression (src/derivation.ml[76,2598+4]..src/derivation.ml[76,2598+9])
                                    Texp_apply
                                    expression (src/derivation.ml[76,2598+4]..src/derivation.ml[76,2598+9]) ghost
                                      Texp_ident "Stdlib!.Array.get"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/derivation.ml[76,2598+4]..src/derivation.ml[76,2598+5])
                                          Texp_ident "a/470"
                                      <arg>
                                        Nolabel
                                        expression (src/derivation.ml[76,2598+7]..src/derivation.ml[76,2598+8])
                                          Texp_ident "i/471"
                                    ]
                                  expression (src/derivation.ml[76,2598+13]..src/derivation.ml[76,2598+38])
                                    Texp_apply
                                    expression (src/derivation.ml[76,2598+13]..src/derivation.ml[76,2598+26])
                                      Texp_ident "array_to_list/469"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/derivation.ml[76,2598+27]..src/derivation.ml[76,2598+28])
                                          Texp_ident "a/470"
                                      <arg>
                                        Nolabel
                                        expression (src/derivation.ml[76,2598+29]..src/derivation.ml[76,2598+36])
                                          Texp_apply
                                          expression (src/derivation.ml[76,2598+32]..src/derivation.ml[76,2598+33])
                                            Texp_ident "Stdlib!.+"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/derivation.ml[76,2598+30]..src/derivation.ml[76,2598+31])
                                                Texp_ident "i/471"
                                            <arg>
                                              Nolabel
                                              expression (src/derivation.ml[76,2598+34]..src/derivation.ml[76,2598+35])
                                                Texp_constant Const_int 1
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/derivation.ml[76,2598+37]..src/derivation.ml[76,2598+38])
                                          Texp_ident "j/472"
                                    ]
                                ]
                      ]
                ]
          ]
    ]
  structure_item (src/derivation.ml[78,2638+0]..src/derivation.ml[84,2725+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[78,2638+4]..src/derivation.ml[78,2638+9])
          Tpat_var "empty/521"
        expression (src/derivation.ml[79,2650+2]..src/derivation.ml[84,2725+3])
          Texp_record
            fields =
              [
                "prefix"
                  expression (src/derivation.ml[80,2654+13]..src/derivation.ml[80,2654+15])
                    Texp_construct "[]"
                    []
                "focus"
                  expression (src/derivation.ml[81,2671+12]..src/derivation.ml[81,2671+18])
                    Texp_construct "TEmpty"
                    []
                "suffix"
                  expression (src/derivation.ml[82,2691+13]..src/derivation.ml[82,2691+15])
                    Texp_construct "[]"
                    []
                "comment"
                  expression (src/derivation.ml[83,2708+14]..src/derivation.ml[83,2708+16])
                    Texp_constant Const_string("",(src/derivation.ml[83,2708+15]..src/derivation.ml[83,2708+15]),None)
              ]
            representation =
              Record_regular
            extended_expression =
              None
    ]
  structure_item (src/derivation.ml[86,2730+0]..src/derivation.ml[94,2910+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[86,2730+4]..src/derivation.ml[86,2730+8])
          Tpat_var "tail/522"
        expression (src/derivation.ml[86,2730+9]..src/derivation.ml[94,2910+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/derivation.ml[86,2730+9]..src/derivation.ml[86,2730+12])
                Tpat_var "pos/524"
              expression (src/derivation.ml[86,2730+13]..src/derivation.ml[94,2910+3]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/derivation.ml[86,2730+13]..src/derivation.ml[86,2730+16])
                      Tpat_var "rhs/525"
                    expression (src/derivation.ml[87,2749+2]..src/derivation.ml[94,2910+3])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/derivation.ml[87,2749+6]..src/derivation.ml[87,2749+12])
                            Tpat_var "length/526"
                          expression (src/derivation.ml[87,2749+15]..src/derivation.ml[87,2749+31])
                            Texp_apply
                            expression (src/derivation.ml[87,2749+15]..src/derivation.ml[87,2749+27])
                              Texp_ident "Stdlib!.Array.length"
                            [
                              <arg>
                                Nolabel
                                expression (src/derivation.ml[87,2749+28]..src/derivation.ml[87,2749+31])
                                  Texp_ident "rhs/525"
                            ]
                      ]
                      expression (src/derivation.ml[88,2784+2]..src/derivation.ml[94,2910+3])
                        Texp_sequence
                        expression (src/derivation.ml[88,2784+2]..src/derivation.ml[88,2784+23])
                          Texp_assert                          expression (src/derivation.ml[88,2784+9]..src/derivation.ml[88,2784+23])
                            Texp_apply
                            expression (src/derivation.ml[88,2784+14]..src/derivation.ml[88,2784+15])
                              Texp_ident "Stdlib!.<"
                            [
                              <arg>
                                Nolabel
                                expression (src/derivation.ml[88,2784+10]..src/derivation.ml[88,2784+13])
                                  Texp_ident "pos/524"
                              <arg>
                                Nolabel
                                expression (src/derivation.ml[88,2784+16]..src/derivation.ml[88,2784+22])
                                  Texp_ident "length/526"
                            ]
                        expression (src/derivation.ml[89,2809+2]..src/derivation.ml[94,2910+3])
                          Texp_record
                            fields =
                              [
                                "prefix"
                                  expression (src/derivation.ml[90,2813+13]..src/derivation.ml[90,2813+15])
                                    Texp_construct "[]"
                                    []
                                "focus"
                                  expression (src/derivation.ml[91,2830+12]..src/derivation.ml[91,2830+18])
                                    Texp_construct "TEmpty"
                                    []
                                "suffix"
                                  expression (src/derivation.ml[92,2850+13]..src/derivation.ml[92,2850+41])
                                    Texp_apply
                                    expression (src/derivation.ml[92,2850+13]..src/derivation.ml[92,2850+26])
                                      Texp_ident "array_to_list/469"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/derivation.ml[92,2850+27]..src/derivation.ml[92,2850+30])
                                          Texp_ident "rhs/525"
                                      <arg>
                                        Nolabel
                                        expression (src/derivation.ml[92,2850+31]..src/derivation.ml[92,2850+34])
                                          Texp_ident "pos/524"
                                      <arg>
                                        Nolabel
                                        expression (src/derivation.ml[92,2850+35]..src/derivation.ml[92,2850+41])
                                          Texp_ident "length/526"
                                    ]
                                "comment"
                                  expression (src/derivation.ml[93,2893+14]..src/derivation.ml[93,2893+16])
                                    Texp_constant Const_string("",(src/derivation.ml[93,2893+15]..src/derivation.ml[93,2893+15]),None)
                              ]
                            representation =
                              Record_regular
                            extended_expression =
                              None
                ]
          ]
    ]
  structure_item (src/derivation.ml[96,2915+0]..src/derivation.ml[108,3298+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[96,2915+4]..src/derivation.ml[96,2915+9])
          Tpat_var "build/527"
        expression (src/derivation.ml[96,2915+10]..src/derivation.ml[108,3298+7]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/derivation.ml[96,2915+10]..src/derivation.ml[96,2915+13])
                Tpat_var "pos/529"
              expression (src/derivation.ml[96,2915+14]..src/derivation.ml[108,3298+7]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/derivation.ml[96,2915+14]..src/derivation.ml[96,2915+17])
                      Tpat_var "rhs/530"
                    expression (src/derivation.ml[96,2915+18]..src/derivation.ml[108,3298+7]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/derivation.ml[96,2915+18]..src/derivation.ml[96,2915+24])
                            Tpat_var "forest/531"
                          expression (src/derivation.ml[96,2915+25]..src/derivation.ml[108,3298+7]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/derivation.ml[96,2915+25]..src/derivation.ml[96,2915+32])
                                  Tpat_var "comment/532"
                                expression (src/derivation.ml[97,2950+2]..src/derivation.ml[108,3298+7])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/derivation.ml[97,2950+6]..src/derivation.ml[97,2950+12])
                                        Tpat_var "length/533"
                                      expression (src/derivation.ml[97,2950+15]..src/derivation.ml[97,2950+31])
                                        Texp_apply
                                        expression (src/derivation.ml[97,2950+15]..src/derivation.ml[97,2950+27])
                                          Texp_ident "Stdlib!.Array.length"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/derivation.ml[97,2950+28]..src/derivation.ml[97,2950+31])
                                              Texp_ident "rhs/530"
                                        ]
                                  ]
                                  expression (src/derivation.ml[98,2985+2]..src/derivation.ml[108,3298+7])
                                    Texp_sequence
                                    expression (src/derivation.ml[98,2985+2]..src/derivation.ml[98,2985+23])
                                      Texp_assert                                      expression (src/derivation.ml[98,2985+9]..src/derivation.ml[98,2985+23])
                                        Texp_apply
                                        expression (src/derivation.ml[98,2985+14]..src/derivation.ml[98,2985+15])
                                          Texp_ident "Stdlib!.<"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/derivation.ml[98,2985+10]..src/derivation.ml[98,2985+13])
                                              Texp_ident "pos/529"
                                          <arg>
                                            Nolabel
                                            expression (src/derivation.ml[98,2985+16]..src/derivation.ml[98,2985+22])
                                              Texp_ident "length/533"
                                        ]
                                    expression (src/derivation.ml[99,3010+2]..src/derivation.ml[108,3298+7])
                                      Texp_match
                                      expression (src/derivation.ml[99,3010+8]..src/derivation.ml[99,3010+17])
                                        Texp_apply
                                        expression (src/derivation.ml[99,3010+8]..src/derivation.ml[99,3010+17]) ghost
                                          Texp_ident "Stdlib!.Array.get"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/derivation.ml[99,3010+8]..src/derivation.ml[99,3010+11])
                                              Texp_ident "rhs/530"
                                          <arg>
                                            Nolabel
                                            expression (src/derivation.ml[99,3010+13]..src/derivation.ml[99,3010+16])
                                              Texp_ident "pos/529"
                                        ]
                                      [
                                        <case>
                                          pattern (src/derivation.ml[100,3033+4]..src/derivation.ml[100,3033+14])
                                            Tpat_value
                                            pattern (src/derivation.ml[100,3033+4]..src/derivation.ml[100,3033+14])
                                              Tpat_construct "Symbol.T"
                                              [
                                                pattern (src/derivation.ml[100,3033+13]..src/derivation.ml[100,3033+14])
                                                  Tpat_any
                                              ]
                                              None
                                          expression (src/derivation.ml[101,3051+6]..src/derivation.ml[101,3051+18])
                                            Texp_assert                                            expression (src/derivation.ml[101,3051+13]..src/derivation.ml[101,3051+18])
                                              Texp_construct "false"
                                              []
                                        <case>
                                          pattern (src/derivation.ml[102,3070+4]..src/derivation.ml[102,3070+24])
                                            Tpat_value
                                            pattern (src/derivation.ml[102,3070+4]..src/derivation.ml[102,3070+24])
                                              Tpat_alias "symbol/534"
                                              pattern (src/derivation.ml[102,3070+4]..src/derivation.ml[102,3070+14])
                                                Tpat_construct "Symbol.N"
                                                [
                                                  pattern (src/derivation.ml[102,3070+13]..src/derivation.ml[102,3070+14])
                                                    Tpat_any
                                                ]
                                                None
                                          expression (src/derivation.ml[103,3098+6]..src/derivation.ml[108,3298+7])
                                            Texp_record
                                              fields =
                                                [
                                                  "prefix"
                                                    expression (src/derivation.ml[104,3106+17]..src/derivation.ml[104,3106+19])
                                                      Texp_construct "[]"
                                                      []
                                                  "focus"
                                                    expression (src/derivation.ml[105,3127+16]..src/derivation.ml[105,3127+40])
                                                      Texp_construct "TRooted"
                                                      [
                                                        expression (src/derivation.ml[105,3127+25]..src/derivation.ml[105,3127+31])
                                                          Texp_ident "symbol/534"
                                                        expression (src/derivation.ml[105,3127+33]..src/derivation.ml[105,3127+39])
                                                          Texp_ident "forest/531"
                                                      ]
                                                  "suffix"
                                                    expression (src/derivation.ml[106,3169+17]..src/derivation.ml[106,3169+51])
                                                      Texp_apply
                                                      expression (src/derivation.ml[106,3169+17]..src/derivation.ml[106,3169+30])
                                                        Texp_ident "array_to_list/469"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/derivation.ml[106,3169+31]..src/derivation.ml[106,3169+34])
                                                            Texp_ident "rhs/530"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/derivation.ml[106,3169+35]..src/derivation.ml[106,3169+44])
                                                            Texp_apply
                                                            expression (src/derivation.ml[106,3169+40]..src/derivation.ml[106,3169+41])
                                                              Texp_ident "Stdlib!.+"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/derivation.ml[106,3169+36]..src/derivation.ml[106,3169+39])
                                                                  Texp_ident "pos/529"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/derivation.ml[106,3169+42]..src/derivation.ml[106,3169+43])
                                                                  Texp_constant Const_int 1
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/derivation.ml[106,3169+45]..src/derivation.ml[106,3169+51])
                                                            Texp_ident "length/533"
                                                      ]
                                                  "comment"
                                                    expression (src/derivation.ml[107,3222+18]..src/derivation.ml[107,3222+75])
                                                      Texp_match
                                                      expression (src/derivation.ml[107,3222+25]..src/derivation.ml[107,3222+32])
                                                        Texp_ident "comment/532"
                                                      [
                                                        <case>
                                                          pattern (src/derivation.ml[107,3222+38]..src/derivation.ml[107,3222+42])
                                                            Tpat_value
                                                            pattern (src/derivation.ml[107,3222+38]..src/derivation.ml[107,3222+42])
                                                              Tpat_construct "None"
                                                              []
                                                              None
                                                          expression (src/derivation.ml[107,3222+46]..src/derivation.ml[107,3222+48])
                                                            Texp_constant Const_string("",(src/derivation.ml[107,3222+47]..src/derivation.ml[107,3222+47]),None)
                                                        <case>
                                                          pattern (src/derivation.ml[107,3222+51]..src/derivation.ml[107,3222+63])
                                                            Tpat_value
                                                            pattern (src/derivation.ml[107,3222+51]..src/derivation.ml[107,3222+63])
                                                              Tpat_construct "Some"
                                                              [
                                                                pattern (src/derivation.ml[107,3222+56]..src/derivation.ml[107,3222+63])
                                                                  Tpat_var "comment/535"
                                                              ]
                                                              None
                                                          expression (src/derivation.ml[107,3222+67]..src/derivation.ml[107,3222+74])
                                                            Texp_ident "comment/535"
                                                      ]
                                                ]
                                              representation =
                                                Record_regular
                                              extended_expression =
                                                None
                                      ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/derivation.ml[110,3307+0]..src/derivation.ml[112,3351+38])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[110,3307+4]..src/derivation.ml[110,3307+11])
          Tpat_var "prepend/556"
        expression (src/derivation.ml[110,3307+12]..src/derivation.ml[112,3351+38]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/derivation.ml[110,3307+12]..src/derivation.ml[110,3307+18])
                Tpat_var "symbol/558"
              expression (src/derivation.ml[110,3307+19]..src/derivation.ml[112,3351+38]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/derivation.ml[110,3307+19]..src/derivation.ml[110,3307+25])
                      Tpat_var "forest/559"
                    expression (src/derivation.ml[111,3335+2]..src/derivation.ml[112,3351+38])
                      Texp_record
                        fields =
                          [
                            "prefix"
                              expression (src/derivation.ml[112,3351+13]..src/derivation.ml[112,3351+36])
                                Texp_construct "::"
                                [
                                  expression (src/derivation.ml[112,3351+13]..src/derivation.ml[112,3351+19])
                                    Texp_ident "symbol/558"
                                  expression (src/derivation.ml[112,3351+23]..src/derivation.ml[112,3351+36])
                                    Texp_field
                                    expression (src/derivation.ml[112,3351+23]..src/derivation.ml[112,3351+29])
                                      Texp_ident "forest/559"
                                    "prefix"
                                ]
                            <kept>                            <kept>                            <kept>                          ]
                        representation =
                          Record_regular
                        extended_expression =
                          Some
                            expression (src/derivation.ml[111,3335+4]..src/derivation.ml[111,3335+10])
                              Texp_ident "forest/559"
                ]
          ]
    ]
  structure_item (src/derivation.ml[118,3489+0]..src/derivation.ml[119,3502+21])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[118,3489+4]..src/derivation.ml[118,3489+10])
          Tpat_var "buffer/560"
        expression (src/derivation.ml[119,3502+2]..src/derivation.ml[119,3502+21])
          Texp_apply
          expression (src/derivation.ml[119,3502+2]..src/derivation.ml[119,3502+15])
            Texp_ident "Stdlib!.Buffer.create"
          [
            <arg>
              Nolabel
              expression (src/derivation.ml[119,3502+16]..src/derivation.ml[119,3502+21])
                Texp_constant Const_int 32768
          ]
    ]
  structure_item (src/derivation.ml[121,3525+0]..src/derivation.ml[125,3627+5])
    Tstr_value Rec
    [
      <def>
        pattern (src/derivation.ml[121,3525+8]..src/derivation.ml[121,3525+19])
          Tpat_var "print_blank/643"
        expression (src/derivation.ml[121,3525+20]..src/derivation.ml[125,3627+5]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/derivation.ml[121,3525+20]..src/derivation.ml[121,3525+21])
                Tpat_var "k/644"
              expression (src/derivation.ml[122,3549+2]..src/derivation.ml[125,3627+5])
                Texp_ifthenelse
                expression (src/derivation.ml[122,3549+5]..src/derivation.ml[122,3549+10])
                  Texp_apply
                  expression (src/derivation.ml[122,3549+7]..src/derivation.ml[122,3549+8])
                    Texp_ident "Stdlib!.>"
                  [
                    <arg>
                      Nolabel
                      expression (src/derivation.ml[122,3549+5]..src/derivation.ml[122,3549+6])
                        Texp_ident "k/644"
                    <arg>
                      Nolabel
                      expression (src/derivation.ml[122,3549+9]..src/derivation.ml[122,3549+10])
                        Texp_constant Const_int 0
                  ]
                expression (src/derivation.ml[122,3549+16]..src/derivation.ml[125,3627+5])
                  Texp_sequence
                  expression (src/derivation.ml[123,3571+4]..src/derivation.ml[123,3571+30])
                    Texp_apply
                    expression (src/derivation.ml[123,3571+4]..src/derivation.ml[123,3571+19])
                      Texp_ident "Stdlib!.Buffer.add_char"
                    [
                      <arg>
                        Nolabel
                        expression (src/derivation.ml[123,3571+20]..src/derivation.ml[123,3571+26])
                          Texp_ident "buffer/560"
                      <arg>
                        Nolabel
                        expression (src/derivation.ml[123,3571+27]..src/derivation.ml[123,3571+30])
                          Texp_constant Const_char 20
                    ]
                  expression (src/derivation.ml[124,3603+4]..src/derivation.ml[124,3603+23])
                    Texp_apply
                    expression (src/derivation.ml[124,3603+4]..src/derivation.ml[124,3603+15])
                      Texp_ident "print_blank/643"
                    [
                      <arg>
                        Nolabel
                        expression (src/derivation.ml[124,3603+16]..src/derivation.ml[124,3603+23])
                          Texp_apply
                          expression (src/derivation.ml[124,3603+19]..src/derivation.ml[124,3603+20])
                            Texp_ident "Stdlib!.-"
                          [
                            <arg>
                              Nolabel
                              expression (src/derivation.ml[124,3603+17]..src/derivation.ml[124,3603+18])
                                Texp_ident "k/644"
                            <arg>
                              Nolabel
                              expression (src/derivation.ml[124,3603+21]..src/derivation.ml[124,3603+22])
                                Texp_constant Const_int 1
                          ]
                    ]
                None
          ]
    ]
  structure_item (src/derivation.ml[127,3634+0]..src/derivation.ml[131,3759+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[127,3634+4]..src/derivation.ml[127,3634+16])
          Tpat_var "print_symbol/645"
        expression (src/derivation.ml[127,3634+17]..src/derivation.ml[131,3759+24]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/derivation.ml[127,3634+17]..src/derivation.ml[127,3634+23])
                Tpat_var "symbol/647"
              expression (src/derivation.ml[128,3660+2]..src/derivation.ml[131,3759+24])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/derivation.ml[128,3660+6]..src/derivation.ml[128,3660+10])
                      Tpat_var "word/648"
                    expression (src/derivation.ml[128,3660+13]..src/derivation.ml[128,3660+32])
                      Texp_apply
                      expression (src/derivation.ml[128,3660+13]..src/derivation.ml[128,3660+25])
                        Texp_ident "Dune__exe!.Grammar.Symbol.print"
                      [
                        <arg>
                          Nolabel
                          expression (src/derivation.ml[128,3660+26]..src/derivation.ml[128,3660+32])
                            Texp_ident "symbol/647"
                      ]
                ]
                expression (src/derivation.ml[129,3696+2]..src/derivation.ml[131,3759+24])
                  Texp_sequence
                  expression (src/derivation.ml[129,3696+2]..src/derivation.ml[129,3696+31])
                    Texp_apply
                    expression (src/derivation.ml[129,3696+2]..src/derivation.ml[129,3696+19])
                      Texp_ident "Stdlib!.Buffer.add_string"
                    [
                      <arg>
                        Nolabel
                        expression (src/derivation.ml[129,3696+20]..src/derivation.ml[129,3696+26])
                          Texp_ident "buffer/560"
                      <arg>
                        Nolabel
                        expression (src/derivation.ml[129,3696+27]..src/derivation.ml[129,3696+31])
                          Texp_ident "word/648"
                    ]
                  expression (src/derivation.ml[130,3729+2]..src/derivation.ml[131,3759+24])
                    Texp_sequence
                    expression (src/derivation.ml[130,3729+2]..src/derivation.ml[130,3729+28])
                      Texp_apply
                      expression (src/derivation.ml[130,3729+2]..src/derivation.ml[130,3729+17])
                        Texp_ident "Stdlib!.Buffer.add_char"
                      [
                        <arg>
                          Nolabel
                          expression (src/derivation.ml[130,3729+18]..src/derivation.ml[130,3729+24])
                            Texp_ident "buffer/560"
                        <arg>
                          Nolabel
                          expression (src/derivation.ml[130,3729+25]..src/derivation.ml[130,3729+28])
                            Texp_constant Const_char 20
                      ]
                    expression (src/derivation.ml[131,3759+2]..src/derivation.ml[131,3759+24])
                      Texp_apply
                      expression (src/derivation.ml[131,3759+21]..src/derivation.ml[131,3759+22])
                        Texp_ident "Stdlib!.+"
                      [
                        <arg>
                          Nolabel
                          expression (src/derivation.ml[131,3759+2]..src/derivation.ml[131,3759+20])
                            Texp_apply
                            expression (src/derivation.ml[131,3759+2]..src/derivation.ml[131,3759+15])
                              Texp_ident "Stdlib!.String.length"
                            [
                              <arg>
                                Nolabel
                                expression (src/derivation.ml[131,3759+16]..src/derivation.ml[131,3759+20])
                                  Texp_ident "word/648"
                            ]
                        <arg>
                          Nolabel
                          expression (src/derivation.ml[131,3759+23]..src/derivation.ml[131,3759+24])
                            Texp_constant Const_int 1
                      ]
          ]
    ]
  structure_item (src/derivation.ml[133,3785+0]..src/derivation.ml[136,3885+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[133,3785+4]..src/derivation.ml[133,3785+17])
          Tpat_var "print_symbols/718"
        expression (src/derivation.ml[133,3785+18]..src/derivation.ml[136,3885+13]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/derivation.ml[133,3785+18]..src/derivation.ml[133,3785+25])
                Tpat_var "symbols/720"
              expression (src/derivation.ml[134,3813+2]..src/derivation.ml[136,3885+13])
                Texp_apply
                expression (src/derivation.ml[134,3813+2]..src/derivation.ml[134,3813+16])
                  Texp_ident "Stdlib!.List.fold_left"
                [
                  <arg>
                    Nolabel
                    expression (src/derivation.ml[134,3813+17]..src/derivation.ml[136,3885+3])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/derivation.ml[134,3813+22]..src/derivation.ml[134,3813+28])
                            Tpat_var "offset/787"
                          expression (src/derivation.ml[134,3813+29]..src/derivation.ml[135,3852+32]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/derivation.ml[134,3813+29]..src/derivation.ml[134,3813+35])
                                  Tpat_var "symbol/788"
                                expression (src/derivation.ml[135,3852+4]..src/derivation.ml[135,3852+32])
                                  Texp_apply
                                  expression (src/derivation.ml[135,3852+11]..src/derivation.ml[135,3852+12])
                                    Texp_ident "Stdlib!.+"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/derivation.ml[135,3852+4]..src/derivation.ml[135,3852+10])
                                        Texp_ident "offset/787"
                                    <arg>
                                      Nolabel
                                      expression (src/derivation.ml[135,3852+13]..src/derivation.ml[135,3852+32])
                                        Texp_apply
                                        expression (src/derivation.ml[135,3852+13]..src/derivation.ml[135,3852+25])
                                          Texp_ident "print_symbol/645"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/derivation.ml[135,3852+26]..src/derivation.ml[135,3852+32])
                                              Texp_ident "symbol/788"
                                        ]
                                  ]
                            ]
                      ]
                  <arg>
                    Nolabel
                    expression (src/derivation.ml[136,3885+4]..src/derivation.ml[136,3885+5])
                      Texp_constant Const_int 0
                  <arg>
                    Nolabel
                    expression (src/derivation.ml[136,3885+6]..src/derivation.ml[136,3885+13])
                      Texp_ident "symbols/720"
                ]
          ]
    ]
  structure_item (src/derivation.ml[138,3900+0]..src/derivation.ml[148,4297+43])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[138,3900+4]..src/derivation.ml[138,3900+15])
          Tpat_var "print_level/789"
        expression (src/derivation.ml[138,3900+16]..src/derivation.ml[148,4297+43]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/derivation.ml[138,3900+16]..src/derivation.ml[138,3900+32])
                Tpat_var "print_focus_root/791"
              expression (src/derivation.ml[138,3900+33]..src/derivation.ml[148,4297+43]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/derivation.ml[138,3900+33]..src/derivation.ml[138,3900+54])
                      Tpat_var "print_focus_remainder/792"
                    expression (src/derivation.ml[138,3900+55]..src/derivation.ml[148,4297+43]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/derivation.ml[138,3900+55]..src/derivation.ml[138,3900+61])
                            Tpat_var "offset/793"
                          expression (src/derivation.ml[138,3900+62]..src/derivation.ml[148,4297+43]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/derivation.ml[138,3900+62]..src/derivation.ml[138,3900+68])
                                  Tpat_var "forest/794"
                                expression (src/derivation.ml[139,3971+2]..src/derivation.ml[148,4297+43])
                                  Texp_sequence
                                  expression (src/derivation.ml[139,3971+2]..src/derivation.ml[139,3971+20])
                                    Texp_apply
                                    expression (src/derivation.ml[139,3971+2]..src/derivation.ml[139,3971+13])
                                      Texp_ident "print_blank/643"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/derivation.ml[139,3971+14]..src/derivation.ml[139,3971+20])
                                          Texp_ident "offset/793"
                                    ]
                                  expression (src/derivation.ml[140,3993+2]..src/derivation.ml[148,4297+43])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/derivation.ml[140,3993+6]..src/derivation.ml[140,3993+12])
                                          Tpat_var "offset/795"
                                        expression (src/derivation.ml[140,3993+15]..src/derivation.ml[140,3993+51])
                                          Texp_apply
                                          expression (src/derivation.ml[140,3993+22]..src/derivation.ml[140,3993+23])
                                            Texp_ident "Stdlib!.+"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/derivation.ml[140,3993+15]..src/derivation.ml[140,3993+21])
                                                Texp_ident "offset/793"
                                            <arg>
                                              Nolabel
                                              expression (src/derivation.ml[140,3993+24]..src/derivation.ml[140,3993+51])
                                                Texp_apply
                                                expression (src/derivation.ml[140,3993+24]..src/derivation.ml[140,3993+37])
                                                  Texp_ident "print_symbols/718"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/derivation.ml[140,3993+38]..src/derivation.ml[140,3993+51])
                                                      Texp_field
                                                      expression (src/derivation.ml[140,3993+38]..src/derivation.ml[140,3993+44])
                                                        Texp_ident "forest/794"
                                                      "prefix"
                                                ]
                                          ]
                                    ]
                                    expression (src/derivation.ml[141,4048+2]..src/derivation.ml[148,4297+43])
                                      Texp_sequence
                                      expression (src/derivation.ml[141,4048+2]..src/derivation.ml[141,4048+31])
                                        Texp_apply
                                        expression (src/derivation.ml[141,4048+2]..src/derivation.ml[141,4048+18])
                                          Texp_ident "print_focus_root/791"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/derivation.ml[141,4048+19]..src/derivation.ml[141,4048+31])
                                              Texp_field
                                              expression (src/derivation.ml[141,4048+19]..src/derivation.ml[141,4048+25])
                                                Texp_ident "forest/794"
                                              "focus"
                                        ]
                                      expression (src/derivation.ml[142,4081+2]..src/derivation.ml[148,4297+43])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/derivation.ml[142,4081+7]..src/derivation.ml[142,4081+8])
                                              extra
                                                Tpat_extra_constraint
                                                core_type (src/derivation.ml[142,4081+11]..src/derivation.ml[142,4081+14])
                                                  Ttyp_constr "int/1!"
                                                  []
                                              Tpat_any
                                            expression (src/derivation.ml[142,4081+18]..src/derivation.ml[142,4081+45])
                                              Texp_apply
                                              expression (src/derivation.ml[142,4081+18]..src/derivation.ml[142,4081+31])
                                                Texp_ident "print_symbols/718"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/derivation.ml[142,4081+32]..src/derivation.ml[142,4081+45])
                                                    Texp_field
                                                    expression (src/derivation.ml[142,4081+32]..src/derivation.ml[142,4081+38])
                                                      Texp_ident "forest/794"
                                                    "suffix"
                                              ]
                                        ]
                                        expression (src/derivation.ml[143,4130+2]..src/derivation.ml[148,4297+43])
                                          Texp_sequence
                                          expression (src/derivation.ml[143,4130+2]..src/derivation.ml[146,4259+5])
                                            Texp_ifthenelse
                                            expression (src/derivation.ml[143,4130+5]..src/derivation.ml[143,4130+37])
                                              Texp_apply
                                              expression (src/derivation.ml[143,4130+34]..src/derivation.ml[143,4130+35])
                                                Texp_ident "Stdlib!.>"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/derivation.ml[143,4130+5]..src/derivation.ml[143,4130+33])
                                                    Texp_apply
                                                    expression (src/derivation.ml[143,4130+5]..src/derivation.ml[143,4130+18])
                                                      Texp_ident "Stdlib!.String.length"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/derivation.ml[143,4130+19]..src/derivation.ml[143,4130+33])
                                                          Texp_field
                                                          expression (src/derivation.ml[143,4130+19]..src/derivation.ml[143,4130+25])
                                                            Texp_ident "forest/794"
                                                          "comment"
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (src/derivation.ml[143,4130+36]..src/derivation.ml[143,4130+37])
                                                    Texp_constant Const_int 0
                                              ]
                                            expression (src/derivation.ml[143,4130+43]..src/derivation.ml[146,4259+5])
                                              Texp_sequence
                                              expression (src/derivation.ml[144,4179+4]..src/derivation.ml[144,4179+34])
                                                Texp_apply
                                                expression (src/derivation.ml[144,4179+4]..src/derivation.ml[144,4179+21])
                                                  Texp_ident "Stdlib!.Buffer.add_string"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/derivation.ml[144,4179+22]..src/derivation.ml[144,4179+28])
                                                      Texp_ident "buffer/560"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/derivation.ml[144,4179+29]..src/derivation.ml[144,4179+34])
                                                      Texp_constant Const_string("// ",(src/derivation.ml[144,4179+30]..src/derivation.ml[144,4179+33]),None)
                                                ]
                                              expression (src/derivation.ml[145,4215+4]..src/derivation.ml[145,4215+43])
                                                Texp_apply
                                                expression (src/derivation.ml[145,4215+4]..src/derivation.ml[145,4215+21])
                                                  Texp_ident "Stdlib!.Buffer.add_string"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/derivation.ml[145,4215+22]..src/derivation.ml[145,4215+28])
                                                      Texp_ident "buffer/560"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/derivation.ml[145,4215+29]..src/derivation.ml[145,4215+43])
                                                      Texp_field
                                                      expression (src/derivation.ml[145,4215+29]..src/derivation.ml[145,4215+35])
                                                        Texp_ident "forest/794"
                                                      "comment"
                                                ]
                                            None
                                          expression (src/derivation.ml[147,4266+2]..src/derivation.ml[148,4297+43])
                                            Texp_sequence
                                            expression (src/derivation.ml[147,4266+2]..src/derivation.ml[147,4266+29])
                                              Texp_apply
                                              expression (src/derivation.ml[147,4266+2]..src/derivation.ml[147,4266+17])
                                                Texp_ident "Stdlib!.Buffer.add_char"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/derivation.ml[147,4266+18]..src/derivation.ml[147,4266+24])
                                                    Texp_ident "buffer/560"
                                                <arg>
                                                  Nolabel
                                                  expression (src/derivation.ml[147,4266+25]..src/derivation.ml[147,4266+29])
                                                    Texp_constant Const_char 0a
                                              ]
                                            expression (src/derivation.ml[148,4297+2]..src/derivation.ml[148,4297+43])
                                              Texp_apply
                                              expression (src/derivation.ml[148,4297+2]..src/derivation.ml[148,4297+23])
                                                Texp_ident "print_focus_remainder/792"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/derivation.ml[148,4297+24]..src/derivation.ml[148,4297+30])
                                                    Texp_ident "offset/795"
                                                <arg>
                                                  Nolabel
                                                  expression (src/derivation.ml[148,4297+31]..src/derivation.ml[148,4297+43])
                                                    Texp_field
                                                    expression (src/derivation.ml[148,4297+31]..src/derivation.ml[148,4297+37])
                                                      Texp_ident "forest/794"
                                                    "focus"
                                              ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/derivation.ml[150,4342+0]..src/derivation.ml[155,4495+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[150,4342+4]..src/derivation.ml[150,4342+19])
          Tpat_var "print_tree_root/796"
        expression (src/derivation.ml[150,4342+22]..src/derivation.ml[155,4495+8])
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/derivation.ml[151,4373+4]..src/derivation.ml[151,4373+10])
                Tpat_construct "TEmpty"
                []
                None
              expression (src/derivation.ml[152,4387+6]..src/derivation.ml[152,4387+35])
                Texp_apply
                expression (src/derivation.ml[152,4387+6]..src/derivation.ml[152,4387+23])
                  Texp_ident "Stdlib!.Buffer.add_string"
                [
                  <arg>
                    Nolabel
                    expression (src/derivation.ml[152,4387+24]..src/derivation.ml[152,4387+30])
                      Texp_ident "buffer/560"
                  <arg>
                    Nolabel
                    expression (src/derivation.ml[152,4387+31]..src/derivation.ml[152,4387+35])
                      Texp_constant Const_string(". ",(src/derivation.ml[152,4387+32]..src/derivation.ml[152,4387+34]),None)
                ]
            <case>
              pattern (src/derivation.ml[153,4423+4]..src/derivation.ml[153,4423+23])
                Tpat_construct "TRooted"
                [
                  pattern (src/derivation.ml[153,4423+13]..src/derivation.ml[153,4423+19])
                    Tpat_var "symbol/798"
                  pattern (src/derivation.ml[153,4423+21]..src/derivation.ml[153,4423+22])
                    Tpat_any
                ]
                None
              expression (src/derivation.ml[154,4450+6]..src/derivation.ml[155,4495+8])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/derivation.ml[154,4450+11]..src/derivation.ml[154,4450+12])
                      extra
                        Tpat_extra_constraint
                        core_type (src/derivation.ml[154,4450+15]..src/derivation.ml[154,4450+18])
                          Ttyp_constr "int/1!"
                          []
                      Tpat_any
                    expression (src/derivation.ml[154,4450+22]..src/derivation.ml[154,4450+41])
                      Texp_apply
                      expression (src/derivation.ml[154,4450+22]..src/derivation.ml[154,4450+34])
                        Texp_ident "print_symbol/645"
                      [
                        <arg>
                          Nolabel
                          expression (src/derivation.ml[154,4450+35]..src/derivation.ml[154,4450+41])
                            Texp_ident "symbol/798"
                      ]
                ]
                expression (src/derivation.ml[155,4495+6]..src/derivation.ml[155,4495+8])
                  Texp_construct "()"
                  []
          ]
    ]
  structure_item (src/derivation.ml[157,4505+0]..src/derivation.ml[164,4701+32])
    Tstr_value Rec
    [
      <def>
        pattern (src/derivation.ml[157,4505+8]..src/derivation.ml[157,4505+20])
          Tpat_var "print_forest/800"
        expression (src/derivation.ml[157,4505+21]..src/derivation.ml[158,4542+64]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/derivation.ml[157,4505+21]..src/derivation.ml[157,4505+27])
                Tpat_var "offset/802"
              expression (src/derivation.ml[157,4505+28]..src/derivation.ml[158,4542+64]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/derivation.ml[157,4505+28]..src/derivation.ml[157,4505+34])
                      Tpat_var "forest/803"
                    expression (src/derivation.ml[158,4542+2]..src/derivation.ml[158,4542+64])
                      Texp_apply
                      expression (src/derivation.ml[158,4542+2]..src/derivation.ml[158,4542+13])
                        Texp_ident "print_level/789"
                      [
                        <arg>
                          Nolabel
                          expression (src/derivation.ml[158,4542+14]..src/derivation.ml[158,4542+29])
                            Texp_ident "print_tree_root/796"
                        <arg>
                          Nolabel
                          expression (src/derivation.ml[158,4542+30]..src/derivation.ml[158,4542+50])
                            Texp_ident "print_tree_remainder/801"
                        <arg>
                          Nolabel
                          expression (src/derivation.ml[158,4542+51]..src/derivation.ml[158,4542+57])
                            Texp_ident "offset/802"
                        <arg>
                          Nolabel
                          expression (src/derivation.ml[158,4542+58]..src/derivation.ml[158,4542+64])
                            Texp_ident "forest/803"
                      ]
                ]
          ]
      <def>
        pattern (src/derivation.ml[160,4608+4]..src/derivation.ml[160,4608+24])
          Tpat_var "print_tree_remainder/801"
        expression (src/derivation.ml[160,4608+25]..src/derivation.ml[164,4701+32]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/derivation.ml[160,4608+25]..src/derivation.ml[160,4608+31])
                Tpat_var "offset/804"
              expression (src/derivation.ml[160,4608+34]..src/derivation.ml[164,4701+32])
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/derivation.ml[161,4651+4]..src/derivation.ml[161,4651+10])
                      Tpat_construct "TEmpty"
                      []
                      None
                    expression (src/derivation.ml[162,4665+6]..src/derivation.ml[162,4665+8])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/derivation.ml[163,4674+4]..src/derivation.ml[163,4674+23])
                      Tpat_construct "TRooted"
                      [
                        pattern (src/derivation.ml[163,4674+13]..src/derivation.ml[163,4674+14])
                          Tpat_any
                        pattern (src/derivation.ml[163,4674+16]..src/derivation.ml[163,4674+22])
                          Tpat_var "forest/805"
                      ]
                      None
                    expression (src/derivation.ml[164,4701+6]..src/derivation.ml[164,4701+32])
                      Texp_apply
                      expression (src/derivation.ml[164,4701+6]..src/derivation.ml[164,4701+18])
                        Texp_ident "print_forest/800"
                      [
                        <arg>
                          Nolabel
                          expression (src/derivation.ml[164,4701+19]..src/derivation.ml[164,4701+25])
                            Texp_ident "offset/804"
                        <arg>
                          Nolabel
                          expression (src/derivation.ml[164,4701+26]..src/derivation.ml[164,4701+32])
                            Texp_ident "forest/805"
                      ]
                ]
          ]
    ]
  structure_item (src/derivation.ml[166,4735+0]..src/derivation.ml[169,4839+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[166,4735+4]..src/derivation.ml[166,4735+20])
          Tpat_var "print_ctree_root/807"
        expression (src/derivation.ml[166,4735+23]..src/derivation.ml[169,4839+8])
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/derivation.ml[167,4767+4]..src/derivation.ml[167,4767+23])
                Tpat_construct "CRooted"
                [
                  pattern (src/derivation.ml[167,4767+13]..src/derivation.ml[167,4767+19])
                    Tpat_var "symbol/809"
                  pattern (src/derivation.ml[167,4767+21]..src/derivation.ml[167,4767+22])
                    Tpat_any
                ]
                None
              expression (src/derivation.ml[168,4794+6]..src/derivation.ml[169,4839+8])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/derivation.ml[168,4794+11]..src/derivation.ml[168,4794+12])
                      extra
                        Tpat_extra_constraint
                        core_type (src/derivation.ml[168,4794+15]..src/derivation.ml[168,4794+18])
                          Ttyp_constr "int/1!"
                          []
                      Tpat_any
                    expression (src/derivation.ml[168,4794+22]..src/derivation.ml[168,4794+41])
                      Texp_apply
                      expression (src/derivation.ml[168,4794+22]..src/derivation.ml[168,4794+34])
                        Texp_ident "print_symbol/645"
                      [
                        <arg>
                          Nolabel
                          expression (src/derivation.ml[168,4794+35]..src/derivation.ml[168,4794+41])
                            Texp_ident "symbol/809"
                      ]
                ]
                expression (src/derivation.ml[169,4839+6]..src/derivation.ml[169,4839+8])
                  Texp_construct "()"
                  []
          ]
    ]
  structure_item (src/derivation.ml[171,4849+0]..src/derivation.ml[181,5151+34])
    Tstr_value Rec
    [
      <def>
        pattern (src/derivation.ml[171,4849+8]..src/derivation.ml[171,4849+21])
          Tpat_var "print_cforest/811"
        expression (src/derivation.ml[171,4849+22]..src/derivation.ml[177,5007+70]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/derivation.ml[171,4849+22]..src/derivation.ml[171,4849+28])
                Tpat_var "offset/813"
              expression (src/derivation.ml[171,4849+29]..src/derivation.ml[177,5007+70]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/derivation.ml[171,4849+29]..src/derivation.ml[171,4849+36])
                      Tpat_var "cforest/814"
                    expression (src/derivation.ml[172,4888+2]..src/derivation.ml[177,5007+70])
                      Texp_match
                      expression (src/derivation.ml[172,4888+8]..src/derivation.ml[172,4888+15])
                        Texp_ident "cforest/814"
                      [
                        <case>
                          pattern (src/derivation.ml[173,4909+4]..src/derivation.ml[173,4909+9])
                            Tpat_value
                            pattern (src/derivation.ml[173,4909+4]..src/derivation.ml[173,4909+9])
                              Tpat_construct "CHole"
                              []
                              None
                          expression (src/derivation.ml[174,4922+6]..src/derivation.ml[175,4948+38])
                            Texp_sequence
                            expression (src/derivation.ml[174,4922+6]..src/derivation.ml[174,4922+24])
                              Texp_apply
                              expression (src/derivation.ml[174,4922+6]..src/derivation.ml[174,4922+17])
                                Texp_ident "print_blank/643"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/derivation.ml[174,4922+18]..src/derivation.ml[174,4922+24])
                                    Texp_ident "offset/813"
                              ]
                            expression (src/derivation.ml[175,4948+6]..src/derivation.ml[175,4948+38])
                              Texp_apply
                              expression (src/derivation.ml[175,4948+6]..src/derivation.ml[175,4948+23])
                                Texp_ident "Stdlib!.Buffer.add_string"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/derivation.ml[175,4948+24]..src/derivation.ml[175,4948+30])
                                    Texp_ident "buffer/560"
                                <arg>
                                  Nolabel
                                  expression (src/derivation.ml[175,4948+31]..src/derivation.ml[175,4948+38])
                                    Texp_constant Const_string("(?)\n",(src/derivation.ml[175,4948+32]..src/derivation.ml[175,4948+37]),None)
                              ]
                        <case>
                          pattern (src/derivation.ml[176,4987+4]..src/derivation.ml[176,4987+16])
                            Tpat_value
                            pattern (src/derivation.ml[176,4987+4]..src/derivation.ml[176,4987+16])
                              Tpat_construct "CCons"
                              [
                                pattern (src/derivation.ml[176,4987+10]..src/derivation.ml[176,4987+16])
                                  Tpat_var "forest/815"
                              ]
                              None
                          expression (src/derivation.ml[177,5007+6]..src/derivation.ml[177,5007+70])
                            Texp_apply
                            expression (src/derivation.ml[177,5007+6]..src/derivation.ml[177,5007+17])
                              Texp_ident "print_level/789"
                            [
                              <arg>
                                Nolabel
                                expression (src/derivation.ml[177,5007+18]..src/derivation.ml[177,5007+34])
                                  Texp_ident "print_ctree_root/807"
                              <arg>
                                Nolabel
                                expression (src/derivation.ml[177,5007+35]..src/derivation.ml[177,5007+56])
                                  Texp_ident "print_ctree_remainder/812"
                              <arg>
                                Nolabel
                                expression (src/derivation.ml[177,5007+57]..src/derivation.ml[177,5007+63])
                                  Texp_ident "offset/813"
                              <arg>
                                Nolabel
                                expression (src/derivation.ml[177,5007+64]..src/derivation.ml[177,5007+70])
                                  Texp_ident "forest/815"
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/derivation.ml[179,5079+4]..src/derivation.ml[179,5079+25])
          Tpat_var "print_ctree_remainder/812"
        expression (src/derivation.ml[179,5079+26]..src/derivation.ml[181,5151+34]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/derivation.ml[179,5079+26]..src/derivation.ml[179,5079+32])
                Tpat_var "offset/816"
              expression (src/derivation.ml[179,5079+35]..src/derivation.ml[181,5151+34])
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/derivation.ml[180,5123+4]..src/derivation.ml[180,5123+24])
                      Tpat_construct "CRooted"
                      [
                        pattern (src/derivation.ml[180,5123+13]..src/derivation.ml[180,5123+14])
                          Tpat_any
                        pattern (src/derivation.ml[180,5123+16]..src/derivation.ml[180,5123+23])
                          Tpat_var "cforest/817"
                      ]
                      None
                    expression (src/derivation.ml[181,5151+6]..src/derivation.ml[181,5151+34])
                      Texp_apply
                      expression (src/derivation.ml[181,5151+6]..src/derivation.ml[181,5151+19])
                        Texp_ident "print_cforest/811"
                      [
                        <arg>
                          Nolabel
                          expression (src/derivation.ml[181,5151+20]..src/derivation.ml[181,5151+26])
                            Texp_ident "offset/816"
                        <arg>
                          Nolabel
                          expression (src/derivation.ml[181,5151+27]..src/derivation.ml[181,5151+34])
                            Texp_ident "cforest/817"
                      ]
                ]
          ]
    ]
  structure_item (src/derivation.ml[183,5187+0]..src/derivation.ml[186,5250+37])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[183,5187+4]..src/derivation.ml[183,5187+8])
          Tpat_var "wrap/819"
        expression (src/derivation.ml[183,5187+9]..src/derivation.ml[186,5250+37]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/derivation.ml[183,5187+9]..src/derivation.ml[183,5187+14])
                Tpat_var "print/821"
              expression (src/derivation.ml[183,5187+15]..src/derivation.ml[186,5250+37]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/derivation.ml[183,5187+15]..src/derivation.ml[183,5187+22])
                      Tpat_var "channel/822"
                    expression (src/derivation.ml[183,5187+23]..src/derivation.ml[186,5250+37]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/derivation.ml[183,5187+23]..src/derivation.ml[183,5187+24])
                            Tpat_var "x/823"
                          expression (src/derivation.ml[184,5214+2]..src/derivation.ml[186,5250+37])
                            Texp_sequence
                            expression (src/derivation.ml[184,5214+2]..src/derivation.ml[184,5214+21])
                              Texp_apply
                              expression (src/derivation.ml[184,5214+2]..src/derivation.ml[184,5214+14])
                                Texp_ident "Stdlib!.Buffer.clear"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/derivation.ml[184,5214+15]..src/derivation.ml[184,5214+21])
                                    Texp_ident "buffer/560"
                              ]
                            expression (src/derivation.ml[185,5237+2]..src/derivation.ml[186,5250+37])
                              Texp_sequence
                              expression (src/derivation.ml[185,5237+2]..src/derivation.ml[185,5237+11])
                                Texp_apply
                                expression (src/derivation.ml[185,5237+2]..src/derivation.ml[185,5237+7])
                                  Texp_ident "print/821"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/derivation.ml[185,5237+8]..src/derivation.ml[185,5237+9])
                                      Texp_constant Const_int 0
                                  <arg>
                                    Nolabel
                                    expression (src/derivation.ml[185,5237+10]..src/derivation.ml[185,5237+11])
                                      Texp_ident "x/823"
                                ]
                              expression (src/derivation.ml[186,5250+2]..src/derivation.ml[186,5250+37])
                                Texp_apply
                                expression (src/derivation.ml[186,5250+2]..src/derivation.ml[186,5250+22])
                                  Texp_ident "Stdlib!.Buffer.output_buffer"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/derivation.ml[186,5250+23]..src/derivation.ml[186,5250+30])
                                      Texp_ident "channel/822"
                                  <arg>
                                    Nolabel
                                    expression (src/derivation.ml[186,5250+31]..src/derivation.ml[186,5250+37])
                                      Texp_ident "buffer/560"
                                ]
                      ]
                ]
          ]
    ]
  structure_item (src/derivation.ml[188,5289+0]..src/derivation.ml[189,5301+19])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[188,5289+4]..src/derivation.ml[188,5289+9])
          Tpat_var "print/824"
        expression (src/derivation.ml[189,5301+2]..src/derivation.ml[189,5301+19])
          Texp_apply
          expression (src/derivation.ml[189,5301+2]..src/derivation.ml[189,5301+6])
            Texp_ident "wrap/819"
          [
            <arg>
              Nolabel
              expression (src/derivation.ml[189,5301+7]..src/derivation.ml[189,5301+19])
                Texp_ident "print_forest/800"
          ]
    ]
  structure_item (src/derivation.ml[191,5322+0]..src/derivation.ml[192,5335+20])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[191,5322+4]..src/derivation.ml[191,5322+10])
          Tpat_var "printc/825"
        expression (src/derivation.ml[192,5335+2]..src/derivation.ml[192,5335+20])
          Texp_apply
          expression (src/derivation.ml[192,5335+2]..src/derivation.ml[192,5335+6])
            Texp_ident "wrap/819"
          [
            <arg>
              Nolabel
              expression (src/derivation.ml[192,5335+7]..src/derivation.ml[192,5335+20])
                Texp_ident "print_cforest/811"
          ]
    ]
  structure_item (src/derivation.ml[200,5676+0]..src/derivation.ml[218,6183+16])
    Tstr_value Rec
    [
      <def>
        pattern (src/derivation.ml[200,5676+8]..src/derivation.ml[200,5676+18])
          Tpat_var "punch_tree/826"
        expression (src/derivation.ml[200,5676+19]..src/derivation.ml[206,5855+47]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/derivation.ml[200,5676+19]..src/derivation.ml[200,5676+23])
                Tpat_var "tree/828"
              expression (src/derivation.ml[201,5728+2]..src/derivation.ml[206,5855+47])
                extra
                  Texp_constraint
                  core_type (src/derivation.ml[200,5676+26]..src/derivation.ml[200,5676+49])
                    Ttyp_constr "option/10!"
                    [
                      core_type (src/derivation.ml[200,5676+27]..src/derivation.ml[200,5676+41])
                        Ttyp_tuple
                        [
                          core_type (src/derivation.ml[200,5676+27]..src/derivation.ml[200,5676+32])
                            Ttyp_constr "ctree/462"
                            []
                          core_type (src/derivation.ml[200,5676+35]..src/derivation.ml[200,5676+41])
                            Ttyp_constr "forest/459"
                            []
                        ]
                    ]
                Texp_match
                expression (src/derivation.ml[201,5728+8]..src/derivation.ml[201,5728+12])
                  Texp_ident "tree/828"
                [
                  <case>
                    pattern (src/derivation.ml[202,5746+4]..src/derivation.ml[202,5746+10])
                      Tpat_value
                      pattern (src/derivation.ml[202,5746+4]..src/derivation.ml[202,5746+10])
                        Tpat_construct "TEmpty"
                        []
                        None
                    expression (src/derivation.ml[203,5760+6]..src/derivation.ml[203,5760+10])
                      Texp_construct "None"
                      []
                  <case>
                    pattern (src/derivation.ml[204,5771+4]..src/derivation.ml[204,5771+28])
                      Tpat_value
                      pattern (src/derivation.ml[204,5771+4]..src/derivation.ml[204,5771+28])
                        Tpat_construct "TRooted"
                        [
                          pattern (src/derivation.ml[204,5771+13]..src/derivation.ml[204,5771+19])
                            Tpat_var "symbol/829"
                          pattern (src/derivation.ml[204,5771+21]..src/derivation.ml[204,5771+27])
                            Tpat_var "forest/830"
                        ]
                        None
                    expression (src/derivation.ml[205,5803+6]..src/derivation.ml[206,5855+47])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/derivation.ml[205,5803+10]..src/derivation.ml[205,5803+26])
                            Tpat_tuple
                            [
                              pattern (src/derivation.ml[205,5803+10]..src/derivation.ml[205,5803+17])
                                Tpat_var "forest1/831"
                              pattern (src/derivation.ml[205,5803+19]..src/derivation.ml[205,5803+26])
                                Tpat_var "forest2/832"
                            ]
                          expression (src/derivation.ml[205,5803+29]..src/derivation.ml[205,5803+48])
                            Texp_apply
                            expression (src/derivation.ml[205,5803+29]..src/derivation.ml[205,5803+41])
                              Texp_ident "punch_forest/827"
                            [
                              <arg>
                                Nolabel
                                expression (src/derivation.ml[205,5803+42]..src/derivation.ml[205,5803+48])
                                  Texp_ident "forest/830"
                            ]
                      ]
                      expression (src/derivation.ml[206,5855+6]..src/derivation.ml[206,5855+47])
                        Texp_construct "Some"
                        [
                          expression (src/derivation.ml[206,5855+11]..src/derivation.ml[206,5855+47])
                            Texp_tuple
                            [
                              expression (src/derivation.ml[206,5855+12]..src/derivation.ml[206,5855+37])
                                Texp_construct "CRooted"
                                [
                                  expression (src/derivation.ml[206,5855+21]..src/derivation.ml[206,5855+27])
                                    Texp_ident "symbol/829"
                                  expression (src/derivation.ml[206,5855+29]..src/derivation.ml[206,5855+36])
                                    Texp_ident "forest1/831"
                                ]
                              expression (src/derivation.ml[206,5855+39]..src/derivation.ml[206,5855+46])
                                Texp_ident "forest2/832"
                            ]
                        ]
                ]
          ]
      <def>
        pattern (src/derivation.ml[208,5904+4]..src/derivation.ml[208,5904+16])
          Tpat_var "punch_forest/827"
        expression (src/derivation.ml[208,5904+17]..src/derivation.ml[218,6183+16]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/derivation.ml[208,5904+17]..src/derivation.ml[208,5904+23])
                Tpat_var "forest/833"
              expression (src/derivation.ml[209,5949+2]..src/derivation.ml[218,6183+16])
                extra
                  Texp_constraint
                  core_type (src/derivation.ml[208,5904+26]..src/derivation.ml[208,5904+42])
                    Ttyp_tuple
                    [
                      core_type (src/derivation.ml[208,5904+26]..src/derivation.ml[208,5904+33])
                        Ttyp_constr "cforest/463"
                        []
                      core_type (src/derivation.ml[208,5904+36]..src/derivation.ml[208,5904+42])
                        Ttyp_constr "forest/459"
                        []
                    ]
                Texp_match
                expression (src/derivation.ml[209,5949+8]..src/derivation.ml[209,5949+31])
                  Texp_apply
                  expression (src/derivation.ml[209,5949+8]..src/derivation.ml[209,5949+18])
                    Texp_ident "punch_tree/826"
                  [
                    <arg>
                      Nolabel
                      expression (src/derivation.ml[209,5949+19]..src/derivation.ml[209,5949+31])
                        Texp_field
                        expression (src/derivation.ml[209,5949+19]..src/derivation.ml[209,5949+25])
                          Texp_ident "forest/833"
                        "focus"
                  ]
                [
                  <case>
                    pattern (src/derivation.ml[210,5986+4]..src/derivation.ml[210,5986+8])
                      Tpat_value
                      pattern (src/derivation.ml[210,5986+4]..src/derivation.ml[210,5986+8])
                        Tpat_construct "None"
                        []
                        None
                    expression (src/derivation.ml[211,5998+6]..src/derivation.ml[211,5998+19])
                      Texp_tuple
                      [
                        expression (src/derivation.ml[211,5998+6]..src/derivation.ml[211,5998+11])
                          Texp_construct "CHole"
                          []
                        expression (src/derivation.ml[211,5998+13]..src/derivation.ml[211,5998+19])
                          Texp_ident "forest/833"
                      ]
                  <case>
                    pattern (src/derivation.ml[212,6018+4]..src/derivation.ml[212,6018+26])
                      Tpat_value
                      pattern (src/derivation.ml[212,6018+4]..src/derivation.ml[212,6018+26])
                        Tpat_construct "Some"
                        [
                          pattern (src/derivation.ml[212,6018+9]..src/derivation.ml[212,6018+26])
                            Tpat_tuple
                            [
                              pattern (src/derivation.ml[212,6018+10]..src/derivation.ml[212,6018+16])
                                Tpat_var "ctree1/834"
                              pattern (src/derivation.ml[212,6018+18]..src/derivation.ml[212,6018+25])
                                Tpat_var "forest2/835"
                            ]
                        ]
                        None
                    expression (src/derivation.ml[213,6048+6]..src/derivation.ml[218,6183+16])
                      Texp_tuple
                      [
                        expression (src/derivation.ml[213,6048+6]..src/derivation.ml[218,6183+7])
                          Texp_construct "CCons"
                          [
                            expression (src/derivation.ml[213,6048+12]..src/derivation.ml[218,6183+7])
                              Texp_record
                                fields =
                                  [
                                    "prefix"
                                      expression (src/derivation.ml[214,6062+17]..src/derivation.ml[214,6062+30])
                                        Texp_field
                                        expression (src/derivation.ml[214,6062+17]..src/derivation.ml[214,6062+23])
                                          Texp_ident "forest/833"
                                        "prefix"
                                    "focus"
                                      expression (src/derivation.ml[215,6094+16]..src/derivation.ml[215,6094+22])
                                        Texp_ident "ctree1/834"
                                    "suffix"
                                      expression (src/derivation.ml[216,6118+17]..src/derivation.ml[216,6118+30])
                                        Texp_field
                                        expression (src/derivation.ml[216,6118+17]..src/derivation.ml[216,6118+23])
                                          Texp_ident "forest/833"
                                        "suffix"
                                    "comment"
                                      expression (src/derivation.ml[217,6150+18]..src/derivation.ml[217,6150+32])
                                        Texp_field
                                        expression (src/derivation.ml[217,6150+18]..src/derivation.ml[217,6150+24])
                                          Texp_ident "forest/833"
                                        "comment"
                                  ]
                                representation =
                                  Record_regular
                                extended_expression =
                                  None
                          ]
                        expression (src/derivation.ml[218,6183+9]..src/derivation.ml[218,6183+16])
                          Texp_ident "forest2/835"
                      ]
                ]
          ]
    ]
  structure_item (src/derivation.ml[223,6306+0]..src/derivation.ml[238,6724+7])
    Tstr_value Rec
    [
      <def>
        pattern (src/derivation.ml[223,6306+8]..src/derivation.ml[223,6306+17])
          Tpat_var "fill_tree/836"
        expression (src/derivation.ml[223,6306+18]..src/derivation.ml[226,6403+53]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/derivation.ml[223,6306+18]..src/derivation.ml[223,6306+24])
                Tpat_var "ctree1/838"
              expression (src/derivation.ml[223,6306+25]..src/derivation.ml[226,6403+53]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/derivation.ml[223,6306+25]..src/derivation.ml[223,6306+32])
                      Tpat_var "forest2/839"
                    expression (src/derivation.ml[224,6348+2]..src/derivation.ml[226,6403+53])
                      extra
                        Texp_constraint
                        core_type (src/derivation.ml[223,6306+35]..src/derivation.ml[223,6306+39])
                          Ttyp_constr "tree/458"
                          []
                      Texp_match
                      expression (src/derivation.ml[224,6348+8]..src/derivation.ml[224,6348+14])
                        Texp_ident "ctree1/838"
                      [
                        <case>
                          pattern (src/derivation.ml[225,6368+4]..src/derivation.ml[225,6368+31])
                            Tpat_value
                            pattern (src/derivation.ml[225,6368+4]..src/derivation.ml[225,6368+31])
                              Tpat_construct "CRooted"
                              [
                                pattern (src/derivation.ml[225,6368+13]..src/derivation.ml[225,6368+20])
                                  Tpat_var "symbol1/840"
                                pattern (src/derivation.ml[225,6368+22]..src/derivation.ml[225,6368+30])
                                  Tpat_var "cforest1/841"
                              ]
                              None
                          expression (src/derivation.ml[226,6403+6]..src/derivation.ml[226,6403+53])
                            Texp_construct "TRooted"
                            [
                              expression (src/derivation.ml[226,6403+15]..src/derivation.ml[226,6403+22])
                                Texp_ident "symbol1/840"
                              expression (src/derivation.ml[226,6403+24]..src/derivation.ml[226,6403+52])
                                Texp_apply
                                expression (src/derivation.ml[226,6403+24]..src/derivation.ml[226,6403+35])
                                  Texp_ident "fill_forest/837"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/derivation.ml[226,6403+36]..src/derivation.ml[226,6403+44])
                                      Texp_ident "cforest1/841"
                                  <arg>
                                    Nolabel
                                    expression (src/derivation.ml[226,6403+45]..src/derivation.ml[226,6403+52])
                                      Texp_ident "forest2/839"
                                ]
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/derivation.ml[228,6458+4]..src/derivation.ml[228,6458+15])
          Tpat_var "fill_forest/837"
        expression (src/derivation.ml[228,6458+16]..src/derivation.ml[238,6724+7]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/derivation.ml[228,6458+16]..src/derivation.ml[228,6458+24])
                Tpat_var "cforest1/842"
              expression (src/derivation.ml[228,6458+25]..src/derivation.ml[238,6724+7]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/derivation.ml[228,6458+25]..src/derivation.ml[228,6458+32])
                      Tpat_var "forest2/843"
                    expression (src/derivation.ml[229,6502+2]..src/derivation.ml[238,6724+7])
                      extra
                        Texp_constraint
                        core_type (src/derivation.ml[228,6458+35]..src/derivation.ml[228,6458+41])
                          Ttyp_constr "forest/459"
                          []
                      Texp_match
                      expression (src/derivation.ml[229,6502+8]..src/derivation.ml[229,6502+16])
                        Texp_ident "cforest1/842"
                      [
                        <case>
                          pattern (src/derivation.ml[230,6524+4]..src/derivation.ml[230,6524+9])
                            Tpat_value
                            pattern (src/derivation.ml[230,6524+4]..src/derivation.ml[230,6524+9])
                              Tpat_construct "CHole"
                              []
                              None
                          expression (src/derivation.ml[231,6537+6]..src/derivation.ml[231,6537+13])
                            Texp_ident "forest2/843"
                        <case>
                          pattern (src/derivation.ml[232,6551+4]..src/derivation.ml[232,6551+16])
                            Tpat_value
                            pattern (src/derivation.ml[232,6551+4]..src/derivation.ml[232,6551+16])
                              Tpat_construct "CCons"
                              [
                                pattern (src/derivation.ml[232,6551+10]..src/derivation.ml[232,6551+16])
                                  Tpat_var "level1/844"
                              ]
                              None
                          expression (src/derivation.ml[233,6571+6]..src/derivation.ml[238,6724+7])
                            Texp_record
                              fields =
                                [
                                  "prefix"
                                    expression (src/derivation.ml[234,6579+17]..src/derivation.ml[234,6579+30])
                                      Texp_field
                                      expression (src/derivation.ml[234,6579+17]..src/derivation.ml[234,6579+23])
                                        Texp_ident "level1/844"
                                      "prefix"
                                  "focus"
                                    expression (src/derivation.ml[235,6611+16]..src/derivation.ml[235,6611+46])
                                      Texp_apply
                                      expression (src/derivation.ml[235,6611+16]..src/derivation.ml[235,6611+25])
                                        Texp_ident "fill_tree/836"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/derivation.ml[235,6611+26]..src/derivation.ml[235,6611+38])
                                            Texp_field
                                            expression (src/derivation.ml[235,6611+26]..src/derivation.ml[235,6611+32])
                                              Texp_ident "level1/844"
                                            "focus"
                                        <arg>
                                          Nolabel
                                          expression (src/derivation.ml[235,6611+39]..src/derivation.ml[235,6611+46])
                                            Texp_ident "forest2/843"
                                      ]
                                  "suffix"
                                    expression (src/derivation.ml[236,6659+17]..src/derivation.ml[236,6659+30])
                                      Texp_field
                                      expression (src/derivation.ml[236,6659+17]..src/derivation.ml[236,6659+23])
                                        Texp_ident "level1/844"
                                      "suffix"
                                  "comment"
                                    expression (src/derivation.ml[237,6691+18]..src/derivation.ml[237,6691+32])
                                      Texp_field
                                      expression (src/derivation.ml[237,6691+18]..src/derivation.ml[237,6691+24])
                                        Texp_ident "level1/844"
                                      "comment"
                                ]
                              representation =
                                Record_regular
                              extended_expression =
                                None
                      ]
                ]
          ]
    ]
  structure_item (src/derivation.ml[244,6963+0]..src/derivation.ml[279,8130+32])
    Tstr_value Rec
    [
      <def>
        pattern (src/derivation.ml[244,6963+8]..src/derivation.ml[244,6963+19])
          Tpat_var "common_tree/845"
        expression (src/derivation.ml[244,6963+20]..src/derivation.ml[255,7368+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/derivation.ml[244,6963+20]..src/derivation.ml[244,6963+26])
                Tpat_var "ctree1/847"
              expression (src/derivation.ml[244,6963+27]..src/derivation.ml[255,7368+12]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/derivation.ml[244,6963+27]..src/derivation.ml[244,6963+32])
                      Tpat_var "tree2/848"
                    expression (src/derivation.ml[245,7034+2]..src/derivation.ml[255,7368+12])
                      extra
                        Texp_constraint
                        core_type (src/derivation.ml[244,6963+35]..src/derivation.ml[244,6963+68])
                          Ttyp_constr "option/10!"
                          [
                            core_type (src/derivation.ml[244,6963+36]..src/derivation.ml[244,6963+60])
                              Ttyp_tuple
                              [
                                core_type (src/derivation.ml[244,6963+36]..src/derivation.ml[244,6963+41])
                                  Ttyp_constr "ctree/462"
                                  []
                                core_type (src/derivation.ml[244,6963+44]..src/derivation.ml[244,6963+51])
                                  Ttyp_constr "cforest/463"
                                  []
                                core_type (src/derivation.ml[244,6963+54]..src/derivation.ml[244,6963+60])
                                  Ttyp_constr "forest/459"
                                  []
                              ]
                          ]
                      Texp_match
                      expression (src/derivation.ml[245,7034+8]..src/derivation.ml[245,7034+21])
                        Texp_tuple
                        [
                          expression (src/derivation.ml[245,7034+8]..src/derivation.ml[245,7034+14])
                            Texp_ident "ctree1/847"
                          expression (src/derivation.ml[245,7034+16]..src/derivation.ml[245,7034+21])
                            Texp_ident "tree2/848"
                        ]
                      [
                        <case>
                          pattern (src/derivation.ml[246,7061+4]..src/derivation.ml[246,7061+21])
                            Tpat_value
                            pattern (src/derivation.ml[246,7061+4]..src/derivation.ml[246,7061+21])
                              Tpat_tuple
                              [
                                pattern (src/derivation.ml[246,7061+4]..src/derivation.ml[246,7061+13])
                                  Tpat_construct "CRooted"
                                  [
                                    pattern (src/derivation.ml[246,7061+12]..src/derivation.ml[246,7061+13])
                                      Tpat_any
                                    pattern (src/derivation.ml[246,7061+12]..src/derivation.ml[246,7061+13])
                                      Tpat_any
                                  ]
                                  None
                                pattern (src/derivation.ml[246,7061+15]..src/derivation.ml[246,7061+21])
                                  Tpat_construct "TEmpty"
                                  []
                                  None
                              ]
                          expression (src/derivation.ml[247,7086+6]..src/derivation.ml[247,7086+10])
                            Texp_construct "None"
                            []
                        <case>
                          pattern (src/derivation.ml[248,7097+4]..src/derivation.ml[248,7097+59])
                            Tpat_value
                            pattern (src/derivation.ml[248,7097+4]..src/derivation.ml[248,7097+59])
                              Tpat_tuple
                              [
                                pattern (src/derivation.ml[248,7097+4]..src/derivation.ml[248,7097+31])
                                  Tpat_construct "CRooted"
                                  [
                                    pattern (src/derivation.ml[248,7097+13]..src/derivation.ml[248,7097+20])
                                      Tpat_var "symbol1/849"
                                    pattern (src/derivation.ml[248,7097+22]..src/derivation.ml[248,7097+30])
                                      Tpat_var "cforest1/850"
                                  ]
                                  None
                                pattern (src/derivation.ml[248,7097+33]..src/derivation.ml[248,7097+59])
                                  Tpat_construct "TRooted"
                                  [
                                    pattern (src/derivation.ml[248,7097+42]..src/derivation.ml[248,7097+49])
                                      Tpat_var "symbol2/851"
                                    pattern (src/derivation.ml[248,7097+51]..src/derivation.ml[248,7097+58])
                                      Tpat_var "forest2/852"
                                  ]
                                  None
                              ]
                          expression (src/derivation.ml[249,7160+6]..src/derivation.ml[255,7368+12])
                            Texp_ifthenelse
                            expression (src/derivation.ml[249,7160+9]..src/derivation.ml[249,7160+37])
                              Texp_apply
                              expression (src/derivation.ml[249,7160+9]..src/derivation.ml[249,7160+21])
                                Texp_ident "Dune__exe!.Grammar.Symbol.equal"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/derivation.ml[249,7160+22]..src/derivation.ml[249,7160+29])
                                    Texp_ident "symbol1/849"
                                <arg>
                                  Nolabel
                                  expression (src/derivation.ml[249,7160+30]..src/derivation.ml[249,7160+37])
                                    Texp_ident "symbol2/851"
                              ]
                            expression (src/derivation.ml[250,7203+8]..src/derivation.ml[253,7296+60])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/derivation.ml[250,7203+12]..src/derivation.ml[250,7203+38])
                                    Tpat_tuple
                                    [
                                      pattern (src/derivation.ml[250,7203+12]..src/derivation.ml[250,7203+19])
                                        Tpat_var "cforest/853"
                                      pattern (src/derivation.ml[250,7203+21]..src/derivation.ml[250,7203+29])
                                        Tpat_var "cforest1/854"
                                      pattern (src/derivation.ml[250,7203+31]..src/derivation.ml[250,7203+38])
                                        Tpat_var "forest2/855"
                                    ]
                                  expression (src/derivation.ml[251,7244+10]..src/derivation.ml[251,7244+40])
                                    Texp_apply
                                    expression (src/derivation.ml[251,7244+10]..src/derivation.ml[251,7244+23])
                                      Texp_ident "common_forest/846"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/derivation.ml[251,7244+24]..src/derivation.ml[251,7244+32])
                                          Texp_ident "cforest1/850"
                                      <arg>
                                        Nolabel
                                        expression (src/derivation.ml[251,7244+33]..src/derivation.ml[251,7244+40])
                                          Texp_ident "forest2/852"
                                    ]
                              ]
                              expression (src/derivation.ml[253,7296+8]..src/derivation.ml[253,7296+60])
                                Texp_construct "Some"
                                [
                                  expression (src/derivation.ml[253,7296+13]..src/derivation.ml[253,7296+60])
                                    Texp_tuple
                                    [
                                      expression (src/derivation.ml[253,7296+14]..src/derivation.ml[253,7296+40])
                                        Texp_construct "CRooted"
                                        [
                                          expression (src/derivation.ml[253,7296+23]..src/derivation.ml[253,7296+30])
                                            Texp_ident "symbol1/849"
                                          expression (src/derivation.ml[253,7296+32]..src/derivation.ml[253,7296+39])
                                            Texp_ident "cforest/853"
                                        ]
                                      expression (src/derivation.ml[253,7296+42]..src/derivation.ml[253,7296+50])
                                        Texp_ident "cforest1/854"
                                      expression (src/derivation.ml[253,7296+52]..src/derivation.ml[253,7296+59])
                                        Texp_ident "forest2/855"
                                    ]
                                ]
                            Some
                              expression (src/derivation.ml[255,7368+8]..src/derivation.ml[255,7368+12])
                                Texp_construct "None"
                                []
                      ]
                ]
          ]
      <def>
        pattern (src/derivation.ml[257,7382+4]..src/derivation.ml[257,7382+17])
          Tpat_var "common_forest/846"
        expression (src/derivation.ml[257,7382+18]..src/derivation.ml[279,8130+32]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/derivation.ml[257,7382+18]..src/derivation.ml[257,7382+26])
                Tpat_var "cforest1/856"
              expression (src/derivation.ml[257,7382+27]..src/derivation.ml[279,8130+32]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/derivation.ml[257,7382+27]..src/derivation.ml[257,7382+34])
                      Tpat_var "forest2/857"
                    expression (src/derivation.ml[258,7448+2]..src/derivation.ml[279,8130+32])
                      extra
                        Texp_constraint
                        core_type (src/derivation.ml[257,7382+37]..src/derivation.ml[257,7382+63])
                          Ttyp_tuple
                          [
                            core_type (src/derivation.ml[257,7382+37]..src/derivation.ml[257,7382+44])
                              Ttyp_constr "cforest/463"
                              []
                            core_type (src/derivation.ml[257,7382+47]..src/derivation.ml[257,7382+54])
                              Ttyp_constr "cforest/463"
                              []
                            core_type (src/derivation.ml[257,7382+57]..src/derivation.ml[257,7382+63])
                              Ttyp_constr "forest/459"
                              []
                          ]
                      Texp_match
                      expression (src/derivation.ml[258,7448+8]..src/derivation.ml[258,7448+16])
                        Texp_ident "cforest1/856"
                      [
                        <case>
                          pattern (src/derivation.ml[259,7470+4]..src/derivation.ml[259,7470+9])
                            Tpat_value
                            pattern (src/derivation.ml[259,7470+4]..src/derivation.ml[259,7470+9])
                              Tpat_construct "CHole"
                              []
                              None
                          expression (src/derivation.ml[260,7483+6]..src/derivation.ml[260,7483+30])
                            Texp_tuple
                            [
                              expression (src/derivation.ml[260,7483+6]..src/derivation.ml[260,7483+11])
                                Texp_construct "CHole"
                                []
                              expression (src/derivation.ml[260,7483+13]..src/derivation.ml[260,7483+21])
                                Texp_ident "cforest1/856"
                              expression (src/derivation.ml[260,7483+23]..src/derivation.ml[260,7483+30])
                                Texp_ident "forest2/857"
                            ]
                        <case>
                          pattern (src/derivation.ml[261,7514+4]..src/derivation.ml[261,7514+17])
                            Tpat_value
                            pattern (src/derivation.ml[261,7514+4]..src/derivation.ml[261,7514+17])
                              Tpat_construct "CCons"
                              [
                                pattern (src/derivation.ml[261,7514+10]..src/derivation.ml[261,7514+17])
                                  Tpat_var "forest1/858"
                              ]
                              None
                          expression (src/derivation.ml[262,7535+6]..src/derivation.ml[279,8130+32])
                            Texp_ifthenelse
                            expression (src/derivation.ml[262,7535+9]..src/derivation.ml[264,7641+42])
                              Texp_apply
                              expression (src/derivation.ml[263,7588+6]..src/derivation.ml[263,7588+8])
                                Texp_ident "Stdlib!.&&"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/derivation.ml[262,7535+9]..src/derivation.ml[262,7535+52])
                                    Texp_apply
                                    expression (src/derivation.ml[262,7535+9]..src/derivation.ml[262,7535+22])
                                      Texp_ident "Dune__exe!.Grammar.Symbol.lequal"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/derivation.ml[262,7535+23]..src/derivation.ml[262,7535+37])
                                          Texp_field
                                          expression (src/derivation.ml[262,7535+23]..src/derivation.ml[262,7535+30])
                                            Texp_ident "forest1/858"
                                          "prefix"
                                      <arg>
                                        Nolabel
                                        expression (src/derivation.ml[262,7535+38]..src/derivation.ml[262,7535+52])
                                          Texp_field
                                          expression (src/derivation.ml[262,7535+38]..src/derivation.ml[262,7535+45])
                                            Texp_ident "forest2/857"
                                          "prefix"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/derivation.ml[263,7588+9]..src/derivation.ml[264,7641+42])
                                    Texp_apply
                                    expression (src/derivation.ml[264,7641+6]..src/derivation.ml[264,7641+8])
                                      Texp_ident "Stdlib!.&&"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/derivation.ml[263,7588+9]..src/derivation.ml[263,7588+52])
                                          Texp_apply
                                          expression (src/derivation.ml[263,7588+9]..src/derivation.ml[263,7588+22])
                                            Texp_ident "Dune__exe!.Grammar.Symbol.lequal"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/derivation.ml[263,7588+23]..src/derivation.ml[263,7588+37])
                                                Texp_field
                                                expression (src/derivation.ml[263,7588+23]..src/derivation.ml[263,7588+30])
                                                  Texp_ident "forest1/858"
                                                "suffix"
                                            <arg>
                                              Nolabel
                                              expression (src/derivation.ml[263,7588+38]..src/derivation.ml[263,7588+52])
                                                Texp_field
                                                expression (src/derivation.ml[263,7588+38]..src/derivation.ml[263,7588+45])
                                                  Texp_ident "forest2/857"
                                                "suffix"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/derivation.ml[264,7641+9]..src/derivation.ml[264,7641+42])
                                          Texp_apply
                                          expression (src/derivation.ml[264,7641+25]..src/derivation.ml[264,7641+26])
                                            Texp_ident "Stdlib!.="
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/derivation.ml[264,7641+9]..src/derivation.ml[264,7641+24])
                                                Texp_field
                                                expression (src/derivation.ml[264,7641+9]..src/derivation.ml[264,7641+16])
                                                  Texp_ident "forest1/858"
                                                "comment"
                                            <arg>
                                              Nolabel
                                              expression (src/derivation.ml[264,7641+27]..src/derivation.ml[264,7641+42])
                                                Texp_field
                                                expression (src/derivation.ml[264,7641+27]..src/derivation.ml[264,7641+34])
                                                  Texp_ident "forest2/857"
                                                "comment"
                                          ]
                                    ]
                              ]
                            expression (src/derivation.ml[265,7684+11]..src/derivation.ml[277,8109+9])
                              Texp_match
                              expression (src/derivation.ml[266,7701+14]..src/derivation.ml[266,7701+53])
                                Texp_apply
                                expression (src/derivation.ml[266,7701+14]..src/derivation.ml[266,7701+25])
                                  Texp_ident "common_tree/845"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/derivation.ml[266,7701+26]..src/derivation.ml[266,7701+39])
                                      Texp_field
                                      expression (src/derivation.ml[266,7701+26]..src/derivation.ml[266,7701+33])
                                        Texp_ident "forest1/858"
                                      "focus"
                                  <arg>
                                    Nolabel
                                    expression (src/derivation.ml[266,7701+40]..src/derivation.ml[266,7701+53])
                                      Texp_field
                                      expression (src/derivation.ml[266,7701+40]..src/derivation.ml[266,7701+47])
                                        Texp_ident "forest2/857"
                                      "focus"
                                ]
                              [
                                <case>
                                  pattern (src/derivation.ml[267,7760+10]..src/derivation.ml[267,7760+14])
                                    Tpat_value
                                    pattern (src/derivation.ml[267,7760+10]..src/derivation.ml[267,7760+14])
                                      Tpat_construct "None"
                                      []
                                      None
                                  expression (src/derivation.ml[268,7778+12]..src/derivation.ml[268,7778+36])
                                    Texp_tuple
                                    [
                                      expression (src/derivation.ml[268,7778+12]..src/derivation.ml[268,7778+17])
                                        Texp_construct "CHole"
                                        []
                                      expression (src/derivation.ml[268,7778+19]..src/derivation.ml[268,7778+27])
                                        Texp_ident "cforest1/856"
                                      expression (src/derivation.ml[268,7778+29]..src/derivation.ml[268,7778+36])
                                        Texp_ident "forest2/857"
                                    ]
                                <case>
                                  pattern (src/derivation.ml[269,7815+10]..src/derivation.ml[269,7815+47])
                                    Tpat_value
                                    pattern (src/derivation.ml[269,7815+10]..src/derivation.ml[269,7815+47])
                                      Tpat_construct "Some"
                                      [
                                        pattern (src/derivation.ml[269,7815+15]..src/derivation.ml[269,7815+47])
                                          Tpat_tuple
                                          [
                                            pattern (src/derivation.ml[269,7815+16]..src/derivation.ml[269,7815+21])
                                              Tpat_var "ctree/859"
                                            pattern (src/derivation.ml[269,7815+23]..src/derivation.ml[269,7815+34])
                                              Tpat_var "csubforest1/860"
                                            pattern (src/derivation.ml[269,7815+36]..src/derivation.ml[269,7815+46])
                                              Tpat_var "subforest2/861"
                                          ]
                                      ]
                                      None
                                  expression (src/derivation.ml[270,7866+12]..src/derivation.ml[276,8058+50])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/derivation.ml[270,7866+16]..src/derivation.ml[270,7866+23])
                                          Tpat_var "cforest/862"
                                        expression (src/derivation.ml[270,7866+26]..src/derivation.ml[275,8041+13])
                                          Texp_record
                                            fields =
                                              [
                                                "prefix"
                                                  expression (src/derivation.ml[271,7894+23]..src/derivation.ml[271,7894+37])
                                                    Texp_field
                                                    expression (src/derivation.ml[271,7894+23]..src/derivation.ml[271,7894+30])
                                                      Texp_ident "forest1/858"
                                                    "prefix"
                                                "focus"
                                                  expression (src/derivation.ml[272,7933+22]..src/derivation.ml[272,7933+27])
                                                    Texp_ident "ctree/859"
                                                "suffix"
                                                  expression (src/derivation.ml[273,7962+23]..src/derivation.ml[273,7962+37])
                                                    Texp_field
                                                    expression (src/derivation.ml[273,7962+23]..src/derivation.ml[273,7962+30])
                                                      Texp_ident "forest1/858"
                                                    "suffix"
                                                "comment"
                                                  expression (src/derivation.ml[274,8001+24]..src/derivation.ml[274,8001+39])
                                                    Texp_field
                                                    expression (src/derivation.ml[274,8001+24]..src/derivation.ml[274,8001+31])
                                                      Texp_ident "forest1/858"
                                                    "comment"
                                              ]
                                            representation =
                                              Record_regular
                                            extended_expression =
                                              None
                                    ]
                                    expression (src/derivation.ml[276,8058+12]..src/derivation.ml[276,8058+50])
                                      Texp_tuple
                                      [
                                        expression (src/derivation.ml[276,8058+12]..src/derivation.ml[276,8058+25])
                                          Texp_construct "CCons"
                                          [
                                            expression (src/derivation.ml[276,8058+18]..src/derivation.ml[276,8058+25])
                                              Texp_ident "cforest/862"
                                          ]
                                        expression (src/derivation.ml[276,8058+27]..src/derivation.ml[276,8058+38])
                                          Texp_ident "csubforest1/860"
                                        expression (src/derivation.ml[276,8058+40]..src/derivation.ml[276,8058+50])
                                          Texp_ident "subforest2/861"
                                      ]
                              ]
                            Some
                              expression (src/derivation.ml[279,8130+8]..src/derivation.ml[279,8130+32])
                                Texp_tuple
                                [
                                  expression (src/derivation.ml[279,8130+8]..src/derivation.ml[279,8130+13])
                                    Texp_construct "CHole"
                                    []
                                  expression (src/derivation.ml[279,8130+15]..src/derivation.ml[279,8130+23])
                                    Texp_ident "cforest1/856"
                                  expression (src/derivation.ml[279,8130+25]..src/derivation.ml[279,8130+32])
                                    Texp_ident "forest2/857"
                                ]
                      ]
                ]
          ]
    ]
  structure_item (src/derivation.ml[286,8447+0]..src/derivation.ml[326,9929+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/derivation.ml[286,8447+4]..src/derivation.ml[286,8447+10])
          Tpat_var "factor/863"
        expression (src/derivation.ml[286,8447+11]..src/derivation.ml[326,9929+24]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/derivation.ml[286,8447+11]..src/derivation.ml[286,8447+18])
                Tpat_var "forests/865"
              expression (src/derivation.ml[287,8468+2]..src/derivation.ml[326,9929+24])
                Texp_match
                expression (src/derivation.ml[288,8476+4]..src/derivation.ml[321,9796+18])
                  Texp_apply
                  expression (src/derivation.ml[288,8476+4]..src/derivation.ml[288,8476+17])
                    Texp_ident "Dune__exe!.Item.Map.fold"
                  [
                    <arg>
                      Nolabel
                      expression (src/derivation.ml[288,8476+18]..src/derivation.ml[321,9796+5])
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/derivation.ml[288,8476+23]..src/derivation.ml[288,8476+27])
                              Tpat_var "item/928"
                            expression (src/derivation.ml[288,8476+28]..src/derivation.ml[319,9759+35]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/derivation.ml[288,8476+28]..src/derivation.ml[288,8476+34])
                                    Tpat_var "forest/929"
                                  expression (src/derivation.ml[288,8476+35]..src/derivation.ml[319,9759+35]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/derivation.ml[288,8476+35]..src/derivation.ml[288,8476+39])
                                          Tpat_var "accu/930"
                                        expression (src/derivation.ml[289,8519+6]..src/derivation.ml[319,9759+35])
                                          Texp_match
                                          expression (src/derivation.ml[289,8519+12]..src/derivation.ml[289,8519+16])
                                            Texp_ident "accu/930"
                                          [
                                            <case>
                                              pattern (src/derivation.ml[290,8541+8]..src/derivation.ml[290,8541+12])
                                                Tpat_value
                                                pattern (src/derivation.ml[290,8541+8]..src/derivation.ml[290,8541+12])
                                                  Tpat_construct "None"
                                                  []
                                                  None
                                              expression (src/derivation.ml[296,8754+10]..src/derivation.ml[297,8811+58])
                                                Texp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (src/derivation.ml[296,8754+14]..src/derivation.ml[296,8754+31])
                                                      Tpat_tuple
                                                      [
                                                        pattern (src/derivation.ml[296,8754+14]..src/derivation.ml[296,8754+21])
                                                          Tpat_var "context/933"
                                                        pattern (src/derivation.ml[296,8754+23]..src/derivation.ml[296,8754+31])
                                                          Tpat_var "residual/934"
                                                      ]
                                                    expression (src/derivation.ml[296,8754+34]..src/derivation.ml[296,8754+53])
                                                      Texp_apply
                                                      expression (src/derivation.ml[296,8754+34]..src/derivation.ml[296,8754+46])
                                                        Texp_ident "punch_forest/827"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/derivation.ml[296,8754+47]..src/derivation.ml[296,8754+53])
                                                            Texp_ident "forest/929"
                                                      ]
                                                ]
                                                expression (src/derivation.ml[297,8811+10]..src/derivation.ml[297,8811+58])
                                                  Texp_construct "Some"
                                                  [
                                                    expression (src/derivation.ml[297,8811+15]..src/derivation.ml[297,8811+58])
                                                      Texp_tuple
                                                      [
                                                        expression (src/derivation.ml[297,8811+16]..src/derivation.ml[297,8811+23])
                                                          Texp_ident "context/933"
                                                        expression (src/derivation.ml[297,8811+25]..src/derivation.ml[297,8811+57])
                                                          Texp_apply
                                                          expression (src/derivation.ml[297,8811+25]..src/derivation.ml[297,8811+43])
                                                            Texp_ident "Dune__exe!.Item.Map.singleton"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/derivation.ml[297,8811+44]..src/derivation.ml[297,8811+48])
                                                                Texp_ident "item/928"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/derivation.ml[297,8811+49]..src/derivation.ml[297,8811+57])
                                                                Texp_ident "residual/934"
                                                          ]
                                                      ]
                                                  ]
                                            <case>
                                              pattern (src/derivation.ml[299,8871+8]..src/derivation.ml[299,8871+33])
                                                Tpat_value
                                                pattern (src/derivation.ml[299,8871+8]..src/derivation.ml[299,8871+33])
                                                  Tpat_construct "Some"
                                                  [
                                                    pattern (src/derivation.ml[299,8871+13]..src/derivation.ml[299,8871+33])
                                                      Tpat_tuple
                                                      [
                                                        pattern (src/derivation.ml[299,8871+14]..src/derivation.ml[299,8871+21])
                                                          Tpat_var "context/931"
                                                        pattern (src/derivation.ml[299,8871+23]..src/derivation.ml[299,8871+32])
                                                          Tpat_var "residuals/932"
                                                      ]
                                                  ]
                                                  None
                                              expression (src/derivation.ml[309,9330+10]..src/derivation.ml[319,9759+35])
                                                Texp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (src/derivation.ml[309,9330+14]..src/derivation.ml[309,9330+40])
                                                      Tpat_tuple
                                                      [
                                                        pattern (src/derivation.ml[309,9330+14]..src/derivation.ml[309,9330+21])
                                                          Tpat_var "context/968"
                                                        pattern (src/derivation.ml[309,9330+23]..src/derivation.ml[309,9330+31])
                                                          Tpat_var "contextr/969"
                                                        pattern (src/derivation.ml[309,9330+33]..src/derivation.ml[309,9330+40])
                                                          Tpat_var "forestr/970"
                                                      ]
                                                    expression (src/derivation.ml[309,9330+43]..src/derivation.ml[309,9330+71])
                                                      Texp_apply
                                                      expression (src/derivation.ml[309,9330+43]..src/derivation.ml[309,9330+56])
                                                        Texp_ident "common_forest/846"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/derivation.ml[309,9330+57]..src/derivation.ml[309,9330+64])
                                                            Texp_ident "context/931"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/derivation.ml[309,9330+65]..src/derivation.ml[309,9330+71])
                                                            Texp_ident "forest/929"
                                                      ]
                                                ]
                                                expression (src/derivation.ml[315,9633+10]..src/derivation.ml[319,9759+35])
                                                  Texp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (src/derivation.ml[315,9633+14]..src/derivation.ml[315,9633+23])
                                                        Tpat_var "residuals/971"
                                                      expression (src/derivation.ml[316,9659+12]..src/derivation.ml[316,9659+85])
                                                        Texp_apply
                                                        expression (src/derivation.ml[316,9659+12]..src/derivation.ml[316,9659+24])
                                                          Texp_ident "Dune__exe!.Item.Map.add"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/derivation.ml[316,9659+25]..src/derivation.ml[316,9659+29])
                                                              Texp_ident "item/928"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/derivation.ml[316,9659+30]..src/derivation.ml[316,9659+37])
                                                              Texp_ident "forestr/970"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/derivation.ml[316,9659+38]..src/derivation.ml[316,9659+85])
                                                              Texp_apply
                                                              expression (src/derivation.ml[316,9659+39]..src/derivation.ml[316,9659+51])
                                                                Texp_ident "Dune__exe!.Item.Map.map"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/derivation.ml[316,9659+52]..src/derivation.ml[316,9659+74])
                                                                    Texp_apply
                                                                    expression (src/derivation.ml[316,9659+53]..src/derivation.ml[316,9659+64])
                                                                      Texp_ident "fill_forest/837"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/derivation.ml[316,9659+65]..src/derivation.ml[316,9659+73])
                                                                          Texp_ident "contextr/969"
                                                                    ]
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/derivation.ml[316,9659+75]..src/derivation.ml[316,9659+84])
                                                                    Texp_ident "residuals/932"
                                                              ]
                                                        ]
                                                  ]
                                                  expression (src/derivation.ml[319,9759+10]..src/derivation.ml[319,9759+35])
                                                    Texp_construct "Some"
                                                    [
                                                      expression (src/derivation.ml[319,9759+15]..src/derivation.ml[319,9759+35])
                                                        Texp_tuple
                                                        [
                                                          expression (src/derivation.ml[319,9759+16]..src/derivation.ml[319,9759+23])
                                                            Texp_ident "context/968"
                                                          expression (src/derivation.ml[319,9759+25]..src/derivation.ml[319,9759+34])
                                                            Texp_ident "residuals/971"
                                                        ]
                                                    ]
                                          ]
                                    ]
                              ]
                        ]
                    <arg>
                      Nolabel
                      expression (src/derivation.ml[321,9796+6]..src/derivation.ml[321,9796+13])
                        Texp_ident "forests/865"
                    <arg>
                      Nolabel
                      expression (src/derivation.ml[321,9796+14]..src/derivation.ml[321,9796+18])
                        Texp_construct "None"
                        []
                  ]
                [
                  <case>
                    pattern (src/derivation.ml[323,9822+4]..src/derivation.ml[323,9822+8])
                      Tpat_value
                      pattern (src/derivation.ml[323,9822+4]..src/derivation.ml[323,9822+8])
                        Tpat_construct "None"
                        []
                        None
                    expression (src/derivation.ml[324,9834+6]..src/derivation.ml[324,9834+18])
                      Texp_assert                      expression (src/derivation.ml[324,9834+13]..src/derivation.ml[324,9834+18])
                        Texp_construct "false"
                        []
                  <case>
                    pattern (src/derivation.ml[325,9896+4]..src/derivation.ml[325,9896+29])
                      Tpat_value
                      pattern (src/derivation.ml[325,9896+4]..src/derivation.ml[325,9896+29])
                        Tpat_construct "Some"
                        [
                          pattern (src/derivation.ml[325,9896+9]..src/derivation.ml[325,9896+29])
                            Tpat_tuple
                            [
                              pattern (src/derivation.ml[325,9896+10]..src/derivation.ml[325,9896+17])
                                Tpat_var "context/972"
                              pattern (src/derivation.ml[325,9896+19]..src/derivation.ml[325,9896+28])
                                Tpat_var "residuals/973"
                            ]
                        ]
                        None
                    expression (src/derivation.ml[326,9929+6]..src/derivation.ml[326,9929+24])
                      Texp_tuple
                      [
                        expression (src/derivation.ml[326,9929+6]..src/derivation.ml[326,9929+13])
                          Texp_ident "context/972"
                        expression (src/derivation.ml[326,9929+15]..src/derivation.ml[326,9929+24])
                          Texp_ident "residuals/973"
                      ]
                ]
          ]
    ]
]

{<Dune__exe__Derivation>
 "build"[value] -> <Dune__exe__Derivation.25>;
 "context"[type] -> <Dune__exe__Derivation.15>;
 "empty"[value] -> <Dune__exe__Derivation.20>;
 "factor"[value] -> <Dune__exe__Derivation.112>;
 "prepend"[value] -> <Dune__exe__Derivation.33>;
 "print"[value] -> <Dune__exe__Derivation.73>;
 "printc"[value] -> <Dune__exe__Derivation.74>;
 "t"[type] -> <Dune__exe__Derivation.14>;
 "tail"[value] -> <Dune__exe__Derivation.21>;
 }

(seq
  (letrec
    (array_to_list/469
       (function a/470 i/471[int] j/472[int]
         (if (== i/471 j/472) 0
           (makeblock 0 (array.get[gen] a/470 i/471)
             (apply array_to_list/469 a/470 (+ i/471 1) j/472)))))
    (setfield_ptr(root-init) 7 (global Dune__exe__Derivation!)
      array_to_list/469))
  (let (empty/521 = [0: 0 0 0 ""])
    (setfield_ptr(root-init) 0 (global Dune__exe__Derivation!) empty/521))
  (let
    (tail/522 =
       (function pos/524[int] rhs/525
         (let (length/526 =[int] (array.length[addr] rhs/525))
           (seq
             (if (< pos/524 length/526) 0
               (raise
                 (makeblock 0 (global Assert_failure/28!)
                   [0: "src/derivation.ml" 88 2])))
             (makeblock 0 0 0
               (apply (field_imm 7 (global Dune__exe__Derivation!)) rhs/525
                 pos/524 length/526)
               "")))))
    (setfield_ptr(root-init) 1 (global Dune__exe__Derivation!) tail/522))
  (let
    (build/527 =
       (function pos/529[int] rhs/530 forest/531 comment/532
         (let (length/533 =[int] (array.length[addr] rhs/530))
           (seq
             (if (< pos/529 length/533) 0
               (raise
                 (makeblock 0 (global Assert_failure/28!)
                   [0: "src/derivation.ml" 98 2])))
             (let (symbol/534 = (array.get[addr] rhs/530 pos/529))
               (switch* symbol/534
                case tag 0:
                 (let (*match*/2281 =a (field_imm 0 symbol/534))
                   (makeblock 0 0 (makeblock 0 symbol/534 forest/531)
                     (apply (field_imm 7 (global Dune__exe__Derivation!))
                       rhs/530 (+ pos/529 1) length/533)
                     (if (isint comment/532) ""
                       (let (comment/535 =a (field_imm 0 comment/532))
                         comment/535))))
                case tag 1:
                 (let (*match*/2280 =a (field_imm 0 symbol/534))
                   (raise
                     (makeblock 0 (global Assert_failure/28!)
                       [0: "src/derivation.ml" 101 6])))))))))
    (setfield_ptr(root-init) 2 (global Dune__exe__Derivation!) build/527))
  (let
    (prepend/556 =
       (function symbol/558 forest/559
         (let (init/2282 = forest/559)
           (makeblock 0 (makeblock 0 symbol/558 (field_imm 0 forest/559))
             (field_imm 1 init/2282) (field_imm 2 init/2282)
             (field_imm 3 init/2282)))))
    (setfield_ptr(root-init) 3 (global Dune__exe__Derivation!) prepend/556))
  (let (buffer/560 = (apply (field_imm 0 (global Stdlib__Buffer!)) 32768))
    (setfield_ptr(root-init) 8 (global Dune__exe__Derivation!) buffer/560))
  (letrec
    (print_blank/643
       (function k/644[int] : int
         (if (> k/644 0)
           (seq
             (apply (field_imm 11 (global Stdlib__Buffer!))
               (field_imm 8 (global Dune__exe__Derivation!)) ' ')
             (apply print_blank/643 (- k/644 1)))
           0)))
    (setfield_ptr(root-init) 9 (global Dune__exe__Derivation!)
      print_blank/643))
  (let
    (print_symbol/645 =
       (function symbol/647 : int
         (let
           (word/648 =
              (apply (field_imm 5 (field_imm 5 (global Dune__exe__Grammar!)))
                symbol/647))
           (seq
             (apply (field_imm 15 (global Stdlib__Buffer!))
               (field_imm 8 (global Dune__exe__Derivation!)) word/648)
             (apply (field_imm 11 (global Stdlib__Buffer!))
               (field_imm 8 (global Dune__exe__Derivation!)) ' ')
             (+ (string.length word/648) 1)))))
    (setfield_ptr(root-init) 10 (global Dune__exe__Derivation!)
      print_symbol/645))
  (let
    (print_symbols/718 =
       (function symbols/720 : int
         (apply (field_imm 25 (global Stdlib__List!))
           (function offset/787[int] symbol/788 : int
             (+ offset/787
               (apply (field_imm 10 (global Dune__exe__Derivation!))
                 symbol/788)))
           0 symbols/720)))
    (setfield_ptr(root-init) 11 (global Dune__exe__Derivation!)
      print_symbols/718))
  (let
    (print_level/789 =
       (function print_focus_root/791 print_focus_remainder/792
         offset/793[int] forest/794
         (seq
           (apply (field_imm 9 (global Dune__exe__Derivation!)) offset/793)
           (let
             (offset/795 =[int]
                (+ offset/793
                  (apply (field_imm 11 (global Dune__exe__Derivation!))
                    (field_imm 0 forest/794))))
             (seq (apply print_focus_root/791 (field_imm 1 forest/794))
               (apply (field_imm 11 (global Dune__exe__Derivation!))
                 (field_imm 2 forest/794))
               (if (> (string.length (field_imm 3 forest/794)) 0)
                 (seq
                   (apply (field_imm 15 (global Stdlib__Buffer!))
                     (field_imm 8 (global Dune__exe__Derivation!)) "// ")
                   (apply (field_imm 15 (global Stdlib__Buffer!))
                     (field_imm 8 (global Dune__exe__Derivation!))
                     (field_imm 3 forest/794)))
                 0)
               (apply (field_imm 11 (global Stdlib__Buffer!))
                 (field_imm 8 (global Dune__exe__Derivation!)) '\n')
               (apply print_focus_remainder/792 offset/795
                 (field_imm 1 forest/794)))))))
    (setfield_ptr(root-init) 12 (global Dune__exe__Derivation!)
      print_level/789))
  (let
    (print_tree_root/796 =
       (function param/799 : int
         (if (isint param/799)
           (apply (field_imm 15 (global Stdlib__Buffer!))
             (field_imm 8 (global Dune__exe__Derivation!)) ". ")
           (let
             (*match*/2283 =a (field_imm 1 param/799)
              symbol/798 =a (field_imm 0 param/799))
             (seq
               (apply (field_imm 10 (global Dune__exe__Derivation!))
                 symbol/798)
               0)))))
    (setfield_ptr(root-init) 13 (global Dune__exe__Derivation!)
      print_tree_root/796))
  (letrec
    (print_forest/800
       (function offset/802[int] forest/803 : int
         (apply (field_imm 12 (global Dune__exe__Derivation!))
           (field_imm 13 (global Dune__exe__Derivation!))
           print_tree_remainder/801 offset/802 forest/803))
      print_tree_remainder/801
        (function offset/804[int] param/806 : int
          (if (isint param/806) 0
            (let
              (forest/805 =a (field_imm 1 param/806)
               *match*/2284 =a (field_imm 0 param/806))
              (apply print_forest/800 offset/804 forest/805)))))
    (seq
      (setfield_ptr(root-init) 14 (global Dune__exe__Derivation!)
        print_forest/800)
      (setfield_ptr(root-init) 15 (global Dune__exe__Derivation!)
        print_tree_remainder/801)))
  (let
    (print_ctree_root/807 =
       (function param/810 : int
         (let
           (*match*/2285 =a (field_imm 1 param/810)
            symbol/809 =a (field_imm 0 param/810))
           (seq
             (apply (field_imm 10 (global Dune__exe__Derivation!))
               symbol/809)
             0))))
    (setfield_ptr(root-init) 16 (global Dune__exe__Derivation!)
      print_ctree_root/807))
  (letrec
    (print_cforest/811
       (function offset/813[int] cforest/814 : int
         (if (isint cforest/814)
           (seq
             (apply (field_imm 9 (global Dune__exe__Derivation!)) offset/813)
             (apply (field_imm 15 (global Stdlib__Buffer!))
               (field_imm 8 (global Dune__exe__Derivation!)) "(?)\n"))
           (let (forest/815 =a (field_imm 0 cforest/814))
             (apply (field_imm 12 (global Dune__exe__Derivation!))
               (field_imm 16 (global Dune__exe__Derivation!))
               print_ctree_remainder/812 offset/813 forest/815))))
      print_ctree_remainder/812
        (function offset/816[int] param/818 : int
          (let
            (cforest/817 =a (field_imm 1 param/818)
             *match*/2286 =a (field_imm 0 param/818))
            (apply print_cforest/811 offset/816 cforest/817))))
    (seq
      (setfield_ptr(root-init) 17 (global Dune__exe__Derivation!)
        print_cforest/811)
      (setfield_ptr(root-init) 18 (global Dune__exe__Derivation!)
        print_ctree_remainder/812)))
  (let
    (wrap/819 =
       (function print/821 channel/822 x/823 : int
         (seq
           (apply (field_imm 7 (global Stdlib__Buffer!))
             (field_imm 8 (global Dune__exe__Derivation!)))
           (apply print/821 0 x/823)
           (apply (field_imm 9 (global Stdlib__Buffer!)) channel/822
             (field_imm 8 (global Dune__exe__Derivation!))))))
    (setfield_ptr(root-init) 19 (global Dune__exe__Derivation!) wrap/819))
  (let
    (print/824 =
       (apply (field_imm 19 (global Dune__exe__Derivation!))
         (field_imm 14 (global Dune__exe__Derivation!))))
    (setfield_ptr(root-init) 5 (global Dune__exe__Derivation!) print/824))
  (let
    (printc/825 =
       (apply (field_imm 19 (global Dune__exe__Derivation!))
         (field_imm 17 (global Dune__exe__Derivation!))))
    (setfield_ptr(root-init) 6 (global Dune__exe__Derivation!) printc/825))
  (letrec
    (punch_tree/826
       (function tree/828
         (if (isint tree/828) 0
           (let
             (forest/830 =a (field_imm 1 tree/828)
              symbol/829 =a (field_imm 0 tree/828)
              *match*/2290 = (apply punch_forest/827 forest/830)
              forest2/832 =a (field_imm 1 *match*/2290)
              forest1/831 =a (field_imm 0 *match*/2290))
             (makeblock 0
               (makeblock 0 (makeblock 0 symbol/829 forest1/831) forest2/832)))))
      punch_forest/827
        (function forest/833
          (let
            (*match*/2292 = (apply punch_tree/826 (field_imm 1 forest/833)))
            (if (isint *match*/2292) (makeblock 0 0 forest/833)
              (let
                (*match*/2293 =a (field_imm 0 *match*/2292)
                 forest2/835 =a (field_imm 1 *match*/2293)
                 ctree1/834 =a (field_imm 0 *match*/2293))
                (makeblock 0
                  (makeblock 0
                    (makeblock 0 (field_imm 0 forest/833) ctree1/834
                      (field_imm 2 forest/833) (field_imm 3 forest/833)))
                  forest2/835))))))
    (seq
      (setfield_ptr(root-init) 20 (global Dune__exe__Derivation!)
        punch_tree/826)
      (setfield_ptr(root-init) 21 (global Dune__exe__Derivation!)
        punch_forest/827)))
  (letrec
    (fill_tree/836
       (function ctree1/838 forest2/839
         (let
           (cforest1/841 =a (field_imm 1 ctree1/838)
            symbol1/840 =a (field_imm 0 ctree1/838))
           (makeblock 0 symbol1/840
             (apply fill_forest/837 cforest1/841 forest2/839))))
      fill_forest/837
        (function cforest1/842 forest2/843
          (if (isint cforest1/842) forest2/843
            (let (level1/844 =a (field_imm 0 cforest1/842))
              (makeblock 0 (field_imm 0 level1/844)
                (apply fill_tree/836 (field_imm 1 level1/844) forest2/843)
                (field_imm 2 level1/844) (field_imm 3 level1/844))))))
    (seq
      (setfield_ptr(root-init) 22 (global Dune__exe__Derivation!)
        fill_tree/836)
      (setfield_ptr(root-init) 23 (global Dune__exe__Derivation!)
        fill_forest/837)))
  (letrec
    (common_tree/845
       (function ctree1/847 tree2/848
         (if (isint tree2/848) 0
           (let
             (forest2/852 =a (field_imm 1 tree2/848)
              symbol2/851 =a (field_imm 0 tree2/848)
              cforest1/850 =a (field_imm 1 ctree1/847)
              symbol1/849 =a (field_imm 0 ctree1/847))
             (if
               (apply
                 (field_imm 2 (field_imm 5 (global Dune__exe__Grammar!)))
                 symbol1/849 symbol2/851)
               (let
                 (*match*/2299 =
                    (apply common_forest/846 cforest1/850 forest2/852)
                  forest2/855 =a (field_imm 2 *match*/2299)
                  cforest1/854 =a (field_imm 1 *match*/2299)
                  cforest/853 =a (field_imm 0 *match*/2299))
                 (makeblock 0
                   (makeblock 0 (makeblock 0 symbol1/849 cforest/853)
                     cforest1/854 forest2/855)))
               0))))
      common_forest/846
        (function cforest1/856 forest2/857
          (if (isint cforest1/856) (makeblock 0 0 cforest1/856 forest2/857)
            (let (forest1/858 =a (field_imm 0 cforest1/856))
              (if
                (&&
                  (apply
                    (field_imm 3 (field_imm 5 (global Dune__exe__Grammar!)))
                    (field_imm 0 forest1/858) (field_imm 0 forest2/857))
                  (&&
                    (apply
                      (field_imm 3
                        (field_imm 5 (global Dune__exe__Grammar!)))
                      (field_imm 2 forest1/858) (field_imm 2 forest2/857))
                    (caml_string_equal (field_imm 3 forest1/858)
                      (field_imm 3 forest2/857))))
                (let
                  (*match*/2301 =
                     (apply common_tree/845 (field_imm 1 forest1/858)
                       (field_imm 1 forest2/857)))
                  (if (isint *match*/2301)
                    (makeblock 0 0 cforest1/856 forest2/857)
                    (let
                      (*match*/2302 =a (field_imm 0 *match*/2301)
                       subforest2/861 =a (field_imm 2 *match*/2302)
                       csubforest1/860 =a (field_imm 1 *match*/2302)
                       ctree/859 =a (field_imm 0 *match*/2302)
                       cforest/862 =
                         (makeblock 0 (field_imm 0 forest1/858) ctree/859
                           (field_imm 2 forest1/858)
                           (field_imm 3 forest1/858)))
                      (makeblock 0 (makeblock 0 cforest/862) csubforest1/860
                        subforest2/861))))
                (makeblock 0 0 cforest1/856 forest2/857))))))
    (seq
      (setfield_ptr(root-init) 24 (global Dune__exe__Derivation!)
        common_tree/845)
      (setfield_ptr(root-init) 25 (global Dune__exe__Derivation!)
        common_forest/846)))
  (let
    (factor/863 =
       (function forests/865
         (let
           (*match*/2313 =
              (apply (field_imm 19 (field_imm 9 (global Dune__exe__Item!)))
                (function item/928 forest/929 accu/930
                  (if (isint accu/930)
                    (let
                      (*match*/2306 =
                         (apply
                           (field_imm 21 (global Dune__exe__Derivation!))
                           forest/929)
                       residual/934 =a (field_imm 1 *match*/2306)
                       context/933 =a (field_imm 0 *match*/2306))
                      (makeblock 0
                        (makeblock 0 context/933
                          (apply
                            (field_imm 8
                              (field_imm 9 (global Dune__exe__Item!)))
                            item/928 residual/934))))
                    (let
                      (*match*/2312 =a (field_imm 0 accu/930)
                       residuals/932 =a (field_imm 1 *match*/2312)
                       context/931 =a (field_imm 0 *match*/2312)
                       *match*/2311 =
                         (apply
                           (field_imm 25 (global Dune__exe__Derivation!))
                           context/931 forest/929)
                       forestr/970 =a (field_imm 2 *match*/2311)
                       contextr/969 =a (field_imm 1 *match*/2311)
                       context/968 =a (field_imm 0 *match*/2311)
                       residuals/971 =
                         (apply
                           (field_imm 3
                             (field_imm 9 (global Dune__exe__Item!)))
                           item/928 forestr/970
                           (apply
                             (field_imm 23
                               (field_imm 9 (global Dune__exe__Item!)))
                             (apply
                               (field_imm 23 (global Dune__exe__Derivation!))
                               contextr/969)
                             residuals/932)))
                      (makeblock 0 (makeblock 0 context/968 residuals/971)))))
                forests/865 0))
           (if (isint *match*/2313)
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "src/derivation.ml" 324 6]))
             (let
               (*match*/2314 =a (field_imm 0 *match*/2313)
                residuals/973 =a (field_imm 1 *match*/2314)
                context/972 =a (field_imm 0 *match*/2314))
               (makeblock 0 context/972 residuals/973))))))
    (setfield_ptr(root-init) 4 (global Dune__exe__Derivation!) factor/863))
  0)
(seq
  (letrec
    (array_to_list/469
       (function a/470 i/471[int] j/472[int]
         (if (== i/471 j/472) 0
           (makeblock 0 (array.get[gen] a/470 i/471)
             (apply array_to_list/469 a/470 (+ i/471 1) j/472)))))
    (setfield_ptr(root-init) 7 (global Dune__exe__Derivation!)
      array_to_list/469))
  (let (empty/521 = [0: 0 0 0 ""])
    (setfield_ptr(root-init) 0 (global Dune__exe__Derivation!) empty/521))
  (let
    (tail/522 =
       (function pos/524[int] rhs/525
         (let (length/526 =[int] (array.length[addr] rhs/525))
           (seq
             (if (< pos/524 length/526) 0
               (raise
                 (makeblock 0 (global Assert_failure/28!)
                   [0: "src/derivation.ml" 88 2])))
             (makeblock 0 0 0
               (apply (field_imm 7 (global Dune__exe__Derivation!)) rhs/525
                 pos/524 length/526)
               "")))))
    (setfield_ptr(root-init) 1 (global Dune__exe__Derivation!) tail/522))
  (let
    (build/527 =
       (function pos/529[int] rhs/530 forest/531 comment/532
         (let (length/533 =[int] (array.length[addr] rhs/530))
           (seq
             (if (< pos/529 length/533) 0
               (raise
                 (makeblock 0 (global Assert_failure/28!)
                   [0: "src/derivation.ml" 98 2])))
             (let (symbol/534 = (array.get[addr] rhs/530 pos/529))
               (switch* symbol/534
                case tag 0:
                 (makeblock 0 0 (makeblock 0 symbol/534 forest/531)
                   (apply (field_imm 7 (global Dune__exe__Derivation!))
                     rhs/530 (+ pos/529 1) length/533)
                   (if (isint comment/532) "" (field_imm 0 comment/532)))
                case tag 1:
                 (raise
                   (makeblock 0 (global Assert_failure/28!)
                     [0: "src/derivation.ml" 101 6]))))))))
    (setfield_ptr(root-init) 2 (global Dune__exe__Derivation!) build/527))
  (let
    (prepend/556 =
       (function symbol/558 forest/559
         (makeblock 0 (makeblock 0 symbol/558 (field_imm 0 forest/559))
           (field_imm 1 forest/559) (field_imm 2 forest/559)
           (field_imm 3 forest/559))))
    (setfield_ptr(root-init) 3 (global Dune__exe__Derivation!) prepend/556))
  (let (buffer/560 = (apply (field_imm 0 (global Stdlib__Buffer!)) 32768))
    (setfield_ptr(root-init) 8 (global Dune__exe__Derivation!) buffer/560))
  (letrec
    (print_blank/643
       (function k/644[int] : int
         (if (> k/644 0)
           (seq
             (apply (field_imm 11 (global Stdlib__Buffer!))
               (field_imm 8 (global Dune__exe__Derivation!)) ' ')
             (apply print_blank/643 (- k/644 1)))
           0)))
    (setfield_ptr(root-init) 9 (global Dune__exe__Derivation!)
      print_blank/643))
  (let
    (print_symbol/645 =
       (function symbol/647 : int
         (let
           (word/648 =
              (apply (field_imm 5 (field_imm 5 (global Dune__exe__Grammar!)))
                symbol/647))
           (seq
             (apply (field_imm 15 (global Stdlib__Buffer!))
               (field_imm 8 (global Dune__exe__Derivation!)) word/648)
             (apply (field_imm 11 (global Stdlib__Buffer!))
               (field_imm 8 (global Dune__exe__Derivation!)) ' ')
             (+ (string.length word/648) 1)))))
    (setfield_ptr(root-init) 10 (global Dune__exe__Derivation!)
      print_symbol/645))
  (let
    (print_symbols/718 =
       (function symbols/720 : int
         (apply (field_imm 25 (global Stdlib__List!))
           (function offset/787[int] symbol/788 : int
             (+ offset/787
               (apply (field_imm 10 (global Dune__exe__Derivation!))
                 symbol/788)))
           0 symbols/720)))
    (setfield_ptr(root-init) 11 (global Dune__exe__Derivation!)
      print_symbols/718))
  (let
    (print_level/789 =
       (function print_focus_root/791 print_focus_remainder/792
         offset/793[int] forest/794
         (seq
           (apply (field_imm 9 (global Dune__exe__Derivation!)) offset/793)
           (let
             (offset/795 =[int]
                (+ offset/793
                  (apply (field_imm 11 (global Dune__exe__Derivation!))
                    (field_imm 0 forest/794))))
             (seq (apply print_focus_root/791 (field_imm 1 forest/794))
               (apply (field_imm 11 (global Dune__exe__Derivation!))
                 (field_imm 2 forest/794))
               (if (> (string.length (field_imm 3 forest/794)) 0)
                 (seq
                   (apply (field_imm 15 (global Stdlib__Buffer!))
                     (field_imm 8 (global Dune__exe__Derivation!)) "// ")
                   (apply (field_imm 15 (global Stdlib__Buffer!))
                     (field_imm 8 (global Dune__exe__Derivation!))
                     (field_imm 3 forest/794)))
                 0)
               (apply (field_imm 11 (global Stdlib__Buffer!))
                 (field_imm 8 (global Dune__exe__Derivation!)) '\n')
               (apply print_focus_remainder/792 offset/795
                 (field_imm 1 forest/794)))))))
    (setfield_ptr(root-init) 12 (global Dune__exe__Derivation!)
      print_level/789))
  (let
    (print_tree_root/796 =
       (function param/799 : int
         (if (isint param/799)
           (apply (field_imm 15 (global Stdlib__Buffer!))
             (field_imm 8 (global Dune__exe__Derivation!)) ". ")
           (seq
             (apply (field_imm 10 (global Dune__exe__Derivation!))
               (field_imm 0 param/799))
             0))))
    (setfield_ptr(root-init) 13 (global Dune__exe__Derivation!)
      print_tree_root/796))
  (letrec
    (print_forest/800
       (function offset/802[int] forest/803 : int
         (apply (field_imm 12 (global Dune__exe__Derivation!))
           (field_imm 13 (global Dune__exe__Derivation!))
           print_tree_remainder/801 offset/802 forest/803))
      print_tree_remainder/801
        (function offset/804[int] param/806 : int
          (if (isint param/806) 0
            (apply print_forest/800 offset/804 (field_imm 1 param/806)))))
    (seq
      (setfield_ptr(root-init) 14 (global Dune__exe__Derivation!)
        print_forest/800)
      (setfield_ptr(root-init) 15 (global Dune__exe__Derivation!)
        print_tree_remainder/801)))
  (let
    (print_ctree_root/807 =
       (function param/810 : int
         (seq
           (apply (field_imm 10 (global Dune__exe__Derivation!))
             (field_imm 0 param/810))
           0)))
    (setfield_ptr(root-init) 16 (global Dune__exe__Derivation!)
      print_ctree_root/807))
  (letrec
    (print_cforest/811
       (function offset/813[int] cforest/814 : int
         (if (isint cforest/814)
           (seq
             (apply (field_imm 9 (global Dune__exe__Derivation!)) offset/813)
             (apply (field_imm 15 (global Stdlib__Buffer!))
               (field_imm 8 (global Dune__exe__Derivation!)) "(?)\n"))
           (apply (field_imm 12 (global Dune__exe__Derivation!))
             (field_imm 16 (global Dune__exe__Derivation!))
             print_ctree_remainder/812 offset/813 (field_imm 0 cforest/814))))
      print_ctree_remainder/812
        (function offset/816[int] param/818 : int
          (apply print_cforest/811 offset/816 (field_imm 1 param/818))))
    (seq
      (setfield_ptr(root-init) 17 (global Dune__exe__Derivation!)
        print_cforest/811)
      (setfield_ptr(root-init) 18 (global Dune__exe__Derivation!)
        print_ctree_remainder/812)))
  (let
    (wrap/819 =
       (function print/821 channel/822 x/823 : int
         (seq
           (apply (field_imm 7 (global Stdlib__Buffer!))
             (field_imm 8 (global Dune__exe__Derivation!)))
           (apply print/821 0 x/823)
           (apply (field_imm 9 (global Stdlib__Buffer!)) channel/822
             (field_imm 8 (global Dune__exe__Derivation!))))))
    (setfield_ptr(root-init) 19 (global Dune__exe__Derivation!) wrap/819))
  (let
    (print/824 =
       (apply (field_imm 19 (global Dune__exe__Derivation!))
         (field_imm 14 (global Dune__exe__Derivation!))))
    (setfield_ptr(root-init) 5 (global Dune__exe__Derivation!) print/824))
  (let
    (printc/825 =
       (apply (field_imm 19 (global Dune__exe__Derivation!))
         (field_imm 17 (global Dune__exe__Derivation!))))
    (setfield_ptr(root-init) 6 (global Dune__exe__Derivation!) printc/825))
  (letrec
    (punch_tree/826
       (function tree/828
         (if (isint tree/828) 0
           (let
             (*match*/2290 = (apply punch_forest/827 (field_imm 1 tree/828)))
             (makeblock 0
               (makeblock 0
                 (makeblock 0 (field_imm 0 tree/828)
                   (field_imm 0 *match*/2290))
                 (field_imm 1 *match*/2290))))))
      punch_forest/827
        (function forest/833
          (let
            (*match*/2292 = (apply punch_tree/826 (field_imm 1 forest/833)))
            (if (isint *match*/2292) (makeblock 0 0 forest/833)
              (let (*match*/2293 =a (field_imm 0 *match*/2292))
                (makeblock 0
                  (makeblock 0
                    (makeblock 0 (field_imm 0 forest/833)
                      (field_imm 0 *match*/2293) (field_imm 2 forest/833)
                      (field_imm 3 forest/833)))
                  (field_imm 1 *match*/2293)))))))
    (seq
      (setfield_ptr(root-init) 20 (global Dune__exe__Derivation!)
        punch_tree/826)
      (setfield_ptr(root-init) 21 (global Dune__exe__Derivation!)
        punch_forest/827)))
  (letrec
    (fill_tree/836
       (function ctree1/838 forest2/839
         (makeblock 0 (field_imm 0 ctree1/838)
           (apply fill_forest/837 (field_imm 1 ctree1/838) forest2/839)))
      fill_forest/837
        (function cforest1/842 forest2/843
          (if (isint cforest1/842) forest2/843
            (let (level1/844 =a (field_imm 0 cforest1/842))
              (makeblock 0 (field_imm 0 level1/844)
                (apply fill_tree/836 (field_imm 1 level1/844) forest2/843)
                (field_imm 2 level1/844) (field_imm 3 level1/844))))))
    (seq
      (setfield_ptr(root-init) 22 (global Dune__exe__Derivation!)
        fill_tree/836)
      (setfield_ptr(root-init) 23 (global Dune__exe__Derivation!)
        fill_forest/837)))
  (letrec
    (common_tree/845
       (function ctree1/847 tree2/848
         (if (isint tree2/848) 0
           (let (symbol1/849 =a (field_imm 0 ctree1/847))
             (if
               (apply
                 (field_imm 2 (field_imm 5 (global Dune__exe__Grammar!)))
                 symbol1/849 (field_imm 0 tree2/848))
               (let
                 (*match*/2299 =
                    (apply common_forest/846 (field_imm 1 ctree1/847)
                      (field_imm 1 tree2/848)))
                 (makeblock 0
                   (makeblock 0
                     (makeblock 0 symbol1/849 (field_imm 0 *match*/2299))
                     (field_imm 1 *match*/2299) (field_imm 2 *match*/2299))))
               0))))
      common_forest/846
        (function cforest1/856 forest2/857
          (if (isint cforest1/856) (makeblock 0 0 cforest1/856 forest2/857)
            (let (forest1/858 =a (field_imm 0 cforest1/856))
              (if
                (&&
                  (apply
                    (field_imm 3 (field_imm 5 (global Dune__exe__Grammar!)))
                    (field_imm 0 forest1/858) (field_imm 0 forest2/857))
                  (&&
                    (apply
                      (field_imm 3
                        (field_imm 5 (global Dune__exe__Grammar!)))
                      (field_imm 2 forest1/858) (field_imm 2 forest2/857))
                    (caml_string_equal (field_imm 3 forest1/858)
                      (field_imm 3 forest2/857))))
                (let
                  (*match*/2301 =
                     (apply common_tree/845 (field_imm 1 forest1/858)
                       (field_imm 1 forest2/857)))
                  (if (isint *match*/2301)
                    (makeblock 0 0 cforest1/856 forest2/857)
                    (let
                      (*match*/2302 =a (field_imm 0 *match*/2301)
                       cforest/862 =
                         (makeblock 0 (field_imm 0 forest1/858)
                           (field_imm 0 *match*/2302)
                           (field_imm 2 forest1/858)
                           (field_imm 3 forest1/858)))
                      (makeblock 0 (makeblock 0 cforest/862)
                        (field_imm 1 *match*/2302)
                        (field_imm 2 *match*/2302)))))
                (makeblock 0 0 cforest1/856 forest2/857))))))
    (seq
      (setfield_ptr(root-init) 24 (global Dune__exe__Derivation!)
        common_tree/845)
      (setfield_ptr(root-init) 25 (global Dune__exe__Derivation!)
        common_forest/846)))
  (let
    (factor/863 =
       (function forests/865
         (let
           (*match*/2313 =
              (apply (field_imm 19 (field_imm 9 (global Dune__exe__Item!)))
                (function item/928 forest/929 accu/930
                  (if (isint accu/930)
                    (let
                      (*match*/2306 =
                         (apply
                           (field_imm 21 (global Dune__exe__Derivation!))
                           forest/929))
                      (makeblock 0
                        (makeblock 0 (field_imm 0 *match*/2306)
                          (apply
                            (field_imm 8
                              (field_imm 9 (global Dune__exe__Item!)))
                            item/928 (field_imm 1 *match*/2306)))))
                    (let
                      (*match*/2312 =a (field_imm 0 accu/930)
                       *match*/2311 =
                         (apply
                           (field_imm 25 (global Dune__exe__Derivation!))
                           (field_imm 0 *match*/2312) forest/929)
                       residuals/971 =
                         (apply
                           (field_imm 3
                             (field_imm 9 (global Dune__exe__Item!)))
                           item/928 (field_imm 2 *match*/2311)
                           (apply
                             (field_imm 23
                               (field_imm 9 (global Dune__exe__Item!)))
                             (apply
                               (field_imm 23 (global Dune__exe__Derivation!))
                               (field_imm 1 *match*/2311))
                             (field_imm 1 *match*/2312))))
                      (makeblock 0
                        (makeblock 0 (field_imm 0 *match*/2311)
                          residuals/971)))))
                forests/865 0))
           (if (isint *match*/2313)
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "src/derivation.ml" 324 6]))
             (let (*match*/2314 =a (field_imm 0 *match*/2313))
               (makeblock 0 (field_imm 0 *match*/2314)
                 (field_imm 1 *match*/2314)))))))
    (setfield_ptr(root-init) 4 (global Dune__exe__Derivation!) factor/863))
  0)
