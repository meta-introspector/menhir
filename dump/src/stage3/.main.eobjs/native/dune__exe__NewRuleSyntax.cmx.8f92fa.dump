[
  structure_item (src/newRuleSyntax.ml[14,1003+0]..[14,1003+11])
    Pstr_open Fresh
    module_expr (src/newRuleSyntax.ml[14,1003+5]..[14,1003+11])
      Pmod_ident "Syntax" (src/newRuleSyntax.ml[14,1003+5]..[14,1003+11])
  structure_item (src/newRuleSyntax.ml[25,1440+0]..[26,1457+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[25,1440+4]..[25,1440+8])
          Ppat_var ">>" (src/newRuleSyntax.ml[25,1440+4]..[25,1440+8])
        expression (src/newRuleSyntax.ml[25,1440+9]..[26,1457+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/newRuleSyntax.ml[25,1440+9]..[25,1440+10])
            Ppat_var "f" (src/newRuleSyntax.ml[25,1440+9]..[25,1440+10])
          expression (src/newRuleSyntax.ml[25,1440+11]..[26,1457+9]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/newRuleSyntax.ml[25,1440+11]..[25,1440+12])
              Ppat_var "g" (src/newRuleSyntax.ml[25,1440+11]..[25,1440+12])
            expression (src/newRuleSyntax.ml[25,1440+13]..[26,1457+9]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/newRuleSyntax.ml[25,1440+13]..[25,1440+14])
                Ppat_var "x" (src/newRuleSyntax.ml[25,1440+13]..[25,1440+14])
              expression (src/newRuleSyntax.ml[26,1457+2]..[26,1457+9])
                Pexp_apply
                expression (src/newRuleSyntax.ml[26,1457+2]..[26,1457+3])
                  Pexp_ident "g" (src/newRuleSyntax.ml[26,1457+2]..[26,1457+3])
                [
                  <arg>
                  Nolabel
                    expression (src/newRuleSyntax.ml[26,1457+4]..[26,1457+9])
                      Pexp_apply
                      expression (src/newRuleSyntax.ml[26,1457+5]..[26,1457+6])
                        Pexp_ident "f" (src/newRuleSyntax.ml[26,1457+5]..[26,1457+6])
                      [
                        <arg>
                        Nolabel
                          expression (src/newRuleSyntax.ml[26,1457+7]..[26,1457+8])
                            Pexp_ident "x" (src/newRuleSyntax.ml[26,1457+7]..[26,1457+8])
                      ]
                ]
    ]
  structure_item (src/newRuleSyntax.ml[34,1647+0]..[37,1766+67])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[34,1647+4]..[34,1647+10])
          Ppat_var "return" (src/newRuleSyntax.ml[34,1647+4]..[34,1647+10])
        expression (src/newRuleSyntax.ml[34,1647+11]..[37,1766+67]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/newRuleSyntax.ml[34,1647+11]..[34,1647+14])
            Ppat_var "pos" (src/newRuleSyntax.ml[34,1647+11]..[34,1647+14])
          expression (src/newRuleSyntax.ml[34,1647+15]..[37,1766+67]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/newRuleSyntax.ml[34,1647+15]..[34,1647+16])
              Ppat_var "x" (src/newRuleSyntax.ml[34,1647+15]..[34,1647+16])
            expression (src/newRuleSyntax.ml[34,1647+17]..[37,1766+67])
              Pexp_constraint
              expression (src/newRuleSyntax.ml[35,1683+2]..[37,1766+67])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/newRuleSyntax.ml[35,1683+6]..[35,1683+12])
                      Ppat_var "action" (src/newRuleSyntax.ml[35,1683+6]..[35,1683+12])
                    expression (src/newRuleSyntax.ml[35,1683+15]..[35,1683+46])
                      Pexp_apply
                      expression (src/newRuleSyntax.ml[35,1683+15]..[35,1683+34])
                        Pexp_ident "Action.from_il_expr" (src/newRuleSyntax.ml[35,1683+15]..[35,1683+34])
                      [
                        <arg>
                        Nolabel
                          expression (src/newRuleSyntax.ml[35,1683+35]..[35,1683+46])
                            Pexp_construct "IL.EVar" (src/newRuleSyntax.ml[35,1683+36]..[35,1683+43])
                            Some
                              expression (src/newRuleSyntax.ml[35,1683+44]..[35,1683+45])
                                Pexp_ident "x" (src/newRuleSyntax.ml[35,1683+44]..[35,1683+45])
                      ]
                ]
                expression (src/newRuleSyntax.ml[36,1733+2]..[37,1766+67])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/newRuleSyntax.ml[36,1733+6]..[36,1733+16])
                        Ppat_var "raw_action" (src/newRuleSyntax.ml[36,1733+6]..[36,1733+16])
                      expression (src/newRuleSyntax.ml[36,1733+17]..[36,1733+29]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/newRuleSyntax.ml[36,1733+17]..[36,1733+18])
                          Ppat_any
                        expression (src/newRuleSyntax.ml[36,1733+19]..[36,1733+29]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/newRuleSyntax.ml[36,1733+19]..[36,1733+20])
                            Ppat_any
                          expression (src/newRuleSyntax.ml[36,1733+23]..[36,1733+29])
                            Pexp_ident "action" (src/newRuleSyntax.ml[36,1733+23]..[36,1733+29])
                  ]
                  expression (src/newRuleSyntax.ml[37,1766+2]..[37,1766+67])
                    Pexp_apply
                    expression (src/newRuleSyntax.ml[37,1766+2]..[37,1766+20])
                      Pexp_ident "Positions.with_pos" (src/newRuleSyntax.ml[37,1766+2]..[37,1766+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[37,1766+21]..[37,1766+24])
                          Pexp_ident "pos" (src/newRuleSyntax.ml[37,1766+21]..[37,1766+24])
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[37,1766+25]..[37,1766+67])
                          Pexp_construct "EAction" (src/newRuleSyntax.ml[37,1766+26]..[37,1766+33])
                          Some
                            expression (src/newRuleSyntax.ml[37,1766+34]..[37,1766+66])
                              Pexp_tuple
                              [
                                expression (src/newRuleSyntax.ml[37,1766+35]..[37,1766+59])
                                  Pexp_construct "XATraditional" (src/newRuleSyntax.ml[37,1766+35]..[37,1766+48])
                                  Some
                                    expression (src/newRuleSyntax.ml[37,1766+49]..[37,1766+59])
                                      Pexp_ident "raw_action" (src/newRuleSyntax.ml[37,1766+49]..[37,1766+59])
                                expression (src/newRuleSyntax.ml[37,1766+61]..[37,1766+65])
                                  Pexp_construct "None" (src/newRuleSyntax.ml[37,1766+61]..[37,1766+65])
                                  None
                              ]
                    ]
              core_type (src/newRuleSyntax.ml[34,1647+19]..[34,1647+33])
                Ptyp_constr "seq_expression" (src/newRuleSyntax.ml[34,1647+19]..[34,1647+33])
                []
    ]
  structure_item (src/newRuleSyntax.ml[59,2811+0]..[72,3314+5])
    Pstr_value Rec
    [
      <def>
        pattern (src/newRuleSyntax.ml[59,2811+8]..[59,2811+20])
          Ppat_var "resolve_puns" (src/newRuleSyntax.ml[59,2811+8]..[59,2811+20])
        expression (src/newRuleSyntax.ml[59,2811+21]..[72,3314+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/newRuleSyntax.ml[59,2811+21]..[59,2811+41])
            Ppat_constraint
            pattern (src/newRuleSyntax.ml[59,2811+22]..[59,2811+23])
              Ppat_var "e" (src/newRuleSyntax.ml[59,2811+22]..[59,2811+23])
            core_type (src/newRuleSyntax.ml[59,2811+26]..[59,2811+40])
              Ptyp_constr "seq_expression" (src/newRuleSyntax.ml[59,2811+26]..[59,2811+40])
              []
          expression (src/newRuleSyntax.ml[59,2811+42]..[72,3314+5])
            Pexp_constraint
            expression (src/newRuleSyntax.ml[60,2872+2]..[72,3314+5])
              Pexp_apply
              expression (src/newRuleSyntax.ml[60,2872+2]..[60,2872+15])
                Pexp_ident "Positions.map" (src/newRuleSyntax.ml[60,2872+2]..[60,2872+15])
              [
                <arg>
                Nolabel
                  expression (src/newRuleSyntax.ml[60,2872+16]..[72,3314+3])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/newRuleSyntax.ml[60,2872+21]..[60,2872+22])
                      Ppat_var "e" (src/newRuleSyntax.ml[60,2872+21]..[60,2872+22])
                    expression (src/newRuleSyntax.ml[61,2898+4]..[71,3304+9])
                      Pexp_match
                      expression (src/newRuleSyntax.ml[61,2898+10]..[61,2898+11])
                        Pexp_ident "e" (src/newRuleSyntax.ml[61,2898+10]..[61,2898+11])
                      [
                        <case>
                          pattern (src/newRuleSyntax.ml[62,2915+6]..[62,2915+62])
                            Ppat_construct "ECons" (src/newRuleSyntax.ml[62,2915+6]..[62,2915+11])
                            Some
                              []
                              pattern (src/newRuleSyntax.ml[62,2915+12]..[62,2915+62])
                                Ppat_tuple
                                [
                                  pattern (src/newRuleSyntax.ml[62,2915+13]..[62,2915+28])
                                    Ppat_construct "SemPatTilde" (src/newRuleSyntax.ml[62,2915+13]..[62,2915+24])
                                    Some
                                      []
                                      pattern (src/newRuleSyntax.ml[62,2915+25]..[62,2915+28])
                                        Ppat_var "pos" (src/newRuleSyntax.ml[62,2915+25]..[62,2915+28])
                                  pattern (src/newRuleSyntax.ml[62,2915+30]..[62,2915+57])
                                    Ppat_alias "e1" (src/newRuleSyntax.ml[62,2915+54]..[62,2915+56])
                                    pattern (src/newRuleSyntax.ml[62,2915+31]..[62,2915+50])
                                      Ppat_construct "ESymbol" (src/newRuleSyntax.ml[62,2915+31]..[62,2915+38])
                                      Some
                                        []
                                        pattern (src/newRuleSyntax.ml[62,2915+39]..[62,2915+50])
                                          Ppat_tuple
                                          [
                                            pattern (src/newRuleSyntax.ml[62,2915+40]..[62,2915+42])
                                              Ppat_var "x1" (src/newRuleSyntax.ml[62,2915+40]..[62,2915+42])
                                            pattern (src/newRuleSyntax.ml[62,2915+44]..[62,2915+46])
                                              Ppat_construct "[]" (src/newRuleSyntax.ml[62,2915+44]..[62,2915+46])
                                              None
                                            pattern (src/newRuleSyntax.ml[62,2915+48]..[62,2915+49])
                                              Ppat_any
                                          ]
                                  pattern (src/newRuleSyntax.ml[62,2915+59]..[62,2915+61])
                                    Ppat_var "e2" (src/newRuleSyntax.ml[62,2915+59]..[62,2915+61])
                                ]
                          <when>
                            expression (src/newRuleSyntax.ml[63,2978+11]..[63,2978+46])
                              Pexp_apply
                              expression (src/newRuleSyntax.ml[63,2978+11]..[63,2978+43])
                                Pexp_ident "ParserAux.valid_ocaml_identifier" (src/newRuleSyntax.ml[63,2978+11]..[63,2978+43])
                              [
                                <arg>
                                Nolabel
                                  expression (src/newRuleSyntax.ml[63,2978+44]..[63,2978+46])
                                    Pexp_ident "x1" (src/newRuleSyntax.ml[63,2978+44]..[63,2978+46])
                              ]
                          expression (src/newRuleSyntax.ml[65,3069+8]..[66,3148+49])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/newRuleSyntax.ml[65,3069+12]..[65,3069+14])
                                  Ppat_var "x1" (src/newRuleSyntax.ml[65,3069+12]..[65,3069+14])
                                expression (src/newRuleSyntax.ml[65,3069+17]..[65,3069+60])
                                  Pexp_apply
                                  expression (src/newRuleSyntax.ml[65,3069+17]..[65,3069+35])
                                    Pexp_ident "Positions.with_pos" (src/newRuleSyntax.ml[65,3069+17]..[65,3069+35])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/newRuleSyntax.ml[65,3069+36]..[65,3069+39])
                                        Pexp_ident "pos" (src/newRuleSyntax.ml[65,3069+36]..[65,3069+39])
                                    <arg>
                                    Nolabel
                                      expression (src/newRuleSyntax.ml[65,3069+40]..[65,3069+60])
                                        Pexp_apply
                                        expression (src/newRuleSyntax.ml[65,3069+41]..[65,3069+56])
                                          Pexp_ident "Positions.value" (src/newRuleSyntax.ml[65,3069+41]..[65,3069+56])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/newRuleSyntax.ml[65,3069+57]..[65,3069+59])
                                              Pexp_ident "x1" (src/newRuleSyntax.ml[65,3069+57]..[65,3069+59])
                                        ]
                                  ]
                            ]
                            expression (src/newRuleSyntax.ml[66,3148+8]..[66,3148+49])
                              Pexp_construct "ECons" (src/newRuleSyntax.ml[66,3148+8]..[66,3148+13])
                              Some
                                expression (src/newRuleSyntax.ml[66,3148+14]..[66,3148+49])
                                  Pexp_tuple
                                  [
                                    expression (src/newRuleSyntax.ml[66,3148+15]..[66,3148+27])
                                      Pexp_construct "SemPatVar" (src/newRuleSyntax.ml[66,3148+15]..[66,3148+24])
                                      Some
                                        expression (src/newRuleSyntax.ml[66,3148+25]..[66,3148+27])
                                          Pexp_ident "x1" (src/newRuleSyntax.ml[66,3148+25]..[66,3148+27])
                                    expression (src/newRuleSyntax.ml[66,3148+29]..[66,3148+31])
                                      Pexp_ident "e1" (src/newRuleSyntax.ml[66,3148+29]..[66,3148+31])
                                    expression (src/newRuleSyntax.ml[66,3148+33]..[66,3148+48])
                                      Pexp_apply
                                      expression (src/newRuleSyntax.ml[66,3148+33]..[66,3148+45])
                                        Pexp_ident "resolve_puns" (src/newRuleSyntax.ml[66,3148+33]..[66,3148+45])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/newRuleSyntax.ml[66,3148+46]..[66,3148+48])
                                            Pexp_ident "e2" (src/newRuleSyntax.ml[66,3148+46]..[66,3148+48])
                                      ]
                                  ]
                        <case>
                          pattern (src/newRuleSyntax.ml[67,3198+6]..[67,3198+24])
                            Ppat_construct "ECons" (src/newRuleSyntax.ml[67,3198+6]..[67,3198+11])
                            Some
                              []
                              pattern (src/newRuleSyntax.ml[67,3198+12]..[67,3198+24])
                                Ppat_tuple
                                [
                                  pattern (src/newRuleSyntax.ml[67,3198+13]..[67,3198+15])
                                    Ppat_var "p1" (src/newRuleSyntax.ml[67,3198+13]..[67,3198+15])
                                  pattern (src/newRuleSyntax.ml[67,3198+17]..[67,3198+19])
                                    Ppat_var "e1" (src/newRuleSyntax.ml[67,3198+17]..[67,3198+19])
                                  pattern (src/newRuleSyntax.ml[67,3198+21]..[67,3198+23])
                                    Ppat_var "e2" (src/newRuleSyntax.ml[67,3198+21]..[67,3198+23])
                                ]
                          expression (src/newRuleSyntax.ml[68,3226+8]..[68,3226+39])
                            Pexp_construct "ECons" (src/newRuleSyntax.ml[68,3226+8]..[68,3226+13])
                            Some
                              expression (src/newRuleSyntax.ml[68,3226+14]..[68,3226+39])
                                Pexp_tuple
                                [
                                  expression (src/newRuleSyntax.ml[68,3226+15]..[68,3226+17])
                                    Pexp_ident "p1" (src/newRuleSyntax.ml[68,3226+15]..[68,3226+17])
                                  expression (src/newRuleSyntax.ml[68,3226+19]..[68,3226+21])
                                    Pexp_ident "e1" (src/newRuleSyntax.ml[68,3226+19]..[68,3226+21])
                                  expression (src/newRuleSyntax.ml[68,3226+23]..[68,3226+38])
                                    Pexp_apply
                                    expression (src/newRuleSyntax.ml[68,3226+23]..[68,3226+35])
                                      Pexp_ident "resolve_puns" (src/newRuleSyntax.ml[68,3226+23]..[68,3226+35])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/newRuleSyntax.ml[68,3226+36]..[68,3226+38])
                                          Pexp_ident "e2" (src/newRuleSyntax.ml[68,3226+36]..[68,3226+38])
                                    ]
                                ]
                        <case>
                          pattern (src/newRuleSyntax.ml[69,3266+6]..[70,3285+15])
                            Ppat_or
                            pattern (src/newRuleSyntax.ml[69,3266+6]..[69,3266+18])
                              Ppat_construct "ESingleton" (src/newRuleSyntax.ml[69,3266+6]..[69,3266+16])
                              Some
                                []
                                pattern (src/newRuleSyntax.ml[69,3266+17]..[69,3266+18])
                                  Ppat_any
                            pattern (src/newRuleSyntax.ml[70,3285+6]..[70,3285+15])
                              Ppat_construct "EAction" (src/newRuleSyntax.ml[70,3285+6]..[70,3285+13])
                              Some
                                []
                                pattern (src/newRuleSyntax.ml[70,3285+14]..[70,3285+15])
                                  Ppat_any
                          expression (src/newRuleSyntax.ml[71,3304+8]..[71,3304+9])
                            Pexp_ident "e" (src/newRuleSyntax.ml[71,3304+8]..[71,3304+9])
                      ]
                <arg>
                Nolabel
                  expression (src/newRuleSyntax.ml[72,3314+4]..[72,3314+5])
                    Pexp_ident "e" (src/newRuleSyntax.ml[72,3314+4]..[72,3314+5])
              ]
            core_type (src/newRuleSyntax.ml[59,2811+44]..[59,2811+58])
              Ptyp_constr "seq_expression" (src/newRuleSyntax.ml[59,2811+44]..[59,2811+58])
              []
    ]
  structure_item (src/newRuleSyntax.ml[83,3662+0]..[101,4216+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[83,3662+4]..[83,3662+19])
          Ppat_var "check_linearity" (src/newRuleSyntax.ml[83,3662+4]..[83,3662+19])
        expression (src/newRuleSyntax.ml[83,3662+20]..[101,4216+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/newRuleSyntax.ml[83,3662+20]..[83,3662+39])
            Ppat_constraint
            pattern (src/newRuleSyntax.ml[83,3662+21]..[83,3662+23])
              Ppat_var "ps" (src/newRuleSyntax.ml[83,3662+21]..[83,3662+23])
            core_type (src/newRuleSyntax.ml[83,3662+26]..[83,3662+38])
              Ptyp_constr "list" (src/newRuleSyntax.ml[83,3662+34]..[83,3662+38])
              [
                core_type (src/newRuleSyntax.ml[83,3662+26]..[83,3662+33])
                  Ptyp_constr "pattern" (src/newRuleSyntax.ml[83,3662+26]..[83,3662+33])
                  []
              ]
          expression (src/newRuleSyntax.ml[85,3705+2]..[101,4216+5])
            Pexp_let Rec
            [
              <def>
                pattern (src/newRuleSyntax.ml[85,3705+10]..[85,3705+15])
                  Ppat_var "build" (src/newRuleSyntax.ml[85,3705+10]..[85,3705+15])
                expression (src/newRuleSyntax.ml[85,3705+16]..[94,3976+33]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/newRuleSyntax.ml[85,3705+16]..[85,3705+53])
                    Ppat_constraint
                    pattern (src/newRuleSyntax.ml[85,3705+17]..[85,3705+18])
                      Ppat_var "m" (src/newRuleSyntax.ml[85,3705+17]..[85,3705+18])
                    core_type (src/newRuleSyntax.ml[85,3705+21]..[85,3705+52])
                      Ptyp_constr "StringMap.t" (src/newRuleSyntax.ml[85,3705+41]..[85,3705+52])
                      [
                        core_type (src/newRuleSyntax.ml[85,3705+21]..[85,3705+40])
                          Ptyp_constr "Positions.positions" (src/newRuleSyntax.ml[85,3705+21]..[85,3705+40])
                          []
                      ]
                  expression (src/newRuleSyntax.ml[85,3705+54]..[94,3976+33]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/newRuleSyntax.ml[85,3705+54]..[85,3705+67])
                      Ppat_constraint
                      pattern (src/newRuleSyntax.ml[85,3705+55]..[85,3705+56])
                        Ppat_var "p" (src/newRuleSyntax.ml[85,3705+55]..[85,3705+56])
                      core_type (src/newRuleSyntax.ml[85,3705+59]..[85,3705+66])
                        Ptyp_constr "pattern" (src/newRuleSyntax.ml[85,3705+59]..[85,3705+66])
                        []
                    expression (src/newRuleSyntax.ml[86,3775+4]..[94,3976+33])
                      Pexp_match
                      expression (src/newRuleSyntax.ml[86,3775+10]..[86,3775+11])
                        Pexp_ident "p" (src/newRuleSyntax.ml[86,3775+10]..[86,3775+11])
                      [
                        <case>
                          pattern (src/newRuleSyntax.ml[87,3792+6]..[87,3792+17])
                            Ppat_construct "SemPatVar" (src/newRuleSyntax.ml[87,3792+6]..[87,3792+15])
                            Some
                              []
                              pattern (src/newRuleSyntax.ml[87,3792+16]..[87,3792+17])
                                Ppat_var "x" (src/newRuleSyntax.ml[87,3792+16]..[87,3792+17])
                          expression (src/newRuleSyntax.ml[88,3813+8]..[89,3859+38])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/newRuleSyntax.ml[88,3813+12]..[88,3813+18])
                                  Ppat_tuple
                                  [
                                    pattern (src/newRuleSyntax.ml[88,3813+12]..[88,3813+13])
                                      Ppat_var "x" (src/newRuleSyntax.ml[88,3813+12]..[88,3813+13])
                                    pattern (src/newRuleSyntax.ml[88,3813+15]..[88,3813+18])
                                      Ppat_var "pos" (src/newRuleSyntax.ml[88,3813+15]..[88,3813+18])
                                  ]
                                expression (src/newRuleSyntax.ml[88,3813+21]..[88,3813+42])
                                  Pexp_apply
                                  expression (src/newRuleSyntax.ml[88,3813+21]..[88,3813+40])
                                    Pexp_ident "Positions.decompose" (src/newRuleSyntax.ml[88,3813+21]..[88,3813+40])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/newRuleSyntax.ml[88,3813+41]..[88,3813+42])
                                        Pexp_ident "x" (src/newRuleSyntax.ml[88,3813+41]..[88,3813+42])
                                  ]
                            ]
                            expression (src/newRuleSyntax.ml[89,3859+8]..[89,3859+38])
                              Pexp_apply
                              expression (src/newRuleSyntax.ml[89,3859+8]..[89,3859+30])
                                Pexp_ident "StringMap.multiple_add" (src/newRuleSyntax.ml[89,3859+8]..[89,3859+30])
                              [
                                <arg>
                                Nolabel
                                  expression (src/newRuleSyntax.ml[89,3859+31]..[89,3859+32])
                                    Pexp_ident "x" (src/newRuleSyntax.ml[89,3859+31]..[89,3859+32])
                                <arg>
                                Nolabel
                                  expression (src/newRuleSyntax.ml[89,3859+33]..[89,3859+36])
                                    Pexp_ident "pos" (src/newRuleSyntax.ml[89,3859+33]..[89,3859+36])
                                <arg>
                                Nolabel
                                  expression (src/newRuleSyntax.ml[89,3859+37]..[89,3859+38])
                                    Pexp_ident "m" (src/newRuleSyntax.ml[89,3859+37]..[89,3859+38])
                              ]
                        <case>
                          pattern (src/newRuleSyntax.ml[90,3898+6]..[91,3919+19])
                            Ppat_or
                            pattern (src/newRuleSyntax.ml[90,3898+6]..[90,3898+20])
                              Ppat_construct "SemPatWildcard" (src/newRuleSyntax.ml[90,3898+6]..[90,3898+20])
                              None
                            pattern (src/newRuleSyntax.ml[91,3919+6]..[91,3919+19])
                              Ppat_construct "SemPatTilde" (src/newRuleSyntax.ml[91,3919+6]..[91,3919+17])
                              Some
                                []
                                pattern (src/newRuleSyntax.ml[91,3919+18]..[91,3919+19])
                                  Ppat_any
                          expression (src/newRuleSyntax.ml[92,3942+8]..[92,3942+9])
                            Pexp_ident "m" (src/newRuleSyntax.ml[92,3942+8]..[92,3942+9])
                        <case>
                          pattern (src/newRuleSyntax.ml[93,3952+6]..[93,3952+20])
                            Ppat_construct "SemPatTuple" (src/newRuleSyntax.ml[93,3952+6]..[93,3952+17])
                            Some
                              []
                              pattern (src/newRuleSyntax.ml[93,3952+18]..[93,3952+20])
                                Ppat_var "ps" (src/newRuleSyntax.ml[93,3952+18]..[93,3952+20])
                          expression (src/newRuleSyntax.ml[94,3976+8]..[94,3976+33])
                            Pexp_apply
                            expression (src/newRuleSyntax.ml[94,3976+8]..[94,3976+22])
                              Pexp_ident "List.fold_left" (src/newRuleSyntax.ml[94,3976+8]..[94,3976+22])
                            [
                              <arg>
                              Nolabel
                                expression (src/newRuleSyntax.ml[94,3976+23]..[94,3976+28])
                                  Pexp_ident "build" (src/newRuleSyntax.ml[94,3976+23]..[94,3976+28])
                              <arg>
                              Nolabel
                                expression (src/newRuleSyntax.ml[94,3976+29]..[94,3976+30])
                                  Pexp_ident "m" (src/newRuleSyntax.ml[94,3976+29]..[94,3976+30])
                              <arg>
                              Nolabel
                                expression (src/newRuleSyntax.ml[94,3976+31]..[94,3976+33])
                                  Pexp_ident "ps" (src/newRuleSyntax.ml[94,3976+31]..[94,3976+33])
                            ]
                      ]
            ]
            expression (src/newRuleSyntax.ml[97,4016+2]..[101,4216+5])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/newRuleSyntax.ml[97,4016+6]..[97,4016+7])
                    Ppat_var "m" (src/newRuleSyntax.ml[97,4016+6]..[97,4016+7])
                  expression (src/newRuleSyntax.ml[97,4016+10]..[97,4016+49])
                    Pexp_apply
                    expression (src/newRuleSyntax.ml[97,4016+10]..[97,4016+24])
                      Pexp_ident "List.fold_left" (src/newRuleSyntax.ml[97,4016+10]..[97,4016+24])
                    [
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[97,4016+25]..[97,4016+30])
                          Pexp_ident "build" (src/newRuleSyntax.ml[97,4016+25]..[97,4016+30])
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[97,4016+31]..[97,4016+46])
                          Pexp_ident "StringMap.empty" (src/newRuleSyntax.ml[97,4016+31]..[97,4016+46])
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[97,4016+47]..[97,4016+49])
                          Pexp_ident "ps" (src/newRuleSyntax.ml[97,4016+47]..[97,4016+49])
                    ]
              ]
              expression (src/newRuleSyntax.ml[98,4069+2]..[101,4216+5])
                Pexp_apply
                expression (src/newRuleSyntax.ml[98,4069+2]..[98,4069+16])
                  Pexp_ident "StringMap.iter" (src/newRuleSyntax.ml[98,4069+2]..[98,4069+16])
                [
                  <arg>
                  Nolabel
                    expression (src/newRuleSyntax.ml[98,4069+17]..[101,4216+3])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/newRuleSyntax.ml[98,4069+22]..[98,4069+23])
                        Ppat_var "x" (src/newRuleSyntax.ml[98,4069+22]..[98,4069+23])
                      expression (src/newRuleSyntax.ml[98,4069+24]..[100,4144+71]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/newRuleSyntax.ml[98,4069+24]..[98,4069+33])
                          Ppat_var "positions" (src/newRuleSyntax.ml[98,4069+24]..[98,4069+33])
                        expression (src/newRuleSyntax.ml[99,4106+4]..[100,4144+71])
                          Pexp_ifthenelse
                          expression (src/newRuleSyntax.ml[99,4106+7]..[99,4106+32])
                            Pexp_apply
                            expression (src/newRuleSyntax.ml[99,4106+29]..[99,4106+30])
                              Pexp_ident ">" (src/newRuleSyntax.ml[99,4106+29]..[99,4106+30])
                            [
                              <arg>
                              Nolabel
                                expression (src/newRuleSyntax.ml[99,4106+7]..[99,4106+28])
                                  Pexp_apply
                                  expression (src/newRuleSyntax.ml[99,4106+7]..[99,4106+18])
                                    Pexp_ident "List.length" (src/newRuleSyntax.ml[99,4106+7]..[99,4106+18])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/newRuleSyntax.ml[99,4106+19]..[99,4106+28])
                                        Pexp_ident "positions" (src/newRuleSyntax.ml[99,4106+19]..[99,4106+28])
                                  ]
                              <arg>
                              Nolabel
                                expression (src/newRuleSyntax.ml[99,4106+31]..[99,4106+32])
                                  Pexp_constant PConst_int (1,None)
                            ]
                          expression (src/newRuleSyntax.ml[100,4144+6]..[100,4144+71])
                            Pexp_apply
                            expression (src/newRuleSyntax.ml[100,4144+6]..[100,4144+17])
                              Pexp_ident "Error.error" (src/newRuleSyntax.ml[100,4144+6]..[100,4144+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/newRuleSyntax.ml[100,4144+18]..[100,4144+27])
                                  Pexp_ident "positions" (src/newRuleSyntax.ml[100,4144+18]..[100,4144+27])
                              <arg>
                              Nolabel
                                expression (src/newRuleSyntax.ml[100,4144+28]..[100,4144+69])
                                  Pexp_constant PConst_string("The variable %s is bound several times.",(src/newRuleSyntax.ml[100,4144+29]..[100,4144+68]),None)
                              <arg>
                              Nolabel
                                expression (src/newRuleSyntax.ml[100,4144+70]..[100,4144+71])
                                  Pexp_ident "x" (src/newRuleSyntax.ml[100,4144+70]..[100,4144+71])
                            ]
                          None
                  <arg>
                  Nolabel
                    expression (src/newRuleSyntax.ml[101,4216+4]..[101,4216+5])
                      Pexp_ident "m" (src/newRuleSyntax.ml[101,4216+4]..[101,4216+5])
                ]
    ]
  structure_item (src/newRuleSyntax.ml[103,4223+0]..[110,4403+8])
    Pstr_value Rec
    [
      <def>
        pattern (src/newRuleSyntax.ml[103,4223+8]..[103,4223+16])
          Ppat_var "patterns" (src/newRuleSyntax.ml[103,4223+8]..[103,4223+16])
        expression (src/newRuleSyntax.ml[103,4223+17]..[110,4403+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/newRuleSyntax.ml[103,4223+17]..[103,4223+37])
            Ppat_constraint
            pattern (src/newRuleSyntax.ml[103,4223+18]..[103,4223+19])
              Ppat_var "e" (src/newRuleSyntax.ml[103,4223+18]..[103,4223+19])
            core_type (src/newRuleSyntax.ml[103,4223+22]..[103,4223+36])
              Ptyp_constr "seq_expression" (src/newRuleSyntax.ml[103,4223+22]..[103,4223+36])
              []
          expression (src/newRuleSyntax.ml[103,4223+38]..[110,4403+8])
            Pexp_constraint
            expression (src/newRuleSyntax.ml[104,4278+2]..[110,4403+8])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/newRuleSyntax.ml[104,4278+6]..[104,4278+7])
                    Ppat_var "e" (src/newRuleSyntax.ml[104,4278+6]..[104,4278+7])
                  expression (src/newRuleSyntax.ml[104,4278+10]..[104,4278+27])
                    Pexp_apply
                    expression (src/newRuleSyntax.ml[104,4278+10]..[104,4278+25])
                      Pexp_ident "Positions.value" (src/newRuleSyntax.ml[104,4278+10]..[104,4278+25])
                    [
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[104,4278+26]..[104,4278+27])
                          Pexp_ident "e" (src/newRuleSyntax.ml[104,4278+26]..[104,4278+27])
                    ]
              ]
              expression (src/newRuleSyntax.ml[105,4309+2]..[110,4403+8])
                Pexp_match
                expression (src/newRuleSyntax.ml[105,4309+8]..[105,4309+9])
                  Pexp_ident "e" (src/newRuleSyntax.ml[105,4309+8]..[105,4309+9])
                [
                  <case>
                    pattern (src/newRuleSyntax.ml[106,4324+4]..[106,4324+19])
                      Ppat_construct "ECons" (src/newRuleSyntax.ml[106,4324+4]..[106,4324+9])
                      Some
                        []
                        pattern (src/newRuleSyntax.ml[106,4324+10]..[106,4324+19])
                          Ppat_tuple
                          [
                            pattern (src/newRuleSyntax.ml[106,4324+11]..[106,4324+12])
                              Ppat_var "p" (src/newRuleSyntax.ml[106,4324+11]..[106,4324+12])
                            pattern (src/newRuleSyntax.ml[106,4324+14]..[106,4324+15])
                              Ppat_any
                            pattern (src/newRuleSyntax.ml[106,4324+17]..[106,4324+18])
                              Ppat_var "e" (src/newRuleSyntax.ml[106,4324+17]..[106,4324+18])
                          ]
                    expression (src/newRuleSyntax.ml[107,4347+6]..[107,4347+21])
                      Pexp_construct "::" (src/newRuleSyntax.ml[107,4347+8]..[107,4347+10])
                      Some
                        expression (src/newRuleSyntax.ml[107,4347+6]..[107,4347+21]) ghost
                          Pexp_tuple
                          [
                            expression (src/newRuleSyntax.ml[107,4347+6]..[107,4347+7])
                              Pexp_ident "p" (src/newRuleSyntax.ml[107,4347+6]..[107,4347+7])
                            expression (src/newRuleSyntax.ml[107,4347+11]..[107,4347+21])
                              Pexp_apply
                              expression (src/newRuleSyntax.ml[107,4347+11]..[107,4347+19])
                                Pexp_ident "patterns" (src/newRuleSyntax.ml[107,4347+11]..[107,4347+19])
                              [
                                <arg>
                                Nolabel
                                  expression (src/newRuleSyntax.ml[107,4347+20]..[107,4347+21])
                                    Pexp_ident "e" (src/newRuleSyntax.ml[107,4347+20]..[107,4347+21])
                              ]
                          ]
                  <case>
                    pattern (src/newRuleSyntax.ml[108,4369+4]..[109,4386+13])
                      Ppat_or
                      pattern (src/newRuleSyntax.ml[108,4369+4]..[108,4369+16])
                        Ppat_construct "ESingleton" (src/newRuleSyntax.ml[108,4369+4]..[108,4369+14])
                        Some
                          []
                          pattern (src/newRuleSyntax.ml[108,4369+15]..[108,4369+16])
                            Ppat_any
                      pattern (src/newRuleSyntax.ml[109,4386+4]..[109,4386+13])
                        Ppat_construct "EAction" (src/newRuleSyntax.ml[109,4386+4]..[109,4386+11])
                        Some
                          []
                          pattern (src/newRuleSyntax.ml[109,4386+12]..[109,4386+13])
                            Ppat_any
                    expression (src/newRuleSyntax.ml[110,4403+6]..[110,4403+8])
                      Pexp_construct "[]" (src/newRuleSyntax.ml[110,4403+6]..[110,4403+8])
                      None
                ]
            core_type (src/newRuleSyntax.ml[103,4223+40]..[103,4223+52])
              Ptyp_constr "list" (src/newRuleSyntax.ml[103,4223+48]..[103,4223+52])
              [
                core_type (src/newRuleSyntax.ml[103,4223+40]..[103,4223+47])
                  Ptyp_constr "pattern" (src/newRuleSyntax.ml[103,4223+40]..[103,4223+47])
                  []
              ]
    ]
  structure_item (src/newRuleSyntax.ml[112,4413+0]..[113,4460+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[112,4413+4]..[112,4413+19])
          Ppat_var "check_linearity" (src/newRuleSyntax.ml[112,4413+4]..[112,4413+19])
        core_type (src/newRuleSyntax.ml[112,4413+22]..[112,4413+44])
          Ptyp_arrow
          Nolabel
          core_type (src/newRuleSyntax.ml[112,4413+22]..[112,4413+36])
            Ptyp_constr "seq_expression" (src/newRuleSyntax.ml[112,4413+22]..[112,4413+36])
            []
          core_type (src/newRuleSyntax.ml[112,4413+40]..[112,4413+44])
            Ptyp_constr "unit" (src/newRuleSyntax.ml[112,4413+40]..[112,4413+44])
            []
        expression (src/newRuleSyntax.ml[113,4460+2]..[113,4460+29])
          Pexp_apply
          expression (src/newRuleSyntax.ml[113,4460+11]..[113,4460+13])
            Pexp_ident ">>" (src/newRuleSyntax.ml[113,4460+11]..[113,4460+13])
          [
            <arg>
            Nolabel
              expression (src/newRuleSyntax.ml[113,4460+2]..[113,4460+10])
                Pexp_ident "patterns" (src/newRuleSyntax.ml[113,4460+2]..[113,4460+10])
            <arg>
            Nolabel
              expression (src/newRuleSyntax.ml[113,4460+14]..[113,4460+29])
                Pexp_ident "check_linearity" (src/newRuleSyntax.ml[113,4460+14]..[113,4460+29])
          ]
    ]
  structure_item (src/newRuleSyntax.ml[119,4637+0]..[127,4819+44])
    Pstr_value Rec
    [
      <def>
        pattern (src/newRuleSyntax.ml[119,4637+8]..[119,4637+18])
          Ppat_var "tilde_used" (src/newRuleSyntax.ml[119,4637+8]..[119,4637+18])
        expression (src/newRuleSyntax.ml[119,4637+19]..[127,4819+44]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/newRuleSyntax.ml[119,4637+19]..[119,4637+28])
            Ppat_var "positions" (src/newRuleSyntax.ml[119,4637+19]..[119,4637+28])
          expression (src/newRuleSyntax.ml[119,4637+29]..[127,4819+44]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/newRuleSyntax.ml[119,4637+29]..[119,4637+42])
              Ppat_constraint
              pattern (src/newRuleSyntax.ml[119,4637+30]..[119,4637+31])
                Ppat_var "p" (src/newRuleSyntax.ml[119,4637+30]..[119,4637+31])
              core_type (src/newRuleSyntax.ml[119,4637+34]..[119,4637+41])
                Ptyp_constr "pattern" (src/newRuleSyntax.ml[119,4637+34]..[119,4637+41])
                []
            expression (src/newRuleSyntax.ml[120,4682+2]..[127,4819+44])
              Pexp_match
              expression (src/newRuleSyntax.ml[120,4682+8]..[120,4682+9])
                Pexp_ident "p" (src/newRuleSyntax.ml[120,4682+8]..[120,4682+9])
              [
                <case>
                  pattern (src/newRuleSyntax.ml[121,4697+4]..[122,4713+18])
                    Ppat_or
                    pattern (src/newRuleSyntax.ml[121,4697+4]..[121,4697+15])
                      Ppat_construct "SemPatVar" (src/newRuleSyntax.ml[121,4697+4]..[121,4697+13])
                      Some
                        []
                        pattern (src/newRuleSyntax.ml[121,4697+14]..[121,4697+15])
                          Ppat_any
                    pattern (src/newRuleSyntax.ml[122,4713+4]..[122,4713+18])
                      Ppat_construct "SemPatWildcard" (src/newRuleSyntax.ml[122,4713+4]..[122,4713+18])
                      None
                  expression (src/newRuleSyntax.ml[123,4735+6]..[123,4735+15])
                    Pexp_ident "positions" (src/newRuleSyntax.ml[123,4735+6]..[123,4735+15])
                <case>
                  pattern (src/newRuleSyntax.ml[124,4751+4]..[124,4751+19])
                    Ppat_construct "SemPatTilde" (src/newRuleSyntax.ml[124,4751+4]..[124,4751+15])
                    Some
                      []
                      pattern (src/newRuleSyntax.ml[124,4751+16]..[124,4751+19])
                        Ppat_var "pos" (src/newRuleSyntax.ml[124,4751+16]..[124,4751+19])
                  expression (src/newRuleSyntax.ml[125,4774+6]..[125,4774+22])
                    Pexp_construct "::" (src/newRuleSyntax.ml[125,4774+10]..[125,4774+12])
                    Some
                      expression (src/newRuleSyntax.ml[125,4774+6]..[125,4774+22]) ghost
                        Pexp_tuple
                        [
                          expression (src/newRuleSyntax.ml[125,4774+6]..[125,4774+9])
                            Pexp_ident "pos" (src/newRuleSyntax.ml[125,4774+6]..[125,4774+9])
                          expression (src/newRuleSyntax.ml[125,4774+13]..[125,4774+22])
                            Pexp_ident "positions" (src/newRuleSyntax.ml[125,4774+13]..[125,4774+22])
                        ]
                <case>
                  pattern (src/newRuleSyntax.ml[126,4797+4]..[126,4797+18])
                    Ppat_construct "SemPatTuple" (src/newRuleSyntax.ml[126,4797+4]..[126,4797+15])
                    Some
                      []
                      pattern (src/newRuleSyntax.ml[126,4797+16]..[126,4797+18])
                        Ppat_var "ps" (src/newRuleSyntax.ml[126,4797+16]..[126,4797+18])
                  expression (src/newRuleSyntax.ml[127,4819+6]..[127,4819+44])
                    Pexp_apply
                    expression (src/newRuleSyntax.ml[127,4819+6]..[127,4819+20])
                      Pexp_ident "List.fold_left" (src/newRuleSyntax.ml[127,4819+6]..[127,4819+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[127,4819+21]..[127,4819+31])
                          Pexp_ident "tilde_used" (src/newRuleSyntax.ml[127,4819+21]..[127,4819+31])
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[127,4819+32]..[127,4819+41])
                          Pexp_ident "positions" (src/newRuleSyntax.ml[127,4819+32]..[127,4819+41])
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[127,4819+42]..[127,4819+44])
                          Pexp_ident "ps" (src/newRuleSyntax.ml[127,4819+42]..[127,4819+44])
                    ]
              ]
    ]
  structure_item (src/newRuleSyntax.ml[132,5017+0]..[143,5495+55])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[132,5017+4]..[132,5017+22])
          Ppat_var "tilde_used_warning" (src/newRuleSyntax.ml[132,5017+4]..[132,5017+22])
        expression (src/newRuleSyntax.ml[132,5017+23]..[143,5495+55]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/newRuleSyntax.ml[132,5017+23]..[132,5017+32])
            Ppat_var "positions" (src/newRuleSyntax.ml[132,5017+23]..[132,5017+32])
          expression (src/newRuleSyntax.ml[133,5052+2]..[143,5495+55])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/newRuleSyntax.ml[133,5052+6]..[133,5052+7])
                  Ppat_var "n" (src/newRuleSyntax.ml[133,5052+6]..[133,5052+7])
                expression (src/newRuleSyntax.ml[133,5052+10]..[133,5052+31])
                  Pexp_apply
                  expression (src/newRuleSyntax.ml[133,5052+10]..[133,5052+21])
                    Pexp_ident "List.length" (src/newRuleSyntax.ml[133,5052+10]..[133,5052+21])
                  [
                    <arg>
                    Nolabel
                      expression (src/newRuleSyntax.ml[133,5052+22]..[133,5052+31])
                        Pexp_ident "positions" (src/newRuleSyntax.ml[133,5052+22]..[133,5052+31])
                  ]
            ]
            expression (src/newRuleSyntax.ml[134,5087+2]..[143,5495+55])
              Pexp_ifthenelse
              expression (src/newRuleSyntax.ml[134,5087+5]..[134,5087+10])
                Pexp_apply
                expression (src/newRuleSyntax.ml[134,5087+7]..[134,5087+8])
                  Pexp_ident ">" (src/newRuleSyntax.ml[134,5087+7]..[134,5087+8])
                [
                  <arg>
                  Nolabel
                    expression (src/newRuleSyntax.ml[134,5087+5]..[134,5087+6])
                      Pexp_ident "n" (src/newRuleSyntax.ml[134,5087+5]..[134,5087+6])
                  <arg>
                  Nolabel
                    expression (src/newRuleSyntax.ml[134,5087+9]..[134,5087+10])
                      Pexp_constant PConst_int (0,None)
                ]
              expression (src/newRuleSyntax.ml[135,5103+4]..[143,5495+55])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/newRuleSyntax.ml[135,5103+8]..[135,5103+44])
                      Ppat_tuple
                      [
                        pattern (src/newRuleSyntax.ml[135,5103+8]..[135,5103+22])
                          Ppat_var "variables_have" (src/newRuleSyntax.ml[135,5103+8]..[135,5103+22])
                        pattern (src/newRuleSyntax.ml[135,5103+24]..[135,5103+33])
                          Ppat_var "tpatterns" (src/newRuleSyntax.ml[135,5103+24]..[135,5103+33])
                        pattern (src/newRuleSyntax.ml[135,5103+35]..[135,5103+44])
                          Ppat_var "wpatterns" (src/newRuleSyntax.ml[135,5103+35]..[135,5103+44])
                      ]
                    expression (src/newRuleSyntax.ml[136,5150+6]..[137,5224+64])
                      Pexp_ifthenelse
                      expression (src/newRuleSyntax.ml[136,5150+9]..[136,5150+14])
                        Pexp_apply
                        expression (src/newRuleSyntax.ml[136,5150+11]..[136,5150+12])
                          Pexp_ident "=" (src/newRuleSyntax.ml[136,5150+11]..[136,5150+12])
                        [
                          <arg>
                          Nolabel
                            expression (src/newRuleSyntax.ml[136,5150+9]..[136,5150+10])
                              Pexp_ident "n" (src/newRuleSyntax.ml[136,5150+9]..[136,5150+10])
                          <arg>
                          Nolabel
                            expression (src/newRuleSyntax.ml[136,5150+13]..[136,5150+14])
                              Pexp_constant PConst_int (1,None)
                        ]
                      expression (src/newRuleSyntax.ml[136,5150+20]..[136,5150+73])
                        Pexp_tuple
                        [
                          expression (src/newRuleSyntax.ml[136,5150+20]..[136,5150+34])
                            Pexp_constant PConst_string("variable has",(src/newRuleSyntax.ml[136,5150+21]..[136,5150+33]),None)
                          expression (src/newRuleSyntax.ml[136,5150+36]..[136,5150+49])
                            Pexp_constant PConst_string("a ~ pattern",(src/newRuleSyntax.ml[136,5150+37]..[136,5150+48]),None)
                          expression (src/newRuleSyntax.ml[136,5150+51]..[136,5150+73])
                            Pexp_constant PConst_string("a wildcard pattern _",(src/newRuleSyntax.ml[136,5150+52]..[136,5150+72]),None)
                        ]
                      Some
                        expression (src/newRuleSyntax.ml[137,5224+11]..[137,5224+64])
                          Pexp_tuple
                          [
                            expression (src/newRuleSyntax.ml[137,5224+11]..[137,5224+27])
                              Pexp_constant PConst_string("variables have",(src/newRuleSyntax.ml[137,5224+12]..[137,5224+26]),None)
                            expression (src/newRuleSyntax.ml[137,5224+29]..[137,5224+41])
                              Pexp_constant PConst_string("~ patterns",(src/newRuleSyntax.ml[137,5224+30]..[137,5224+40]),None)
                            expression (src/newRuleSyntax.ml[137,5224+43]..[137,5224+64])
                              Pexp_constant PConst_string("wildcard patterns _",(src/newRuleSyntax.ml[137,5224+44]..[137,5224+63]),None)
                          ]
                ]
                expression (src/newRuleSyntax.ml[139,5296+4]..[143,5495+55])
                  Pexp_apply
                  expression (src/newRuleSyntax.ml[139,5296+4]..[139,5296+17])
                    Pexp_ident "Error.warning" (src/newRuleSyntax.ml[139,5296+4]..[139,5296+17])
                  [
                    <arg>
                    Nolabel
                      expression (src/newRuleSyntax.ml[139,5296+18]..[139,5296+27])
                        Pexp_ident "positions" (src/newRuleSyntax.ml[139,5296+18]..[139,5296+27])
                    <arg>
                    Nolabel
                      expression (src/newRuleSyntax.ml[140,5324+6]..[142,5452+42])
                        Pexp_constant PConst_string("%s nameless %s been introduced by %s,\nyet this sequence does not end in a point-free semantic action <...>.\nPerhaps %s should be used instead.",(src/newRuleSyntax.ml[140,5324+7]..[142,5452+41]),None)
                    <arg>
                    Nolabel
                      expression (src/newRuleSyntax.ml[143,5495+6]..[143,5495+20])
                        Pexp_apply
                        expression (src/newRuleSyntax.ml[143,5495+7]..[143,5495+17])
                          Pexp_ident "Misc.count" (src/newRuleSyntax.ml[143,5495+7]..[143,5495+17])
                        [
                          <arg>
                          Nolabel
                            expression (src/newRuleSyntax.ml[143,5495+18]..[143,5495+19])
                              Pexp_ident "n" (src/newRuleSyntax.ml[143,5495+18]..[143,5495+19])
                        ]
                    <arg>
                    Nolabel
                      expression (src/newRuleSyntax.ml[143,5495+21]..[143,5495+35])
                        Pexp_ident "variables_have" (src/newRuleSyntax.ml[143,5495+21]..[143,5495+35])
                    <arg>
                    Nolabel
                      expression (src/newRuleSyntax.ml[143,5495+36]..[143,5495+45])
                        Pexp_ident "tpatterns" (src/newRuleSyntax.ml[143,5495+36]..[143,5495+45])
                    <arg>
                    Nolabel
                      expression (src/newRuleSyntax.ml[143,5495+46]..[143,5495+55])
                        Pexp_ident "wpatterns" (src/newRuleSyntax.ml[143,5495+46]..[143,5495+55])
                  ]
              None
    ]
  structure_item (src/newRuleSyntax.ml[153,5925+0]..[174,6418+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[153,5925+4]..[153,5925+11])
          Ppat_var "pattern" (src/newRuleSyntax.ml[153,5925+4]..[153,5925+11])
        expression (src/newRuleSyntax.ml[153,5925+12]..[174,6418+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/newRuleSyntax.ml[153,5925+12]..[153,5925+29])
            Ppat_constraint
            pattern (src/newRuleSyntax.ml[153,5925+13]..[153,5925+15])
              Ppat_var "x1" (src/newRuleSyntax.ml[153,5925+13]..[153,5925+15])
            core_type (src/newRuleSyntax.ml[153,5925+18]..[153,5925+28])
              Ptyp_constr "identifier" (src/newRuleSyntax.ml[153,5925+18]..[153,5925+28])
              []
          expression (src/newRuleSyntax.ml[153,5925+30]..[174,6418+11]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/newRuleSyntax.ml[153,5925+30]..[153,5925+43])
              Ppat_constraint
              pattern (src/newRuleSyntax.ml[153,5925+31]..[153,5925+32])
                Ppat_var "p" (src/newRuleSyntax.ml[153,5925+31]..[153,5925+32])
              core_type (src/newRuleSyntax.ml[153,5925+35]..[153,5925+42])
                Ptyp_constr "pattern" (src/newRuleSyntax.ml[153,5925+35]..[153,5925+42])
                []
            expression (src/newRuleSyntax.ml[153,5925+44]..[174,6418+11])
              Pexp_constraint
              expression (src/newRuleSyntax.ml[155,5985+2]..[174,6418+11])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/newRuleSyntax.ml[155,5985+6]..[155,5985+7])
                      Ppat_var "c" (src/newRuleSyntax.ml[155,5985+6]..[155,5985+7])
                    expression (src/newRuleSyntax.ml[155,5985+10]..[155,5985+15])
                      Pexp_apply
                      expression (src/newRuleSyntax.ml[155,5985+10]..[155,5985+13])
                        Pexp_ident "ref" (src/newRuleSyntax.ml[155,5985+10]..[155,5985+13])
                      [
                        <arg>
                        Nolabel
                          expression (src/newRuleSyntax.ml[155,5985+14]..[155,5985+15])
                            Pexp_constant PConst_int (1,None)
                      ]
                ]
                expression (src/newRuleSyntax.ml[156,6004+2]..[174,6418+11])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/newRuleSyntax.ml[156,6004+6]..[156,6004+11])
                        Ppat_var "fresh" (src/newRuleSyntax.ml[156,6004+6]..[156,6004+11])
                      expression (src/newRuleSyntax.ml[156,6004+12]..[156,6004+65]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/newRuleSyntax.ml[156,6004+12]..[156,6004+14])
                          Ppat_construct "()" (src/newRuleSyntax.ml[156,6004+12]..[156,6004+14])
                          None
                        expression (src/newRuleSyntax.ml[156,6004+17]..[156,6004+65])
                          Pexp_apply
                          expression (src/newRuleSyntax.ml[156,6004+17]..[156,6004+31])
                            Pexp_ident "Printf.sprintf" (src/newRuleSyntax.ml[156,6004+17]..[156,6004+31])
                          [
                            <arg>
                            Nolabel
                              expression (src/newRuleSyntax.ml[156,6004+32]..[156,6004+39])
                                Pexp_constant PConst_string("%s_%d",(src/newRuleSyntax.ml[156,6004+33]..[156,6004+38]),None)
                            <arg>
                            Nolabel
                              expression (src/newRuleSyntax.ml[156,6004+40]..[156,6004+42])
                                Pexp_ident "x1" (src/newRuleSyntax.ml[156,6004+40]..[156,6004+42])
                            <arg>
                            Nolabel
                              expression (src/newRuleSyntax.ml[156,6004+43]..[156,6004+65])
                                Pexp_apply
                                expression (src/newRuleSyntax.ml[156,6004+44]..[156,6004+62])
                                  Pexp_ident "Misc.postincrement" (src/newRuleSyntax.ml[156,6004+44]..[156,6004+62])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/newRuleSyntax.ml[156,6004+63]..[156,6004+64])
                                      Pexp_ident "c" (src/newRuleSyntax.ml[156,6004+63]..[156,6004+64])
                                ]
                          ]
                  ]
                  expression (src/newRuleSyntax.ml[158,6074+2]..[174,6418+11])
                    Pexp_let Rec
                    [
                      <def>
                        pattern (src/newRuleSyntax.ml[158,6074+10]..[158,6074+17])
                          Ppat_var "pattern" (src/newRuleSyntax.ml[158,6074+10]..[158,6074+17])
                        expression (src/newRuleSyntax.ml[158,6074+18]..[171,6372+39]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/newRuleSyntax.ml[158,6074+18]..[158,6074+19])
                            Ppat_var "p" (src/newRuleSyntax.ml[158,6074+18]..[158,6074+19])
                          expression (src/newRuleSyntax.ml[159,6096+4]..[171,6372+39])
                            Pexp_match
                            expression (src/newRuleSyntax.ml[159,6096+10]..[159,6096+11])
                              Pexp_ident "p" (src/newRuleSyntax.ml[159,6096+10]..[159,6096+11])
                            [
                              <case>
                                pattern (src/newRuleSyntax.ml[160,6113+6]..[160,6113+17])
                                  Ppat_construct "SemPatVar" (src/newRuleSyntax.ml[160,6113+6]..[160,6113+15])
                                  Some
                                    []
                                    pattern (src/newRuleSyntax.ml[160,6113+16]..[160,6113+17])
                                      Ppat_var "x" (src/newRuleSyntax.ml[160,6113+16]..[160,6113+17])
                                expression (src/newRuleSyntax.ml[161,6134+8]..[161,6134+35])
                                  Pexp_construct "IL.PVar" (src/newRuleSyntax.ml[161,6134+8]..[161,6134+15])
                                  Some
                                    expression (src/newRuleSyntax.ml[161,6134+16]..[161,6134+35])
                                      Pexp_apply
                                      expression (src/newRuleSyntax.ml[161,6134+17]..[161,6134+32])
                                        Pexp_ident "Positions.value" (src/newRuleSyntax.ml[161,6134+17]..[161,6134+32])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/newRuleSyntax.ml[161,6134+33]..[161,6134+34])
                                            Pexp_ident "x" (src/newRuleSyntax.ml[161,6134+33]..[161,6134+34])
                                      ]
                              <case>
                                pattern (src/newRuleSyntax.ml[162,6170+6]..[162,6170+20])
                                  Ppat_construct "SemPatWildcard" (src/newRuleSyntax.ml[162,6170+6]..[162,6170+20])
                                  None
                                expression (src/newRuleSyntax.ml[163,6194+8]..[163,6194+20])
                                  Pexp_construct "IL.PWildcard" (src/newRuleSyntax.ml[163,6194+8]..[163,6194+20])
                                  None
                              <case>
                                pattern (src/newRuleSyntax.ml[164,6215+6]..[164,6215+19])
                                  Ppat_construct "SemPatTilde" (src/newRuleSyntax.ml[164,6215+6]..[164,6215+17])
                                  Some
                                    []
                                    pattern (src/newRuleSyntax.ml[164,6215+18]..[164,6215+19])
                                      Ppat_any
                                expression (src/newRuleSyntax.ml[165,6238+8]..[165,6238+25])
                                  Pexp_construct "IL.PVar" (src/newRuleSyntax.ml[165,6238+8]..[165,6238+15])
                                  Some
                                    expression (src/newRuleSyntax.ml[165,6238+16]..[165,6238+25])
                                      Pexp_apply
                                      expression (src/newRuleSyntax.ml[165,6238+17]..[165,6238+22])
                                        Pexp_ident "fresh" (src/newRuleSyntax.ml[165,6238+17]..[165,6238+22])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/newRuleSyntax.ml[165,6238+22]..[165,6238+24])
                                            Pexp_construct "()" (src/newRuleSyntax.ml[165,6238+22]..[165,6238+24])
                                            None
                                      ]
                              <case>
                                pattern (src/newRuleSyntax.ml[166,6264+6]..[166,6264+20])
                                  Ppat_construct "SemPatTuple" (src/newRuleSyntax.ml[166,6264+6]..[166,6264+17])
                                  Some
                                    []
                                    pattern (src/newRuleSyntax.ml[166,6264+18]..[166,6264+20])
                                      Ppat_construct "[]" (src/newRuleSyntax.ml[166,6264+18]..[166,6264+20])
                                      None
                                expression (src/newRuleSyntax.ml[167,6288+8]..[167,6288+16])
                                  Pexp_construct "IL.PUnit" (src/newRuleSyntax.ml[167,6288+8]..[167,6288+16])
                                  None
                              <case>
                                pattern (src/newRuleSyntax.ml[168,6305+6]..[168,6305+21])
                                  Ppat_construct "SemPatTuple" (src/newRuleSyntax.ml[168,6305+6]..[168,6305+17])
                                  Some
                                    []
                                    pattern (src/newRuleSyntax.ml[168,6305+18]..[168,6305+21])
                                      Ppat_construct "::" (src/newRuleSyntax.ml[168,6305+19]..[168,6305+21]) ghost
                                      Some
                                        []
                                        pattern (src/newRuleSyntax.ml[168,6305+19]..[168,6305+21]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (src/newRuleSyntax.ml[168,6305+19]..[168,6305+20])
                                              Ppat_var "p" (src/newRuleSyntax.ml[168,6305+19]..[168,6305+20])
                                            pattern (src/newRuleSyntax.ml[168,6305+20]..[168,6305+21]) ghost
                                              Ppat_construct "[]" (src/newRuleSyntax.ml[168,6305+20]..[168,6305+21]) ghost
                                              None
                                          ]
                                expression (src/newRuleSyntax.ml[169,6330+8]..[169,6330+17])
                                  Pexp_apply
                                  expression (src/newRuleSyntax.ml[169,6330+8]..[169,6330+15])
                                    Pexp_ident "pattern" (src/newRuleSyntax.ml[169,6330+8]..[169,6330+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/newRuleSyntax.ml[169,6330+16]..[169,6330+17])
                                        Pexp_ident "p" (src/newRuleSyntax.ml[169,6330+16]..[169,6330+17])
                                  ]
                              <case>
                                pattern (src/newRuleSyntax.ml[170,6348+6]..[170,6348+20])
                                  Ppat_construct "SemPatTuple" (src/newRuleSyntax.ml[170,6348+6]..[170,6348+17])
                                  Some
                                    []
                                    pattern (src/newRuleSyntax.ml[170,6348+18]..[170,6348+20])
                                      Ppat_var "ps" (src/newRuleSyntax.ml[170,6348+18]..[170,6348+20])
                                expression (src/newRuleSyntax.ml[171,6372+8]..[171,6372+39])
                                  Pexp_construct "IL.PTuple" (src/newRuleSyntax.ml[171,6372+8]..[171,6372+17])
                                  Some
                                    expression (src/newRuleSyntax.ml[171,6372+18]..[171,6372+39])
                                      Pexp_apply
                                      expression (src/newRuleSyntax.ml[171,6372+19]..[171,6372+27])
                                        Pexp_ident "List.map" (src/newRuleSyntax.ml[171,6372+19]..[171,6372+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/newRuleSyntax.ml[171,6372+28]..[171,6372+35])
                                            Pexp_ident "pattern" (src/newRuleSyntax.ml[171,6372+28]..[171,6372+35])
                                        <arg>
                                        Nolabel
                                          expression (src/newRuleSyntax.ml[171,6372+36]..[171,6372+38])
                                            Pexp_ident "ps" (src/newRuleSyntax.ml[171,6372+36]..[171,6372+38])
                                      ]
                            ]
                    ]
                    expression (src/newRuleSyntax.ml[174,6418+2]..[174,6418+11])
                      Pexp_apply
                      expression (src/newRuleSyntax.ml[174,6418+2]..[174,6418+9])
                        Pexp_ident "pattern" (src/newRuleSyntax.ml[174,6418+2]..[174,6418+9])
                      [
                        <arg>
                        Nolabel
                          expression (src/newRuleSyntax.ml[174,6418+10]..[174,6418+11])
                            Pexp_ident "p" (src/newRuleSyntax.ml[174,6418+10]..[174,6418+11])
                      ]
              core_type (src/newRuleSyntax.ml[153,5925+46]..[153,5925+56])
                Ptyp_constr "IL.pattern" (src/newRuleSyntax.ml[153,5925+46]..[153,5925+56])
                []
    ]
  structure_item (src/newRuleSyntax.ml[180,6639+0]..[192,6870+18])
    Pstr_value Rec
    [
      <def>
        pattern (src/newRuleSyntax.ml[180,6639+8]..[180,6639+10])
          Ppat_var "bv" (src/newRuleSyntax.ml[180,6639+8]..[180,6639+10])
        expression (src/newRuleSyntax.ml[180,6639+11]..[192,6870+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/newRuleSyntax.ml[180,6639+11]..[180,6639+15])
            Ppat_var "accu" (src/newRuleSyntax.ml[180,6639+11]..[180,6639+15])
          expression (src/newRuleSyntax.ml[180,6639+16]..[192,6870+18]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/newRuleSyntax.ml[180,6639+16]..[180,6639+17])
              Ppat_var "p" (src/newRuleSyntax.ml[180,6639+16]..[180,6639+17])
            expression (src/newRuleSyntax.ml[181,6659+2]..[192,6870+18])
              Pexp_match
              expression (src/newRuleSyntax.ml[181,6659+8]..[181,6659+9])
                Pexp_ident "p" (src/newRuleSyntax.ml[181,6659+8]..[181,6659+9])
              [
                <case>
                  pattern (src/newRuleSyntax.ml[182,6674+4]..[182,6674+13])
                    Ppat_construct "IL.PVar" (src/newRuleSyntax.ml[182,6674+4]..[182,6674+11])
                    Some
                      []
                      pattern (src/newRuleSyntax.ml[182,6674+12]..[182,6674+13])
                        Ppat_var "x" (src/newRuleSyntax.ml[182,6674+12]..[182,6674+13])
                  expression (src/newRuleSyntax.ml[183,6691+6]..[183,6691+15])
                    Pexp_construct "::" (src/newRuleSyntax.ml[183,6691+8]..[183,6691+10])
                    Some
                      expression (src/newRuleSyntax.ml[183,6691+6]..[183,6691+15]) ghost
                        Pexp_tuple
                        [
                          expression (src/newRuleSyntax.ml[183,6691+6]..[183,6691+7])
                            Pexp_ident "x" (src/newRuleSyntax.ml[183,6691+6]..[183,6691+7])
                          expression (src/newRuleSyntax.ml[183,6691+11]..[183,6691+15])
                            Pexp_ident "accu" (src/newRuleSyntax.ml[183,6691+11]..[183,6691+15])
                        ]
                <case>
                  pattern (src/newRuleSyntax.ml[184,6707+4]..[184,6707+16])
                    Ppat_construct "IL.PWildcard" (src/newRuleSyntax.ml[184,6707+4]..[184,6707+16])
                    None
                  expression (src/newRuleSyntax.ml[185,6727+6]..[185,6727+10])
                    Pexp_ident "accu" (src/newRuleSyntax.ml[185,6727+6]..[185,6727+10])
                <case>
                  pattern (src/newRuleSyntax.ml[186,6738+4]..[186,6738+12])
                    Ppat_construct "IL.PUnit" (src/newRuleSyntax.ml[186,6738+4]..[186,6738+12])
                    None
                  expression (src/newRuleSyntax.ml[187,6754+6]..[187,6754+10])
                    Pexp_ident "accu" (src/newRuleSyntax.ml[187,6754+6]..[187,6754+10])
                <case>
                  pattern (src/newRuleSyntax.ml[188,6765+4]..[188,6765+16])
                    Ppat_construct "IL.PTuple" (src/newRuleSyntax.ml[188,6765+4]..[188,6765+13])
                    Some
                      []
                      pattern (src/newRuleSyntax.ml[188,6765+14]..[188,6765+16])
                        Ppat_var "ps" (src/newRuleSyntax.ml[188,6765+14]..[188,6765+16])
                  expression (src/newRuleSyntax.ml[189,6785+6]..[189,6785+31])
                    Pexp_apply
                    expression (src/newRuleSyntax.ml[189,6785+6]..[189,6785+20])
                      Pexp_ident "List.fold_left" (src/newRuleSyntax.ml[189,6785+6]..[189,6785+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[189,6785+21]..[189,6785+23])
                          Pexp_ident "bv" (src/newRuleSyntax.ml[189,6785+21]..[189,6785+23])
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[189,6785+24]..[189,6785+28])
                          Pexp_ident "accu" (src/newRuleSyntax.ml[189,6785+24]..[189,6785+28])
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[189,6785+29]..[189,6785+31])
                          Pexp_ident "ps" (src/newRuleSyntax.ml[189,6785+29]..[189,6785+31])
                    ]
                <case>
                  pattern (src/newRuleSyntax.ml[190,6817+4]..[190,6817+5])
                    Ppat_any
                  expression (src/newRuleSyntax.ml[192,6870+6]..[192,6870+18])
                    Pexp_assert
                    expression (src/newRuleSyntax.ml[192,6870+13]..[192,6870+18])
                      Pexp_construct "false" (src/newRuleSyntax.ml[192,6870+13]..[192,6870+18])
                      None
              ]
    ]
  structure_item (src/newRuleSyntax.ml[198,7029+0]..[201,7127+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[198,7029+4]..[198,7029+14])
          Ppat_var "attributes" (src/newRuleSyntax.ml[198,7029+4]..[198,7029+14])
        expression (src/newRuleSyntax.ml[198,7029+15]..[201,7127+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/newRuleSyntax.ml[198,7029+15]..[198,7029+38])
            Ppat_constraint
            pattern (src/newRuleSyntax.ml[198,7029+16]..[198,7029+17])
              Ppat_var "e" (src/newRuleSyntax.ml[198,7029+16]..[198,7029+17])
            core_type (src/newRuleSyntax.ml[198,7029+20]..[198,7029+37])
              Ptyp_constr "symbol_expression" (src/newRuleSyntax.ml[198,7029+20]..[198,7029+37])
              []
          expression (src/newRuleSyntax.ml[198,7029+39]..[201,7127+11])
            Pexp_constraint
            expression (src/newRuleSyntax.ml[199,7083+2]..[201,7127+11])
              Pexp_match
              expression (src/newRuleSyntax.ml[199,7083+8]..[199,7083+9])
                Pexp_ident "e" (src/newRuleSyntax.ml[199,7083+8]..[199,7083+9])
              [
                <case>
                  pattern (src/newRuleSyntax.ml[200,7098+4]..[200,7098+25])
                    Ppat_construct "ESymbol" (src/newRuleSyntax.ml[200,7098+4]..[200,7098+11])
                    Some
                      []
                      pattern (src/newRuleSyntax.ml[200,7098+12]..[200,7098+25])
                        Ppat_tuple
                        [
                          pattern (src/newRuleSyntax.ml[200,7098+13]..[200,7098+14])
                            Ppat_any
                          pattern (src/newRuleSyntax.ml[200,7098+16]..[200,7098+17])
                            Ppat_any
                          pattern (src/newRuleSyntax.ml[200,7098+19]..[200,7098+24])
                            Ppat_var "attrs" (src/newRuleSyntax.ml[200,7098+19]..[200,7098+24])
                        ]
                  expression (src/newRuleSyntax.ml[201,7127+6]..[201,7127+11])
                    Pexp_ident "attrs" (src/newRuleSyntax.ml[201,7127+6]..[201,7127+11])
              ]
            core_type (src/newRuleSyntax.ml[198,7029+41]..[198,7029+51])
              Ptyp_constr "attributes" (src/newRuleSyntax.ml[198,7029+41]..[198,7029+51])
              []
    ]
  structure_item (src/newRuleSyntax.ml[208,7353+0]..[245,9210+1])
    Pstr_type Rec
    [
      type_declaration "context" (src/newRuleSyntax.ml[208,7353+5]..[208,7353+12]) (src/newRuleSyntax.ml[208,7353+0]..[245,9210+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (src/newRuleSyntax.ml[211,7429+2]..[211,7429+19])
                Immutable
                "pos" (src/newRuleSyntax.ml[211,7429+2]..[211,7429+5])                core_type (src/newRuleSyntax.ml[211,7429+7]..[211,7429+18])
                  Ptyp_constr "Positions.t" (src/newRuleSyntax.ml[211,7429+7]..[211,7429+18])
                  []
              (src/newRuleSyntax.ml[216,7666+2]..[216,7666+27])
                Immutable
                "producers" (src/newRuleSyntax.ml[216,7666+2]..[216,7666+11])                core_type (src/newRuleSyntax.ml[216,7666+13]..[216,7666+26])
                  Ptyp_constr "list" (src/newRuleSyntax.ml[216,7666+22]..[216,7666+26])
                  [
                    core_type (src/newRuleSyntax.ml[216,7666+13]..[216,7666+21])
                      Ptyp_constr "producer" (src/newRuleSyntax.ml[216,7666+13]..[216,7666+21])
                      []
                  ]
              (src/newRuleSyntax.ml[223,8064+2]..[223,8064+30])
                Immutable
                "uxs" (src/newRuleSyntax.ml[223,8064+2]..[223,8064+5])                core_type (src/newRuleSyntax.ml[223,8064+7]..[223,8064+29])
                  Ptyp_constr "list" (src/newRuleSyntax.ml[223,8064+25]..[223,8064+29])
                  [
                    core_type (src/newRuleSyntax.ml[223,8064+7]..[223,8064+24])
                      Ptyp_constr "option" (src/newRuleSyntax.ml[223,8064+18]..[223,8064+24])
                      [
                        core_type (src/newRuleSyntax.ml[223,8064+7]..[223,8064+17])
                          Ptyp_constr "identifier" (src/newRuleSyntax.ml[223,8064+7]..[223,8064+17])
                          []
                      ]
                  ]
              (src/newRuleSyntax.ml[227,8251+2]..[227,8251+29])
                Immutable
                "bindings" (src/newRuleSyntax.ml[227,8251+2]..[227,8251+10])                core_type (src/newRuleSyntax.ml[227,8251+12]..[227,8251+28])
                  Ptyp_arrow
                  Nolabel
                  core_type (src/newRuleSyntax.ml[227,8251+12]..[227,8251+18])
                    Ptyp_constr "action" (src/newRuleSyntax.ml[227,8251+12]..[227,8251+18])
                    []
                  core_type (src/newRuleSyntax.ml[227,8251+22]..[227,8251+28])
                    Ptyp_constr "action" (src/newRuleSyntax.ml[227,8251+22]..[227,8251+28])
                    []
              (src/newRuleSyntax.ml[234,8663+2]..[234,8663+25])
                Immutable
                "tuple" (src/newRuleSyntax.ml[234,8663+2]..[234,8663+7])                core_type (src/newRuleSyntax.ml[234,8663+9]..[234,8663+24])
                  Ptyp_constr "list" (src/newRuleSyntax.ml[234,8663+20]..[234,8663+24])
                  [
                    core_type (src/newRuleSyntax.ml[234,8663+9]..[234,8663+19])
                      Ptyp_constr "identifier" (src/newRuleSyntax.ml[234,8663+9]..[234,8663+19])
                      []
                  ]
              (src/newRuleSyntax.ml[243,9174+2]..[243,9174+34])
                Immutable
                "tilde_used" (src/newRuleSyntax.ml[243,9174+2]..[243,9174+12])                core_type (src/newRuleSyntax.ml[243,9174+14]..[243,9174+33])
                  Ptyp_constr "Positions.positions" (src/newRuleSyntax.ml[243,9174+14]..[243,9174+33])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/newRuleSyntax.ml[249,9239+0]..[257,9393+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[249,9239+4]..[249,9239+9])
          Ppat_var "empty" (src/newRuleSyntax.ml[249,9239+4]..[249,9239+9])
        expression (src/newRuleSyntax.ml[249,9239+10]..[257,9393+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/newRuleSyntax.ml[249,9239+10]..[249,9239+13])
            Ppat_var "pos" (src/newRuleSyntax.ml[249,9239+10]..[249,9239+13])
          expression (src/newRuleSyntax.ml[249,9239+14]..[257,9393+3])
            Pexp_constraint
            expression (src/newRuleSyntax.ml[250,9265+2]..[257,9393+3])
              Pexp_record
              [
                "pos" (src/newRuleSyntax.ml[251,9269+4]..[251,9269+7]) ghost
                  expression (src/newRuleSyntax.ml[251,9269+4]..[251,9269+7])
                    Pexp_ident "pos" (src/newRuleSyntax.ml[251,9269+4]..[251,9269+7])
                "producers" (src/newRuleSyntax.ml[252,9278+4]..[252,9278+13])
                  expression (src/newRuleSyntax.ml[252,9278+17]..[252,9278+19])
                    Pexp_construct "[]" (src/newRuleSyntax.ml[252,9278+17]..[252,9278+19])
                    None
                "uxs" (src/newRuleSyntax.ml[253,9299+4]..[253,9299+7])
                  expression (src/newRuleSyntax.ml[253,9299+17]..[253,9299+19])
                    Pexp_construct "[]" (src/newRuleSyntax.ml[253,9299+17]..[253,9299+19])
                    None
                "bindings" (src/newRuleSyntax.ml[254,9320+4]..[254,9320+12])
                  expression (src/newRuleSyntax.ml[254,9320+17]..[254,9320+29])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/newRuleSyntax.ml[254,9320+22]..[254,9320+23])
                      Ppat_var "a" (src/newRuleSyntax.ml[254,9320+22]..[254,9320+23])
                    expression (src/newRuleSyntax.ml[254,9320+27]..[254,9320+28])
                      Pexp_ident "a" (src/newRuleSyntax.ml[254,9320+27]..[254,9320+28])
                "tuple" (src/newRuleSyntax.ml[255,9351+4]..[255,9351+9])
                  expression (src/newRuleSyntax.ml[255,9351+17]..[255,9351+19])
                    Pexp_construct "[]" (src/newRuleSyntax.ml[255,9351+17]..[255,9351+19])
                    None
                "tilde_used" (src/newRuleSyntax.ml[256,9372+4]..[256,9372+14])
                  expression (src/newRuleSyntax.ml[256,9372+17]..[256,9372+19])
                    Pexp_construct "[]" (src/newRuleSyntax.ml[256,9372+17]..[256,9372+19])
                    None
              ]
              None
            core_type (src/newRuleSyntax.ml[249,9239+16]..[249,9239+23])
              Ptyp_constr "context" (src/newRuleSyntax.ml[249,9239+16]..[249,9239+23])
              []
    ]
  structure_item (src/newRuleSyntax.ml[261,9443+0]..[262,9499+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[261,9443+4]..[261,9443+8])
          Ppat_var "user" (src/newRuleSyntax.ml[261,9443+4]..[261,9443+8])
        expression (src/newRuleSyntax.ml[261,9443+9]..[262,9499+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/newRuleSyntax.ml[261,9443+9]..[261,9443+33])
            Ppat_constraint
            pattern (src/newRuleSyntax.ml[261,9443+10]..[261,9443+11])
              Ppat_var "x" (src/newRuleSyntax.ml[261,9443+10]..[261,9443+11])
            core_type (src/newRuleSyntax.ml[261,9443+14]..[261,9443+32])
              Ptyp_constr "located" (src/newRuleSyntax.ml[261,9443+25]..[261,9443+32])
              [
                core_type (src/newRuleSyntax.ml[261,9443+14]..[261,9443+24])
                  Ptyp_constr "identifier" (src/newRuleSyntax.ml[261,9443+14]..[261,9443+24])
                  []
              ]
          expression (src/newRuleSyntax.ml[261,9443+34]..[262,9499+26])
            Pexp_constraint
            expression (src/newRuleSyntax.ml[262,9499+2]..[262,9499+26])
              Pexp_construct "Some" (src/newRuleSyntax.ml[262,9499+2]..[262,9499+6])
              Some
                expression (src/newRuleSyntax.ml[262,9499+7]..[262,9499+26])
                  Pexp_apply
                  expression (src/newRuleSyntax.ml[262,9499+8]..[262,9499+23])
                    Pexp_ident "Positions.value" (src/newRuleSyntax.ml[262,9499+8]..[262,9499+23])
                  [
                    <arg>
                    Nolabel
                      expression (src/newRuleSyntax.ml[262,9499+24]..[262,9499+25])
                        Pexp_ident "x" (src/newRuleSyntax.ml[262,9499+24]..[262,9499+25])
                  ]
            core_type (src/newRuleSyntax.ml[261,9443+36]..[261,9443+53])
              Ptyp_constr "option" (src/newRuleSyntax.ml[261,9443+47]..[261,9443+53])
              [
                core_type (src/newRuleSyntax.ml[261,9443+36]..[261,9443+46])
                  Ptyp_constr "identifier" (src/newRuleSyntax.ml[261,9443+36]..[261,9443+46])
                  []
              ]
    ]
  structure_item (src/newRuleSyntax.ml[264,9527+0]..[265,9558+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[264,9527+4]..[264,9527+8])
          Ppat_var "auto" (src/newRuleSyntax.ml[264,9527+4]..[264,9527+8])
        core_type (src/newRuleSyntax.ml[264,9527+11]..[264,9527+28])
          Ptyp_constr "option" (src/newRuleSyntax.ml[264,9527+22]..[264,9527+28])
          [
            core_type (src/newRuleSyntax.ml[264,9527+11]..[264,9527+21])
              Ptyp_constr "identifier" (src/newRuleSyntax.ml[264,9527+11]..[264,9527+21])
              []
          ]
        expression (src/newRuleSyntax.ml[265,9558+2]..[265,9558+6])
          Pexp_construct "None" (src/newRuleSyntax.ml[265,9558+2]..[265,9558+6])
          None
    ]
  structure_item (src/newRuleSyntax.ml[269,9598+0]..[270,9638+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[269,9598+4]..[269,9598+13])
          Ppat_var "producers" (src/newRuleSyntax.ml[269,9598+4]..[269,9598+13])
        expression (src/newRuleSyntax.ml[269,9598+14]..[270,9638+28]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/newRuleSyntax.ml[269,9598+14]..[269,9598+21])
            Ppat_var "context" (src/newRuleSyntax.ml[269,9598+14]..[269,9598+21])
          expression (src/newRuleSyntax.ml[269,9598+22]..[270,9638+28])
            Pexp_constraint
            expression (src/newRuleSyntax.ml[270,9638+2]..[270,9638+28])
              Pexp_apply
              expression (src/newRuleSyntax.ml[270,9638+2]..[270,9638+10])
                Pexp_ident "List.rev" (src/newRuleSyntax.ml[270,9638+2]..[270,9638+10])
              [
                <arg>
                Nolabel
                  expression (src/newRuleSyntax.ml[270,9638+11]..[270,9638+28])
                    Pexp_field
                    expression (src/newRuleSyntax.ml[270,9638+11]..[270,9638+18])
                      Pexp_ident "context" (src/newRuleSyntax.ml[270,9638+11]..[270,9638+18])
                    "producers" (src/newRuleSyntax.ml[270,9638+19]..[270,9638+28])
              ]
            core_type (src/newRuleSyntax.ml[269,9598+24]..[269,9598+37])
              Ptyp_constr "list" (src/newRuleSyntax.ml[269,9598+33]..[269,9598+37])
              [
                core_type (src/newRuleSyntax.ml[269,9598+24]..[269,9598+32])
                  Ptyp_constr "producer" (src/newRuleSyntax.ml[269,9598+24]..[269,9598+32])
                  []
              ]
    ]
  structure_item (src/newRuleSyntax.ml[274,9716+0]..[275,9760+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[274,9716+4]..[274,9716+7])
          Ppat_var "uxs" (src/newRuleSyntax.ml[274,9716+4]..[274,9716+7])
        expression (src/newRuleSyntax.ml[274,9716+8]..[275,9760+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/newRuleSyntax.ml[274,9716+8]..[274,9716+15])
            Ppat_var "context" (src/newRuleSyntax.ml[274,9716+8]..[274,9716+15])
          expression (src/newRuleSyntax.ml[274,9716+16]..[275,9760+38])
            Pexp_constraint
            expression (src/newRuleSyntax.ml[275,9760+2]..[275,9760+38])
              Pexp_apply
              expression (src/newRuleSyntax.ml[275,9760+2]..[275,9760+15])
                Pexp_ident "Array.of_list" (src/newRuleSyntax.ml[275,9760+2]..[275,9760+15])
              [
                <arg>
                Nolabel
                  expression (src/newRuleSyntax.ml[275,9760+16]..[275,9760+38])
                    Pexp_apply
                    expression (src/newRuleSyntax.ml[275,9760+17]..[275,9760+25])
                      Pexp_ident "List.rev" (src/newRuleSyntax.ml[275,9760+17]..[275,9760+25])
                    [
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[275,9760+26]..[275,9760+37])
                          Pexp_field
                          expression (src/newRuleSyntax.ml[275,9760+26]..[275,9760+33])
                            Pexp_ident "context" (src/newRuleSyntax.ml[275,9760+26]..[275,9760+33])
                          "uxs" (src/newRuleSyntax.ml[275,9760+34]..[275,9760+37])
                    ]
              ]
            core_type (src/newRuleSyntax.ml[274,9716+18]..[274,9716+41])
              Ptyp_constr "array" (src/newRuleSyntax.ml[274,9716+36]..[274,9716+41])
              [
                core_type (src/newRuleSyntax.ml[274,9716+18]..[274,9716+35])
                  Ptyp_constr "option" (src/newRuleSyntax.ml[274,9716+29]..[274,9716+35])
                  [
                    core_type (src/newRuleSyntax.ml[274,9716+18]..[274,9716+28])
                      Ptyp_constr "identifier" (src/newRuleSyntax.ml[274,9716+18]..[274,9716+28])
                      []
                  ]
              ]
    ]
  structure_item (src/newRuleSyntax.ml[279,9828+0]..[280,9866+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[279,9828+4]..[279,9828+9])
          Ppat_var "tuple" (src/newRuleSyntax.ml[279,9828+4]..[279,9828+9])
        expression (src/newRuleSyntax.ml[279,9828+10]..[280,9866+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/newRuleSyntax.ml[279,9828+10]..[279,9828+17])
            Ppat_var "context" (src/newRuleSyntax.ml[279,9828+10]..[279,9828+17])
          expression (src/newRuleSyntax.ml[279,9828+18]..[280,9866+24])
            Pexp_constraint
            expression (src/newRuleSyntax.ml[280,9866+2]..[280,9866+24])
              Pexp_apply
              expression (src/newRuleSyntax.ml[280,9866+2]..[280,9866+10])
                Pexp_ident "List.rev" (src/newRuleSyntax.ml[280,9866+2]..[280,9866+10])
              [
                <arg>
                Nolabel
                  expression (src/newRuleSyntax.ml[280,9866+11]..[280,9866+24])
                    Pexp_field
                    expression (src/newRuleSyntax.ml[280,9866+11]..[280,9866+18])
                      Pexp_ident "context" (src/newRuleSyntax.ml[280,9866+11]..[280,9866+18])
                    "tuple" (src/newRuleSyntax.ml[280,9866+19]..[280,9866+24])
              ]
            core_type (src/newRuleSyntax.ml[279,9828+20]..[279,9828+35])
              Ptyp_constr "list" (src/newRuleSyntax.ml[279,9828+31]..[279,9828+35])
              [
                core_type (src/newRuleSyntax.ml[279,9828+20]..[279,9828+30])
                  Ptyp_constr "identifier" (src/newRuleSyntax.ml[279,9828+20]..[279,9828+30])
                  []
              ]
    ]
  structure_item (src/newRuleSyntax.ml[290,10222+0]..[292,10303+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[290,10222+4]..[290,10222+10])
          Ppat_var "semvar" (src/newRuleSyntax.ml[290,10222+4]..[290,10222+10])
        expression (src/newRuleSyntax.ml[290,10222+11]..[292,10303+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/newRuleSyntax.ml[290,10222+11]..[290,10222+18])
            Ppat_var "context" (src/newRuleSyntax.ml[290,10222+11]..[290,10222+18])
          expression (src/newRuleSyntax.ml[290,10222+19]..[292,10303+24])
            Pexp_constraint
            expression (src/newRuleSyntax.ml[291,10256+2]..[292,10303+24])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/newRuleSyntax.ml[291,10256+6]..[291,10256+7])
                    Ppat_var "i" (src/newRuleSyntax.ml[291,10256+6]..[291,10256+7])
                  expression (src/newRuleSyntax.ml[291,10256+10]..[291,10256+43])
                    Pexp_apply
                    expression (src/newRuleSyntax.ml[291,10256+40]..[291,10256+41])
                      Pexp_ident "+" (src/newRuleSyntax.ml[291,10256+40]..[291,10256+41])
                    [
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[291,10256+10]..[291,10256+39])
                          Pexp_apply
                          expression (src/newRuleSyntax.ml[291,10256+10]..[291,10256+21])
                            Pexp_ident "List.length" (src/newRuleSyntax.ml[291,10256+10]..[291,10256+21])
                          [
                            <arg>
                            Nolabel
                              expression (src/newRuleSyntax.ml[291,10256+22]..[291,10256+39])
                                Pexp_field
                                expression (src/newRuleSyntax.ml[291,10256+22]..[291,10256+29])
                                  Pexp_ident "context" (src/newRuleSyntax.ml[291,10256+22]..[291,10256+29])
                                "producers" (src/newRuleSyntax.ml[291,10256+30]..[291,10256+39])
                          ]
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[291,10256+42]..[291,10256+43])
                          Pexp_constant PConst_int (1,None)
                    ]
              ]
              expression (src/newRuleSyntax.ml[292,10303+2]..[292,10303+24])
                Pexp_apply
                expression (src/newRuleSyntax.ml[292,10303+2]..[292,10303+16])
                  Pexp_ident "Printf.sprintf" (src/newRuleSyntax.ml[292,10303+2]..[292,10303+16])
                [
                  <arg>
                  Nolabel
                    expression (src/newRuleSyntax.ml[292,10303+17]..[292,10303+22])
                      Pexp_constant PConst_string("_%d",(src/newRuleSyntax.ml[292,10303+18]..[292,10303+21]),None)
                  <arg>
                  Nolabel
                    expression (src/newRuleSyntax.ml[292,10303+23]..[292,10303+24])
                      Pexp_ident "i" (src/newRuleSyntax.ml[292,10303+23]..[292,10303+24])
                ]
            core_type (src/newRuleSyntax.ml[290,10222+21]..[290,10222+31])
              Ptyp_constr "identifier" (src/newRuleSyntax.ml[290,10222+21]..[290,10222+31])
              []
    ]
  structure_item (src/newRuleSyntax.ml[298,10465+0]..[454,17389+34])
    Pstr_value Rec
    [
      <def>
        pattern (src/newRuleSyntax.ml[298,10465+8]..[298,10465+17])
          Ppat_var "parameter" (src/newRuleSyntax.ml[298,10465+8]..[298,10465+17])
        expression (src/newRuleSyntax.ml[298,10465+18]..[303,10700+57]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/newRuleSyntax.ml[298,10465+18]..[298,10465+41])
            Ppat_constraint
            pattern (src/newRuleSyntax.ml[298,10465+19]..[298,10465+20])
              Ppat_var "e" (src/newRuleSyntax.ml[298,10465+19]..[298,10465+20])
            core_type (src/newRuleSyntax.ml[298,10465+23]..[298,10465+40])
              Ptyp_constr "symbol_expression" (src/newRuleSyntax.ml[298,10465+23]..[298,10465+40])
              []
          expression (src/newRuleSyntax.ml[298,10465+42]..[303,10700+57])
            Pexp_constraint
            expression (src/newRuleSyntax.ml[299,10521+2]..[303,10700+57])
              Pexp_match
              expression (src/newRuleSyntax.ml[299,10521+8]..[299,10521+9])
                Pexp_ident "e" (src/newRuleSyntax.ml[299,10521+8]..[299,10521+9])
              [
                <case>
                  pattern (src/newRuleSyntax.ml[300,10536+4]..[300,10536+31])
                    Ppat_construct "ESymbol" (src/newRuleSyntax.ml[300,10536+4]..[300,10536+11])
                    Some
                      []
                      pattern (src/newRuleSyntax.ml[300,10536+12]..[300,10536+31])
                        Ppat_tuple
                        [
                          pattern (src/newRuleSyntax.ml[300,10536+13]..[300,10536+16])
                            Ppat_var "sym" (src/newRuleSyntax.ml[300,10536+13]..[300,10536+16])
                          pattern (src/newRuleSyntax.ml[300,10536+18]..[300,10536+22])
                            Ppat_var "args" (src/newRuleSyntax.ml[300,10536+18]..[300,10536+22])
                          pattern (src/newRuleSyntax.ml[300,10536+24]..[300,10536+30])
                            Ppat_var "_attrs" (src/newRuleSyntax.ml[300,10536+24]..[300,10536+30])
                        ]
                  expression (src/newRuleSyntax.ml[303,10700+6]..[303,10700+57])
                    Pexp_apply
                    expression (src/newRuleSyntax.ml[303,10700+6]..[303,10700+20])
                      Pexp_ident "Parameters.app" (src/newRuleSyntax.ml[303,10700+6]..[303,10700+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[303,10700+21]..[303,10700+24])
                          Pexp_ident "sym" (src/newRuleSyntax.ml[303,10700+21]..[303,10700+24])
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[303,10700+25]..[303,10700+57])
                          Pexp_apply
                          expression (src/newRuleSyntax.ml[303,10700+26]..[303,10700+34])
                            Pexp_ident "List.map" (src/newRuleSyntax.ml[303,10700+26]..[303,10700+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/newRuleSyntax.ml[303,10700+35]..[303,10700+51])
                                Pexp_ident "nested_parameter" (src/newRuleSyntax.ml[303,10700+35]..[303,10700+51])
                            <arg>
                            Nolabel
                              expression (src/newRuleSyntax.ml[303,10700+52]..[303,10700+56])
                                Pexp_ident "args" (src/newRuleSyntax.ml[303,10700+52]..[303,10700+56])
                          ]
                    ]
              ]
            core_type (src/newRuleSyntax.ml[298,10465+44]..[298,10465+53])
              Ptyp_constr "parameter" (src/newRuleSyntax.ml[298,10465+44]..[298,10465+53])
              []
      <def>
        pattern (src/newRuleSyntax.ml[307,10817+4]..[307,10817+20])
          Ppat_var "nested_parameter" (src/newRuleSyntax.ml[307,10817+4]..[307,10817+20])
        expression (src/newRuleSyntax.ml[307,10817+21]..[322,11663+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/newRuleSyntax.ml[307,10817+21]..[307,10817+37])
            Ppat_constraint
            pattern (src/newRuleSyntax.ml[307,10817+22]..[307,10817+23])
              Ppat_var "e" (src/newRuleSyntax.ml[307,10817+22]..[307,10817+23])
            core_type (src/newRuleSyntax.ml[307,10817+26]..[307,10817+36])
              Ptyp_constr "expression" (src/newRuleSyntax.ml[307,10817+26]..[307,10817+36])
              []
          expression (src/newRuleSyntax.ml[307,10817+38]..[322,11663+65])
            Pexp_constraint
            expression (src/newRuleSyntax.ml[308,10869+2]..[322,11663+65])
              Pexp_match
              expression (src/newRuleSyntax.ml[308,10869+8]..[308,10869+25])
                Pexp_apply
                expression (src/newRuleSyntax.ml[308,10869+8]..[308,10869+23])
                  Pexp_ident "Positions.value" (src/newRuleSyntax.ml[308,10869+8]..[308,10869+23])
                [
                  <arg>
                  Nolabel
                    expression (src/newRuleSyntax.ml[308,10869+24]..[308,10869+25])
                      Pexp_ident "e" (src/newRuleSyntax.ml[308,10869+24]..[308,10869+25])
                ]
              [
                <case>
                  pattern (src/newRuleSyntax.ml[309,10900+4]..[309,10900+62])
                    Ppat_construct "EChoice" (src/newRuleSyntax.ml[309,10900+4]..[309,10900+11])
                    Some
                      []
                      pattern (src/newRuleSyntax.ml[309,10900+12]..[309,10900+62])
                        Ppat_construct "::" (src/newRuleSyntax.ml[309,10900+14]..[309,10900+62]) ghost
                        Some
                          []
                          pattern (src/newRuleSyntax.ml[309,10900+14]..[309,10900+62]) ghost
                            Ppat_tuple
                            [
                              pattern (src/newRuleSyntax.ml[309,10900+14]..[309,10900+60])
                                Ppat_construct "Branch" (src/newRuleSyntax.ml[309,10900+14]..[309,10900+20])
                                Some
                                  []
                                  pattern (src/newRuleSyntax.ml[309,10900+21]..[309,10900+60])
                                    Ppat_tuple
                                    [
                                      pattern (src/newRuleSyntax.ml[309,10900+22]..[309,10900+56])
                                        Ppat_record Closed
                                        [
                                          "Positions.value" (src/newRuleSyntax.ml[309,10900+24]..[309,10900+39])
                                            pattern (src/newRuleSyntax.ml[309,10900+42]..[309,10900+54])
                                              Ppat_construct "ESingleton" (src/newRuleSyntax.ml[309,10900+42]..[309,10900+52])
                                              Some
                                                []
                                                pattern (src/newRuleSyntax.ml[309,10900+53]..[309,10900+54])
                                                  Ppat_var "e" (src/newRuleSyntax.ml[309,10900+53]..[309,10900+54])
                                        ]
                                      pattern (src/newRuleSyntax.ml[309,10900+58]..[309,10900+59])
                                        Ppat_any
                                    ]
                              pattern (src/newRuleSyntax.ml[309,10900+61]..[309,10900+62]) ghost
                                Ppat_construct "[]" (src/newRuleSyntax.ml[309,10900+61]..[309,10900+62]) ghost
                                None
                            ]
                  expression (src/newRuleSyntax.ml[318,11521+6]..[318,11521+17])
                    Pexp_apply
                    expression (src/newRuleSyntax.ml[318,11521+6]..[318,11521+15])
                      Pexp_ident "parameter" (src/newRuleSyntax.ml[318,11521+6]..[318,11521+15])
                    [
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[318,11521+16]..[318,11521+17])
                          Pexp_ident "e" (src/newRuleSyntax.ml[318,11521+16]..[318,11521+17])
                    ]
                <case>
                  pattern (src/newRuleSyntax.ml[319,11539+4]..[319,11539+13])
                    Ppat_construct "EChoice" (src/newRuleSyntax.ml[319,11539+4]..[319,11539+11])
                    Some
                      []
                      pattern (src/newRuleSyntax.ml[319,11539+12]..[319,11539+13])
                        Ppat_any
                  expression (src/newRuleSyntax.ml[321,11623+6]..[322,11663+65])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/newRuleSyntax.ml[321,11623+10]..[321,11623+13])
                          Ppat_var "pos" (src/newRuleSyntax.ml[321,11623+10]..[321,11623+13])
                        expression (src/newRuleSyntax.ml[321,11623+16]..[321,11623+36])
                          Pexp_apply
                          expression (src/newRuleSyntax.ml[321,11623+16]..[321,11623+34])
                            Pexp_ident "Positions.position" (src/newRuleSyntax.ml[321,11623+16]..[321,11623+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/newRuleSyntax.ml[321,11623+35]..[321,11623+36])
                                Pexp_ident "e" (src/newRuleSyntax.ml[321,11623+35]..[321,11623+36])
                          ]
                    ]
                    expression (src/newRuleSyntax.ml[322,11663+6]..[322,11663+65])
                      Pexp_construct "ParameterAnonymous" (src/newRuleSyntax.ml[322,11663+6]..[322,11663+24])
                      Some
                        expression (src/newRuleSyntax.ml[322,11663+25]..[322,11663+65])
                          Pexp_apply
                          expression (src/newRuleSyntax.ml[322,11663+26]..[322,11663+44])
                            Pexp_ident "Positions.with_pos" (src/newRuleSyntax.ml[322,11663+26]..[322,11663+44])
                          [
                            <arg>
                            Nolabel
                              expression (src/newRuleSyntax.ml[322,11663+45]..[322,11663+48])
                                Pexp_ident "pos" (src/newRuleSyntax.ml[322,11663+45]..[322,11663+48])
                            <arg>
                            Nolabel
                              expression (src/newRuleSyntax.ml[322,11663+49]..[322,11663+64])
                                Pexp_apply
                                expression (src/newRuleSyntax.ml[322,11663+50]..[322,11663+61])
                                  Pexp_ident "productions" (src/newRuleSyntax.ml[322,11663+50]..[322,11663+61])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/newRuleSyntax.ml[322,11663+62]..[322,11663+63])
                                      Pexp_ident "e" (src/newRuleSyntax.ml[322,11663+62]..[322,11663+63])
                                ]
                          ]
              ]
            core_type (src/newRuleSyntax.ml[307,10817+40]..[307,10817+49])
              Ptyp_constr "parameter" (src/newRuleSyntax.ml[307,10817+40]..[307,10817+49])
              []
      <def>
        pattern (src/newRuleSyntax.ml[327,11854+4]..[327,11854+12])
          Ppat_var "producer" (src/newRuleSyntax.ml[327,11854+4]..[327,11854+12])
        expression (src/newRuleSyntax.ml[327,11854+13]..[328,11907+32]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/newRuleSyntax.ml[327,11854+13]..[327,11854+14])
            Ppat_var "x" (src/newRuleSyntax.ml[327,11854+13]..[327,11854+14])
          expression (src/newRuleSyntax.ml[327,11854+15]..[328,11907+32]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/newRuleSyntax.ml[327,11854+15]..[327,11854+39])
              Ppat_constraint
              pattern (src/newRuleSyntax.ml[327,11854+16]..[327,11854+18])
                Ppat_var "e1" (src/newRuleSyntax.ml[327,11854+16]..[327,11854+18])
              core_type (src/newRuleSyntax.ml[327,11854+21]..[327,11854+38])
                Ptyp_constr "symbol_expression" (src/newRuleSyntax.ml[327,11854+21]..[327,11854+38])
                []
            expression (src/newRuleSyntax.ml[327,11854+40]..[328,11907+32])
              Pexp_constraint
              expression (src/newRuleSyntax.ml[328,11907+2]..[328,11907+32])
                Pexp_tuple
                [
                  expression (src/newRuleSyntax.ml[328,11907+2]..[328,11907+3])
                    Pexp_ident "x" (src/newRuleSyntax.ml[328,11907+2]..[328,11907+3])
                  expression (src/newRuleSyntax.ml[328,11907+5]..[328,11907+17])
                    Pexp_apply
                    expression (src/newRuleSyntax.ml[328,11907+5]..[328,11907+14])
                      Pexp_ident "parameter" (src/newRuleSyntax.ml[328,11907+5]..[328,11907+14])
                    [
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[328,11907+15]..[328,11907+17])
                          Pexp_ident "e1" (src/newRuleSyntax.ml[328,11907+15]..[328,11907+17])
                    ]
                  expression (src/newRuleSyntax.ml[328,11907+19]..[328,11907+32])
                    Pexp_apply
                    expression (src/newRuleSyntax.ml[328,11907+19]..[328,11907+29])
                      Pexp_ident "attributes" (src/newRuleSyntax.ml[328,11907+19]..[328,11907+29])
                    [
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[328,11907+30]..[328,11907+32])
                          Pexp_ident "e1" (src/newRuleSyntax.ml[328,11907+30]..[328,11907+32])
                    ]
                ]
              core_type (src/newRuleSyntax.ml[327,11854+42]..[327,11854+50])
                Ptyp_constr "producer" (src/newRuleSyntax.ml[327,11854+42]..[327,11854+50])
                []
      <def>
        pattern (src/newRuleSyntax.ml[333,12073+4]..[333,12073+10])
          Ppat_var "extend" (src/newRuleSyntax.ml[333,12073+4]..[333,12073+10])
        expression (src/newRuleSyntax.ml[333,12073+11]..[359,13419+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/newRuleSyntax.ml[333,12073+11]..[333,12073+24])
            Ppat_constraint
            pattern (src/newRuleSyntax.ml[333,12073+12]..[333,12073+13])
              Ppat_var "p" (src/newRuleSyntax.ml[333,12073+12]..[333,12073+13])
            core_type (src/newRuleSyntax.ml[333,12073+16]..[333,12073+23])
              Ptyp_constr "pattern" (src/newRuleSyntax.ml[333,12073+16]..[333,12073+23])
              []
          expression (src/newRuleSyntax.ml[333,12073+25]..[359,13419+20]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/newRuleSyntax.ml[333,12073+25]..[333,12073+49])
              Ppat_constraint
              pattern (src/newRuleSyntax.ml[333,12073+26]..[333,12073+28])
                Ppat_var "e1" (src/newRuleSyntax.ml[333,12073+26]..[333,12073+28])
              core_type (src/newRuleSyntax.ml[333,12073+31]..[333,12073+48])
                Ptyp_constr "symbol_expression" (src/newRuleSyntax.ml[333,12073+31]..[333,12073+48])
                []
            expression (src/newRuleSyntax.ml[333,12073+50]..[359,13419+20]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/newRuleSyntax.ml[333,12073+50]..[333,12073+69])
                Ppat_constraint
                pattern (src/newRuleSyntax.ml[333,12073+51]..[333,12073+58])
                  Ppat_var "context" (src/newRuleSyntax.ml[333,12073+51]..[333,12073+58])
                core_type (src/newRuleSyntax.ml[333,12073+61]..[333,12073+68])
                  Ptyp_constr "context" (src/newRuleSyntax.ml[333,12073+61]..[333,12073+68])
                  []
              expression (src/newRuleSyntax.ml[333,12073+70]..[359,13419+20])
                Pexp_constraint
                expression (src/newRuleSyntax.ml[334,12155+2]..[359,13419+20])
                  Pexp_match
                  expression (src/newRuleSyntax.ml[334,12155+8]..[334,12155+9])
                    Pexp_ident "p" (src/newRuleSyntax.ml[334,12155+8]..[334,12155+9])
                  [
                    <case>
                      pattern (src/newRuleSyntax.ml[335,12170+4]..[335,12170+16])
                        Ppat_construct "SemPatVar" (src/newRuleSyntax.ml[335,12170+4]..[335,12170+13])
                        Some
                          []
                          pattern (src/newRuleSyntax.ml[335,12170+14]..[335,12170+16])
                            Ppat_var "x1" (src/newRuleSyntax.ml[335,12170+14]..[335,12170+16])
                      expression (src/newRuleSyntax.ml[338,12339+6]..[343,12632+41])
                        Pexp_record
                        [
                          "pos" (src/newRuleSyntax.ml[338,12339+8]..[338,12339+11])
                            expression (src/newRuleSyntax.ml[338,12339+43]..[338,12339+54])
                              Pexp_field
                              expression (src/newRuleSyntax.ml[338,12339+43]..[338,12339+50])
                                Pexp_ident "context" (src/newRuleSyntax.ml[338,12339+43]..[338,12339+50])
                              "pos" (src/newRuleSyntax.ml[338,12339+51]..[338,12339+54])
                          "producers" (src/newRuleSyntax.ml[339,12395+8]..[339,12395+17])
                            expression (src/newRuleSyntax.ml[339,12395+21]..[339,12395+60])
                              Pexp_construct "::" (src/newRuleSyntax.ml[339,12395+40]..[339,12395+42])
                              Some
                                expression (src/newRuleSyntax.ml[339,12395+21]..[339,12395+60]) ghost
                                  Pexp_tuple
                                  [
                                    expression (src/newRuleSyntax.ml[339,12395+21]..[339,12395+35])
                                      Pexp_apply
                                      expression (src/newRuleSyntax.ml[339,12395+21]..[339,12395+29])
                                        Pexp_ident "producer" (src/newRuleSyntax.ml[339,12395+21]..[339,12395+29])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/newRuleSyntax.ml[339,12395+30]..[339,12395+32])
                                            Pexp_ident "x1" (src/newRuleSyntax.ml[339,12395+30]..[339,12395+32])
                                        <arg>
                                        Nolabel
                                          expression (src/newRuleSyntax.ml[339,12395+33]..[339,12395+35])
                                            Pexp_ident "e1" (src/newRuleSyntax.ml[339,12395+33]..[339,12395+35])
                                      ]
                                    expression (src/newRuleSyntax.ml[339,12395+43]..[339,12395+60])
                                      Pexp_field
                                      expression (src/newRuleSyntax.ml[339,12395+43]..[339,12395+50])
                                        Pexp_ident "context" (src/newRuleSyntax.ml[339,12395+43]..[339,12395+50])
                                      "producers" (src/newRuleSyntax.ml[339,12395+51]..[339,12395+60])
                                  ]
                          "uxs" (src/newRuleSyntax.ml[340,12457+8]..[340,12457+11])
                            expression (src/newRuleSyntax.ml[340,12457+21]..[340,12457+54])
                              Pexp_construct "::" (src/newRuleSyntax.ml[340,12457+40]..[340,12457+42])
                              Some
                                expression (src/newRuleSyntax.ml[340,12457+21]..[340,12457+54]) ghost
                                  Pexp_tuple
                                  [
                                    expression (src/newRuleSyntax.ml[340,12457+21]..[340,12457+28])
                                      Pexp_apply
                                      expression (src/newRuleSyntax.ml[340,12457+21]..[340,12457+25])
                                        Pexp_ident "user" (src/newRuleSyntax.ml[340,12457+21]..[340,12457+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/newRuleSyntax.ml[340,12457+26]..[340,12457+28])
                                            Pexp_ident "x1" (src/newRuleSyntax.ml[340,12457+26]..[340,12457+28])
                                      ]
                                    expression (src/newRuleSyntax.ml[340,12457+43]..[340,12457+54])
                                      Pexp_field
                                      expression (src/newRuleSyntax.ml[340,12457+43]..[340,12457+50])
                                        Pexp_ident "context" (src/newRuleSyntax.ml[340,12457+43]..[340,12457+50])
                                      "uxs" (src/newRuleSyntax.ml[340,12457+51]..[340,12457+54])
                                  ]
                          "bindings" (src/newRuleSyntax.ml[341,12513+8]..[341,12513+16])
                            expression (src/newRuleSyntax.ml[341,12513+43]..[341,12513+59])
                              Pexp_field
                              expression (src/newRuleSyntax.ml[341,12513+43]..[341,12513+50])
                                Pexp_ident "context" (src/newRuleSyntax.ml[341,12513+43]..[341,12513+50])
                              "bindings" (src/newRuleSyntax.ml[341,12513+51]..[341,12513+59])
                          "tuple" (src/newRuleSyntax.ml[342,12574+8]..[342,12574+13])
                            expression (src/newRuleSyntax.ml[342,12574+21]..[342,12574+56])
                              Pexp_construct "::" (src/newRuleSyntax.ml[342,12574+40]..[342,12574+42])
                              Some
                                expression (src/newRuleSyntax.ml[342,12574+21]..[342,12574+56]) ghost
                                  Pexp_tuple
                                  [
                                    expression (src/newRuleSyntax.ml[342,12574+21]..[342,12574+39])
                                      Pexp_apply
                                      expression (src/newRuleSyntax.ml[342,12574+21]..[342,12574+36])
                                        Pexp_ident "Positions.value" (src/newRuleSyntax.ml[342,12574+21]..[342,12574+36])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/newRuleSyntax.ml[342,12574+37]..[342,12574+39])
                                            Pexp_ident "x1" (src/newRuleSyntax.ml[342,12574+37]..[342,12574+39])
                                      ]
                                    expression (src/newRuleSyntax.ml[342,12574+43]..[342,12574+56])
                                      Pexp_field
                                      expression (src/newRuleSyntax.ml[342,12574+43]..[342,12574+50])
                                        Pexp_ident "context" (src/newRuleSyntax.ml[342,12574+43]..[342,12574+50])
                                      "tuple" (src/newRuleSyntax.ml[342,12574+51]..[342,12574+56])
                                  ]
                          "tilde_used" (src/newRuleSyntax.ml[343,12632+8]..[343,12632+18])
                            expression (src/newRuleSyntax.ml[343,12632+21]..[343,12632+39])
                              Pexp_field
                              expression (src/newRuleSyntax.ml[343,12632+21]..[343,12632+28])
                                Pexp_ident "context" (src/newRuleSyntax.ml[343,12632+21]..[343,12632+28])
                              "tilde_used" (src/newRuleSyntax.ml[343,12632+29]..[343,12632+39])
                        ]
                        None
                    <case>
                      pattern (src/newRuleSyntax.ml[344,12674+4]..[344,12674+5])
                        Ppat_any
                      expression (src/newRuleSyntax.ml[349,12942+6]..[359,13419+20])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/newRuleSyntax.ml[349,12942+10]..[349,12942+12])
                              Ppat_var "x1" (src/newRuleSyntax.ml[349,12942+10]..[349,12942+12])
                            expression (src/newRuleSyntax.ml[349,12942+15]..[349,12942+29])
                              Pexp_apply
                              expression (src/newRuleSyntax.ml[349,12942+15]..[349,12942+21])
                                Pexp_ident "semvar" (src/newRuleSyntax.ml[349,12942+15]..[349,12942+21])
                              [
                                <arg>
                                Nolabel
                                  expression (src/newRuleSyntax.ml[349,12942+22]..[349,12942+29])
                                    Pexp_ident "context" (src/newRuleSyntax.ml[349,12942+22]..[349,12942+29])
                              ]
                        ]
                        expression (src/newRuleSyntax.ml[350,12975+6]..[359,13419+20])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/newRuleSyntax.ml[350,12975+10]..[350,12975+20])
                                Ppat_var "tilde_used" (src/newRuleSyntax.ml[350,12975+10]..[350,12975+20])
                              expression (src/newRuleSyntax.ml[350,12975+23]..[350,12975+54])
                                Pexp_apply
                                expression (src/newRuleSyntax.ml[350,12975+23]..[350,12975+33])
                                  Pexp_ident "tilde_used" (src/newRuleSyntax.ml[350,12975+23]..[350,12975+33])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/newRuleSyntax.ml[350,12975+34]..[350,12975+52])
                                      Pexp_field
                                      expression (src/newRuleSyntax.ml[350,12975+34]..[350,12975+41])
                                        Pexp_ident "context" (src/newRuleSyntax.ml[350,12975+34]..[350,12975+41])
                                      "tilde_used" (src/newRuleSyntax.ml[350,12975+42]..[350,12975+52])
                                  <arg>
                                  Nolabel
                                    expression (src/newRuleSyntax.ml[350,12975+53]..[350,12975+54])
                                      Pexp_ident "p" (src/newRuleSyntax.ml[350,12975+53]..[350,12975+54])
                                ]
                          ]
                          expression (src/newRuleSyntax.ml[351,13033+6]..[359,13419+20])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/newRuleSyntax.ml[351,13033+10]..[351,13033+11])
                                  Ppat_var "p" (src/newRuleSyntax.ml[351,13033+10]..[351,13033+11])
                                core_type (src/newRuleSyntax.ml[351,13033+14]..[351,13033+24])
                                  Ptyp_constr "IL.pattern" (src/newRuleSyntax.ml[351,13033+14]..[351,13033+24])
                                  []
                                expression (src/newRuleSyntax.ml[351,13033+27]..[351,13033+39])
                                  Pexp_apply
                                  expression (src/newRuleSyntax.ml[351,13033+27]..[351,13033+34])
                                    Pexp_ident "pattern" (src/newRuleSyntax.ml[351,13033+27]..[351,13033+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/newRuleSyntax.ml[351,13033+35]..[351,13033+37])
                                        Pexp_ident "x1" (src/newRuleSyntax.ml[351,13033+35]..[351,13033+37])
                                    <arg>
                                    Nolabel
                                      expression (src/newRuleSyntax.ml[351,13033+38]..[351,13033+39])
                                        Pexp_ident "p" (src/newRuleSyntax.ml[351,13033+38]..[351,13033+39])
                                  ]
                            ]
                            expression (src/newRuleSyntax.ml[352,13076+6]..[359,13419+20])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/newRuleSyntax.ml[352,13076+10]..[352,13076+17])
                                    Ppat_var "binding" (src/newRuleSyntax.ml[352,13076+10]..[352,13076+17])
                                  expression (src/newRuleSyntax.ml[352,13076+20]..[352,13076+36])
                                    Pexp_apply
                                    expression (src/newRuleSyntax.ml[352,13076+20]..[352,13076+31])
                                      Pexp_ident "Action.bind" (src/newRuleSyntax.ml[352,13076+20]..[352,13076+31])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/newRuleSyntax.ml[352,13076+32]..[352,13076+33])
                                          Pexp_ident "p" (src/newRuleSyntax.ml[352,13076+32]..[352,13076+33])
                                      <arg>
                                      Nolabel
                                        expression (src/newRuleSyntax.ml[352,13076+34]..[352,13076+36])
                                          Pexp_ident "x1" (src/newRuleSyntax.ml[352,13076+34]..[352,13076+36])
                                    ]
                              ]
                              expression (src/newRuleSyntax.ml[353,13116+6]..[359,13419+20])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/newRuleSyntax.ml[353,13116+10]..[353,13116+12])
                                      Ppat_var "x1" (src/newRuleSyntax.ml[353,13116+10]..[353,13116+12])
                                    expression (src/newRuleSyntax.ml[353,13116+15]..[353,13116+39])
                                      Pexp_apply
                                      expression (src/newRuleSyntax.ml[353,13116+15]..[353,13116+36])
                                        Pexp_ident "Positions.unknown_pos" (src/newRuleSyntax.ml[353,13116+15]..[353,13116+36])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/newRuleSyntax.ml[353,13116+37]..[353,13116+39])
                                            Pexp_ident "x1" (src/newRuleSyntax.ml[353,13116+37]..[353,13116+39])
                                      ]
                                ]
                                expression (src/newRuleSyntax.ml[354,13159+6]..[359,13419+20])
                                  Pexp_record
                                  [
                                    "pos" (src/newRuleSyntax.ml[354,13159+8]..[354,13159+11])
                                      expression (src/newRuleSyntax.ml[354,13159+39]..[354,13159+50])
                                        Pexp_field
                                        expression (src/newRuleSyntax.ml[354,13159+39]..[354,13159+46])
                                          Pexp_ident "context" (src/newRuleSyntax.ml[354,13159+39]..[354,13159+46])
                                        "pos" (src/newRuleSyntax.ml[354,13159+47]..[354,13159+50])
                                    "producers" (src/newRuleSyntax.ml[355,13211+8]..[355,13211+17])
                                      expression (src/newRuleSyntax.ml[355,13211+21]..[355,13211+56])
                                        Pexp_construct "::" (src/newRuleSyntax.ml[355,13211+36]..[355,13211+38])
                                        Some
                                          expression (src/newRuleSyntax.ml[355,13211+21]..[355,13211+56]) ghost
                                            Pexp_tuple
                                            [
                                              expression (src/newRuleSyntax.ml[355,13211+21]..[355,13211+35])
                                                Pexp_apply
                                                expression (src/newRuleSyntax.ml[355,13211+21]..[355,13211+29])
                                                  Pexp_ident "producer" (src/newRuleSyntax.ml[355,13211+21]..[355,13211+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/newRuleSyntax.ml[355,13211+30]..[355,13211+32])
                                                      Pexp_ident "x1" (src/newRuleSyntax.ml[355,13211+30]..[355,13211+32])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/newRuleSyntax.ml[355,13211+33]..[355,13211+35])
                                                      Pexp_ident "e1" (src/newRuleSyntax.ml[355,13211+33]..[355,13211+35])
                                                ]
                                              expression (src/newRuleSyntax.ml[355,13211+39]..[355,13211+56])
                                                Pexp_field
                                                expression (src/newRuleSyntax.ml[355,13211+39]..[355,13211+46])
                                                  Pexp_ident "context" (src/newRuleSyntax.ml[355,13211+39]..[355,13211+46])
                                                "producers" (src/newRuleSyntax.ml[355,13211+47]..[355,13211+56])
                                            ]
                                    "uxs" (src/newRuleSyntax.ml[356,13269+8]..[356,13269+11])
                                      expression (src/newRuleSyntax.ml[356,13269+21]..[356,13269+50])
                                        Pexp_construct "::" (src/newRuleSyntax.ml[356,13269+36]..[356,13269+38])
                                        Some
                                          expression (src/newRuleSyntax.ml[356,13269+21]..[356,13269+50]) ghost
                                            Pexp_tuple
                                            [
                                              expression (src/newRuleSyntax.ml[356,13269+21]..[356,13269+25])
                                                Pexp_ident "auto" (src/newRuleSyntax.ml[356,13269+21]..[356,13269+25])
                                              expression (src/newRuleSyntax.ml[356,13269+39]..[356,13269+50])
                                                Pexp_field
                                                expression (src/newRuleSyntax.ml[356,13269+39]..[356,13269+46])
                                                  Pexp_ident "context" (src/newRuleSyntax.ml[356,13269+39]..[356,13269+46])
                                                "uxs" (src/newRuleSyntax.ml[356,13269+47]..[356,13269+50])
                                            ]
                                    "bindings" (src/newRuleSyntax.ml[357,13321+8]..[357,13321+16])
                                      expression (src/newRuleSyntax.ml[357,13321+21]..[357,13321+55])
                                        Pexp_apply
                                        expression (src/newRuleSyntax.ml[357,13321+36]..[357,13321+38])
                                          Pexp_ident ">>" (src/newRuleSyntax.ml[357,13321+36]..[357,13321+38])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/newRuleSyntax.ml[357,13321+21]..[357,13321+28])
                                              Pexp_ident "binding" (src/newRuleSyntax.ml[357,13321+21]..[357,13321+28])
                                          <arg>
                                          Nolabel
                                            expression (src/newRuleSyntax.ml[357,13321+39]..[357,13321+55])
                                              Pexp_field
                                              expression (src/newRuleSyntax.ml[357,13321+39]..[357,13321+46])
                                                Pexp_ident "context" (src/newRuleSyntax.ml[357,13321+39]..[357,13321+46])
                                              "bindings" (src/newRuleSyntax.ml[357,13321+47]..[357,13321+55])
                                        ]
                                    "tuple" (src/newRuleSyntax.ml[358,13378+8]..[358,13378+13])
                                      expression (src/newRuleSyntax.ml[358,13378+21]..[358,13378+39])
                                        Pexp_apply
                                        expression (src/newRuleSyntax.ml[358,13378+21]..[358,13378+23])
                                          Pexp_ident "bv" (src/newRuleSyntax.ml[358,13378+21]..[358,13378+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/newRuleSyntax.ml[358,13378+24]..[358,13378+37])
                                              Pexp_field
                                              expression (src/newRuleSyntax.ml[358,13378+24]..[358,13378+31])
                                                Pexp_ident "context" (src/newRuleSyntax.ml[358,13378+24]..[358,13378+31])
                                              "tuple" (src/newRuleSyntax.ml[358,13378+32]..[358,13378+37])
                                          <arg>
                                          Nolabel
                                            expression (src/newRuleSyntax.ml[358,13378+38]..[358,13378+39])
                                              Pexp_ident "p" (src/newRuleSyntax.ml[358,13378+38]..[358,13378+39])
                                        ]
                                    "tilde_used" (src/newRuleSyntax.ml[359,13419+8]..[359,13419+18]) ghost
                                      expression (src/newRuleSyntax.ml[359,13419+8]..[359,13419+18])
                                        Pexp_ident "tilde_used" (src/newRuleSyntax.ml[359,13419+8]..[359,13419+18])
                                  ]
                                  None
                  ]
                core_type (src/newRuleSyntax.ml[333,12073+72]..[333,12073+79])
                  Ptyp_constr "context" (src/newRuleSyntax.ml[333,12073+72]..[333,12073+79])
                  []
      <def>
        pattern (src/newRuleSyntax.ml[363,13498+4]..[363,13498+18])
          Ppat_var "production_aux" (src/newRuleSyntax.ml[363,13498+4]..[363,13498+18])
        expression (src/newRuleSyntax.ml[364,13517+2]..[443,17064+36]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/newRuleSyntax.ml[364,13517+2]..[364,13517+21])
            Ppat_constraint
            pattern (src/newRuleSyntax.ml[364,13517+3]..[364,13517+10])
              Ppat_var "context" (src/newRuleSyntax.ml[364,13517+3]..[364,13517+10])
            core_type (src/newRuleSyntax.ml[364,13517+13]..[364,13517+20])
              Ptyp_constr "context" (src/newRuleSyntax.ml[364,13517+13]..[364,13517+20])
              []
          expression (src/newRuleSyntax.ml[365,13539+2]..[443,17064+36]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/newRuleSyntax.ml[365,13539+2]..[365,13539+22])
              Ppat_constraint
              pattern (src/newRuleSyntax.ml[365,13539+3]..[365,13539+4])
                Ppat_var "e" (src/newRuleSyntax.ml[365,13539+3]..[365,13539+4])
              core_type (src/newRuleSyntax.ml[365,13539+7]..[365,13539+21])
                Ptyp_constr "seq_expression" (src/newRuleSyntax.ml[365,13539+7]..[365,13539+21])
                []
            expression (src/newRuleSyntax.ml[366,13562+2]..[443,17064+36]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/newRuleSyntax.ml[366,13562+2]..[366,13562+35])
                Ppat_constraint
                pattern (src/newRuleSyntax.ml[366,13562+3]..[366,13562+8])
                  Ppat_var "level" (src/newRuleSyntax.ml[366,13562+3]..[366,13562+8])
                core_type (src/newRuleSyntax.ml[366,13562+11]..[366,13562+34])
                  Ptyp_constr "branch_production_level" (src/newRuleSyntax.ml[366,13562+11]..[366,13562+34])
                  []
              expression (src/newRuleSyntax.ml[367,13598+0]..[443,17064+36])
                Pexp_constraint
                expression (src/newRuleSyntax.ml[368,13623+2]..[443,17064+36])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/newRuleSyntax.ml[368,13623+6]..[368,13623+12])
                        Ppat_tuple
                        [
                          pattern (src/newRuleSyntax.ml[368,13623+6]..[368,13623+7])
                            Ppat_var "e" (src/newRuleSyntax.ml[368,13623+6]..[368,13623+7])
                          pattern (src/newRuleSyntax.ml[368,13623+9]..[368,13623+12])
                            Ppat_var "pos" (src/newRuleSyntax.ml[368,13623+9]..[368,13623+12])
                        ]
                      expression (src/newRuleSyntax.ml[368,13623+15]..[368,13623+36])
                        Pexp_apply
                        expression (src/newRuleSyntax.ml[368,13623+15]..[368,13623+34])
                          Pexp_ident "Positions.decompose" (src/newRuleSyntax.ml[368,13623+15]..[368,13623+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/newRuleSyntax.ml[368,13623+35]..[368,13623+36])
                              Pexp_ident "e" (src/newRuleSyntax.ml[368,13623+35]..[368,13623+36])
                        ]
                  ]
                  expression (src/newRuleSyntax.ml[369,13663+2]..[443,17064+36])
                    Pexp_match
                    expression (src/newRuleSyntax.ml[369,13663+8]..[369,13663+9])
                      Pexp_ident "e" (src/newRuleSyntax.ml[369,13663+8]..[369,13663+9])
                    [
                      <case>
                        pattern (src/newRuleSyntax.ml[371,13679+4]..[371,13679+21])
                          Ppat_construct "ECons" (src/newRuleSyntax.ml[371,13679+4]..[371,13679+9])
                          Some
                            []
                            pattern (src/newRuleSyntax.ml[371,13679+10]..[371,13679+21])
                              Ppat_tuple
                              [
                                pattern (src/newRuleSyntax.ml[371,13679+11]..[371,13679+12])
                                  Ppat_var "p" (src/newRuleSyntax.ml[371,13679+11]..[371,13679+12])
                                pattern (src/newRuleSyntax.ml[371,13679+14]..[371,13679+16])
                                  Ppat_var "e1" (src/newRuleSyntax.ml[371,13679+14]..[371,13679+16])
                                pattern (src/newRuleSyntax.ml[371,13679+18]..[371,13679+20])
                                  Ppat_var "e2" (src/newRuleSyntax.ml[371,13679+18]..[371,13679+20])
                              ]
                        expression (src/newRuleSyntax.ml[374,13829+6]..[374,13829+51])
                          Pexp_apply
                          expression (src/newRuleSyntax.ml[374,13829+6]..[374,13829+20])
                            Pexp_ident "production_aux" (src/newRuleSyntax.ml[374,13829+6]..[374,13829+20])
                          [
                            <arg>
                            Nolabel
                              expression (src/newRuleSyntax.ml[374,13829+21]..[374,13829+42])
                                Pexp_apply
                                expression (src/newRuleSyntax.ml[374,13829+22]..[374,13829+28])
                                  Pexp_ident "extend" (src/newRuleSyntax.ml[374,13829+22]..[374,13829+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/newRuleSyntax.ml[374,13829+29]..[374,13829+30])
                                      Pexp_ident "p" (src/newRuleSyntax.ml[374,13829+29]..[374,13829+30])
                                  <arg>
                                  Nolabel
                                    expression (src/newRuleSyntax.ml[374,13829+31]..[374,13829+33])
                                      Pexp_ident "e1" (src/newRuleSyntax.ml[374,13829+31]..[374,13829+33])
                                  <arg>
                                  Nolabel
                                    expression (src/newRuleSyntax.ml[374,13829+34]..[374,13829+41])
                                      Pexp_ident "context" (src/newRuleSyntax.ml[374,13829+34]..[374,13829+41])
                                ]
                            <arg>
                            Nolabel
                              expression (src/newRuleSyntax.ml[374,13829+43]..[374,13829+45])
                                Pexp_ident "e2" (src/newRuleSyntax.ml[374,13829+43]..[374,13829+45])
                            <arg>
                            Nolabel
                              expression (src/newRuleSyntax.ml[374,13829+46]..[374,13829+51])
                                Pexp_ident "level" (src/newRuleSyntax.ml[374,13829+46]..[374,13829+51])
                          ]
                      <case>
                        pattern (src/newRuleSyntax.ml[376,13882+4]..[376,13882+44])
                          Ppat_construct "EAction" (src/newRuleSyntax.ml[376,13882+4]..[376,13882+11])
                          Some
                            []
                            pattern (src/newRuleSyntax.ml[376,13882+12]..[376,13882+44])
                              Ppat_tuple
                              [
                                pattern (src/newRuleSyntax.ml[376,13882+13]..[376,13882+37])
                                  Ppat_construct "XATraditional" (src/newRuleSyntax.ml[376,13882+13]..[376,13882+26])
                                  Some
                                    []
                                    pattern (src/newRuleSyntax.ml[376,13882+27]..[376,13882+37])
                                      Ppat_var "raw_action" (src/newRuleSyntax.ml[376,13882+27]..[376,13882+37])
                                pattern (src/newRuleSyntax.ml[376,13882+39]..[376,13882+43])
                                  Ppat_var "prec" (src/newRuleSyntax.ml[376,13882+39]..[376,13882+43])
                              ]
                        expression (src/newRuleSyntax.ml[378,13997+6]..[388,14493+7])
                          Pexp_sequence
                          expression (src/newRuleSyntax.ml[378,13997+6]..[378,13997+43])
                            Pexp_apply
                            expression (src/newRuleSyntax.ml[378,13997+6]..[378,13997+24])
                              Pexp_ident "tilde_used_warning" (src/newRuleSyntax.ml[378,13997+6]..[378,13997+24])
                            [
                              <arg>
                              Nolabel
                                expression (src/newRuleSyntax.ml[378,13997+25]..[378,13997+43])
                                  Pexp_field
                                  expression (src/newRuleSyntax.ml[378,13997+25]..[378,13997+32])
                                    Pexp_ident "context" (src/newRuleSyntax.ml[378,13997+25]..[378,13997+32])
                                  "tilde_used" (src/newRuleSyntax.ml[378,13997+33]..[378,13997+43])
                            ]
                          expression (src/newRuleSyntax.ml[380,14104+6]..[388,14493+7])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/newRuleSyntax.ml[380,14104+10]..[380,14104+16])
                                  Ppat_var "action" (src/newRuleSyntax.ml[380,14104+10]..[380,14104+16])
                                expression (src/newRuleSyntax.ml[380,14104+19]..[380,14104+70])
                                  Pexp_apply
                                  expression (src/newRuleSyntax.ml[380,14104+19]..[380,14104+29])
                                    Pexp_ident "raw_action" (src/newRuleSyntax.ml[380,14104+19]..[380,14104+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/newRuleSyntax.ml[380,14104+30]..[380,14104+56])
                                        Pexp_construct "Settings.DollarsDisallowed" (src/newRuleSyntax.ml[380,14104+30]..[380,14104+56])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (src/newRuleSyntax.ml[380,14104+57]..[380,14104+70])
                                        Pexp_apply
                                        expression (src/newRuleSyntax.ml[380,14104+58]..[380,14104+61])
                                          Pexp_ident "uxs" (src/newRuleSyntax.ml[380,14104+58]..[380,14104+61])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/newRuleSyntax.ml[380,14104+62]..[380,14104+69])
                                              Pexp_ident "context" (src/newRuleSyntax.ml[380,14104+62]..[380,14104+69])
                                        ]
                                  ]
                            ]
                            expression (src/newRuleSyntax.ml[382,14230+6]..[388,14493+7])
                              Pexp_record
                              [
                                "pr_branch_position" (src/newRuleSyntax.ml[383,14238+8]..[383,14238+26])
                                  expression (src/newRuleSyntax.ml[383,14238+37]..[383,14238+48])
                                    Pexp_field
                                    expression (src/newRuleSyntax.ml[383,14238+37]..[383,14238+44])
                                      Pexp_ident "context" (src/newRuleSyntax.ml[383,14238+37]..[383,14238+44])
                                    "pos" (src/newRuleSyntax.ml[383,14238+45]..[383,14238+48])
                                "pr_producers" (src/newRuleSyntax.ml[384,14288+8]..[384,14288+20])
                                  expression (src/newRuleSyntax.ml[384,14288+37]..[384,14288+54])
                                    Pexp_apply
                                    expression (src/newRuleSyntax.ml[384,14288+37]..[384,14288+46])
                                      Pexp_ident "producers" (src/newRuleSyntax.ml[384,14288+37]..[384,14288+46])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/newRuleSyntax.ml[384,14288+47]..[384,14288+54])
                                          Pexp_ident "context" (src/newRuleSyntax.ml[384,14288+47]..[384,14288+54])
                                    ]
                                "pr_action" (src/newRuleSyntax.ml[385,14344+8]..[385,14344+17])
                                  expression (src/newRuleSyntax.ml[385,14344+37]..[385,14344+60])
                                    Pexp_apply
                                    expression (src/newRuleSyntax.ml[385,14344+37]..[385,14344+53])
                                      Pexp_field
                                      expression (src/newRuleSyntax.ml[385,14344+37]..[385,14344+44])
                                        Pexp_ident "context" (src/newRuleSyntax.ml[385,14344+37]..[385,14344+44])
                                      "bindings" (src/newRuleSyntax.ml[385,14344+45]..[385,14344+53])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/newRuleSyntax.ml[385,14344+54]..[385,14344+60])
                                          Pexp_ident "action" (src/newRuleSyntax.ml[385,14344+54]..[385,14344+60])
                                    ]
                                "pr_branch_prec_annotation" (src/newRuleSyntax.ml[386,14406+8]..[386,14406+33])
                                  expression (src/newRuleSyntax.ml[386,14406+37]..[386,14406+41])
                                    Pexp_ident "prec" (src/newRuleSyntax.ml[386,14406+37]..[386,14406+41])
                                "pr_branch_production_level" (src/newRuleSyntax.ml[387,14449+8]..[387,14449+34])
                                  expression (src/newRuleSyntax.ml[387,14449+37]..[387,14449+42])
                                    Pexp_ident "level" (src/newRuleSyntax.ml[387,14449+37]..[387,14449+42])
                              ]
                              None
                      <case>
                        pattern (src/newRuleSyntax.ml[390,14502+4]..[390,14502+35])
                          Ppat_construct "EAction" (src/newRuleSyntax.ml[390,14502+4]..[390,14502+11])
                          Some
                            []
                            pattern (src/newRuleSyntax.ml[390,14502+12]..[390,14502+35])
                              Ppat_tuple
                              [
                                pattern (src/newRuleSyntax.ml[390,14502+13]..[390,14502+28])
                                  Ppat_construct "XAPointFree" (src/newRuleSyntax.ml[390,14502+13]..[390,14502+24])
                                  Some
                                    []
                                    pattern (src/newRuleSyntax.ml[390,14502+25]..[390,14502+28])
                                      Ppat_var "oid" (src/newRuleSyntax.ml[390,14502+25]..[390,14502+28])
                                pattern (src/newRuleSyntax.ml[390,14502+30]..[390,14502+34])
                                  Ppat_var "prec" (src/newRuleSyntax.ml[390,14502+30]..[390,14502+34])
                              ]
                        expression (src/newRuleSyntax.ml[405,15305+6]..[428,16282+36])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/newRuleSyntax.ml[405,15305+10]..[405,15305+14])
                                Ppat_var "evar" (src/newRuleSyntax.ml[405,15305+10]..[405,15305+14])
                              expression (src/newRuleSyntax.ml[405,15305+15]..[405,15305+28]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/newRuleSyntax.ml[405,15305+15]..[405,15305+16])
                                  Ppat_var "x" (src/newRuleSyntax.ml[405,15305+15]..[405,15305+16])
                                expression (src/newRuleSyntax.ml[405,15305+19]..[405,15305+28])
                                  Pexp_construct "IL.EVar" (src/newRuleSyntax.ml[405,15305+19]..[405,15305+26])
                                  Some
                                    expression (src/newRuleSyntax.ml[405,15305+27]..[405,15305+28])
                                      Pexp_ident "x" (src/newRuleSyntax.ml[405,15305+27]..[405,15305+28])
                          ]
                          expression (src/newRuleSyntax.ml[406,15337+6]..[428,16282+36])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/newRuleSyntax.ml[406,15337+10]..[406,15337+15])
                                  Ppat_var "evars" (src/newRuleSyntax.ml[406,15337+10]..[406,15337+15])
                                expression (src/newRuleSyntax.ml[406,15337+16]..[406,15337+37]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/newRuleSyntax.ml[406,15337+16]..[406,15337+18])
                                    Ppat_var "xs" (src/newRuleSyntax.ml[406,15337+16]..[406,15337+18])
                                  expression (src/newRuleSyntax.ml[406,15337+21]..[406,15337+37])
                                    Pexp_apply
                                    expression (src/newRuleSyntax.ml[406,15337+21]..[406,15337+29])
                                      Pexp_ident "List.map" (src/newRuleSyntax.ml[406,15337+21]..[406,15337+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/newRuleSyntax.ml[406,15337+30]..[406,15337+34])
                                          Pexp_ident "evar" (src/newRuleSyntax.ml[406,15337+30]..[406,15337+34])
                                      <arg>
                                      Nolabel
                                        expression (src/newRuleSyntax.ml[406,15337+35]..[406,15337+37])
                                          Pexp_ident "xs" (src/newRuleSyntax.ml[406,15337+35]..[406,15337+37])
                                    ]
                            ]
                            expression (src/newRuleSyntax.ml[407,15378+6]..[428,16282+36])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/newRuleSyntax.ml[407,15378+10]..[407,15378+15])
                                    Ppat_var "tuple" (src/newRuleSyntax.ml[407,15378+10]..[407,15378+15])
                                  expression (src/newRuleSyntax.ml[407,15378+18]..[407,15378+57])
                                    Pexp_apply
                                    expression (src/newRuleSyntax.ml[407,15378+18]..[407,15378+33])
                                      Pexp_ident "CodeBits.etuple" (src/newRuleSyntax.ml[407,15378+18]..[407,15378+33])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/newRuleSyntax.ml[407,15378+34]..[407,15378+57])
                                          Pexp_apply
                                          expression (src/newRuleSyntax.ml[407,15378+35]..[407,15378+40])
                                            Pexp_ident "evars" (src/newRuleSyntax.ml[407,15378+35]..[407,15378+40])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/newRuleSyntax.ml[407,15378+41]..[407,15378+56])
                                                Pexp_apply
                                                expression (src/newRuleSyntax.ml[407,15378+42]..[407,15378+47])
                                                  Pexp_ident "tuple" (src/newRuleSyntax.ml[407,15378+42]..[407,15378+47])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/newRuleSyntax.ml[407,15378+48]..[407,15378+55])
                                                      Pexp_ident "context" (src/newRuleSyntax.ml[407,15378+48]..[407,15378+55])
                                                ]
                                          ]
                                    ]
                              ]
                              expression (src/newRuleSyntax.ml[412,15732+6]..[428,16282+36])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/newRuleSyntax.ml[412,15732+10]..[412,15732+11])
                                      Ppat_var "e" (src/newRuleSyntax.ml[412,15732+10]..[412,15732+11])
                                    expression (src/newRuleSyntax.ml[413,15746+8]..[417,15854+17])
                                      Pexp_match
                                      expression (src/newRuleSyntax.ml[413,15746+14]..[413,15746+17])
                                        Pexp_ident "oid" (src/newRuleSyntax.ml[413,15746+14]..[413,15746+17])
                                      [
                                        <case>
                                          pattern (src/newRuleSyntax.ml[414,15769+10]..[414,15769+17])
                                            Ppat_construct "Some" (src/newRuleSyntax.ml[414,15769+10]..[414,15769+14])
                                            Some
                                              []
                                              pattern (src/newRuleSyntax.ml[414,15769+15]..[414,15769+17])
                                                Ppat_var "id" (src/newRuleSyntax.ml[414,15769+15]..[414,15769+17])
                                          expression (src/newRuleSyntax.ml[415,15790+12]..[415,15790+45])
                                            Pexp_construct "IL.EApp" (src/newRuleSyntax.ml[415,15790+12]..[415,15790+19])
                                            Some
                                              expression (src/newRuleSyntax.ml[415,15790+20]..[415,15790+45])
                                                Pexp_tuple
                                                [
                                                  expression (src/newRuleSyntax.ml[415,15790+21]..[415,15790+35])
                                                    Pexp_construct "IL.ETextual" (src/newRuleSyntax.ml[415,15790+21]..[415,15790+32])
                                                    Some
                                                      expression (src/newRuleSyntax.ml[415,15790+33]..[415,15790+35])
                                                        Pexp_ident "id" (src/newRuleSyntax.ml[415,15790+33]..[415,15790+35])
                                                  expression (src/newRuleSyntax.ml[415,15790+37]..[415,15790+44])
                                                    Pexp_construct "::" (src/newRuleSyntax.ml[415,15790+38]..[415,15790+44]) ghost
                                                    Some
                                                      expression (src/newRuleSyntax.ml[415,15790+38]..[415,15790+44]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (src/newRuleSyntax.ml[415,15790+38]..[415,15790+43])
                                                            Pexp_ident "tuple" (src/newRuleSyntax.ml[415,15790+38]..[415,15790+43])
                                                          expression (src/newRuleSyntax.ml[415,15790+43]..[415,15790+44]) ghost
                                                            Pexp_construct "[]" (src/newRuleSyntax.ml[415,15790+43]..[415,15790+44]) ghost
                                                            None
                                                        ]
                                                ]
                                        <case>
                                          pattern (src/newRuleSyntax.ml[416,15836+10]..[416,15836+14])
                                            Ppat_construct "None" (src/newRuleSyntax.ml[416,15836+10]..[416,15836+14])
                                            None
                                          expression (src/newRuleSyntax.ml[417,15854+12]..[417,15854+17])
                                            Pexp_ident "tuple" (src/newRuleSyntax.ml[417,15854+12]..[417,15854+17])
                                      ]
                                ]
                                expression (src/newRuleSyntax.ml[420,15930+6]..[428,16282+36])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/newRuleSyntax.ml[420,15930+10]..[420,15930+16])
                                        Ppat_var "action" (src/newRuleSyntax.ml[420,15930+10]..[420,15930+16])
                                      expression (src/newRuleSyntax.ml[420,15930+19]..[420,15930+40])
                                        Pexp_apply
                                        expression (src/newRuleSyntax.ml[420,15930+19]..[420,15930+38])
                                          Pexp_ident "Action.from_il_expr" (src/newRuleSyntax.ml[420,15930+19]..[420,15930+38])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/newRuleSyntax.ml[420,15930+39]..[420,15930+40])
                                              Pexp_ident "e" (src/newRuleSyntax.ml[420,15930+39]..[420,15930+40])
                                        ]
                                  ]
                                  expression (src/newRuleSyntax.ml[421,15974+6]..[428,16282+36])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/newRuleSyntax.ml[421,15974+10]..[421,15974+20])
                                          Ppat_var "raw_action" (src/newRuleSyntax.ml[421,15974+10]..[421,15974+20])
                                        expression (src/newRuleSyntax.ml[421,15974+21]..[421,15974+33]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (src/newRuleSyntax.ml[421,15974+21]..[421,15974+22])
                                            Ppat_any
                                          expression (src/newRuleSyntax.ml[421,15974+23]..[421,15974+33]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (src/newRuleSyntax.ml[421,15974+23]..[421,15974+24])
                                              Ppat_any
                                            expression (src/newRuleSyntax.ml[421,15974+27]..[421,15974+33])
                                              Pexp_ident "action" (src/newRuleSyntax.ml[421,15974+27]..[421,15974+33])
                                    ]
                                    expression (src/newRuleSyntax.ml[422,16011+6]..[428,16282+36])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/newRuleSyntax.ml[422,16011+10]..[422,16011+11])
                                            Ppat_var "e" (src/newRuleSyntax.ml[422,16011+10]..[422,16011+11])
                                          expression (src/newRuleSyntax.ml[422,16011+14]..[422,16011+54])
                                            Pexp_construct "EAction" (src/newRuleSyntax.ml[422,16011+14]..[422,16011+21])
                                            Some
                                              expression (src/newRuleSyntax.ml[422,16011+22]..[422,16011+54])
                                                Pexp_tuple
                                                [
                                                  expression (src/newRuleSyntax.ml[422,16011+23]..[422,16011+47])
                                                    Pexp_construct "XATraditional" (src/newRuleSyntax.ml[422,16011+23]..[422,16011+36])
                                                    Some
                                                      expression (src/newRuleSyntax.ml[422,16011+37]..[422,16011+47])
                                                        Pexp_ident "raw_action" (src/newRuleSyntax.ml[422,16011+37]..[422,16011+47])
                                                  expression (src/newRuleSyntax.ml[422,16011+49]..[422,16011+53])
                                                    Pexp_ident "prec" (src/newRuleSyntax.ml[422,16011+49]..[422,16011+53])
                                                ]
                                      ]
                                      expression (src/newRuleSyntax.ml[423,16069+6]..[428,16282+36])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/newRuleSyntax.ml[423,16069+10]..[423,16069+11])
                                              Ppat_var "e" (src/newRuleSyntax.ml[423,16069+10]..[423,16069+11])
                                            expression (src/newRuleSyntax.ml[423,16069+14]..[423,16069+38])
                                              Pexp_apply
                                              expression (src/newRuleSyntax.ml[423,16069+14]..[423,16069+32])
                                                Pexp_ident "Positions.with_pos" (src/newRuleSyntax.ml[423,16069+14]..[423,16069+32])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/newRuleSyntax.ml[423,16069+33]..[423,16069+36])
                                                    Pexp_ident "pos" (src/newRuleSyntax.ml[423,16069+33]..[423,16069+36])
                                                <arg>
                                                Nolabel
                                                  expression (src/newRuleSyntax.ml[423,16069+37]..[423,16069+38])
                                                    Pexp_ident "e" (src/newRuleSyntax.ml[423,16069+37]..[423,16069+38])
                                              ]
                                        ]
                                        expression (src/newRuleSyntax.ml[426,16208+6]..[428,16282+36])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/newRuleSyntax.ml[426,16208+10]..[426,16208+17])
                                                Ppat_var "context" (src/newRuleSyntax.ml[426,16208+10]..[426,16208+17])
                                              expression (src/newRuleSyntax.ml[426,16208+20]..[426,16208+52])
                                                Pexp_record
                                                [
                                                  "tilde_used" (src/newRuleSyntax.ml[426,16208+35]..[426,16208+45])
                                                    expression (src/newRuleSyntax.ml[426,16208+48]..[426,16208+50])
                                                      Pexp_construct "[]" (src/newRuleSyntax.ml[426,16208+48]..[426,16208+50])
                                                      None
                                                ]
                                                Some
                                                  expression (src/newRuleSyntax.ml[426,16208+22]..[426,16208+29])
                                                    Pexp_ident "context" (src/newRuleSyntax.ml[426,16208+22]..[426,16208+29])
                                          ]
                                          expression (src/newRuleSyntax.ml[428,16282+6]..[428,16282+36])
                                            Pexp_apply
                                            expression (src/newRuleSyntax.ml[428,16282+6]..[428,16282+20])
                                              Pexp_ident "production_aux" (src/newRuleSyntax.ml[428,16282+6]..[428,16282+20])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/newRuleSyntax.ml[428,16282+21]..[428,16282+28])
                                                  Pexp_ident "context" (src/newRuleSyntax.ml[428,16282+21]..[428,16282+28])
                                              <arg>
                                              Nolabel
                                                expression (src/newRuleSyntax.ml[428,16282+29]..[428,16282+30])
                                                  Pexp_ident "e" (src/newRuleSyntax.ml[428,16282+29]..[428,16282+30])
                                              <arg>
                                              Nolabel
                                                expression (src/newRuleSyntax.ml[428,16282+31]..[428,16282+36])
                                                  Pexp_ident "level" (src/newRuleSyntax.ml[428,16282+31]..[428,16282+36])
                                            ]
                      <case>
                        pattern (src/newRuleSyntax.ml[430,16320+4]..[430,16320+16])
                          Ppat_construct "ESingleton" (src/newRuleSyntax.ml[430,16320+4]..[430,16320+14])
                          Some
                            []
                            pattern (src/newRuleSyntax.ml[430,16320+15]..[430,16320+16])
                              Ppat_var "e" (src/newRuleSyntax.ml[430,16320+15]..[430,16320+16])
                        expression (src/newRuleSyntax.ml[431,16340+6]..[443,17064+36])
                          Pexp_sequence
                          expression (src/newRuleSyntax.ml[431,16340+6]..[431,16340+43])
                            Pexp_apply
                            expression (src/newRuleSyntax.ml[431,16340+6]..[431,16340+24])
                              Pexp_ident "tilde_used_warning" (src/newRuleSyntax.ml[431,16340+6]..[431,16340+24])
                            [
                              <arg>
                              Nolabel
                                expression (src/newRuleSyntax.ml[431,16340+25]..[431,16340+43])
                                  Pexp_field
                                  expression (src/newRuleSyntax.ml[431,16340+25]..[431,16340+32])
                                    Pexp_ident "context" (src/newRuleSyntax.ml[431,16340+25]..[431,16340+32])
                                  "tilde_used" (src/newRuleSyntax.ml[431,16340+33]..[431,16340+43])
                            ]
                          expression (src/newRuleSyntax.ml[440,16911+6]..[443,17064+36])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/newRuleSyntax.ml[440,16911+10]..[440,16911+11])
                                  Ppat_var "x" (src/newRuleSyntax.ml[440,16911+10]..[440,16911+11])
                                expression (src/newRuleSyntax.ml[440,16911+14]..[440,16911+28])
                                  Pexp_apply
                                  expression (src/newRuleSyntax.ml[440,16911+14]..[440,16911+20])
                                    Pexp_ident "semvar" (src/newRuleSyntax.ml[440,16911+14]..[440,16911+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/newRuleSyntax.ml[440,16911+21]..[440,16911+28])
                                        Pexp_ident "context" (src/newRuleSyntax.ml[440,16911+21]..[440,16911+28])
                                  ]
                            ]
                            expression (src/newRuleSyntax.ml[441,16943+6]..[443,17064+36])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/newRuleSyntax.ml[441,16943+10]..[441,16943+11])
                                    Ppat_var "e" (src/newRuleSyntax.ml[441,16943+10]..[441,16943+11])
                                  expression (src/newRuleSyntax.ml[441,16943+14]..[441,16943+75])
                                    Pexp_construct "ECons" (src/newRuleSyntax.ml[441,16943+14]..[441,16943+19])
                                    Some
                                      expression (src/newRuleSyntax.ml[441,16943+20]..[441,16943+75])
                                        Pexp_tuple
                                        [
                                          expression (src/newRuleSyntax.ml[441,16943+21]..[441,16943+57])
                                            Pexp_construct "SemPatVar" (src/newRuleSyntax.ml[441,16943+21]..[441,16943+30])
                                            Some
                                              expression (src/newRuleSyntax.ml[441,16943+31]..[441,16943+57])
                                                Pexp_apply
                                                expression (src/newRuleSyntax.ml[441,16943+32]..[441,16943+50])
                                                  Pexp_ident "Positions.with_pos" (src/newRuleSyntax.ml[441,16943+32]..[441,16943+50])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/newRuleSyntax.ml[441,16943+51]..[441,16943+54])
                                                      Pexp_ident "pos" (src/newRuleSyntax.ml[441,16943+51]..[441,16943+54])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/newRuleSyntax.ml[441,16943+55]..[441,16943+56])
                                                      Pexp_ident "x" (src/newRuleSyntax.ml[441,16943+55]..[441,16943+56])
                                                ]
                                          expression (src/newRuleSyntax.ml[441,16943+59]..[441,16943+60])
                                            Pexp_ident "e" (src/newRuleSyntax.ml[441,16943+59]..[441,16943+60])
                                          expression (src/newRuleSyntax.ml[441,16943+62]..[441,16943+74])
                                            Pexp_apply
                                            expression (src/newRuleSyntax.ml[441,16943+62]..[441,16943+68])
                                              Pexp_ident "return" (src/newRuleSyntax.ml[441,16943+62]..[441,16943+68])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/newRuleSyntax.ml[441,16943+69]..[441,16943+72])
                                                  Pexp_ident "pos" (src/newRuleSyntax.ml[441,16943+69]..[441,16943+72])
                                              <arg>
                                              Nolabel
                                                expression (src/newRuleSyntax.ml[441,16943+73]..[441,16943+74])
                                                  Pexp_ident "x" (src/newRuleSyntax.ml[441,16943+73]..[441,16943+74])
                                            ]
                                        ]
                              ]
                              expression (src/newRuleSyntax.ml[442,17022+6]..[443,17064+36])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/newRuleSyntax.ml[442,17022+10]..[442,17022+11])
                                      Ppat_var "e" (src/newRuleSyntax.ml[442,17022+10]..[442,17022+11])
                                    expression (src/newRuleSyntax.ml[442,17022+14]..[442,17022+38])
                                      Pexp_apply
                                      expression (src/newRuleSyntax.ml[442,17022+14]..[442,17022+32])
                                        Pexp_ident "Positions.with_pos" (src/newRuleSyntax.ml[442,17022+14]..[442,17022+32])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/newRuleSyntax.ml[442,17022+33]..[442,17022+36])
                                            Pexp_ident "pos" (src/newRuleSyntax.ml[442,17022+33]..[442,17022+36])
                                        <arg>
                                        Nolabel
                                          expression (src/newRuleSyntax.ml[442,17022+37]..[442,17022+38])
                                            Pexp_ident "e" (src/newRuleSyntax.ml[442,17022+37]..[442,17022+38])
                                      ]
                                ]
                                expression (src/newRuleSyntax.ml[443,17064+6]..[443,17064+36])
                                  Pexp_apply
                                  expression (src/newRuleSyntax.ml[443,17064+6]..[443,17064+20])
                                    Pexp_ident "production_aux" (src/newRuleSyntax.ml[443,17064+6]..[443,17064+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/newRuleSyntax.ml[443,17064+21]..[443,17064+28])
                                        Pexp_ident "context" (src/newRuleSyntax.ml[443,17064+21]..[443,17064+28])
                                    <arg>
                                    Nolabel
                                      expression (src/newRuleSyntax.ml[443,17064+29]..[443,17064+30])
                                        Pexp_ident "e" (src/newRuleSyntax.ml[443,17064+29]..[443,17064+30])
                                    <arg>
                                    Nolabel
                                      expression (src/newRuleSyntax.ml[443,17064+31]..[443,17064+36])
                                        Pexp_ident "level" (src/newRuleSyntax.ml[443,17064+31]..[443,17064+36])
                                  ]
                    ]
                core_type (src/newRuleSyntax.ml[367,13598+2]..[367,13598+22])
                  Ptyp_constr "parameterized_branch" (src/newRuleSyntax.ml[367,13598+2]..[367,13598+22])
                  []
      <def>
        pattern (src/newRuleSyntax.ml[445,17102+4]..[445,17102+14])
          Ppat_var "production" (src/newRuleSyntax.ml[445,17102+4]..[445,17102+14])
        expression (src/newRuleSyntax.ml[445,17102+15]..[449,17233+36]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/newRuleSyntax.ml[445,17102+15]..[445,17102+43])
            Ppat_constraint
            pattern (src/newRuleSyntax.ml[445,17102+16]..[445,17102+33])
              Ppat_construct "Branch" (src/newRuleSyntax.ml[445,17102+16]..[445,17102+22])
              Some
                []
                pattern (src/newRuleSyntax.ml[445,17102+23]..[445,17102+33])
                  Ppat_tuple
                  [
                    pattern (src/newRuleSyntax.ml[445,17102+24]..[445,17102+25])
                      Ppat_var "e" (src/newRuleSyntax.ml[445,17102+24]..[445,17102+25])
                    pattern (src/newRuleSyntax.ml[445,17102+27]..[445,17102+32])
                      Ppat_var "level" (src/newRuleSyntax.ml[445,17102+27]..[445,17102+32])
                  ]
            core_type (src/newRuleSyntax.ml[445,17102+36]..[445,17102+42])
              Ptyp_constr "branch" (src/newRuleSyntax.ml[445,17102+36]..[445,17102+42])
              []
          expression (src/newRuleSyntax.ml[446,17148+2]..[449,17233+36])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/newRuleSyntax.ml[446,17148+6]..[446,17148+7])
                  Ppat_var "e" (src/newRuleSyntax.ml[446,17148+6]..[446,17148+7])
                expression (src/newRuleSyntax.ml[446,17148+10]..[446,17148+24])
                  Pexp_apply
                  expression (src/newRuleSyntax.ml[446,17148+10]..[446,17148+22])
                    Pexp_ident "resolve_puns" (src/newRuleSyntax.ml[446,17148+10]..[446,17148+22])
                  [
                    <arg>
                    Nolabel
                      expression (src/newRuleSyntax.ml[446,17148+23]..[446,17148+24])
                        Pexp_ident "e" (src/newRuleSyntax.ml[446,17148+23]..[446,17148+24])
                  ]
            ]
            expression (src/newRuleSyntax.ml[447,17176+2]..[449,17233+36])
              Pexp_sequence
              expression (src/newRuleSyntax.ml[447,17176+2]..[447,17176+19])
                Pexp_apply
                expression (src/newRuleSyntax.ml[447,17176+2]..[447,17176+17])
                  Pexp_ident "check_linearity" (src/newRuleSyntax.ml[447,17176+2]..[447,17176+17])
                [
                  <arg>
                  Nolabel
                    expression (src/newRuleSyntax.ml[447,17176+18]..[447,17176+19])
                      Pexp_ident "e" (src/newRuleSyntax.ml[447,17176+18]..[447,17176+19])
                ]
              expression (src/newRuleSyntax.ml[448,17197+2]..[449,17233+36])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/newRuleSyntax.ml[448,17197+6]..[448,17197+9])
                      Ppat_var "pos" (src/newRuleSyntax.ml[448,17197+6]..[448,17197+9])
                    expression (src/newRuleSyntax.ml[448,17197+12]..[448,17197+32])
                      Pexp_apply
                      expression (src/newRuleSyntax.ml[448,17197+12]..[448,17197+30])
                        Pexp_ident "Positions.position" (src/newRuleSyntax.ml[448,17197+12]..[448,17197+30])
                      [
                        <arg>
                        Nolabel
                          expression (src/newRuleSyntax.ml[448,17197+31]..[448,17197+32])
                            Pexp_ident "e" (src/newRuleSyntax.ml[448,17197+31]..[448,17197+32])
                      ]
                ]
                expression (src/newRuleSyntax.ml[449,17233+2]..[449,17233+36])
                  Pexp_apply
                  expression (src/newRuleSyntax.ml[449,17233+2]..[449,17233+16])
                    Pexp_ident "production_aux" (src/newRuleSyntax.ml[449,17233+2]..[449,17233+16])
                  [
                    <arg>
                    Nolabel
                      expression (src/newRuleSyntax.ml[449,17233+17]..[449,17233+28])
                        Pexp_apply
                        expression (src/newRuleSyntax.ml[449,17233+18]..[449,17233+23])
                          Pexp_ident "empty" (src/newRuleSyntax.ml[449,17233+18]..[449,17233+23])
                        [
                          <arg>
                          Nolabel
                            expression (src/newRuleSyntax.ml[449,17233+24]..[449,17233+27])
                              Pexp_ident "pos" (src/newRuleSyntax.ml[449,17233+24]..[449,17233+27])
                        ]
                    <arg>
                    Nolabel
                      expression (src/newRuleSyntax.ml[449,17233+29]..[449,17233+30])
                        Pexp_ident "e" (src/newRuleSyntax.ml[449,17233+29]..[449,17233+30])
                    <arg>
                    Nolabel
                      expression (src/newRuleSyntax.ml[449,17233+31]..[449,17233+36])
                        Pexp_ident "level" (src/newRuleSyntax.ml[449,17233+31]..[449,17233+36])
                  ]
      <def>
        pattern (src/newRuleSyntax.ml[451,17271+4]..[451,17271+15])
          Ppat_var "productions" (src/newRuleSyntax.ml[451,17271+4]..[451,17271+15])
        expression (src/newRuleSyntax.ml[451,17271+16]..[454,17389+34]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/newRuleSyntax.ml[451,17271+16]..[451,17271+32])
            Ppat_constraint
            pattern (src/newRuleSyntax.ml[451,17271+17]..[451,17271+18])
              Ppat_var "e" (src/newRuleSyntax.ml[451,17271+17]..[451,17271+18])
            core_type (src/newRuleSyntax.ml[451,17271+21]..[451,17271+31])
              Ptyp_constr "expression" (src/newRuleSyntax.ml[451,17271+21]..[451,17271+31])
              []
          expression (src/newRuleSyntax.ml[451,17271+33]..[454,17389+34])
            Pexp_constraint
            expression (src/newRuleSyntax.ml[452,17334+2]..[454,17389+34])
              Pexp_match
              expression (src/newRuleSyntax.ml[452,17334+8]..[452,17334+25])
                Pexp_apply
                expression (src/newRuleSyntax.ml[452,17334+8]..[452,17334+23])
                  Pexp_ident "Positions.value" (src/newRuleSyntax.ml[452,17334+8]..[452,17334+23])
                [
                  <arg>
                  Nolabel
                    expression (src/newRuleSyntax.ml[452,17334+24]..[452,17334+25])
                      Pexp_ident "e" (src/newRuleSyntax.ml[452,17334+24]..[452,17334+25])
                ]
              [
                <case>
                  pattern (src/newRuleSyntax.ml[453,17365+4]..[453,17365+20])
                    Ppat_construct "EChoice" (src/newRuleSyntax.ml[453,17365+4]..[453,17365+11])
                    Some
                      []
                      pattern (src/newRuleSyntax.ml[453,17365+12]..[453,17365+20])
                        Ppat_var "branches" (src/newRuleSyntax.ml[453,17365+12]..[453,17365+20])
                  expression (src/newRuleSyntax.ml[454,17389+6]..[454,17389+34])
                    Pexp_apply
                    expression (src/newRuleSyntax.ml[454,17389+6]..[454,17389+14])
                      Pexp_ident "List.map" (src/newRuleSyntax.ml[454,17389+6]..[454,17389+14])
                    [
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[454,17389+15]..[454,17389+25])
                          Pexp_ident "production" (src/newRuleSyntax.ml[454,17389+15]..[454,17389+25])
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[454,17389+26]..[454,17389+34])
                          Pexp_ident "branches" (src/newRuleSyntax.ml[454,17389+26]..[454,17389+34])
                    ]
              ]
            core_type (src/newRuleSyntax.ml[451,17271+35]..[451,17271+60])
              Ptyp_constr "list" (src/newRuleSyntax.ml[451,17271+56]..[451,17271+60])
              [
                core_type (src/newRuleSyntax.ml[451,17271+35]..[451,17271+55])
                  Ptyp_constr "parameterized_branch" (src/newRuleSyntax.ml[451,17271+35]..[451,17271+55])
                  []
              ]
    ]
  structure_item (src/newRuleSyntax.ml[460,17552+0]..[469,17946+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[460,17552+4]..[460,17552+8])
          Ppat_var "rule" (src/newRuleSyntax.ml[460,17552+4]..[460,17552+8])
        expression (src/newRuleSyntax.ml[460,17552+9]..[469,17946+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/newRuleSyntax.ml[460,17552+9]..[460,17552+22])
            Ppat_constraint
            pattern (src/newRuleSyntax.ml[460,17552+10]..[460,17552+14])
              Ppat_var "rule" (src/newRuleSyntax.ml[460,17552+10]..[460,17552+14])
            core_type (src/newRuleSyntax.ml[460,17552+17]..[460,17552+21])
              Ptyp_constr "rule" (src/newRuleSyntax.ml[460,17552+17]..[460,17552+21])
              []
          expression (src/newRuleSyntax.ml[460,17552+23]..[469,17946+3])
            Pexp_constraint
            expression (src/newRuleSyntax.ml[461,17598+2]..[469,17946+3])
              Pexp_record
              [
                "pr_public_flag" (src/newRuleSyntax.ml[462,17602+4]..[462,17602+18])
                  expression (src/newRuleSyntax.ml[462,17602+21]..[462,17602+37])
                    Pexp_field
                    expression (src/newRuleSyntax.ml[462,17602+21]..[462,17602+25])
                      Pexp_ident "rule" (src/newRuleSyntax.ml[462,17602+21]..[462,17602+25])
                    "rule_public" (src/newRuleSyntax.ml[462,17602+26]..[462,17602+37])
                "pr_inline_flag" (src/newRuleSyntax.ml[463,17641+4]..[463,17641+18])
                  expression (src/newRuleSyntax.ml[463,17641+21]..[463,17641+37])
                    Pexp_field
                    expression (src/newRuleSyntax.ml[463,17641+21]..[463,17641+25])
                      Pexp_ident "rule" (src/newRuleSyntax.ml[463,17641+21]..[463,17641+25])
                    "rule_inline" (src/newRuleSyntax.ml[463,17641+26]..[463,17641+37])
                "pr_nt" (src/newRuleSyntax.ml[464,17680+4]..[464,17680+9])
                  expression (src/newRuleSyntax.ml[464,17680+21]..[464,17680+50])
                    Pexp_apply
                    expression (src/newRuleSyntax.ml[464,17680+21]..[464,17680+36])
                      Pexp_ident "Positions.value" (src/newRuleSyntax.ml[464,17680+21]..[464,17680+36])
                    [
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[464,17680+37]..[464,17680+50])
                          Pexp_field
                          expression (src/newRuleSyntax.ml[464,17680+37]..[464,17680+41])
                            Pexp_ident "rule" (src/newRuleSyntax.ml[464,17680+37]..[464,17680+41])
                          "rule_lhs" (src/newRuleSyntax.ml[464,17680+42]..[464,17680+50])
                    ]
                "pr_positions" (src/newRuleSyntax.ml[465,17732+4]..[465,17732+16])
                  expression (src/newRuleSyntax.ml[465,17732+21]..[465,17732+57])
                    Pexp_construct "::" (src/newRuleSyntax.ml[465,17732+23]..[465,17732+57]) ghost
                    Some
                      expression (src/newRuleSyntax.ml[465,17732+23]..[465,17732+57]) ghost
                        Pexp_tuple
                        [
                          expression (src/newRuleSyntax.ml[465,17732+23]..[465,17732+55])
                            Pexp_apply
                            expression (src/newRuleSyntax.ml[465,17732+23]..[465,17732+41])
                              Pexp_ident "Positions.position" (src/newRuleSyntax.ml[465,17732+23]..[465,17732+41])
                            [
                              <arg>
                              Nolabel
                                expression (src/newRuleSyntax.ml[465,17732+42]..[465,17732+55])
                                  Pexp_field
                                  expression (src/newRuleSyntax.ml[465,17732+42]..[465,17732+46])
                                    Pexp_ident "rule" (src/newRuleSyntax.ml[465,17732+42]..[465,17732+46])
                                  "rule_lhs" (src/newRuleSyntax.ml[465,17732+47]..[465,17732+55])
                            ]
                          expression (src/newRuleSyntax.ml[465,17732+56]..[465,17732+57]) ghost
                            Pexp_construct "[]" (src/newRuleSyntax.ml[465,17732+56]..[465,17732+57]) ghost
                            None
                        ]
                "pr_attributes" (src/newRuleSyntax.ml[466,17791+4]..[466,17791+17])
                  expression (src/newRuleSyntax.ml[466,17791+21]..[466,17791+41])
                    Pexp_field
                    expression (src/newRuleSyntax.ml[466,17791+21]..[466,17791+25])
                      Pexp_ident "rule" (src/newRuleSyntax.ml[466,17791+21]..[466,17791+25])
                    "rule_attributes" (src/newRuleSyntax.ml[466,17791+26]..[466,17791+41])
                "pr_parameters" (src/newRuleSyntax.ml[467,17834+4]..[467,17834+17])
                  expression (src/newRuleSyntax.ml[467,17834+21]..[467,17834+63])
                    Pexp_apply
                    expression (src/newRuleSyntax.ml[467,17834+21]..[467,17834+29])
                      Pexp_ident "List.map" (src/newRuleSyntax.ml[467,17834+21]..[467,17834+29])
                    [
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[467,17834+30]..[467,17834+45])
                          Pexp_ident "Positions.value" (src/newRuleSyntax.ml[467,17834+30]..[467,17834+45])
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[467,17834+46]..[467,17834+63])
                          Pexp_field
                          expression (src/newRuleSyntax.ml[467,17834+46]..[467,17834+50])
                            Pexp_ident "rule" (src/newRuleSyntax.ml[467,17834+46]..[467,17834+50])
                          "rule_formals" (src/newRuleSyntax.ml[467,17834+51]..[467,17834+63])
                    ]
                "pr_branches" (src/newRuleSyntax.ml[468,17899+4]..[468,17899+15])
                  expression (src/newRuleSyntax.ml[468,17899+21]..[468,17899+46])
                    Pexp_apply
                    expression (src/newRuleSyntax.ml[468,17899+21]..[468,17899+32])
                      Pexp_ident "productions" (src/newRuleSyntax.ml[468,17899+21]..[468,17899+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/newRuleSyntax.ml[468,17899+33]..[468,17899+46])
                          Pexp_field
                          expression (src/newRuleSyntax.ml[468,17899+33]..[468,17899+37])
                            Pexp_ident "rule" (src/newRuleSyntax.ml[468,17899+33]..[468,17899+37])
                          "rule_rhs" (src/newRuleSyntax.ml[468,17899+38]..[468,17899+46])
                    ]
              ]
              None
            core_type (src/newRuleSyntax.ml[460,17552+25]..[460,17552+43])
              Ptyp_constr "parameterized_rule" (src/newRuleSyntax.ml[460,17552+25]..[460,17552+43])
              []
    ]
]

open Syntax
let (>>) f g x = g (f x)
let return pos x =
  (let action = Action.from_il_expr (IL.EVar x) in
   let raw_action _ _ = action in
   Positions.with_pos pos (EAction ((XATraditional raw_action), None)) : 
  seq_expression)
let rec resolve_puns (e : seq_expression) =
  (Positions.map
     (fun e ->
        match e with
        | ECons (SemPatTilde pos, (ESymbol (x1, [], _) as e1), e2) when
            ParserAux.valid_ocaml_identifier x1 ->
            let x1 = Positions.with_pos pos (Positions.value x1) in
            ECons ((SemPatVar x1), e1, (resolve_puns e2))
        | ECons (p1, e1, e2) -> ECons (p1, e1, (resolve_puns e2))
        | ESingleton _ | EAction _ -> e) e : seq_expression)
let check_linearity (ps : pattern list) =
  let rec build (m : Positions.positions StringMap.t) (p : pattern) =
    match p with
    | SemPatVar x ->
        let (x, pos) = Positions.decompose x in
        StringMap.multiple_add x pos m
    | SemPatWildcard | SemPatTilde _ -> m
    | SemPatTuple ps -> List.fold_left build m ps in
  let m = List.fold_left build StringMap.empty ps in
  StringMap.iter
    (fun x ->
       fun positions ->
         if (List.length positions) > 1
         then
           Error.error positions "The variable %s is bound several times." x)
    m
let rec patterns (e : seq_expression) =
  (let e = Positions.value e in
   match e with
   | ECons (p, _, e) -> p :: (patterns e)
   | ESingleton _ | EAction _ -> [] : pattern list)
let check_linearity : seq_expression -> unit = patterns >> check_linearity
let rec tilde_used positions (p : pattern) =
  match p with
  | SemPatVar _ | SemPatWildcard -> positions
  | SemPatTilde pos -> pos :: positions
  | SemPatTuple ps -> List.fold_left tilde_used positions ps
let tilde_used_warning positions =
  let n = List.length positions in
  if n > 0
  then
    let (variables_have, tpatterns, wpatterns) =
      if n = 1
      then ("variable has", "a ~ pattern", "a wildcard pattern _")
      else ("variables have", "~ patterns", "wildcard patterns _") in
    Error.warning positions
      "%s nameless %s been introduced by %s,\nyet this sequence does not end in a point-free semantic action <...>.\nPerhaps %s should be used instead."
      (Misc.count n) variables_have tpatterns wpatterns
let pattern (x1 : identifier) (p : pattern) =
  (let c = ref 1 in
   let fresh () = Printf.sprintf "%s_%d" x1 (Misc.postincrement c) in
   let rec pattern p =
     match p with
     | SemPatVar x -> IL.PVar (Positions.value x)
     | SemPatWildcard -> IL.PWildcard
     | SemPatTilde _ -> IL.PVar (fresh ())
     | SemPatTuple [] -> IL.PUnit
     | SemPatTuple (p::[]) -> pattern p
     | SemPatTuple ps -> IL.PTuple (List.map pattern ps) in
   pattern p : IL.pattern)
let rec bv accu p =
  match p with
  | IL.PVar x -> x :: accu
  | IL.PWildcard -> accu
  | IL.PUnit -> accu
  | IL.PTuple ps -> List.fold_left bv accu ps
  | _ -> assert false
let attributes (e : symbol_expression) =
  (match e with | ESymbol (_, _, attrs) -> attrs : attributes)
type context =
  {
  pos: Positions.t ;
  producers: producer list ;
  uxs: identifier option list ;
  bindings: action -> action ;
  tuple: identifier list ;
  tilde_used: Positions.positions }
let empty pos =
  ({
     pos;
     producers = [];
     uxs = [];
     bindings = (fun a -> a);
     tuple = [];
     tilde_used = []
   } : context)
let user (x : identifier located) =
  (Some (Positions.value x) : identifier option)
let auto : identifier option = None
let producers context = (List.rev context.producers : producer list)
let uxs context =
  (Array.of_list (List.rev context.uxs) : identifier option array)
let tuple context = (List.rev context.tuple : identifier list)
let semvar context =
  (let i = (List.length context.producers) + 1 in Printf.sprintf "_%d" i : 
  identifier)
let rec parameter (e : symbol_expression) =
  (match e with
   | ESymbol (sym, args, _attrs) ->
       Parameters.app sym (List.map nested_parameter args) : parameter)
and nested_parameter (e : expression) =
  (match Positions.value e with
   | EChoice ((Branch ({ Positions.value = ESingleton e }, _))::[]) ->
       parameter e
   | EChoice _ ->
       let pos = Positions.position e in
       ParameterAnonymous (Positions.with_pos pos (productions e)) : 
  parameter)
and producer x (e1 : symbol_expression) =
  ((x, (parameter e1), (attributes e1)) : producer)
and extend (p : pattern) (e1 : symbol_expression) (context : context) =
  (match p with
   | SemPatVar x1 ->
       {
         pos = (context.pos);
         producers = ((producer x1 e1) :: (context.producers));
         uxs = ((user x1) :: (context.uxs));
         bindings = (context.bindings);
         tuple = ((Positions.value x1) :: (context.tuple));
         tilde_used = (context.tilde_used)
       }
   | _ ->
       let x1 = semvar context in
       let tilde_used = tilde_used context.tilde_used p in
       let p : IL.pattern = pattern x1 p in
       let binding = Action.bind p x1 in
       let x1 = Positions.unknown_pos x1 in
       {
         pos = (context.pos);
         producers = ((producer x1 e1) :: (context.producers));
         uxs = (auto :: (context.uxs));
         bindings = (binding >> context.bindings);
         tuple = (bv context.tuple p);
         tilde_used
       } : context)
and production_aux (context : context) (e : seq_expression)
  (level : branch_production_level) =
  (let (e, pos) = Positions.decompose e in
   match e with
   | ECons (p, e1, e2) -> production_aux (extend p e1 context) e2 level
   | EAction (XATraditional raw_action, prec) ->
       (tilde_used_warning context.tilde_used;
        (let action = raw_action Settings.DollarsDisallowed (uxs context) in
         {
           pr_branch_position = (context.pos);
           pr_producers = (producers context);
           pr_action = (context.bindings action);
           pr_branch_prec_annotation = prec;
           pr_branch_production_level = level
         }))
   | EAction (XAPointFree oid, prec) ->
       let evar x = IL.EVar x in
       let evars xs = List.map evar xs in
       let tuple = CodeBits.etuple (evars (tuple context)) in
       let e =
         match oid with
         | Some id -> IL.EApp ((IL.ETextual id), [tuple])
         | None -> tuple in
       let action = Action.from_il_expr e in
       let raw_action _ _ = action in
       let e = EAction ((XATraditional raw_action), prec) in
       let e = Positions.with_pos pos e in
       let context = { context with tilde_used = [] } in
       production_aux context e level
   | ESingleton e ->
       (tilde_used_warning context.tilde_used;
        (let x = semvar context in
         let e =
           ECons ((SemPatVar (Positions.with_pos pos x)), e, (return pos x)) in
         let e = Positions.with_pos pos e in production_aux context e level)) : 
  parameterized_branch)
and production (Branch (e, level) : branch) =
  let e = resolve_puns e in
  check_linearity e;
  (let pos = Positions.position e in production_aux (empty pos) e level)
and productions (e : expression) =
  (match Positions.value e with
   | EChoice branches -> List.map production branches : parameterized_branch
                                                          list)
let rule (rule : rule) =
  ({
     pr_public_flag = (rule.rule_public);
     pr_inline_flag = (rule.rule_inline);
     pr_nt = (Positions.value rule.rule_lhs);
     pr_positions = [Positions.position rule.rule_lhs];
     pr_attributes = (rule.rule_attributes);
     pr_parameters = (List.map Positions.value rule.rule_formals);
     pr_branches = (productions rule.rule_rhs)
   } : parameterized_rule)
[
  structure_item (src/newRuleSyntax.ml[14,1003+0]..src/newRuleSyntax.ml[14,1003+11])
    Tstr_open Fresh
    module_expr (src/newRuleSyntax.ml[14,1003+5]..src/newRuleSyntax.ml[14,1003+11])
      Tmod_ident "Dune__exe!.Syntax"
  structure_item (src/newRuleSyntax.ml[25,1440+0]..src/newRuleSyntax.ml[26,1457+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[25,1440+4]..src/newRuleSyntax.ml[25,1440+8])
          Tpat_var ">>/432"
        expression (src/newRuleSyntax.ml[25,1440+9]..src/newRuleSyntax.ml[26,1457+9]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/newRuleSyntax.ml[25,1440+9]..src/newRuleSyntax.ml[25,1440+10])
                Tpat_var "f/434"
              expression (src/newRuleSyntax.ml[25,1440+11]..src/newRuleSyntax.ml[26,1457+9]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/newRuleSyntax.ml[25,1440+11]..src/newRuleSyntax.ml[25,1440+12])
                      Tpat_var "g/435"
                    expression (src/newRuleSyntax.ml[25,1440+13]..src/newRuleSyntax.ml[26,1457+9]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/newRuleSyntax.ml[25,1440+13]..src/newRuleSyntax.ml[25,1440+14])
                            Tpat_var "x/436"
                          expression (src/newRuleSyntax.ml[26,1457+2]..src/newRuleSyntax.ml[26,1457+9])
                            Texp_apply
                            expression (src/newRuleSyntax.ml[26,1457+2]..src/newRuleSyntax.ml[26,1457+3])
                              Texp_ident "g/435"
                            [
                              <arg>
                                Nolabel
                                expression (src/newRuleSyntax.ml[26,1457+4]..src/newRuleSyntax.ml[26,1457+9])
                                  Texp_apply
                                  expression (src/newRuleSyntax.ml[26,1457+5]..src/newRuleSyntax.ml[26,1457+6])
                                    Texp_ident "f/434"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/newRuleSyntax.ml[26,1457+7]..src/newRuleSyntax.ml[26,1457+8])
                                        Texp_ident "x/436"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/newRuleSyntax.ml[34,1647+0]..src/newRuleSyntax.ml[37,1766+67])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[34,1647+4]..src/newRuleSyntax.ml[34,1647+10])
          Tpat_var "return/437"
        expression (src/newRuleSyntax.ml[34,1647+11]..src/newRuleSyntax.ml[37,1766+67]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/newRuleSyntax.ml[34,1647+11]..src/newRuleSyntax.ml[34,1647+14])
                Tpat_var "pos/439"
              expression (src/newRuleSyntax.ml[34,1647+15]..src/newRuleSyntax.ml[37,1766+67]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/newRuleSyntax.ml[34,1647+15]..src/newRuleSyntax.ml[34,1647+16])
                      Tpat_var "x/440"
                    expression (src/newRuleSyntax.ml[35,1683+2]..src/newRuleSyntax.ml[37,1766+67])
                      extra
                        Texp_constraint
                        core_type (src/newRuleSyntax.ml[34,1647+19]..src/newRuleSyntax.ml[34,1647+33])
                          Ttyp_constr "Dune__exe!.Syntax.seq_expression"
                          []
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/newRuleSyntax.ml[35,1683+6]..src/newRuleSyntax.ml[35,1683+12])
                            Tpat_var "action/441"
                          expression (src/newRuleSyntax.ml[35,1683+15]..src/newRuleSyntax.ml[35,1683+46])
                            Texp_apply
                            expression (src/newRuleSyntax.ml[35,1683+15]..src/newRuleSyntax.ml[35,1683+34])
                              Texp_ident "Dune__exe!.Action.from_il_expr"
                            [
                              <arg>
                                Nolabel
                                expression (src/newRuleSyntax.ml[35,1683+35]..src/newRuleSyntax.ml[35,1683+46])
                                  Texp_construct "IL.EVar"
                                  [
                                    expression (src/newRuleSyntax.ml[35,1683+44]..src/newRuleSyntax.ml[35,1683+45])
                                      Texp_ident "x/440"
                                  ]
                            ]
                      ]
                      expression (src/newRuleSyntax.ml[36,1733+2]..src/newRuleSyntax.ml[37,1766+67])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/newRuleSyntax.ml[36,1733+6]..src/newRuleSyntax.ml[36,1733+16])
                              Tpat_var "raw_action/532"
                            expression (src/newRuleSyntax.ml[36,1733+17]..src/newRuleSyntax.ml[36,1733+29]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/newRuleSyntax.ml[36,1733+17]..src/newRuleSyntax.ml[36,1733+18])
                                    Tpat_any
                                  expression (src/newRuleSyntax.ml[36,1733+19]..src/newRuleSyntax.ml[36,1733+29]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/newRuleSyntax.ml[36,1733+19]..src/newRuleSyntax.ml[36,1733+20])
                                          Tpat_any
                                        expression (src/newRuleSyntax.ml[36,1733+23]..src/newRuleSyntax.ml[36,1733+29])
                                          Texp_ident "action/441"
                                    ]
                              ]
                        ]
                        expression (src/newRuleSyntax.ml[37,1766+2]..src/newRuleSyntax.ml[37,1766+67])
                          Texp_apply
                          expression (src/newRuleSyntax.ml[37,1766+2]..src/newRuleSyntax.ml[37,1766+20])
                            Texp_ident "Dune__exe!.Positions.with_pos"
                          [
                            <arg>
                              Nolabel
                              expression (src/newRuleSyntax.ml[37,1766+21]..src/newRuleSyntax.ml[37,1766+24])
                                Texp_ident "pos/439"
                            <arg>
                              Nolabel
                              expression (src/newRuleSyntax.ml[37,1766+25]..src/newRuleSyntax.ml[37,1766+67])
                                Texp_construct "EAction"
                                [
                                  expression (src/newRuleSyntax.ml[37,1766+35]..src/newRuleSyntax.ml[37,1766+59])
                                    Texp_construct "XATraditional"
                                    [
                                      expression (src/newRuleSyntax.ml[37,1766+49]..src/newRuleSyntax.ml[37,1766+59])
                                        Texp_ident "raw_action/532"
                                    ]
                                  expression (src/newRuleSyntax.ml[37,1766+61]..src/newRuleSyntax.ml[37,1766+65])
                                    Texp_construct "None"
                                    []
                                ]
                          ]
                ]
          ]
    ]
  structure_item (src/newRuleSyntax.ml[59,2811+0]..src/newRuleSyntax.ml[72,3314+5])
    Tstr_value Rec
    [
      <def>
        pattern (src/newRuleSyntax.ml[59,2811+8]..src/newRuleSyntax.ml[59,2811+20])
          Tpat_var "resolve_puns/641"
        expression (src/newRuleSyntax.ml[59,2811+21]..src/newRuleSyntax.ml[72,3314+5]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/newRuleSyntax.ml[59,2811+22]..src/newRuleSyntax.ml[59,2811+23])
                extra
                  Tpat_extra_constraint
                  core_type (src/newRuleSyntax.ml[59,2811+26]..src/newRuleSyntax.ml[59,2811+40])
                    Ttyp_constr "Dune__exe!.Syntax.seq_expression"
                    []
                Tpat_alias "e/642"
                pattern (src/newRuleSyntax.ml[59,2811+22]..src/newRuleSyntax.ml[59,2811+23])
                  Tpat_any
              expression (src/newRuleSyntax.ml[60,2872+2]..src/newRuleSyntax.ml[72,3314+5])
                extra
                  Texp_constraint
                  core_type (src/newRuleSyntax.ml[59,2811+44]..src/newRuleSyntax.ml[59,2811+58])
                    Ttyp_constr "Dune__exe!.Syntax.seq_expression"
                    []
                Texp_apply
                expression (src/newRuleSyntax.ml[60,2872+2]..src/newRuleSyntax.ml[60,2872+15])
                  Texp_ident "Dune__exe!.Positions.map"
                [
                  <arg>
                    Nolabel
                    expression (src/newRuleSyntax.ml[60,2872+16]..src/newRuleSyntax.ml[72,3314+3])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/newRuleSyntax.ml[60,2872+21]..src/newRuleSyntax.ml[60,2872+22])
                            Tpat_var "e/643"
                          expression (src/newRuleSyntax.ml[61,2898+4]..src/newRuleSyntax.ml[71,3304+9])
                            Texp_match
                            expression (src/newRuleSyntax.ml[61,2898+10]..src/newRuleSyntax.ml[61,2898+11])
                              Texp_ident "e/643"
                            [
                              <case>
                                pattern (src/newRuleSyntax.ml[62,2915+6]..src/newRuleSyntax.ml[62,2915+62])
                                  Tpat_value
                                  pattern (src/newRuleSyntax.ml[62,2915+6]..src/newRuleSyntax.ml[62,2915+62])
                                    Tpat_construct "ECons"
                                    [
                                      pattern (src/newRuleSyntax.ml[62,2915+13]..src/newRuleSyntax.ml[62,2915+28])
                                        Tpat_construct "SemPatTilde"
                                        [
                                          pattern (src/newRuleSyntax.ml[62,2915+25]..src/newRuleSyntax.ml[62,2915+28])
                                            Tpat_var "pos/644"
                                        ]
                                        None
                                      pattern (src/newRuleSyntax.ml[62,2915+30]..src/newRuleSyntax.ml[62,2915+57])
                                        Tpat_alias "e1/646"
                                        pattern (src/newRuleSyntax.ml[62,2915+31]..src/newRuleSyntax.ml[62,2915+50])
                                          Tpat_construct "ESymbol"
                                          [
                                            pattern (src/newRuleSyntax.ml[62,2915+40]..src/newRuleSyntax.ml[62,2915+42])
                                              Tpat_var "x1/645"
                                            pattern (src/newRuleSyntax.ml[62,2915+44]..src/newRuleSyntax.ml[62,2915+46])
                                              Tpat_construct "[]"
                                              []
                                              None
                                            pattern (src/newRuleSyntax.ml[62,2915+48]..src/newRuleSyntax.ml[62,2915+49])
                                              Tpat_any
                                          ]
                                          None
                                      pattern (src/newRuleSyntax.ml[62,2915+59]..src/newRuleSyntax.ml[62,2915+61])
                                        Tpat_var "e2/647"
                                    ]
                                    None
                                <when>
                                  expression (src/newRuleSyntax.ml[63,2978+11]..src/newRuleSyntax.ml[63,2978+46])
                                    Texp_apply
                                    expression (src/newRuleSyntax.ml[63,2978+11]..src/newRuleSyntax.ml[63,2978+43])
                                      Texp_ident "Dune__exe!.ParserAux.valid_ocaml_identifier"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/newRuleSyntax.ml[63,2978+44]..src/newRuleSyntax.ml[63,2978+46])
                                          Texp_ident "x1/645"
                                    ]
                                expression (src/newRuleSyntax.ml[65,3069+8]..src/newRuleSyntax.ml[66,3148+49])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/newRuleSyntax.ml[65,3069+12]..src/newRuleSyntax.ml[65,3069+14])
                                        Tpat_var "x1/664"
                                      expression (src/newRuleSyntax.ml[65,3069+17]..src/newRuleSyntax.ml[65,3069+60])
                                        Texp_apply
                                        expression (src/newRuleSyntax.ml[65,3069+17]..src/newRuleSyntax.ml[65,3069+35])
                                          Texp_ident "Dune__exe!.Positions.with_pos"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/newRuleSyntax.ml[65,3069+36]..src/newRuleSyntax.ml[65,3069+39])
                                              Texp_ident "pos/644"
                                          <arg>
                                            Nolabel
                                            expression (src/newRuleSyntax.ml[65,3069+40]..src/newRuleSyntax.ml[65,3069+60])
                                              Texp_apply
                                              expression (src/newRuleSyntax.ml[65,3069+41]..src/newRuleSyntax.ml[65,3069+56])
                                                Texp_ident "Dune__exe!.Positions.value"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/newRuleSyntax.ml[65,3069+57]..src/newRuleSyntax.ml[65,3069+59])
                                                    Texp_ident "x1/645"
                                              ]
                                        ]
                                  ]
                                  expression (src/newRuleSyntax.ml[66,3148+8]..src/newRuleSyntax.ml[66,3148+49])
                                    Texp_construct "ECons"
                                    [
                                      expression (src/newRuleSyntax.ml[66,3148+15]..src/newRuleSyntax.ml[66,3148+27])
                                        Texp_construct "SemPatVar"
                                        [
                                          expression (src/newRuleSyntax.ml[66,3148+25]..src/newRuleSyntax.ml[66,3148+27])
                                            Texp_ident "x1/664"
                                        ]
                                      expression (src/newRuleSyntax.ml[66,3148+29]..src/newRuleSyntax.ml[66,3148+31])
                                        Texp_ident "e1/646"
                                      expression (src/newRuleSyntax.ml[66,3148+33]..src/newRuleSyntax.ml[66,3148+48])
                                        Texp_apply
                                        expression (src/newRuleSyntax.ml[66,3148+33]..src/newRuleSyntax.ml[66,3148+45])
                                          Texp_ident "resolve_puns/641"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/newRuleSyntax.ml[66,3148+46]..src/newRuleSyntax.ml[66,3148+48])
                                              Texp_ident "e2/647"
                                        ]
                                    ]
                              <case>
                                pattern (src/newRuleSyntax.ml[67,3198+6]..src/newRuleSyntax.ml[67,3198+24])
                                  Tpat_value
                                  pattern (src/newRuleSyntax.ml[67,3198+6]..src/newRuleSyntax.ml[67,3198+24])
                                    Tpat_construct "ECons"
                                    [
                                      pattern (src/newRuleSyntax.ml[67,3198+13]..src/newRuleSyntax.ml[67,3198+15])
                                        Tpat_var "p1/648"
                                      pattern (src/newRuleSyntax.ml[67,3198+17]..src/newRuleSyntax.ml[67,3198+19])
                                        Tpat_var "e1/649"
                                      pattern (src/newRuleSyntax.ml[67,3198+21]..src/newRuleSyntax.ml[67,3198+23])
                                        Tpat_var "e2/650"
                                    ]
                                    None
                                expression (src/newRuleSyntax.ml[68,3226+8]..src/newRuleSyntax.ml[68,3226+39])
                                  Texp_construct "ECons"
                                  [
                                    expression (src/newRuleSyntax.ml[68,3226+15]..src/newRuleSyntax.ml[68,3226+17])
                                      Texp_ident "p1/648"
                                    expression (src/newRuleSyntax.ml[68,3226+19]..src/newRuleSyntax.ml[68,3226+21])
                                      Texp_ident "e1/649"
                                    expression (src/newRuleSyntax.ml[68,3226+23]..src/newRuleSyntax.ml[68,3226+38])
                                      Texp_apply
                                      expression (src/newRuleSyntax.ml[68,3226+23]..src/newRuleSyntax.ml[68,3226+35])
                                        Texp_ident "resolve_puns/641"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/newRuleSyntax.ml[68,3226+36]..src/newRuleSyntax.ml[68,3226+38])
                                            Texp_ident "e2/650"
                                      ]
                                  ]
                              <case>
                                pattern (src/newRuleSyntax.ml[69,3266+6]..src/newRuleSyntax.ml[70,3285+15])
                                  Tpat_or
                                  pattern (src/newRuleSyntax.ml[69,3266+6]..src/newRuleSyntax.ml[69,3266+18])
                                    Tpat_value
                                    pattern (src/newRuleSyntax.ml[69,3266+6]..src/newRuleSyntax.ml[69,3266+18])
                                      Tpat_construct "ESingleton"
                                      [
                                        pattern (src/newRuleSyntax.ml[69,3266+17]..src/newRuleSyntax.ml[69,3266+18])
                                          Tpat_any
                                      ]
                                      None
                                  pattern (src/newRuleSyntax.ml[70,3285+6]..src/newRuleSyntax.ml[70,3285+15])
                                    Tpat_value
                                    pattern (src/newRuleSyntax.ml[70,3285+6]..src/newRuleSyntax.ml[70,3285+15])
                                      Tpat_construct "EAction"
                                      [
                                        pattern (src/newRuleSyntax.ml[70,3285+14]..src/newRuleSyntax.ml[70,3285+15])
                                          Tpat_any
                                        pattern (src/newRuleSyntax.ml[70,3285+14]..src/newRuleSyntax.ml[70,3285+15])
                                          Tpat_any
                                      ]
                                      None
                                expression (src/newRuleSyntax.ml[71,3304+8]..src/newRuleSyntax.ml[71,3304+9])
                                  Texp_ident "e/643"
                            ]
                      ]
                  <arg>
                    Nolabel
                    expression (src/newRuleSyntax.ml[72,3314+4]..src/newRuleSyntax.ml[72,3314+5])
                      Texp_ident "e/642"
                ]
          ]
    ]
  structure_item (src/newRuleSyntax.ml[83,3662+0]..src/newRuleSyntax.ml[101,4216+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[83,3662+4]..src/newRuleSyntax.ml[83,3662+19])
          Tpat_var "check_linearity/665"
        expression (src/newRuleSyntax.ml[83,3662+20]..src/newRuleSyntax.ml[101,4216+5]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/newRuleSyntax.ml[83,3662+21]..src/newRuleSyntax.ml[83,3662+23])
                extra
                  Tpat_extra_constraint
                  core_type (src/newRuleSyntax.ml[83,3662+26]..src/newRuleSyntax.ml[83,3662+38])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/newRuleSyntax.ml[83,3662+26]..src/newRuleSyntax.ml[83,3662+33])
                        Ttyp_constr "Dune__exe!.Syntax.pattern"
                        []
                    ]
                Tpat_alias "ps/667"
                pattern (src/newRuleSyntax.ml[83,3662+21]..src/newRuleSyntax.ml[83,3662+23])
                  Tpat_any
              expression (src/newRuleSyntax.ml[85,3705+2]..src/newRuleSyntax.ml[101,4216+5])
                Texp_let Rec
                [
                  <def>
                    pattern (src/newRuleSyntax.ml[85,3705+10]..src/newRuleSyntax.ml[85,3705+15])
                      Tpat_var "build/668"
                    expression (src/newRuleSyntax.ml[85,3705+16]..src/newRuleSyntax.ml[94,3976+33]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/newRuleSyntax.ml[85,3705+17]..src/newRuleSyntax.ml[85,3705+18])
                            extra
                              Tpat_extra_constraint
                              core_type (src/newRuleSyntax.ml[85,3705+21]..src/newRuleSyntax.ml[85,3705+52])
                                Ttyp_constr "Dune__exe!.StringMap.t"
                                [
                                  core_type (src/newRuleSyntax.ml[85,3705+21]..src/newRuleSyntax.ml[85,3705+40])
                                    Ttyp_constr "Dune__exe!.Positions.positions"
                                    []
                                ]
                            Tpat_alias "m/717"
                            pattern (src/newRuleSyntax.ml[85,3705+17]..src/newRuleSyntax.ml[85,3705+18])
                              Tpat_any
                          expression (src/newRuleSyntax.ml[85,3705+54]..src/newRuleSyntax.ml[94,3976+33]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/newRuleSyntax.ml[85,3705+55]..src/newRuleSyntax.ml[85,3705+56])
                                  extra
                                    Tpat_extra_constraint
                                    core_type (src/newRuleSyntax.ml[85,3705+59]..src/newRuleSyntax.ml[85,3705+66])
                                      Ttyp_constr "Dune__exe!.Syntax.pattern"
                                      []
                                  Tpat_alias "p/718"
                                  pattern (src/newRuleSyntax.ml[85,3705+55]..src/newRuleSyntax.ml[85,3705+56])
                                    Tpat_any
                                expression (src/newRuleSyntax.ml[86,3775+4]..src/newRuleSyntax.ml[94,3976+33])
                                  Texp_match
                                  expression (src/newRuleSyntax.ml[86,3775+10]..src/newRuleSyntax.ml[86,3775+11])
                                    Texp_ident "p/718"
                                  [
                                    <case>
                                      pattern (src/newRuleSyntax.ml[87,3792+6]..src/newRuleSyntax.ml[87,3792+17])
                                        Tpat_value
                                        pattern (src/newRuleSyntax.ml[87,3792+6]..src/newRuleSyntax.ml[87,3792+17])
                                          Tpat_construct "SemPatVar"
                                          [
                                            pattern (src/newRuleSyntax.ml[87,3792+16]..src/newRuleSyntax.ml[87,3792+17])
                                              Tpat_var "x/719"
                                          ]
                                          None
                                      expression (src/newRuleSyntax.ml[88,3813+8]..src/newRuleSyntax.ml[89,3859+38])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/newRuleSyntax.ml[88,3813+12]..src/newRuleSyntax.ml[88,3813+18])
                                              Tpat_tuple
                                              [
                                                pattern (src/newRuleSyntax.ml[88,3813+12]..src/newRuleSyntax.ml[88,3813+13])
                                                  Tpat_var "x/721"
                                                pattern (src/newRuleSyntax.ml[88,3813+15]..src/newRuleSyntax.ml[88,3813+18])
                                                  Tpat_var "pos/722"
                                              ]
                                            expression (src/newRuleSyntax.ml[88,3813+21]..src/newRuleSyntax.ml[88,3813+42])
                                              Texp_apply
                                              expression (src/newRuleSyntax.ml[88,3813+21]..src/newRuleSyntax.ml[88,3813+40])
                                                Texp_ident "Dune__exe!.Positions.decompose"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/newRuleSyntax.ml[88,3813+41]..src/newRuleSyntax.ml[88,3813+42])
                                                    Texp_ident "x/719"
                                              ]
                                        ]
                                        expression (src/newRuleSyntax.ml[89,3859+8]..src/newRuleSyntax.ml[89,3859+38])
                                          Texp_apply
                                          expression (src/newRuleSyntax.ml[89,3859+8]..src/newRuleSyntax.ml[89,3859+30])
                                            Texp_ident "Dune__exe!.StringMap.multiple_add"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/newRuleSyntax.ml[89,3859+31]..src/newRuleSyntax.ml[89,3859+32])
                                                Texp_ident "x/721"
                                            <arg>
                                              Nolabel
                                              expression (src/newRuleSyntax.ml[89,3859+33]..src/newRuleSyntax.ml[89,3859+36])
                                                Texp_ident "pos/722"
                                            <arg>
                                              Nolabel
                                              expression (src/newRuleSyntax.ml[89,3859+37]..src/newRuleSyntax.ml[89,3859+38])
                                                Texp_ident "m/717"
                                          ]
                                    <case>
                                      pattern (src/newRuleSyntax.ml[90,3898+6]..src/newRuleSyntax.ml[91,3919+19])
                                        Tpat_or
                                        pattern (src/newRuleSyntax.ml[90,3898+6]..src/newRuleSyntax.ml[90,3898+20])
                                          Tpat_value
                                          pattern (src/newRuleSyntax.ml[90,3898+6]..src/newRuleSyntax.ml[90,3898+20])
                                            Tpat_construct "SemPatWildcard"
                                            []
                                            None
                                        pattern (src/newRuleSyntax.ml[91,3919+6]..src/newRuleSyntax.ml[91,3919+19])
                                          Tpat_value
                                          pattern (src/newRuleSyntax.ml[91,3919+6]..src/newRuleSyntax.ml[91,3919+19])
                                            Tpat_construct "SemPatTilde"
                                            [
                                              pattern (src/newRuleSyntax.ml[91,3919+18]..src/newRuleSyntax.ml[91,3919+19])
                                                Tpat_any
                                            ]
                                            None
                                      expression (src/newRuleSyntax.ml[92,3942+8]..src/newRuleSyntax.ml[92,3942+9])
                                        Texp_ident "m/717"
                                    <case>
                                      pattern (src/newRuleSyntax.ml[93,3952+6]..src/newRuleSyntax.ml[93,3952+20])
                                        Tpat_value
                                        pattern (src/newRuleSyntax.ml[93,3952+6]..src/newRuleSyntax.ml[93,3952+20])
                                          Tpat_construct "SemPatTuple"
                                          [
                                            pattern (src/newRuleSyntax.ml[93,3952+18]..src/newRuleSyntax.ml[93,3952+20])
                                              Tpat_var "ps/720"
                                          ]
                                          None
                                      expression (src/newRuleSyntax.ml[94,3976+8]..src/newRuleSyntax.ml[94,3976+33])
                                        Texp_apply
                                        expression (src/newRuleSyntax.ml[94,3976+8]..src/newRuleSyntax.ml[94,3976+22])
                                          Texp_ident "Stdlib!.List.fold_left"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/newRuleSyntax.ml[94,3976+23]..src/newRuleSyntax.ml[94,3976+28])
                                              Texp_ident "build/668"
                                          <arg>
                                            Nolabel
                                            expression (src/newRuleSyntax.ml[94,3976+29]..src/newRuleSyntax.ml[94,3976+30])
                                              Texp_ident "m/717"
                                          <arg>
                                            Nolabel
                                            expression (src/newRuleSyntax.ml[94,3976+31]..src/newRuleSyntax.ml[94,3976+33])
                                              Texp_ident "ps/720"
                                        ]
                                  ]
                            ]
                      ]
                ]
                expression (src/newRuleSyntax.ml[97,4016+2]..src/newRuleSyntax.ml[101,4216+5])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (src/newRuleSyntax.ml[97,4016+6]..src/newRuleSyntax.ml[97,4016+7])
                        Tpat_var "m/837"
                      expression (src/newRuleSyntax.ml[97,4016+10]..src/newRuleSyntax.ml[97,4016+49])
                        Texp_apply
                        expression (src/newRuleSyntax.ml[97,4016+10]..src/newRuleSyntax.ml[97,4016+24])
                          Texp_ident "Stdlib!.List.fold_left"
                        [
                          <arg>
                            Nolabel
                            expression (src/newRuleSyntax.ml[97,4016+25]..src/newRuleSyntax.ml[97,4016+30])
                              Texp_ident "build/668"
                          <arg>
                            Nolabel
                            expression (src/newRuleSyntax.ml[97,4016+31]..src/newRuleSyntax.ml[97,4016+46])
                              Texp_ident "Dune__exe!.StringMap.empty"
                          <arg>
                            Nolabel
                            expression (src/newRuleSyntax.ml[97,4016+47]..src/newRuleSyntax.ml[97,4016+49])
                              Texp_ident "ps/667"
                        ]
                  ]
                  expression (src/newRuleSyntax.ml[98,4069+2]..src/newRuleSyntax.ml[101,4216+5])
                    Texp_apply
                    expression (src/newRuleSyntax.ml[98,4069+2]..src/newRuleSyntax.ml[98,4069+16])
                      Texp_ident "Dune__exe!.StringMap.iter"
                    [
                      <arg>
                        Nolabel
                        expression (src/newRuleSyntax.ml[98,4069+17]..src/newRuleSyntax.ml[101,4216+3])
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/newRuleSyntax.ml[98,4069+22]..src/newRuleSyntax.ml[98,4069+23])
                                Tpat_var "x/838"
                              expression (src/newRuleSyntax.ml[98,4069+24]..src/newRuleSyntax.ml[100,4144+71]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/newRuleSyntax.ml[98,4069+24]..src/newRuleSyntax.ml[98,4069+33])
                                      Tpat_var "positions/839"
                                    expression (src/newRuleSyntax.ml[99,4106+4]..src/newRuleSyntax.ml[100,4144+71])
                                      Texp_ifthenelse
                                      expression (src/newRuleSyntax.ml[99,4106+7]..src/newRuleSyntax.ml[99,4106+32])
                                        Texp_apply
                                        expression (src/newRuleSyntax.ml[99,4106+29]..src/newRuleSyntax.ml[99,4106+30])
                                          Texp_ident "Stdlib!.>"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/newRuleSyntax.ml[99,4106+7]..src/newRuleSyntax.ml[99,4106+28])
                                              Texp_apply
                                              expression (src/newRuleSyntax.ml[99,4106+7]..src/newRuleSyntax.ml[99,4106+18])
                                                Texp_ident "Stdlib!.List.length"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/newRuleSyntax.ml[99,4106+19]..src/newRuleSyntax.ml[99,4106+28])
                                                    Texp_ident "positions/839"
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/newRuleSyntax.ml[99,4106+31]..src/newRuleSyntax.ml[99,4106+32])
                                              Texp_constant Const_int 1
                                        ]
                                      expression (src/newRuleSyntax.ml[100,4144+6]..src/newRuleSyntax.ml[100,4144+71])
                                        Texp_apply
                                        expression (src/newRuleSyntax.ml[100,4144+6]..src/newRuleSyntax.ml[100,4144+17])
                                          Texp_ident "Dune__exe!.Error.error"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/newRuleSyntax.ml[100,4144+18]..src/newRuleSyntax.ml[100,4144+27])
                                              Texp_ident "positions/839"
                                          <arg>
                                            Nolabel
                                            expression (src/newRuleSyntax.ml[100,4144+28]..src/newRuleSyntax.ml[100,4144+69])
                                              Texp_construct "CamlinternalFormatBasics.Format"
                                              [
                                                expression (src/newRuleSyntax.ml[100,4144+28]..src/newRuleSyntax.ml[100,4144+69]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                  [
                                                    expression (src/newRuleSyntax.ml[100,4144+28]..src/newRuleSyntax.ml[100,4144+69]) ghost
                                                      Texp_constant Const_string("The variable ",(src/newRuleSyntax.ml[100,4144+28]..src/newRuleSyntax.ml[100,4144+69]) ghost,None)
                                                    expression (src/newRuleSyntax.ml[100,4144+28]..src/newRuleSyntax.ml[100,4144+69]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.String"
                                                      [
                                                        expression (src/newRuleSyntax.ml[100,4144+28]..src/newRuleSyntax.ml[100,4144+69]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                                          []
                                                        expression (src/newRuleSyntax.ml[100,4144+28]..src/newRuleSyntax.ml[100,4144+69]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                                          [
                                                            expression (src/newRuleSyntax.ml[100,4144+28]..src/newRuleSyntax.ml[100,4144+69]) ghost
                                                              Texp_constant Const_string(" is bound several times.",(src/newRuleSyntax.ml[100,4144+28]..src/newRuleSyntax.ml[100,4144+69]) ghost,None)
                                                            expression (src/newRuleSyntax.ml[100,4144+28]..src/newRuleSyntax.ml[100,4144+69]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                              []
                                                          ]
                                                      ]
                                                  ]
                                                expression (src/newRuleSyntax.ml[100,4144+28]..src/newRuleSyntax.ml[100,4144+69]) ghost
                                                  Texp_constant Const_string("The variable %s is bound several times.",(src/newRuleSyntax.ml[100,4144+28]..src/newRuleSyntax.ml[100,4144+69]) ghost,None)
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/newRuleSyntax.ml[100,4144+70]..src/newRuleSyntax.ml[100,4144+71])
                                              Texp_ident "x/838"
                                        ]
                                      None
                                ]
                          ]
                      <arg>
                        Nolabel
                        expression (src/newRuleSyntax.ml[101,4216+4]..src/newRuleSyntax.ml[101,4216+5])
                          Texp_ident "m/837"
                    ]
          ]
    ]
  structure_item (src/newRuleSyntax.ml[103,4223+0]..src/newRuleSyntax.ml[110,4403+8])
    Tstr_value Rec
    [
      <def>
        pattern (src/newRuleSyntax.ml[103,4223+8]..src/newRuleSyntax.ml[103,4223+16])
          Tpat_var "patterns/878"
        expression (src/newRuleSyntax.ml[103,4223+17]..src/newRuleSyntax.ml[110,4403+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/newRuleSyntax.ml[103,4223+18]..src/newRuleSyntax.ml[103,4223+19])
                extra
                  Tpat_extra_constraint
                  core_type (src/newRuleSyntax.ml[103,4223+22]..src/newRuleSyntax.ml[103,4223+36])
                    Ttyp_constr "Dune__exe!.Syntax.seq_expression"
                    []
                Tpat_alias "e/879"
                pattern (src/newRuleSyntax.ml[103,4223+18]..src/newRuleSyntax.ml[103,4223+19])
                  Tpat_any
              expression (src/newRuleSyntax.ml[104,4278+2]..src/newRuleSyntax.ml[110,4403+8])
                extra
                  Texp_constraint
                  core_type (src/newRuleSyntax.ml[103,4223+40]..src/newRuleSyntax.ml[103,4223+52])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/newRuleSyntax.ml[103,4223+40]..src/newRuleSyntax.ml[103,4223+47])
                        Ttyp_constr "Dune__exe!.Syntax.pattern"
                        []
                    ]
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/newRuleSyntax.ml[104,4278+6]..src/newRuleSyntax.ml[104,4278+7])
                      Tpat_var "e/880"
                    expression (src/newRuleSyntax.ml[104,4278+10]..src/newRuleSyntax.ml[104,4278+27])
                      Texp_apply
                      expression (src/newRuleSyntax.ml[104,4278+10]..src/newRuleSyntax.ml[104,4278+25])
                        Texp_ident "Dune__exe!.Positions.value"
                      [
                        <arg>
                          Nolabel
                          expression (src/newRuleSyntax.ml[104,4278+26]..src/newRuleSyntax.ml[104,4278+27])
                            Texp_ident "e/879"
                      ]
                ]
                expression (src/newRuleSyntax.ml[105,4309+2]..src/newRuleSyntax.ml[110,4403+8])
                  Texp_match
                  expression (src/newRuleSyntax.ml[105,4309+8]..src/newRuleSyntax.ml[105,4309+9])
                    Texp_ident "e/880"
                  [
                    <case>
                      pattern (src/newRuleSyntax.ml[106,4324+4]..src/newRuleSyntax.ml[106,4324+19])
                        Tpat_value
                        pattern (src/newRuleSyntax.ml[106,4324+4]..src/newRuleSyntax.ml[106,4324+19])
                          Tpat_construct "ECons"
                          [
                            pattern (src/newRuleSyntax.ml[106,4324+11]..src/newRuleSyntax.ml[106,4324+12])
                              Tpat_var "p/881"
                            pattern (src/newRuleSyntax.ml[106,4324+14]..src/newRuleSyntax.ml[106,4324+15])
                              Tpat_any
                            pattern (src/newRuleSyntax.ml[106,4324+17]..src/newRuleSyntax.ml[106,4324+18])
                              Tpat_var "e/882"
                          ]
                          None
                      expression (src/newRuleSyntax.ml[107,4347+6]..src/newRuleSyntax.ml[107,4347+21])
                        Texp_construct "::"
                        [
                          expression (src/newRuleSyntax.ml[107,4347+6]..src/newRuleSyntax.ml[107,4347+7])
                            Texp_ident "p/881"
                          expression (src/newRuleSyntax.ml[107,4347+11]..src/newRuleSyntax.ml[107,4347+21])
                            Texp_apply
                            expression (src/newRuleSyntax.ml[107,4347+11]..src/newRuleSyntax.ml[107,4347+19])
                              Texp_ident "patterns/878"
                            [
                              <arg>
                                Nolabel
                                expression (src/newRuleSyntax.ml[107,4347+20]..src/newRuleSyntax.ml[107,4347+21])
                                  Texp_ident "e/882"
                            ]
                        ]
                    <case>
                      pattern (src/newRuleSyntax.ml[108,4369+4]..src/newRuleSyntax.ml[109,4386+13])
                        Tpat_or
                        pattern (src/newRuleSyntax.ml[108,4369+4]..src/newRuleSyntax.ml[108,4369+16])
                          Tpat_value
                          pattern (src/newRuleSyntax.ml[108,4369+4]..src/newRuleSyntax.ml[108,4369+16])
                            Tpat_construct "ESingleton"
                            [
                              pattern (src/newRuleSyntax.ml[108,4369+15]..src/newRuleSyntax.ml[108,4369+16])
                                Tpat_any
                            ]
                            None
                        pattern (src/newRuleSyntax.ml[109,4386+4]..src/newRuleSyntax.ml[109,4386+13])
                          Tpat_value
                          pattern (src/newRuleSyntax.ml[109,4386+4]..src/newRuleSyntax.ml[109,4386+13])
                            Tpat_construct "EAction"
                            [
                              pattern (src/newRuleSyntax.ml[109,4386+12]..src/newRuleSyntax.ml[109,4386+13])
                                Tpat_any
                              pattern (src/newRuleSyntax.ml[109,4386+12]..src/newRuleSyntax.ml[109,4386+13])
                                Tpat_any
                            ]
                            None
                      expression (src/newRuleSyntax.ml[110,4403+6]..src/newRuleSyntax.ml[110,4403+8])
                        Texp_construct "[]"
                        []
                  ]
          ]
    ]
  structure_item (src/newRuleSyntax.ml[112,4413+0]..src/newRuleSyntax.ml[113,4460+29])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[112,4413+4]..src/newRuleSyntax.ml[112,4413+19])
          extra
            Tpat_extra_constraint
            core_type (src/newRuleSyntax.ml[112,4413+22]..src/newRuleSyntax.ml[112,4413+44])
              Ttyp_arrow
              Nolabel
              core_type (src/newRuleSyntax.ml[112,4413+22]..src/newRuleSyntax.ml[112,4413+36])
                Ttyp_constr "Dune__exe!.Syntax.seq_expression"
                []
              core_type (src/newRuleSyntax.ml[112,4413+40]..src/newRuleSyntax.ml[112,4413+44])
                Ttyp_constr "unit/6!"
                []
          Tpat_alias "check_linearity/883"
          pattern (src/newRuleSyntax.ml[112,4413+4]..src/newRuleSyntax.ml[112,4413+19])
            Tpat_any
        expression (src/newRuleSyntax.ml[113,4460+2]..src/newRuleSyntax.ml[113,4460+29])
          extra
            Texp_constraint
            core_type (src/newRuleSyntax.ml[112,4413+22]..src/newRuleSyntax.ml[112,4413+44])
              Ttyp_arrow
              Nolabel
              core_type (src/newRuleSyntax.ml[112,4413+22]..src/newRuleSyntax.ml[112,4413+36])
                Ttyp_constr "Dune__exe!.Syntax.seq_expression"
                []
              core_type (src/newRuleSyntax.ml[112,4413+40]..src/newRuleSyntax.ml[112,4413+44])
                Ttyp_constr "unit/6!"
                []
          Texp_apply
          expression (src/newRuleSyntax.ml[113,4460+11]..src/newRuleSyntax.ml[113,4460+13])
            Texp_ident ">>/432"
          [
            <arg>
              Nolabel
              expression (src/newRuleSyntax.ml[113,4460+2]..src/newRuleSyntax.ml[113,4460+10])
                Texp_ident "patterns/878"
            <arg>
              Nolabel
              expression (src/newRuleSyntax.ml[113,4460+14]..src/newRuleSyntax.ml[113,4460+29])
                Texp_ident "check_linearity/665"
          ]
    ]
  structure_item (src/newRuleSyntax.ml[119,4637+0]..src/newRuleSyntax.ml[127,4819+44])
    Tstr_value Rec
    [
      <def>
        pattern (src/newRuleSyntax.ml[119,4637+8]..src/newRuleSyntax.ml[119,4637+18])
          Tpat_var "tilde_used/884"
        expression (src/newRuleSyntax.ml[119,4637+19]..src/newRuleSyntax.ml[127,4819+44]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/newRuleSyntax.ml[119,4637+19]..src/newRuleSyntax.ml[119,4637+28])
                Tpat_var "positions/885"
              expression (src/newRuleSyntax.ml[119,4637+29]..src/newRuleSyntax.ml[127,4819+44]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/newRuleSyntax.ml[119,4637+30]..src/newRuleSyntax.ml[119,4637+31])
                      extra
                        Tpat_extra_constraint
                        core_type (src/newRuleSyntax.ml[119,4637+34]..src/newRuleSyntax.ml[119,4637+41])
                          Ttyp_constr "Dune__exe!.Syntax.pattern"
                          []
                      Tpat_alias "p/886"
                      pattern (src/newRuleSyntax.ml[119,4637+30]..src/newRuleSyntax.ml[119,4637+31])
                        Tpat_any
                    expression (src/newRuleSyntax.ml[120,4682+2]..src/newRuleSyntax.ml[127,4819+44])
                      Texp_match
                      expression (src/newRuleSyntax.ml[120,4682+8]..src/newRuleSyntax.ml[120,4682+9])
                        Texp_ident "p/886"
                      [
                        <case>
                          pattern (src/newRuleSyntax.ml[121,4697+4]..src/newRuleSyntax.ml[122,4713+18])
                            Tpat_or
                            pattern (src/newRuleSyntax.ml[121,4697+4]..src/newRuleSyntax.ml[121,4697+15])
                              Tpat_value
                              pattern (src/newRuleSyntax.ml[121,4697+4]..src/newRuleSyntax.ml[121,4697+15])
                                Tpat_construct "SemPatVar"
                                [
                                  pattern (src/newRuleSyntax.ml[121,4697+14]..src/newRuleSyntax.ml[121,4697+15])
                                    Tpat_any
                                ]
                                None
                            pattern (src/newRuleSyntax.ml[122,4713+4]..src/newRuleSyntax.ml[122,4713+18])
                              Tpat_value
                              pattern (src/newRuleSyntax.ml[122,4713+4]..src/newRuleSyntax.ml[122,4713+18])
                                Tpat_construct "SemPatWildcard"
                                []
                                None
                          expression (src/newRuleSyntax.ml[123,4735+6]..src/newRuleSyntax.ml[123,4735+15])
                            Texp_ident "positions/885"
                        <case>
                          pattern (src/newRuleSyntax.ml[124,4751+4]..src/newRuleSyntax.ml[124,4751+19])
                            Tpat_value
                            pattern (src/newRuleSyntax.ml[124,4751+4]..src/newRuleSyntax.ml[124,4751+19])
                              Tpat_construct "SemPatTilde"
                              [
                                pattern (src/newRuleSyntax.ml[124,4751+16]..src/newRuleSyntax.ml[124,4751+19])
                                  Tpat_var "pos/887"
                              ]
                              None
                          expression (src/newRuleSyntax.ml[125,4774+6]..src/newRuleSyntax.ml[125,4774+22])
                            Texp_construct "::"
                            [
                              expression (src/newRuleSyntax.ml[125,4774+6]..src/newRuleSyntax.ml[125,4774+9])
                                Texp_ident "pos/887"
                              expression (src/newRuleSyntax.ml[125,4774+13]..src/newRuleSyntax.ml[125,4774+22])
                                Texp_ident "positions/885"
                            ]
                        <case>
                          pattern (src/newRuleSyntax.ml[126,4797+4]..src/newRuleSyntax.ml[126,4797+18])
                            Tpat_value
                            pattern (src/newRuleSyntax.ml[126,4797+4]..src/newRuleSyntax.ml[126,4797+18])
                              Tpat_construct "SemPatTuple"
                              [
                                pattern (src/newRuleSyntax.ml[126,4797+16]..src/newRuleSyntax.ml[126,4797+18])
                                  Tpat_var "ps/888"
                              ]
                              None
                          expression (src/newRuleSyntax.ml[127,4819+6]..src/newRuleSyntax.ml[127,4819+44])
                            Texp_apply
                            expression (src/newRuleSyntax.ml[127,4819+6]..src/newRuleSyntax.ml[127,4819+20])
                              Texp_ident "Stdlib!.List.fold_left"
                            [
                              <arg>
                                Nolabel
                                expression (src/newRuleSyntax.ml[127,4819+21]..src/newRuleSyntax.ml[127,4819+31])
                                  Texp_ident "tilde_used/884"
                              <arg>
                                Nolabel
                                expression (src/newRuleSyntax.ml[127,4819+32]..src/newRuleSyntax.ml[127,4819+41])
                                  Texp_ident "positions/885"
                              <arg>
                                Nolabel
                                expression (src/newRuleSyntax.ml[127,4819+42]..src/newRuleSyntax.ml[127,4819+44])
                                  Texp_ident "ps/888"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/newRuleSyntax.ml[132,5017+0]..src/newRuleSyntax.ml[143,5495+55])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[132,5017+4]..src/newRuleSyntax.ml[132,5017+22])
          Tpat_var "tilde_used_warning/889"
        expression (src/newRuleSyntax.ml[132,5017+23]..src/newRuleSyntax.ml[143,5495+55]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/newRuleSyntax.ml[132,5017+23]..src/newRuleSyntax.ml[132,5017+32])
                Tpat_var "positions/891"
              expression (src/newRuleSyntax.ml[133,5052+2]..src/newRuleSyntax.ml[143,5495+55])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/newRuleSyntax.ml[133,5052+6]..src/newRuleSyntax.ml[133,5052+7])
                      Tpat_var "n/892"
                    expression (src/newRuleSyntax.ml[133,5052+10]..src/newRuleSyntax.ml[133,5052+31])
                      Texp_apply
                      expression (src/newRuleSyntax.ml[133,5052+10]..src/newRuleSyntax.ml[133,5052+21])
                        Texp_ident "Stdlib!.List.length"
                      [
                        <arg>
                          Nolabel
                          expression (src/newRuleSyntax.ml[133,5052+22]..src/newRuleSyntax.ml[133,5052+31])
                            Texp_ident "positions/891"
                      ]
                ]
                expression (src/newRuleSyntax.ml[134,5087+2]..src/newRuleSyntax.ml[143,5495+55])
                  Texp_ifthenelse
                  expression (src/newRuleSyntax.ml[134,5087+5]..src/newRuleSyntax.ml[134,5087+10])
                    Texp_apply
                    expression (src/newRuleSyntax.ml[134,5087+7]..src/newRuleSyntax.ml[134,5087+8])
                      Texp_ident "Stdlib!.>"
                    [
                      <arg>
                        Nolabel
                        expression (src/newRuleSyntax.ml[134,5087+5]..src/newRuleSyntax.ml[134,5087+6])
                          Texp_ident "n/892"
                      <arg>
                        Nolabel
                        expression (src/newRuleSyntax.ml[134,5087+9]..src/newRuleSyntax.ml[134,5087+10])
                          Texp_constant Const_int 0
                    ]
                  expression (src/newRuleSyntax.ml[135,5103+4]..src/newRuleSyntax.ml[143,5495+55])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/newRuleSyntax.ml[135,5103+8]..src/newRuleSyntax.ml[135,5103+44])
                          Tpat_tuple
                          [
                            pattern (src/newRuleSyntax.ml[135,5103+8]..src/newRuleSyntax.ml[135,5103+22])
                              Tpat_var "variables_have/893"
                            pattern (src/newRuleSyntax.ml[135,5103+24]..src/newRuleSyntax.ml[135,5103+33])
                              Tpat_var "tpatterns/894"
                            pattern (src/newRuleSyntax.ml[135,5103+35]..src/newRuleSyntax.ml[135,5103+44])
                              Tpat_var "wpatterns/895"
                          ]
                        expression (src/newRuleSyntax.ml[136,5150+6]..src/newRuleSyntax.ml[137,5224+64])
                          Texp_ifthenelse
                          expression (src/newRuleSyntax.ml[136,5150+9]..src/newRuleSyntax.ml[136,5150+14])
                            Texp_apply
                            expression (src/newRuleSyntax.ml[136,5150+11]..src/newRuleSyntax.ml[136,5150+12])
                              Texp_ident "Stdlib!.="
                            [
                              <arg>
                                Nolabel
                                expression (src/newRuleSyntax.ml[136,5150+9]..src/newRuleSyntax.ml[136,5150+10])
                                  Texp_ident "n/892"
                              <arg>
                                Nolabel
                                expression (src/newRuleSyntax.ml[136,5150+13]..src/newRuleSyntax.ml[136,5150+14])
                                  Texp_constant Const_int 1
                            ]
                          expression (src/newRuleSyntax.ml[136,5150+20]..src/newRuleSyntax.ml[136,5150+73])
                            Texp_tuple
                            [
                              expression (src/newRuleSyntax.ml[136,5150+20]..src/newRuleSyntax.ml[136,5150+34])
                                Texp_constant Const_string("variable has",(src/newRuleSyntax.ml[136,5150+21]..src/newRuleSyntax.ml[136,5150+33]),None)
                              expression (src/newRuleSyntax.ml[136,5150+36]..src/newRuleSyntax.ml[136,5150+49])
                                Texp_constant Const_string("a ~ pattern",(src/newRuleSyntax.ml[136,5150+37]..src/newRuleSyntax.ml[136,5150+48]),None)
                              expression (src/newRuleSyntax.ml[136,5150+51]..src/newRuleSyntax.ml[136,5150+73])
                                Texp_constant Const_string("a wildcard pattern _",(src/newRuleSyntax.ml[136,5150+52]..src/newRuleSyntax.ml[136,5150+72]),None)
                            ]
                          Some
                            expression (src/newRuleSyntax.ml[137,5224+11]..src/newRuleSyntax.ml[137,5224+64])
                              Texp_tuple
                              [
                                expression (src/newRuleSyntax.ml[137,5224+11]..src/newRuleSyntax.ml[137,5224+27])
                                  Texp_constant Const_string("variables have",(src/newRuleSyntax.ml[137,5224+12]..src/newRuleSyntax.ml[137,5224+26]),None)
                                expression (src/newRuleSyntax.ml[137,5224+29]..src/newRuleSyntax.ml[137,5224+41])
                                  Texp_constant Const_string("~ patterns",(src/newRuleSyntax.ml[137,5224+30]..src/newRuleSyntax.ml[137,5224+40]),None)
                                expression (src/newRuleSyntax.ml[137,5224+43]..src/newRuleSyntax.ml[137,5224+64])
                                  Texp_constant Const_string("wildcard patterns _",(src/newRuleSyntax.ml[137,5224+44]..src/newRuleSyntax.ml[137,5224+63]),None)
                              ]
                    ]
                    expression (src/newRuleSyntax.ml[139,5296+4]..src/newRuleSyntax.ml[143,5495+55])
                      Texp_apply
                      expression (src/newRuleSyntax.ml[139,5296+4]..src/newRuleSyntax.ml[139,5296+17])
                        Texp_ident "Dune__exe!.Error.warning"
                      [
                        <arg>
                          Nolabel
                          expression (src/newRuleSyntax.ml[139,5296+18]..src/newRuleSyntax.ml[139,5296+27])
                            Texp_ident "positions/891"
                        <arg>
                          Nolabel
                          expression (src/newRuleSyntax.ml[140,5324+6]..src/newRuleSyntax.ml[142,5452+42])
                            Texp_construct "CamlinternalFormatBasics.Format"
                            [
                              expression (src/newRuleSyntax.ml[140,5324+6]..src/newRuleSyntax.ml[142,5452+42]) ghost
                                Texp_construct "CamlinternalFormatBasics.String"
                                [
                                  expression (src/newRuleSyntax.ml[140,5324+6]..src/newRuleSyntax.ml[142,5452+42]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                    []
                                  expression (src/newRuleSyntax.ml[140,5324+6]..src/newRuleSyntax.ml[142,5452+42]) ghost
                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                    [
                                      expression (src/newRuleSyntax.ml[140,5324+6]..src/newRuleSyntax.ml[142,5452+42]) ghost
                                        Texp_constant Const_string(" nameless ",(src/newRuleSyntax.ml[140,5324+6]..src/newRuleSyntax.ml[142,5452+42]) ghost,None)
                                      expression (src/newRuleSyntax.ml[140,5324+6]..src/newRuleSyntax.ml[142,5452+42]) ghost
                                        Texp_construct "CamlinternalFormatBasics.String"
                                        [
                                          expression (src/newRuleSyntax.ml[140,5324+6]..src/newRuleSyntax.ml[142,5452+42]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                            []
                                          expression (src/newRuleSyntax.ml[140,5324+6]..src/newRuleSyntax.ml[142,5452+42]) ghost
                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                            [
                                              expression (src/newRuleSyntax.ml[140,5324+6]..src/newRuleSyntax.ml[142,5452+42]) ghost
                                                Texp_constant Const_string(" been introduced by ",(src/newRuleSyntax.ml[140,5324+6]..src/newRuleSyntax.ml[142,5452+42]) ghost,None)
                                              expression (src/newRuleSyntax.ml[140,5324+6]..src/newRuleSyntax.ml[142,5452+42]) ghost
                                                Texp_construct "CamlinternalFormatBasics.String"
                                                [
                                                  expression (src/newRuleSyntax.ml[140,5324+6]..src/newRuleSyntax.ml[142,5452+42]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                    []
                                                  expression (src/newRuleSyntax.ml[140,5324+6]..src/newRuleSyntax.ml[142,5452+42]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                    [
                                                      expression (src/newRuleSyntax.ml[140,5324+6]..src/newRuleSyntax.ml[142,5452+42]) ghost
                                                        Texp_constant Const_string(",\nyet this sequence does not end in a point-free semantic action <...>.\nPerhaps ",(src/newRuleSyntax.ml[140,5324+6]..src/newRuleSyntax.ml[142,5452+42]) ghost,None)
                                                      expression (src/newRuleSyntax.ml[140,5324+6]..src/newRuleSyntax.ml[142,5452+42]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.String"
                                                        [
                                                          expression (src/newRuleSyntax.ml[140,5324+6]..src/newRuleSyntax.ml[142,5452+42]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                            []
                                                          expression (src/newRuleSyntax.ml[140,5324+6]..src/newRuleSyntax.ml[142,5452+42]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                            [
                                                              expression (src/newRuleSyntax.ml[140,5324+6]..src/newRuleSyntax.ml[142,5452+42]) ghost
                                                                Texp_constant Const_string(" should be used instead.",(src/newRuleSyntax.ml[140,5324+6]..src/newRuleSyntax.ml[142,5452+42]) ghost,None)
                                                              expression (src/newRuleSyntax.ml[140,5324+6]..src/newRuleSyntax.ml[142,5452+42]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                []
                                                            ]
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ]
                                    ]
                                ]
                              expression (src/newRuleSyntax.ml[140,5324+6]..src/newRuleSyntax.ml[142,5452+42]) ghost
                                Texp_constant Const_string("%s nameless %s been introduced by %s,\nyet this sequence does not end in a point-free semantic action <...>.\nPerhaps %s should be used instead.",(src/newRuleSyntax.ml[140,5324+6]..src/newRuleSyntax.ml[142,5452+42]) ghost,None)
                            ]
                        <arg>
                          Nolabel
                          expression (src/newRuleSyntax.ml[143,5495+6]..src/newRuleSyntax.ml[143,5495+20])
                            Texp_apply
                            expression (src/newRuleSyntax.ml[143,5495+7]..src/newRuleSyntax.ml[143,5495+17])
                              Texp_ident "Dune__exe!.Misc.count"
                            [
                              <arg>
                                Nolabel
                                expression (src/newRuleSyntax.ml[143,5495+18]..src/newRuleSyntax.ml[143,5495+19])
                                  Texp_ident "n/892"
                            ]
                        <arg>
                          Nolabel
                          expression (src/newRuleSyntax.ml[143,5495+21]..src/newRuleSyntax.ml[143,5495+35])
                            Texp_ident "variables_have/893"
                        <arg>
                          Nolabel
                          expression (src/newRuleSyntax.ml[143,5495+36]..src/newRuleSyntax.ml[143,5495+45])
                            Texp_ident "tpatterns/894"
                        <arg>
                          Nolabel
                          expression (src/newRuleSyntax.ml[143,5495+46]..src/newRuleSyntax.ml[143,5495+55])
                            Texp_ident "wpatterns/895"
                      ]
                  None
          ]
    ]
  structure_item (src/newRuleSyntax.ml[153,5925+0]..src/newRuleSyntax.ml[174,6418+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[153,5925+4]..src/newRuleSyntax.ml[153,5925+11])
          Tpat_var "pattern/932"
        expression (src/newRuleSyntax.ml[153,5925+12]..src/newRuleSyntax.ml[174,6418+11]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/newRuleSyntax.ml[153,5925+13]..src/newRuleSyntax.ml[153,5925+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/newRuleSyntax.ml[153,5925+18]..src/newRuleSyntax.ml[153,5925+28])
                    Ttyp_constr "Dune__exe!.Syntax.identifier"
                    []
                Tpat_alias "x1/934"
                pattern (src/newRuleSyntax.ml[153,5925+13]..src/newRuleSyntax.ml[153,5925+15])
                  Tpat_any
              expression (src/newRuleSyntax.ml[153,5925+30]..src/newRuleSyntax.ml[174,6418+11]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/newRuleSyntax.ml[153,5925+31]..src/newRuleSyntax.ml[153,5925+32])
                      extra
                        Tpat_extra_constraint
                        core_type (src/newRuleSyntax.ml[153,5925+35]..src/newRuleSyntax.ml[153,5925+42])
                          Ttyp_constr "Dune__exe!.Syntax.pattern"
                          []
                      Tpat_alias "p/935"
                      pattern (src/newRuleSyntax.ml[153,5925+31]..src/newRuleSyntax.ml[153,5925+32])
                        Tpat_any
                    expression (src/newRuleSyntax.ml[155,5985+2]..src/newRuleSyntax.ml[174,6418+11])
                      extra
                        Texp_constraint
                        core_type (src/newRuleSyntax.ml[153,5925+46]..src/newRuleSyntax.ml[153,5925+56])
                          Ttyp_constr "Dune__exe!.IL.pattern"
                          []
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/newRuleSyntax.ml[155,5985+6]..src/newRuleSyntax.ml[155,5985+7])
                            Tpat_var "c/936"
                          expression (src/newRuleSyntax.ml[155,5985+10]..src/newRuleSyntax.ml[155,5985+15])
                            Texp_apply
                            expression (src/newRuleSyntax.ml[155,5985+10]..src/newRuleSyntax.ml[155,5985+13])
                              Texp_ident "Stdlib!.ref"
                            [
                              <arg>
                                Nolabel
                                expression (src/newRuleSyntax.ml[155,5985+14]..src/newRuleSyntax.ml[155,5985+15])
                                  Texp_constant Const_int 1
                            ]
                      ]
                      expression (src/newRuleSyntax.ml[156,6004+2]..src/newRuleSyntax.ml[174,6418+11])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/newRuleSyntax.ml[156,6004+6]..src/newRuleSyntax.ml[156,6004+11])
                              Tpat_var "fresh/937"
                            expression (src/newRuleSyntax.ml[156,6004+12]..src/newRuleSyntax.ml[156,6004+65]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/newRuleSyntax.ml[156,6004+12]..src/newRuleSyntax.ml[156,6004+14])
                                    Tpat_construct "()"
                                    []
                                    None
                                  expression (src/newRuleSyntax.ml[156,6004+17]..src/newRuleSyntax.ml[156,6004+65])
                                    Texp_apply
                                    expression (src/newRuleSyntax.ml[156,6004+17]..src/newRuleSyntax.ml[156,6004+31])
                                      Texp_ident "Stdlib!.Printf.sprintf"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/newRuleSyntax.ml[156,6004+32]..src/newRuleSyntax.ml[156,6004+39])
                                          Texp_construct "CamlinternalFormatBasics.Format"
                                          [
                                            expression (src/newRuleSyntax.ml[156,6004+32]..src/newRuleSyntax.ml[156,6004+39]) ghost
                                              Texp_construct "CamlinternalFormatBasics.String"
                                              [
                                                expression (src/newRuleSyntax.ml[156,6004+32]..src/newRuleSyntax.ml[156,6004+39]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                  []
                                                expression (src/newRuleSyntax.ml[156,6004+32]..src/newRuleSyntax.ml[156,6004+39]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                  [
                                                    expression (src/newRuleSyntax.ml[156,6004+32]..src/newRuleSyntax.ml[156,6004+39]) ghost
                                                      Texp_constant Const_char 5f
                                                    expression (src/newRuleSyntax.ml[156,6004+32]..src/newRuleSyntax.ml[156,6004+39]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.Int"
                                                      [
                                                        expression (src/newRuleSyntax.ml[156,6004+32]..src/newRuleSyntax.ml[156,6004+39]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.Int_d"
                                                          []
                                                        expression (src/newRuleSyntax.ml[156,6004+32]..src/newRuleSyntax.ml[156,6004+39]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                                          []
                                                        expression (src/newRuleSyntax.ml[156,6004+32]..src/newRuleSyntax.ml[156,6004+39]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.No_precision"
                                                          []
                                                        expression (src/newRuleSyntax.ml[156,6004+32]..src/newRuleSyntax.ml[156,6004+39]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                          []
                                                      ]
                                                  ]
                                              ]
                                            expression (src/newRuleSyntax.ml[156,6004+32]..src/newRuleSyntax.ml[156,6004+39]) ghost
                                              Texp_constant Const_string("%s_%d",(src/newRuleSyntax.ml[156,6004+32]..src/newRuleSyntax.ml[156,6004+39]) ghost,None)
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/newRuleSyntax.ml[156,6004+40]..src/newRuleSyntax.ml[156,6004+42])
                                          Texp_ident "x1/934"
                                      <arg>
                                        Nolabel
                                        expression (src/newRuleSyntax.ml[156,6004+43]..src/newRuleSyntax.ml[156,6004+65])
                                          Texp_apply
                                          expression (src/newRuleSyntax.ml[156,6004+44]..src/newRuleSyntax.ml[156,6004+62])
                                            Texp_ident "Dune__exe!.Misc.postincrement"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/newRuleSyntax.ml[156,6004+63]..src/newRuleSyntax.ml[156,6004+64])
                                                Texp_ident "c/936"
                                          ]
                                    ]
                              ]
                        ]
                        expression (src/newRuleSyntax.ml[158,6074+2]..src/newRuleSyntax.ml[174,6418+11])
                          Texp_let Rec
                          [
                            <def>
                              pattern (src/newRuleSyntax.ml[158,6074+10]..src/newRuleSyntax.ml[158,6074+17])
                                Tpat_var "pattern/953"
                              expression (src/newRuleSyntax.ml[158,6074+18]..src/newRuleSyntax.ml[171,6372+39]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/newRuleSyntax.ml[158,6074+18]..src/newRuleSyntax.ml[158,6074+19])
                                      Tpat_var "p/954"
                                    expression (src/newRuleSyntax.ml[159,6096+4]..src/newRuleSyntax.ml[171,6372+39])
                                      Texp_match
                                      expression (src/newRuleSyntax.ml[159,6096+10]..src/newRuleSyntax.ml[159,6096+11])
                                        Texp_ident "p/954"
                                      [
                                        <case>
                                          pattern (src/newRuleSyntax.ml[160,6113+6]..src/newRuleSyntax.ml[160,6113+17])
                                            Tpat_value
                                            pattern (src/newRuleSyntax.ml[160,6113+6]..src/newRuleSyntax.ml[160,6113+17])
                                              Tpat_construct "SemPatVar"
                                              [
                                                pattern (src/newRuleSyntax.ml[160,6113+16]..src/newRuleSyntax.ml[160,6113+17])
                                                  Tpat_var "x/955"
                                              ]
                                              None
                                          expression (src/newRuleSyntax.ml[161,6134+8]..src/newRuleSyntax.ml[161,6134+35])
                                            Texp_construct "IL.PVar"
                                            [
                                              expression (src/newRuleSyntax.ml[161,6134+16]..src/newRuleSyntax.ml[161,6134+35])
                                                Texp_apply
                                                expression (src/newRuleSyntax.ml[161,6134+17]..src/newRuleSyntax.ml[161,6134+32])
                                                  Texp_ident "Dune__exe!.Positions.value"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/newRuleSyntax.ml[161,6134+33]..src/newRuleSyntax.ml[161,6134+34])
                                                      Texp_ident "x/955"
                                                ]
                                            ]
                                        <case>
                                          pattern (src/newRuleSyntax.ml[162,6170+6]..src/newRuleSyntax.ml[162,6170+20])
                                            Tpat_value
                                            pattern (src/newRuleSyntax.ml[162,6170+6]..src/newRuleSyntax.ml[162,6170+20])
                                              Tpat_construct "SemPatWildcard"
                                              []
                                              None
                                          expression (src/newRuleSyntax.ml[163,6194+8]..src/newRuleSyntax.ml[163,6194+20])
                                            Texp_construct "IL.PWildcard"
                                            []
                                        <case>
                                          pattern (src/newRuleSyntax.ml[164,6215+6]..src/newRuleSyntax.ml[164,6215+19])
                                            Tpat_value
                                            pattern (src/newRuleSyntax.ml[164,6215+6]..src/newRuleSyntax.ml[164,6215+19])
                                              Tpat_construct "SemPatTilde"
                                              [
                                                pattern (src/newRuleSyntax.ml[164,6215+18]..src/newRuleSyntax.ml[164,6215+19])
                                                  Tpat_any
                                              ]
                                              None
                                          expression (src/newRuleSyntax.ml[165,6238+8]..src/newRuleSyntax.ml[165,6238+25])
                                            Texp_construct "IL.PVar"
                                            [
                                              expression (src/newRuleSyntax.ml[165,6238+16]..src/newRuleSyntax.ml[165,6238+25])
                                                Texp_apply
                                                expression (src/newRuleSyntax.ml[165,6238+17]..src/newRuleSyntax.ml[165,6238+22])
                                                  Texp_ident "fresh/937"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/newRuleSyntax.ml[165,6238+22]..src/newRuleSyntax.ml[165,6238+24])
                                                      Texp_construct "()"
                                                      []
                                                ]
                                            ]
                                        <case>
                                          pattern (src/newRuleSyntax.ml[166,6264+6]..src/newRuleSyntax.ml[166,6264+20])
                                            Tpat_value
                                            pattern (src/newRuleSyntax.ml[166,6264+6]..src/newRuleSyntax.ml[166,6264+20])
                                              Tpat_construct "SemPatTuple"
                                              [
                                                pattern (src/newRuleSyntax.ml[166,6264+18]..src/newRuleSyntax.ml[166,6264+20])
                                                  Tpat_construct "[]"
                                                  []
                                                  None
                                              ]
                                              None
                                          expression (src/newRuleSyntax.ml[167,6288+8]..src/newRuleSyntax.ml[167,6288+16])
                                            Texp_construct "IL.PUnit"
                                            []
                                        <case>
                                          pattern (src/newRuleSyntax.ml[168,6305+6]..src/newRuleSyntax.ml[168,6305+21])
                                            Tpat_value
                                            pattern (src/newRuleSyntax.ml[168,6305+6]..src/newRuleSyntax.ml[168,6305+21])
                                              Tpat_construct "SemPatTuple"
                                              [
                                                pattern (src/newRuleSyntax.ml[168,6305+18]..src/newRuleSyntax.ml[168,6305+21])
                                                  Tpat_construct "::"
                                                  [
                                                    pattern (src/newRuleSyntax.ml[168,6305+19]..src/newRuleSyntax.ml[168,6305+20])
                                                      Tpat_var "p/956"
                                                    pattern (src/newRuleSyntax.ml[168,6305+20]..src/newRuleSyntax.ml[168,6305+21]) ghost
                                                      Tpat_construct "[]"
                                                      []
                                                      None
                                                  ]
                                                  None
                                              ]
                                              None
                                          expression (src/newRuleSyntax.ml[169,6330+8]..src/newRuleSyntax.ml[169,6330+17])
                                            Texp_apply
                                            expression (src/newRuleSyntax.ml[169,6330+8]..src/newRuleSyntax.ml[169,6330+15])
                                              Texp_ident "pattern/953"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/newRuleSyntax.ml[169,6330+16]..src/newRuleSyntax.ml[169,6330+17])
                                                  Texp_ident "p/956"
                                            ]
                                        <case>
                                          pattern (src/newRuleSyntax.ml[170,6348+6]..src/newRuleSyntax.ml[170,6348+20])
                                            Tpat_value
                                            pattern (src/newRuleSyntax.ml[170,6348+6]..src/newRuleSyntax.ml[170,6348+20])
                                              Tpat_construct "SemPatTuple"
                                              [
                                                pattern (src/newRuleSyntax.ml[170,6348+18]..src/newRuleSyntax.ml[170,6348+20])
                                                  Tpat_var "ps/957"
                                              ]
                                              None
                                          expression (src/newRuleSyntax.ml[171,6372+8]..src/newRuleSyntax.ml[171,6372+39])
                                            Texp_construct "IL.PTuple"
                                            [
                                              expression (src/newRuleSyntax.ml[171,6372+18]..src/newRuleSyntax.ml[171,6372+39])
                                                Texp_apply
                                                expression (src/newRuleSyntax.ml[171,6372+19]..src/newRuleSyntax.ml[171,6372+27])
                                                  Texp_ident "Stdlib!.List.map"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/newRuleSyntax.ml[171,6372+28]..src/newRuleSyntax.ml[171,6372+35])
                                                      Texp_ident "pattern/953"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/newRuleSyntax.ml[171,6372+36]..src/newRuleSyntax.ml[171,6372+38])
                                                      Texp_ident "ps/957"
                                                ]
                                            ]
                                      ]
                                ]
                          ]
                          expression (src/newRuleSyntax.ml[174,6418+2]..src/newRuleSyntax.ml[174,6418+11])
                            Texp_apply
                            expression (src/newRuleSyntax.ml[174,6418+2]..src/newRuleSyntax.ml[174,6418+9])
                              Texp_ident "pattern/953"
                            [
                              <arg>
                                Nolabel
                                expression (src/newRuleSyntax.ml[174,6418+10]..src/newRuleSyntax.ml[174,6418+11])
                                  Texp_ident "p/935"
                            ]
                ]
          ]
    ]
  structure_item (src/newRuleSyntax.ml[180,6639+0]..src/newRuleSyntax.ml[192,6870+18])
    Tstr_value Rec
    [
      <def>
        pattern (src/newRuleSyntax.ml[180,6639+8]..src/newRuleSyntax.ml[180,6639+10])
          Tpat_var "bv/958"
        expression (src/newRuleSyntax.ml[180,6639+11]..src/newRuleSyntax.ml[192,6870+18]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/newRuleSyntax.ml[180,6639+11]..src/newRuleSyntax.ml[180,6639+15])
                Tpat_var "accu/959"
              expression (src/newRuleSyntax.ml[180,6639+16]..src/newRuleSyntax.ml[192,6870+18]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/newRuleSyntax.ml[180,6639+16]..src/newRuleSyntax.ml[180,6639+17])
                      Tpat_var "p/960"
                    expression (src/newRuleSyntax.ml[181,6659+2]..src/newRuleSyntax.ml[192,6870+18])
                      Texp_match
                      expression (src/newRuleSyntax.ml[181,6659+8]..src/newRuleSyntax.ml[181,6659+9])
                        Texp_ident "p/960"
                      [
                        <case>
                          pattern (src/newRuleSyntax.ml[182,6674+4]..src/newRuleSyntax.ml[182,6674+13])
                            Tpat_value
                            pattern (src/newRuleSyntax.ml[182,6674+4]..src/newRuleSyntax.ml[182,6674+13])
                              Tpat_construct "IL.PVar"
                              [
                                pattern (src/newRuleSyntax.ml[182,6674+12]..src/newRuleSyntax.ml[182,6674+13])
                                  Tpat_var "x/961"
                              ]
                              None
                          expression (src/newRuleSyntax.ml[183,6691+6]..src/newRuleSyntax.ml[183,6691+15])
                            Texp_construct "::"
                            [
                              expression (src/newRuleSyntax.ml[183,6691+6]..src/newRuleSyntax.ml[183,6691+7])
                                Texp_ident "x/961"
                              expression (src/newRuleSyntax.ml[183,6691+11]..src/newRuleSyntax.ml[183,6691+15])
                                Texp_ident "accu/959"
                            ]
                        <case>
                          pattern (src/newRuleSyntax.ml[184,6707+4]..src/newRuleSyntax.ml[184,6707+16])
                            Tpat_value
                            pattern (src/newRuleSyntax.ml[184,6707+4]..src/newRuleSyntax.ml[184,6707+16])
                              Tpat_construct "IL.PWildcard"
                              []
                              None
                          expression (src/newRuleSyntax.ml[185,6727+6]..src/newRuleSyntax.ml[185,6727+10])
                            Texp_ident "accu/959"
                        <case>
                          pattern (src/newRuleSyntax.ml[186,6738+4]..src/newRuleSyntax.ml[186,6738+12])
                            Tpat_value
                            pattern (src/newRuleSyntax.ml[186,6738+4]..src/newRuleSyntax.ml[186,6738+12])
                              Tpat_construct "IL.PUnit"
                              []
                              None
                          expression (src/newRuleSyntax.ml[187,6754+6]..src/newRuleSyntax.ml[187,6754+10])
                            Texp_ident "accu/959"
                        <case>
                          pattern (src/newRuleSyntax.ml[188,6765+4]..src/newRuleSyntax.ml[188,6765+16])
                            Tpat_value
                            pattern (src/newRuleSyntax.ml[188,6765+4]..src/newRuleSyntax.ml[188,6765+16])
                              Tpat_construct "IL.PTuple"
                              [
                                pattern (src/newRuleSyntax.ml[188,6765+14]..src/newRuleSyntax.ml[188,6765+16])
                                  Tpat_var "ps/962"
                              ]
                              None
                          expression (src/newRuleSyntax.ml[189,6785+6]..src/newRuleSyntax.ml[189,6785+31])
                            Texp_apply
                            expression (src/newRuleSyntax.ml[189,6785+6]..src/newRuleSyntax.ml[189,6785+20])
                              Texp_ident "Stdlib!.List.fold_left"
                            [
                              <arg>
                                Nolabel
                                expression (src/newRuleSyntax.ml[189,6785+21]..src/newRuleSyntax.ml[189,6785+23])
                                  Texp_ident "bv/958"
                              <arg>
                                Nolabel
                                expression (src/newRuleSyntax.ml[189,6785+24]..src/newRuleSyntax.ml[189,6785+28])
                                  Texp_ident "accu/959"
                              <arg>
                                Nolabel
                                expression (src/newRuleSyntax.ml[189,6785+29]..src/newRuleSyntax.ml[189,6785+31])
                                  Texp_ident "ps/962"
                            ]
                        <case>
                          pattern (src/newRuleSyntax.ml[190,6817+4]..src/newRuleSyntax.ml[190,6817+5])
                            Tpat_value
                            pattern (src/newRuleSyntax.ml[190,6817+4]..src/newRuleSyntax.ml[190,6817+5])
                              Tpat_any
                          expression (src/newRuleSyntax.ml[192,6870+6]..src/newRuleSyntax.ml[192,6870+18])
                            Texp_assert                            expression (src/newRuleSyntax.ml[192,6870+13]..src/newRuleSyntax.ml[192,6870+18])
                              Texp_construct "false"
                              []
                      ]
                ]
          ]
    ]
  structure_item (src/newRuleSyntax.ml[198,7029+0]..src/newRuleSyntax.ml[201,7127+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[198,7029+4]..src/newRuleSyntax.ml[198,7029+14])
          Tpat_var "attributes/963"
        expression (src/newRuleSyntax.ml[198,7029+15]..src/newRuleSyntax.ml[201,7127+11]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/newRuleSyntax.ml[198,7029+16]..src/newRuleSyntax.ml[198,7029+17])
                extra
                  Tpat_extra_constraint
                  core_type (src/newRuleSyntax.ml[198,7029+20]..src/newRuleSyntax.ml[198,7029+37])
                    Ttyp_constr "Dune__exe!.Syntax.symbol_expression"
                    []
                Tpat_alias "e/965"
                pattern (src/newRuleSyntax.ml[198,7029+16]..src/newRuleSyntax.ml[198,7029+17])
                  Tpat_any
              expression (src/newRuleSyntax.ml[199,7083+2]..src/newRuleSyntax.ml[201,7127+11])
                extra
                  Texp_constraint
                  core_type (src/newRuleSyntax.ml[198,7029+41]..src/newRuleSyntax.ml[198,7029+51])
                    Ttyp_constr "Dune__exe!.Syntax.attributes"
                    []
                Texp_match
                expression (src/newRuleSyntax.ml[199,7083+8]..src/newRuleSyntax.ml[199,7083+9])
                  Texp_ident "e/965"
                [
                  <case>
                    pattern (src/newRuleSyntax.ml[200,7098+4]..src/newRuleSyntax.ml[200,7098+25])
                      Tpat_value
                      pattern (src/newRuleSyntax.ml[200,7098+4]..src/newRuleSyntax.ml[200,7098+25])
                        Tpat_construct "ESymbol"
                        [
                          pattern (src/newRuleSyntax.ml[200,7098+13]..src/newRuleSyntax.ml[200,7098+14])
                            Tpat_any
                          pattern (src/newRuleSyntax.ml[200,7098+16]..src/newRuleSyntax.ml[200,7098+17])
                            Tpat_any
                          pattern (src/newRuleSyntax.ml[200,7098+19]..src/newRuleSyntax.ml[200,7098+24])
                            Tpat_var "attrs/966"
                        ]
                        None
                    expression (src/newRuleSyntax.ml[201,7127+6]..src/newRuleSyntax.ml[201,7127+11])
                      Texp_ident "attrs/966"
                ]
          ]
    ]
  structure_item (src/newRuleSyntax.ml[208,7353+0]..src/newRuleSyntax.ml[245,9210+1])
    Tstr_type Rec
    [
      type_declaration context/967 (src/newRuleSyntax.ml[208,7353+0]..src/newRuleSyntax.ml[245,9210+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (src/newRuleSyntax.ml[211,7429+2]..src/newRuleSyntax.ml[211,7429+19])
                Immutable
                pos/968                core_type (src/newRuleSyntax.ml[211,7429+7]..src/newRuleSyntax.ml[211,7429+18])
                  Ttyp_poly
                  core_type (src/newRuleSyntax.ml[211,7429+7]..src/newRuleSyntax.ml[211,7429+18])
                    Ttyp_constr "Dune__exe!.Positions.t"
                    []
              (src/newRuleSyntax.ml[216,7666+2]..src/newRuleSyntax.ml[216,7666+27])
                Immutable
                producers/969                core_type (src/newRuleSyntax.ml[216,7666+13]..src/newRuleSyntax.ml[216,7666+26])
                  Ttyp_poly
                  core_type (src/newRuleSyntax.ml[216,7666+13]..src/newRuleSyntax.ml[216,7666+26])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/newRuleSyntax.ml[216,7666+13]..src/newRuleSyntax.ml[216,7666+21])
                        Ttyp_constr "Dune__exe!.Syntax.producer"
                        []
                    ]
              (src/newRuleSyntax.ml[223,8064+2]..src/newRuleSyntax.ml[223,8064+30])
                Immutable
                uxs/970                core_type (src/newRuleSyntax.ml[223,8064+7]..src/newRuleSyntax.ml[223,8064+29])
                  Ttyp_poly
                  core_type (src/newRuleSyntax.ml[223,8064+7]..src/newRuleSyntax.ml[223,8064+29])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/newRuleSyntax.ml[223,8064+7]..src/newRuleSyntax.ml[223,8064+24])
                        Ttyp_constr "option/10!"
                        [
                          core_type (src/newRuleSyntax.ml[223,8064+7]..src/newRuleSyntax.ml[223,8064+17])
                            Ttyp_constr "Dune__exe!.Syntax.identifier"
                            []
                        ]
                    ]
              (src/newRuleSyntax.ml[227,8251+2]..src/newRuleSyntax.ml[227,8251+29])
                Immutable
                bindings/971                core_type (src/newRuleSyntax.ml[227,8251+12]..src/newRuleSyntax.ml[227,8251+28])
                  Ttyp_poly
                  core_type (src/newRuleSyntax.ml[227,8251+12]..src/newRuleSyntax.ml[227,8251+28])
                    Ttyp_arrow
                    Nolabel
                    core_type (src/newRuleSyntax.ml[227,8251+12]..src/newRuleSyntax.ml[227,8251+18])
                      Ttyp_constr "Dune__exe!.Syntax.action"
                      []
                    core_type (src/newRuleSyntax.ml[227,8251+22]..src/newRuleSyntax.ml[227,8251+28])
                      Ttyp_constr "Dune__exe!.Syntax.action"
                      []
              (src/newRuleSyntax.ml[234,8663+2]..src/newRuleSyntax.ml[234,8663+25])
                Immutable
                tuple/972                core_type (src/newRuleSyntax.ml[234,8663+9]..src/newRuleSyntax.ml[234,8663+24])
                  Ttyp_poly
                  core_type (src/newRuleSyntax.ml[234,8663+9]..src/newRuleSyntax.ml[234,8663+24])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/newRuleSyntax.ml[234,8663+9]..src/newRuleSyntax.ml[234,8663+19])
                        Ttyp_constr "Dune__exe!.Syntax.identifier"
                        []
                    ]
              (src/newRuleSyntax.ml[243,9174+2]..src/newRuleSyntax.ml[243,9174+34])
                Immutable
                tilde_used/973                core_type (src/newRuleSyntax.ml[243,9174+14]..src/newRuleSyntax.ml[243,9174+33])
                  Ttyp_poly
                  core_type (src/newRuleSyntax.ml[243,9174+14]..src/newRuleSyntax.ml[243,9174+33])
                    Ttyp_constr "Dune__exe!.Positions.positions"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/newRuleSyntax.ml[249,9239+0]..src/newRuleSyntax.ml[257,9393+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[249,9239+4]..src/newRuleSyntax.ml[249,9239+9])
          Tpat_var "empty/978"
        expression (src/newRuleSyntax.ml[249,9239+10]..src/newRuleSyntax.ml[257,9393+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/newRuleSyntax.ml[249,9239+10]..src/newRuleSyntax.ml[249,9239+13])
                Tpat_var "pos/980"
              expression (src/newRuleSyntax.ml[250,9265+2]..src/newRuleSyntax.ml[257,9393+3])
                extra
                  Texp_constraint
                  core_type (src/newRuleSyntax.ml[249,9239+16]..src/newRuleSyntax.ml[249,9239+23])
                    Ttyp_constr "context/967"
                    []
                Texp_record
                  fields =
                    [
                      "pos"
                        expression (src/newRuleSyntax.ml[251,9269+4]..src/newRuleSyntax.ml[251,9269+7])
                          Texp_ident "pos/980"
                      "producers"
                        expression (src/newRuleSyntax.ml[252,9278+17]..src/newRuleSyntax.ml[252,9278+19])
                          Texp_construct "[]"
                          []
                      "uxs"
                        expression (src/newRuleSyntax.ml[253,9299+17]..src/newRuleSyntax.ml[253,9299+19])
                          Texp_construct "[]"
                          []
                      "bindings"
                        expression (src/newRuleSyntax.ml[254,9320+17]..src/newRuleSyntax.ml[254,9320+29])
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/newRuleSyntax.ml[254,9320+22]..src/newRuleSyntax.ml[254,9320+23])
                                Tpat_var "a/981"
                              expression (src/newRuleSyntax.ml[254,9320+27]..src/newRuleSyntax.ml[254,9320+28])
                                Texp_ident "a/981"
                          ]
                      "tuple"
                        expression (src/newRuleSyntax.ml[255,9351+17]..src/newRuleSyntax.ml[255,9351+19])
                          Texp_construct "[]"
                          []
                      "tilde_used"
                        expression (src/newRuleSyntax.ml[256,9372+17]..src/newRuleSyntax.ml[256,9372+19])
                          Texp_construct "[]"
                          []
                    ]
                  representation =
                    Record_regular
                  extended_expression =
                    None
          ]
    ]
  structure_item (src/newRuleSyntax.ml[261,9443+0]..src/newRuleSyntax.ml[262,9499+26])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[261,9443+4]..src/newRuleSyntax.ml[261,9443+8])
          Tpat_var "user/982"
        expression (src/newRuleSyntax.ml[261,9443+9]..src/newRuleSyntax.ml[262,9499+26]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/newRuleSyntax.ml[261,9443+10]..src/newRuleSyntax.ml[261,9443+11])
                extra
                  Tpat_extra_constraint
                  core_type (src/newRuleSyntax.ml[261,9443+14]..src/newRuleSyntax.ml[261,9443+32])
                    Ttyp_constr "Dune__exe!.Syntax.located"
                    [
                      core_type (src/newRuleSyntax.ml[261,9443+14]..src/newRuleSyntax.ml[261,9443+24])
                        Ttyp_constr "Dune__exe!.Syntax.identifier"
                        []
                    ]
                Tpat_alias "x/984"
                pattern (src/newRuleSyntax.ml[261,9443+10]..src/newRuleSyntax.ml[261,9443+11])
                  Tpat_any
              expression (src/newRuleSyntax.ml[262,9499+2]..src/newRuleSyntax.ml[262,9499+26])
                extra
                  Texp_constraint
                  core_type (src/newRuleSyntax.ml[261,9443+36]..src/newRuleSyntax.ml[261,9443+53])
                    Ttyp_constr "option/10!"
                    [
                      core_type (src/newRuleSyntax.ml[261,9443+36]..src/newRuleSyntax.ml[261,9443+46])
                        Ttyp_constr "Dune__exe!.Syntax.identifier"
                        []
                    ]
                Texp_construct "Some"
                [
                  expression (src/newRuleSyntax.ml[262,9499+7]..src/newRuleSyntax.ml[262,9499+26])
                    Texp_apply
                    expression (src/newRuleSyntax.ml[262,9499+8]..src/newRuleSyntax.ml[262,9499+23])
                      Texp_ident "Dune__exe!.Positions.value"
                    [
                      <arg>
                        Nolabel
                        expression (src/newRuleSyntax.ml[262,9499+24]..src/newRuleSyntax.ml[262,9499+25])
                          Texp_ident "x/984"
                    ]
                ]
          ]
    ]
  structure_item (src/newRuleSyntax.ml[264,9527+0]..src/newRuleSyntax.ml[265,9558+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[264,9527+4]..src/newRuleSyntax.ml[264,9527+8])
          extra
            Tpat_extra_constraint
            core_type (src/newRuleSyntax.ml[264,9527+11]..src/newRuleSyntax.ml[264,9527+28])
              Ttyp_constr "option/10!"
              [
                core_type (src/newRuleSyntax.ml[264,9527+11]..src/newRuleSyntax.ml[264,9527+21])
                  Ttyp_constr "Dune__exe!.Syntax.identifier"
                  []
              ]
          Tpat_alias "auto/985"
          pattern (src/newRuleSyntax.ml[264,9527+4]..src/newRuleSyntax.ml[264,9527+8])
            Tpat_any
        expression (src/newRuleSyntax.ml[265,9558+2]..src/newRuleSyntax.ml[265,9558+6])
          extra
            Texp_constraint
            core_type (src/newRuleSyntax.ml[264,9527+11]..src/newRuleSyntax.ml[264,9527+28])
              Ttyp_constr "option/10!"
              [
                core_type (src/newRuleSyntax.ml[264,9527+11]..src/newRuleSyntax.ml[264,9527+21])
                  Ttyp_constr "Dune__exe!.Syntax.identifier"
                  []
              ]
          Texp_construct "None"
          []
    ]
  structure_item (src/newRuleSyntax.ml[269,9598+0]..src/newRuleSyntax.ml[270,9638+28])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[269,9598+4]..src/newRuleSyntax.ml[269,9598+13])
          Tpat_var "producers/986"
        expression (src/newRuleSyntax.ml[269,9598+14]..src/newRuleSyntax.ml[270,9638+28]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/newRuleSyntax.ml[269,9598+14]..src/newRuleSyntax.ml[269,9598+21])
                Tpat_var "context/988"
              expression (src/newRuleSyntax.ml[270,9638+2]..src/newRuleSyntax.ml[270,9638+28])
                extra
                  Texp_constraint
                  core_type (src/newRuleSyntax.ml[269,9598+24]..src/newRuleSyntax.ml[269,9598+37])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/newRuleSyntax.ml[269,9598+24]..src/newRuleSyntax.ml[269,9598+32])
                        Ttyp_constr "Dune__exe!.Syntax.producer"
                        []
                    ]
                Texp_apply
                expression (src/newRuleSyntax.ml[270,9638+2]..src/newRuleSyntax.ml[270,9638+10])
                  Texp_ident "Stdlib!.List.rev"
                [
                  <arg>
                    Nolabel
                    expression (src/newRuleSyntax.ml[270,9638+11]..src/newRuleSyntax.ml[270,9638+28])
                      Texp_field
                      expression (src/newRuleSyntax.ml[270,9638+11]..src/newRuleSyntax.ml[270,9638+18])
                        Texp_ident "context/988"
                      "producers"
                ]
          ]
    ]
  structure_item (src/newRuleSyntax.ml[274,9716+0]..src/newRuleSyntax.ml[275,9760+38])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[274,9716+4]..src/newRuleSyntax.ml[274,9716+7])
          Tpat_var "uxs/989"
        expression (src/newRuleSyntax.ml[274,9716+8]..src/newRuleSyntax.ml[275,9760+38]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/newRuleSyntax.ml[274,9716+8]..src/newRuleSyntax.ml[274,9716+15])
                Tpat_var "context/991"
              expression (src/newRuleSyntax.ml[275,9760+2]..src/newRuleSyntax.ml[275,9760+38])
                extra
                  Texp_constraint
                  core_type (src/newRuleSyntax.ml[274,9716+18]..src/newRuleSyntax.ml[274,9716+41])
                    Ttyp_constr "array/8!"
                    [
                      core_type (src/newRuleSyntax.ml[274,9716+18]..src/newRuleSyntax.ml[274,9716+35])
                        Ttyp_constr "option/10!"
                        [
                          core_type (src/newRuleSyntax.ml[274,9716+18]..src/newRuleSyntax.ml[274,9716+28])
                            Ttyp_constr "Dune__exe!.Syntax.identifier"
                            []
                        ]
                    ]
                Texp_apply
                expression (src/newRuleSyntax.ml[275,9760+2]..src/newRuleSyntax.ml[275,9760+15])
                  Texp_ident "Stdlib!.Array.of_list"
                [
                  <arg>
                    Nolabel
                    expression (src/newRuleSyntax.ml[275,9760+16]..src/newRuleSyntax.ml[275,9760+38])
                      Texp_apply
                      expression (src/newRuleSyntax.ml[275,9760+17]..src/newRuleSyntax.ml[275,9760+25])
                        Texp_ident "Stdlib!.List.rev"
                      [
                        <arg>
                          Nolabel
                          expression (src/newRuleSyntax.ml[275,9760+26]..src/newRuleSyntax.ml[275,9760+37])
                            Texp_field
                            expression (src/newRuleSyntax.ml[275,9760+26]..src/newRuleSyntax.ml[275,9760+33])
                              Texp_ident "context/991"
                            "uxs"
                      ]
                ]
          ]
    ]
  structure_item (src/newRuleSyntax.ml[279,9828+0]..src/newRuleSyntax.ml[280,9866+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[279,9828+4]..src/newRuleSyntax.ml[279,9828+9])
          Tpat_var "tuple/1040"
        expression (src/newRuleSyntax.ml[279,9828+10]..src/newRuleSyntax.ml[280,9866+24]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/newRuleSyntax.ml[279,9828+10]..src/newRuleSyntax.ml[279,9828+17])
                Tpat_var "context/1042"
              expression (src/newRuleSyntax.ml[280,9866+2]..src/newRuleSyntax.ml[280,9866+24])
                extra
                  Texp_constraint
                  core_type (src/newRuleSyntax.ml[279,9828+20]..src/newRuleSyntax.ml[279,9828+35])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/newRuleSyntax.ml[279,9828+20]..src/newRuleSyntax.ml[279,9828+30])
                        Ttyp_constr "Dune__exe!.Syntax.identifier"
                        []
                    ]
                Texp_apply
                expression (src/newRuleSyntax.ml[280,9866+2]..src/newRuleSyntax.ml[280,9866+10])
                  Texp_ident "Stdlib!.List.rev"
                [
                  <arg>
                    Nolabel
                    expression (src/newRuleSyntax.ml[280,9866+11]..src/newRuleSyntax.ml[280,9866+24])
                      Texp_field
                      expression (src/newRuleSyntax.ml[280,9866+11]..src/newRuleSyntax.ml[280,9866+18])
                        Texp_ident "context/1042"
                      "tuple"
                ]
          ]
    ]
  structure_item (src/newRuleSyntax.ml[290,10222+0]..src/newRuleSyntax.ml[292,10303+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[290,10222+4]..src/newRuleSyntax.ml[290,10222+10])
          Tpat_var "semvar/1043"
        expression (src/newRuleSyntax.ml[290,10222+11]..src/newRuleSyntax.ml[292,10303+24]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/newRuleSyntax.ml[290,10222+11]..src/newRuleSyntax.ml[290,10222+18])
                Tpat_var "context/1045"
              expression (src/newRuleSyntax.ml[291,10256+2]..src/newRuleSyntax.ml[292,10303+24])
                extra
                  Texp_constraint
                  core_type (src/newRuleSyntax.ml[290,10222+21]..src/newRuleSyntax.ml[290,10222+31])
                    Ttyp_constr "Dune__exe!.Syntax.identifier"
                    []
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/newRuleSyntax.ml[291,10256+6]..src/newRuleSyntax.ml[291,10256+7])
                      Tpat_var "i/1046"
                    expression (src/newRuleSyntax.ml[291,10256+10]..src/newRuleSyntax.ml[291,10256+43])
                      Texp_apply
                      expression (src/newRuleSyntax.ml[291,10256+40]..src/newRuleSyntax.ml[291,10256+41])
                        Texp_ident "Stdlib!.+"
                      [
                        <arg>
                          Nolabel
                          expression (src/newRuleSyntax.ml[291,10256+10]..src/newRuleSyntax.ml[291,10256+39])
                            Texp_apply
                            expression (src/newRuleSyntax.ml[291,10256+10]..src/newRuleSyntax.ml[291,10256+21])
                              Texp_ident "Stdlib!.List.length"
                            [
                              <arg>
                                Nolabel
                                expression (src/newRuleSyntax.ml[291,10256+22]..src/newRuleSyntax.ml[291,10256+39])
                                  Texp_field
                                  expression (src/newRuleSyntax.ml[291,10256+22]..src/newRuleSyntax.ml[291,10256+29])
                                    Texp_ident "context/1045"
                                  "producers"
                            ]
                        <arg>
                          Nolabel
                          expression (src/newRuleSyntax.ml[291,10256+42]..src/newRuleSyntax.ml[291,10256+43])
                            Texp_constant Const_int 1
                      ]
                ]
                expression (src/newRuleSyntax.ml[292,10303+2]..src/newRuleSyntax.ml[292,10303+24])
                  Texp_apply
                  expression (src/newRuleSyntax.ml[292,10303+2]..src/newRuleSyntax.ml[292,10303+16])
                    Texp_ident "Stdlib!.Printf.sprintf"
                  [
                    <arg>
                      Nolabel
                      expression (src/newRuleSyntax.ml[292,10303+17]..src/newRuleSyntax.ml[292,10303+22])
                        Texp_construct "CamlinternalFormatBasics.Format"
                        [
                          expression (src/newRuleSyntax.ml[292,10303+17]..src/newRuleSyntax.ml[292,10303+22]) ghost
                            Texp_construct "CamlinternalFormatBasics.Char_literal"
                            [
                              expression (src/newRuleSyntax.ml[292,10303+17]..src/newRuleSyntax.ml[292,10303+22]) ghost
                                Texp_constant Const_char 5f
                              expression (src/newRuleSyntax.ml[292,10303+17]..src/newRuleSyntax.ml[292,10303+22]) ghost
                                Texp_construct "CamlinternalFormatBasics.Int"
                                [
                                  expression (src/newRuleSyntax.ml[292,10303+17]..src/newRuleSyntax.ml[292,10303+22]) ghost
                                    Texp_construct "CamlinternalFormatBasics.Int_d"
                                    []
                                  expression (src/newRuleSyntax.ml[292,10303+17]..src/newRuleSyntax.ml[292,10303+22]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                    []
                                  expression (src/newRuleSyntax.ml[292,10303+17]..src/newRuleSyntax.ml[292,10303+22]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_precision"
                                    []
                                  expression (src/newRuleSyntax.ml[292,10303+17]..src/newRuleSyntax.ml[292,10303+22]) ghost
                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                    []
                                ]
                            ]
                          expression (src/newRuleSyntax.ml[292,10303+17]..src/newRuleSyntax.ml[292,10303+22]) ghost
                            Texp_constant Const_string("_%d",(src/newRuleSyntax.ml[292,10303+17]..src/newRuleSyntax.ml[292,10303+22]) ghost,None)
                        ]
                    <arg>
                      Nolabel
                      expression (src/newRuleSyntax.ml[292,10303+23]..src/newRuleSyntax.ml[292,10303+24])
                        Texp_ident "i/1046"
                  ]
          ]
    ]
  structure_item (src/newRuleSyntax.ml[298,10465+0]..src/newRuleSyntax.ml[454,17389+34])
    Tstr_value Rec
    [
      <def>
        pattern (src/newRuleSyntax.ml[298,10465+8]..src/newRuleSyntax.ml[298,10465+17])
          Tpat_var "parameter/1047"
        expression (src/newRuleSyntax.ml[298,10465+18]..src/newRuleSyntax.ml[303,10700+57]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/newRuleSyntax.ml[298,10465+19]..src/newRuleSyntax.ml[298,10465+20])
                extra
                  Tpat_extra_constraint
                  core_type (src/newRuleSyntax.ml[298,10465+23]..src/newRuleSyntax.ml[298,10465+40])
                    Ttyp_constr "Dune__exe!.Syntax.symbol_expression"
                    []
                Tpat_alias "e/1054"
                pattern (src/newRuleSyntax.ml[298,10465+19]..src/newRuleSyntax.ml[298,10465+20])
                  Tpat_any
              expression (src/newRuleSyntax.ml[299,10521+2]..src/newRuleSyntax.ml[303,10700+57])
                extra
                  Texp_constraint
                  core_type (src/newRuleSyntax.ml[298,10465+44]..src/newRuleSyntax.ml[298,10465+53])
                    Ttyp_constr "Dune__exe!.Syntax.parameter"
                    []
                Texp_match
                expression (src/newRuleSyntax.ml[299,10521+8]..src/newRuleSyntax.ml[299,10521+9])
                  Texp_ident "e/1054"
                [
                  <case>
                    pattern (src/newRuleSyntax.ml[300,10536+4]..src/newRuleSyntax.ml[300,10536+31])
                      Tpat_value
                      pattern (src/newRuleSyntax.ml[300,10536+4]..src/newRuleSyntax.ml[300,10536+31])
                        Tpat_construct "ESymbol"
                        [
                          pattern (src/newRuleSyntax.ml[300,10536+13]..src/newRuleSyntax.ml[300,10536+16])
                            Tpat_var "sym/1055"
                          pattern (src/newRuleSyntax.ml[300,10536+18]..src/newRuleSyntax.ml[300,10536+22])
                            Tpat_var "args/1056"
                          pattern (src/newRuleSyntax.ml[300,10536+24]..src/newRuleSyntax.ml[300,10536+30])
                            Tpat_var "_attrs/1057"
                        ]
                        None
                    expression (src/newRuleSyntax.ml[303,10700+6]..src/newRuleSyntax.ml[303,10700+57])
                      Texp_apply
                      expression (src/newRuleSyntax.ml[303,10700+6]..src/newRuleSyntax.ml[303,10700+20])
                        Texp_ident "Dune__exe!.Parameters.app"
                      [
                        <arg>
                          Nolabel
                          expression (src/newRuleSyntax.ml[303,10700+21]..src/newRuleSyntax.ml[303,10700+24])
                            Texp_ident "sym/1055"
                        <arg>
                          Nolabel
                          expression (src/newRuleSyntax.ml[303,10700+25]..src/newRuleSyntax.ml[303,10700+57])
                            Texp_apply
                            expression (src/newRuleSyntax.ml[303,10700+26]..src/newRuleSyntax.ml[303,10700+34])
                              Texp_ident "Stdlib!.List.map"
                            [
                              <arg>
                                Nolabel
                                expression (src/newRuleSyntax.ml[303,10700+35]..src/newRuleSyntax.ml[303,10700+51])
                                  Texp_ident "nested_parameter/1048"
                              <arg>
                                Nolabel
                                expression (src/newRuleSyntax.ml[303,10700+52]..src/newRuleSyntax.ml[303,10700+56])
                                  Texp_ident "args/1056"
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/newRuleSyntax.ml[307,10817+4]..src/newRuleSyntax.ml[307,10817+20])
          Tpat_var "nested_parameter/1048"
        expression (src/newRuleSyntax.ml[307,10817+21]..src/newRuleSyntax.ml[322,11663+65]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/newRuleSyntax.ml[307,10817+22]..src/newRuleSyntax.ml[307,10817+23])
                extra
                  Tpat_extra_constraint
                  core_type (src/newRuleSyntax.ml[307,10817+26]..src/newRuleSyntax.ml[307,10817+36])
                    Ttyp_constr "Dune__exe!.Syntax.expression"
                    []
                Tpat_alias "e/1073"
                pattern (src/newRuleSyntax.ml[307,10817+22]..src/newRuleSyntax.ml[307,10817+23])
                  Tpat_any
              expression (src/newRuleSyntax.ml[308,10869+2]..src/newRuleSyntax.ml[322,11663+65])
                extra
                  Texp_constraint
                  core_type (src/newRuleSyntax.ml[307,10817+40]..src/newRuleSyntax.ml[307,10817+49])
                    Ttyp_constr "Dune__exe!.Syntax.parameter"
                    []
                Texp_match
                expression (src/newRuleSyntax.ml[308,10869+8]..src/newRuleSyntax.ml[308,10869+25])
                  Texp_apply
                  expression (src/newRuleSyntax.ml[308,10869+8]..src/newRuleSyntax.ml[308,10869+23])
                    Texp_ident "Dune__exe!.Positions.value"
                  [
                    <arg>
                      Nolabel
                      expression (src/newRuleSyntax.ml[308,10869+24]..src/newRuleSyntax.ml[308,10869+25])
                        Texp_ident "e/1073"
                  ]
                [
                  <case>
                    pattern (src/newRuleSyntax.ml[309,10900+4]..src/newRuleSyntax.ml[309,10900+62])
                      Tpat_value
                      pattern (src/newRuleSyntax.ml[309,10900+4]..src/newRuleSyntax.ml[309,10900+62])
                        Tpat_construct "EChoice"
                        [
                          pattern (src/newRuleSyntax.ml[309,10900+12]..src/newRuleSyntax.ml[309,10900+62])
                            Tpat_construct "::"
                            [
                              pattern (src/newRuleSyntax.ml[309,10900+14]..src/newRuleSyntax.ml[309,10900+60])
                                Tpat_construct "Branch"
                                [
                                  pattern (src/newRuleSyntax.ml[309,10900+22]..src/newRuleSyntax.ml[309,10900+56])
                                    Tpat_record
                                    [
                                      "Positions.value"
                                        pattern (src/newRuleSyntax.ml[309,10900+42]..src/newRuleSyntax.ml[309,10900+54])
                                          Tpat_construct "ESingleton"
                                          [
                                            pattern (src/newRuleSyntax.ml[309,10900+53]..src/newRuleSyntax.ml[309,10900+54])
                                              Tpat_var "e/1074"
                                          ]
                                          None
                                    ]
                                  pattern (src/newRuleSyntax.ml[309,10900+58]..src/newRuleSyntax.ml[309,10900+59])
                                    Tpat_any
                                ]
                                None
                              pattern (src/newRuleSyntax.ml[309,10900+61]..src/newRuleSyntax.ml[309,10900+62]) ghost
                                Tpat_construct "[]"
                                []
                                None
                            ]
                            None
                        ]
                        None
                    expression (src/newRuleSyntax.ml[318,11521+6]..src/newRuleSyntax.ml[318,11521+17])
                      Texp_apply
                      expression (src/newRuleSyntax.ml[318,11521+6]..src/newRuleSyntax.ml[318,11521+15])
                        Texp_ident "parameter/1047"
                      [
                        <arg>
                          Nolabel
                          expression (src/newRuleSyntax.ml[318,11521+16]..src/newRuleSyntax.ml[318,11521+17])
                            Texp_ident "e/1074"
                      ]
                  <case>
                    pattern (src/newRuleSyntax.ml[319,11539+4]..src/newRuleSyntax.ml[319,11539+13])
                      Tpat_value
                      pattern (src/newRuleSyntax.ml[319,11539+4]..src/newRuleSyntax.ml[319,11539+13])
                        Tpat_construct "EChoice"
                        [
                          pattern (src/newRuleSyntax.ml[319,11539+12]..src/newRuleSyntax.ml[319,11539+13])
                            Tpat_any
                        ]
                        None
                    expression (src/newRuleSyntax.ml[321,11623+6]..src/newRuleSyntax.ml[322,11663+65])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/newRuleSyntax.ml[321,11623+10]..src/newRuleSyntax.ml[321,11623+13])
                            Tpat_var "pos/1075"
                          expression (src/newRuleSyntax.ml[321,11623+16]..src/newRuleSyntax.ml[321,11623+36])
                            Texp_apply
                            expression (src/newRuleSyntax.ml[321,11623+16]..src/newRuleSyntax.ml[321,11623+34])
                              Texp_ident "Dune__exe!.Positions.position"
                            [
                              <arg>
                                Nolabel
                                expression (src/newRuleSyntax.ml[321,11623+35]..src/newRuleSyntax.ml[321,11623+36])
                                  Texp_ident "e/1073"
                            ]
                      ]
                      expression (src/newRuleSyntax.ml[322,11663+6]..src/newRuleSyntax.ml[322,11663+65])
                        Texp_construct "ParameterAnonymous"
                        [
                          expression (src/newRuleSyntax.ml[322,11663+25]..src/newRuleSyntax.ml[322,11663+65])
                            Texp_apply
                            expression (src/newRuleSyntax.ml[322,11663+26]..src/newRuleSyntax.ml[322,11663+44])
                              Texp_ident "Dune__exe!.Positions.with_pos"
                            [
                              <arg>
                                Nolabel
                                expression (src/newRuleSyntax.ml[322,11663+45]..src/newRuleSyntax.ml[322,11663+48])
                                  Texp_ident "pos/1075"
                              <arg>
                                Nolabel
                                expression (src/newRuleSyntax.ml[322,11663+49]..src/newRuleSyntax.ml[322,11663+64])
                                  Texp_apply
                                  expression (src/newRuleSyntax.ml[322,11663+50]..src/newRuleSyntax.ml[322,11663+61])
                                    Texp_ident "productions/1053"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/newRuleSyntax.ml[322,11663+62]..src/newRuleSyntax.ml[322,11663+63])
                                        Texp_ident "e/1073"
                                  ]
                            ]
                        ]
                ]
          ]
      <def>
        pattern (src/newRuleSyntax.ml[327,11854+4]..src/newRuleSyntax.ml[327,11854+12])
          Tpat_var "producer/1049"
        expression (src/newRuleSyntax.ml[327,11854+13]..src/newRuleSyntax.ml[328,11907+32]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/newRuleSyntax.ml[327,11854+13]..src/newRuleSyntax.ml[327,11854+14])
                Tpat_var "x/1076"
              expression (src/newRuleSyntax.ml[327,11854+15]..src/newRuleSyntax.ml[328,11907+32]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/newRuleSyntax.ml[327,11854+16]..src/newRuleSyntax.ml[327,11854+18])
                      extra
                        Tpat_extra_constraint
                        core_type (src/newRuleSyntax.ml[327,11854+21]..src/newRuleSyntax.ml[327,11854+38])
                          Ttyp_constr "Dune__exe!.Syntax.symbol_expression"
                          []
                      Tpat_alias "e1/1077"
                      pattern (src/newRuleSyntax.ml[327,11854+16]..src/newRuleSyntax.ml[327,11854+18])
                        Tpat_any
                    expression (src/newRuleSyntax.ml[328,11907+2]..src/newRuleSyntax.ml[328,11907+32])
                      extra
                        Texp_constraint
                        core_type (src/newRuleSyntax.ml[327,11854+42]..src/newRuleSyntax.ml[327,11854+50])
                          Ttyp_constr "Dune__exe!.Syntax.producer"
                          []
                      Texp_tuple
                      [
                        expression (src/newRuleSyntax.ml[328,11907+2]..src/newRuleSyntax.ml[328,11907+3])
                          Texp_ident "x/1076"
                        expression (src/newRuleSyntax.ml[328,11907+5]..src/newRuleSyntax.ml[328,11907+17])
                          Texp_apply
                          expression (src/newRuleSyntax.ml[328,11907+5]..src/newRuleSyntax.ml[328,11907+14])
                            Texp_ident "parameter/1047"
                          [
                            <arg>
                              Nolabel
                              expression (src/newRuleSyntax.ml[328,11907+15]..src/newRuleSyntax.ml[328,11907+17])
                                Texp_ident "e1/1077"
                          ]
                        expression (src/newRuleSyntax.ml[328,11907+19]..src/newRuleSyntax.ml[328,11907+32])
                          Texp_apply
                          expression (src/newRuleSyntax.ml[328,11907+19]..src/newRuleSyntax.ml[328,11907+29])
                            Texp_ident "attributes/963"
                          [
                            <arg>
                              Nolabel
                              expression (src/newRuleSyntax.ml[328,11907+30]..src/newRuleSyntax.ml[328,11907+32])
                                Texp_ident "e1/1077"
                          ]
                      ]
                ]
          ]
      <def>
        pattern (src/newRuleSyntax.ml[333,12073+4]..src/newRuleSyntax.ml[333,12073+10])
          Tpat_var "extend/1050"
        expression (src/newRuleSyntax.ml[333,12073+11]..src/newRuleSyntax.ml[359,13419+20]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/newRuleSyntax.ml[333,12073+12]..src/newRuleSyntax.ml[333,12073+13])
                extra
                  Tpat_extra_constraint
                  core_type (src/newRuleSyntax.ml[333,12073+16]..src/newRuleSyntax.ml[333,12073+23])
                    Ttyp_constr "Dune__exe!.Syntax.pattern"
                    []
                Tpat_alias "p/1078"
                pattern (src/newRuleSyntax.ml[333,12073+12]..src/newRuleSyntax.ml[333,12073+13])
                  Tpat_any
              expression (src/newRuleSyntax.ml[333,12073+25]..src/newRuleSyntax.ml[359,13419+20]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/newRuleSyntax.ml[333,12073+26]..src/newRuleSyntax.ml[333,12073+28])
                      extra
                        Tpat_extra_constraint
                        core_type (src/newRuleSyntax.ml[333,12073+31]..src/newRuleSyntax.ml[333,12073+48])
                          Ttyp_constr "Dune__exe!.Syntax.symbol_expression"
                          []
                      Tpat_alias "e1/1079"
                      pattern (src/newRuleSyntax.ml[333,12073+26]..src/newRuleSyntax.ml[333,12073+28])
                        Tpat_any
                    expression (src/newRuleSyntax.ml[333,12073+50]..src/newRuleSyntax.ml[359,13419+20]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/newRuleSyntax.ml[333,12073+51]..src/newRuleSyntax.ml[333,12073+58])
                            extra
                              Tpat_extra_constraint
                              core_type (src/newRuleSyntax.ml[333,12073+61]..src/newRuleSyntax.ml[333,12073+68])
                                Ttyp_constr "context/967"
                                []
                            Tpat_alias "context/1080"
                            pattern (src/newRuleSyntax.ml[333,12073+51]..src/newRuleSyntax.ml[333,12073+58])
                              Tpat_any
                          expression (src/newRuleSyntax.ml[334,12155+2]..src/newRuleSyntax.ml[359,13419+20])
                            extra
                              Texp_constraint
                              core_type (src/newRuleSyntax.ml[333,12073+72]..src/newRuleSyntax.ml[333,12073+79])
                                Ttyp_constr "context/967"
                                []
                            Texp_match
                            expression (src/newRuleSyntax.ml[334,12155+8]..src/newRuleSyntax.ml[334,12155+9])
                              Texp_ident "p/1078"
                            [
                              <case>
                                pattern (src/newRuleSyntax.ml[335,12170+4]..src/newRuleSyntax.ml[335,12170+16])
                                  Tpat_value
                                  pattern (src/newRuleSyntax.ml[335,12170+4]..src/newRuleSyntax.ml[335,12170+16])
                                    Tpat_construct "SemPatVar"
                                    [
                                      pattern (src/newRuleSyntax.ml[335,12170+14]..src/newRuleSyntax.ml[335,12170+16])
                                        Tpat_var "x1/1081"
                                    ]
                                    None
                                expression (src/newRuleSyntax.ml[338,12339+6]..src/newRuleSyntax.ml[343,12632+41])
                                  Texp_record
                                    fields =
                                      [
                                        "pos"
                                          expression (src/newRuleSyntax.ml[338,12339+43]..src/newRuleSyntax.ml[338,12339+54])
                                            Texp_field
                                            expression (src/newRuleSyntax.ml[338,12339+43]..src/newRuleSyntax.ml[338,12339+50])
                                              Texp_ident "context/1080"
                                            "pos"
                                        "producers"
                                          expression (src/newRuleSyntax.ml[339,12395+21]..src/newRuleSyntax.ml[339,12395+60])
                                            Texp_construct "::"
                                            [
                                              expression (src/newRuleSyntax.ml[339,12395+21]..src/newRuleSyntax.ml[339,12395+35])
                                                Texp_apply
                                                expression (src/newRuleSyntax.ml[339,12395+21]..src/newRuleSyntax.ml[339,12395+29])
                                                  Texp_ident "producer/1049"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/newRuleSyntax.ml[339,12395+30]..src/newRuleSyntax.ml[339,12395+32])
                                                      Texp_ident "x1/1081"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/newRuleSyntax.ml[339,12395+33]..src/newRuleSyntax.ml[339,12395+35])
                                                      Texp_ident "e1/1079"
                                                ]
                                              expression (src/newRuleSyntax.ml[339,12395+43]..src/newRuleSyntax.ml[339,12395+60])
                                                Texp_field
                                                expression (src/newRuleSyntax.ml[339,12395+43]..src/newRuleSyntax.ml[339,12395+50])
                                                  Texp_ident "context/1080"
                                                "producers"
                                            ]
                                        "uxs"
                                          expression (src/newRuleSyntax.ml[340,12457+21]..src/newRuleSyntax.ml[340,12457+54])
                                            Texp_construct "::"
                                            [
                                              expression (src/newRuleSyntax.ml[340,12457+21]..src/newRuleSyntax.ml[340,12457+28])
                                                Texp_apply
                                                expression (src/newRuleSyntax.ml[340,12457+21]..src/newRuleSyntax.ml[340,12457+25])
                                                  Texp_ident "user/982"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/newRuleSyntax.ml[340,12457+26]..src/newRuleSyntax.ml[340,12457+28])
                                                      Texp_ident "x1/1081"
                                                ]
                                              expression (src/newRuleSyntax.ml[340,12457+43]..src/newRuleSyntax.ml[340,12457+54])
                                                Texp_field
                                                expression (src/newRuleSyntax.ml[340,12457+43]..src/newRuleSyntax.ml[340,12457+50])
                                                  Texp_ident "context/1080"
                                                "uxs"
                                            ]
                                        "bindings"
                                          expression (src/newRuleSyntax.ml[341,12513+43]..src/newRuleSyntax.ml[341,12513+59])
                                            Texp_field
                                            expression (src/newRuleSyntax.ml[341,12513+43]..src/newRuleSyntax.ml[341,12513+50])
                                              Texp_ident "context/1080"
                                            "bindings"
                                        "tuple"
                                          expression (src/newRuleSyntax.ml[342,12574+21]..src/newRuleSyntax.ml[342,12574+56])
                                            Texp_construct "::"
                                            [
                                              expression (src/newRuleSyntax.ml[342,12574+21]..src/newRuleSyntax.ml[342,12574+39])
                                                Texp_apply
                                                expression (src/newRuleSyntax.ml[342,12574+21]..src/newRuleSyntax.ml[342,12574+36])
                                                  Texp_ident "Dune__exe!.Positions.value"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/newRuleSyntax.ml[342,12574+37]..src/newRuleSyntax.ml[342,12574+39])
                                                      Texp_ident "x1/1081"
                                                ]
                                              expression (src/newRuleSyntax.ml[342,12574+43]..src/newRuleSyntax.ml[342,12574+56])
                                                Texp_field
                                                expression (src/newRuleSyntax.ml[342,12574+43]..src/newRuleSyntax.ml[342,12574+50])
                                                  Texp_ident "context/1080"
                                                "tuple"
                                            ]
                                        "tilde_used"
                                          expression (src/newRuleSyntax.ml[343,12632+21]..src/newRuleSyntax.ml[343,12632+39])
                                            Texp_field
                                            expression (src/newRuleSyntax.ml[343,12632+21]..src/newRuleSyntax.ml[343,12632+28])
                                              Texp_ident "context/1080"
                                            "tilde_used"
                                      ]
                                    representation =
                                      Record_regular
                                    extended_expression =
                                      None
                              <case>
                                pattern (src/newRuleSyntax.ml[344,12674+4]..src/newRuleSyntax.ml[344,12674+5])
                                  Tpat_value
                                  pattern (src/newRuleSyntax.ml[344,12674+4]..src/newRuleSyntax.ml[344,12674+5])
                                    Tpat_any
                                expression (src/newRuleSyntax.ml[349,12942+6]..src/newRuleSyntax.ml[359,13419+20])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/newRuleSyntax.ml[349,12942+10]..src/newRuleSyntax.ml[349,12942+12])
                                        Tpat_var "x1/1082"
                                      expression (src/newRuleSyntax.ml[349,12942+15]..src/newRuleSyntax.ml[349,12942+29])
                                        Texp_apply
                                        expression (src/newRuleSyntax.ml[349,12942+15]..src/newRuleSyntax.ml[349,12942+21])
                                          Texp_ident "semvar/1043"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/newRuleSyntax.ml[349,12942+22]..src/newRuleSyntax.ml[349,12942+29])
                                              Texp_ident "context/1080"
                                        ]
                                  ]
                                  expression (src/newRuleSyntax.ml[350,12975+6]..src/newRuleSyntax.ml[359,13419+20])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/newRuleSyntax.ml[350,12975+10]..src/newRuleSyntax.ml[350,12975+20])
                                          Tpat_var "tilde_used/1083"
                                        expression (src/newRuleSyntax.ml[350,12975+23]..src/newRuleSyntax.ml[350,12975+54])
                                          Texp_apply
                                          expression (src/newRuleSyntax.ml[350,12975+23]..src/newRuleSyntax.ml[350,12975+33])
                                            Texp_ident "tilde_used/884"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/newRuleSyntax.ml[350,12975+34]..src/newRuleSyntax.ml[350,12975+52])
                                                Texp_field
                                                expression (src/newRuleSyntax.ml[350,12975+34]..src/newRuleSyntax.ml[350,12975+41])
                                                  Texp_ident "context/1080"
                                                "tilde_used"
                                            <arg>
                                              Nolabel
                                              expression (src/newRuleSyntax.ml[350,12975+53]..src/newRuleSyntax.ml[350,12975+54])
                                                Texp_ident "p/1078"
                                          ]
                                    ]
                                    expression (src/newRuleSyntax.ml[351,13033+6]..src/newRuleSyntax.ml[359,13419+20])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/newRuleSyntax.ml[351,13033+10]..src/newRuleSyntax.ml[351,13033+11])
                                            extra
                                              Tpat_extra_constraint
                                              core_type (src/newRuleSyntax.ml[351,13033+14]..src/newRuleSyntax.ml[351,13033+24])
                                                Ttyp_constr "Dune__exe!.IL.pattern"
                                                []
                                            Tpat_alias "p/1084"
                                            pattern (src/newRuleSyntax.ml[351,13033+10]..src/newRuleSyntax.ml[351,13033+11])
                                              Tpat_any
                                          expression (src/newRuleSyntax.ml[351,13033+27]..src/newRuleSyntax.ml[351,13033+39])
                                            extra
                                              Texp_constraint
                                              core_type (src/newRuleSyntax.ml[351,13033+14]..src/newRuleSyntax.ml[351,13033+24])
                                                Ttyp_constr "Dune__exe!.IL.pattern"
                                                []
                                            Texp_apply
                                            expression (src/newRuleSyntax.ml[351,13033+27]..src/newRuleSyntax.ml[351,13033+34])
                                              Texp_ident "pattern/932"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/newRuleSyntax.ml[351,13033+35]..src/newRuleSyntax.ml[351,13033+37])
                                                  Texp_ident "x1/1082"
                                              <arg>
                                                Nolabel
                                                expression (src/newRuleSyntax.ml[351,13033+38]..src/newRuleSyntax.ml[351,13033+39])
                                                  Texp_ident "p/1078"
                                            ]
                                      ]
                                      expression (src/newRuleSyntax.ml[352,13076+6]..src/newRuleSyntax.ml[359,13419+20])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/newRuleSyntax.ml[352,13076+10]..src/newRuleSyntax.ml[352,13076+17])
                                              Tpat_var "binding/1085"
                                            expression (src/newRuleSyntax.ml[352,13076+20]..src/newRuleSyntax.ml[352,13076+36])
                                              Texp_apply
                                              expression (src/newRuleSyntax.ml[352,13076+20]..src/newRuleSyntax.ml[352,13076+31])
                                                Texp_ident "Dune__exe!.Action.bind"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/newRuleSyntax.ml[352,13076+32]..src/newRuleSyntax.ml[352,13076+33])
                                                    Texp_ident "p/1084"
                                                <arg>
                                                  Nolabel
                                                  expression (src/newRuleSyntax.ml[352,13076+34]..src/newRuleSyntax.ml[352,13076+36])
                                                    Texp_ident "x1/1082"
                                              ]
                                        ]
                                        expression (src/newRuleSyntax.ml[353,13116+6]..src/newRuleSyntax.ml[359,13419+20])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/newRuleSyntax.ml[353,13116+10]..src/newRuleSyntax.ml[353,13116+12])
                                                Tpat_var "x1/1086"
                                              expression (src/newRuleSyntax.ml[353,13116+15]..src/newRuleSyntax.ml[353,13116+39])
                                                Texp_apply
                                                expression (src/newRuleSyntax.ml[353,13116+15]..src/newRuleSyntax.ml[353,13116+36])
                                                  Texp_ident "Dune__exe!.Positions.unknown_pos"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/newRuleSyntax.ml[353,13116+37]..src/newRuleSyntax.ml[353,13116+39])
                                                      Texp_ident "x1/1082"
                                                ]
                                          ]
                                          expression (src/newRuleSyntax.ml[354,13159+6]..src/newRuleSyntax.ml[359,13419+20])
                                            Texp_record
                                              fields =
                                                [
                                                  "pos"
                                                    expression (src/newRuleSyntax.ml[354,13159+39]..src/newRuleSyntax.ml[354,13159+50])
                                                      Texp_field
                                                      expression (src/newRuleSyntax.ml[354,13159+39]..src/newRuleSyntax.ml[354,13159+46])
                                                        Texp_ident "context/1080"
                                                      "pos"
                                                  "producers"
                                                    expression (src/newRuleSyntax.ml[355,13211+21]..src/newRuleSyntax.ml[355,13211+56])
                                                      Texp_construct "::"
                                                      [
                                                        expression (src/newRuleSyntax.ml[355,13211+21]..src/newRuleSyntax.ml[355,13211+35])
                                                          Texp_apply
                                                          expression (src/newRuleSyntax.ml[355,13211+21]..src/newRuleSyntax.ml[355,13211+29])
                                                            Texp_ident "producer/1049"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/newRuleSyntax.ml[355,13211+30]..src/newRuleSyntax.ml[355,13211+32])
                                                                Texp_ident "x1/1086"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/newRuleSyntax.ml[355,13211+33]..src/newRuleSyntax.ml[355,13211+35])
                                                                Texp_ident "e1/1079"
                                                          ]
                                                        expression (src/newRuleSyntax.ml[355,13211+39]..src/newRuleSyntax.ml[355,13211+56])
                                                          Texp_field
                                                          expression (src/newRuleSyntax.ml[355,13211+39]..src/newRuleSyntax.ml[355,13211+46])
                                                            Texp_ident "context/1080"
                                                          "producers"
                                                      ]
                                                  "uxs"
                                                    expression (src/newRuleSyntax.ml[356,13269+21]..src/newRuleSyntax.ml[356,13269+50])
                                                      Texp_construct "::"
                                                      [
                                                        expression (src/newRuleSyntax.ml[356,13269+21]..src/newRuleSyntax.ml[356,13269+25])
                                                          Texp_ident "auto/985"
                                                        expression (src/newRuleSyntax.ml[356,13269+39]..src/newRuleSyntax.ml[356,13269+50])
                                                          Texp_field
                                                          expression (src/newRuleSyntax.ml[356,13269+39]..src/newRuleSyntax.ml[356,13269+46])
                                                            Texp_ident "context/1080"
                                                          "uxs"
                                                      ]
                                                  "bindings"
                                                    expression (src/newRuleSyntax.ml[357,13321+21]..src/newRuleSyntax.ml[357,13321+55])
                                                      Texp_apply
                                                      expression (src/newRuleSyntax.ml[357,13321+36]..src/newRuleSyntax.ml[357,13321+38])
                                                        Texp_ident ">>/432"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/newRuleSyntax.ml[357,13321+21]..src/newRuleSyntax.ml[357,13321+28])
                                                            Texp_ident "binding/1085"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/newRuleSyntax.ml[357,13321+39]..src/newRuleSyntax.ml[357,13321+55])
                                                            Texp_field
                                                            expression (src/newRuleSyntax.ml[357,13321+39]..src/newRuleSyntax.ml[357,13321+46])
                                                              Texp_ident "context/1080"
                                                            "bindings"
                                                      ]
                                                  "tuple"
                                                    expression (src/newRuleSyntax.ml[358,13378+21]..src/newRuleSyntax.ml[358,13378+39])
                                                      Texp_apply
                                                      expression (src/newRuleSyntax.ml[358,13378+21]..src/newRuleSyntax.ml[358,13378+23])
                                                        Texp_ident "bv/958"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/newRuleSyntax.ml[358,13378+24]..src/newRuleSyntax.ml[358,13378+37])
                                                            Texp_field
                                                            expression (src/newRuleSyntax.ml[358,13378+24]..src/newRuleSyntax.ml[358,13378+31])
                                                              Texp_ident "context/1080"
                                                            "tuple"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/newRuleSyntax.ml[358,13378+38]..src/newRuleSyntax.ml[358,13378+39])
                                                            Texp_ident "p/1084"
                                                      ]
                                                  "tilde_used"
                                                    expression (src/newRuleSyntax.ml[359,13419+8]..src/newRuleSyntax.ml[359,13419+18])
                                                      Texp_ident "tilde_used/1083"
                                                ]
                                              representation =
                                                Record_regular
                                              extended_expression =
                                                None
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/newRuleSyntax.ml[363,13498+4]..src/newRuleSyntax.ml[363,13498+18])
          Tpat_var "production_aux/1051"
        expression (src/newRuleSyntax.ml[364,13517+2]..src/newRuleSyntax.ml[443,17064+36]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/newRuleSyntax.ml[364,13517+3]..src/newRuleSyntax.ml[364,13517+10])
                extra
                  Tpat_extra_constraint
                  core_type (src/newRuleSyntax.ml[364,13517+13]..src/newRuleSyntax.ml[364,13517+20])
                    Ttyp_constr "context/967"
                    []
                Tpat_alias "context/1087"
                pattern (src/newRuleSyntax.ml[364,13517+3]..src/newRuleSyntax.ml[364,13517+10])
                  Tpat_any
              expression (src/newRuleSyntax.ml[365,13539+2]..src/newRuleSyntax.ml[443,17064+36]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/newRuleSyntax.ml[365,13539+3]..src/newRuleSyntax.ml[365,13539+4])
                      extra
                        Tpat_extra_constraint
                        core_type (src/newRuleSyntax.ml[365,13539+7]..src/newRuleSyntax.ml[365,13539+21])
                          Ttyp_constr "Dune__exe!.Syntax.seq_expression"
                          []
                      Tpat_alias "e/1088"
                      pattern (src/newRuleSyntax.ml[365,13539+3]..src/newRuleSyntax.ml[365,13539+4])
                        Tpat_any
                    expression (src/newRuleSyntax.ml[366,13562+2]..src/newRuleSyntax.ml[443,17064+36]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/newRuleSyntax.ml[366,13562+3]..src/newRuleSyntax.ml[366,13562+8])
                            extra
                              Tpat_extra_constraint
                              core_type (src/newRuleSyntax.ml[366,13562+11]..src/newRuleSyntax.ml[366,13562+34])
                                Ttyp_constr "Dune__exe!.Syntax.branch_production_level"
                                []
                            Tpat_alias "level/1089"
                            pattern (src/newRuleSyntax.ml[366,13562+3]..src/newRuleSyntax.ml[366,13562+8])
                              Tpat_any
                          expression (src/newRuleSyntax.ml[368,13623+2]..src/newRuleSyntax.ml[443,17064+36])
                            extra
                              Texp_constraint
                              core_type (src/newRuleSyntax.ml[367,13598+2]..src/newRuleSyntax.ml[367,13598+22])
                                Ttyp_constr "Dune__exe!.Syntax.parameterized_branch"
                                []
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/newRuleSyntax.ml[368,13623+6]..src/newRuleSyntax.ml[368,13623+12])
                                  Tpat_tuple
                                  [
                                    pattern (src/newRuleSyntax.ml[368,13623+6]..src/newRuleSyntax.ml[368,13623+7])
                                      Tpat_var "e/1090"
                                    pattern (src/newRuleSyntax.ml[368,13623+9]..src/newRuleSyntax.ml[368,13623+12])
                                      Tpat_var "pos/1091"
                                  ]
                                expression (src/newRuleSyntax.ml[368,13623+15]..src/newRuleSyntax.ml[368,13623+36])
                                  Texp_apply
                                  expression (src/newRuleSyntax.ml[368,13623+15]..src/newRuleSyntax.ml[368,13623+34])
                                    Texp_ident "Dune__exe!.Positions.decompose"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/newRuleSyntax.ml[368,13623+35]..src/newRuleSyntax.ml[368,13623+36])
                                        Texp_ident "e/1088"
                                  ]
                            ]
                            expression (src/newRuleSyntax.ml[369,13663+2]..src/newRuleSyntax.ml[443,17064+36])
                              Texp_match
                              expression (src/newRuleSyntax.ml[369,13663+8]..src/newRuleSyntax.ml[369,13663+9])
                                Texp_ident "e/1090"
                              [
                                <case>
                                  pattern (src/newRuleSyntax.ml[371,13679+4]..src/newRuleSyntax.ml[371,13679+21])
                                    Tpat_value
                                    pattern (src/newRuleSyntax.ml[371,13679+4]..src/newRuleSyntax.ml[371,13679+21])
                                      Tpat_construct "ECons"
                                      [
                                        pattern (src/newRuleSyntax.ml[371,13679+11]..src/newRuleSyntax.ml[371,13679+12])
                                          Tpat_var "p/1092"
                                        pattern (src/newRuleSyntax.ml[371,13679+14]..src/newRuleSyntax.ml[371,13679+16])
                                          Tpat_var "e1/1093"
                                        pattern (src/newRuleSyntax.ml[371,13679+18]..src/newRuleSyntax.ml[371,13679+20])
                                          Tpat_var "e2/1094"
                                      ]
                                      None
                                  expression (src/newRuleSyntax.ml[374,13829+6]..src/newRuleSyntax.ml[374,13829+51])
                                    Texp_apply
                                    expression (src/newRuleSyntax.ml[374,13829+6]..src/newRuleSyntax.ml[374,13829+20])
                                      Texp_ident "production_aux/1051"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/newRuleSyntax.ml[374,13829+21]..src/newRuleSyntax.ml[374,13829+42])
                                          Texp_apply
                                          expression (src/newRuleSyntax.ml[374,13829+22]..src/newRuleSyntax.ml[374,13829+28])
                                            Texp_ident "extend/1050"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/newRuleSyntax.ml[374,13829+29]..src/newRuleSyntax.ml[374,13829+30])
                                                Texp_ident "p/1092"
                                            <arg>
                                              Nolabel
                                              expression (src/newRuleSyntax.ml[374,13829+31]..src/newRuleSyntax.ml[374,13829+33])
                                                Texp_ident "e1/1093"
                                            <arg>
                                              Nolabel
                                              expression (src/newRuleSyntax.ml[374,13829+34]..src/newRuleSyntax.ml[374,13829+41])
                                                Texp_ident "context/1087"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/newRuleSyntax.ml[374,13829+43]..src/newRuleSyntax.ml[374,13829+45])
                                          Texp_ident "e2/1094"
                                      <arg>
                                        Nolabel
                                        expression (src/newRuleSyntax.ml[374,13829+46]..src/newRuleSyntax.ml[374,13829+51])
                                          Texp_ident "level/1089"
                                    ]
                                <case>
                                  pattern (src/newRuleSyntax.ml[376,13882+4]..src/newRuleSyntax.ml[376,13882+44])
                                    Tpat_value
                                    pattern (src/newRuleSyntax.ml[376,13882+4]..src/newRuleSyntax.ml[376,13882+44])
                                      Tpat_construct "EAction"
                                      [
                                        pattern (src/newRuleSyntax.ml[376,13882+13]..src/newRuleSyntax.ml[376,13882+37])
                                          Tpat_construct "XATraditional"
                                          [
                                            pattern (src/newRuleSyntax.ml[376,13882+27]..src/newRuleSyntax.ml[376,13882+37])
                                              Tpat_var "raw_action/1095"
                                          ]
                                          None
                                        pattern (src/newRuleSyntax.ml[376,13882+39]..src/newRuleSyntax.ml[376,13882+43])
                                          Tpat_var "prec/1096"
                                      ]
                                      None
                                  expression (src/newRuleSyntax.ml[378,13997+6]..src/newRuleSyntax.ml[388,14493+7])
                                    Texp_sequence
                                    expression (src/newRuleSyntax.ml[378,13997+6]..src/newRuleSyntax.ml[378,13997+43])
                                      Texp_apply
                                      expression (src/newRuleSyntax.ml[378,13997+6]..src/newRuleSyntax.ml[378,13997+24])
                                        Texp_ident "tilde_used_warning/889"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/newRuleSyntax.ml[378,13997+25]..src/newRuleSyntax.ml[378,13997+43])
                                            Texp_field
                                            expression (src/newRuleSyntax.ml[378,13997+25]..src/newRuleSyntax.ml[378,13997+32])
                                              Texp_ident "context/1087"
                                            "tilde_used"
                                      ]
                                    expression (src/newRuleSyntax.ml[380,14104+6]..src/newRuleSyntax.ml[388,14493+7])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/newRuleSyntax.ml[380,14104+10]..src/newRuleSyntax.ml[380,14104+16])
                                            Tpat_var "action/1100"
                                          expression (src/newRuleSyntax.ml[380,14104+19]..src/newRuleSyntax.ml[380,14104+70])
                                            Texp_apply
                                            expression (src/newRuleSyntax.ml[380,14104+19]..src/newRuleSyntax.ml[380,14104+29])
                                              Texp_ident "raw_action/1095"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/newRuleSyntax.ml[380,14104+30]..src/newRuleSyntax.ml[380,14104+56])
                                                  Texp_construct "Settings.DollarsDisallowed"
                                                  []
                                              <arg>
                                                Nolabel
                                                expression (src/newRuleSyntax.ml[380,14104+57]..src/newRuleSyntax.ml[380,14104+70])
                                                  Texp_apply
                                                  expression (src/newRuleSyntax.ml[380,14104+58]..src/newRuleSyntax.ml[380,14104+61])
                                                    Texp_ident "uxs/989"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/newRuleSyntax.ml[380,14104+62]..src/newRuleSyntax.ml[380,14104+69])
                                                        Texp_ident "context/1087"
                                                  ]
                                            ]
                                      ]
                                      expression (src/newRuleSyntax.ml[382,14230+6]..src/newRuleSyntax.ml[388,14493+7])
                                        Texp_record
                                          fields =
                                            [
                                              "pr_branch_position"
                                                expression (src/newRuleSyntax.ml[383,14238+37]..src/newRuleSyntax.ml[383,14238+48])
                                                  Texp_field
                                                  expression (src/newRuleSyntax.ml[383,14238+37]..src/newRuleSyntax.ml[383,14238+44])
                                                    Texp_ident "context/1087"
                                                  "pos"
                                              "pr_producers"
                                                expression (src/newRuleSyntax.ml[384,14288+37]..src/newRuleSyntax.ml[384,14288+54])
                                                  Texp_apply
                                                  expression (src/newRuleSyntax.ml[384,14288+37]..src/newRuleSyntax.ml[384,14288+46])
                                                    Texp_ident "producers/986"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/newRuleSyntax.ml[384,14288+47]..src/newRuleSyntax.ml[384,14288+54])
                                                        Texp_ident "context/1087"
                                                  ]
                                              "pr_action"
                                                expression (src/newRuleSyntax.ml[385,14344+37]..src/newRuleSyntax.ml[385,14344+60])
                                                  Texp_apply
                                                  expression (src/newRuleSyntax.ml[385,14344+37]..src/newRuleSyntax.ml[385,14344+53])
                                                    Texp_field
                                                    expression (src/newRuleSyntax.ml[385,14344+37]..src/newRuleSyntax.ml[385,14344+44])
                                                      Texp_ident "context/1087"
                                                    "bindings"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/newRuleSyntax.ml[385,14344+54]..src/newRuleSyntax.ml[385,14344+60])
                                                        Texp_ident "action/1100"
                                                  ]
                                              "pr_branch_prec_annotation"
                                                expression (src/newRuleSyntax.ml[386,14406+37]..src/newRuleSyntax.ml[386,14406+41])
                                                  Texp_ident "prec/1096"
                                              "pr_branch_production_level"
                                                expression (src/newRuleSyntax.ml[387,14449+37]..src/newRuleSyntax.ml[387,14449+42])
                                                  Texp_ident "level/1089"
                                            ]
                                          representation =
                                            Record_regular
                                          extended_expression =
                                            None
                                <case>
                                  pattern (src/newRuleSyntax.ml[390,14502+4]..src/newRuleSyntax.ml[390,14502+35])
                                    Tpat_value
                                    pattern (src/newRuleSyntax.ml[390,14502+4]..src/newRuleSyntax.ml[390,14502+35])
                                      Tpat_construct "EAction"
                                      [
                                        pattern (src/newRuleSyntax.ml[390,14502+13]..src/newRuleSyntax.ml[390,14502+28])
                                          Tpat_construct "XAPointFree"
                                          [
                                            pattern (src/newRuleSyntax.ml[390,14502+25]..src/newRuleSyntax.ml[390,14502+28])
                                              Tpat_var "oid/1097"
                                          ]
                                          None
                                        pattern (src/newRuleSyntax.ml[390,14502+30]..src/newRuleSyntax.ml[390,14502+34])
                                          Tpat_var "prec/1098"
                                      ]
                                      None
                                  expression (src/newRuleSyntax.ml[405,15305+6]..src/newRuleSyntax.ml[428,16282+36])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/newRuleSyntax.ml[405,15305+10]..src/newRuleSyntax.ml[405,15305+14])
                                          Tpat_var "evar/1221"
                                        expression (src/newRuleSyntax.ml[405,15305+15]..src/newRuleSyntax.ml[405,15305+28]) ghost
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/newRuleSyntax.ml[405,15305+15]..src/newRuleSyntax.ml[405,15305+16])
                                                Tpat_var "x/1223"
                                              expression (src/newRuleSyntax.ml[405,15305+19]..src/newRuleSyntax.ml[405,15305+28])
                                                Texp_construct "IL.EVar"
                                                [
                                                  expression (src/newRuleSyntax.ml[405,15305+27]..src/newRuleSyntax.ml[405,15305+28])
                                                    Texp_ident "x/1223"
                                                ]
                                          ]
                                    ]
                                    expression (src/newRuleSyntax.ml[406,15337+6]..src/newRuleSyntax.ml[428,16282+36])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/newRuleSyntax.ml[406,15337+10]..src/newRuleSyntax.ml[406,15337+15])
                                            Tpat_var "evars/1224"
                                          expression (src/newRuleSyntax.ml[406,15337+16]..src/newRuleSyntax.ml[406,15337+37]) ghost
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (src/newRuleSyntax.ml[406,15337+16]..src/newRuleSyntax.ml[406,15337+18])
                                                  Tpat_var "xs/1226"
                                                expression (src/newRuleSyntax.ml[406,15337+21]..src/newRuleSyntax.ml[406,15337+37])
                                                  Texp_apply
                                                  expression (src/newRuleSyntax.ml[406,15337+21]..src/newRuleSyntax.ml[406,15337+29])
                                                    Texp_ident "Stdlib!.List.map"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/newRuleSyntax.ml[406,15337+30]..src/newRuleSyntax.ml[406,15337+34])
                                                        Texp_ident "evar/1221"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/newRuleSyntax.ml[406,15337+35]..src/newRuleSyntax.ml[406,15337+37])
                                                        Texp_ident "xs/1226"
                                                  ]
                                            ]
                                      ]
                                      expression (src/newRuleSyntax.ml[407,15378+6]..src/newRuleSyntax.ml[428,16282+36])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/newRuleSyntax.ml[407,15378+10]..src/newRuleSyntax.ml[407,15378+15])
                                              Tpat_var "tuple/1227"
                                            expression (src/newRuleSyntax.ml[407,15378+18]..src/newRuleSyntax.ml[407,15378+57])
                                              Texp_apply
                                              expression (src/newRuleSyntax.ml[407,15378+18]..src/newRuleSyntax.ml[407,15378+33])
                                                Texp_ident "Dune__exe!.CodeBits.etuple"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/newRuleSyntax.ml[407,15378+34]..src/newRuleSyntax.ml[407,15378+57])
                                                    Texp_apply
                                                    expression (src/newRuleSyntax.ml[407,15378+35]..src/newRuleSyntax.ml[407,15378+40])
                                                      Texp_ident "evars/1224"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/newRuleSyntax.ml[407,15378+41]..src/newRuleSyntax.ml[407,15378+56])
                                                          Texp_apply
                                                          expression (src/newRuleSyntax.ml[407,15378+42]..src/newRuleSyntax.ml[407,15378+47])
                                                            Texp_ident "tuple/1040"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/newRuleSyntax.ml[407,15378+48]..src/newRuleSyntax.ml[407,15378+55])
                                                                Texp_ident "context/1087"
                                                          ]
                                                    ]
                                              ]
                                        ]
                                        expression (src/newRuleSyntax.ml[412,15732+6]..src/newRuleSyntax.ml[428,16282+36])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/newRuleSyntax.ml[412,15732+10]..src/newRuleSyntax.ml[412,15732+11])
                                                Tpat_var "e/1275"
                                              expression (src/newRuleSyntax.ml[413,15746+8]..src/newRuleSyntax.ml[417,15854+17])
                                                Texp_match
                                                expression (src/newRuleSyntax.ml[413,15746+14]..src/newRuleSyntax.ml[413,15746+17])
                                                  Texp_ident "oid/1097"
                                                [
                                                  <case>
                                                    pattern (src/newRuleSyntax.ml[414,15769+10]..src/newRuleSyntax.ml[414,15769+17])
                                                      Tpat_value
                                                      pattern (src/newRuleSyntax.ml[414,15769+10]..src/newRuleSyntax.ml[414,15769+17])
                                                        Tpat_construct "Some"
                                                        [
                                                          pattern (src/newRuleSyntax.ml[414,15769+15]..src/newRuleSyntax.ml[414,15769+17])
                                                            Tpat_var "id/1276"
                                                        ]
                                                        None
                                                    expression (src/newRuleSyntax.ml[415,15790+12]..src/newRuleSyntax.ml[415,15790+45])
                                                      Texp_construct "IL.EApp"
                                                      [
                                                        expression (src/newRuleSyntax.ml[415,15790+21]..src/newRuleSyntax.ml[415,15790+35])
                                                          Texp_construct "IL.ETextual"
                                                          [
                                                            expression (src/newRuleSyntax.ml[415,15790+33]..src/newRuleSyntax.ml[415,15790+35])
                                                              Texp_ident "id/1276"
                                                          ]
                                                        expression (src/newRuleSyntax.ml[415,15790+37]..src/newRuleSyntax.ml[415,15790+44])
                                                          Texp_construct "::"
                                                          [
                                                            expression (src/newRuleSyntax.ml[415,15790+38]..src/newRuleSyntax.ml[415,15790+43])
                                                              Texp_ident "tuple/1227"
                                                            expression (src/newRuleSyntax.ml[415,15790+43]..src/newRuleSyntax.ml[415,15790+44]) ghost
                                                              Texp_construct "[]"
                                                              []
                                                          ]
                                                      ]
                                                  <case>
                                                    pattern (src/newRuleSyntax.ml[416,15836+10]..src/newRuleSyntax.ml[416,15836+14])
                                                      Tpat_value
                                                      pattern (src/newRuleSyntax.ml[416,15836+10]..src/newRuleSyntax.ml[416,15836+14])
                                                        Tpat_construct "None"
                                                        []
                                                        None
                                                    expression (src/newRuleSyntax.ml[417,15854+12]..src/newRuleSyntax.ml[417,15854+17])
                                                      Texp_ident "tuple/1227"
                                                ]
                                          ]
                                          expression (src/newRuleSyntax.ml[420,15930+6]..src/newRuleSyntax.ml[428,16282+36])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/newRuleSyntax.ml[420,15930+10]..src/newRuleSyntax.ml[420,15930+16])
                                                  Tpat_var "action/1277"
                                                expression (src/newRuleSyntax.ml[420,15930+19]..src/newRuleSyntax.ml[420,15930+40])
                                                  Texp_apply
                                                  expression (src/newRuleSyntax.ml[420,15930+19]..src/newRuleSyntax.ml[420,15930+38])
                                                    Texp_ident "Dune__exe!.Action.from_il_expr"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/newRuleSyntax.ml[420,15930+39]..src/newRuleSyntax.ml[420,15930+40])
                                                        Texp_ident "e/1275"
                                                  ]
                                            ]
                                            expression (src/newRuleSyntax.ml[421,15974+6]..src/newRuleSyntax.ml[428,16282+36])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/newRuleSyntax.ml[421,15974+10]..src/newRuleSyntax.ml[421,15974+20])
                                                    Tpat_var "raw_action/1278"
                                                  expression (src/newRuleSyntax.ml[421,15974+21]..src/newRuleSyntax.ml[421,15974+33]) ghost
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (src/newRuleSyntax.ml[421,15974+21]..src/newRuleSyntax.ml[421,15974+22])
                                                          Tpat_any
                                                        expression (src/newRuleSyntax.ml[421,15974+23]..src/newRuleSyntax.ml[421,15974+33]) ghost
                                                          Texp_function
                                                          Nolabel
                                                          [
                                                            <case>
                                                              pattern (src/newRuleSyntax.ml[421,15974+23]..src/newRuleSyntax.ml[421,15974+24])
                                                                Tpat_any
                                                              expression (src/newRuleSyntax.ml[421,15974+27]..src/newRuleSyntax.ml[421,15974+33])
                                                                Texp_ident "action/1277"
                                                          ]
                                                    ]
                                              ]
                                              expression (src/newRuleSyntax.ml[422,16011+6]..src/newRuleSyntax.ml[428,16282+36])
                                                Texp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (src/newRuleSyntax.ml[422,16011+10]..src/newRuleSyntax.ml[422,16011+11])
                                                      Tpat_var "e/1282"
                                                    expression (src/newRuleSyntax.ml[422,16011+14]..src/newRuleSyntax.ml[422,16011+54])
                                                      Texp_construct "EAction"
                                                      [
                                                        expression (src/newRuleSyntax.ml[422,16011+23]..src/newRuleSyntax.ml[422,16011+47])
                                                          Texp_construct "XATraditional"
                                                          [
                                                            expression (src/newRuleSyntax.ml[422,16011+37]..src/newRuleSyntax.ml[422,16011+47])
                                                              Texp_ident "raw_action/1278"
                                                          ]
                                                        expression (src/newRuleSyntax.ml[422,16011+49]..src/newRuleSyntax.ml[422,16011+53])
                                                          Texp_ident "prec/1098"
                                                      ]
                                                ]
                                                expression (src/newRuleSyntax.ml[423,16069+6]..src/newRuleSyntax.ml[428,16282+36])
                                                  Texp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (src/newRuleSyntax.ml[423,16069+10]..src/newRuleSyntax.ml[423,16069+11])
                                                        Tpat_var "e/1283"
                                                      expression (src/newRuleSyntax.ml[423,16069+14]..src/newRuleSyntax.ml[423,16069+38])
                                                        Texp_apply
                                                        expression (src/newRuleSyntax.ml[423,16069+14]..src/newRuleSyntax.ml[423,16069+32])
                                                          Texp_ident "Dune__exe!.Positions.with_pos"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/newRuleSyntax.ml[423,16069+33]..src/newRuleSyntax.ml[423,16069+36])
                                                              Texp_ident "pos/1091"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/newRuleSyntax.ml[423,16069+37]..src/newRuleSyntax.ml[423,16069+38])
                                                              Texp_ident "e/1282"
                                                        ]
                                                  ]
                                                  expression (src/newRuleSyntax.ml[426,16208+6]..src/newRuleSyntax.ml[428,16282+36])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (src/newRuleSyntax.ml[426,16208+10]..src/newRuleSyntax.ml[426,16208+17])
                                                          Tpat_var "context/1284"
                                                        expression (src/newRuleSyntax.ml[426,16208+20]..src/newRuleSyntax.ml[426,16208+52])
                                                          Texp_record
                                                            fields =
                                                              [
                                                                <kept>                                                                <kept>                                                                <kept>                                                                <kept>                                                                <kept>                                                                "tilde_used"
                                                                  expression (src/newRuleSyntax.ml[426,16208+48]..src/newRuleSyntax.ml[426,16208+50])
                                                                    Texp_construct "[]"
                                                                    []
                                                              ]
                                                            representation =
                                                              Record_regular
                                                            extended_expression =
                                                              Some
                                                                expression (src/newRuleSyntax.ml[426,16208+22]..src/newRuleSyntax.ml[426,16208+29])
                                                                  Texp_ident "context/1087"
                                                    ]
                                                    expression (src/newRuleSyntax.ml[428,16282+6]..src/newRuleSyntax.ml[428,16282+36])
                                                      Texp_apply
                                                      expression (src/newRuleSyntax.ml[428,16282+6]..src/newRuleSyntax.ml[428,16282+20])
                                                        Texp_ident "production_aux/1051"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/newRuleSyntax.ml[428,16282+21]..src/newRuleSyntax.ml[428,16282+28])
                                                            Texp_ident "context/1284"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/newRuleSyntax.ml[428,16282+29]..src/newRuleSyntax.ml[428,16282+30])
                                                            Texp_ident "e/1283"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/newRuleSyntax.ml[428,16282+31]..src/newRuleSyntax.ml[428,16282+36])
                                                            Texp_ident "level/1089"
                                                      ]
                                <case>
                                  pattern (src/newRuleSyntax.ml[430,16320+4]..src/newRuleSyntax.ml[430,16320+16])
                                    Tpat_value
                                    pattern (src/newRuleSyntax.ml[430,16320+4]..src/newRuleSyntax.ml[430,16320+16])
                                      Tpat_construct "ESingleton"
                                      [
                                        pattern (src/newRuleSyntax.ml[430,16320+15]..src/newRuleSyntax.ml[430,16320+16])
                                          Tpat_var "e/1099"
                                      ]
                                      None
                                  expression (src/newRuleSyntax.ml[431,16340+6]..src/newRuleSyntax.ml[443,17064+36])
                                    Texp_sequence
                                    expression (src/newRuleSyntax.ml[431,16340+6]..src/newRuleSyntax.ml[431,16340+43])
                                      Texp_apply
                                      expression (src/newRuleSyntax.ml[431,16340+6]..src/newRuleSyntax.ml[431,16340+24])
                                        Texp_ident "tilde_used_warning/889"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/newRuleSyntax.ml[431,16340+25]..src/newRuleSyntax.ml[431,16340+43])
                                            Texp_field
                                            expression (src/newRuleSyntax.ml[431,16340+25]..src/newRuleSyntax.ml[431,16340+32])
                                              Texp_ident "context/1087"
                                            "tilde_used"
                                      ]
                                    expression (src/newRuleSyntax.ml[440,16911+6]..src/newRuleSyntax.ml[443,17064+36])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/newRuleSyntax.ml[440,16911+10]..src/newRuleSyntax.ml[440,16911+11])
                                            Tpat_var "x/1285"
                                          expression (src/newRuleSyntax.ml[440,16911+14]..src/newRuleSyntax.ml[440,16911+28])
                                            Texp_apply
                                            expression (src/newRuleSyntax.ml[440,16911+14]..src/newRuleSyntax.ml[440,16911+20])
                                              Texp_ident "semvar/1043"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/newRuleSyntax.ml[440,16911+21]..src/newRuleSyntax.ml[440,16911+28])
                                                  Texp_ident "context/1087"
                                            ]
                                      ]
                                      expression (src/newRuleSyntax.ml[441,16943+6]..src/newRuleSyntax.ml[443,17064+36])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/newRuleSyntax.ml[441,16943+10]..src/newRuleSyntax.ml[441,16943+11])
                                              Tpat_var "e/1286"
                                            expression (src/newRuleSyntax.ml[441,16943+14]..src/newRuleSyntax.ml[441,16943+75])
                                              Texp_construct "ECons"
                                              [
                                                expression (src/newRuleSyntax.ml[441,16943+21]..src/newRuleSyntax.ml[441,16943+57])
                                                  Texp_construct "SemPatVar"
                                                  [
                                                    expression (src/newRuleSyntax.ml[441,16943+31]..src/newRuleSyntax.ml[441,16943+57])
                                                      Texp_apply
                                                      expression (src/newRuleSyntax.ml[441,16943+32]..src/newRuleSyntax.ml[441,16943+50])
                                                        Texp_ident "Dune__exe!.Positions.with_pos"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/newRuleSyntax.ml[441,16943+51]..src/newRuleSyntax.ml[441,16943+54])
                                                            Texp_ident "pos/1091"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/newRuleSyntax.ml[441,16943+55]..src/newRuleSyntax.ml[441,16943+56])
                                                            Texp_ident "x/1285"
                                                      ]
                                                  ]
                                                expression (src/newRuleSyntax.ml[441,16943+59]..src/newRuleSyntax.ml[441,16943+60])
                                                  Texp_ident "e/1099"
                                                expression (src/newRuleSyntax.ml[441,16943+62]..src/newRuleSyntax.ml[441,16943+74])
                                                  Texp_apply
                                                  expression (src/newRuleSyntax.ml[441,16943+62]..src/newRuleSyntax.ml[441,16943+68])
                                                    Texp_ident "return/437"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/newRuleSyntax.ml[441,16943+69]..src/newRuleSyntax.ml[441,16943+72])
                                                        Texp_ident "pos/1091"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/newRuleSyntax.ml[441,16943+73]..src/newRuleSyntax.ml[441,16943+74])
                                                        Texp_ident "x/1285"
                                                  ]
                                              ]
                                        ]
                                        expression (src/newRuleSyntax.ml[442,17022+6]..src/newRuleSyntax.ml[443,17064+36])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/newRuleSyntax.ml[442,17022+10]..src/newRuleSyntax.ml[442,17022+11])
                                                Tpat_var "e/1287"
                                              expression (src/newRuleSyntax.ml[442,17022+14]..src/newRuleSyntax.ml[442,17022+38])
                                                Texp_apply
                                                expression (src/newRuleSyntax.ml[442,17022+14]..src/newRuleSyntax.ml[442,17022+32])
                                                  Texp_ident "Dune__exe!.Positions.with_pos"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/newRuleSyntax.ml[442,17022+33]..src/newRuleSyntax.ml[442,17022+36])
                                                      Texp_ident "pos/1091"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/newRuleSyntax.ml[442,17022+37]..src/newRuleSyntax.ml[442,17022+38])
                                                      Texp_ident "e/1286"
                                                ]
                                          ]
                                          expression (src/newRuleSyntax.ml[443,17064+6]..src/newRuleSyntax.ml[443,17064+36])
                                            Texp_apply
                                            expression (src/newRuleSyntax.ml[443,17064+6]..src/newRuleSyntax.ml[443,17064+20])
                                              Texp_ident "production_aux/1051"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/newRuleSyntax.ml[443,17064+21]..src/newRuleSyntax.ml[443,17064+28])
                                                  Texp_ident "context/1087"
                                              <arg>
                                                Nolabel
                                                expression (src/newRuleSyntax.ml[443,17064+29]..src/newRuleSyntax.ml[443,17064+30])
                                                  Texp_ident "e/1287"
                                              <arg>
                                                Nolabel
                                                expression (src/newRuleSyntax.ml[443,17064+31]..src/newRuleSyntax.ml[443,17064+36])
                                                  Texp_ident "level/1089"
                                            ]
                              ]
                      ]
                ]
          ]
      <def>
        pattern (src/newRuleSyntax.ml[445,17102+4]..src/newRuleSyntax.ml[445,17102+14])
          Tpat_var "production/1052"
        expression (src/newRuleSyntax.ml[445,17102+15]..src/newRuleSyntax.ml[449,17233+36]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/newRuleSyntax.ml[445,17102+16]..src/newRuleSyntax.ml[445,17102+33])
                extra
                  Tpat_extra_constraint
                  core_type (src/newRuleSyntax.ml[445,17102+36]..src/newRuleSyntax.ml[445,17102+42])
                    Ttyp_constr "Dune__exe!.Syntax.branch"
                    []
                Tpat_construct "Branch"
                [
                  pattern (src/newRuleSyntax.ml[445,17102+24]..src/newRuleSyntax.ml[445,17102+25])
                    Tpat_var "e/1288"
                  pattern (src/newRuleSyntax.ml[445,17102+27]..src/newRuleSyntax.ml[445,17102+32])
                    Tpat_var "level/1289"
                ]
                None
              expression (src/newRuleSyntax.ml[446,17148+2]..src/newRuleSyntax.ml[449,17233+36])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/newRuleSyntax.ml[446,17148+6]..src/newRuleSyntax.ml[446,17148+7])
                      Tpat_var "e/1290"
                    expression (src/newRuleSyntax.ml[446,17148+10]..src/newRuleSyntax.ml[446,17148+24])
                      Texp_apply
                      expression (src/newRuleSyntax.ml[446,17148+10]..src/newRuleSyntax.ml[446,17148+22])
                        Texp_ident "resolve_puns/641"
                      [
                        <arg>
                          Nolabel
                          expression (src/newRuleSyntax.ml[446,17148+23]..src/newRuleSyntax.ml[446,17148+24])
                            Texp_ident "e/1288"
                      ]
                ]
                expression (src/newRuleSyntax.ml[447,17176+2]..src/newRuleSyntax.ml[449,17233+36])
                  Texp_sequence
                  expression (src/newRuleSyntax.ml[447,17176+2]..src/newRuleSyntax.ml[447,17176+19])
                    Texp_apply
                    expression (src/newRuleSyntax.ml[447,17176+2]..src/newRuleSyntax.ml[447,17176+17])
                      Texp_ident "check_linearity/883"
                    [
                      <arg>
                        Nolabel
                        expression (src/newRuleSyntax.ml[447,17176+18]..src/newRuleSyntax.ml[447,17176+19])
                          Texp_ident "e/1290"
                    ]
                  expression (src/newRuleSyntax.ml[448,17197+2]..src/newRuleSyntax.ml[449,17233+36])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/newRuleSyntax.ml[448,17197+6]..src/newRuleSyntax.ml[448,17197+9])
                          Tpat_var "pos/1291"
                        expression (src/newRuleSyntax.ml[448,17197+12]..src/newRuleSyntax.ml[448,17197+32])
                          Texp_apply
                          expression (src/newRuleSyntax.ml[448,17197+12]..src/newRuleSyntax.ml[448,17197+30])
                            Texp_ident "Dune__exe!.Positions.position"
                          [
                            <arg>
                              Nolabel
                              expression (src/newRuleSyntax.ml[448,17197+31]..src/newRuleSyntax.ml[448,17197+32])
                                Texp_ident "e/1290"
                          ]
                    ]
                    expression (src/newRuleSyntax.ml[449,17233+2]..src/newRuleSyntax.ml[449,17233+36])
                      Texp_apply
                      expression (src/newRuleSyntax.ml[449,17233+2]..src/newRuleSyntax.ml[449,17233+16])
                        Texp_ident "production_aux/1051"
                      [
                        <arg>
                          Nolabel
                          expression (src/newRuleSyntax.ml[449,17233+17]..src/newRuleSyntax.ml[449,17233+28])
                            Texp_apply
                            expression (src/newRuleSyntax.ml[449,17233+18]..src/newRuleSyntax.ml[449,17233+23])
                              Texp_ident "empty/978"
                            [
                              <arg>
                                Nolabel
                                expression (src/newRuleSyntax.ml[449,17233+24]..src/newRuleSyntax.ml[449,17233+27])
                                  Texp_ident "pos/1291"
                            ]
                        <arg>
                          Nolabel
                          expression (src/newRuleSyntax.ml[449,17233+29]..src/newRuleSyntax.ml[449,17233+30])
                            Texp_ident "e/1290"
                        <arg>
                          Nolabel
                          expression (src/newRuleSyntax.ml[449,17233+31]..src/newRuleSyntax.ml[449,17233+36])
                            Texp_ident "level/1289"
                      ]
          ]
      <def>
        pattern (src/newRuleSyntax.ml[451,17271+4]..src/newRuleSyntax.ml[451,17271+15])
          Tpat_var "productions/1053"
        expression (src/newRuleSyntax.ml[451,17271+16]..src/newRuleSyntax.ml[454,17389+34]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/newRuleSyntax.ml[451,17271+17]..src/newRuleSyntax.ml[451,17271+18])
                extra
                  Tpat_extra_constraint
                  core_type (src/newRuleSyntax.ml[451,17271+21]..src/newRuleSyntax.ml[451,17271+31])
                    Ttyp_constr "Dune__exe!.Syntax.expression"
                    []
                Tpat_alias "e/1293"
                pattern (src/newRuleSyntax.ml[451,17271+17]..src/newRuleSyntax.ml[451,17271+18])
                  Tpat_any
              expression (src/newRuleSyntax.ml[452,17334+2]..src/newRuleSyntax.ml[454,17389+34])
                extra
                  Texp_constraint
                  core_type (src/newRuleSyntax.ml[451,17271+35]..src/newRuleSyntax.ml[451,17271+60])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/newRuleSyntax.ml[451,17271+35]..src/newRuleSyntax.ml[451,17271+55])
                        Ttyp_constr "Dune__exe!.Syntax.parameterized_branch"
                        []
                    ]
                Texp_match
                expression (src/newRuleSyntax.ml[452,17334+8]..src/newRuleSyntax.ml[452,17334+25])
                  Texp_apply
                  expression (src/newRuleSyntax.ml[452,17334+8]..src/newRuleSyntax.ml[452,17334+23])
                    Texp_ident "Dune__exe!.Positions.value"
                  [
                    <arg>
                      Nolabel
                      expression (src/newRuleSyntax.ml[452,17334+24]..src/newRuleSyntax.ml[452,17334+25])
                        Texp_ident "e/1293"
                  ]
                [
                  <case>
                    pattern (src/newRuleSyntax.ml[453,17365+4]..src/newRuleSyntax.ml[453,17365+20])
                      Tpat_value
                      pattern (src/newRuleSyntax.ml[453,17365+4]..src/newRuleSyntax.ml[453,17365+20])
                        Tpat_construct "EChoice"
                        [
                          pattern (src/newRuleSyntax.ml[453,17365+12]..src/newRuleSyntax.ml[453,17365+20])
                            Tpat_var "branches/1294"
                        ]
                        None
                    expression (src/newRuleSyntax.ml[454,17389+6]..src/newRuleSyntax.ml[454,17389+34])
                      Texp_apply
                      expression (src/newRuleSyntax.ml[454,17389+6]..src/newRuleSyntax.ml[454,17389+14])
                        Texp_ident "Stdlib!.List.map"
                      [
                        <arg>
                          Nolabel
                          expression (src/newRuleSyntax.ml[454,17389+15]..src/newRuleSyntax.ml[454,17389+25])
                            Texp_ident "production/1052"
                        <arg>
                          Nolabel
                          expression (src/newRuleSyntax.ml[454,17389+26]..src/newRuleSyntax.ml[454,17389+34])
                            Texp_ident "branches/1294"
                      ]
                ]
          ]
    ]
  structure_item (src/newRuleSyntax.ml[460,17552+0]..src/newRuleSyntax.ml[469,17946+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/newRuleSyntax.ml[460,17552+4]..src/newRuleSyntax.ml[460,17552+8])
          Tpat_var "rule/1295"
        expression (src/newRuleSyntax.ml[460,17552+9]..src/newRuleSyntax.ml[469,17946+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/newRuleSyntax.ml[460,17552+10]..src/newRuleSyntax.ml[460,17552+14])
                extra
                  Tpat_extra_constraint
                  core_type (src/newRuleSyntax.ml[460,17552+17]..src/newRuleSyntax.ml[460,17552+21])
                    Ttyp_constr "Dune__exe!.Syntax.rule"
                    []
                Tpat_alias "rule/1297"
                pattern (src/newRuleSyntax.ml[460,17552+10]..src/newRuleSyntax.ml[460,17552+14])
                  Tpat_any
              expression (src/newRuleSyntax.ml[461,17598+2]..src/newRuleSyntax.ml[469,17946+3])
                extra
                  Texp_constraint
                  core_type (src/newRuleSyntax.ml[460,17552+25]..src/newRuleSyntax.ml[460,17552+43])
                    Ttyp_constr "Dune__exe!.Syntax.parameterized_rule"
                    []
                Texp_record
                  fields =
                    [
                      "pr_public_flag"
                        expression (src/newRuleSyntax.ml[462,17602+21]..src/newRuleSyntax.ml[462,17602+37])
                          Texp_field
                          expression (src/newRuleSyntax.ml[462,17602+21]..src/newRuleSyntax.ml[462,17602+25])
                            Texp_ident "rule/1297"
                          "rule_public"
                      "pr_inline_flag"
                        expression (src/newRuleSyntax.ml[463,17641+21]..src/newRuleSyntax.ml[463,17641+37])
                          Texp_field
                          expression (src/newRuleSyntax.ml[463,17641+21]..src/newRuleSyntax.ml[463,17641+25])
                            Texp_ident "rule/1297"
                          "rule_inline"
                      "pr_nt"
                        expression (src/newRuleSyntax.ml[464,17680+21]..src/newRuleSyntax.ml[464,17680+50])
                          Texp_apply
                          expression (src/newRuleSyntax.ml[464,17680+21]..src/newRuleSyntax.ml[464,17680+36])
                            Texp_ident "Dune__exe!.Positions.value"
                          [
                            <arg>
                              Nolabel
                              expression (src/newRuleSyntax.ml[464,17680+37]..src/newRuleSyntax.ml[464,17680+50])
                                Texp_field
                                expression (src/newRuleSyntax.ml[464,17680+37]..src/newRuleSyntax.ml[464,17680+41])
                                  Texp_ident "rule/1297"
                                "rule_lhs"
                          ]
                      "pr_positions"
                        expression (src/newRuleSyntax.ml[465,17732+21]..src/newRuleSyntax.ml[465,17732+57])
                          Texp_construct "::"
                          [
                            expression (src/newRuleSyntax.ml[465,17732+23]..src/newRuleSyntax.ml[465,17732+55])
                              Texp_apply
                              expression (src/newRuleSyntax.ml[465,17732+23]..src/newRuleSyntax.ml[465,17732+41])
                                Texp_ident "Dune__exe!.Positions.position"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/newRuleSyntax.ml[465,17732+42]..src/newRuleSyntax.ml[465,17732+55])
                                    Texp_field
                                    expression (src/newRuleSyntax.ml[465,17732+42]..src/newRuleSyntax.ml[465,17732+46])
                                      Texp_ident "rule/1297"
                                    "rule_lhs"
                              ]
                            expression (src/newRuleSyntax.ml[465,17732+56]..src/newRuleSyntax.ml[465,17732+57]) ghost
                              Texp_construct "[]"
                              []
                          ]
                      "pr_attributes"
                        expression (src/newRuleSyntax.ml[466,17791+21]..src/newRuleSyntax.ml[466,17791+41])
                          Texp_field
                          expression (src/newRuleSyntax.ml[466,17791+21]..src/newRuleSyntax.ml[466,17791+25])
                            Texp_ident "rule/1297"
                          "rule_attributes"
                      "pr_parameters"
                        expression (src/newRuleSyntax.ml[467,17834+21]..src/newRuleSyntax.ml[467,17834+63])
                          Texp_apply
                          expression (src/newRuleSyntax.ml[467,17834+21]..src/newRuleSyntax.ml[467,17834+29])
                            Texp_ident "Stdlib!.List.map"
                          [
                            <arg>
                              Nolabel
                              expression (src/newRuleSyntax.ml[467,17834+30]..src/newRuleSyntax.ml[467,17834+45])
                                Texp_ident "Dune__exe!.Positions.value"
                            <arg>
                              Nolabel
                              expression (src/newRuleSyntax.ml[467,17834+46]..src/newRuleSyntax.ml[467,17834+63])
                                Texp_field
                                expression (src/newRuleSyntax.ml[467,17834+46]..src/newRuleSyntax.ml[467,17834+50])
                                  Texp_ident "rule/1297"
                                "rule_formals"
                          ]
                      "pr_branches"
                        expression (src/newRuleSyntax.ml[468,17899+21]..src/newRuleSyntax.ml[468,17899+46])
                          Texp_apply
                          expression (src/newRuleSyntax.ml[468,17899+21]..src/newRuleSyntax.ml[468,17899+32])
                            Texp_ident "productions/1053"
                          [
                            <arg>
                              Nolabel
                              expression (src/newRuleSyntax.ml[468,17899+33]..src/newRuleSyntax.ml[468,17899+46])
                                Texp_field
                                expression (src/newRuleSyntax.ml[468,17899+33]..src/newRuleSyntax.ml[468,17899+37])
                                  Texp_ident "rule/1297"
                                "rule_rhs"
                          ]
                    ]
                  representation =
                    Record_regular
                  extended_expression =
                    None
          ]
    ]
]

{<Dune__exe__NewRuleSyntax>
 "rule"[value] -> <Dune__exe__NewRuleSyntax.149>;
 }

(seq
  (let
    (>>/432 = (function f/434 g/435 x/436 (apply g/435 (apply f/434 x/436))))
    (setfield_ptr(root-init) 1 (global Dune__exe__NewRuleSyntax!) >>/432))
  (let
    (return/437 =
       (function pos/439 x/440
         (let
           (action/441 =
              (apply (field_imm 1 (global Dune__exe__Action!))
                (makeblock 0 x/440))
            raw_action/532 = (function param/535 param/534 action/441))
           (apply (field_imm 3 (global Dune__exe__Positions!)) pos/439
             (makeblock 2 (makeblock 0 raw_action/532) 0)))))
    (setfield_ptr(root-init) 2 (global Dune__exe__NewRuleSyntax!) return/437))
  (letrec
    (resolve_puns/641
       (function e/642
         (apply (field_imm 7 (global Dune__exe__Positions!))
           (function e/643
             (catch
               (switch* e/643
                case tag 0:
                 (let (p1/648 =a (field_imm 0 e/643))
                   (catch
                     (switch p1/648
                      case tag 1:
                       (let
                         (e1/646 =a (field_imm 1 e/643)
                          *match*/1786 =a (field_imm 1 e1/646))
                         (if (isint *match*/1786)
                           (let
                             (e2/647 =a (field_imm 2 e/643)
                              *match*/1787 =a (field_imm 2 e1/646)
                              x1/645 =a (field_imm 0 e1/646)
                              pos/644 =a (field_imm 0 p1/648))
                             (if
                               (apply
                                 (field_imm 8 (global Dune__exe__ParserAux!))
                                 x1/645)
                               (let
                                 (x1/664 =
                                    (apply
                                      (field_imm 3
                                        (global Dune__exe__Positions!))
                                      pos/644
                                      (apply
                                        (field_imm 0
                                          (global Dune__exe__Positions!))
                                        x1/645)))
                                 (makeblock 0 (makeblock 0 x1/664) e1/646
                                   (apply resolve_puns/641 e2/647)))
                               (exit 2)))
                           (exit 2)))
                      default: (exit 2))
                    with (2)
                     (let
                       (e2/650 =a (field_imm 2 e/643)
                        e1/649 =a (field_imm 1 e/643))
                       (makeblock 0 p1/648 e1/649
                         (apply resolve_puns/641 e2/650)))))
                case tag 1: (exit 1)
                case tag 2: (exit 1))
              with (1) e/643))
           e/642)))
    (setfield_ptr(root-init) 3 (global Dune__exe__NewRuleSyntax!)
      resolve_puns/641))
  (let
    (check_linearity/665 =
       (function ps/667 : int
         (letrec
           (build/668
              (function m/717 p/718
                (catch
                  (switch* p/718
                   case int 0: (exit 6)
                   case tag 0:
                    (let
                      (x/719 =a (field_imm 0 p/718)
                       *match*/1794 =
                         (apply (field_imm 2 (global Dune__exe__Positions!))
                           x/719)
                       pos/722 =a (field_imm 1 *match*/1794)
                       x/721 =a (field_imm 0 *match*/1794))
                      (apply (field_imm 44 (global Dune__exe__StringMap!))
                        x/721 pos/722 m/717))
                   case tag 1: (exit 6)
                   case tag 2:
                    (let (ps/720 =a (field_imm 0 p/718))
                      (apply (field_imm 25 (global Stdlib__List!)) build/668
                        m/717 ps/720)))
                 with (6) m/717)))
           (let
             (m/837 =
                (apply (field_imm 25 (global Stdlib__List!)) build/668
                  (field_imm 0 (global Dune__exe__StringMap!)) ps/667))
             (apply (field_imm 21 (global Dune__exe__StringMap!))
               (function x/838 positions/839 : int
                 (if
                   (>
                     (apply (field_imm 0 (global Stdlib__List!))
                       positions/839)
                     1)
                   (apply (field_imm 5 (global Dune__exe__Error!))
                     positions/839
                     [0:
                      [11:
                       "The variable "
                       [2: 0 [11: " is bound several times." 0]]]
                      "The variable %s is bound several times."]
                     x/838)
                   0))
               m/837)))))
    (setfield_ptr(root-init) 4 (global Dune__exe__NewRuleSyntax!)
      check_linearity/665))
  (letrec
    (patterns/878
       (function e/879
         (let
           (e/880 =
              (apply (field_imm 0 (global Dune__exe__Positions!)) e/879))
           (catch
             (switch* e/880
              case tag 0:
               (let
                 (e/882 =a (field_imm 2 e/880)
                  *match*/1796 =a (field_imm 1 e/880)
                  p/881 =a (field_imm 0 e/880))
                 (makeblock 0 p/881 (apply patterns/878 e/882)))
              case tag 1: (exit 7)
              case tag 2: (exit 7))
            with (7) 0))))
    (setfield_ptr(root-init) 5 (global Dune__exe__NewRuleSyntax!)
      patterns/878))
  (let
    (check_linearity/883 =
       (apply (field_imm 1 (global Dune__exe__NewRuleSyntax!))
         (field_imm 5 (global Dune__exe__NewRuleSyntax!))
         (field_imm 4 (global Dune__exe__NewRuleSyntax!))))
    (setfield_ptr(root-init) 6 (global Dune__exe__NewRuleSyntax!)
      check_linearity/883))
  (letrec
    (tilde_used/884
       (function positions/885 p/886
         (catch
           (switch* p/886
            case int 0: (exit 11)
            case tag 0: (exit 11)
            case tag 1:
             (let (pos/887 =a (field_imm 0 p/886))
               (makeblock 0 pos/887 positions/885))
            case tag 2:
             (let (ps/888 =a (field_imm 0 p/886))
               (apply (field_imm 25 (global Stdlib__List!)) tilde_used/884
                 positions/885 ps/888)))
          with (11) positions/885)))
    (setfield_ptr(root-init) 7 (global Dune__exe__NewRuleSyntax!)
      tilde_used/884))
  (let
    (tilde_used_warning/889 =
       (function positions/891 : int
         (let
           (n/892 =[int]
              (apply (field_imm 0 (global Stdlib__List!)) positions/891))
           (if (> n/892 0)
             (catch
               (if (== n/892 1)
                 (let
                   (wpatterns/1807 = "a wildcard pattern _"
                    tpatterns/1806 = "a ~ pattern"
                    variables_have/1805 = "variable has")
                   (exit 12 variables_have/1805 tpatterns/1806
                     wpatterns/1807))
                 (let
                   (wpatterns/1804 = "wildcard patterns _"
                    tpatterns/1803 = "~ patterns"
                    variables_have/1802 = "variables have")
                   (exit 12 variables_have/1802 tpatterns/1803
                     wpatterns/1804)))
              with (12 variables_have/893 tpatterns/894 wpatterns/895)
               (apply (field_imm 7 (global Dune__exe__Error!)) positions/891
                 [0:
                  [2:
                   0
                   [11:
                    " nameless "
                    [2:
                     0
                     [11:
                      " been introduced by "
                      [2:
                       0
                       [11:
                        ",\nyet this sequence does not end in a point-free semantic action <...>.\nPerhaps "
                        [2: 0 [11: " should be used instead." 0]]]]]]]]
                  "%s nameless %s been introduced by %s,\nyet this sequence does not end in a point-free semantic action <...>.\nPerhaps %s should be used instead."]
                 (apply (field_imm 31 (global Dune__exe__Misc!)) n/892)
                 variables_have/893 tpatterns/894 wpatterns/895))
             0))))
    (setfield_ptr(root-init) 8 (global Dune__exe__NewRuleSyntax!)
      tilde_used_warning/889))
  (let
    (pattern/932 =
       (function x1/934 p/935
         (let
           (c/936 = (makemutable 0 (int) 1)
            fresh/937 =
              (function param/952[int]
                (apply (field_imm 3 (global Stdlib__Printf!))
                  [0: [2: 0 [12: '_' [4: 0 0 0 0]]] "%s_%d"] x1/934
                  (apply (field_imm 22 (global Dune__exe__Misc!)) c/936))))
           (letrec
             (pattern/953
                (function p/954
                  (switch* p/954
                   case int 0: 0
                   case tag 0:
                    (let (x/955 =a (field_imm 0 p/954))
                      (makeblock 0
                        (apply (field_imm 0 (global Dune__exe__Positions!))
                          x/955)))
                   case tag 1:
                    (let (*match*/1808 =a (field_imm 0 p/954))
                      (makeblock 0 (apply fresh/937 0)))
                   case tag 2:
                    (let (ps/957 =a (field_imm 0 p/954))
                      (catch
                        (if (isint ps/957) 1
                          (let (*match*/1809 =a (field_imm 1 ps/957))
                            (if (isint *match*/1809)
                              (let (p/956 =a (field_imm 0 ps/957))
                                (apply pattern/953 p/956))
                              (exit 19))))
                       with (19)
                        (makeblock 3
                          (apply (field_imm 19 (global Stdlib__List!))
                            pattern/953 ps/957)))))))
             (apply pattern/953 p/935)))))
    (setfield_ptr(root-init) 9 (global Dune__exe__NewRuleSyntax!)
      pattern/932))
  (letrec
    (bv/958
       (function accu/959 p/960
         (catch
           (catch
             (switch p/960
              case int 0: (exit 21)
              case int 1: (exit 21)
              case tag 0:
               (let (x/961 =a (field_imm 0 p/960))
                 (makeblock 0 x/961 accu/959))
              case tag 3:
               (let (ps/962 =a (field_imm 0 p/960))
                 (apply (field_imm 25 (global Stdlib__List!)) bv/958 accu/959
                   ps/962))
              default: (exit 20))
            with (21) accu/959)
          with (20)
           (raise
             (makeblock 0 (global Assert_failure/28!)
               [0: "src/newRuleSyntax.ml" 192 6])))))
    (setfield_ptr(root-init) 10 (global Dune__exe__NewRuleSyntax!) bv/958))
  (let
    (attributes/963 =
       (function e/965
         (let
           (attrs/966 =a (field_imm 2 e/965)
            *match*/1811 =a (field_imm 1 e/965)
            *match*/1810 =a (field_imm 0 e/965))
           attrs/966)))
    (setfield_ptr(root-init) 11 (global Dune__exe__NewRuleSyntax!)
      attributes/963))
  (let
    (empty/978 =
       (function pos/980
         (makeblock 0 pos/980 0 0 (function a/981 a/981) 0 0)))
    (setfield_ptr(root-init) 12 (global Dune__exe__NewRuleSyntax!) empty/978))
  (let
    (user/982 =
       (function x/984
         (makeblock 0
           (apply (field_imm 0 (global Dune__exe__Positions!)) x/984))))
    (setfield_ptr(root-init) 13 (global Dune__exe__NewRuleSyntax!) user/982))
  (let (auto/985 = 0)
    (setfield_ptr(root-init) 14 (global Dune__exe__NewRuleSyntax!) auto/985))
  (let
    (producers/986 =
       (function context/988
         (apply (field_imm 9 (global Stdlib__List!))
           (field_imm 1 context/988))))
    (setfield_ptr(root-init) 15 (global Dune__exe__NewRuleSyntax!)
      producers/986))
  (let
    (uxs/989 =
       (function context/991
         (apply (field_imm 9 (global Stdlib__Array!))
           (apply (field_imm 9 (global Stdlib__List!))
             (field_imm 2 context/991)))))
    (setfield_ptr(root-init) 16 (global Dune__exe__NewRuleSyntax!) uxs/989))
  (let
    (tuple/1040 =
       (function context/1042
         (apply (field_imm 9 (global Stdlib__List!))
           (field_imm 4 context/1042))))
    (setfield_ptr(root-init) 17 (global Dune__exe__NewRuleSyntax!)
      tuple/1040))
  (let
    (semvar/1043 =
       (function context/1045
         (let
           (i/1046 =[int]
              (+
                (apply (field_imm 0 (global Stdlib__List!))
                  (field_imm 1 context/1045))
                1))
           (apply (field_imm 3 (global Stdlib__Printf!))
             [0: [12: '_' [4: 0 0 0 0]] "_%d"] i/1046))))
    (setfield_ptr(root-init) 18 (global Dune__exe__NewRuleSyntax!)
      semvar/1043))
  (letrec
    (parameter/1047
       (function e/1054
         (let
           (_attrs/1057 =a (field_imm 2 e/1054)
            args/1056 =a (field_imm 1 e/1054)
            sym/1055 =a (field_imm 0 e/1054))
           (apply (field_imm 0 (global Dune__exe__Parameters!)) sym/1055
             (apply (field_imm 19 (global Stdlib__List!))
               nested_parameter/1048 args/1056))))
      nested_parameter/1048
        (function e/1073
          (let
            (*match*/1814 =
               (apply (field_imm 0 (global Dune__exe__Positions!)) e/1073)
             *match*/1815 =a (field_imm 0 *match*/1814))
            (catch
              (if (isint *match*/1815) (exit 25)
                (let
                  (*match*/1816 =a (field_imm 0 *match*/1815)
                   *match*/1817 =a (field_imm 0 *match*/1816)
                   *match*/1818 =a (field_imm 0 *match*/1817))
                  (switch* *match*/1818
                   case tag 0: (exit 25)
                   case tag 1:
                    (let (*match*/1821 =a (field_imm 1 *match*/1815))
                      (if (isint *match*/1821)
                        (let
                          (*match*/1820 =a (field_imm 1 *match*/1816)
                           *match*/1819 =a (field_imm 1 *match*/1817)
                           e/1074 =a (field_imm 0 *match*/1818))
                          (apply parameter/1047 e/1074))
                        (exit 25)))
                   case tag 2: (exit 25))))
             with (25)
              (let
                (pos/1075 =
                   (apply (field_imm 1 (global Dune__exe__Positions!))
                     e/1073))
                (makeblock 2
                  (apply (field_imm 3 (global Dune__exe__Positions!))
                    pos/1075 (apply productions/1053 e/1073)))))))
      producer/1049
        (function x/1076 e1/1077
          (makeblock 0 x/1076 (apply parameter/1047 e1/1077)
            (apply (field_imm 11 (global Dune__exe__NewRuleSyntax!)) e1/1077)))
      extend/1050
        (function p/1078 e1/1079 context/1080
          (catch
            (switch p/1078
             case tag 0:
              (let (x1/1081 =a (field_imm 0 p/1078))
                (makeblock 0 (field_imm 0 context/1080)
                  (makeblock 0 (apply producer/1049 x1/1081 e1/1079)
                    (field_imm 1 context/1080))
                  (makeblock 0
                    (apply (field_imm 13 (global Dune__exe__NewRuleSyntax!))
                      x1/1081)
                    (field_imm 2 context/1080))
                  (field_imm 3 context/1080)
                  (makeblock 0
                    (apply (field_imm 0 (global Dune__exe__Positions!))
                      x1/1081)
                    (field_imm 4 context/1080))
                  (field_imm 5 context/1080)))
             default: (exit 29))
           with (29)
            (let
              (x1/1082 =
                 (apply (field_imm 18 (global Dune__exe__NewRuleSyntax!))
                   context/1080)
               tilde_used/1083 =
                 (apply (field_imm 7 (global Dune__exe__NewRuleSyntax!))
                   (field_imm 5 context/1080) p/1078)
               p/1084 =
                 (apply (field_imm 9 (global Dune__exe__NewRuleSyntax!))
                   x1/1082 p/1078)
               binding/1085 =
                 (apply (field_imm 3 (global Dune__exe__Action!)) p/1084
                   x1/1082)
               x1/1086 =
                 (apply (field_imm 6 (global Dune__exe__Positions!)) x1/1082))
              (makeblock 0 (field_imm 0 context/1080)
                (makeblock 0 (apply producer/1049 x1/1086 e1/1079)
                  (field_imm 1 context/1080))
                (makeblock 0
                  (field_imm 14 (global Dune__exe__NewRuleSyntax!))
                  (field_imm 2 context/1080))
                (apply (field_imm 1 (global Dune__exe__NewRuleSyntax!))
                  binding/1085 (field_imm 3 context/1080))
                (apply (field_imm 10 (global Dune__exe__NewRuleSyntax!))
                  (field_imm 4 context/1080) p/1084)
                tilde_used/1083))))
      production_aux/1051
        (function context/1087 e/1088 level/1089
          (let
            (*match*/1831 =
               (apply (field_imm 2 (global Dune__exe__Positions!)) e/1088)
             pos/1091 =a (field_imm 1 *match*/1831)
             e/1090 =a (field_imm 0 *match*/1831))
            (switch* e/1090
             case tag 0:
              (let
                (e2/1094 =a (field_imm 2 e/1090)
                 e1/1093 =a (field_imm 1 e/1090)
                 p/1092 =a (field_imm 0 e/1090))
                (apply production_aux/1051
                  (apply extend/1050 p/1092 e1/1093 context/1087) e2/1094
                  level/1089))
             case tag 1:
              (let (e/1099 =a (field_imm 0 e/1090))
                (seq
                  (apply (field_imm 8 (global Dune__exe__NewRuleSyntax!))
                    (field_imm 5 context/1087))
                  (let
                    (x/1285 =
                       (apply
                         (field_imm 18 (global Dune__exe__NewRuleSyntax!))
                         context/1087)
                     e/1286 =
                       (makeblock 0
                         (makeblock 0
                           (apply
                             (field_imm 3 (global Dune__exe__Positions!))
                             pos/1091 x/1285))
                         e/1099
                         (apply
                           (field_imm 2 (global Dune__exe__NewRuleSyntax!))
                           pos/1091 x/1285))
                     e/1287 =
                       (apply (field_imm 3 (global Dune__exe__Positions!))
                         pos/1091 e/1286))
                    (apply production_aux/1051 context/1087 e/1287
                      level/1089))))
             case tag 2:
              (let (*match*/1827 =a (field_imm 0 e/1090))
                (switch* *match*/1827
                 case tag 0:
                  (let
                    (prec/1096 =a (field_imm 1 e/1090)
                     raw_action/1095 =a (field_imm 0 *match*/1827))
                    (seq
                      (apply (field_imm 8 (global Dune__exe__NewRuleSyntax!))
                        (field_imm 5 context/1087))
                      (let
                        (action/1100 =
                           (apply raw_action/1095 0
                             (apply
                               (field_imm 16
                                 (global Dune__exe__NewRuleSyntax!))
                               context/1087)))
                        (makeblock 0 (field_imm 0 context/1087)
                          (apply
                            (field_imm 15 (global Dune__exe__NewRuleSyntax!))
                            context/1087)
                          (apply (field_imm 3 context/1087) action/1100)
                          prec/1096 level/1089))))
                 case tag 1:
                  (let
                    (prec/1098 =a (field_imm 1 e/1090)
                     oid/1097 =a (field_imm 0 *match*/1827)
                     evar/1221 = (function x/1223 (makeblock 0 x/1223))
                     evars/1224 =
                       (function xs/1226
                         (apply (field_imm 19 (global Stdlib__List!))
                           evar/1221 xs/1226))
                     tuple/1227 =
                       (apply (field_imm 1 (global Dune__exe__CodeBits!))
                         (apply evars/1224
                           (apply
                             (field_imm 17
                               (global Dune__exe__NewRuleSyntax!))
                             context/1087)))
                     e/1275 =
                       (if (isint oid/1097) tuple/1227
                         (let (id/1276 =a (field_imm 0 oid/1097))
                           (makeblock 2 (makeblock 19 id/1276)
                             (makeblock 0 tuple/1227 0))))
                     action/1277 =
                       (apply (field_imm 1 (global Dune__exe__Action!))
                         e/1275)
                     raw_action/1278 =
                       (function param/1281 param/1280 action/1277)
                     e/1282 =
                       (makeblock 2 (makeblock 0 raw_action/1278) prec/1098)
                     e/1283 =
                       (apply (field_imm 3 (global Dune__exe__Positions!))
                         pos/1091 e/1282)
                     context/1284 =
                       (let (init/1826 = context/1087)
                         (makeblock 0 (field_imm 0 init/1826)
                           (field_imm 1 init/1826) (field_imm 2 init/1826)
                           (field_imm 3 init/1826) (field_imm 4 init/1826) 0)))
                    (apply production_aux/1051 context/1284 e/1283
                      level/1089)))))))
      production/1052
        (function param/1292
          (let
            (level/1289 =a (field_imm 1 param/1292)
             e/1288 =a (field_imm 0 param/1292)
             e/1290 =
               (apply (field_imm 3 (global Dune__exe__NewRuleSyntax!))
                 e/1288))
            (seq
              (apply (field_imm 6 (global Dune__exe__NewRuleSyntax!)) e/1290)
              (let
                (pos/1291 =
                   (apply (field_imm 1 (global Dune__exe__Positions!))
                     e/1290))
                (apply production_aux/1051
                  (apply (field_imm 12 (global Dune__exe__NewRuleSyntax!))
                    pos/1291)
                  e/1290 level/1289)))))
      productions/1053
        (function e/1293
          (let
            (*match*/1832 =
               (apply (field_imm 0 (global Dune__exe__Positions!)) e/1293)
             branches/1294 =a (field_imm 0 *match*/1832))
            (apply (field_imm 19 (global Stdlib__List!)) production/1052
              branches/1294))))
    (seq
      (setfield_ptr(root-init) 19 (global Dune__exe__NewRuleSyntax!)
        parameter/1047)
      (setfield_ptr(root-init) 20 (global Dune__exe__NewRuleSyntax!)
        nested_parameter/1048)
      (setfield_ptr(root-init) 21 (global Dune__exe__NewRuleSyntax!)
        producer/1049)
      (setfield_ptr(root-init) 22 (global Dune__exe__NewRuleSyntax!)
        extend/1050)
      (setfield_ptr(root-init) 23 (global Dune__exe__NewRuleSyntax!)
        production_aux/1051)
      (setfield_ptr(root-init) 24 (global Dune__exe__NewRuleSyntax!)
        production/1052)
      (setfield_ptr(root-init) 25 (global Dune__exe__NewRuleSyntax!)
        productions/1053)))
  (let
    (rule/1295 =
       (function rule/1297
         (makeblock 0 (int,int,*,*,*,*,*) (field_int 0 rule/1297)
           (field_int 1 rule/1297)
           (apply (field_imm 0 (global Dune__exe__Positions!))
             (field_imm 2 rule/1297))
           (makeblock 0
             (apply (field_imm 1 (global Dune__exe__Positions!))
               (field_imm 2 rule/1297))
             0)
           (field_imm 3 rule/1297)
           (apply (field_imm 19 (global Stdlib__List!))
             (field_imm 0 (global Dune__exe__Positions!))
             (field_imm 4 rule/1297))
           (apply (field_imm 25 (global Dune__exe__NewRuleSyntax!))
             (field_imm 5 rule/1297)))))
    (setfield_ptr(root-init) 0 (global Dune__exe__NewRuleSyntax!) rule/1295))
  0)
(seq
  (let
    (>>/432 = (function f/434 g/435 x/436 (apply g/435 (apply f/434 x/436))))
    (setfield_ptr(root-init) 1 (global Dune__exe__NewRuleSyntax!) >>/432))
  (let
    (return/437 =
       (function pos/439 x/440
         (let
           (action/441 =
              (apply (field_imm 1 (global Dune__exe__Action!))
                (makeblock 0 x/440))
            raw_action/532 = (function param/535 param/534 action/441))
           (apply (field_imm 3 (global Dune__exe__Positions!)) pos/439
             (makeblock 2 (makeblock 0 raw_action/532) 0)))))
    (setfield_ptr(root-init) 2 (global Dune__exe__NewRuleSyntax!) return/437))
  (letrec
    (resolve_puns/641
       (function e/642
         (apply (field_imm 7 (global Dune__exe__Positions!))
           (function e/643
             (catch
               (switch* e/643
                case tag 0:
                 (let (p1/648 =a (field_imm 0 e/643))
                   (catch
                     (switch p1/648
                      case tag 1:
                       (let (e1/646 =a (field_imm 1 e/643))
                         (if (isint (field_imm 1 e1/646))
                           (let (x1/645 =a (field_imm 0 e1/646))
                             (if
                               (apply
                                 (field_imm 8 (global Dune__exe__ParserAux!))
                                 x1/645)
                               (let
                                 (x1/664 =
                                    (apply
                                      (field_imm 3
                                        (global Dune__exe__Positions!))
                                      (field_imm 0 p1/648)
                                      (apply
                                        (field_imm 0
                                          (global Dune__exe__Positions!))
                                        x1/645)))
                                 (makeblock 0 (makeblock 0 x1/664) e1/646
                                   (apply resolve_puns/641
                                     (field_imm 2 e/643))))
                               (exit 2)))
                           (exit 2)))
                      default: (exit 2))
                    with (2)
                     (makeblock 0 p1/648 (field_imm 1 e/643)
                       (apply resolve_puns/641 (field_imm 2 e/643)))))
                case tag 1: (exit 1)
                case tag 2: (exit 1))
              with (1) e/643))
           e/642)))
    (setfield_ptr(root-init) 3 (global Dune__exe__NewRuleSyntax!)
      resolve_puns/641))
  (let
    (check_linearity/665 =
       (function ps/667 : int
         (letrec
           (build/668
              (function m/717 p/718
                (catch
                  (switch* p/718
                   case int 0: (exit 6)
                   case tag 0:
                    (let
                      (*match*/1794 =
                         (apply (field_imm 2 (global Dune__exe__Positions!))
                           (field_imm 0 p/718)))
                      (apply (field_imm 44 (global Dune__exe__StringMap!))
                        (field_imm 0 *match*/1794) (field_imm 1 *match*/1794)
                        m/717))
                   case tag 1: (exit 6)
                   case tag 2:
                    (apply (field_imm 25 (global Stdlib__List!)) build/668
                      m/717 (field_imm 0 p/718)))
                 with (6) m/717)))
           (let
             (m/837 =
                (apply (field_imm 25 (global Stdlib__List!)) build/668
                  (field_imm 0 (global Dune__exe__StringMap!)) ps/667))
             (apply (field_imm 21 (global Dune__exe__StringMap!))
               (function x/838 positions/839 : int
                 (if
                   (>
                     (apply (field_imm 0 (global Stdlib__List!))
                       positions/839)
                     1)
                   (apply (field_imm 5 (global Dune__exe__Error!))
                     positions/839
                     [0:
                      [11:
                       "The variable "
                       [2: 0 [11: " is bound several times." 0]]]
                      "The variable %s is bound several times."]
                     x/838)
                   0))
               m/837)))))
    (setfield_ptr(root-init) 4 (global Dune__exe__NewRuleSyntax!)
      check_linearity/665))
  (letrec
    (patterns/878
       (function e/879
         (let
           (e/880 =
              (apply (field_imm 0 (global Dune__exe__Positions!)) e/879))
           (catch
             (switch* e/880
              case tag 0:
               (makeblock 0 (field_imm 0 e/880)
                 (apply patterns/878 (field_imm 2 e/880)))
              case tag 1: (exit 7)
              case tag 2: (exit 7))
            with (7) 0))))
    (setfield_ptr(root-init) 5 (global Dune__exe__NewRuleSyntax!)
      patterns/878))
  (let
    (check_linearity/883 =
       (apply (field_imm 1 (global Dune__exe__NewRuleSyntax!))
         (field_imm 5 (global Dune__exe__NewRuleSyntax!))
         (field_imm 4 (global Dune__exe__NewRuleSyntax!))))
    (setfield_ptr(root-init) 6 (global Dune__exe__NewRuleSyntax!)
      check_linearity/883))
  (letrec
    (tilde_used/884
       (function positions/885 p/886
         (catch
           (switch* p/886
            case int 0: (exit 11)
            case tag 0: (exit 11)
            case tag 1: (makeblock 0 (field_imm 0 p/886) positions/885)
            case tag 2:
             (apply (field_imm 25 (global Stdlib__List!)) tilde_used/884
               positions/885 (field_imm 0 p/886)))
          with (11) positions/885)))
    (setfield_ptr(root-init) 7 (global Dune__exe__NewRuleSyntax!)
      tilde_used/884))
  (let
    (tilde_used_warning/889 =
       (function positions/891 : int
         (let
           (n/892 =[int]
              (apply (field_imm 0 (global Stdlib__List!)) positions/891))
           (if (> n/892 0)
             (catch
               (if (== n/892 1)
                 (let
                   (wpatterns/1807 = "a wildcard pattern _"
                    tpatterns/1806 = "a ~ pattern"
                    variables_have/1805 = "variable has")
                   (exit 12 variables_have/1805 tpatterns/1806
                     wpatterns/1807))
                 (let
                   (wpatterns/1804 = "wildcard patterns _"
                    tpatterns/1803 = "~ patterns"
                    variables_have/1802 = "variables have")
                   (exit 12 variables_have/1802 tpatterns/1803
                     wpatterns/1804)))
              with (12 variables_have/893 tpatterns/894 wpatterns/895)
               (apply (field_imm 7 (global Dune__exe__Error!)) positions/891
                 [0:
                  [2:
                   0
                   [11:
                    " nameless "
                    [2:
                     0
                     [11:
                      " been introduced by "
                      [2:
                       0
                       [11:
                        ",\nyet this sequence does not end in a point-free semantic action <...>.\nPerhaps "
                        [2: 0 [11: " should be used instead." 0]]]]]]]]
                  "%s nameless %s been introduced by %s,\nyet this sequence does not end in a point-free semantic action <...>.\nPerhaps %s should be used instead."]
                 (apply (field_imm 31 (global Dune__exe__Misc!)) n/892)
                 variables_have/893 tpatterns/894 wpatterns/895))
             0))))
    (setfield_ptr(root-init) 8 (global Dune__exe__NewRuleSyntax!)
      tilde_used_warning/889))
  (let
    (pattern/932 =
       (function x1/934 p/935
         (let
           (c/936 = (makemutable 0 (int) 1)
            fresh/937 =
              (function param/952[int]
                (apply (field_imm 3 (global Stdlib__Printf!))
                  [0: [2: 0 [12: '_' [4: 0 0 0 0]]] "%s_%d"] x1/934
                  (apply (field_imm 22 (global Dune__exe__Misc!)) c/936))))
           (letrec
             (pattern/953
                (function p/954
                  (switch* p/954
                   case int 0: 0
                   case tag 0:
                    (makeblock 0
                      (apply (field_imm 0 (global Dune__exe__Positions!))
                        (field_imm 0 p/954)))
                   case tag 1: (makeblock 0 (apply fresh/937 0))
                   case tag 2:
                    (let (ps/957 =a (field_imm 0 p/954))
                      (if (isint ps/957) 1
                        (if (isint (field_imm 1 ps/957))
                          (apply pattern/953 (field_imm 0 ps/957))
                          (makeblock 3
                            (apply (field_imm 19 (global Stdlib__List!))
                              pattern/953 ps/957))))))))
             (apply pattern/953 p/935)))))
    (setfield_ptr(root-init) 9 (global Dune__exe__NewRuleSyntax!)
      pattern/932))
  (letrec
    (bv/958
       (function accu/959 p/960
         (catch
           (switch p/960
            case int 0: (exit 21)
            case int 1: (exit 21)
            case tag 0: (makeblock 0 (field_imm 0 p/960) accu/959)
            case tag 3:
             (apply (field_imm 25 (global Stdlib__List!)) bv/958 accu/959
               (field_imm 0 p/960))
            default:
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "src/newRuleSyntax.ml" 192 6])))
          with (21) accu/959)))
    (setfield_ptr(root-init) 10 (global Dune__exe__NewRuleSyntax!) bv/958))
  (let (attributes/963 = (function e/965 (field_imm 2 e/965)))
    (setfield_ptr(root-init) 11 (global Dune__exe__NewRuleSyntax!)
      attributes/963))
  (let
    (empty/978 =
       (function pos/980
         (makeblock 0 pos/980 0 0 (function a/981 a/981) 0 0)))
    (setfield_ptr(root-init) 12 (global Dune__exe__NewRuleSyntax!) empty/978))
  (let
    (user/982 =
       (function x/984
         (makeblock 0
           (apply (field_imm 0 (global Dune__exe__Positions!)) x/984))))
    (setfield_ptr(root-init) 13 (global Dune__exe__NewRuleSyntax!) user/982))
  (let (auto/985 = 0)
    (setfield_ptr(root-init) 14 (global Dune__exe__NewRuleSyntax!) auto/985))
  (let
    (producers/986 =
       (function context/988
         (apply (field_imm 9 (global Stdlib__List!))
           (field_imm 1 context/988))))
    (setfield_ptr(root-init) 15 (global Dune__exe__NewRuleSyntax!)
      producers/986))
  (let
    (uxs/989 =
       (function context/991
         (apply (field_imm 9 (global Stdlib__Array!))
           (apply (field_imm 9 (global Stdlib__List!))
             (field_imm 2 context/991)))))
    (setfield_ptr(root-init) 16 (global Dune__exe__NewRuleSyntax!) uxs/989))
  (let
    (tuple/1040 =
       (function context/1042
         (apply (field_imm 9 (global Stdlib__List!))
           (field_imm 4 context/1042))))
    (setfield_ptr(root-init) 17 (global Dune__exe__NewRuleSyntax!)
      tuple/1040))
  (let
    (semvar/1043 =
       (function context/1045
         (let
           (i/1046 =[int]
              (+
                (apply (field_imm 0 (global Stdlib__List!))
                  (field_imm 1 context/1045))
                1))
           (apply (field_imm 3 (global Stdlib__Printf!))
             [0: [12: '_' [4: 0 0 0 0]] "_%d"] i/1046))))
    (setfield_ptr(root-init) 18 (global Dune__exe__NewRuleSyntax!)
      semvar/1043))
  (letrec
    (parameter/1047
       (function e/1054
         (apply (field_imm 0 (global Dune__exe__Parameters!))
           (field_imm 0 e/1054)
           (apply (field_imm 19 (global Stdlib__List!)) nested_parameter/1048
             (field_imm 1 e/1054))))
      nested_parameter/1048
        (function e/1073
          (let
            (*match*/1814 =
               (apply (field_imm 0 (global Dune__exe__Positions!)) e/1073)
             *match*/1815 =a (field_imm 0 *match*/1814))
            (catch
              (if (isint *match*/1815) (exit 25)
                (let
                  (*match*/1818 =a
                     (field_imm 0 (field_imm 0 (field_imm 0 *match*/1815))))
                  (switch* *match*/1818
                   case tag 0: (exit 25)
                   case tag 1:
                    (if (isint (field_imm 1 *match*/1815))
                      (apply parameter/1047 (field_imm 0 *match*/1818))
                      (exit 25))
                   case tag 2: (exit 25))))
             with (25)
              (let
                (pos/1075 =
                   (apply (field_imm 1 (global Dune__exe__Positions!))
                     e/1073))
                (makeblock 2
                  (apply (field_imm 3 (global Dune__exe__Positions!))
                    pos/1075 (apply productions/1053 e/1073)))))))
      producer/1049
        (function x/1076 e1/1077
          (makeblock 0 x/1076 (apply parameter/1047 e1/1077)
            (apply (field_imm 11 (global Dune__exe__NewRuleSyntax!)) e1/1077)))
      extend/1050
        (function p/1078 e1/1079 context/1080
          (catch
            (switch p/1078
             case tag 0:
              (let (x1/1081 =a (field_imm 0 p/1078))
                (makeblock 0 (field_imm 0 context/1080)
                  (makeblock 0 (apply producer/1049 x1/1081 e1/1079)
                    (field_imm 1 context/1080))
                  (makeblock 0
                    (apply (field_imm 13 (global Dune__exe__NewRuleSyntax!))
                      x1/1081)
                    (field_imm 2 context/1080))
                  (field_imm 3 context/1080)
                  (makeblock 0
                    (apply (field_imm 0 (global Dune__exe__Positions!))
                      x1/1081)
                    (field_imm 4 context/1080))
                  (field_imm 5 context/1080)))
             default: (exit 29))
           with (29)
            (let
              (x1/1082 =
                 (apply (field_imm 18 (global Dune__exe__NewRuleSyntax!))
                   context/1080)
               tilde_used/1083 =
                 (apply (field_imm 7 (global Dune__exe__NewRuleSyntax!))
                   (field_imm 5 context/1080) p/1078)
               p/1084 =
                 (apply (field_imm 9 (global Dune__exe__NewRuleSyntax!))
                   x1/1082 p/1078)
               binding/1085 =
                 (apply (field_imm 3 (global Dune__exe__Action!)) p/1084
                   x1/1082)
               x1/1086 =
                 (apply (field_imm 6 (global Dune__exe__Positions!)) x1/1082))
              (makeblock 0 (field_imm 0 context/1080)
                (makeblock 0 (apply producer/1049 x1/1086 e1/1079)
                  (field_imm 1 context/1080))
                (makeblock 0
                  (field_imm 14 (global Dune__exe__NewRuleSyntax!))
                  (field_imm 2 context/1080))
                (apply (field_imm 1 (global Dune__exe__NewRuleSyntax!))
                  binding/1085 (field_imm 3 context/1080))
                (apply (field_imm 10 (global Dune__exe__NewRuleSyntax!))
                  (field_imm 4 context/1080) p/1084)
                tilde_used/1083))))
      production_aux/1051
        (function context/1087 e/1088 level/1089
          (let
            (*match*/1831 =
               (apply (field_imm 2 (global Dune__exe__Positions!)) e/1088)
             pos/1091 =a (field_imm 1 *match*/1831)
             e/1090 =a (field_imm 0 *match*/1831))
            (switch* e/1090
             case tag 0:
              (apply production_aux/1051
                (apply extend/1050 (field_imm 0 e/1090) (field_imm 1 e/1090)
                  context/1087)
                (field_imm 2 e/1090) level/1089)
             case tag 1:
              (seq
                (apply (field_imm 8 (global Dune__exe__NewRuleSyntax!))
                  (field_imm 5 context/1087))
                (let
                  (x/1285 =
                     (apply (field_imm 18 (global Dune__exe__NewRuleSyntax!))
                       context/1087)
                   e/1286 =
                     (makeblock 0
                       (makeblock 0
                         (apply (field_imm 3 (global Dune__exe__Positions!))
                           pos/1091 x/1285))
                       (field_imm 0 e/1090)
                       (apply
                         (field_imm 2 (global Dune__exe__NewRuleSyntax!))
                         pos/1091 x/1285))
                   e/1287 =
                     (apply (field_imm 3 (global Dune__exe__Positions!))
                       pos/1091 e/1286))
                  (apply production_aux/1051 context/1087 e/1287 level/1089)))
             case tag 2:
              (let (*match*/1827 =a (field_imm 0 e/1090))
                (switch* *match*/1827
                 case tag 0:
                  (seq
                    (apply (field_imm 8 (global Dune__exe__NewRuleSyntax!))
                      (field_imm 5 context/1087))
                    (let
                      (action/1100 =
                         (apply (field_imm 0 *match*/1827) 0
                           (apply
                             (field_imm 16
                               (global Dune__exe__NewRuleSyntax!))
                             context/1087)))
                      (makeblock 0 (field_imm 0 context/1087)
                        (apply
                          (field_imm 15 (global Dune__exe__NewRuleSyntax!))
                          context/1087)
                        (apply (field_imm 3 context/1087) action/1100)
                        (field_imm 1 e/1090) level/1089)))
                 case tag 1:
                  (let
                    (oid/1097 =a (field_imm 0 *match*/1827)
                     evar/1221 = (function x/1223 (makeblock 0 x/1223))
                     tuple/1227 =
                       (apply (field_imm 1 (global Dune__exe__CodeBits!))
                         (let
                           (xs/1834 =
                              (apply
                                (field_imm 17
                                  (global Dune__exe__NewRuleSyntax!))
                                context/1087))
                           (apply (field_imm 19 (global Stdlib__List!))
                             evar/1221 xs/1834)))
                     e/1275 =
                       (if (isint oid/1097) tuple/1227
                         (makeblock 2 (makeblock 19 (field_imm 0 oid/1097))
                           (makeblock 0 tuple/1227 0)))
                     action/1277 =
                       (apply (field_imm 1 (global Dune__exe__Action!))
                         e/1275)
                     raw_action/1278 =
                       (function param/1281 param/1280 action/1277)
                     e/1282 =
                       (makeblock 2 (makeblock 0 raw_action/1278)
                         (field_imm 1 e/1090))
                     e/1283 =
                       (apply (field_imm 3 (global Dune__exe__Positions!))
                         pos/1091 e/1282)
                     context/1284 =
                       (makeblock 0 (field_imm 0 context/1087)
                         (field_imm 1 context/1087)
                         (field_imm 2 context/1087)
                         (field_imm 3 context/1087)
                         (field_imm 4 context/1087) 0))
                    (apply production_aux/1051 context/1284 e/1283
                      level/1089)))))))
      production/1052
        (function param/1292
          (let
            (e/1290 =
               (apply (field_imm 3 (global Dune__exe__NewRuleSyntax!))
                 (field_imm 0 param/1292)))
            (seq
              (apply (field_imm 6 (global Dune__exe__NewRuleSyntax!)) e/1290)
              (let
                (pos/1291 =
                   (apply (field_imm 1 (global Dune__exe__Positions!))
                     e/1290))
                (apply production_aux/1051
                  (apply (field_imm 12 (global Dune__exe__NewRuleSyntax!))
                    pos/1291)
                  e/1290 (field_imm 1 param/1292))))))
      productions/1053
        (function e/1293
          (let
            (*match*/1832 =
               (apply (field_imm 0 (global Dune__exe__Positions!)) e/1293))
            (apply (field_imm 19 (global Stdlib__List!)) production/1052
              (field_imm 0 *match*/1832)))))
    (seq
      (setfield_ptr(root-init) 19 (global Dune__exe__NewRuleSyntax!)
        parameter/1047)
      (setfield_ptr(root-init) 20 (global Dune__exe__NewRuleSyntax!)
        nested_parameter/1048)
      (setfield_ptr(root-init) 21 (global Dune__exe__NewRuleSyntax!)
        producer/1049)
      (setfield_ptr(root-init) 22 (global Dune__exe__NewRuleSyntax!)
        extend/1050)
      (setfield_ptr(root-init) 23 (global Dune__exe__NewRuleSyntax!)
        production_aux/1051)
      (setfield_ptr(root-init) 24 (global Dune__exe__NewRuleSyntax!)
        production/1052)
      (setfield_ptr(root-init) 25 (global Dune__exe__NewRuleSyntax!)
        productions/1053)))
  (let
    (rule/1295 =
       (function rule/1297
         (makeblock 0 (int,int,*,*,*,*,*) (field_int 0 rule/1297)
           (field_int 1 rule/1297)
           (apply (field_imm 0 (global Dune__exe__Positions!))
             (field_imm 2 rule/1297))
           (makeblock 0
             (apply (field_imm 1 (global Dune__exe__Positions!))
               (field_imm 2 rule/1297))
             0)
           (field_imm 3 rule/1297)
           (apply (field_imm 19 (global Stdlib__List!))
             (field_imm 0 (global Dune__exe__Positions!))
             (field_imm 4 rule/1297))
           (apply (field_imm 25 (global Dune__exe__NewRuleSyntax!))
             (field_imm 5 rule/1297)))))
    (setfield_ptr(root-init) 0 (global Dune__exe__NewRuleSyntax!) rule/1295))
  0)
