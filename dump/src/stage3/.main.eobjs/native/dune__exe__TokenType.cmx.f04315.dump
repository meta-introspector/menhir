[
  structure_item (src/tokenType.ml[18,1184+0]..[18,1184+16])
    Pstr_open Fresh
    module_expr (src/tokenType.ml[18,1184+5]..[18,1184+16])
      Pmod_ident "BasicSyntax" (src/tokenType.ml[18,1184+5]..[18,1184+16])
  structure_item (src/tokenType.ml[19,1201+0]..[19,1201+7])
    Pstr_open Fresh
    module_expr (src/tokenType.ml[19,1201+5]..[19,1201+7])
      Pmod_ident "IL" (src/tokenType.ml[19,1201+5]..[19,1201+7])
  structure_item (src/tokenType.ml[20,1209+0]..[20,1209+13])
    Pstr_open Fresh
    module_expr (src/tokenType.ml[20,1209+5]..[20,1209+13])
      Pmod_ident "CodeBits" (src/tokenType.ml[20,1209+5]..[20,1209+13])
  structure_item (src/tokenType.ml[26,1399+0]..[27,1413+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/tokenType.ml[26,1399+4]..[26,1399+11])
          Ppat_var "tctoken" (src/tokenType.ml[26,1399+4]..[26,1399+11])
        expression (src/tokenType.ml[27,1413+2]..[27,1413+9])
          Pexp_constant PConst_string("token",(src/tokenType.ml[27,1413+3]..[27,1413+8]),None)
    ]
  structure_item (src/tokenType.ml[29,1424+0]..[30,1437+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/tokenType.ml[29,1424+4]..[29,1424+10])
          Ppat_var "ttoken" (src/tokenType.ml[29,1424+4]..[29,1424+10])
        expression (src/tokenType.ml[30,1437+2]..[30,1437+22])
          Pexp_construct "TypApp" (src/tokenType.ml[30,1437+2]..[30,1437+8])
          Some
            expression (src/tokenType.ml[30,1437+9]..[30,1437+22])
              Pexp_tuple
              [
                expression (src/tokenType.ml[30,1437+10]..[30,1437+17])
                  Pexp_ident "tctoken" (src/tokenType.ml[30,1437+10]..[30,1437+17])
                expression (src/tokenType.ml[30,1437+19]..[30,1437+21])
                  Pexp_construct "[]" (src/tokenType.ml[30,1437+19]..[30,1437+21])
                  None
              ]
    ]
  structure_item (src/tokenType.ml[35,1569+0]..[36,1587+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/tokenType.ml[35,1569+4]..[35,1569+15])
          Ppat_var "tctokengadt" (src/tokenType.ml[35,1569+4]..[35,1569+15])
        expression (src/tokenType.ml[36,1587+2]..[36,1587+12])
          Pexp_constant PConst_string("terminal",(src/tokenType.ml[36,1587+3]..[36,1587+11]),None)
    ]
  structure_item (src/tokenType.ml[38,1601+0]..[39,1620+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/tokenType.ml[38,1601+4]..[38,1601+14])
          Ppat_var "ttokengadt" (src/tokenType.ml[38,1601+4]..[38,1601+14])
        expression (src/tokenType.ml[38,1601+15]..[39,1620+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/tokenType.ml[38,1601+15]..[38,1601+16])
            Ppat_var "a" (src/tokenType.ml[38,1601+15]..[38,1601+16])
          expression (src/tokenType.ml[39,1620+2]..[39,1620+29])
            Pexp_construct "TypApp" (src/tokenType.ml[39,1620+2]..[39,1620+8])
            Some
              expression (src/tokenType.ml[39,1620+9]..[39,1620+29])
                Pexp_tuple
                [
                  expression (src/tokenType.ml[39,1620+10]..[39,1620+21])
                    Pexp_ident "tctokengadt" (src/tokenType.ml[39,1620+10]..[39,1620+21])
                  expression (src/tokenType.ml[39,1620+23]..[39,1620+28])
                    Pexp_construct "::" (src/tokenType.ml[39,1620+25]..[39,1620+28]) ghost
                    Some
                      expression (src/tokenType.ml[39,1620+25]..[39,1620+28]) ghost
                        Pexp_tuple
                        [
                          expression (src/tokenType.ml[39,1620+25]..[39,1620+26])
                            Pexp_ident "a" (src/tokenType.ml[39,1620+25]..[39,1620+26])
                          expression (src/tokenType.ml[39,1620+27]..[39,1620+28]) ghost
                            Pexp_construct "[]" (src/tokenType.ml[39,1620+27]..[39,1620+28]) ghost
                            None
                        ]
                ]
    ]
  structure_item (src/tokenType.ml[44,1735+0]..[45,1762+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/tokenType.ml[44,1735+4]..[44,1735+18])
          Ppat_var "ttokengadtdata" (src/tokenType.ml[44,1735+4]..[44,1735+18])
        expression (src/tokenType.ml[44,1735+19]..[45,1762+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/tokenType.ml[44,1735+19]..[44,1735+24])
            Ppat_var "token" (src/tokenType.ml[44,1735+19]..[44,1735+24])
          expression (src/tokenType.ml[45,1762+2]..[45,1762+14])
            Pexp_apply
            expression (src/tokenType.ml[45,1762+7]..[45,1762+8])
              Pexp_ident "^" (src/tokenType.ml[45,1762+7]..[45,1762+8])
            [
              <arg>
              Nolabel
                expression (src/tokenType.ml[45,1762+2]..[45,1762+6])
                  Pexp_constant PConst_string("T_",(src/tokenType.ml[45,1762+3]..[45,1762+5]),None)
              <arg>
              Nolabel
                expression (src/tokenType.ml[45,1762+9]..[45,1762+14])
                  Pexp_ident "token" (src/tokenType.ml[45,1762+9]..[45,1762+14])
            ]
    ]
  structure_item (src/tokenType.ml[51,1986+0]..[82,2703+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/tokenType.ml[51,1986+4]..[51,1986+16])
          Ppat_var "tokentypedef" (src/tokenType.ml[51,1986+4]..[51,1986+16])
        expression (src/tokenType.ml[51,1986+17]..[82,2703+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/tokenType.ml[51,1986+17]..[51,1986+24])
            Ppat_var "grammar" (src/tokenType.ml[51,1986+17]..[51,1986+24])
          expression (src/tokenType.ml[52,2013+2]..[82,2703+3])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/tokenType.ml[52,2013+6]..[52,2013+13])
                  Ppat_var "typerhs" (src/tokenType.ml[52,2013+6]..[52,2013+13])
                expression (src/tokenType.ml[53,2029+4]..[71,2489+48])
                  Pexp_match
                  expression (src/tokenType.ml[53,2029+10]..[53,2029+34])
                    Pexp_ident "Settings.token_type_mode" (src/tokenType.ml[53,2029+10]..[53,2029+34])
                  [
                    <case>
                      pattern (src/tokenType.ml[54,2069+6]..[55,2098+31])
                        Ppat_or
                        pattern (src/tokenType.ml[54,2069+6]..[54,2069+28])
                          Ppat_construct "Settings.TokenTypeOnly" (src/tokenType.ml[54,2069+6]..[54,2069+28])
                          None
                        pattern (src/tokenType.ml[55,2098+6]..[55,2098+31])
                          Ppat_construct "Settings.TokenTypeAndCode" (src/tokenType.ml[55,2098+6]..[55,2098+31])
                          None
                      expression (src/tokenType.ml[59,2170+8]..[65,2414+9])
                        Pexp_construct "TDefSum" (src/tokenType.ml[59,2170+8]..[59,2170+15])
                        Some
                          expression (src/tokenType.ml[59,2170+16]..[65,2414+9])
                            Pexp_apply
                            expression (src/tokenType.ml[60,2188+10]..[60,2188+18])
                              Pexp_ident "List.map" (src/tokenType.ml[60,2188+10]..[60,2188+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/tokenType.ml[60,2188+19]..[64,2378+12])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/tokenType.ml[60,2188+24]..[60,2188+35])
                                    Ppat_tuple
                                    [
                                      pattern (src/tokenType.ml[60,2188+25]..[60,2188+28])
                                        Ppat_var "tok" (src/tokenType.ml[60,2188+25]..[60,2188+28])
                                      pattern (src/tokenType.ml[60,2188+30]..[60,2188+34])
                                        Ppat_var "typo" (src/tokenType.ml[60,2188+30]..[60,2188+34])
                                    ]
                                  expression (src/tokenType.ml[60,2188+39]..[64,2378+11])
                                    Pexp_record
                                    [
                                      "dataname" (src/tokenType.ml[61,2229+12]..[61,2229+20])
                                        expression (src/tokenType.ml[61,2229+23]..[61,2229+26])
                                          Pexp_ident "tok" (src/tokenType.ml[61,2229+23]..[61,2229+26])
                                      "datavalparams" (src/tokenType.ml[62,2257+12]..[62,2257+25])
                                        expression (src/tokenType.ml[62,2257+28]..[62,2257+85])
                                          Pexp_match
                                          expression (src/tokenType.ml[62,2257+35]..[62,2257+39])
                                            Pexp_ident "typo" (src/tokenType.ml[62,2257+35]..[62,2257+39])
                                          [
                                            <case>
                                              pattern (src/tokenType.ml[62,2257+45]..[62,2257+49])
                                                Ppat_construct "None" (src/tokenType.ml[62,2257+45]..[62,2257+49])
                                                None
                                              expression (src/tokenType.ml[62,2257+53]..[62,2257+55])
                                                Pexp_construct "[]" (src/tokenType.ml[62,2257+53]..[62,2257+55])
                                                None
                                            <case>
                                              pattern (src/tokenType.ml[62,2257+58]..[62,2257+64])
                                                Ppat_construct "Some" (src/tokenType.ml[62,2257+58]..[62,2257+62])
                                                Some
                                                  []
                                                  pattern (src/tokenType.ml[62,2257+63]..[62,2257+64])
                                                    Ppat_var "t" (src/tokenType.ml[62,2257+63]..[62,2257+64])
                                              expression (src/tokenType.ml[62,2257+68]..[62,2257+84])
                                                Pexp_construct "::" (src/tokenType.ml[62,2257+70]..[62,2257+84]) ghost
                                                Some
                                                  expression (src/tokenType.ml[62,2257+70]..[62,2257+84]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (src/tokenType.ml[62,2257+70]..[62,2257+82])
                                                        Pexp_construct "TypTextual" (src/tokenType.ml[62,2257+70]..[62,2257+80])
                                                        Some
                                                          expression (src/tokenType.ml[62,2257+81]..[62,2257+82])
                                                            Pexp_ident "t" (src/tokenType.ml[62,2257+81]..[62,2257+82])
                                                      expression (src/tokenType.ml[62,2257+83]..[62,2257+84]) ghost
                                                        Pexp_construct "[]" (src/tokenType.ml[62,2257+83]..[62,2257+84]) ghost
                                                        None
                                                    ]
                                          ]
                                      "datatypeparams" (src/tokenType.ml[63,2344+12]..[63,2344+26])
                                        expression (src/tokenType.ml[63,2344+29]..[63,2344+33])
                                          Pexp_construct "None" (src/tokenType.ml[63,2344+29]..[63,2344+33])
                                          None
                                    ]
                                    None
                              <arg>
                              Nolabel
                                expression (src/tokenType.ml[64,2378+13]..[64,2378+35])
                                  Pexp_apply
                                  expression (src/tokenType.ml[64,2378+14]..[64,2378+26])
                                    Pexp_ident "typed_tokens" (src/tokenType.ml[64,2378+14]..[64,2378+26])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/tokenType.ml[64,2378+27]..[64,2378+34])
                                        Pexp_ident "grammar" (src/tokenType.ml[64,2378+27]..[64,2378+34])
                                  ]
                            ]
                    <case>
                      pattern (src/tokenType.ml[67,2425+6]..[67,2425+25])
                        Ppat_construct "Settings.CodeOnly" (src/tokenType.ml[67,2425+6]..[67,2425+23])
                        Some
                          []
                          pattern (src/tokenType.ml[67,2425+24]..[67,2425+25])
                            Ppat_var "m" (src/tokenType.ml[67,2425+24]..[67,2425+25])
                      expression (src/tokenType.ml[71,2489+8]..[71,2489+48])
                        Pexp_construct "TAbbrev" (src/tokenType.ml[71,2489+8]..[71,2489+15])
                        Some
                          expression (src/tokenType.ml[71,2489+16]..[71,2489+48])
                            Pexp_construct "TypApp" (src/tokenType.ml[71,2489+17]..[71,2489+23])
                            Some
                              expression (src/tokenType.ml[71,2489+24]..[71,2489+47])
                                Pexp_tuple
                                [
                                  expression (src/tokenType.ml[71,2489+25]..[71,2489+42])
                                    Pexp_apply
                                    expression (src/tokenType.ml[71,2489+27]..[71,2489+28])
                                      Pexp_ident "^" (src/tokenType.ml[71,2489+27]..[71,2489+28])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/tokenType.ml[71,2489+25]..[71,2489+26])
                                          Pexp_ident "m" (src/tokenType.ml[71,2489+25]..[71,2489+26])
                                      <arg>
                                      Nolabel
                                        expression (src/tokenType.ml[71,2489+29]..[71,2489+42])
                                          Pexp_apply
                                          expression (src/tokenType.ml[71,2489+33]..[71,2489+34])
                                            Pexp_ident "^" (src/tokenType.ml[71,2489+33]..[71,2489+34])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/tokenType.ml[71,2489+29]..[71,2489+32])
                                                Pexp_constant PConst_string(".",(src/tokenType.ml[71,2489+30]..[71,2489+31]),None)
                                            <arg>
                                            Nolabel
                                              expression (src/tokenType.ml[71,2489+35]..[71,2489+42])
                                                Pexp_ident "tctoken" (src/tokenType.ml[71,2489+35]..[71,2489+42])
                                          ]
                                    ]
                                  expression (src/tokenType.ml[71,2489+44]..[71,2489+46])
                                    Pexp_construct "[]" (src/tokenType.ml[71,2489+44]..[71,2489+46])
                                    None
                                ]
                  ]
            ]
            expression (src/tokenType.ml[74,2544+2]..[82,2703+3])
              Pexp_construct "::" (src/tokenType.ml[75,2548+4]..[82,2703+3]) ghost
              Some
                expression (src/tokenType.ml[75,2548+4]..[82,2703+3]) ghost
                  Pexp_tuple
                  [
                    expression (src/tokenType.ml[75,2548+4]..[75,2548+35])
                      Pexp_construct "IIComment" (src/tokenType.ml[75,2548+4]..[75,2548+13])
                      Some
                        expression (src/tokenType.ml[75,2548+14]..[75,2548+35])
                          Pexp_constant PConst_string("The type of tokens.",(src/tokenType.ml[75,2548+15]..[75,2548+34]),None)
                    expression (src/tokenType.ml[76,2585+4]..[82,2703+3]) ghost
                      Pexp_construct "::" (src/tokenType.ml[76,2585+4]..[82,2703+3]) ghost
                      Some
                        expression (src/tokenType.ml[76,2585+4]..[82,2703+3]) ghost
                          Pexp_tuple
                          [
                            expression (src/tokenType.ml[76,2585+4]..[81,2696+6])
                              Pexp_construct "IITypeDecls" (src/tokenType.ml[76,2585+4]..[76,2585+15])
                              Some
                                expression (src/tokenType.ml[76,2585+16]..[81,2696+6])
                                  Pexp_construct "::" (src/tokenType.ml[76,2585+17]..[81,2696+6]) ghost
                                  Some
                                    expression (src/tokenType.ml[76,2585+17]..[81,2696+6]) ghost
                                      Pexp_tuple
                                      [
                                        expression (src/tokenType.ml[76,2585+17]..[81,2696+5])
                                          Pexp_record
                                          [
                                            "typename" (src/tokenType.ml[77,2604+6]..[77,2604+14])
                                              expression (src/tokenType.ml[77,2604+17]..[77,2604+24])
                                                Pexp_ident "tctoken" (src/tokenType.ml[77,2604+17]..[77,2604+24])
                                            "typeparams" (src/tokenType.ml[78,2630+6]..[78,2630+16])
                                              expression (src/tokenType.ml[78,2630+19]..[78,2630+21])
                                                Pexp_construct "[]" (src/tokenType.ml[78,2630+19]..[78,2630+21])
                                                None
                                            "typerhs" (src/tokenType.ml[79,2653+6]..[79,2653+13]) ghost
                                              expression (src/tokenType.ml[79,2653+6]..[79,2653+13])
                                                Pexp_ident "typerhs" (src/tokenType.ml[79,2653+6]..[79,2653+13])
                                            "typeconstraint" (src/tokenType.ml[80,2668+6]..[80,2668+20])
                                              expression (src/tokenType.ml[80,2668+23]..[80,2668+27])
                                                Pexp_construct "None" (src/tokenType.ml[80,2668+23]..[80,2668+27])
                                                None
                                          ]
                                          None
                                        expression (src/tokenType.ml[81,2696+5]..[81,2696+6]) ghost
                                          Pexp_construct "[]" (src/tokenType.ml[81,2696+5]..[81,2696+6]) ghost
                                          None
                                      ]
                            expression (src/tokenType.ml[82,2703+2]..[82,2703+3]) ghost
                              Pexp_construct "[]" (src/tokenType.ml[82,2703+2]..[82,2703+3]) ghost
                              None
                          ]
                  ]
    ]
  structure_item (src/tokenType.ml[100,3475+0]..[148,5033+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/tokenType.ml[100,3475+4]..[100,3475+16])
          Ppat_var "tokengadtdef" (src/tokenType.ml[100,3475+4]..[100,3475+16])
        expression (src/tokenType.ml[100,3475+17]..[148,5033+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/tokenType.ml[100,3475+17]..[100,3475+24])
            Ppat_var "grammar" (src/tokenType.ml[100,3475+17]..[100,3475+24])
          expression (src/tokenType.ml[101,3502+2]..[148,5033+3])
            Pexp_sequence
            expression (src/tokenType.ml[101,3502+2]..[101,3502+28])
              Pexp_assert
              expression (src/tokenType.ml[101,3502+9]..[101,3502+28])
                Pexp_ident "Settings.inspection" (src/tokenType.ml[101,3502+9]..[101,3502+28])
            expression (src/tokenType.ml[102,3532+2]..[148,5033+3])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/tokenType.ml[102,3532+6]..[102,3532+20])
                    Ppat_tuple
                    [
                      pattern (src/tokenType.ml[102,3532+6]..[102,3532+11])
                        Ppat_var "param" (src/tokenType.ml[102,3532+6]..[102,3532+11])
                      pattern (src/tokenType.ml[102,3532+13]..[102,3532+20])
                        Ppat_var "typerhs" (src/tokenType.ml[102,3532+13]..[102,3532+20])
                    ]
                  expression (src/tokenType.ml[103,3555+4]..[137,4772+66])
                    Pexp_match
                    expression (src/tokenType.ml[103,3555+10]..[103,3555+34])
                      Pexp_ident "Settings.token_type_mode" (src/tokenType.ml[103,3555+10]..[103,3555+34])
                    [
                      <case>
                        pattern (src/tokenType.ml[104,3595+6]..[105,3624+31])
                          Ppat_or
                          pattern (src/tokenType.ml[104,3595+6]..[104,3595+28])
                            Ppat_construct "Settings.TokenTypeOnly" (src/tokenType.ml[104,3595+6]..[104,3595+28])
                            None
                          pattern (src/tokenType.ml[105,3624+6]..[105,3624+31])
                            Ppat_construct "Settings.TokenTypeAndCode" (src/tokenType.ml[105,3624+6]..[105,3624+31])
                            None
                        expression (src/tokenType.ml[109,3708+8]..[129,4655+9])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/tokenType.ml[109,3708+12]..[109,3708+17])
                                Ppat_var "param" (src/tokenType.ml[109,3708+12]..[109,3708+17])
                              expression (src/tokenType.ml[109,3708+20]..[109,3708+23])
                                Pexp_constant PConst_string("_",(src/tokenType.ml[109,3708+21]..[109,3708+22]),None)
                          ]
                          expression (src/tokenType.ml[110,3735+8]..[129,4655+9])
                            Pexp_tuple
                            [
                              expression (src/tokenType.ml[110,3735+8]..[110,3735+13])
                                Pexp_ident "param" (src/tokenType.ml[110,3735+8]..[110,3735+13])
                              expression (src/tokenType.ml[111,3750+8]..[129,4655+9])
                                Pexp_construct "TDefSum" (src/tokenType.ml[111,3750+8]..[111,3750+15])
                                Some
                                  expression (src/tokenType.ml[111,3750+16]..[129,4655+9])
                                    Pexp_construct "::" (src/tokenType.ml[123,4391+12]..[123,4391+14])
                                    Some
                                      expression (src/tokenType.ml[118,4182+10]..[128,4619+35]) ghost
                                        Pexp_tuple
                                        [
                                          expression (src/tokenType.ml[118,4182+10]..[123,4391+11])
                                            Pexp_record
                                            [
                                              "dataname" (src/tokenType.ml[119,4194+12]..[119,4194+20])
                                                expression (src/tokenType.ml[119,4194+23]..[119,4194+45])
                                                  Pexp_apply
                                                  expression (src/tokenType.ml[119,4194+23]..[119,4194+37])
                                                    Pexp_ident "ttokengadtdata" (src/tokenType.ml[119,4194+23]..[119,4194+37])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/tokenType.ml[119,4194+38]..[119,4194+45])
                                                        Pexp_constant PConst_string("error",(src/tokenType.ml[119,4194+39]..[119,4194+44]),None)
                                                  ]
                                              "datavalparams" (src/tokenType.ml[120,4241+12]..[120,4241+25])
                                                expression (src/tokenType.ml[120,4241+28]..[120,4241+30])
                                                  Pexp_construct "[]" (src/tokenType.ml[120,4241+28]..[120,4241+30])
                                                  None
                                              "datatypeparams" (src/tokenType.ml[121,4273+12]..[121,4273+26])
                                                expression (src/tokenType.ml[121,4273+29]..[121,4273+43])
                                                  Pexp_construct "Some" (src/tokenType.ml[121,4273+29]..[121,4273+33])
                                                  Some
                                                    expression (src/tokenType.ml[121,4273+34]..[121,4273+43])
                                                      Pexp_construct "::" (src/tokenType.ml[121,4273+36]..[121,4273+43]) ghost
                                                      Some
                                                        expression (src/tokenType.ml[121,4273+36]..[121,4273+43]) ghost
                                                          Pexp_tuple
                                                          [
                                                            expression (src/tokenType.ml[121,4273+36]..[121,4273+41])
                                                              Pexp_ident "tunit" (src/tokenType.ml[121,4273+36]..[121,4273+41])
                                                            expression (src/tokenType.ml[121,4273+42]..[121,4273+43]) ghost
                                                              Pexp_construct "[]" (src/tokenType.ml[121,4273+42]..[121,4273+43]) ghost
                                                              None
                                                          ]
                                            ]
                                            None
                                          expression (src/tokenType.ml[124,4406+10]..[128,4619+35])
                                            Pexp_apply
                                            expression (src/tokenType.ml[124,4406+10]..[124,4406+18])
                                              Pexp_ident "List.map" (src/tokenType.ml[124,4406+10]..[124,4406+18])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/tokenType.ml[124,4406+19]..[128,4619+12])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (src/tokenType.ml[124,4406+24]..[124,4406+37])
                                                    Ppat_tuple
                                                    [
                                                      pattern (src/tokenType.ml[124,4406+25]..[124,4406+30])
                                                        Ppat_var "token" (src/tokenType.ml[124,4406+25]..[124,4406+30])
                                                      pattern (src/tokenType.ml[124,4406+32]..[124,4406+36])
                                                        Ppat_var "typo" (src/tokenType.ml[124,4406+32]..[124,4406+36])
                                                    ]
                                                  expression (src/tokenType.ml[124,4406+41]..[128,4619+11])
                                                    Pexp_record
                                                    [
                                                      "dataname" (src/tokenType.ml[125,4449+12]..[125,4449+20])
                                                        expression (src/tokenType.ml[125,4449+23]..[125,4449+43])
                                                          Pexp_apply
                                                          expression (src/tokenType.ml[125,4449+23]..[125,4449+37])
                                                            Pexp_ident "ttokengadtdata" (src/tokenType.ml[125,4449+23]..[125,4449+37])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/tokenType.ml[125,4449+38]..[125,4449+43])
                                                                Pexp_ident "token" (src/tokenType.ml[125,4449+38]..[125,4449+43])
                                                          ]
                                                      "datavalparams" (src/tokenType.ml[126,4494+12]..[126,4494+25])
                                                        expression (src/tokenType.ml[126,4494+28]..[126,4494+30])
                                                          Pexp_construct "[]" (src/tokenType.ml[126,4494+28]..[126,4494+30])
                                                          None
                                                      "datatypeparams" (src/tokenType.ml[127,4526+12]..[127,4526+26])
                                                        expression (src/tokenType.ml[127,4526+29]..[127,4526+92])
                                                          Pexp_construct "Some" (src/tokenType.ml[127,4526+29]..[127,4526+33])
                                                          Some
                                                            expression (src/tokenType.ml[127,4526+34]..[127,4526+92])
                                                              Pexp_construct "::" (src/tokenType.ml[127,4526+36]..[127,4526+92]) ghost
                                                              Some
                                                                expression (src/tokenType.ml[127,4526+36]..[127,4526+92]) ghost
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (src/tokenType.ml[127,4526+36]..[127,4526+90])
                                                                      Pexp_match
                                                                      expression (src/tokenType.ml[127,4526+42]..[127,4526+46])
Pexp_ident "typo" (src/tokenType.ml[127,4526+42]..[127,4526+46])
                                                                      [
<case>
  pattern (src/tokenType.ml[127,4526+52]..[127,4526+56])
    Ppat_construct "None" (src/tokenType.ml[127,4526+52]..[127,4526+56])
    None
  expression (src/tokenType.ml[127,4526+60]..[127,4526+65])
    Pexp_ident "tunit" (src/tokenType.ml[127,4526+60]..[127,4526+65])
<case>
  pattern (src/tokenType.ml[127,4526+68]..[127,4526+74])
    Ppat_construct "Some" (src/tokenType.ml[127,4526+68]..[127,4526+72])
    Some
      []
      pattern (src/tokenType.ml[127,4526+73]..[127,4526+74])
        Ppat_var "t" (src/tokenType.ml[127,4526+73]..[127,4526+74])
  expression (src/tokenType.ml[127,4526+78]..[127,4526+90])
    Pexp_construct "TypTextual" (src/tokenType.ml[127,4526+78]..[127,4526+88])
    Some
      expression (src/tokenType.ml[127,4526+89]..[127,4526+90])
        Pexp_ident "t" (src/tokenType.ml[127,4526+89]..[127,4526+90])
                                                                      ]
                                                                    expression (src/tokenType.ml[127,4526+91]..[127,4526+92]) ghost
                                                                      Pexp_construct "[]" (src/tokenType.ml[127,4526+91]..[127,4526+92]) ghost
                                                                      None
                                                                  ]
                                                    ]
                                                    None
                                              <arg>
                                              Nolabel
                                                expression (src/tokenType.ml[128,4619+13]..[128,4619+35])
                                                  Pexp_apply
                                                  expression (src/tokenType.ml[128,4619+14]..[128,4619+26])
                                                    Pexp_ident "typed_tokens" (src/tokenType.ml[128,4619+14]..[128,4619+26])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/tokenType.ml[128,4619+27]..[128,4619+34])
                                                        Pexp_ident "grammar" (src/tokenType.ml[128,4619+27]..[128,4619+34])
                                                  ]
                                            ]
                                        ]
                            ]
                      <case>
                        pattern (src/tokenType.ml[131,4666+6]..[131,4666+25])
                          Ppat_construct "Settings.CodeOnly" (src/tokenType.ml[131,4666+6]..[131,4666+23])
                          Some
                            []
                            pattern (src/tokenType.ml[131,4666+24]..[131,4666+25])
                              Ppat_var "m" (src/tokenType.ml[131,4666+24]..[131,4666+25])
                        expression (src/tokenType.ml[135,4730+8]..[137,4772+66])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/tokenType.ml[135,4730+12]..[135,4730+17])
                                Ppat_var "param" (src/tokenType.ml[135,4730+12]..[135,4730+17])
                              expression (src/tokenType.ml[135,4730+20]..[135,4730+23])
                                Pexp_constant PConst_string("a",(src/tokenType.ml[135,4730+21]..[135,4730+22]),None)
                          ]
                          expression (src/tokenType.ml[136,4757+8]..[137,4772+66])
                            Pexp_tuple
                            [
                              expression (src/tokenType.ml[136,4757+8]..[136,4757+13])
                                Pexp_ident "param" (src/tokenType.ml[136,4757+8]..[136,4757+13])
                              expression (src/tokenType.ml[137,4772+8]..[137,4772+66])
                                Pexp_construct "TAbbrev" (src/tokenType.ml[137,4772+8]..[137,4772+15])
                                Some
                                  expression (src/tokenType.ml[137,4772+16]..[137,4772+66])
                                    Pexp_construct "TypApp" (src/tokenType.ml[137,4772+17]..[137,4772+23])
                                    Some
                                      expression (src/tokenType.ml[137,4772+24]..[137,4772+65])
                                        Pexp_tuple
                                        [
                                          expression (src/tokenType.ml[137,4772+25]..[137,4772+46])
                                            Pexp_apply
                                            expression (src/tokenType.ml[137,4772+27]..[137,4772+28])
                                              Pexp_ident "^" (src/tokenType.ml[137,4772+27]..[137,4772+28])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/tokenType.ml[137,4772+25]..[137,4772+26])
                                                  Pexp_ident "m" (src/tokenType.ml[137,4772+25]..[137,4772+26])
                                              <arg>
                                              Nolabel
                                                expression (src/tokenType.ml[137,4772+29]..[137,4772+46])
                                                  Pexp_apply
                                                  expression (src/tokenType.ml[137,4772+33]..[137,4772+34])
                                                    Pexp_ident "^" (src/tokenType.ml[137,4772+33]..[137,4772+34])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/tokenType.ml[137,4772+29]..[137,4772+32])
                                                        Pexp_constant PConst_string(".",(src/tokenType.ml[137,4772+30]..[137,4772+31]),None)
                                                    <arg>
                                                    Nolabel
                                                      expression (src/tokenType.ml[137,4772+35]..[137,4772+46])
                                                        Pexp_ident "tctokengadt" (src/tokenType.ml[137,4772+35]..[137,4772+46])
                                                  ]
                                            ]
                                          expression (src/tokenType.ml[137,4772+48]..[137,4772+64])
                                            Pexp_construct "::" (src/tokenType.ml[137,4772+50]..[137,4772+64]) ghost
                                            Some
                                              expression (src/tokenType.ml[137,4772+50]..[137,4772+64]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (src/tokenType.ml[137,4772+50]..[137,4772+62])
                                                    Pexp_construct "TypVar" (src/tokenType.ml[137,4772+50]..[137,4772+56])
                                                    Some
                                                      expression (src/tokenType.ml[137,4772+57]..[137,4772+62])
                                                        Pexp_ident "param" (src/tokenType.ml[137,4772+57]..[137,4772+62])
                                                  expression (src/tokenType.ml[137,4772+63]..[137,4772+64]) ghost
                                                    Pexp_construct "[]" (src/tokenType.ml[137,4772+63]..[137,4772+64]) ghost
                                                    None
                                                ]
                                        ]
                            ]
                    ]
              ]
              expression (src/tokenType.ml[140,4845+2]..[148,5033+3])
                Pexp_construct "::" (src/tokenType.ml[141,4849+4]..[148,5033+3]) ghost
                Some
                  expression (src/tokenType.ml[141,4849+4]..[148,5033+3]) ghost
                    Pexp_tuple
                    [
                      expression (src/tokenType.ml[141,4849+4]..[141,4849+53])
                        Pexp_construct "IIComment" (src/tokenType.ml[141,4849+4]..[141,4849+13])
                        Some
                          expression (src/tokenType.ml[141,4849+14]..[141,4849+53])
                            Pexp_constant PConst_string("The indexed type of terminal symbols.",(src/tokenType.ml[141,4849+15]..[141,4849+52]),None)
                      expression (src/tokenType.ml[142,4904+4]..[148,5033+3]) ghost
                        Pexp_construct "::" (src/tokenType.ml[142,4904+4]..[148,5033+3]) ghost
                        Some
                          expression (src/tokenType.ml[142,4904+4]..[148,5033+3]) ghost
                            Pexp_tuple
                            [
                              expression (src/tokenType.ml[142,4904+4]..[147,5026+6])
                                Pexp_construct "IITypeDecls" (src/tokenType.ml[142,4904+4]..[142,4904+15])
                                Some
                                  expression (src/tokenType.ml[142,4904+16]..[147,5026+6])
                                    Pexp_construct "::" (src/tokenType.ml[142,4904+17]..[147,5026+6]) ghost
                                    Some
                                      expression (src/tokenType.ml[142,4904+17]..[147,5026+6]) ghost
                                        Pexp_tuple
                                        [
                                          expression (src/tokenType.ml[142,4904+17]..[147,5026+5])
                                            Pexp_record
                                            [
                                              "typename" (src/tokenType.ml[143,4923+6]..[143,4923+14])
                                                expression (src/tokenType.ml[143,4923+17]..[143,4923+28])
                                                  Pexp_ident "tctokengadt" (src/tokenType.ml[143,4923+17]..[143,4923+28])
                                              "typeparams" (src/tokenType.ml[144,4953+6]..[144,4953+16])
                                                expression (src/tokenType.ml[144,4953+19]..[144,4953+28])
                                                  Pexp_construct "::" (src/tokenType.ml[144,4953+21]..[144,4953+28]) ghost
                                                  Some
                                                    expression (src/tokenType.ml[144,4953+21]..[144,4953+28]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (src/tokenType.ml[144,4953+21]..[144,4953+26])
                                                          Pexp_ident "param" (src/tokenType.ml[144,4953+21]..[144,4953+26])
                                                        expression (src/tokenType.ml[144,4953+27]..[144,4953+28]) ghost
                                                          Pexp_construct "[]" (src/tokenType.ml[144,4953+27]..[144,4953+28]) ghost
                                                          None
                                                      ]
                                              "typerhs" (src/tokenType.ml[145,4983+6]..[145,4983+13]) ghost
                                                expression (src/tokenType.ml[145,4983+6]..[145,4983+13])
                                                  Pexp_ident "typerhs" (src/tokenType.ml[145,4983+6]..[145,4983+13])
                                              "typeconstraint" (src/tokenType.ml[146,4998+6]..[146,4998+20])
                                                expression (src/tokenType.ml[146,4998+23]..[146,4998+27])
                                                  Pexp_construct "None" (src/tokenType.ml[146,4998+23]..[146,4998+27])
                                                  None
                                            ]
                                            None
                                          expression (src/tokenType.ml[147,5026+5]..[147,5026+6]) ghost
                                            Pexp_construct "[]" (src/tokenType.ml[147,5026+5]..[147,5026+6]) ghost
                                            None
                                        ]
                              expression (src/tokenType.ml[148,5033+2]..[148,5033+3]) ghost
                                Pexp_construct "[]" (src/tokenType.ml[148,5033+2]..[148,5033+3]) ghost
                                None
                            ]
                    ]
    ]
  structure_item (src/tokenType.ml[153,5121+0]..[192,6199+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/tokenType.ml[153,5121+4]..[153,5121+22])
          Ppat_var "produce_tokentypes" (src/tokenType.ml[153,5121+4]..[153,5121+22])
        expression (src/tokenType.ml[153,5121+23]..[192,6199+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/tokenType.ml[153,5121+23]..[153,5121+30])
            Ppat_var "grammar" (src/tokenType.ml[153,5121+23]..[153,5121+30])
          expression (src/tokenType.ml[154,5154+2]..[192,6199+8])
            Pexp_match
            expression (src/tokenType.ml[154,5154+8]..[154,5154+32])
              Pexp_ident "Settings.token_type_mode" (src/tokenType.ml[154,5154+8]..[154,5154+32])
            [
              <case>
                pattern (src/tokenType.ml[155,5192+4]..[155,5192+26])
                  Ppat_construct "Settings.TokenTypeOnly" (src/tokenType.ml[155,5192+4]..[155,5192+26])
                  None
                expression (src/tokenType.ml[161,5396+6]..[188,6128+12])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/tokenType.ml[161,5396+10]..[161,5396+11])
                        Ppat_var "i" (src/tokenType.ml[161,5396+10]..[161,5396+11])
                      expression (src/tokenType.ml[162,5410+8]..[165,5519+9])
                        Pexp_apply
                        expression (src/tokenType.ml[162,5410+29]..[162,5410+30])
                          Pexp_ident "@" (src/tokenType.ml[162,5410+29]..[162,5410+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/tokenType.ml[162,5410+8]..[162,5410+28])
                              Pexp_apply
                              expression (src/tokenType.ml[162,5410+8]..[162,5410+20])
                                Pexp_ident "tokentypedef" (src/tokenType.ml[162,5410+8]..[162,5410+20])
                              [
                                <arg>
                                Nolabel
                                  expression (src/tokenType.ml[162,5410+21]..[162,5410+28])
                                    Pexp_ident "grammar" (src/tokenType.ml[162,5410+21]..[162,5410+28])
                              ]
                          <arg>
                          Nolabel
                            expression (src/tokenType.ml[163,5441+8]..[165,5519+9])
                              Pexp_apply
                              expression (src/tokenType.ml[163,5441+8]..[163,5441+15])
                                Pexp_ident "ifnlazy" (src/tokenType.ml[163,5441+8]..[163,5441+15])
                              [
                                <arg>
                                Nolabel
                                  expression (src/tokenType.ml[163,5441+16]..[163,5441+35])
                                    Pexp_ident "Settings.inspection" (src/tokenType.ml[163,5441+16]..[163,5441+35])
                                <arg>
                                Nolabel
                                  expression (src/tokenType.ml[163,5441+36]..[165,5519+9])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/tokenType.ml[163,5441+41]..[163,5441+43])
                                      Ppat_construct "()" (src/tokenType.ml[163,5441+41]..[163,5441+43])
                                      None
                                    expression (src/tokenType.ml[164,5488+10]..[164,5488+30])
                                      Pexp_apply
                                      expression (src/tokenType.ml[164,5488+10]..[164,5488+22])
                                        Pexp_ident "tokengadtdef" (src/tokenType.ml[164,5488+10]..[164,5488+22])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/tokenType.ml[164,5488+23]..[164,5488+30])
                                            Pexp_ident "grammar" (src/tokenType.ml[164,5488+23]..[164,5488+30])
                                      ]
                              ]
                        ]
                  ]
                  expression (src/tokenType.ml[168,5539+6]..[188,6128+12])
                    Pexp_letmodule "P" (src/tokenType.ml[168,5539+17]..[168,5539+18])
                    module_expr (src/tokenType.ml[169,5560+8]..[172,5707+26])
                      Pmod_apply
                      module_expr (src/tokenType.ml[169,5560+8]..[169,5560+20])
                        Pmod_ident "Printer.Make" (src/tokenType.ml[169,5560+8]..[169,5560+20])
                      module_expr (src/tokenType.ml[169,5560+22]..[172,5707+25])
                        Pmod_structure
                        [
                          structure_item (src/tokenType.ml[170,5589+24]..[170,5589+65])
                            Pstr_value Nonrec
                            [
                              <def>
                                pattern (src/tokenType.ml[170,5589+28]..[170,5589+29])
                                  Ppat_var "f" (src/tokenType.ml[170,5589+28]..[170,5589+29])
                                expression (src/tokenType.ml[170,5589+32]..[170,5589+65])
                                  Pexp_apply
                                  expression (src/tokenType.ml[170,5589+32]..[170,5589+40])
                                    Pexp_ident "open_out" (src/tokenType.ml[170,5589+32]..[170,5589+40])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/tokenType.ml[170,5589+41]..[170,5589+65])
                                        Pexp_apply
                                        expression (src/tokenType.ml[170,5589+56]..[170,5589+57])
                                          Pexp_ident "^" (src/tokenType.ml[170,5589+56]..[170,5589+57])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/tokenType.ml[170,5589+42]..[170,5589+55])
                                              Pexp_ident "Settings.base" (src/tokenType.ml[170,5589+42]..[170,5589+55])
                                          <arg>
                                          Nolabel
                                            expression (src/tokenType.ml[170,5589+58]..[170,5589+64])
                                              Pexp_constant PConst_string(".mli",(src/tokenType.ml[170,5589+59]..[170,5589+63]),None)
                                        ]
                                  ]
                            ]
                          structure_item (src/tokenType.ml[171,5655+24]..[171,5655+51])
                            Pstr_value Nonrec
                            [
                              <def>
                                pattern (src/tokenType.ml[171,5655+28]..[171,5655+44])
                                  Ppat_var "locate_stretches" (src/tokenType.ml[171,5655+28]..[171,5655+44])
                                expression (src/tokenType.ml[171,5655+47]..[171,5655+51])
                                  Pexp_construct "None" (src/tokenType.ml[171,5655+47]..[171,5655+51])
                                  None
                            ]
                        ]
                    expression (src/tokenType.ml[174,5743+6]..[188,6128+12])
                      Pexp_sequence
                      expression (src/tokenType.ml[174,5743+6]..[176,5805+7])
                        Pexp_apply
                        expression (src/tokenType.ml[174,5743+6]..[174,5743+17])
                          Pexp_ident "P.interface" (src/tokenType.ml[174,5743+6]..[174,5743+17])
                        [
                          <arg>
                          Nolabel
                            expression (src/tokenType.ml[174,5743+18]..[176,5805+7])
                              Pexp_construct "::" (src/tokenType.ml[175,5763+8]..[176,5805+7]) ghost
                              Some
                                expression (src/tokenType.ml[175,5763+8]..[176,5805+7]) ghost
                                  Pexp_tuple
                                  [
                                    expression (src/tokenType.ml[175,5763+8]..[175,5763+41])
                                      Pexp_construct "IIFunctor" (src/tokenType.ml[175,5763+8]..[175,5763+17])
                                      Some
                                        expression (src/tokenType.ml[175,5763+18]..[175,5763+41])
                                          Pexp_tuple
                                          [
                                            expression (src/tokenType.ml[175,5763+19]..[175,5763+37])
                                              Pexp_field
                                              expression (src/tokenType.ml[175,5763+19]..[175,5763+26])
                                                Pexp_ident "grammar" (src/tokenType.ml[175,5763+19]..[175,5763+26])
                                              "parameters" (src/tokenType.ml[175,5763+27]..[175,5763+37])
                                            expression (src/tokenType.ml[175,5763+39]..[175,5763+40])
                                              Pexp_ident "i" (src/tokenType.ml[175,5763+39]..[175,5763+40])
                                          ]
                                    expression (src/tokenType.ml[176,5805+6]..[176,5805+7]) ghost
                                      Pexp_construct "[]" (src/tokenType.ml[176,5805+6]..[176,5805+7]) ghost
                                      None
                                  ]
                        ]
                      expression (src/tokenType.ml[177,5814+6]..[188,6128+12])
                        Pexp_letmodule "P" (src/tokenType.ml[177,5814+17]..[177,5814+18])
                        module_expr (src/tokenType.ml[178,5835+8]..[181,5981+26])
                          Pmod_apply
                          module_expr (src/tokenType.ml[178,5835+8]..[178,5835+20])
                            Pmod_ident "Printer.Make" (src/tokenType.ml[178,5835+8]..[178,5835+20])
                          module_expr (src/tokenType.ml[178,5835+22]..[181,5981+25])
                            Pmod_structure
                            [
                              structure_item (src/tokenType.ml[179,5864+24]..[179,5864+64])
                                Pstr_value Nonrec
                                [
                                  <def>
                                    pattern (src/tokenType.ml[179,5864+28]..[179,5864+29])
                                      Ppat_var "f" (src/tokenType.ml[179,5864+28]..[179,5864+29])
                                    expression (src/tokenType.ml[179,5864+32]..[179,5864+64])
                                      Pexp_apply
                                      expression (src/tokenType.ml[179,5864+32]..[179,5864+40])
                                        Pexp_ident "open_out" (src/tokenType.ml[179,5864+32]..[179,5864+40])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/tokenType.ml[179,5864+41]..[179,5864+64])
                                            Pexp_apply
                                            expression (src/tokenType.ml[179,5864+56]..[179,5864+57])
                                              Pexp_ident "^" (src/tokenType.ml[179,5864+56]..[179,5864+57])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/tokenType.ml[179,5864+42]..[179,5864+55])
                                                  Pexp_ident "Settings.base" (src/tokenType.ml[179,5864+42]..[179,5864+55])
                                              <arg>
                                              Nolabel
                                                expression (src/tokenType.ml[179,5864+58]..[179,5864+63])
                                                  Pexp_constant PConst_string(".ml",(src/tokenType.ml[179,5864+59]..[179,5864+62]),None)
                                            ]
                                      ]
                                ]
                              structure_item (src/tokenType.ml[180,5929+24]..[180,5929+51])
                                Pstr_value Nonrec
                                [
                                  <def>
                                    pattern (src/tokenType.ml[180,5929+28]..[180,5929+44])
                                      Ppat_var "locate_stretches" (src/tokenType.ml[180,5929+28]..[180,5929+44])
                                    expression (src/tokenType.ml[180,5929+47]..[180,5929+51])
                                      Pexp_construct "None" (src/tokenType.ml[180,5929+47]..[180,5929+51])
                                      None
                                ]
                            ]
                        expression (src/tokenType.ml[183,6017+6]..[188,6128+12])
                          Pexp_sequence
                          expression (src/tokenType.ml[183,6017+6]..[187,6119+7])
                            Pexp_apply
                            expression (src/tokenType.ml[183,6017+6]..[183,6017+15])
                              Pexp_ident "P.program" (src/tokenType.ml[183,6017+6]..[183,6017+15])
                            [
                              <arg>
                              Nolabel
                                expression (src/tokenType.ml[183,6017+16]..[187,6119+7])
                                  Pexp_construct "::" (src/tokenType.ml[184,6035+8]..[187,6119+7]) ghost
                                  Some
                                    expression (src/tokenType.ml[184,6035+8]..[187,6119+7]) ghost
                                      Pexp_tuple
                                      [
                                        expression (src/tokenType.ml[184,6035+8]..[186,6109+9])
                                          Pexp_construct "SIFunctor" (src/tokenType.ml[184,6035+8]..[184,6035+17])
                                          Some
                                            expression (src/tokenType.ml[184,6035+18]..[186,6109+9])
                                              Pexp_tuple
                                              [
                                                expression (src/tokenType.ml[184,6035+19]..[184,6035+37])
                                                  Pexp_field
                                                  expression (src/tokenType.ml[184,6035+19]..[184,6035+26])
                                                    Pexp_ident "grammar" (src/tokenType.ml[184,6035+19]..[184,6035+26])
                                                  "parameters" (src/tokenType.ml[184,6035+27]..[184,6035+37])
                                                expression (src/tokenType.ml[185,6074+10]..[185,6074+34])
                                                  Pexp_apply
                                                  expression (src/tokenType.ml[185,6074+10]..[185,6074+32])
                                                    Pexp_ident "interface_to_structure" (src/tokenType.ml[185,6074+10]..[185,6074+32])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/tokenType.ml[185,6074+33]..[185,6074+34])
                                                        Pexp_ident "i" (src/tokenType.ml[185,6074+33]..[185,6074+34])
                                                  ]
                                              ]
                                        expression (src/tokenType.ml[187,6119+6]..[187,6119+7]) ghost
                                          Pexp_construct "[]" (src/tokenType.ml[187,6119+6]..[187,6119+7]) ghost
                                          None
                                      ]
                            ]
                          expression (src/tokenType.ml[188,6128+6]..[188,6128+12])
                            Pexp_apply
                            expression (src/tokenType.ml[188,6128+6]..[188,6128+10])
                              Pexp_ident "exit" (src/tokenType.ml[188,6128+6]..[188,6128+10])
                            [
                              <arg>
                              Nolabel
                                expression (src/tokenType.ml[188,6128+11]..[188,6128+12])
                                  Pexp_constant PConst_int (0,None)
                            ]
              <case>
                pattern (src/tokenType.ml[190,6142+4]..[191,6166+29])
                  Ppat_or
                  pattern (src/tokenType.ml[190,6142+4]..[190,6142+23])
                    Ppat_construct "Settings.CodeOnly" (src/tokenType.ml[190,6142+4]..[190,6142+21])
                    Some
                      []
                      pattern (src/tokenType.ml[190,6142+22]..[190,6142+23])
                        Ppat_any
                  pattern (src/tokenType.ml[191,6166+4]..[191,6166+29])
                    Ppat_construct "Settings.TokenTypeAndCode" (src/tokenType.ml[191,6166+4]..[191,6166+29])
                    None
                expression (src/tokenType.ml[192,6199+6]..[192,6199+8])
                  Pexp_construct "()" (src/tokenType.ml[192,6199+6]..[192,6199+8])
                  None
            ]
    ]
  structure_item (src/tokenType.ml[199,6475+0]..[206,6652+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/tokenType.ml[199,6475+4]..[199,6475+15])
          Ppat_var "tokenprefix" (src/tokenType.ml[199,6475+4]..[199,6475+15])
        expression (src/tokenType.ml[199,6475+16]..[206,6652+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/tokenType.ml[199,6475+16]..[199,6475+18])
            Ppat_var "id" (src/tokenType.ml[199,6475+16]..[199,6475+18])
          expression (src/tokenType.ml[200,6496+2]..[206,6652+8])
            Pexp_match
            expression (src/tokenType.ml[200,6496+8]..[200,6496+32])
              Pexp_ident "Settings.token_type_mode" (src/tokenType.ml[200,6496+8]..[200,6496+32])
            [
              <case>
                pattern (src/tokenType.ml[201,6534+4]..[201,6534+23])
                  Ppat_construct "Settings.CodeOnly" (src/tokenType.ml[201,6534+4]..[201,6534+21])
                  Some
                    []
                    pattern (src/tokenType.ml[201,6534+22]..[201,6534+23])
                      Ppat_var "m" (src/tokenType.ml[201,6534+22]..[201,6534+23])
                expression (src/tokenType.ml[202,6561+6]..[202,6561+18])
                  Pexp_apply
                  expression (src/tokenType.ml[202,6561+8]..[202,6561+9])
                    Pexp_ident "^" (src/tokenType.ml[202,6561+8]..[202,6561+9])
                  [
                    <arg>
                    Nolabel
                      expression (src/tokenType.ml[202,6561+6]..[202,6561+7])
                        Pexp_ident "m" (src/tokenType.ml[202,6561+6]..[202,6561+7])
                    <arg>
                    Nolabel
                      expression (src/tokenType.ml[202,6561+10]..[202,6561+18])
                        Pexp_apply
                        expression (src/tokenType.ml[202,6561+14]..[202,6561+15])
                          Pexp_ident "^" (src/tokenType.ml[202,6561+14]..[202,6561+15])
                        [
                          <arg>
                          Nolabel
                            expression (src/tokenType.ml[202,6561+10]..[202,6561+13])
                              Pexp_constant PConst_string(".",(src/tokenType.ml[202,6561+11]..[202,6561+12]),None)
                          <arg>
                          Nolabel
                            expression (src/tokenType.ml[202,6561+16]..[202,6561+18])
                              Pexp_ident "id" (src/tokenType.ml[202,6561+16]..[202,6561+18])
                        ]
                  ]
              <case>
                pattern (src/tokenType.ml[203,6580+4]..[203,6580+29])
                  Ppat_construct "Settings.TokenTypeAndCode" (src/tokenType.ml[203,6580+4]..[203,6580+29])
                  None
                expression (src/tokenType.ml[204,6613+6]..[204,6613+8])
                  Pexp_ident "id" (src/tokenType.ml[204,6613+6]..[204,6613+8])
              <case>
                pattern (src/tokenType.ml[205,6622+4]..[205,6622+26])
                  Ppat_construct "Settings.TokenTypeOnly" (src/tokenType.ml[205,6622+4]..[205,6622+26])
                  None
                expression (src/tokenType.ml[206,6652+6]..[206,6652+8])
                  Pexp_ident "id" (src/tokenType.ml[206,6652+6]..[206,6652+8])
            ]
    ]
  structure_item (src/tokenType.ml[208,6687+0]..[209,6703+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/tokenType.ml[208,6687+4]..[208,6687+13])
          Ppat_var "tokendata" (src/tokenType.ml[208,6687+4]..[208,6687+13])
        expression (src/tokenType.ml[209,6703+2]..[209,6703+13])
          Pexp_ident "tokenprefix" (src/tokenType.ml[209,6703+2]..[209,6703+13])
    ]
  structure_item (src/tokenType.ml[211,6718+0]..[212,6744+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/tokenType.ml[211,6718+4]..[211,6718+17])
          Ppat_var "tokengadtdata" (src/tokenType.ml[211,6718+4]..[211,6718+17])
        expression (src/tokenType.ml[211,6718+18]..[212,6744+36]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/tokenType.ml[211,6718+18]..[211,6718+23])
            Ppat_var "token" (src/tokenType.ml[211,6718+18]..[211,6718+23])
          expression (src/tokenType.ml[212,6744+2]..[212,6744+36])
            Pexp_apply
            expression (src/tokenType.ml[212,6744+2]..[212,6744+13])
              Pexp_ident "tokenprefix" (src/tokenType.ml[212,6744+2]..[212,6744+13])
            [
              <arg>
              Nolabel
                expression (src/tokenType.ml[212,6744+14]..[212,6744+36])
                  Pexp_apply
                  expression (src/tokenType.ml[212,6744+15]..[212,6744+29])
                    Pexp_ident "ttokengadtdata" (src/tokenType.ml[212,6744+15]..[212,6744+29])
                  [
                    <arg>
                    Nolabel
                      expression (src/tokenType.ml[212,6744+30]..[212,6744+35])
                        Pexp_ident "token" (src/tokenType.ml[212,6744+30]..[212,6744+35])
                  ]
            ]
    ]
]

open BasicSyntax
open IL
open CodeBits
let tctoken = "token"
let ttoken = TypApp (tctoken, [])
let tctokengadt = "terminal"
let ttokengadt a = TypApp (tctokengadt, [a])
let ttokengadtdata token = "T_" ^ token
let tokentypedef grammar =
  let typerhs =
    match Settings.token_type_mode with
    | Settings.TokenTypeOnly | Settings.TokenTypeAndCode ->
        TDefSum
          (List.map
             (fun (tok, typo) ->
                {
                  dataname = tok;
                  datavalparams =
                    (match typo with | None -> [] | Some t -> [TypTextual t]);
                  datatypeparams = None
                }) (typed_tokens grammar))
    | Settings.CodeOnly m -> TAbbrev (TypApp ((m ^ ("." ^ tctoken)), [])) in
  [IIComment "The type of tokens.";
  IITypeDecls
    [{ typename = tctoken; typeparams = []; typerhs; typeconstraint = None }]]
let tokengadtdef grammar =
  assert Settings.inspection;
  (let (param, typerhs) =
     match Settings.token_type_mode with
     | Settings.TokenTypeOnly | Settings.TokenTypeAndCode ->
         let param = "_" in
         (param,
           (TDefSum
              ({
                 dataname = (ttokengadtdata "error");
                 datavalparams = [];
                 datatypeparams = (Some [tunit])
               }
              ::
              (List.map
                 (fun (token, typo) ->
                    {
                      dataname = (ttokengadtdata token);
                      datavalparams = [];
                      datatypeparams =
                        (Some
                           [(match typo with
                             | None -> tunit
                             | Some t -> TypTextual t)])
                    }) (typed_tokens grammar)))))
     | Settings.CodeOnly m ->
         let param = "a" in
         (param,
           (TAbbrev (TypApp ((m ^ ("." ^ tctokengadt)), [TypVar param])))) in
   [IIComment "The indexed type of terminal symbols.";
   IITypeDecls
     [{
        typename = tctokengadt;
        typeparams = [param];
        typerhs;
        typeconstraint = None
      }]])
let produce_tokentypes grammar =
  match Settings.token_type_mode with
  | Settings.TokenTypeOnly ->
      let i =
        (tokentypedef grammar) @
          (ifnlazy Settings.inspection (fun () -> tokengadtdef grammar)) in
      let module P =
        (Printer.Make)(struct
                         let f = open_out (Settings.base ^ ".mli")
                         let locate_stretches = None
                       end) in
        (P.interface [IIFunctor ((grammar.parameters), i)];
         (let module P =
            (Printer.Make)(struct
                             let f = open_out (Settings.base ^ ".ml")
                             let locate_stretches = None
                           end) in
            P.program
              [SIFunctor ((grammar.parameters), (interface_to_structure i))];
            exit 0))
  | Settings.CodeOnly _ | Settings.TokenTypeAndCode -> ()
let tokenprefix id =
  match Settings.token_type_mode with
  | Settings.CodeOnly m -> m ^ ("." ^ id)
  | Settings.TokenTypeAndCode -> id
  | Settings.TokenTypeOnly -> id
let tokendata = tokenprefix
let tokengadtdata token = tokenprefix (ttokengadtdata token)
[
  structure_item (src/tokenType.ml[18,1184+0]..src/tokenType.ml[18,1184+16])
    Tstr_open Fresh
    module_expr (src/tokenType.ml[18,1184+5]..src/tokenType.ml[18,1184+16])
      Tmod_ident "Dune__exe!.BasicSyntax"
  structure_item (src/tokenType.ml[19,1201+0]..src/tokenType.ml[19,1201+7])
    Tstr_open Fresh
    module_expr (src/tokenType.ml[19,1201+5]..src/tokenType.ml[19,1201+7])
      Tmod_ident "Dune__exe!.IL"
  structure_item (src/tokenType.ml[20,1209+0]..src/tokenType.ml[20,1209+13])
    Tstr_open Fresh
    module_expr (src/tokenType.ml[20,1209+5]..src/tokenType.ml[20,1209+13])
      Tmod_ident "Dune__exe!.CodeBits"
  structure_item (src/tokenType.ml[26,1399+0]..src/tokenType.ml[27,1413+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/tokenType.ml[26,1399+4]..src/tokenType.ml[26,1399+11])
          Tpat_var "tctoken/491"
        expression (src/tokenType.ml[27,1413+2]..src/tokenType.ml[27,1413+9])
          Texp_constant Const_string("token",(src/tokenType.ml[27,1413+3]..src/tokenType.ml[27,1413+8]),None)
    ]
  structure_item (src/tokenType.ml[29,1424+0]..src/tokenType.ml[30,1437+22])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/tokenType.ml[29,1424+4]..src/tokenType.ml[29,1424+10])
          Tpat_var "ttoken/492"
        expression (src/tokenType.ml[30,1437+2]..src/tokenType.ml[30,1437+22])
          Texp_construct "TypApp"
          [
            expression (src/tokenType.ml[30,1437+10]..src/tokenType.ml[30,1437+17])
              Texp_ident "tctoken/491"
            expression (src/tokenType.ml[30,1437+19]..src/tokenType.ml[30,1437+21])
              Texp_construct "[]"
              []
          ]
    ]
  structure_item (src/tokenType.ml[35,1569+0]..src/tokenType.ml[36,1587+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/tokenType.ml[35,1569+4]..src/tokenType.ml[35,1569+15])
          Tpat_var "tctokengadt/493"
        expression (src/tokenType.ml[36,1587+2]..src/tokenType.ml[36,1587+12])
          Texp_constant Const_string("terminal",(src/tokenType.ml[36,1587+3]..src/tokenType.ml[36,1587+11]),None)
    ]
  structure_item (src/tokenType.ml[38,1601+0]..src/tokenType.ml[39,1620+29])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/tokenType.ml[38,1601+4]..src/tokenType.ml[38,1601+14])
          Tpat_var "ttokengadt/494"
        expression (src/tokenType.ml[38,1601+15]..src/tokenType.ml[39,1620+29]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/tokenType.ml[38,1601+15]..src/tokenType.ml[38,1601+16])
                Tpat_var "a/496"
              expression (src/tokenType.ml[39,1620+2]..src/tokenType.ml[39,1620+29])
                Texp_construct "TypApp"
                [
                  expression (src/tokenType.ml[39,1620+10]..src/tokenType.ml[39,1620+21])
                    Texp_ident "tctokengadt/493"
                  expression (src/tokenType.ml[39,1620+23]..src/tokenType.ml[39,1620+28])
                    Texp_construct "::"
                    [
                      expression (src/tokenType.ml[39,1620+25]..src/tokenType.ml[39,1620+26])
                        Texp_ident "a/496"
                      expression (src/tokenType.ml[39,1620+27]..src/tokenType.ml[39,1620+28]) ghost
                        Texp_construct "[]"
                        []
                    ]
                ]
          ]
    ]
  structure_item (src/tokenType.ml[44,1735+0]..src/tokenType.ml[45,1762+14])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/tokenType.ml[44,1735+4]..src/tokenType.ml[44,1735+18])
          Tpat_var "ttokengadtdata/524"
        expression (src/tokenType.ml[44,1735+19]..src/tokenType.ml[45,1762+14]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/tokenType.ml[44,1735+19]..src/tokenType.ml[44,1735+24])
                Tpat_var "token/526"
              expression (src/tokenType.ml[45,1762+2]..src/tokenType.ml[45,1762+14])
                Texp_apply
                expression (src/tokenType.ml[45,1762+7]..src/tokenType.ml[45,1762+8])
                  Texp_ident "Stdlib!.^"
                [
                  <arg>
                    Nolabel
                    expression (src/tokenType.ml[45,1762+2]..src/tokenType.ml[45,1762+6])
                      Texp_constant Const_string("T_",(src/tokenType.ml[45,1762+3]..src/tokenType.ml[45,1762+5]),None)
                  <arg>
                    Nolabel
                    expression (src/tokenType.ml[45,1762+9]..src/tokenType.ml[45,1762+14])
                      Texp_ident "token/526"
                ]
          ]
    ]
  structure_item (src/tokenType.ml[51,1986+0]..src/tokenType.ml[82,2703+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/tokenType.ml[51,1986+4]..src/tokenType.ml[51,1986+16])
          Tpat_var "tokentypedef/527"
        expression (src/tokenType.ml[51,1986+17]..src/tokenType.ml[82,2703+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/tokenType.ml[51,1986+17]..src/tokenType.ml[51,1986+24])
                Tpat_var "grammar/529"
              expression (src/tokenType.ml[52,2013+2]..src/tokenType.ml[82,2703+3])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/tokenType.ml[52,2013+6]..src/tokenType.ml[52,2013+13])
                      Tpat_var "typerhs/530"
                    expression (src/tokenType.ml[53,2029+4]..src/tokenType.ml[71,2489+48])
                      Texp_match
                      expression (src/tokenType.ml[53,2029+10]..src/tokenType.ml[53,2029+34])
                        Texp_ident "Dune__exe!.Settings.token_type_mode"
                      [
                        <case>
                          pattern (src/tokenType.ml[54,2069+6]..src/tokenType.ml[55,2098+31])
                            Tpat_or
                            pattern (src/tokenType.ml[54,2069+6]..src/tokenType.ml[54,2069+28])
                              Tpat_value
                              pattern (src/tokenType.ml[54,2069+6]..src/tokenType.ml[54,2069+28])
                                Tpat_construct "Settings.TokenTypeOnly"
                                []
                                None
                            pattern (src/tokenType.ml[55,2098+6]..src/tokenType.ml[55,2098+31])
                              Tpat_value
                              pattern (src/tokenType.ml[55,2098+6]..src/tokenType.ml[55,2098+31])
                                Tpat_construct "Settings.TokenTypeAndCode"
                                []
                                None
                          expression (src/tokenType.ml[59,2170+8]..src/tokenType.ml[65,2414+9])
                            Texp_construct "TDefSum"
                            [
                              expression (src/tokenType.ml[59,2170+16]..src/tokenType.ml[65,2414+9])
                                Texp_apply
                                expression (src/tokenType.ml[60,2188+10]..src/tokenType.ml[60,2188+18])
                                  Texp_ident "Stdlib!.List.map"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/tokenType.ml[60,2188+19]..src/tokenType.ml[64,2378+12])
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (src/tokenType.ml[60,2188+24]..src/tokenType.ml[60,2188+35])
                                            Tpat_tuple
                                            [
                                              pattern (src/tokenType.ml[60,2188+25]..src/tokenType.ml[60,2188+28])
                                                Tpat_var "tok/718"
                                              pattern (src/tokenType.ml[60,2188+30]..src/tokenType.ml[60,2188+34])
                                                Tpat_var "typo/719"
                                            ]
                                          expression (src/tokenType.ml[60,2188+39]..src/tokenType.ml[64,2378+11])
                                            Texp_record
                                              fields =
                                                [
                                                  "dataname"
                                                    expression (src/tokenType.ml[61,2229+23]..src/tokenType.ml[61,2229+26])
                                                      Texp_ident "tok/718"
                                                  "datavalparams"
                                                    expression (src/tokenType.ml[62,2257+28]..src/tokenType.ml[62,2257+85])
                                                      Texp_match
                                                      expression (src/tokenType.ml[62,2257+35]..src/tokenType.ml[62,2257+39])
                                                        Texp_ident "typo/719"
                                                      [
                                                        <case>
                                                          pattern (src/tokenType.ml[62,2257+45]..src/tokenType.ml[62,2257+49])
                                                            Tpat_value
                                                            pattern (src/tokenType.ml[62,2257+45]..src/tokenType.ml[62,2257+49])
                                                              Tpat_construct "None"
                                                              []
                                                              None
                                                          expression (src/tokenType.ml[62,2257+53]..src/tokenType.ml[62,2257+55])
                                                            Texp_construct "[]"
                                                            []
                                                        <case>
                                                          pattern (src/tokenType.ml[62,2257+58]..src/tokenType.ml[62,2257+64])
                                                            Tpat_value
                                                            pattern (src/tokenType.ml[62,2257+58]..src/tokenType.ml[62,2257+64])
                                                              Tpat_construct "Some"
                                                              [
                                                                pattern (src/tokenType.ml[62,2257+63]..src/tokenType.ml[62,2257+64])
                                                                  Tpat_var "t/720"
                                                              ]
                                                              None
                                                          expression (src/tokenType.ml[62,2257+68]..src/tokenType.ml[62,2257+84])
                                                            Texp_construct "::"
                                                            [
                                                              expression (src/tokenType.ml[62,2257+70]..src/tokenType.ml[62,2257+82])
                                                                Texp_construct "TypTextual"
                                                                [
                                                                  expression (src/tokenType.ml[62,2257+81]..src/tokenType.ml[62,2257+82])
                                                                    Texp_ident "t/720"
                                                                ]
                                                              expression (src/tokenType.ml[62,2257+83]..src/tokenType.ml[62,2257+84]) ghost
                                                                Texp_construct "[]"
                                                                []
                                                            ]
                                                      ]
                                                  "datatypeparams"
                                                    expression (src/tokenType.ml[63,2344+29]..src/tokenType.ml[63,2344+33])
                                                      Texp_construct "None"
                                                      []
                                                ]
                                              representation =
                                                Record_regular
                                              extended_expression =
                                                None
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/tokenType.ml[64,2378+13]..src/tokenType.ml[64,2378+35])
                                      Texp_apply
                                      expression (src/tokenType.ml[64,2378+14]..src/tokenType.ml[64,2378+26])
                                        Texp_ident "Dune__exe!.BasicSyntax.typed_tokens"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/tokenType.ml[64,2378+27]..src/tokenType.ml[64,2378+34])
                                            Texp_ident "grammar/529"
                                      ]
                                ]
                            ]
                        <case>
                          pattern (src/tokenType.ml[67,2425+6]..src/tokenType.ml[67,2425+25])
                            Tpat_value
                            pattern (src/tokenType.ml[67,2425+6]..src/tokenType.ml[67,2425+25])
                              Tpat_construct "Settings.CodeOnly"
                              [
                                pattern (src/tokenType.ml[67,2425+24]..src/tokenType.ml[67,2425+25])
                                  Tpat_var "m/651"
                              ]
                              None
                          expression (src/tokenType.ml[71,2489+8]..src/tokenType.ml[71,2489+48])
                            Texp_construct "TAbbrev"
                            [
                              expression (src/tokenType.ml[71,2489+16]..src/tokenType.ml[71,2489+48])
                                Texp_construct "TypApp"
                                [
                                  expression (src/tokenType.ml[71,2489+25]..src/tokenType.ml[71,2489+42])
                                    Texp_apply
                                    expression (src/tokenType.ml[71,2489+27]..src/tokenType.ml[71,2489+28])
                                      Texp_ident "Stdlib!.^"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/tokenType.ml[71,2489+25]..src/tokenType.ml[71,2489+26])
                                          Texp_ident "m/651"
                                      <arg>
                                        Nolabel
                                        expression (src/tokenType.ml[71,2489+29]..src/tokenType.ml[71,2489+42])
                                          Texp_apply
                                          expression (src/tokenType.ml[71,2489+33]..src/tokenType.ml[71,2489+34])
                                            Texp_ident "Stdlib!.^"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/tokenType.ml[71,2489+29]..src/tokenType.ml[71,2489+32])
                                                Texp_constant Const_string(".",(src/tokenType.ml[71,2489+30]..src/tokenType.ml[71,2489+31]),None)
                                            <arg>
                                              Nolabel
                                              expression (src/tokenType.ml[71,2489+35]..src/tokenType.ml[71,2489+42])
                                                Texp_ident "tctoken/491"
                                          ]
                                    ]
                                  expression (src/tokenType.ml[71,2489+44]..src/tokenType.ml[71,2489+46])
                                    Texp_construct "[]"
                                    []
                                ]
                            ]
                      ]
                ]
                expression (src/tokenType.ml[74,2544+2]..src/tokenType.ml[82,2703+3])
                  Texp_construct "::"
                  [
                    expression (src/tokenType.ml[75,2548+4]..src/tokenType.ml[75,2548+35])
                      Texp_construct "IIComment"
                      [
                        expression (src/tokenType.ml[75,2548+14]..src/tokenType.ml[75,2548+35])
                          Texp_constant Const_string("The type of tokens.",(src/tokenType.ml[75,2548+15]..src/tokenType.ml[75,2548+34]),None)
                      ]
                    expression (src/tokenType.ml[76,2585+4]..src/tokenType.ml[82,2703+3]) ghost
                      Texp_construct "::"
                      [
                        expression (src/tokenType.ml[76,2585+4]..src/tokenType.ml[81,2696+6])
                          Texp_construct "IITypeDecls"
                          [
                            expression (src/tokenType.ml[76,2585+16]..src/tokenType.ml[81,2696+6])
                              Texp_construct "::"
                              [
                                expression (src/tokenType.ml[76,2585+17]..src/tokenType.ml[81,2696+5])
                                  Texp_record
                                    fields =
                                      [
                                        "typename"
                                          expression (src/tokenType.ml[77,2604+17]..src/tokenType.ml[77,2604+24])
                                            Texp_ident "tctoken/491"
                                        "typeparams"
                                          expression (src/tokenType.ml[78,2630+19]..src/tokenType.ml[78,2630+21])
                                            Texp_construct "[]"
                                            []
                                        "typerhs"
                                          expression (src/tokenType.ml[79,2653+6]..src/tokenType.ml[79,2653+13])
                                            Texp_ident "typerhs/530"
                                        "typeconstraint"
                                          expression (src/tokenType.ml[80,2668+23]..src/tokenType.ml[80,2668+27])
                                            Texp_construct "None"
                                            []
                                      ]
                                    representation =
                                      Record_regular
                                    extended_expression =
                                      None
                                expression (src/tokenType.ml[81,2696+5]..src/tokenType.ml[81,2696+6]) ghost
                                  Texp_construct "[]"
                                  []
                              ]
                          ]
                        expression (src/tokenType.ml[82,2703+2]..src/tokenType.ml[82,2703+3]) ghost
                          Texp_construct "[]"
                          []
                      ]
                  ]
          ]
    ]
  structure_item (src/tokenType.ml[100,3475+0]..src/tokenType.ml[148,5033+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/tokenType.ml[100,3475+4]..src/tokenType.ml[100,3475+16])
          Tpat_var "tokengadtdef/794"
        expression (src/tokenType.ml[100,3475+17]..src/tokenType.ml[148,5033+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/tokenType.ml[100,3475+17]..src/tokenType.ml[100,3475+24])
                Tpat_var "grammar/796"
              expression (src/tokenType.ml[101,3502+2]..src/tokenType.ml[148,5033+3])
                Texp_sequence
                expression (src/tokenType.ml[101,3502+2]..src/tokenType.ml[101,3502+28])
                  Texp_assert                  expression (src/tokenType.ml[101,3502+9]..src/tokenType.ml[101,3502+28])
                    Texp_ident "Dune__exe!.Settings.inspection"
                expression (src/tokenType.ml[102,3532+2]..src/tokenType.ml[148,5033+3])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (src/tokenType.ml[102,3532+6]..src/tokenType.ml[102,3532+20])
                        Tpat_tuple
                        [
                          pattern (src/tokenType.ml[102,3532+6]..src/tokenType.ml[102,3532+11])
                            Tpat_var "param/797"
                          pattern (src/tokenType.ml[102,3532+13]..src/tokenType.ml[102,3532+20])
                            Tpat_var "typerhs/798"
                        ]
                      expression (src/tokenType.ml[103,3555+4]..src/tokenType.ml[137,4772+66])
                        Texp_match
                        expression (src/tokenType.ml[103,3555+10]..src/tokenType.ml[103,3555+34])
                          Texp_ident "Dune__exe!.Settings.token_type_mode"
                        [
                          <case>
                            pattern (src/tokenType.ml[104,3595+6]..src/tokenType.ml[105,3624+31])
                              Tpat_or
                              pattern (src/tokenType.ml[104,3595+6]..src/tokenType.ml[104,3595+28])
                                Tpat_value
                                pattern (src/tokenType.ml[104,3595+6]..src/tokenType.ml[104,3595+28])
                                  Tpat_construct "Settings.TokenTypeOnly"
                                  []
                                  None
                              pattern (src/tokenType.ml[105,3624+6]..src/tokenType.ml[105,3624+31])
                                Tpat_value
                                pattern (src/tokenType.ml[105,3624+6]..src/tokenType.ml[105,3624+31])
                                  Tpat_construct "Settings.TokenTypeAndCode"
                                  []
                                  None
                            expression (src/tokenType.ml[109,3708+8]..src/tokenType.ml[129,4655+9])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/tokenType.ml[109,3708+12]..src/tokenType.ml[109,3708+17])
                                    Tpat_var "param/800"
                                  expression (src/tokenType.ml[109,3708+20]..src/tokenType.ml[109,3708+23])
                                    Texp_constant Const_string("_",(src/tokenType.ml[109,3708+21]..src/tokenType.ml[109,3708+22]),None)
                              ]
                              expression (src/tokenType.ml[110,3735+8]..src/tokenType.ml[129,4655+9])
                                Texp_tuple
                                [
                                  expression (src/tokenType.ml[110,3735+8]..src/tokenType.ml[110,3735+13])
                                    Texp_ident "param/800"
                                  expression (src/tokenType.ml[111,3750+8]..src/tokenType.ml[129,4655+9])
                                    Texp_construct "TDefSum"
                                    [
                                      expression (src/tokenType.ml[111,3750+16]..src/tokenType.ml[129,4655+9])
                                        Texp_construct "::"
                                        [
                                          expression (src/tokenType.ml[118,4182+10]..src/tokenType.ml[123,4391+11])
                                            Texp_record
                                              fields =
                                                [
                                                  "dataname"
                                                    expression (src/tokenType.ml[119,4194+23]..src/tokenType.ml[119,4194+45])
                                                      Texp_apply
                                                      expression (src/tokenType.ml[119,4194+23]..src/tokenType.ml[119,4194+37])
                                                        Texp_ident "ttokengadtdata/524"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/tokenType.ml[119,4194+38]..src/tokenType.ml[119,4194+45])
                                                            Texp_constant Const_string("error",(src/tokenType.ml[119,4194+39]..src/tokenType.ml[119,4194+44]),None)
                                                      ]
                                                  "datavalparams"
                                                    expression (src/tokenType.ml[120,4241+28]..src/tokenType.ml[120,4241+30])
                                                      Texp_construct "[]"
                                                      []
                                                  "datatypeparams"
                                                    expression (src/tokenType.ml[121,4273+29]..src/tokenType.ml[121,4273+43])
                                                      Texp_construct "Some"
                                                      [
                                                        expression (src/tokenType.ml[121,4273+34]..src/tokenType.ml[121,4273+43])
                                                          Texp_construct "::"
                                                          [
                                                            expression (src/tokenType.ml[121,4273+36]..src/tokenType.ml[121,4273+41])
                                                              Texp_ident "Dune__exe!.CodeBits.tunit"
                                                            expression (src/tokenType.ml[121,4273+42]..src/tokenType.ml[121,4273+43]) ghost
                                                              Texp_construct "[]"
                                                              []
                                                          ]
                                                      ]
                                                ]
                                              representation =
                                                Record_regular
                                              extended_expression =
                                                None
                                          expression (src/tokenType.ml[124,4406+10]..src/tokenType.ml[128,4619+35])
                                            Texp_apply
                                            expression (src/tokenType.ml[124,4406+10]..src/tokenType.ml[124,4406+18])
                                              Texp_ident "Stdlib!.List.map"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/tokenType.ml[124,4406+19]..src/tokenType.ml[128,4619+12])
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (src/tokenType.ml[124,4406+24]..src/tokenType.ml[124,4406+37])
                                                        Tpat_tuple
                                                        [
                                                          pattern (src/tokenType.ml[124,4406+25]..src/tokenType.ml[124,4406+30])
                                                            Tpat_var "token/801"
                                                          pattern (src/tokenType.ml[124,4406+32]..src/tokenType.ml[124,4406+36])
                                                            Tpat_var "typo/802"
                                                        ]
                                                      expression (src/tokenType.ml[124,4406+41]..src/tokenType.ml[128,4619+11])
                                                        Texp_record
                                                          fields =
                                                            [
                                                              "dataname"
                                                                expression (src/tokenType.ml[125,4449+23]..src/tokenType.ml[125,4449+43])
                                                                  Texp_apply
                                                                  expression (src/tokenType.ml[125,4449+23]..src/tokenType.ml[125,4449+37])
                                                                    Texp_ident "ttokengadtdata/524"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/tokenType.ml[125,4449+38]..src/tokenType.ml[125,4449+43])
                                                                        Texp_ident "token/801"
                                                                  ]
                                                              "datavalparams"
                                                                expression (src/tokenType.ml[126,4494+28]..src/tokenType.ml[126,4494+30])
                                                                  Texp_construct "[]"
                                                                  []
                                                              "datatypeparams"
                                                                expression (src/tokenType.ml[127,4526+29]..src/tokenType.ml[127,4526+92])
                                                                  Texp_construct "Some"
                                                                  [
                                                                    expression (src/tokenType.ml[127,4526+34]..src/tokenType.ml[127,4526+92])
                                                                      Texp_construct "::"
                                                                      [
                                                                        expression (src/tokenType.ml[127,4526+36]..src/tokenType.ml[127,4526+90])
                                                                          Texp_match
                                                                          expression (src/tokenType.ml[127,4526+42]..src/tokenType.ml[127,4526+46])
                                                                            Texp_ident "typo/802"
                                                                          [
                                                                            <case>
                                                                              pattern (src/tokenType.ml[127,4526+52]..src/tokenType.ml[127,4526+56])
                                                                                Tpat_value
                                                                                pattern (src/tokenType.ml[127,4526+52]..src/tokenType.ml[127,4526+56])
                                                                                  Tpat_construct "None"
                                                                                  []
                                                                                  None
                                                                              expression (src/tokenType.ml[127,4526+60]..src/tokenType.ml[127,4526+65])
                                                                                Texp_ident "Dune__exe!.CodeBits.tunit"
                                                                            <case>
                                                                              pattern (src/tokenType.ml[127,4526+68]..src/tokenType.ml[127,4526+74])
                                                                                Tpat_value
                                                                                pattern (src/tokenType.ml[127,4526+68]..src/tokenType.ml[127,4526+74])
                                                                                  Tpat_construct "Some"
                                                                                  [
                                                                                    pattern (src/tokenType.ml[127,4526+73]..src/tokenType.ml[127,4526+74])
                                                                                      Tpat_var "t/803"
                                                                                  ]
                                                                                  None
                                                                              expression (src/tokenType.ml[127,4526+78]..src/tokenType.ml[127,4526+90])
                                                                                Texp_construct "TypTextual"
                                                                                [
                                                                                  expression (src/tokenType.ml[127,4526+89]..src/tokenType.ml[127,4526+90])
                                                                                    Texp_ident "t/803"
                                                                                ]
                                                                          ]
                                                                        expression (src/tokenType.ml[127,4526+91]..src/tokenType.ml[127,4526+92]) ghost
                                                                          Texp_construct "[]"
                                                                          []
                                                                      ]
                                                                  ]
                                                            ]
                                                          representation =
                                                            Record_regular
                                                          extended_expression =
                                                            None
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (src/tokenType.ml[128,4619+13]..src/tokenType.ml[128,4619+35])
                                                  Texp_apply
                                                  expression (src/tokenType.ml[128,4619+14]..src/tokenType.ml[128,4619+26])
                                                    Texp_ident "Dune__exe!.BasicSyntax.typed_tokens"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/tokenType.ml[128,4619+27]..src/tokenType.ml[128,4619+34])
                                                        Texp_ident "grammar/796"
                                                  ]
                                            ]
                                        ]
                                    ]
                                ]
                          <case>
                            pattern (src/tokenType.ml[131,4666+6]..src/tokenType.ml[131,4666+25])
                              Tpat_value
                              pattern (src/tokenType.ml[131,4666+6]..src/tokenType.ml[131,4666+25])
                                Tpat_construct "Settings.CodeOnly"
                                [
                                  pattern (src/tokenType.ml[131,4666+24]..src/tokenType.ml[131,4666+25])
                                    Tpat_var "m/799"
                                ]
                                None
                            expression (src/tokenType.ml[135,4730+8]..src/tokenType.ml[137,4772+66])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/tokenType.ml[135,4730+12]..src/tokenType.ml[135,4730+17])
                                    Tpat_var "param/805"
                                  expression (src/tokenType.ml[135,4730+20]..src/tokenType.ml[135,4730+23])
                                    Texp_constant Const_string("a",(src/tokenType.ml[135,4730+21]..src/tokenType.ml[135,4730+22]),None)
                              ]
                              expression (src/tokenType.ml[136,4757+8]..src/tokenType.ml[137,4772+66])
                                Texp_tuple
                                [
                                  expression (src/tokenType.ml[136,4757+8]..src/tokenType.ml[136,4757+13])
                                    Texp_ident "param/805"
                                  expression (src/tokenType.ml[137,4772+8]..src/tokenType.ml[137,4772+66])
                                    Texp_construct "TAbbrev"
                                    [
                                      expression (src/tokenType.ml[137,4772+16]..src/tokenType.ml[137,4772+66])
                                        Texp_construct "TypApp"
                                        [
                                          expression (src/tokenType.ml[137,4772+25]..src/tokenType.ml[137,4772+46])
                                            Texp_apply
                                            expression (src/tokenType.ml[137,4772+27]..src/tokenType.ml[137,4772+28])
                                              Texp_ident "Stdlib!.^"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/tokenType.ml[137,4772+25]..src/tokenType.ml[137,4772+26])
                                                  Texp_ident "m/799"
                                              <arg>
                                                Nolabel
                                                expression (src/tokenType.ml[137,4772+29]..src/tokenType.ml[137,4772+46])
                                                  Texp_apply
                                                  expression (src/tokenType.ml[137,4772+33]..src/tokenType.ml[137,4772+34])
                                                    Texp_ident "Stdlib!.^"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/tokenType.ml[137,4772+29]..src/tokenType.ml[137,4772+32])
                                                        Texp_constant Const_string(".",(src/tokenType.ml[137,4772+30]..src/tokenType.ml[137,4772+31]),None)
                                                    <arg>
                                                      Nolabel
                                                      expression (src/tokenType.ml[137,4772+35]..src/tokenType.ml[137,4772+46])
                                                        Texp_ident "tctokengadt/493"
                                                  ]
                                            ]
                                          expression (src/tokenType.ml[137,4772+48]..src/tokenType.ml[137,4772+64])
                                            Texp_construct "::"
                                            [
                                              expression (src/tokenType.ml[137,4772+50]..src/tokenType.ml[137,4772+62])
                                                Texp_construct "TypVar"
                                                [
                                                  expression (src/tokenType.ml[137,4772+57]..src/tokenType.ml[137,4772+62])
                                                    Texp_ident "param/805"
                                                ]
                                              expression (src/tokenType.ml[137,4772+63]..src/tokenType.ml[137,4772+64]) ghost
                                                Texp_construct "[]"
                                                []
                                            ]
                                        ]
                                    ]
                                ]
                        ]
                  ]
                  expression (src/tokenType.ml[140,4845+2]..src/tokenType.ml[148,5033+3])
                    Texp_construct "::"
                    [
                      expression (src/tokenType.ml[141,4849+4]..src/tokenType.ml[141,4849+53])
                        Texp_construct "IIComment"
                        [
                          expression (src/tokenType.ml[141,4849+14]..src/tokenType.ml[141,4849+53])
                            Texp_constant Const_string("The indexed type of terminal symbols.",(src/tokenType.ml[141,4849+15]..src/tokenType.ml[141,4849+52]),None)
                        ]
                      expression (src/tokenType.ml[142,4904+4]..src/tokenType.ml[148,5033+3]) ghost
                        Texp_construct "::"
                        [
                          expression (src/tokenType.ml[142,4904+4]..src/tokenType.ml[147,5026+6])
                            Texp_construct "IITypeDecls"
                            [
                              expression (src/tokenType.ml[142,4904+16]..src/tokenType.ml[147,5026+6])
                                Texp_construct "::"
                                [
                                  expression (src/tokenType.ml[142,4904+17]..src/tokenType.ml[147,5026+5])
                                    Texp_record
                                      fields =
                                        [
                                          "typename"
                                            expression (src/tokenType.ml[143,4923+17]..src/tokenType.ml[143,4923+28])
                                              Texp_ident "tctokengadt/493"
                                          "typeparams"
                                            expression (src/tokenType.ml[144,4953+19]..src/tokenType.ml[144,4953+28])
                                              Texp_construct "::"
                                              [
                                                expression (src/tokenType.ml[144,4953+21]..src/tokenType.ml[144,4953+26])
                                                  Texp_ident "param/797"
                                                expression (src/tokenType.ml[144,4953+27]..src/tokenType.ml[144,4953+28]) ghost
                                                  Texp_construct "[]"
                                                  []
                                              ]
                                          "typerhs"
                                            expression (src/tokenType.ml[145,4983+6]..src/tokenType.ml[145,4983+13])
                                              Texp_ident "typerhs/798"
                                          "typeconstraint"
                                            expression (src/tokenType.ml[146,4998+23]..src/tokenType.ml[146,4998+27])
                                              Texp_construct "None"
                                              []
                                        ]
                                      representation =
                                        Record_regular
                                      extended_expression =
                                        None
                                  expression (src/tokenType.ml[147,5026+5]..src/tokenType.ml[147,5026+6]) ghost
                                    Texp_construct "[]"
                                    []
                                ]
                            ]
                          expression (src/tokenType.ml[148,5033+2]..src/tokenType.ml[148,5033+3]) ghost
                            Texp_construct "[]"
                            []
                        ]
                    ]
          ]
    ]
  structure_item (src/tokenType.ml[153,5121+0]..src/tokenType.ml[192,6199+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/tokenType.ml[153,5121+4]..src/tokenType.ml[153,5121+22])
          Tpat_var "produce_tokentypes/806"
        expression (src/tokenType.ml[153,5121+23]..src/tokenType.ml[192,6199+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/tokenType.ml[153,5121+23]..src/tokenType.ml[153,5121+30])
                Tpat_var "grammar/808"
              expression (src/tokenType.ml[154,5154+2]..src/tokenType.ml[192,6199+8])
                Texp_match
                expression (src/tokenType.ml[154,5154+8]..src/tokenType.ml[154,5154+32])
                  Texp_ident "Dune__exe!.Settings.token_type_mode"
                [
                  <case>
                    pattern (src/tokenType.ml[155,5192+4]..src/tokenType.ml[155,5192+26])
                      Tpat_value
                      pattern (src/tokenType.ml[155,5192+4]..src/tokenType.ml[155,5192+26])
                        Tpat_construct "Settings.TokenTypeOnly"
                        []
                        None
                    expression (src/tokenType.ml[161,5396+6]..src/tokenType.ml[188,6128+12])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/tokenType.ml[161,5396+10]..src/tokenType.ml[161,5396+11])
                            Tpat_var "i/809"
                          expression (src/tokenType.ml[162,5410+8]..src/tokenType.ml[165,5519+9])
                            Texp_apply
                            expression (src/tokenType.ml[162,5410+29]..src/tokenType.ml[162,5410+30])
                              Texp_ident "Stdlib!.@"
                            [
                              <arg>
                                Nolabel
                                expression (src/tokenType.ml[162,5410+8]..src/tokenType.ml[162,5410+28])
                                  Texp_apply
                                  expression (src/tokenType.ml[162,5410+8]..src/tokenType.ml[162,5410+20])
                                    Texp_ident "tokentypedef/527"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/tokenType.ml[162,5410+21]..src/tokenType.ml[162,5410+28])
                                        Texp_ident "grammar/808"
                                  ]
                              <arg>
                                Nolabel
                                expression (src/tokenType.ml[163,5441+8]..src/tokenType.ml[165,5519+9])
                                  Texp_apply
                                  expression (src/tokenType.ml[163,5441+8]..src/tokenType.ml[163,5441+15])
                                    Texp_ident "Dune__exe!.CodeBits.ifnlazy"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/tokenType.ml[163,5441+16]..src/tokenType.ml[163,5441+35])
                                        Texp_ident "Dune__exe!.Settings.inspection"
                                    <arg>
                                      Nolabel
                                      expression (src/tokenType.ml[163,5441+36]..src/tokenType.ml[165,5519+9])
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/tokenType.ml[163,5441+41]..src/tokenType.ml[163,5441+43])
                                              Tpat_construct "()"
                                              []
                                              None
                                            expression (src/tokenType.ml[164,5488+10]..src/tokenType.ml[164,5488+30])
                                              Texp_apply
                                              expression (src/tokenType.ml[164,5488+10]..src/tokenType.ml[164,5488+22])
                                                Texp_ident "tokengadtdef/794"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/tokenType.ml[164,5488+23]..src/tokenType.ml[164,5488+30])
                                                    Texp_ident "grammar/808"
                                              ]
                                        ]
                                  ]
                            ]
                      ]
                      expression (src/tokenType.ml[168,5539+6]..src/tokenType.ml[188,6128+12])
                        Texp_letmodule "P/830"
                        module_expr (src/tokenType.ml[169,5560+8]..src/tokenType.ml[172,5707+26])
                          Tmod_apply
                          module_expr (src/tokenType.ml[169,5560+8]..src/tokenType.ml[169,5560+20])
                            module_expr (src/tokenType.ml[169,5560+8]..src/tokenType.ml[169,5560+20])
                              Tmod_ident "Dune__exe!.Printer.Make"
                          module_expr (src/tokenType.ml[169,5560+22]..src/tokenType.ml[172,5707+25])
                            Tmod_structure
                            [
                              structure_item (src/tokenType.ml[170,5589+24]..src/tokenType.ml[170,5589+65])
                                Tstr_value Nonrec
                                [
                                  <def>
                                    pattern (src/tokenType.ml[170,5589+28]..src/tokenType.ml[170,5589+29])
                                      Tpat_var "f/811"
                                    expression (src/tokenType.ml[170,5589+32]..src/tokenType.ml[170,5589+65])
                                      Texp_apply
                                      expression (src/tokenType.ml[170,5589+32]..src/tokenType.ml[170,5589+40])
                                        Texp_ident "Stdlib!.open_out"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/tokenType.ml[170,5589+41]..src/tokenType.ml[170,5589+65])
                                            Texp_apply
                                            expression (src/tokenType.ml[170,5589+56]..src/tokenType.ml[170,5589+57])
                                              Texp_ident "Stdlib!.^"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/tokenType.ml[170,5589+42]..src/tokenType.ml[170,5589+55])
                                                  Texp_ident "Dune__exe!.Settings.base"
                                              <arg>
                                                Nolabel
                                                expression (src/tokenType.ml[170,5589+58]..src/tokenType.ml[170,5589+64])
                                                  Texp_constant Const_string(".mli",(src/tokenType.ml[170,5589+59]..src/tokenType.ml[170,5589+63]),None)
                                            ]
                                      ]
                                ]
                              structure_item (src/tokenType.ml[171,5655+24]..src/tokenType.ml[171,5655+51])
                                Tstr_value Nonrec
                                [
                                  <def>
                                    pattern (src/tokenType.ml[171,5655+28]..src/tokenType.ml[171,5655+44])
                                      Tpat_var "locate_stretches/812"
                                    expression (src/tokenType.ml[171,5655+47]..src/tokenType.ml[171,5655+51])
                                      Texp_construct "None"
                                      []
                                ]
                            ]
                        expression (src/tokenType.ml[174,5743+6]..src/tokenType.ml[188,6128+12])
                          Texp_sequence
                          expression (src/tokenType.ml[174,5743+6]..src/tokenType.ml[176,5805+7])
                            Texp_apply
                            expression (src/tokenType.ml[174,5743+6]..src/tokenType.ml[174,5743+17])
                              Texp_ident "P/830.interface"
                            [
                              <arg>
                                Nolabel
                                expression (src/tokenType.ml[174,5743+18]..src/tokenType.ml[176,5805+7])
                                  Texp_construct "::"
                                  [
                                    expression (src/tokenType.ml[175,5763+8]..src/tokenType.ml[175,5763+41])
                                      Texp_construct "IIFunctor"
                                      [
                                        expression (src/tokenType.ml[175,5763+19]..src/tokenType.ml[175,5763+37])
                                          Texp_field
                                          expression (src/tokenType.ml[175,5763+19]..src/tokenType.ml[175,5763+26])
                                            Texp_ident "grammar/808"
                                          "parameters"
                                        expression (src/tokenType.ml[175,5763+39]..src/tokenType.ml[175,5763+40])
                                          Texp_ident "i/809"
                                      ]
                                    expression (src/tokenType.ml[176,5805+6]..src/tokenType.ml[176,5805+7]) ghost
                                      Texp_construct "[]"
                                      []
                                  ]
                            ]
                          expression (src/tokenType.ml[177,5814+6]..src/tokenType.ml[188,6128+12])
                            Texp_letmodule "P/836"
                            module_expr (src/tokenType.ml[178,5835+8]..src/tokenType.ml[181,5981+26])
                              Tmod_apply
                              module_expr (src/tokenType.ml[178,5835+8]..src/tokenType.ml[178,5835+20])
                                module_expr (src/tokenType.ml[178,5835+8]..src/tokenType.ml[178,5835+20])
                                  Tmod_ident "Dune__exe!.Printer.Make"
                              module_expr (src/tokenType.ml[178,5835+22]..src/tokenType.ml[181,5981+25])
                                Tmod_structure
                                [
                                  structure_item (src/tokenType.ml[179,5864+24]..src/tokenType.ml[179,5864+64])
                                    Tstr_value Nonrec
                                    [
                                      <def>
                                        pattern (src/tokenType.ml[179,5864+28]..src/tokenType.ml[179,5864+29])
                                          Tpat_var "f/831"
                                        expression (src/tokenType.ml[179,5864+32]..src/tokenType.ml[179,5864+64])
                                          Texp_apply
                                          expression (src/tokenType.ml[179,5864+32]..src/tokenType.ml[179,5864+40])
                                            Texp_ident "Stdlib!.open_out"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/tokenType.ml[179,5864+41]..src/tokenType.ml[179,5864+64])
                                                Texp_apply
                                                expression (src/tokenType.ml[179,5864+56]..src/tokenType.ml[179,5864+57])
                                                  Texp_ident "Stdlib!.^"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/tokenType.ml[179,5864+42]..src/tokenType.ml[179,5864+55])
                                                      Texp_ident "Dune__exe!.Settings.base"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/tokenType.ml[179,5864+58]..src/tokenType.ml[179,5864+63])
                                                      Texp_constant Const_string(".ml",(src/tokenType.ml[179,5864+59]..src/tokenType.ml[179,5864+62]),None)
                                                ]
                                          ]
                                    ]
                                  structure_item (src/tokenType.ml[180,5929+24]..src/tokenType.ml[180,5929+51])
                                    Tstr_value Nonrec
                                    [
                                      <def>
                                        pattern (src/tokenType.ml[180,5929+28]..src/tokenType.ml[180,5929+44])
                                          Tpat_var "locate_stretches/832"
                                        expression (src/tokenType.ml[180,5929+47]..src/tokenType.ml[180,5929+51])
                                          Texp_construct "None"
                                          []
                                    ]
                                ]
                            expression (src/tokenType.ml[183,6017+6]..src/tokenType.ml[188,6128+12])
                              Texp_sequence
                              expression (src/tokenType.ml[183,6017+6]..src/tokenType.ml[187,6119+7])
                                Texp_apply
                                expression (src/tokenType.ml[183,6017+6]..src/tokenType.ml[183,6017+15])
                                  Texp_ident "P/836.program"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/tokenType.ml[183,6017+16]..src/tokenType.ml[187,6119+7])
                                      Texp_construct "::"
                                      [
                                        expression (src/tokenType.ml[184,6035+8]..src/tokenType.ml[186,6109+9])
                                          Texp_construct "SIFunctor"
                                          [
                                            expression (src/tokenType.ml[184,6035+19]..src/tokenType.ml[184,6035+37])
                                              Texp_field
                                              expression (src/tokenType.ml[184,6035+19]..src/tokenType.ml[184,6035+26])
                                                Texp_ident "grammar/808"
                                              "parameters"
                                            expression (src/tokenType.ml[185,6074+10]..src/tokenType.ml[185,6074+34])
                                              Texp_apply
                                              expression (src/tokenType.ml[185,6074+10]..src/tokenType.ml[185,6074+32])
                                                Texp_ident "Dune__exe!.CodeBits.interface_to_structure"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/tokenType.ml[185,6074+33]..src/tokenType.ml[185,6074+34])
                                                    Texp_ident "i/809"
                                              ]
                                          ]
                                        expression (src/tokenType.ml[187,6119+6]..src/tokenType.ml[187,6119+7]) ghost
                                          Texp_construct "[]"
                                          []
                                      ]
                                ]
                              expression (src/tokenType.ml[188,6128+6]..src/tokenType.ml[188,6128+12])
                                Texp_apply
                                expression (src/tokenType.ml[188,6128+6]..src/tokenType.ml[188,6128+10])
                                  Texp_ident "Stdlib!.exit"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/tokenType.ml[188,6128+11]..src/tokenType.ml[188,6128+12])
                                      Texp_constant Const_int 0
                                ]
                  <case>
                    pattern (src/tokenType.ml[190,6142+4]..src/tokenType.ml[191,6166+29])
                      Tpat_or
                      pattern (src/tokenType.ml[190,6142+4]..src/tokenType.ml[190,6142+23])
                        Tpat_value
                        pattern (src/tokenType.ml[190,6142+4]..src/tokenType.ml[190,6142+23])
                          Tpat_construct "Settings.CodeOnly"
                          [
                            pattern (src/tokenType.ml[190,6142+22]..src/tokenType.ml[190,6142+23])
                              Tpat_any
                          ]
                          None
                      pattern (src/tokenType.ml[191,6166+4]..src/tokenType.ml[191,6166+29])
                        Tpat_value
                        pattern (src/tokenType.ml[191,6166+4]..src/tokenType.ml[191,6166+29])
                          Tpat_construct "Settings.TokenTypeAndCode"
                          []
                          None
                    expression (src/tokenType.ml[192,6199+6]..src/tokenType.ml[192,6199+8])
                      Texp_construct "()"
                      []
                ]
          ]
    ]
  structure_item (src/tokenType.ml[199,6475+0]..src/tokenType.ml[206,6652+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/tokenType.ml[199,6475+4]..src/tokenType.ml[199,6475+15])
          Tpat_var "tokenprefix/837"
        expression (src/tokenType.ml[199,6475+16]..src/tokenType.ml[206,6652+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/tokenType.ml[199,6475+16]..src/tokenType.ml[199,6475+18])
                Tpat_var "id/839"
              expression (src/tokenType.ml[200,6496+2]..src/tokenType.ml[206,6652+8])
                Texp_match
                expression (src/tokenType.ml[200,6496+8]..src/tokenType.ml[200,6496+32])
                  Texp_ident "Dune__exe!.Settings.token_type_mode"
                [
                  <case>
                    pattern (src/tokenType.ml[201,6534+4]..src/tokenType.ml[201,6534+23])
                      Tpat_value
                      pattern (src/tokenType.ml[201,6534+4]..src/tokenType.ml[201,6534+23])
                        Tpat_construct "Settings.CodeOnly"
                        [
                          pattern (src/tokenType.ml[201,6534+22]..src/tokenType.ml[201,6534+23])
                            Tpat_var "m/840"
                        ]
                        None
                    expression (src/tokenType.ml[202,6561+6]..src/tokenType.ml[202,6561+18])
                      Texp_apply
                      expression (src/tokenType.ml[202,6561+8]..src/tokenType.ml[202,6561+9])
                        Texp_ident "Stdlib!.^"
                      [
                        <arg>
                          Nolabel
                          expression (src/tokenType.ml[202,6561+6]..src/tokenType.ml[202,6561+7])
                            Texp_ident "m/840"
                        <arg>
                          Nolabel
                          expression (src/tokenType.ml[202,6561+10]..src/tokenType.ml[202,6561+18])
                            Texp_apply
                            expression (src/tokenType.ml[202,6561+14]..src/tokenType.ml[202,6561+15])
                              Texp_ident "Stdlib!.^"
                            [
                              <arg>
                                Nolabel
                                expression (src/tokenType.ml[202,6561+10]..src/tokenType.ml[202,6561+13])
                                  Texp_constant Const_string(".",(src/tokenType.ml[202,6561+11]..src/tokenType.ml[202,6561+12]),None)
                              <arg>
                                Nolabel
                                expression (src/tokenType.ml[202,6561+16]..src/tokenType.ml[202,6561+18])
                                  Texp_ident "id/839"
                            ]
                      ]
                  <case>
                    pattern (src/tokenType.ml[203,6580+4]..src/tokenType.ml[203,6580+29])
                      Tpat_value
                      pattern (src/tokenType.ml[203,6580+4]..src/tokenType.ml[203,6580+29])
                        Tpat_construct "Settings.TokenTypeAndCode"
                        []
                        None
                    expression (src/tokenType.ml[204,6613+6]..src/tokenType.ml[204,6613+8])
                      Texp_ident "id/839"
                  <case>
                    pattern (src/tokenType.ml[205,6622+4]..src/tokenType.ml[205,6622+26])
                      Tpat_value
                      pattern (src/tokenType.ml[205,6622+4]..src/tokenType.ml[205,6622+26])
                        Tpat_construct "Settings.TokenTypeOnly"
                        []
                        None
                    expression (src/tokenType.ml[206,6652+6]..src/tokenType.ml[206,6652+8])
                      Texp_ident "id/839"
                ]
          ]
    ]
  structure_item (src/tokenType.ml[208,6687+0]..src/tokenType.ml[209,6703+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/tokenType.ml[208,6687+4]..src/tokenType.ml[208,6687+13])
          Tpat_var "tokendata/841"
        expression (src/tokenType.ml[209,6703+2]..src/tokenType.ml[209,6703+13])
          Texp_ident "tokenprefix/837"
    ]
  structure_item (src/tokenType.ml[211,6718+0]..src/tokenType.ml[212,6744+36])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/tokenType.ml[211,6718+4]..src/tokenType.ml[211,6718+17])
          Tpat_var "tokengadtdata/842"
        expression (src/tokenType.ml[211,6718+18]..src/tokenType.ml[212,6744+36]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/tokenType.ml[211,6718+18]..src/tokenType.ml[211,6718+23])
                Tpat_var "token/844"
              expression (src/tokenType.ml[212,6744+2]..src/tokenType.ml[212,6744+36])
                Texp_apply
                expression (src/tokenType.ml[212,6744+2]..src/tokenType.ml[212,6744+13])
                  Texp_ident "tokenprefix/837"
                [
                  <arg>
                    Nolabel
                    expression (src/tokenType.ml[212,6744+14]..src/tokenType.ml[212,6744+36])
                      Texp_apply
                      expression (src/tokenType.ml[212,6744+15]..src/tokenType.ml[212,6744+29])
                        Texp_ident "ttokengadtdata/524"
                      [
                        <arg>
                          Nolabel
                          expression (src/tokenType.ml[212,6744+30]..src/tokenType.ml[212,6744+35])
                            Texp_ident "token/844"
                      ]
                ]
          ]
    ]
]

{<Dune__exe__TokenType>
 "produce_tokentypes"[value] -> <Dune__exe__TokenType.24>;
 "tctokengadt"[value] -> <Dune__exe__TokenType.2>;
 "tokendata"[value] -> <Dune__exe__TokenType.36>;
 "tokengadtdata"[value] -> <Dune__exe__TokenType.37>;
 "tokengadtdef"[value] -> <Dune__exe__TokenType.14>;
 "tokentypedef"[value] -> <Dune__exe__TokenType.7>;
 "ttoken"[value] -> <Dune__exe__TokenType.1>;
 "ttokengadt"[value] -> <Dune__exe__TokenType.3>;
 }

(seq
  (let (tctoken/491 = "token")
    (setfield_ptr(root-init) 8 (global Dune__exe__TokenType!) tctoken/491))
  (let
    (ttoken/492 =
       (makeblock 2 (field_imm 8 (global Dune__exe__TokenType!)) 0))
    (setfield_ptr(root-init) 0 (global Dune__exe__TokenType!) ttoken/492))
  (let (tctokengadt/493 = "terminal")
    (setfield_ptr(root-init) 2 (global Dune__exe__TokenType!)
      tctokengadt/493))
  (let
    (ttokengadt/494 =
       (function a/496
         (makeblock 2 (field_imm 2 (global Dune__exe__TokenType!))
           (makeblock 0 a/496 0))))
    (setfield_ptr(root-init) 3 (global Dune__exe__TokenType!) ttokengadt/494))
  (let
    (ttokengadtdata/524 =
       (function token/526
         (apply (field_imm 27 (global Stdlib!)) "T_" token/526)))
    (setfield_ptr(root-init) 9 (global Dune__exe__TokenType!)
      ttokengadtdata/524))
  (let
    (tokentypedef/527 =
       (function grammar/529
         (let
           (typerhs/530 =
              (let
                (*match*/2284 = (field_imm 1 (global Dune__exe__Settings!)))
                (catch
                  (if (isint *match*/2284) (exit 1)
                    (let (m/651 =a (field_imm 0 *match*/2284))
                      (makeblock 2
                        (makeblock 2
                          (apply (field_imm 27 (global Stdlib!)) m/651
                            (apply (field_imm 27 (global Stdlib!)) "."
                              (field_imm 8 (global Dune__exe__TokenType!))))
                          0))))
                 with (1)
                  (makeblock 1
                    (apply (field_imm 19 (global Stdlib__List!))
                      (function (param/2281, param/2282)
                        (let (typo/719 =a param/2282 tok/718 =a param/2281)
                          (makeblock 0 tok/718
                            (if (isint typo/719) 0
                              (let (t/720 =a (field_imm 0 typo/719))
                                (makeblock 0 (makeblock 0 t/720) 0)))
                            0)))
                      (apply (field_imm 7 (global Dune__exe__BasicSyntax!))
                        grammar/529))))))
           (makeblock 0 [6: "The type of tokens."]
             (makeblock 0
               (makeblock 2
                 (makeblock 0
                   (makeblock 0 (field_imm 8 (global Dune__exe__TokenType!))
                     0 typerhs/530 0)
                   0))
               0)))))
    (setfield_ptr(root-init) 5 (global Dune__exe__TokenType!)
      tokentypedef/527))
  (let
    (tokengadtdef/794 =
       (function grammar/796
         (seq
           (if (field_imm 30 (global Dune__exe__Settings!)) 0
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "src/tokenType.ml" 101 2])))
           (catch
             (let
               (*match*/2290 = (field_imm 1 (global Dune__exe__Settings!)))
               (catch
                 (if (isint *match*/2290) (exit 2)
                   (let
                     (m/799 =a (field_imm 0 *match*/2290)
                      param/805 = "a"
                      typerhs/2294 =
                        (makeblock 2
                          (makeblock 2
                            (apply (field_imm 27 (global Stdlib!)) m/799
                              (apply (field_imm 27 (global Stdlib!)) "."
                                (field_imm 2 (global Dune__exe__TokenType!))))
                            (makeblock 0 (makeblock 1 param/805) 0)))
                      param/2293 =a param/805)
                     (exit 3 param/2293 typerhs/2294)))
                with (2)
                 (let
                   (param/800 = "_"
                    typerhs/2292 =
                      (makeblock 1
                        (makeblock 0
                          (makeblock 0
                            (apply
                              (field_imm 9 (global Dune__exe__TokenType!))
                              "error")
                            0
                            (makeblock 0
                              (makeblock 0
                                (field_imm 6 (global Dune__exe__CodeBits!))
                                0)))
                          (apply (field_imm 19 (global Stdlib__List!))
                            (function (param/2287, param/2288)
                              (let
                                (typo/802 =a param/2288
                                 token/801 =a param/2287)
                                (makeblock 0
                                  (apply
                                    (field_imm 9
                                      (global Dune__exe__TokenType!))
                                    token/801)
                                  0
                                  (makeblock 0
                                    (makeblock 0
                                      (if (isint typo/802)
                                        (field_imm 6
                                          (global Dune__exe__CodeBits!))
                                        (let
                                          (t/803 =a (field_imm 0 typo/802))
                                          (makeblock 0 t/803)))
                                      0)))))
                            (apply
                              (field_imm 7 (global Dune__exe__BasicSyntax!))
                              grammar/796))))
                    param/2291 =a param/800)
                   (exit 3 param/2291 typerhs/2292))))
            with (3 param/797 typerhs/798)
             (makeblock 0 [6: "The indexed type of terminal symbols."]
               (makeblock 0
                 (makeblock 2
                   (makeblock 0
                     (makeblock 0
                       (field_imm 2 (global Dune__exe__TokenType!))
                       (makeblock 0 param/797 0) typerhs/798 0)
                     0))
                 0))))))
    (setfield_ptr(root-init) 6 (global Dune__exe__TokenType!)
      tokengadtdef/794))
  (let
    (produce_tokentypes/806 =
       (function grammar/808 : int
         (let (*match*/2297 = (field_imm 1 (global Dune__exe__Settings!)))
           (catch
             (if (isint *match*/2297)
               (if *match*/2297
                 (let
                   (i/809 =
                      (apply (field_imm 36 (global Stdlib!))
                        (apply (field_imm 5 (global Dune__exe__TokenType!))
                          grammar/808)
                        (apply (field_imm 5 (global Dune__exe__CodeBits!))
                          (field_imm 30 (global Dune__exe__Settings!))
                          (function param/810[int]
                            (apply
                              (field_imm 6 (global Dune__exe__TokenType!))
                              grammar/808))))
                    P/830 =
                      (apply
                        (let
                          (let/2295 =
                             (field_imm 0 (global Dune__exe__Printer!)))
                          (field_imm 0 (global Dune__exe__Printer!)))
                        (let
                          (f/811 =
                             (apply (field_imm 59 (global Stdlib!))
                               (apply (field_imm 27 (global Stdlib!))
                                 (field_imm 24 (global Dune__exe__Settings!))
                                 ".mli"))
                           locate_stretches/812 = 0)
                          (makeblock 0 f/811 locate_stretches/812))))
                   (seq
                     (apply (field_imm 2 P/830)
                       (makeblock 0
                         (makeblock 0 (field_imm 2 grammar/808) i/809) 0))
                     (let
                       (P/836 =
                          (apply
                            (let
                              (let/2296 =
                                 (field_imm 0 (global Dune__exe__Printer!)))
                              (field_imm 0 (global Dune__exe__Printer!)))
                            (let
                              (f/831 =
                                 (apply (field_imm 59 (global Stdlib!))
                                   (apply (field_imm 27 (global Stdlib!))
                                     (field_imm 24
                                       (global Dune__exe__Settings!))
                                     ".ml"))
                               locate_stretches/832 = 0)
                              (makeblock 0 f/831 locate_stretches/832))))
                       (seq
                         (apply (field_imm 0 P/836)
                           (makeblock 0
                             (makeblock 0 (field_imm 2 grammar/808)
                               (apply
                                 (field_imm 42 (global Dune__exe__CodeBits!))
                                 i/809))
                             0))
                         (apply (field_imm 98 (global Stdlib!)) 0)))))
                 (exit 8))
               (let (*match*/2298 =a (field_imm 0 *match*/2297)) (exit 8)))
            with (8) 0))))
    (setfield_ptr(root-init) 7 (global Dune__exe__TokenType!)
      produce_tokentypes/806))
  (let
    (tokenprefix/837 =
       (function id/839
         (let (*match*/2299 = (field_imm 1 (global Dune__exe__Settings!)))
           (if (isint *match*/2299) id/839
             (let (m/840 =a (field_imm 0 *match*/2299))
               (apply (field_imm 27 (global Stdlib!)) m/840
                 (apply (field_imm 27 (global Stdlib!)) "." id/839)))))))
    (setfield_ptr(root-init) 10 (global Dune__exe__TokenType!)
      tokenprefix/837))
  (let (tokendata/841 = (field_imm 10 (global Dune__exe__TokenType!)))
    (setfield_ptr(root-init) 1 (global Dune__exe__TokenType!) tokendata/841))
  (let
    (tokengadtdata/842 =
       (function token/844
         (apply (field_imm 10 (global Dune__exe__TokenType!))
           (apply (field_imm 9 (global Dune__exe__TokenType!)) token/844))))
    (setfield_ptr(root-init) 4 (global Dune__exe__TokenType!)
      tokengadtdata/842))
  0)
(seq
  (let (tctoken/491 = "token")
    (setfield_ptr(root-init) 8 (global Dune__exe__TokenType!) tctoken/491))
  (let
    (ttoken/492 =
       (makeblock 2 (field_imm 8 (global Dune__exe__TokenType!)) 0))
    (setfield_ptr(root-init) 0 (global Dune__exe__TokenType!) ttoken/492))
  (let (tctokengadt/493 = "terminal")
    (setfield_ptr(root-init) 2 (global Dune__exe__TokenType!)
      tctokengadt/493))
  (let
    (ttokengadt/494 =
       (function a/496
         (makeblock 2 (field_imm 2 (global Dune__exe__TokenType!))
           (makeblock 0 a/496 0))))
    (setfield_ptr(root-init) 3 (global Dune__exe__TokenType!) ttokengadt/494))
  (let
    (ttokengadtdata/524 =
       (function token/526
         (apply (field_imm 27 (global Stdlib!)) "T_" token/526)))
    (setfield_ptr(root-init) 9 (global Dune__exe__TokenType!)
      ttokengadtdata/524))
  (let
    (tokentypedef/527 =
       (function grammar/529
         (let
           (typerhs/530 =
              (let
                (*match*/2284 = (field_imm 1 (global Dune__exe__Settings!)))
                (if (isint *match*/2284)
                  (makeblock 1
                    (apply (field_imm 19 (global Stdlib__List!))
                      (function (param/2281, param/2282)
                        (makeblock 0 param/2281
                          (if (isint param/2282) 0
                            (makeblock 0
                              (makeblock 0 (field_imm 0 param/2282)) 0))
                          0))
                      (apply (field_imm 7 (global Dune__exe__BasicSyntax!))
                        grammar/529)))
                  (makeblock 2
                    (makeblock 2
                      (apply (field_imm 27 (global Stdlib!))
                        (field_imm 0 *match*/2284)
                        (apply (field_imm 27 (global Stdlib!)) "."
                          (field_imm 8 (global Dune__exe__TokenType!))))
                      0)))))
           (makeblock 0 [6: "The type of tokens."]
             (makeblock 0
               (makeblock 2
                 (makeblock 0
                   (makeblock 0 (field_imm 8 (global Dune__exe__TokenType!))
                     0 typerhs/530 0)
                   0))
               0)))))
    (setfield_ptr(root-init) 5 (global Dune__exe__TokenType!)
      tokentypedef/527))
  (let
    (tokengadtdef/794 =
       (function grammar/796
         (seq
           (if (field_imm 30 (global Dune__exe__Settings!)) 0
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "src/tokenType.ml" 101 2])))
           (catch
             (let
               (*match*/2290 = (field_imm 1 (global Dune__exe__Settings!)))
               (if (isint *match*/2290)
                 (let
                   (param/800 = "_"
                    typerhs/2292 =
                      (makeblock 1
                        (makeblock 0
                          (makeblock 0
                            (apply
                              (field_imm 9 (global Dune__exe__TokenType!))
                              "error")
                            0
                            (makeblock 0
                              (makeblock 0
                                (field_imm 6 (global Dune__exe__CodeBits!))
                                0)))
                          (apply (field_imm 19 (global Stdlib__List!))
                            (function (param/2287, param/2288)
                              (makeblock 0
                                (apply
                                  (field_imm 9
                                    (global Dune__exe__TokenType!))
                                  param/2287)
                                0
                                (makeblock 0
                                  (makeblock 0
                                    (if (isint param/2288)
                                      (field_imm 6
                                        (global Dune__exe__CodeBits!))
                                      (makeblock 0 (field_imm 0 param/2288)))
                                    0))))
                            (apply
                              (field_imm 7 (global Dune__exe__BasicSyntax!))
                              grammar/796)))))
                   (exit 3 param/800 typerhs/2292))
                 (let
                   (param/805 = "a"
                    typerhs/2294 =
                      (makeblock 2
                        (makeblock 2
                          (apply (field_imm 27 (global Stdlib!))
                            (field_imm 0 *match*/2290)
                            (apply (field_imm 27 (global Stdlib!)) "."
                              (field_imm 2 (global Dune__exe__TokenType!))))
                          (makeblock 0 (makeblock 1 param/805) 0))))
                   (exit 3 param/805 typerhs/2294))))
            with (3 param/797 typerhs/798)
             (makeblock 0 [6: "The indexed type of terminal symbols."]
               (makeblock 0
                 (makeblock 2
                   (makeblock 0
                     (makeblock 0
                       (field_imm 2 (global Dune__exe__TokenType!))
                       (makeblock 0 param/797 0) typerhs/798 0)
                     0))
                 0))))))
    (setfield_ptr(root-init) 6 (global Dune__exe__TokenType!)
      tokengadtdef/794))
  (let
    (produce_tokentypes/806 =
       (function grammar/808 : int
         (let (*match*/2297 = (field_imm 1 (global Dune__exe__Settings!)))
           (catch
             (if (isint *match*/2297)
               (if *match*/2297
                 (let
                   (i/809 =
                      (apply (field_imm 36 (global Stdlib!))
                        (apply (field_imm 5 (global Dune__exe__TokenType!))
                          grammar/808)
                        (apply (field_imm 5 (global Dune__exe__CodeBits!))
                          (field_imm 30 (global Dune__exe__Settings!))
                          (function param/810[int]
                            (apply
                              (field_imm 6 (global Dune__exe__TokenType!))
                              grammar/808))))
                    P/830 =
                      (apply
                        (let
                          (let/2295 =
                             (field_imm 0 (global Dune__exe__Printer!)))
                          (field_imm 0 (global Dune__exe__Printer!)))
                        (let
                          (f/811 =
                             (apply (field_imm 59 (global Stdlib!))
                               (apply (field_imm 27 (global Stdlib!))
                                 (field_imm 24 (global Dune__exe__Settings!))
                                 ".mli"))
                           locate_stretches/812 = 0)
                          (makeblock 0 f/811 locate_stretches/812))))
                   (seq
                     (apply (field_imm 2 P/830)
                       (makeblock 0
                         (makeblock 0 (field_imm 2 grammar/808) i/809) 0))
                     (let
                       (P/836 =
                          (apply
                            (let
                              (let/2296 =
                                 (field_imm 0 (global Dune__exe__Printer!)))
                              (field_imm 0 (global Dune__exe__Printer!)))
                            (let
                              (f/831 =
                                 (apply (field_imm 59 (global Stdlib!))
                                   (apply (field_imm 27 (global Stdlib!))
                                     (field_imm 24
                                       (global Dune__exe__Settings!))
                                     ".ml"))
                               locate_stretches/832 = 0)
                              (makeblock 0 f/831 locate_stretches/832))))
                       (seq
                         (apply (field_imm 0 P/836)
                           (makeblock 0
                             (makeblock 0 (field_imm 2 grammar/808)
                               (apply
                                 (field_imm 42 (global Dune__exe__CodeBits!))
                                 i/809))
                             0))
                         (apply (field_imm 98 (global Stdlib!)) 0)))))
                 (exit 8))
               (exit 8))
            with (8) 0))))
    (setfield_ptr(root-init) 7 (global Dune__exe__TokenType!)
      produce_tokentypes/806))
  (let
    (tokenprefix/837 =
       (function id/839
         (let (*match*/2299 = (field_imm 1 (global Dune__exe__Settings!)))
           (if (isint *match*/2299) id/839
             (apply (field_imm 27 (global Stdlib!))
               (field_imm 0 *match*/2299)
               (apply (field_imm 27 (global Stdlib!)) "." id/839))))))
    (setfield_ptr(root-init) 10 (global Dune__exe__TokenType!)
      tokenprefix/837))
  (let (tokendata/841 = (field_imm 10 (global Dune__exe__TokenType!)))
    (setfield_ptr(root-init) 1 (global Dune__exe__TokenType!) tokendata/841))
  (let
    (tokengadtdata/842 =
       (function token/844
         (apply (field_imm 10 (global Dune__exe__TokenType!))
           (apply (field_imm 9 (global Dune__exe__TokenType!)) token/844))))
    (setfield_ptr(root-init) 4 (global Dune__exe__TokenType!)
      tokengadtdata/842))
  0)
