[
  structure_item (src/astar.ml[44,2274+0]..[325,10520+3])
    Pstr_module
    "Make" (src/astar.ml[44,2274+7]..[44,2274+11])
      module_expr (src/astar.ml[44,2274+12]..[325,10520+3])
        Pmod_functor "G" (src/astar.ml[44,2274+13]..[44,2274+14])
        module_type (src/astar.ml[44,2274+17]..[68,2973+3])
          Pmty_signature
          [
            signature_item (src/astar.ml[47,2317+2]..[47,2317+11])
              Psig_type Rec
              [
                type_declaration "node" (src/astar.ml[47,2317+7]..[47,2317+11]) (src/astar.ml[47,2317+2]..[47,2317+11])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            signature_item (src/astar.ml[48,2329+2]..[48,2329+48])
              Psig_include
              module_type (src/astar.ml[48,2329+10]..[48,2329+48])
                Pmty_with
                module_type (src/astar.ml[48,2329+10]..[48,2329+28])
                  Pmty_ident "Hashtbl.HashedType" (src/astar.ml[48,2329+10]..[48,2329+28])
                [
                  Pwith_typesubst "t" (src/astar.ml[48,2329+39]..[48,2329+40])
                    type_declaration "t" (src/astar.ml[48,2329+39]..[48,2329+40]) (src/astar.ml[48,2329+34]..[48,2329+48])
                      ptype_params =
                        []
                      ptype_cstrs =
                        []
                      ptype_kind =
                        Ptype_abstract
                      ptype_private = Public
                      ptype_manifest =
                        Some
                          core_type (src/astar.ml[48,2329+44]..[48,2329+48])
                            Ptyp_constr "node" (src/astar.ml[48,2329+44]..[48,2329+48])
                            []
                ]
            signature_item (src/astar.ml[51,2400+2]..[51,2400+12])
              Psig_type Rec
              [
                type_declaration "label" (src/astar.ml[51,2400+7]..[51,2400+12]) (src/astar.ml[51,2400+2]..[51,2400+12])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            signature_item (src/astar.ml[55,2443+2]..[55,2443+37])
              Psig_value
              value_description "sources" (src/astar.ml[55,2443+6]..[55,2443+13]) (src/astar.ml[55,2443+2]..[55,2443+37])
                core_type (src/astar.ml[55,2443+15]..[55,2443+37])
                  Ptyp_arrow
                  Nolabel
                  core_type (src/astar.ml[55,2443+16]..[55,2443+28])
                    Ptyp_arrow
                    Nolabel
                    core_type (src/astar.ml[55,2443+16]..[55,2443+20])
                      Ptyp_constr "node" (src/astar.ml[55,2443+16]..[55,2443+20])
                      []
                    core_type (src/astar.ml[55,2443+24]..[55,2443+28])
                      Ptyp_constr "unit" (src/astar.ml[55,2443+24]..[55,2443+28])
                      []
                  core_type (src/astar.ml[55,2443+33]..[55,2443+37])
                    Ptyp_constr "unit" (src/astar.ml[55,2443+33]..[55,2443+37])
                    []
                []
            signature_item (src/astar.ml[60,2637+2]..[60,2637+64])
              Psig_value
              value_description "successors" (src/astar.ml[60,2637+6]..[60,2637+16]) (src/astar.ml[60,2637+2]..[60,2637+64])
                core_type (src/astar.ml[60,2637+18]..[60,2637+64])
                  Ptyp_arrow
                  Nolabel
                  core_type (src/astar.ml[60,2637+18]..[60,2637+22])
                    Ptyp_constr "node" (src/astar.ml[60,2637+18]..[60,2637+22])
                    []
                  core_type (src/astar.ml[60,2637+26]..[60,2637+64])
                    Ptyp_arrow
                    Nolabel
                    core_type (src/astar.ml[60,2637+27]..[60,2637+55])
                      Ptyp_arrow
                      Nolabel
                      core_type (src/astar.ml[60,2637+27]..[60,2637+32])
                        Ptyp_constr "label" (src/astar.ml[60,2637+27]..[60,2637+32])
                        []
                      core_type (src/astar.ml[60,2637+36]..[60,2637+55])
                        Ptyp_arrow
                        Nolabel
                        core_type (src/astar.ml[60,2637+36]..[60,2637+39])
                          Ptyp_constr "int" (src/astar.ml[60,2637+36]..[60,2637+39])
                          []
                        core_type (src/astar.ml[60,2637+43]..[60,2637+55])
                          Ptyp_arrow
                          Nolabel
                          core_type (src/astar.ml[60,2637+43]..[60,2637+47])
                            Ptyp_constr "node" (src/astar.ml[60,2637+43]..[60,2637+47])
                            []
                          core_type (src/astar.ml[60,2637+51]..[60,2637+55])
                            Ptyp_constr "unit" (src/astar.ml[60,2637+51]..[60,2637+55])
                            []
                    core_type (src/astar.ml[60,2637+60]..[60,2637+64])
                      Ptyp_constr "unit" (src/astar.ml[60,2637+60]..[60,2637+64])
                      []
                []
            signature_item (src/astar.ml[66,2944+2]..[66,2944+27])
              Psig_value
              value_description "estimate" (src/astar.ml[66,2944+6]..[66,2944+14]) (src/astar.ml[66,2944+2]..[66,2944+27])
                core_type (src/astar.ml[66,2944+16]..[66,2944+27])
                  Ptyp_arrow
                  Nolabel
                  core_type (src/astar.ml[66,2944+16]..[66,2944+20])
                    Ptyp_constr "node" (src/astar.ml[66,2944+16]..[66,2944+20])
                    []
                  core_type (src/astar.ml[66,2944+24]..[66,2944+27])
                    Ptyp_constr "int" (src/astar.ml[66,2944+24]..[66,2944+27])
                    []
                []
          ]
        module_expr (src/astar.ml[68,2973+7]..[325,10520+3])
          Pmod_structure
          [
            structure_item (src/astar.ml[70,2988+2]..[70,2988+17])
              Pstr_type Rec
              [
                type_declaration "cost" (src/astar.ml[70,2988+7]..[70,2988+11]) (src/astar.ml[70,2988+2]..[70,2988+17])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (src/astar.ml[70,2988+14]..[70,2988+17])
                        Ptyp_constr "int" (src/astar.ml[70,2988+14]..[70,2988+17])
                        []
              ]
            structure_item (src/astar.ml[73,3063+2]..[73,3063+22])
              Pstr_type Rec
              [
                type_declaration "priority" (src/astar.ml[73,3063+7]..[73,3063+15]) (src/astar.ml[73,3063+2]..[73,3063+22])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (src/astar.ml[73,3063+18]..[73,3063+22])
                        Ptyp_constr "cost" (src/astar.ml[73,3063+18]..[73,3063+22])
                        []
              ]
            structure_item (src/astar.ml[76,3141+2]..[78,3184+22])
              Pstr_type Rec
              [
                type_declaration "path" (src/astar.ml[76,3141+7]..[76,3141+11]) (src/astar.ml[76,3141+2]..[78,3184+22])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_variant
                      [
                        (src/astar.ml[77,3155+4]..[77,3155+28])
                          "Edge" (src/astar.ml[77,3155+6]..[77,3155+10])
                          [
                            core_type (src/astar.ml[77,3155+14]..[77,3155+21])
                              Ptyp_constr "G.label" (src/astar.ml[77,3155+14]..[77,3155+21])
                              []
                            core_type (src/astar.ml[77,3155+24]..[77,3155+28])
                              Ptyp_constr "path" (src/astar.ml[77,3155+24]..[77,3155+28])
                              []
                          ]
                          None
                        (src/astar.ml[78,3184+4]..[78,3184+22])
                          "Source" (src/astar.ml[78,3184+6]..[78,3184+12])
                          [
                            core_type (src/astar.ml[78,3184+16]..[78,3184+22])
                              Ptyp_constr "G.node" (src/astar.ml[78,3184+16]..[78,3184+22])
                              []
                          ]
                          None
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (src/astar.ml[80,3208+2]..[85,3329+37])
              Pstr_value Rec
              [
                <def>
                  pattern (src/astar.ml[80,3208+10]..[80,3208+16])
                    Ppat_var "follow" (src/astar.ml[80,3208+10]..[80,3208+16])
                  expression (src/astar.ml[80,3208+17]..[85,3329+37]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/astar.ml[80,3208+17]..[80,3208+23])
                      Ppat_var "labels" (src/astar.ml[80,3208+17]..[80,3208+23])
                    expression (src/astar.ml[80,3208+24]..[85,3329+37]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/astar.ml[80,3208+24]..[80,3208+28])
                        Ppat_var "path" (src/astar.ml[80,3208+24]..[80,3208+28])
                      expression (src/astar.ml[81,3239+4]..[85,3329+37])
                        Pexp_match
                        expression (src/astar.ml[81,3239+10]..[81,3239+14])
                          Pexp_ident "path" (src/astar.ml[81,3239+10]..[81,3239+14])
                        [
                          <case>
                            pattern (src/astar.ml[82,3259+6]..[82,3259+17])
                              Ppat_construct "Source" (src/astar.ml[82,3259+6]..[82,3259+12])
                              Some
                                []
                                pattern (src/astar.ml[82,3259+13]..[82,3259+17])
                                  Ppat_var "node" (src/astar.ml[82,3259+13]..[82,3259+17])
                            expression (src/astar.ml[83,3280+8]..[83,3280+20])
                              Pexp_tuple
                              [
                                expression (src/astar.ml[83,3280+8]..[83,3280+12])
                                  Pexp_ident "node" (src/astar.ml[83,3280+8]..[83,3280+12])
                                expression (src/astar.ml[83,3280+14]..[83,3280+20])
                                  Pexp_ident "labels" (src/astar.ml[83,3280+14]..[83,3280+20])
                              ]
                          <case>
                            pattern (src/astar.ml[84,3301+6]..[84,3301+24])
                              Ppat_construct "Edge" (src/astar.ml[84,3301+6]..[84,3301+10])
                              Some
                                []
                                pattern (src/astar.ml[84,3301+11]..[84,3301+24])
                                  Ppat_tuple
                                  [
                                    pattern (src/astar.ml[84,3301+12]..[84,3301+17])
                                      Ppat_var "label" (src/astar.ml[84,3301+12]..[84,3301+17])
                                    pattern (src/astar.ml[84,3301+19]..[84,3301+23])
                                      Ppat_var "path" (src/astar.ml[84,3301+19]..[84,3301+23])
                                  ]
                            expression (src/astar.ml[85,3329+8]..[85,3329+37])
                              Pexp_apply
                              expression (src/astar.ml[85,3329+8]..[85,3329+14])
                                Pexp_ident "follow" (src/astar.ml[85,3329+8]..[85,3329+14])
                              [
                                <arg>
                                Nolabel
                                  expression (src/astar.ml[85,3329+15]..[85,3329+32])
                                    Pexp_construct "::" (src/astar.ml[85,3329+22]..[85,3329+24])
                                    Some
                                      expression (src/astar.ml[85,3329+16]..[85,3329+31]) ghost
                                        Pexp_tuple
                                        [
                                          expression (src/astar.ml[85,3329+16]..[85,3329+21])
                                            Pexp_ident "label" (src/astar.ml[85,3329+16]..[85,3329+21])
                                          expression (src/astar.ml[85,3329+25]..[85,3329+31])
                                            Pexp_ident "labels" (src/astar.ml[85,3329+25]..[85,3329+31])
                                        ]
                                <arg>
                                Nolabel
                                  expression (src/astar.ml[85,3329+33]..[85,3329+37])
                                    Pexp_ident "path" (src/astar.ml[85,3329+33]..[85,3329+37])
                              ]
                        ]
              ]
            structure_item (src/astar.ml[87,3368+2]..[88,3389+18])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/astar.ml[87,3368+6]..[87,3368+13])
                    Ppat_var "reverse" (src/astar.ml[87,3368+6]..[87,3368+13])
                  expression (src/astar.ml[87,3368+14]..[88,3389+18]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/astar.ml[87,3368+14]..[87,3368+18])
                      Ppat_var "path" (src/astar.ml[87,3368+14]..[87,3368+18])
                    expression (src/astar.ml[88,3389+4]..[88,3389+18])
                      Pexp_apply
                      expression (src/astar.ml[88,3389+4]..[88,3389+10])
                        Pexp_ident "follow" (src/astar.ml[88,3389+4]..[88,3389+10])
                      [
                        <arg>
                        Nolabel
                          expression (src/astar.ml[88,3389+11]..[88,3389+13])
                            Pexp_construct "[]" (src/astar.ml[88,3389+11]..[88,3389+13])
                            None
                        <arg>
                        Nolabel
                          expression (src/astar.ml[88,3389+14]..[88,3389+18])
                            Pexp_ident "path" (src/astar.ml[88,3389+14]..[88,3389+18])
                      ]
              ]
            structure_item (src/astar.ml[90,3409+2]..[105,4077+3])
              Pstr_type Rec
              [
                type_declaration "inode" (src/astar.ml[90,3409+7]..[90,3409+12]) (src/astar.ml[90,3409+2]..[105,4077+3])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_record
                      [
                        (src/astar.ml[92,3487+6]..[92,3487+19])
                          Immutable
                          "this" (src/astar.ml[92,3487+6]..[92,3487+10])                          core_type (src/astar.ml[92,3487+12]..[92,3487+18])
                            Ptyp_constr "G.node" (src/astar.ml[92,3487+12]..[92,3487+18])
                            []
                        (src/astar.ml[94,3587+6]..[94,3587+25])
                          Mutable
                          "cost" (src/astar.ml[94,3587+14]..[94,3587+18])                          core_type (src/astar.ml[94,3587+20]..[94,3587+24])
                            Ptyp_constr "cost" (src/astar.ml[94,3587+20]..[94,3587+24])
                            []
                        (src/astar.ml[96,3695+6]..[96,3695+21])
                          Immutable
                          "estimate" (src/astar.ml[96,3695+6]..[96,3695+14])                          core_type (src/astar.ml[96,3695+16]..[96,3695+20])
                            Ptyp_constr "cost" (src/astar.ml[96,3695+16]..[96,3695+20])
                            []
                        (src/astar.ml[98,3778+6]..[98,3778+25])
                          Mutable
                          "path" (src/astar.ml[98,3778+14]..[98,3778+18])                          core_type (src/astar.ml[98,3778+20]..[98,3778+24])
                            Ptyp_constr "path" (src/astar.ml[98,3778+20]..[98,3778+24])
                            []
                        (src/astar.ml[100,3861+6]..[100,3861+26])
                          Mutable
                          "prev" (src/astar.ml[100,3861+14]..[100,3861+18])                          core_type (src/astar.ml[100,3861+20]..[100,3861+25])
                            Ptyp_constr "inode" (src/astar.ml[100,3861+20]..[100,3861+25])
                            []
                        (src/astar.ml[102,3941+6]..[102,3941+26])
                          Mutable
                          "next" (src/astar.ml[102,3941+14]..[102,3941+18])                          core_type (src/astar.ml[102,3941+20]..[102,3941+25])
                            Ptyp_constr "inode" (src/astar.ml[102,3941+20]..[102,3941+25])
                            []
                        (src/astar.ml[104,4043+6]..[104,4043+33])
                          Mutable
                          "priority" (src/astar.ml[104,4043+14]..[104,4043+22])                          core_type (src/astar.ml[104,4043+24]..[104,4043+32])
                            Ptyp_constr "priority" (src/astar.ml[104,4043+24]..[104,4043+32])
                            []
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (src/astar.ml[110,4174+2]..[132,4612+5])
              Pstr_module
              "M" (src/astar.ml[110,4174+9]..[110,4174+10])
                module_expr (src/astar.ml[110,4174+11]..[132,4612+5])
                  Pmod_constraint
                  module_expr (src/astar.ml[119,4405+8]..[132,4612+5])
                    Pmod_structure
                    [
                      structure_item (src/astar.ml[121,4421+4]..[122,4436+54])
                        Pstr_module
                        "H" (src/astar.ml[121,4421+11]..[121,4421+12])
                          module_expr (src/astar.ml[122,4436+6]..[122,4436+54])
                            Pmod_apply
                            module_expr (src/astar.ml[122,4436+6]..[122,4436+18])
                              Pmod_ident "Hashtbl.Make" (src/astar.ml[122,4436+6]..[122,4436+18])
                            module_expr (src/astar.ml[122,4436+19]..[122,4436+53])
                              Pmod_structure
                              [
                                structure_item (src/astar.ml[122,4436+26]..[122,4436+35])
                                  Pstr_include                                  module_expr (src/astar.ml[122,4436+34]..[122,4436+35])
                                    Pmod_ident "G" (src/astar.ml[122,4436+34]..[122,4436+35])
                                structure_item (src/astar.ml[122,4436+36]..[122,4436+49])
                                  Pstr_type Rec
                                  [
                                    type_declaration "t" (src/astar.ml[122,4436+41]..[122,4436+42]) (src/astar.ml[122,4436+36]..[122,4436+49])
                                      ptype_params =
                                        []
                                      ptype_cstrs =
                                        []
                                      ptype_kind =
                                        Ptype_abstract
                                      ptype_private = Public
                                      ptype_manifest =
                                        Some
                                          core_type (src/astar.ml[122,4436+45]..[122,4436+49])
                                            Ptyp_constr "node" (src/astar.ml[122,4436+45]..[122,4436+49])
                                            []
                                  ]
                              ]
                      structure_item (src/astar.ml[124,4492+4]..[124,4492+27])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (src/astar.ml[124,4492+8]..[124,4492+9])
                              Ppat_var "t" (src/astar.ml[124,4492+8]..[124,4492+9])
                            expression (src/astar.ml[124,4492+12]..[124,4492+27])
                              Pexp_apply
                              expression (src/astar.ml[124,4492+12]..[124,4492+20])
                                Pexp_ident "H.create" (src/astar.ml[124,4492+12]..[124,4492+20])
                              [
                                <arg>
                                Nolabel
                                  expression (src/astar.ml[124,4492+21]..[124,4492+27])
                                    Pexp_constant PConst_int (100003,None)
                              ]
                        ]
                      structure_item (src/astar.ml[126,4521+4]..[127,4546+24])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (src/astar.ml[126,4521+8]..[126,4521+11])
                              Ppat_var "add" (src/astar.ml[126,4521+8]..[126,4521+11])
                            expression (src/astar.ml[126,4521+12]..[127,4546+24]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/astar.ml[126,4521+12]..[126,4521+16])
                                Ppat_var "node" (src/astar.ml[126,4521+12]..[126,4521+16])
                              expression (src/astar.ml[126,4521+17]..[127,4546+24]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/astar.ml[126,4521+17]..[126,4521+22])
                                  Ppat_var "inode" (src/astar.ml[126,4521+17]..[126,4521+22])
                                expression (src/astar.ml[127,4546+6]..[127,4546+24])
                                  Pexp_apply
                                  expression (src/astar.ml[127,4546+6]..[127,4546+11])
                                    Pexp_ident "H.add" (src/astar.ml[127,4546+6]..[127,4546+11])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/astar.ml[127,4546+12]..[127,4546+13])
                                        Pexp_ident "t" (src/astar.ml[127,4546+12]..[127,4546+13])
                                    <arg>
                                    Nolabel
                                      expression (src/astar.ml[127,4546+14]..[127,4546+18])
                                        Pexp_ident "node" (src/astar.ml[127,4546+14]..[127,4546+18])
                                    <arg>
                                    Nolabel
                                      expression (src/astar.ml[127,4546+19]..[127,4546+24])
                                        Pexp_ident "inode" (src/astar.ml[127,4546+19]..[127,4546+24])
                                  ]
                        ]
                      structure_item (src/astar.ml[129,4572+4]..[130,4591+19])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (src/astar.ml[129,4572+8]..[129,4572+11])
                              Ppat_var "get" (src/astar.ml[129,4572+8]..[129,4572+11])
                            expression (src/astar.ml[129,4572+12]..[130,4591+19]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/astar.ml[129,4572+12]..[129,4572+16])
                                Ppat_var "node" (src/astar.ml[129,4572+12]..[129,4572+16])
                              expression (src/astar.ml[130,4591+6]..[130,4591+19])
                                Pexp_apply
                                expression (src/astar.ml[130,4591+6]..[130,4591+12])
                                  Pexp_ident "H.find" (src/astar.ml[130,4591+6]..[130,4591+12])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/astar.ml[130,4591+13]..[130,4591+14])
                                      Pexp_ident "t" (src/astar.ml[130,4591+13]..[130,4591+14])
                                  <arg>
                                  Nolabel
                                    expression (src/astar.ml[130,4591+15]..[130,4591+19])
                                      Pexp_ident "node" (src/astar.ml[130,4591+15]..[130,4591+19])
                                ]
                        ]
                    ]
                  module_type (src/astar.ml[110,4174+13]..[119,4405+5])
                    Pmty_signature
                    [
                      signature_item (src/astar.ml[113,4233+4]..[113,4233+36])
                        Psig_value
                        value_description "add" (src/astar.ml[113,4233+8]..[113,4233+11]) (src/astar.ml[113,4233+4]..[113,4233+36])
                          core_type (src/astar.ml[113,4233+13]..[113,4233+36])
                            Ptyp_arrow
                            Nolabel
                            core_type (src/astar.ml[113,4233+13]..[113,4233+19])
                              Ptyp_constr "G.node" (src/astar.ml[113,4233+13]..[113,4233+19])
                              []
                            core_type (src/astar.ml[113,4233+23]..[113,4233+36])
                              Ptyp_arrow
                              Nolabel
                              core_type (src/astar.ml[113,4233+23]..[113,4233+28])
                                Ptyp_constr "inode" (src/astar.ml[113,4233+23]..[113,4233+28])
                                []
                              core_type (src/astar.ml[113,4233+32]..[113,4233+36])
                                Ptyp_constr "unit" (src/astar.ml[113,4233+32]..[113,4233+36])
                                []
                          []
                      signature_item (src/astar.ml[117,4375+4]..[117,4375+28])
                        Psig_value
                        value_description "get" (src/astar.ml[117,4375+8]..[117,4375+11]) (src/astar.ml[117,4375+4]..[117,4375+28])
                          core_type (src/astar.ml[117,4375+13]..[117,4375+28])
                            Ptyp_arrow
                            Nolabel
                            core_type (src/astar.ml[117,4375+13]..[117,4375+19])
                              Ptyp_constr "G.node" (src/astar.ml[117,4375+13]..[117,4375+19])
                              []
                            core_type (src/astar.ml[117,4375+23]..[117,4375+28])
                              Ptyp_constr "inode" (src/astar.ml[117,4375+23]..[117,4375+28])
                              []
                          []
                    ]
            structure_item (src/astar.ml[137,4703+2]..[226,7741+5])
              Pstr_module
              "P" (src/astar.ml[137,4703+9]..[137,4703+10])
                module_expr (src/astar.ml[137,4703+11]..[226,7741+5])
                  Pmod_constraint
                  module_expr (src/astar.ml[151,5137+8]..[226,7741+5])
                    Pmod_structure
                    [
                      structure_item (src/astar.ml[153,5153+4]..[153,5153+50])
                        Pstr_module
                        "InfiniteArray" (src/astar.ml[153,5153+11]..[153,5153+24])
                          module_expr (src/astar.ml[153,5153+27]..[153,5153+50])
                            Pmod_ident "MenhirLib.InfiniteArray" (src/astar.ml[153,5153+27]..[153,5153+50])
                      structure_item (src/astar.ml[159,5467+4]..[159,5467+35])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (src/astar.ml[159,5467+8]..[159,5467+9])
                              Ppat_var "a" (src/astar.ml[159,5467+8]..[159,5467+9])
                            expression (src/astar.ml[159,5467+12]..[159,5467+35])
                              Pexp_apply
                              expression (src/astar.ml[159,5467+12]..[159,5467+30])
                                Pexp_ident "InfiniteArray.make" (src/astar.ml[159,5467+12]..[159,5467+30])
                              [
                                <arg>
                                Nolabel
                                  expression (src/astar.ml[159,5467+31]..[159,5467+35])
                                    Pexp_construct "None" (src/astar.ml[159,5467+31]..[159,5467+35])
                                    None
                              ]
                        ]
                      structure_item (src/astar.ml[163,5647+4]..[163,5647+20])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (src/astar.ml[163,5647+8]..[163,5647+12])
                              Ppat_var "best" (src/astar.ml[163,5647+8]..[163,5647+12])
                            expression (src/astar.ml[163,5647+15]..[163,5647+20])
                              Pexp_apply
                              expression (src/astar.ml[163,5647+15]..[163,5647+18])
                                Pexp_ident "ref" (src/astar.ml[163,5647+15]..[163,5647+18])
                              [
                                <arg>
                                Nolabel
                                  expression (src/astar.ml[163,5647+19]..[163,5647+20])
                                    Pexp_constant PConst_int (0,None)
                              ]
                        ]
                      structure_item (src/astar.ml[167,5783+4]..[167,5783+24])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (src/astar.ml[167,5783+8]..[167,5783+16])
                              Ppat_var "cardinal" (src/astar.ml[167,5783+8]..[167,5783+16])
                            expression (src/astar.ml[167,5783+19]..[167,5783+24])
                              Pexp_apply
                              expression (src/astar.ml[167,5783+19]..[167,5783+22])
                                Pexp_ident "ref" (src/astar.ml[167,5783+19]..[167,5783+22])
                              [
                                <arg>
                                Nolabel
                                  expression (src/astar.ml[167,5783+23]..[167,5783+24])
                                    Pexp_constant PConst_int (0,None)
                              ]
                        ]
                      structure_item (src/astar.ml[170,5878+4]..[185,6486+30])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (src/astar.ml[170,5878+8]..[170,5878+11])
                              Ppat_var "add" (src/astar.ml[170,5878+8]..[170,5878+11])
                            expression (src/astar.ml[170,5878+12]..[185,6486+30]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/astar.ml[170,5878+12]..[170,5878+17])
                                Ppat_var "inode" (src/astar.ml[170,5878+12]..[170,5878+17])
                              expression (src/astar.ml[170,5878+18]..[185,6486+30]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/astar.ml[170,5878+18]..[170,5878+26])
                                  Ppat_var "priority" (src/astar.ml[170,5878+18]..[170,5878+26])
                                expression (src/astar.ml[171,5907+6]..[185,6486+30])
                                  Pexp_sequence
                                  expression (src/astar.ml[171,5907+6]..[171,5907+28])
                                    Pexp_assert
                                    expression (src/astar.ml[171,5907+13]..[171,5907+28])
                                      Pexp_apply
                                      expression (src/astar.ml[171,5907+16]..[171,5907+18])
                                        Pexp_ident "<=" (src/astar.ml[171,5907+16]..[171,5907+18])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/astar.ml[171,5907+14]..[171,5907+15])
                                            Pexp_constant PConst_int (0,None)
                                        <arg>
                                        Nolabel
                                          expression (src/astar.ml[171,5907+19]..[171,5907+27])
                                            Pexp_ident "priority" (src/astar.ml[171,5907+19]..[171,5907+27])
                                      ]
                                  expression (src/astar.ml[172,5937+6]..[185,6486+30])
                                    Pexp_sequence
                                    expression (src/astar.ml[172,5937+6]..[172,5937+31])
                                      Pexp_apply
                                      expression (src/astar.ml[172,5937+15]..[172,5937+17])
                                        Pexp_ident ":=" (src/astar.ml[172,5937+15]..[172,5937+17])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/astar.ml[172,5937+6]..[172,5937+14])
                                            Pexp_ident "cardinal" (src/astar.ml[172,5937+6]..[172,5937+14])
                                        <arg>
                                        Nolabel
                                          expression (src/astar.ml[172,5937+18]..[172,5937+31])
                                            Pexp_apply
                                            expression (src/astar.ml[172,5937+28]..[172,5937+29])
                                              Pexp_ident "+" (src/astar.ml[172,5937+28]..[172,5937+29])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/astar.ml[172,5937+18]..[172,5937+27])
                                                  Pexp_apply
                                                  expression (src/astar.ml[172,5937+18]..[172,5937+19])
                                                    Pexp_ident "!" (src/astar.ml[172,5937+18]..[172,5937+19])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/astar.ml[172,5937+19]..[172,5937+27])
                                                        Pexp_ident "cardinal" (src/astar.ml[172,5937+19]..[172,5937+27])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (src/astar.ml[172,5937+30]..[172,5937+31])
                                                  Pexp_constant PConst_int (1,None)
                                            ]
                                      ]
                                    expression (src/astar.ml[173,5970+6]..[185,6486+30])
                                      Pexp_sequence
                                      expression (src/astar.ml[173,5970+6]..[173,5970+32])
                                        Pexp_setfield
                                        expression (src/astar.ml[173,5970+6]..[173,5970+11])
                                          Pexp_ident "inode" (src/astar.ml[173,5970+6]..[173,5970+11])
                                        "priority" (src/astar.ml[173,5970+12]..[173,5970+20])
                                        expression (src/astar.ml[173,5970+24]..[173,5970+32])
                                          Pexp_ident "priority" (src/astar.ml[173,5970+24]..[173,5970+32])
                                      expression (src/astar.ml[174,6004+6]..[185,6486+30])
                                        Pexp_match
                                        expression (src/astar.ml[174,6004+12]..[174,6004+40])
                                          Pexp_apply
                                          expression (src/astar.ml[174,6004+12]..[174,6004+29])
                                            Pexp_ident "InfiniteArray.get" (src/astar.ml[174,6004+12]..[174,6004+29])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/astar.ml[174,6004+30]..[174,6004+31])
                                                Pexp_ident "a" (src/astar.ml[174,6004+30]..[174,6004+31])
                                            <arg>
                                            Nolabel
                                              expression (src/astar.ml[174,6004+32]..[174,6004+40])
                                                Pexp_ident "priority" (src/astar.ml[174,6004+32]..[174,6004+40])
                                          ]
                                        [
                                          <case>
                                            pattern (src/astar.ml[175,6050+8]..[175,6050+12])
                                              Ppat_construct "None" (src/astar.ml[175,6050+8]..[175,6050+12])
                                              None
                                            expression (src/astar.ml[176,6066+10]..[179,6261+37])
                                              Pexp_sequence
                                              expression (src/astar.ml[176,6066+10]..[176,6066+51])
                                                Pexp_apply
                                                expression (src/astar.ml[176,6066+10]..[176,6066+27])
                                                  Pexp_ident "InfiniteArray.set" (src/astar.ml[176,6066+10]..[176,6066+27])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/astar.ml[176,6066+28]..[176,6066+29])
                                                      Pexp_ident "a" (src/astar.ml[176,6066+28]..[176,6066+29])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/astar.ml[176,6066+30]..[176,6066+38])
                                                      Pexp_ident "priority" (src/astar.ml[176,6066+30]..[176,6066+38])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/astar.ml[176,6066+39]..[176,6066+51])
                                                      Pexp_construct "Some" (src/astar.ml[176,6066+40]..[176,6066+44])
                                                      Some
                                                        expression (src/astar.ml[176,6066+45]..[176,6066+50])
                                                          Pexp_ident "inode" (src/astar.ml[176,6066+45]..[176,6066+50])
                                                ]
                                              expression (src/astar.ml[179,6261+10]..[179,6261+36])
                                                Pexp_assert
                                                expression (src/astar.ml[179,6261+17]..[179,6261+36])
                                                  Pexp_apply
                                                  expression (src/astar.ml[179,6261+24]..[179,6261+26])
                                                    Pexp_ident "<=" (src/astar.ml[179,6261+24]..[179,6261+26])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/astar.ml[179,6261+18]..[179,6261+23])
                                                        Pexp_apply
                                                        expression (src/astar.ml[179,6261+18]..[179,6261+19])
                                                          Pexp_ident "!" (src/astar.ml[179,6261+18]..[179,6261+19])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/astar.ml[179,6261+19]..[179,6261+23])
                                                              Pexp_ident "best" (src/astar.ml[179,6261+19]..[179,6261+23])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (src/astar.ml[179,6261+27]..[179,6261+35])
                                                        Pexp_ident "priority" (src/astar.ml[179,6261+27]..[179,6261+35])
                                                  ]
                                          <case>
                                            pattern (src/astar.ml[181,6357+8]..[181,6357+19])
                                              Ppat_construct "Some" (src/astar.ml[181,6357+8]..[181,6357+12])
                                              Some
                                                []
                                                pattern (src/astar.ml[181,6357+13]..[181,6357+19])
                                                  Ppat_var "inode'" (src/astar.ml[181,6357+13]..[181,6357+19])
                                            expression (src/astar.ml[182,6380+10]..[185,6486+30])
                                              Pexp_sequence
                                              expression (src/astar.ml[182,6380+10]..[182,6380+30])
                                                Pexp_setfield
                                                expression (src/astar.ml[182,6380+10]..[182,6380+15])
                                                  Pexp_ident "inode" (src/astar.ml[182,6380+10]..[182,6380+15])
                                                "next" (src/astar.ml[182,6380+16]..[182,6380+20])
                                                expression (src/astar.ml[182,6380+24]..[182,6380+30])
                                                  Pexp_ident "inode'" (src/astar.ml[182,6380+24]..[182,6380+30])
                                              expression (src/astar.ml[183,6412+10]..[185,6486+30])
                                                Pexp_sequence
                                                expression (src/astar.ml[183,6412+10]..[183,6412+35])
                                                  Pexp_setfield
                                                  expression (src/astar.ml[183,6412+10]..[183,6412+15])
                                                    Pexp_ident "inode" (src/astar.ml[183,6412+10]..[183,6412+15])
                                                  "prev" (src/astar.ml[183,6412+16]..[183,6412+20])
                                                  expression (src/astar.ml[183,6412+24]..[183,6412+35])
                                                    Pexp_field
                                                    expression (src/astar.ml[183,6412+24]..[183,6412+30])
                                                      Pexp_ident "inode'" (src/astar.ml[183,6412+24]..[183,6412+30])
                                                    "prev" (src/astar.ml[183,6412+31]..[183,6412+35])
                                                expression (src/astar.ml[184,6449+10]..[185,6486+30])
                                                  Pexp_sequence
                                                  expression (src/astar.ml[184,6449+10]..[184,6449+35])
                                                    Pexp_setfield
                                                    expression (src/astar.ml[184,6449+10]..[184,6449+21])
                                                      Pexp_field
                                                      expression (src/astar.ml[184,6449+10]..[184,6449+16])
                                                        Pexp_ident "inode'" (src/astar.ml[184,6449+10]..[184,6449+16])
                                                      "prev" (src/astar.ml[184,6449+17]..[184,6449+21])
                                                    "next" (src/astar.ml[184,6449+22]..[184,6449+26])
                                                    expression (src/astar.ml[184,6449+30]..[184,6449+35])
                                                      Pexp_ident "inode" (src/astar.ml[184,6449+30]..[184,6449+35])
                                                  expression (src/astar.ml[185,6486+10]..[185,6486+30])
                                                    Pexp_setfield
                                                    expression (src/astar.ml[185,6486+10]..[185,6486+16])
                                                      Pexp_ident "inode'" (src/astar.ml[185,6486+10]..[185,6486+16])
                                                    "prev" (src/astar.ml[185,6486+17]..[185,6486+21])
                                                    expression (src/astar.ml[185,6486+25]..[185,6486+30])
                                                      Pexp_ident "inode" (src/astar.ml[185,6486+25]..[185,6486+30])
                                        ]
                        ]
                      structure_item (src/astar.ml[189,6661+4]..[200,7024+26])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (src/astar.ml[189,6661+8]..[189,6661+14])
                              Ppat_var "remove" (src/astar.ml[189,6661+8]..[189,6661+14])
                            expression (src/astar.ml[189,6661+15]..[200,7024+26]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/astar.ml[189,6661+15]..[189,6661+20])
                                Ppat_var "inode" (src/astar.ml[189,6661+15]..[189,6661+20])
                              expression (src/astar.ml[190,6684+6]..[200,7024+26])
                                Pexp_sequence
                                expression (src/astar.ml[190,6684+6]..[190,6684+31])
                                  Pexp_apply
                                  expression (src/astar.ml[190,6684+15]..[190,6684+17])
                                    Pexp_ident ":=" (src/astar.ml[190,6684+15]..[190,6684+17])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/astar.ml[190,6684+6]..[190,6684+14])
                                        Pexp_ident "cardinal" (src/astar.ml[190,6684+6]..[190,6684+14])
                                    <arg>
                                    Nolabel
                                      expression (src/astar.ml[190,6684+18]..[190,6684+31])
                                        Pexp_apply
                                        expression (src/astar.ml[190,6684+28]..[190,6684+29])
                                          Pexp_ident "-" (src/astar.ml[190,6684+28]..[190,6684+29])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/astar.ml[190,6684+18]..[190,6684+27])
                                              Pexp_apply
                                              expression (src/astar.ml[190,6684+18]..[190,6684+19])
                                                Pexp_ident "!" (src/astar.ml[190,6684+18]..[190,6684+19])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/astar.ml[190,6684+19]..[190,6684+27])
                                                    Pexp_ident "cardinal" (src/astar.ml[190,6684+19]..[190,6684+27])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (src/astar.ml[190,6684+30]..[190,6684+31])
                                              Pexp_constant PConst_int (1,None)
                                        ]
                                  ]
                                expression (src/astar.ml[191,6717+6]..[200,7024+26])
                                  Pexp_sequence
                                  expression (src/astar.ml[191,6717+6]..[199,7013+9])
                                    Pexp_ifthenelse
                                    expression (src/astar.ml[191,6717+9]..[191,6717+28])
                                      Pexp_apply
                                      expression (src/astar.ml[191,6717+20]..[191,6717+22])
                                        Pexp_ident "==" (src/astar.ml[191,6717+20]..[191,6717+22])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/astar.ml[191,6717+9]..[191,6717+19])
                                            Pexp_field
                                            expression (src/astar.ml[191,6717+9]..[191,6717+14])
                                              Pexp_ident "inode" (src/astar.ml[191,6717+9]..[191,6717+14])
                                            "next" (src/astar.ml[191,6717+15]..[191,6717+19])
                                        <arg>
                                        Nolabel
                                          expression (src/astar.ml[191,6717+23]..[191,6717+28])
                                            Pexp_ident "inode" (src/astar.ml[191,6717+23]..[191,6717+28])
                                      ]
                                    expression (src/astar.ml[192,6751+8]..[192,6751+47])
                                      Pexp_apply
                                      expression (src/astar.ml[192,6751+8]..[192,6751+25])
                                        Pexp_ident "InfiniteArray.set" (src/astar.ml[192,6751+8]..[192,6751+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/astar.ml[192,6751+26]..[192,6751+27])
                                            Pexp_ident "a" (src/astar.ml[192,6751+26]..[192,6751+27])
                                        <arg>
                                        Nolabel
                                          expression (src/astar.ml[192,6751+28]..[192,6751+42])
                                            Pexp_field
                                            expression (src/astar.ml[192,6751+28]..[192,6751+33])
                                              Pexp_ident "inode" (src/astar.ml[192,6751+28]..[192,6751+33])
                                            "priority" (src/astar.ml[192,6751+34]..[192,6751+42])
                                        <arg>
                                        Nolabel
                                          expression (src/astar.ml[192,6751+43]..[192,6751+47])
                                            Pexp_construct "None" (src/astar.ml[192,6751+43]..[192,6751+47])
                                            None
                                      ]
                                    Some
                                      expression (src/astar.ml[193,6799+11]..[199,7013+9])
                                        Pexp_sequence
                                        expression (src/astar.ml[194,6816+8]..[194,6816+60])
                                          Pexp_apply
                                          expression (src/astar.ml[194,6816+8]..[194,6816+25])
                                            Pexp_ident "InfiniteArray.set" (src/astar.ml[194,6816+8]..[194,6816+25])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/astar.ml[194,6816+26]..[194,6816+27])
                                                Pexp_ident "a" (src/astar.ml[194,6816+26]..[194,6816+27])
                                            <arg>
                                            Nolabel
                                              expression (src/astar.ml[194,6816+28]..[194,6816+42])
                                                Pexp_field
                                                expression (src/astar.ml[194,6816+28]..[194,6816+33])
                                                  Pexp_ident "inode" (src/astar.ml[194,6816+28]..[194,6816+33])
                                                "priority" (src/astar.ml[194,6816+34]..[194,6816+42])
                                            <arg>
                                            Nolabel
                                              expression (src/astar.ml[194,6816+43]..[194,6816+60])
                                                Pexp_construct "Some" (src/astar.ml[194,6816+44]..[194,6816+48])
                                                Some
                                                  expression (src/astar.ml[194,6816+49]..[194,6816+59])
                                                    Pexp_field
                                                    expression (src/astar.ml[194,6816+49]..[194,6816+54])
                                                      Pexp_ident "inode" (src/astar.ml[194,6816+49]..[194,6816+54])
                                                    "next" (src/astar.ml[194,6816+55]..[194,6816+59])
                                          ]
                                        expression (src/astar.ml[195,6878+8]..[198,6985+27])
                                          Pexp_sequence
                                          expression (src/astar.ml[195,6878+8]..[195,6878+37])
                                            Pexp_setfield
                                            expression (src/astar.ml[195,6878+8]..[195,6878+18])
                                              Pexp_field
                                              expression (src/astar.ml[195,6878+8]..[195,6878+13])
                                                Pexp_ident "inode" (src/astar.ml[195,6878+8]..[195,6878+13])
                                              "next" (src/astar.ml[195,6878+14]..[195,6878+18])
                                            "prev" (src/astar.ml[195,6878+19]..[195,6878+23])
                                            expression (src/astar.ml[195,6878+27]..[195,6878+37])
                                              Pexp_field
                                              expression (src/astar.ml[195,6878+27]..[195,6878+32])
                                                Pexp_ident "inode" (src/astar.ml[195,6878+27]..[195,6878+32])
                                              "prev" (src/astar.ml[195,6878+33]..[195,6878+37])
                                          expression (src/astar.ml[196,6917+8]..[198,6985+27])
                                            Pexp_sequence
                                            expression (src/astar.ml[196,6917+8]..[196,6917+37])
                                              Pexp_setfield
                                              expression (src/astar.ml[196,6917+8]..[196,6917+18])
                                                Pexp_field
                                                expression (src/astar.ml[196,6917+8]..[196,6917+13])
                                                  Pexp_ident "inode" (src/astar.ml[196,6917+8]..[196,6917+13])
                                                "prev" (src/astar.ml[196,6917+14]..[196,6917+18])
                                              "next" (src/astar.ml[196,6917+19]..[196,6917+23])
                                              expression (src/astar.ml[196,6917+27]..[196,6917+37])
                                                Pexp_field
                                                expression (src/astar.ml[196,6917+27]..[196,6917+32])
                                                  Pexp_ident "inode" (src/astar.ml[196,6917+27]..[196,6917+32])
                                                "next" (src/astar.ml[196,6917+33]..[196,6917+37])
                                            expression (src/astar.ml[197,6956+8]..[198,6985+27])
                                              Pexp_sequence
                                              expression (src/astar.ml[197,6956+8]..[197,6956+27])
                                                Pexp_setfield
                                                expression (src/astar.ml[197,6956+8]..[197,6956+13])
                                                  Pexp_ident "inode" (src/astar.ml[197,6956+8]..[197,6956+13])
                                                "next" (src/astar.ml[197,6956+14]..[197,6956+18])
                                                expression (src/astar.ml[197,6956+22]..[197,6956+27])
                                                  Pexp_ident "inode" (src/astar.ml[197,6956+22]..[197,6956+27])
                                              expression (src/astar.ml[198,6985+8]..[198,6985+27])
                                                Pexp_setfield
                                                expression (src/astar.ml[198,6985+8]..[198,6985+13])
                                                  Pexp_ident "inode" (src/astar.ml[198,6985+8]..[198,6985+13])
                                                "prev" (src/astar.ml[198,6985+14]..[198,6985+18])
                                                expression (src/astar.ml[198,6985+22]..[198,6985+27])
                                                  Pexp_ident "inode" (src/astar.ml[198,6985+22]..[198,6985+27])
                                  expression (src/astar.ml[200,7024+6]..[200,7024+26])
                                    Pexp_setfield
                                    expression (src/astar.ml[200,7024+6]..[200,7024+11])
                                      Pexp_ident "inode" (src/astar.ml[200,7024+6]..[200,7024+11])
                                    "priority" (src/astar.ml[200,7024+12]..[200,7024+20])
                                    expression (src/astar.ml[200,7024+24]..[200,7024+26])
                                      Pexp_constant PConst_int (-1,None)
                        ]
                      structure_item (src/astar.ml[202,7052+4]..[219,7600+16])
                        Pstr_value Rec
                        [
                          <def>
                            pattern (src/astar.ml[202,7052+12]..[202,7052+15])
                              Ppat_var "get" (src/astar.ml[202,7052+12]..[202,7052+15])
                            expression (src/astar.ml[202,7052+16]..[206,7125+22]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/astar.ml[202,7052+16]..[202,7052+18])
                                Ppat_construct "()" (src/astar.ml[202,7052+16]..[202,7052+18])
                                None
                              expression (src/astar.ml[203,7073+6]..[206,7125+22])
                                Pexp_ifthenelse
                                expression (src/astar.ml[203,7073+9]..[203,7073+22])
                                  Pexp_apply
                                  expression (src/astar.ml[203,7073+19]..[203,7073+20])
                                    Pexp_ident "=" (src/astar.ml[203,7073+19]..[203,7073+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/astar.ml[203,7073+9]..[203,7073+18])
                                        Pexp_apply
                                        expression (src/astar.ml[203,7073+9]..[203,7073+10])
                                          Pexp_ident "!" (src/astar.ml[203,7073+9]..[203,7073+10])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/astar.ml[203,7073+10]..[203,7073+18])
                                              Pexp_ident "cardinal" (src/astar.ml[203,7073+10]..[203,7073+18])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/astar.ml[203,7073+21]..[203,7073+22])
                                        Pexp_constant PConst_int (0,None)
                                  ]
                                expression (src/astar.ml[204,7101+8]..[204,7101+12])
                                  Pexp_construct "None" (src/astar.ml[204,7101+8]..[204,7101+12])
                                  None
                                Some
                                  expression (src/astar.ml[206,7125+8]..[206,7125+22])
                                    Pexp_apply
                                    expression (src/astar.ml[206,7125+8]..[206,7125+20])
                                      Pexp_ident "get_nonempty" (src/astar.ml[206,7125+8]..[206,7125+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/astar.ml[206,7125+20]..[206,7125+22])
                                          Pexp_construct "()" (src/astar.ml[206,7125+20]..[206,7125+22])
                                          None
                                    ]
                          <def>
                            pattern (src/astar.ml[208,7149+8]..[208,7149+20])
                              Ppat_var "get_nonempty" (src/astar.ml[208,7149+8]..[208,7149+20])
                            expression (src/astar.ml[208,7149+21]..[219,7600+16]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/astar.ml[208,7149+21]..[208,7149+23])
                                Ppat_construct "()" (src/astar.ml[208,7149+21]..[208,7149+23])
                                None
                              expression (src/astar.ml[213,7431+6]..[219,7600+16])
                                Pexp_match
                                expression (src/astar.ml[213,7431+12]..[213,7431+37])
                                  Pexp_apply
                                  expression (src/astar.ml[213,7431+12]..[213,7431+29])
                                    Pexp_ident "InfiniteArray.get" (src/astar.ml[213,7431+12]..[213,7431+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/astar.ml[213,7431+30]..[213,7431+31])
                                        Pexp_ident "a" (src/astar.ml[213,7431+30]..[213,7431+31])
                                    <arg>
                                    Nolabel
                                      expression (src/astar.ml[213,7431+32]..[213,7431+37])
                                        Pexp_apply
                                        expression (src/astar.ml[213,7431+32]..[213,7431+33])
                                          Pexp_ident "!" (src/astar.ml[213,7431+32]..[213,7431+33])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/astar.ml[213,7431+33]..[213,7431+37])
                                              Pexp_ident "best" (src/astar.ml[213,7431+33]..[213,7431+37])
                                        ]
                                  ]
                                [
                                  <case>
                                    pattern (src/astar.ml[214,7474+8]..[214,7474+12])
                                      Ppat_construct "None" (src/astar.ml[214,7474+8]..[214,7474+12])
                                      None
                                    expression (src/astar.ml[215,7490+10]..[216,7519+24])
                                      Pexp_sequence
                                      expression (src/astar.ml[215,7490+10]..[215,7490+27])
                                        Pexp_apply
                                        expression (src/astar.ml[215,7490+15]..[215,7490+17])
                                          Pexp_ident ":=" (src/astar.ml[215,7490+15]..[215,7490+17])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/astar.ml[215,7490+10]..[215,7490+14])
                                              Pexp_ident "best" (src/astar.ml[215,7490+10]..[215,7490+14])
                                          <arg>
                                          Nolabel
                                            expression (src/astar.ml[215,7490+18]..[215,7490+27])
                                              Pexp_apply
                                              expression (src/astar.ml[215,7490+24]..[215,7490+25])
                                                Pexp_ident "+" (src/astar.ml[215,7490+24]..[215,7490+25])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/astar.ml[215,7490+18]..[215,7490+23])
                                                    Pexp_apply
                                                    expression (src/astar.ml[215,7490+18]..[215,7490+19])
                                                      Pexp_ident "!" (src/astar.ml[215,7490+18]..[215,7490+19])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/astar.ml[215,7490+19]..[215,7490+23])
                                                          Pexp_ident "best" (src/astar.ml[215,7490+19]..[215,7490+23])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (src/astar.ml[215,7490+26]..[215,7490+27])
                                                    Pexp_constant PConst_int (1,None)
                                              ]
                                        ]
                                      expression (src/astar.ml[216,7519+10]..[216,7519+24])
                                        Pexp_apply
                                        expression (src/astar.ml[216,7519+10]..[216,7519+22])
                                          Pexp_ident "get_nonempty" (src/astar.ml[216,7519+10]..[216,7519+22])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/astar.ml[216,7519+22]..[216,7519+24])
                                              Pexp_construct "()" (src/astar.ml[216,7519+22]..[216,7519+24])
                                              None
                                        ]
                                  <case>
                                    pattern (src/astar.ml[217,7544+8]..[217,7544+28])
                                      Ppat_alias "result" (src/astar.ml[217,7544+22]..[217,7544+28])
                                      pattern (src/astar.ml[217,7544+8]..[217,7544+18])
                                        Ppat_construct "Some" (src/astar.ml[217,7544+8]..[217,7544+12])
                                        Some
                                          []
                                          pattern (src/astar.ml[217,7544+13]..[217,7544+18])
                                            Ppat_var "inode" (src/astar.ml[217,7544+13]..[217,7544+18])
                                    expression (src/astar.ml[218,7576+10]..[219,7600+16])
                                      Pexp_sequence
                                      expression (src/astar.ml[218,7576+10]..[218,7576+22])
                                        Pexp_apply
                                        expression (src/astar.ml[218,7576+10]..[218,7576+16])
                                          Pexp_ident "remove" (src/astar.ml[218,7576+10]..[218,7576+16])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/astar.ml[218,7576+17]..[218,7576+22])
                                              Pexp_ident "inode" (src/astar.ml[218,7576+17]..[218,7576+22])
                                        ]
                                      expression (src/astar.ml[219,7600+10]..[219,7600+16])
                                        Pexp_ident "result" (src/astar.ml[219,7600+10]..[219,7600+16])
                                ]
                        ]
                      structure_item (src/astar.ml[221,7618+4]..[224,7715+24])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (src/astar.ml[221,7618+8]..[221,7618+23])
                              Ppat_var "add_or_decrease" (src/astar.ml[221,7618+8]..[221,7618+23])
                            expression (src/astar.ml[221,7618+24]..[224,7715+24]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/astar.ml[221,7618+24]..[221,7618+29])
                                Ppat_var "inode" (src/astar.ml[221,7618+24]..[221,7618+29])
                              expression (src/astar.ml[221,7618+30]..[224,7715+24]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/astar.ml[221,7618+30]..[221,7618+38])
                                  Ppat_var "priority" (src/astar.ml[221,7618+30]..[221,7618+38])
                                expression (src/astar.ml[222,7659+6]..[224,7715+24])
                                  Pexp_sequence
                                  expression (src/astar.ml[222,7659+6]..[223,7693+20])
                                    Pexp_ifthenelse
                                    expression (src/astar.ml[222,7659+9]..[222,7659+28])
                                      Pexp_apply
                                      expression (src/astar.ml[222,7659+24]..[222,7659+26])
                                        Pexp_ident ">=" (src/astar.ml[222,7659+24]..[222,7659+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/astar.ml[222,7659+9]..[222,7659+23])
                                            Pexp_field
                                            expression (src/astar.ml[222,7659+9]..[222,7659+14])
                                              Pexp_ident "inode" (src/astar.ml[222,7659+9]..[222,7659+14])
                                            "priority" (src/astar.ml[222,7659+15]..[222,7659+23])
                                        <arg>
                                        Nolabel
                                          expression (src/astar.ml[222,7659+27]..[222,7659+28])
                                            Pexp_constant PConst_int (0,None)
                                      ]
                                    expression (src/astar.ml[223,7693+8]..[223,7693+20])
                                      Pexp_apply
                                      expression (src/astar.ml[223,7693+8]..[223,7693+14])
                                        Pexp_ident "remove" (src/astar.ml[223,7693+8]..[223,7693+14])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/astar.ml[223,7693+15]..[223,7693+20])
                                            Pexp_ident "inode" (src/astar.ml[223,7693+15]..[223,7693+20])
                                      ]
                                    None
                                  expression (src/astar.ml[224,7715+6]..[224,7715+24])
                                    Pexp_apply
                                    expression (src/astar.ml[224,7715+6]..[224,7715+9])
                                      Pexp_ident "add" (src/astar.ml[224,7715+6]..[224,7715+9])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/astar.ml[224,7715+10]..[224,7715+15])
                                          Pexp_ident "inode" (src/astar.ml[224,7715+10]..[224,7715+15])
                                      <arg>
                                      Nolabel
                                        expression (src/astar.ml[224,7715+16]..[224,7715+24])
                                          Pexp_ident "priority" (src/astar.ml[224,7715+16]..[224,7715+24])
                                    ]
                        ]
                    ]
                  module_type (src/astar.ml[137,4703+13]..[151,5137+5])
                    Pmty_signature
                    [
                      signature_item (src/astar.ml[140,4760+4]..[140,4760+38])
                        Psig_value
                        value_description "add" (src/astar.ml[140,4760+8]..[140,4760+11]) (src/astar.ml[140,4760+4]..[140,4760+38])
                          core_type (src/astar.ml[140,4760+13]..[140,4760+38])
                            Ptyp_arrow
                            Nolabel
                            core_type (src/astar.ml[140,4760+13]..[140,4760+18])
                              Ptyp_constr "inode" (src/astar.ml[140,4760+13]..[140,4760+18])
                              []
                            core_type (src/astar.ml[140,4760+22]..[140,4760+38])
                              Ptyp_arrow
                              Nolabel
                              core_type (src/astar.ml[140,4760+22]..[140,4760+30])
                                Ptyp_constr "priority" (src/astar.ml[140,4760+22]..[140,4760+30])
                                []
                              core_type (src/astar.ml[140,4760+34]..[140,4760+38])
                                Ptyp_constr "unit" (src/astar.ml[140,4760+34]..[140,4760+38])
                                []
                          []
                      signature_item (src/astar.ml[146,4989+4]..[146,4989+50])
                        Psig_value
                        value_description "add_or_decrease" (src/astar.ml[146,4989+8]..[146,4989+23]) (src/astar.ml[146,4989+4]..[146,4989+50])
                          core_type (src/astar.ml[146,4989+25]..[146,4989+50])
                            Ptyp_arrow
                            Nolabel
                            core_type (src/astar.ml[146,4989+25]..[146,4989+30])
                              Ptyp_constr "inode" (src/astar.ml[146,4989+25]..[146,4989+30])
                              []
                            core_type (src/astar.ml[146,4989+34]..[146,4989+50])
                              Ptyp_arrow
                              Nolabel
                              core_type (src/astar.ml[146,4989+34]..[146,4989+42])
                                Ptyp_constr "priority" (src/astar.ml[146,4989+34]..[146,4989+42])
                                []
                              core_type (src/astar.ml[146,4989+46]..[146,4989+50])
                                Ptyp_constr "unit" (src/astar.ml[146,4989+46]..[146,4989+50])
                                []
                          []
                      signature_item (src/astar.ml[149,5102+4]..[149,5102+33])
                        Psig_value
                        value_description "get" (src/astar.ml[149,5102+8]..[149,5102+11]) (src/astar.ml[149,5102+4]..[149,5102+33])
                          core_type (src/astar.ml[149,5102+13]..[149,5102+33])
                            Ptyp_arrow
                            Nolabel
                            core_type (src/astar.ml[149,5102+13]..[149,5102+17])
                              Ptyp_constr "unit" (src/astar.ml[149,5102+13]..[149,5102+17])
                              []
                            core_type (src/astar.ml[149,5102+21]..[149,5102+33])
                              Ptyp_constr "option" (src/astar.ml[149,5102+27]..[149,5102+33])
                              [
                                core_type (src/astar.ml[149,5102+21]..[149,5102+26])
                                  Ptyp_constr "inode" (src/astar.ml[149,5102+21]..[149,5102+26])
                                  []
                              ]
                          []
                    ]
            structure_item (src/astar.ml[230,7773+2]..[233,7878+5])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/astar.ml[230,7773+6]..[230,7773+14])
                    Ppat_var "estimate" (src/astar.ml[230,7773+6]..[230,7773+14])
                  expression (src/astar.ml[230,7773+15]..[233,7878+5]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/astar.ml[230,7773+15]..[230,7773+19])
                      Ppat_var "node" (src/astar.ml[230,7773+15]..[230,7773+19])
                    expression (src/astar.ml[231,7795+4]..[233,7878+5])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/astar.ml[231,7795+8]..[231,7795+9])
                            Ppat_var "e" (src/astar.ml[231,7795+8]..[231,7795+9])
                          expression (src/astar.ml[231,7795+12]..[231,7795+27])
                            Pexp_apply
                            expression (src/astar.ml[231,7795+12]..[231,7795+22])
                              Pexp_ident "G.estimate" (src/astar.ml[231,7795+12]..[231,7795+22])
                            [
                              <arg>
                              Nolabel
                                expression (src/astar.ml[231,7795+23]..[231,7795+27])
                                  Pexp_ident "node" (src/astar.ml[231,7795+23]..[231,7795+27])
                            ]
                      ]
                      expression (src/astar.ml[232,7826+4]..[233,7878+5])
                        Pexp_sequence
                        expression (src/astar.ml[232,7826+4]..[232,7826+19])
                          Pexp_assert
                          expression (src/astar.ml[232,7826+11]..[232,7826+19])
                            Pexp_apply
                            expression (src/astar.ml[232,7826+14]..[232,7826+16])
                              Pexp_ident "<=" (src/astar.ml[232,7826+14]..[232,7826+16])
                            [
                              <arg>
                              Nolabel
                                expression (src/astar.ml[232,7826+12]..[232,7826+13])
                                  Pexp_constant PConst_int (0,None)
                              <arg>
                              Nolabel
                                expression (src/astar.ml[232,7826+17]..[232,7826+18])
                                  Pexp_ident "e" (src/astar.ml[232,7826+17]..[232,7826+18])
                            ]
                        expression (src/astar.ml[233,7878+4]..[233,7878+5])
                          Pexp_ident "e" (src/astar.ml[233,7878+4]..[233,7878+5])
              ]
            structure_item (src/astar.ml[235,7885+2]..[248,8182+5])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/astar.ml[235,7885+6]..[235,7885+8])
                    Ppat_construct "()" (src/astar.ml[235,7885+6]..[235,7885+8])
                    None
                  expression (src/astar.ml[236,7896+4]..[248,8182+5])
                    Pexp_apply
                    expression (src/astar.ml[236,7896+4]..[236,7896+13])
                      Pexp_ident "G.sources" (src/astar.ml[236,7896+4]..[236,7896+13])
                    [
                      <arg>
                      Nolabel
                        expression (src/astar.ml[236,7896+14]..[248,8182+5])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/astar.ml[236,7896+19]..[236,7896+23])
                            Ppat_var "node" (src/astar.ml[236,7896+19]..[236,7896+23])
                          expression (src/astar.ml[237,7923+6]..[247,8149+32])
                            Pexp_let Rec
                            [
                              <def>
                                pattern (src/astar.ml[237,7923+14]..[237,7923+19])
                                  Ppat_var "inode" (src/astar.ml[237,7923+14]..[237,7923+19])
                                expression (src/astar.ml[237,7923+22]..[245,8114+7])
                                  Pexp_record
                                  [
                                    "this" (src/astar.ml[238,7947+8]..[238,7947+12])
                                      expression (src/astar.ml[238,7947+15]..[238,7947+19])
                                        Pexp_ident "node" (src/astar.ml[238,7947+15]..[238,7947+19])
                                    "cost" (src/astar.ml[239,7968+8]..[239,7968+12])
                                      expression (src/astar.ml[239,7968+15]..[239,7968+16])
                                        Pexp_constant PConst_int (0,None)
                                    "estimate" (src/astar.ml[240,7986+8]..[240,7986+16])
                                      expression (src/astar.ml[240,7986+19]..[240,7986+32])
                                        Pexp_apply
                                        expression (src/astar.ml[240,7986+19]..[240,7986+27])
                                          Pexp_ident "estimate" (src/astar.ml[240,7986+19]..[240,7986+27])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/astar.ml[240,7986+28]..[240,7986+32])
                                              Pexp_ident "node" (src/astar.ml[240,7986+28]..[240,7986+32])
                                        ]
                                    "path" (src/astar.ml[241,8020+8]..[241,8020+12])
                                      expression (src/astar.ml[241,8020+15]..[241,8020+26])
                                        Pexp_construct "Source" (src/astar.ml[241,8020+15]..[241,8020+21])
                                        Some
                                          expression (src/astar.ml[241,8020+22]..[241,8020+26])
                                            Pexp_ident "node" (src/astar.ml[241,8020+22]..[241,8020+26])
                                    "prev" (src/astar.ml[242,8048+8]..[242,8048+12])
                                      expression (src/astar.ml[242,8048+15]..[242,8048+20])
                                        Pexp_ident "inode" (src/astar.ml[242,8048+15]..[242,8048+20])
                                    "next" (src/astar.ml[243,8070+8]..[243,8070+12])
                                      expression (src/astar.ml[243,8070+15]..[243,8070+20])
                                        Pexp_ident "inode" (src/astar.ml[243,8070+15]..[243,8070+20])
                                    "priority" (src/astar.ml[244,8092+8]..[244,8092+16])
                                      expression (src/astar.ml[244,8092+19]..[244,8092+21])
                                        Pexp_constant PConst_int (-1,None)
                                  ]
                                  None
                            ]
                            expression (src/astar.ml[246,8125+6]..[247,8149+32])
                              Pexp_sequence
                              expression (src/astar.ml[246,8125+6]..[246,8125+22])
                                Pexp_apply
                                expression (src/astar.ml[246,8125+6]..[246,8125+11])
                                  Pexp_ident "M.add" (src/astar.ml[246,8125+6]..[246,8125+11])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/astar.ml[246,8125+12]..[246,8125+16])
                                      Pexp_ident "node" (src/astar.ml[246,8125+12]..[246,8125+16])
                                  <arg>
                                  Nolabel
                                    expression (src/astar.ml[246,8125+17]..[246,8125+22])
                                      Pexp_ident "inode" (src/astar.ml[246,8125+17]..[246,8125+22])
                                ]
                              expression (src/astar.ml[247,8149+6]..[247,8149+32])
                                Pexp_apply
                                expression (src/astar.ml[247,8149+6]..[247,8149+11])
                                  Pexp_ident "P.add" (src/astar.ml[247,8149+6]..[247,8149+11])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/astar.ml[247,8149+12]..[247,8149+17])
                                      Pexp_ident "inode" (src/astar.ml[247,8149+12]..[247,8149+17])
                                  <arg>
                                  Nolabel
                                    expression (src/astar.ml[247,8149+18]..[247,8149+32])
                                      Pexp_field
                                      expression (src/astar.ml[247,8149+18]..[247,8149+23])
                                        Pexp_ident "inode" (src/astar.ml[247,8149+18]..[247,8149+23])
                                      "estimate" (src/astar.ml[247,8149+24]..[247,8149+32])
                                ]
                    ]
              ]
            structure_item (src/astar.ml[252,8255+2]..[253,8277+51])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/astar.ml[252,8255+6]..[252,8255+14])
                    Ppat_var "distance" (src/astar.ml[252,8255+6]..[252,8255+14])
                  expression (src/astar.ml[252,8255+15]..[253,8277+51]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/astar.ml[252,8255+15]..[252,8255+19])
                      Ppat_var "node" (src/astar.ml[252,8255+15]..[252,8255+19])
                    expression (src/astar.ml[253,8277+4]..[253,8277+51])
                      Pexp_try
                      expression (src/astar.ml[253,8277+8]..[253,8277+25])
                        Pexp_field
                        expression (src/astar.ml[253,8277+8]..[253,8277+20])
                          Pexp_apply
                          expression (src/astar.ml[253,8277+9]..[253,8277+14])
                            Pexp_ident "M.get" (src/astar.ml[253,8277+9]..[253,8277+14])
                          [
                            <arg>
                            Nolabel
                              expression (src/astar.ml[253,8277+15]..[253,8277+19])
                                Pexp_ident "node" (src/astar.ml[253,8277+15]..[253,8277+19])
                          ]
                        "cost" (src/astar.ml[253,8277+21]..[253,8277+25])
                      [
                        <case>
                          pattern (src/astar.ml[253,8277+31]..[253,8277+40])
                            Ppat_construct "Not_found" (src/astar.ml[253,8277+31]..[253,8277+40])
                            None
                          expression (src/astar.ml[253,8277+44]..[253,8277+51])
                            Pexp_ident "max_int" (src/astar.ml[253,8277+44]..[253,8277+51])
                      ]
              ]
            structure_item (src/astar.ml[255,8330+2]..[256,8348+21])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/astar.ml[255,8330+6]..[255,8330+10])
                    Ppat_var "path" (src/astar.ml[255,8330+6]..[255,8330+10])
                  expression (src/astar.ml[255,8330+11]..[256,8348+21]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/astar.ml[255,8330+11]..[255,8330+15])
                      Ppat_var "node" (src/astar.ml[255,8330+11]..[255,8330+15])
                    expression (src/astar.ml[256,8348+4]..[256,8348+21])
                      Pexp_field
                      expression (src/astar.ml[256,8348+4]..[256,8348+16])
                        Pexp_apply
                        expression (src/astar.ml[256,8348+5]..[256,8348+10])
                          Pexp_ident "M.get" (src/astar.ml[256,8348+5]..[256,8348+10])
                        [
                          <arg>
                          Nolabel
                            expression (src/astar.ml[256,8348+11]..[256,8348+15])
                              Pexp_ident "node" (src/astar.ml[256,8348+11]..[256,8348+15])
                        ]
                      "path" (src/astar.ml[256,8348+17]..[256,8348+21])
              ]
            structure_item (src/astar.ml[260,8438+2]..[323,10502+16])
              Pstr_value Rec
              [
                <def>
                  pattern (src/astar.ml[260,8438+10]..[260,8438+16])
                    Ppat_var "search" (src/astar.ml[260,8438+10]..[260,8438+16])
                  expression (src/astar.ml[260,8438+17]..[323,10502+16]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/astar.ml[260,8438+17]..[260,8438+18])
                      Ppat_var "f" (src/astar.ml[260,8438+17]..[260,8438+18])
                    expression (src/astar.ml[265,8580+4]..[323,10502+16])
                      Pexp_match
                      expression (src/astar.ml[265,8580+10]..[265,8580+17])
                        Pexp_apply
                        expression (src/astar.ml[265,8580+10]..[265,8580+15])
                          Pexp_ident "P.get" (src/astar.ml[265,8580+10]..[265,8580+15])
                        [
                          <arg>
                          Nolabel
                            expression (src/astar.ml[265,8580+15]..[265,8580+17])
                              Pexp_construct "()" (src/astar.ml[265,8580+15]..[265,8580+17])
                              None
                        ]
                      [
                        <case>
                          pattern (src/astar.ml[266,8603+6]..[266,8603+10])
                            Ppat_construct "None" (src/astar.ml[266,8603+6]..[266,8603+10])
                            None
                          expression (src/astar.ml[268,8640+7]..[268,8640+21])
                            Pexp_tuple
                            [
                              expression (src/astar.ml[268,8640+7]..[268,8640+15])
                                Pexp_ident "distance" (src/astar.ml[268,8640+7]..[268,8640+15])
                              expression (src/astar.ml[268,8640+17]..[268,8640+21])
                                Pexp_ident "path" (src/astar.ml[268,8640+17]..[268,8640+21])
                            ]
                        <case>
                          pattern (src/astar.ml[270,8663+6]..[270,8663+16])
                            Ppat_construct "Some" (src/astar.ml[270,8663+6]..[270,8663+10])
                            Some
                              []
                              pattern (src/astar.ml[270,8663+11]..[270,8663+16])
                                Ppat_var "inode" (src/astar.ml[270,8663+11]..[270,8663+16])
                          expression (src/astar.ml[271,8683+8]..[323,10502+16])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/astar.ml[271,8683+12]..[271,8683+16])
                                  Ppat_var "node" (src/astar.ml[271,8683+12]..[271,8683+16])
                                expression (src/astar.ml[271,8683+19]..[271,8683+29])
                                  Pexp_field
                                  expression (src/astar.ml[271,8683+19]..[271,8683+24])
                                    Pexp_ident "inode" (src/astar.ml[271,8683+19]..[271,8683+24])
                                  "this" (src/astar.ml[271,8683+25]..[271,8683+29])
                            ]
                            expression (src/astar.ml[274,8783+8]..[323,10502+16])
                              Pexp_sequence
                              expression (src/astar.ml[274,8783+8]..[274,8783+28])
                                Pexp_apply
                                expression (src/astar.ml[274,8783+8]..[274,8783+9])
                                  Pexp_ident "f" (src/astar.ml[274,8783+8]..[274,8783+9])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/astar.ml[274,8783+10]..[274,8783+28])
                                      Pexp_tuple
                                      [
                                        expression (src/astar.ml[274,8783+11]..[274,8783+15])
                                          Pexp_ident "node" (src/astar.ml[274,8783+11]..[274,8783+15])
                                        expression (src/astar.ml[274,8783+17]..[274,8783+27])
                                          Pexp_field
                                          expression (src/astar.ml[274,8783+17]..[274,8783+22])
                                            Pexp_ident "inode" (src/astar.ml[274,8783+17]..[274,8783+22])
                                          "path" (src/astar.ml[274,8783+23]..[274,8783+27])
                                      ]
                                ]
                              expression (src/astar.ml[277,8863+8]..[323,10502+16])
                                Pexp_sequence
                                expression (src/astar.ml[277,8863+8]..[321,10490+9])
                                  Pexp_apply
                                  expression (src/astar.ml[277,8863+8]..[277,8863+20])
                                    Pexp_ident "G.successors" (src/astar.ml[277,8863+8]..[277,8863+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/astar.ml[277,8863+21]..[277,8863+25])
                                        Pexp_ident "node" (src/astar.ml[277,8863+21]..[277,8863+25])
                                    <arg>
                                    Nolabel
                                      expression (src/astar.ml[277,8863+26]..[321,10490+9])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/astar.ml[277,8863+31]..[277,8863+36])
                                          Ppat_var "label" (src/astar.ml[277,8863+31]..[277,8863+36])
                                        expression (src/astar.ml[277,8863+37]..[319,10461+27]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (src/astar.ml[277,8863+37]..[277,8863+46])
                                            Ppat_var "edge_cost" (src/astar.ml[277,8863+37]..[277,8863+46])
                                          expression (src/astar.ml[277,8863+47]..[319,10461+27]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (src/astar.ml[277,8863+47]..[277,8863+50])
                                              Ppat_var "son" (src/astar.ml[277,8863+47]..[277,8863+50])
                                            expression (src/astar.ml[278,8917+10]..[319,10461+27])
                                              Pexp_sequence
                                              expression (src/astar.ml[278,8917+10]..[278,8917+33])
                                                Pexp_assert
                                                expression (src/astar.ml[278,8917+17]..[278,8917+33])
                                                  Pexp_apply
                                                  expression (src/astar.ml[278,8917+20]..[278,8917+22])
                                                    Pexp_ident "<=" (src/astar.ml[278,8917+20]..[278,8917+22])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/astar.ml[278,8917+18]..[278,8917+19])
                                                        Pexp_constant PConst_int (0,None)
                                                    <arg>
                                                    Nolabel
                                                      expression (src/astar.ml[278,8917+23]..[278,8917+32])
                                                        Pexp_ident "edge_cost" (src/astar.ml[278,8917+23]..[278,8917+32])
                                                  ]
                                              expression (src/astar.ml[282,9108+10]..[319,10461+27])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (src/astar.ml[282,9108+14]..[282,9108+22])
                                                      Ppat_var "new_cost" (src/astar.ml[282,9108+14]..[282,9108+22])
                                                    expression (src/astar.ml[282,9108+25]..[282,9108+47])
                                                      Pexp_apply
                                                      expression (src/astar.ml[282,9108+36]..[282,9108+37])
                                                        Pexp_ident "+" (src/astar.ml[282,9108+36]..[282,9108+37])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/astar.ml[282,9108+25]..[282,9108+35])
                                                            Pexp_field
                                                            expression (src/astar.ml[282,9108+25]..[282,9108+30])
                                                              Pexp_ident "inode" (src/astar.ml[282,9108+25]..[282,9108+30])
                                                            "cost" (src/astar.ml[282,9108+31]..[282,9108+35])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/astar.ml[282,9108+38]..[282,9108+47])
                                                            Pexp_ident "edge_cost" (src/astar.ml[282,9108+38]..[282,9108+47])
                                                      ]
                                                ]
                                                expression (src/astar.ml[283,9159+10]..[319,10461+27])
                                                  Pexp_sequence
                                                  expression (src/astar.ml[283,9159+10]..[283,9159+32])
                                                    Pexp_assert
                                                    expression (src/astar.ml[283,9159+17]..[283,9159+32])
                                                      Pexp_apply
                                                      expression (src/astar.ml[283,9159+20]..[283,9159+22])
                                                        Pexp_ident "<=" (src/astar.ml[283,9159+20]..[283,9159+22])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/astar.ml[283,9159+18]..[283,9159+19])
                                                            Pexp_constant PConst_int (0,None)
                                                        <arg>
                                                        Nolabel
                                                          expression (src/astar.ml[283,9159+23]..[283,9159+31])
                                                            Pexp_ident "new_cost" (src/astar.ml[283,9159+23]..[283,9159+31])
                                                      ]
                                                  expression (src/astar.ml[285,9223+10]..[319,10461+27])
                                                    Pexp_try
                                                    expression (src/astar.ml[286,9237+12]..[301,9879+15])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (src/astar.ml[286,9237+16]..[286,9237+20])
                                                            Ppat_var "ison" (src/astar.ml[286,9237+16]..[286,9237+20])
                                                          expression (src/astar.ml[286,9237+23]..[286,9237+32])
                                                            Pexp_apply
                                                            expression (src/astar.ml[286,9237+23]..[286,9237+28])
                                                              Pexp_ident "M.get" (src/astar.ml[286,9237+23]..[286,9237+28])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/astar.ml[286,9237+29]..[286,9237+32])
                                                                  Pexp_ident "son" (src/astar.ml[286,9237+29]..[286,9237+32])
                                                            ]
                                                      ]
                                                      expression (src/astar.ml[287,9273+12]..[301,9879+15])
                                                        Pexp_ifthenelse
                                                        expression (src/astar.ml[287,9273+15]..[287,9273+35])
                                                          Pexp_apply
                                                          expression (src/astar.ml[287,9273+24]..[287,9273+25])
                                                            Pexp_ident "<" (src/astar.ml[287,9273+24]..[287,9273+25])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/astar.ml[287,9273+15]..[287,9273+23])
                                                                Pexp_ident "new_cost" (src/astar.ml[287,9273+15]..[287,9273+23])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/astar.ml[287,9273+26]..[287,9273+35])
                                                                Pexp_field
                                                                expression (src/astar.ml[287,9273+26]..[287,9273+30])
                                                                  Pexp_ident "ison" (src/astar.ml[287,9273+26]..[287,9273+30])
                                                                "cost" (src/astar.ml[287,9273+31]..[287,9273+35])
                                                          ]
                                                        expression (src/astar.ml[287,9273+41]..[301,9879+15])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (src/astar.ml[295,9618+18]..[295,9618+26])
                                                                Ppat_var "new_fhat" (src/astar.ml[295,9618+18]..[295,9618+26])
                                                              expression (src/astar.ml[295,9618+29]..[295,9618+53])
                                                                Pexp_apply
                                                                expression (src/astar.ml[295,9618+38]..[295,9618+39])
                                                                  Pexp_ident "+" (src/astar.ml[295,9618+38]..[295,9618+39])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/astar.ml[295,9618+29]..[295,9618+37])
                                                                      Pexp_ident "new_cost" (src/astar.ml[295,9618+29]..[295,9618+37])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/astar.ml[295,9618+40]..[295,9618+53])
                                                                      Pexp_field
                                                                      expression (src/astar.ml[295,9618+40]..[295,9618+44])
Pexp_ident "ison" (src/astar.ml[295,9618+40]..[295,9618+44])
                                                                      "estimate" (src/astar.ml[295,9618+45]..[295,9618+53])
                                                                ]
                                                          ]
                                                          expression (src/astar.ml[296,9675+14]..[299,9826+51])
                                                            Pexp_sequence
                                                            expression (src/astar.ml[296,9675+14]..[296,9675+36])
                                                              Pexp_assert
                                                              expression (src/astar.ml[296,9675+21]..[296,9675+36])
                                                                Pexp_apply
                                                                expression (src/astar.ml[296,9675+24]..[296,9675+26])
                                                                  Pexp_ident "<=" (src/astar.ml[296,9675+24]..[296,9675+26])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/astar.ml[296,9675+22]..[296,9675+23])
                                                                      Pexp_constant PConst_int (0,None)
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/astar.ml[296,9675+27]..[296,9675+35])
                                                                      Pexp_ident "new_fhat" (src/astar.ml[296,9675+27]..[296,9675+35])
                                                                ]
                                                            expression (src/astar.ml[297,9742+14]..[299,9826+51])
                                                              Pexp_sequence
                                                              expression (src/astar.ml[297,9742+14]..[297,9742+45])
                                                                Pexp_apply
                                                                expression (src/astar.ml[297,9742+14]..[297,9742+31])
                                                                  Pexp_ident "P.add_or_decrease" (src/astar.ml[297,9742+14]..[297,9742+31])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/astar.ml[297,9742+32]..[297,9742+36])
                                                                      Pexp_ident "ison" (src/astar.ml[297,9742+32]..[297,9742+36])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/astar.ml[297,9742+37]..[297,9742+45])
                                                                      Pexp_ident "new_fhat" (src/astar.ml[297,9742+37]..[297,9742+45])
                                                                ]
                                                              expression (src/astar.ml[298,9789+14]..[299,9826+51])
                                                                Pexp_sequence
                                                                expression (src/astar.ml[298,9789+14]..[298,9789+35])
                                                                  Pexp_setfield
                                                                  expression (src/astar.ml[298,9789+14]..[298,9789+18])
                                                                    Pexp_ident "ison" (src/astar.ml[298,9789+14]..[298,9789+18])
                                                                  "cost" (src/astar.ml[298,9789+19]..[298,9789+23])
                                                                  expression (src/astar.ml[298,9789+27]..[298,9789+35])
                                                                    Pexp_ident "new_cost" (src/astar.ml[298,9789+27]..[298,9789+35])
                                                                expression (src/astar.ml[299,9826+14]..[299,9826+51])
                                                                  Pexp_setfield
                                                                  expression (src/astar.ml[299,9826+14]..[299,9826+18])
                                                                    Pexp_ident "ison" (src/astar.ml[299,9826+14]..[299,9826+18])
                                                                  "path" (src/astar.ml[299,9826+19]..[299,9826+23])
                                                                  expression (src/astar.ml[299,9826+27]..[299,9826+51])
                                                                    Pexp_construct "Edge" (src/astar.ml[299,9826+27]..[299,9826+31])
                                                                    Some
                                                                      expression (src/astar.ml[299,9826+32]..[299,9826+51])
Pexp_tuple
[
  expression (src/astar.ml[299,9826+33]..[299,9826+38])
    Pexp_ident "label" (src/astar.ml[299,9826+33]..[299,9826+38])
  expression (src/astar.ml[299,9826+40]..[299,9826+50])
    Pexp_field
    expression (src/astar.ml[299,9826+40]..[299,9826+45])
      Pexp_ident "inode" (src/astar.ml[299,9826+40]..[299,9826+45])
    "path" (src/astar.ml[299,9826+46]..[299,9826+50])
]
                                                        None
                                                    [
                                                      <case>
                                                        pattern (src/astar.ml[302,9895+15]..[302,9895+24])
                                                          Ppat_construct "Not_found" (src/astar.ml[302,9895+15]..[302,9895+24])
                                                          None
                                                        expression (src/astar.ml[307,10050+12]..[319,10461+27])
                                                          Pexp_let Rec
                                                          [
                                                            <def>
                                                              pattern (src/astar.ml[307,10050+20]..[307,10050+24])
                                                                Ppat_var "ison" (src/astar.ml[307,10050+20]..[307,10050+24])
                                                              expression (src/astar.ml[307,10050+27]..[315,10304+13])
                                                                Pexp_record
                                                                [
                                                                  "this" (src/astar.ml[308,10079+14]..[308,10079+18])
                                                                    expression (src/astar.ml[308,10079+21]..[308,10079+24])
                                                                      Pexp_ident "son" (src/astar.ml[308,10079+21]..[308,10079+24])
                                                                  "cost" (src/astar.ml[309,10105+14]..[309,10105+18])
                                                                    expression (src/astar.ml[309,10105+21]..[309,10105+29])
                                                                      Pexp_ident "new_cost" (src/astar.ml[309,10105+21]..[309,10105+29])
                                                                  "estimate" (src/astar.ml[310,10136+14]..[310,10136+22])
                                                                    expression (src/astar.ml[310,10136+25]..[310,10136+37])
                                                                      Pexp_apply
                                                                      expression (src/astar.ml[310,10136+25]..[310,10136+33])
Pexp_ident "estimate" (src/astar.ml[310,10136+25]..[310,10136+33])
                                                                      [
<arg>
Nolabel
  expression (src/astar.ml[310,10136+34]..[310,10136+37])
    Pexp_ident "son" (src/astar.ml[310,10136+34]..[310,10136+37])
                                                                      ]
                                                                  "path" (src/astar.ml[311,10175+14]..[311,10175+18])
                                                                    expression (src/astar.ml[311,10175+21]..[311,10175+45])
                                                                      Pexp_construct "Edge" (src/astar.ml[311,10175+21]..[311,10175+25])
                                                                      Some
expression (src/astar.ml[311,10175+26]..[311,10175+45])
  Pexp_tuple
  [
    expression (src/astar.ml[311,10175+27]..[311,10175+32])
      Pexp_ident "label" (src/astar.ml[311,10175+27]..[311,10175+32])
    expression (src/astar.ml[311,10175+34]..[311,10175+44])
      Pexp_field
      expression (src/astar.ml[311,10175+34]..[311,10175+39])
        Pexp_ident "inode" (src/astar.ml[311,10175+34]..[311,10175+39])
      "path" (src/astar.ml[311,10175+40]..[311,10175+44])
  ]
                                                                  "prev" (src/astar.ml[312,10222+14]..[312,10222+18])
                                                                    expression (src/astar.ml[312,10222+21]..[312,10222+25])
                                                                      Pexp_ident "ison" (src/astar.ml[312,10222+21]..[312,10222+25])
                                                                  "next" (src/astar.ml[313,10249+14]..[313,10249+18])
                                                                    expression (src/astar.ml[313,10249+21]..[313,10249+25])
                                                                      Pexp_ident "ison" (src/astar.ml[313,10249+21]..[313,10249+25])
                                                                  "priority" (src/astar.ml[314,10276+14]..[314,10276+22])
                                                                    expression (src/astar.ml[314,10276+25]..[314,10276+27])
                                                                      Pexp_constant PConst_int (-1,None)
                                                                ]
                                                                None
                                                          ]
                                                          expression (src/astar.ml[316,10321+12]..[319,10461+27])
                                                            Pexp_sequence
                                                            expression (src/astar.ml[316,10321+12]..[316,10321+26])
                                                              Pexp_apply
                                                              expression (src/astar.ml[316,10321+12]..[316,10321+17])
                                                                Pexp_ident "M.add" (src/astar.ml[316,10321+12]..[316,10321+17])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/astar.ml[316,10321+18]..[316,10321+21])
                                                                    Pexp_ident "son" (src/astar.ml[316,10321+18]..[316,10321+21])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/astar.ml[316,10321+22]..[316,10321+26])
                                                                    Pexp_ident "ison" (src/astar.ml[316,10321+22]..[316,10321+26])
                                                              ]
                                                            expression (src/astar.ml[317,10349+12]..[319,10461+27])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (src/astar.ml[317,10349+16]..[317,10349+20])
                                                                    Ppat_var "fhat" (src/astar.ml[317,10349+16]..[317,10349+20])
                                                                  expression (src/astar.ml[317,10349+23]..[317,10349+47])
                                                                    Pexp_apply
                                                                    expression (src/astar.ml[317,10349+32]..[317,10349+33])
                                                                      Pexp_ident "+" (src/astar.ml[317,10349+32]..[317,10349+33])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/astar.ml[317,10349+23]..[317,10349+31])
  Pexp_ident "new_cost" (src/astar.ml[317,10349+23]..[317,10349+31])
                                                                      <arg>
                                                                      Nolabel
expression (src/astar.ml[317,10349+34]..[317,10349+47])
  Pexp_field
  expression (src/astar.ml[317,10349+34]..[317,10349+38])
    Pexp_ident "ison" (src/astar.ml[317,10349+34]..[317,10349+38])
  "estimate" (src/astar.ml[317,10349+39]..[317,10349+47])
                                                                    ]
                                                              ]
                                                              expression (src/astar.ml[318,10400+12]..[319,10461+27])
                                                                Pexp_sequence
                                                                expression (src/astar.ml[318,10400+12]..[318,10400+30])
                                                                  Pexp_assert
                                                                  expression (src/astar.ml[318,10400+19]..[318,10400+30])
                                                                    Pexp_apply
                                                                    expression (src/astar.ml[318,10400+22]..[318,10400+24])
                                                                      Pexp_ident "<=" (src/astar.ml[318,10400+22]..[318,10400+24])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/astar.ml[318,10400+20]..[318,10400+21])
  Pexp_constant PConst_int (0,None)
                                                                      <arg>
                                                                      Nolabel
expression (src/astar.ml[318,10400+25]..[318,10400+29])
  Pexp_ident "fhat" (src/astar.ml[318,10400+25]..[318,10400+29])
                                                                    ]
                                                                expression (src/astar.ml[319,10461+12]..[319,10461+27])
                                                                  Pexp_apply
                                                                  expression (src/astar.ml[319,10461+12]..[319,10461+17])
                                                                    Pexp_ident "P.add" (src/astar.ml[319,10461+12]..[319,10461+17])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/astar.ml[319,10461+18]..[319,10461+22])
Pexp_ident "ison" (src/astar.ml[319,10461+18]..[319,10461+22])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/astar.ml[319,10461+23]..[319,10461+27])
Pexp_ident "fhat" (src/astar.ml[319,10461+23]..[319,10461+27])
                                                                  ]
                                                    ]
                                  ]
                                expression (src/astar.ml[323,10502+8]..[323,10502+16])
                                  Pexp_apply
                                  expression (src/astar.ml[323,10502+8]..[323,10502+14])
                                    Pexp_ident "search" (src/astar.ml[323,10502+8]..[323,10502+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/astar.ml[323,10502+15]..[323,10502+16])
                                        Pexp_ident "f" (src/astar.ml[323,10502+15]..[323,10502+16])
                                  ]
                      ]
              ]
          ]
]

module Make(G:sig
                type node
                include Hashtbl.HashedType with type  t :=  node
                type label
                val sources : (node -> unit) -> unit
                val successors :
                  node -> (label -> int -> node -> unit) -> unit
                val estimate : node -> int
              end) =
  struct
    type cost = int
    type priority = cost
    type path =
      | Edge of G.label * path 
      | Source of G.node 
    let rec follow labels path =
      match path with
      | Source node -> (node, labels)
      | Edge (label, path) -> follow (label :: labels) path
    let reverse path = follow [] path
    type inode =
      {
      this: G.node ;
      mutable cost: cost ;
      estimate: cost ;
      mutable path: path ;
      mutable prev: inode ;
      mutable next: inode ;
      mutable priority: priority }
    module M :
      sig val add : G.node -> inode -> unit val get : G.node -> inode end =
      struct
        module H = (Hashtbl.Make)(struct include G
                                         type t = node end)
        let t = H.create 100003
        let add node inode = H.add t node inode
        let get node = H.find t node
      end 
    module P :
      sig
        val add : inode -> priority -> unit
        val add_or_decrease : inode -> priority -> unit
        val get : unit -> inode option
      end =
      struct
        module InfiniteArray = MenhirLib.InfiniteArray
        let a = InfiniteArray.make None
        let best = ref 0
        let cardinal = ref 0
        let add inode priority =
          assert (0 <= priority);
          cardinal := ((!cardinal) + 1);
          inode.priority <- priority;
          (match InfiniteArray.get a priority with
           | None ->
               (InfiniteArray.set a priority (Some inode);
                assert ((!best) <= priority))
           | Some inode' ->
               (inode.next <- inode';
                inode.prev <- (inode'.prev);
                (inode'.prev).next <- inode;
                inode'.prev <- inode))
        let remove inode =
          cardinal := ((!cardinal) - 1);
          if inode.next == inode
          then InfiniteArray.set a inode.priority None
          else
            (InfiniteArray.set a inode.priority (Some (inode.next));
             (inode.next).prev <- (inode.prev);
             (inode.prev).next <- (inode.next);
             inode.next <- inode;
             inode.prev <- inode);
          inode.priority <- (-1)
        let rec get () = if (!cardinal) = 0 then None else get_nonempty ()
        and get_nonempty () =
          match InfiniteArray.get a (!best) with
          | None -> (best := ((!best) + 1); get_nonempty ())
          | Some inode as result -> (remove inode; result)
        let add_or_decrease inode priority =
          if inode.priority >= 0 then remove inode; add inode priority
      end 
    let estimate node = let e = G.estimate node in assert (0 <= e); e
    let () =
      G.sources
        (fun node ->
           let rec inode =
             {
               this = node;
               cost = 0;
               estimate = (estimate node);
               path = (Source node);
               prev = inode;
               next = inode;
               priority = (-1)
             } in
           M.add node inode; P.add inode inode.estimate)
    let distance node = try (M.get node).cost with | Not_found -> max_int
    let path node = (M.get node).path
    let rec search f =
      match P.get () with
      | None -> (distance, path)
      | Some inode ->
          let node = inode.this in
          (f (node, (inode.path));
           G.successors node
             (fun label ->
                fun edge_cost ->
                  fun son ->
                    assert (0 <= edge_cost);
                    (let new_cost = inode.cost + edge_cost in
                     assert (0 <= new_cost);
                     (try
                        let ison = M.get son in
                        if new_cost < ison.cost
                        then
                          let new_fhat = new_cost + ison.estimate in
                          (assert (0 <= new_fhat);
                           P.add_or_decrease ison new_fhat;
                           ison.cost <- new_cost;
                           ison.path <- (Edge (label, (inode.path))))
                      with
                      | Not_found ->
                          let rec ison =
                            {
                              this = son;
                              cost = new_cost;
                              estimate = (estimate son);
                              path = (Edge (label, (inode.path)));
                              prev = ison;
                              next = ison;
                              priority = (-1)
                            } in
                          (M.add son ison;
                           (let fhat = new_cost + ison.estimate in
                            assert (0 <= fhat); P.add ison fhat)))));
           search f)
  end
[
  structure_item (src/astar.ml[44,2274+0]..src/astar.ml[325,10520+3])
    Tstr_module
    Make/784
      module_expr (src/astar.ml[44,2274+12]..src/astar.ml[325,10520+3])
        Tmod_functor "G/492"
        module_type (src/astar.ml[44,2274+17]..src/astar.ml[68,2973+3])
          Tmty_signature
          [
            signature_item (src/astar.ml[47,2317+2]..src/astar.ml[47,2317+11])
              Tsig_type Rec
              [
                type_declaration node/397 (src/astar.ml[47,2317+2]..src/astar.ml[47,2317+11])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            signature_item (src/astar.ml[48,2329+2]..src/astar.ml[48,2329+48])
              Tsig_include
              module_type (src/astar.ml[48,2329+10]..src/astar.ml[48,2329+48])
                Tmty_with
                module_type (src/astar.ml[48,2329+10]..src/astar.ml[48,2329+28])
                  Tmty_ident "Stdlib!.Hashtbl.HashedType"
                [
                  "t/478"
                    Twith_typesubst
                      type_declaration t/478 (src/astar.ml[48,2329+34]..src/astar.ml[48,2329+48])
                        ptype_params =
                          []
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ttype_abstract
                        ptype_private = Public
                        ptype_manifest =
                          Some
                            core_type (src/astar.ml[48,2329+44]..src/astar.ml[48,2329+48])
                              Ttyp_constr "node/397"
                              []
                ]
            signature_item (src/astar.ml[51,2400+2]..src/astar.ml[51,2400+12])
              Tsig_type Rec
              [
                type_declaration label/488 (src/astar.ml[51,2400+2]..src/astar.ml[51,2400+12])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            signature_item (src/astar.ml[55,2443+2]..src/astar.ml[55,2443+37])
              Tsig_value
              value_description sources/489 (src/astar.ml[55,2443+2]..src/astar.ml[55,2443+37])
                core_type (src/astar.ml[55,2443+15]..src/astar.ml[55,2443+37])
                  Ttyp_arrow
                  Nolabel
                  core_type (src/astar.ml[55,2443+16]..src/astar.ml[55,2443+28])
                    Ttyp_arrow
                    Nolabel
                    core_type (src/astar.ml[55,2443+16]..src/astar.ml[55,2443+20])
                      Ttyp_constr "node/397"
                      []
                    core_type (src/astar.ml[55,2443+24]..src/astar.ml[55,2443+28])
                      Ttyp_constr "unit/6!"
                      []
                  core_type (src/astar.ml[55,2443+33]..src/astar.ml[55,2443+37])
                    Ttyp_constr "unit/6!"
                    []
                []
            signature_item (src/astar.ml[60,2637+2]..src/astar.ml[60,2637+64])
              Tsig_value
              value_description successors/490 (src/astar.ml[60,2637+2]..src/astar.ml[60,2637+64])
                core_type (src/astar.ml[60,2637+18]..src/astar.ml[60,2637+64])
                  Ttyp_arrow
                  Nolabel
                  core_type (src/astar.ml[60,2637+18]..src/astar.ml[60,2637+22])
                    Ttyp_constr "node/397"
                    []
                  core_type (src/astar.ml[60,2637+26]..src/astar.ml[60,2637+64])
                    Ttyp_arrow
                    Nolabel
                    core_type (src/astar.ml[60,2637+27]..src/astar.ml[60,2637+55])
                      Ttyp_arrow
                      Nolabel
                      core_type (src/astar.ml[60,2637+27]..src/astar.ml[60,2637+32])
                        Ttyp_constr "label/488"
                        []
                      core_type (src/astar.ml[60,2637+36]..src/astar.ml[60,2637+55])
                        Ttyp_arrow
                        Nolabel
                        core_type (src/astar.ml[60,2637+36]..src/astar.ml[60,2637+39])
                          Ttyp_constr "int/1!"
                          []
                        core_type (src/astar.ml[60,2637+43]..src/astar.ml[60,2637+55])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/astar.ml[60,2637+43]..src/astar.ml[60,2637+47])
                            Ttyp_constr "node/397"
                            []
                          core_type (src/astar.ml[60,2637+51]..src/astar.ml[60,2637+55])
                            Ttyp_constr "unit/6!"
                            []
                    core_type (src/astar.ml[60,2637+60]..src/astar.ml[60,2637+64])
                      Ttyp_constr "unit/6!"
                      []
                []
            signature_item (src/astar.ml[66,2944+2]..src/astar.ml[66,2944+27])
              Tsig_value
              value_description estimate/491 (src/astar.ml[66,2944+2]..src/astar.ml[66,2944+27])
                core_type (src/astar.ml[66,2944+16]..src/astar.ml[66,2944+27])
                  Ttyp_arrow
                  Nolabel
                  core_type (src/astar.ml[66,2944+16]..src/astar.ml[66,2944+20])
                    Ttyp_constr "node/397"
                    []
                  core_type (src/astar.ml[66,2944+24]..src/astar.ml[66,2944+27])
                    Ttyp_constr "int/1!"
                    []
                []
          ]
        module_expr (src/astar.ml[68,2973+7]..src/astar.ml[325,10520+3])
          Tmod_structure
          [
            structure_item (src/astar.ml[70,2988+2]..src/astar.ml[70,2988+17])
              Tstr_type Rec
              [
                type_declaration cost/493 (src/astar.ml[70,2988+2]..src/astar.ml[70,2988+17])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (src/astar.ml[70,2988+14]..src/astar.ml[70,2988+17])
                        Ttyp_constr "int/1!"
                        []
              ]
            structure_item (src/astar.ml[73,3063+2]..src/astar.ml[73,3063+22])
              Tstr_type Rec
              [
                type_declaration priority/494 (src/astar.ml[73,3063+2]..src/astar.ml[73,3063+22])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (src/astar.ml[73,3063+18]..src/astar.ml[73,3063+22])
                        Ttyp_constr "cost/493"
                        []
              ]
            structure_item (src/astar.ml[76,3141+2]..src/astar.ml[78,3184+22])
              Tstr_type Rec
              [
                type_declaration path/495 (src/astar.ml[76,3141+2]..src/astar.ml[78,3184+22])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_variant
                      [
                        (src/astar.ml[77,3155+4]..src/astar.ml[77,3155+28])
                          Edge/496
                          [
                            core_type (src/astar.ml[77,3155+14]..src/astar.ml[77,3155+21])
                              Ttyp_constr "G/492.label"
                              []
                            core_type (src/astar.ml[77,3155+24]..src/astar.ml[77,3155+28])
                              Ttyp_constr "path/495"
                              []
                          ]
                          None
                        (src/astar.ml[78,3184+4]..src/astar.ml[78,3184+22])
                          Source/497
                          [
                            core_type (src/astar.ml[78,3184+16]..src/astar.ml[78,3184+22])
                              Ttyp_constr "G/492.node"
                              []
                          ]
                          None
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (src/astar.ml[80,3208+2]..src/astar.ml[85,3329+37])
              Tstr_value Rec
              [
                <def>
                  pattern (src/astar.ml[80,3208+10]..src/astar.ml[80,3208+16])
                    Tpat_var "follow/498"
                  expression (src/astar.ml[80,3208+17]..src/astar.ml[85,3329+37]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/astar.ml[80,3208+17]..src/astar.ml[80,3208+23])
                          Tpat_var "labels/499"
                        expression (src/astar.ml[80,3208+24]..src/astar.ml[85,3329+37]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/astar.ml[80,3208+24]..src/astar.ml[80,3208+28])
                                Tpat_var "path/500"
                              expression (src/astar.ml[81,3239+4]..src/astar.ml[85,3329+37])
                                Texp_match
                                expression (src/astar.ml[81,3239+10]..src/astar.ml[81,3239+14])
                                  Texp_ident "path/500"
                                [
                                  <case>
                                    pattern (src/astar.ml[82,3259+6]..src/astar.ml[82,3259+17])
                                      Tpat_value
                                      pattern (src/astar.ml[82,3259+6]..src/astar.ml[82,3259+17])
                                        Tpat_construct "Source"
                                        [
                                          pattern (src/astar.ml[82,3259+13]..src/astar.ml[82,3259+17])
                                            Tpat_var "node/501"
                                        ]
                                        None
                                    expression (src/astar.ml[83,3280+8]..src/astar.ml[83,3280+20])
                                      Texp_tuple
                                      [
                                        expression (src/astar.ml[83,3280+8]..src/astar.ml[83,3280+12])
                                          Texp_ident "node/501"
                                        expression (src/astar.ml[83,3280+14]..src/astar.ml[83,3280+20])
                                          Texp_ident "labels/499"
                                      ]
                                  <case>
                                    pattern (src/astar.ml[84,3301+6]..src/astar.ml[84,3301+24])
                                      Tpat_value
                                      pattern (src/astar.ml[84,3301+6]..src/astar.ml[84,3301+24])
                                        Tpat_construct "Edge"
                                        [
                                          pattern (src/astar.ml[84,3301+12]..src/astar.ml[84,3301+17])
                                            Tpat_var "label/502"
                                          pattern (src/astar.ml[84,3301+19]..src/astar.ml[84,3301+23])
                                            Tpat_var "path/503"
                                        ]
                                        None
                                    expression (src/astar.ml[85,3329+8]..src/astar.ml[85,3329+37])
                                      Texp_apply
                                      expression (src/astar.ml[85,3329+8]..src/astar.ml[85,3329+14])
                                        Texp_ident "follow/498"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/astar.ml[85,3329+15]..src/astar.ml[85,3329+32])
                                            Texp_construct "::"
                                            [
                                              expression (src/astar.ml[85,3329+16]..src/astar.ml[85,3329+21])
                                                Texp_ident "label/502"
                                              expression (src/astar.ml[85,3329+25]..src/astar.ml[85,3329+31])
                                                Texp_ident "labels/499"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/astar.ml[85,3329+33]..src/astar.ml[85,3329+37])
                                            Texp_ident "path/503"
                                      ]
                                ]
                          ]
                    ]
              ]
            structure_item (src/astar.ml[87,3368+2]..src/astar.ml[88,3389+18])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/astar.ml[87,3368+6]..src/astar.ml[87,3368+13])
                    Tpat_var "reverse/504"
                  expression (src/astar.ml[87,3368+14]..src/astar.ml[88,3389+18]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/astar.ml[87,3368+14]..src/astar.ml[87,3368+18])
                          Tpat_var "path/506"
                        expression (src/astar.ml[88,3389+4]..src/astar.ml[88,3389+18])
                          Texp_apply
                          expression (src/astar.ml[88,3389+4]..src/astar.ml[88,3389+10])
                            Texp_ident "follow/498"
                          [
                            <arg>
                              Nolabel
                              expression (src/astar.ml[88,3389+11]..src/astar.ml[88,3389+13])
                                Texp_construct "[]"
                                []
                            <arg>
                              Nolabel
                              expression (src/astar.ml[88,3389+14]..src/astar.ml[88,3389+18])
                                Texp_ident "path/506"
                          ]
                    ]
              ]
            structure_item (src/astar.ml[90,3409+2]..src/astar.ml[105,4077+3])
              Tstr_type Rec
              [
                type_declaration inode/507 (src/astar.ml[90,3409+2]..src/astar.ml[105,4077+3])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_record
                      [
                        (src/astar.ml[92,3487+6]..src/astar.ml[92,3487+19])
                          Immutable
                          this/508                          core_type (src/astar.ml[92,3487+12]..src/astar.ml[92,3487+18])
                            Ttyp_poly
                            core_type (src/astar.ml[92,3487+12]..src/astar.ml[92,3487+18])
                              Ttyp_constr "G/492.node"
                              []
                        (src/astar.ml[94,3587+6]..src/astar.ml[94,3587+25])
                          Mutable
                          cost/509                          core_type (src/astar.ml[94,3587+20]..src/astar.ml[94,3587+24])
                            Ttyp_poly
                            core_type (src/astar.ml[94,3587+20]..src/astar.ml[94,3587+24])
                              Ttyp_constr "cost/493"
                              []
                        (src/astar.ml[96,3695+6]..src/astar.ml[96,3695+21])
                          Immutable
                          estimate/510                          core_type (src/astar.ml[96,3695+16]..src/astar.ml[96,3695+20])
                            Ttyp_poly
                            core_type (src/astar.ml[96,3695+16]..src/astar.ml[96,3695+20])
                              Ttyp_constr "cost/493"
                              []
                        (src/astar.ml[98,3778+6]..src/astar.ml[98,3778+25])
                          Mutable
                          path/511                          core_type (src/astar.ml[98,3778+20]..src/astar.ml[98,3778+24])
                            Ttyp_poly
                            core_type (src/astar.ml[98,3778+20]..src/astar.ml[98,3778+24])
                              Ttyp_constr "path/495"
                              []
                        (src/astar.ml[100,3861+6]..src/astar.ml[100,3861+26])
                          Mutable
                          prev/512                          core_type (src/astar.ml[100,3861+20]..src/astar.ml[100,3861+25])
                            Ttyp_poly
                            core_type (src/astar.ml[100,3861+20]..src/astar.ml[100,3861+25])
                              Ttyp_constr "inode/507"
                              []
                        (src/astar.ml[102,3941+6]..src/astar.ml[102,3941+26])
                          Mutable
                          next/513                          core_type (src/astar.ml[102,3941+20]..src/astar.ml[102,3941+25])
                            Ttyp_poly
                            core_type (src/astar.ml[102,3941+20]..src/astar.ml[102,3941+25])
                              Ttyp_constr "inode/507"
                              []
                        (src/astar.ml[104,4043+6]..src/astar.ml[104,4043+33])
                          Mutable
                          priority/514                          core_type (src/astar.ml[104,4043+24]..src/astar.ml[104,4043+32])
                            Ttyp_poly
                            core_type (src/astar.ml[104,4043+24]..src/astar.ml[104,4043+32])
                              Ttyp_constr "priority/494"
                              []
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (src/astar.ml[110,4174+2]..src/astar.ml[132,4612+5])
              Tstr_module
              M/704
                module_expr (src/astar.ml[110,4174+11]..src/astar.ml[132,4612+5])
                  Tmod_constraint
                  module_expr (src/astar.ml[119,4405+8]..src/astar.ml[132,4612+5])
                    Tmod_structure
                    [
                      structure_item (src/astar.ml[121,4421+4]..src/astar.ml[122,4436+54])
                        Tstr_module
                        H/693
                          module_expr (src/astar.ml[122,4436+6]..src/astar.ml[122,4436+54])
                            Tmod_apply
                            module_expr (src/astar.ml[122,4436+6]..src/astar.ml[122,4436+18])
                              module_expr (src/astar.ml[122,4436+6]..src/astar.ml[122,4436+18])
                                Tmod_ident "Stdlib!.Hashtbl.Make"
                            module_expr (src/astar.ml[122,4436+19]..src/astar.ml[122,4436+53])
                              Tmod_structure
                              [
                                structure_item (src/astar.ml[122,4436+26]..src/astar.ml[122,4436+35])
                                  Tstr_include                                  module_expr (src/astar.ml[122,4436+34]..src/astar.ml[122,4436+35])
                                    Tmod_ident "G/492"
                                structure_item (src/astar.ml[122,4436+36]..src/astar.ml[122,4436+49])
                                  Tstr_type Rec
                                  [
                                    type_declaration t/522 (src/astar.ml[122,4436+36]..src/astar.ml[122,4436+49])
                                      ptype_params =
                                        []
                                      ptype_cstrs =
                                        []
                                      ptype_kind =
                                        Ttype_abstract
                                      ptype_private = Public
                                      ptype_manifest =
                                        Some
                                          core_type (src/astar.ml[122,4436+45]..src/astar.ml[122,4436+49])
                                            Ttyp_constr "node/515"
                                            []
                                  ]
                              ]
                      structure_item (src/astar.ml[124,4492+4]..src/astar.ml[124,4492+27])
                        Tstr_value Nonrec
                        [
                          <def>
                            pattern (src/astar.ml[124,4492+8]..src/astar.ml[124,4492+9])
                              Tpat_var "t/694"
                            expression (src/astar.ml[124,4492+12]..src/astar.ml[124,4492+27])
                              Texp_apply
                              expression (src/astar.ml[124,4492+12]..src/astar.ml[124,4492+20])
                                Texp_ident "H/693.create"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/astar.ml[124,4492+21]..src/astar.ml[124,4492+27])
                                    Texp_constant Const_int 100003
                              ]
                        ]
                      structure_item (src/astar.ml[126,4521+4]..src/astar.ml[127,4546+24])
                        Tstr_value Nonrec
                        [
                          <def>
                            pattern (src/astar.ml[126,4521+8]..src/astar.ml[126,4521+11])
                              Tpat_var "add/695"
                            expression (src/astar.ml[126,4521+12]..src/astar.ml[127,4546+24]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/astar.ml[126,4521+12]..src/astar.ml[126,4521+16])
                                    Tpat_var "node/697"
                                  expression (src/astar.ml[126,4521+17]..src/astar.ml[127,4546+24]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/astar.ml[126,4521+17]..src/astar.ml[126,4521+22])
                                          Tpat_var "inode/698"
                                        expression (src/astar.ml[127,4546+6]..src/astar.ml[127,4546+24])
                                          Texp_apply
                                          expression (src/astar.ml[127,4546+6]..src/astar.ml[127,4546+11])
                                            Texp_ident "H/693.add"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/astar.ml[127,4546+12]..src/astar.ml[127,4546+13])
                                                Texp_ident "t/694"
                                            <arg>
                                              Nolabel
                                              expression (src/astar.ml[127,4546+14]..src/astar.ml[127,4546+18])
                                                Texp_ident "node/697"
                                            <arg>
                                              Nolabel
                                              expression (src/astar.ml[127,4546+19]..src/astar.ml[127,4546+24])
                                                Texp_ident "inode/698"
                                          ]
                                    ]
                              ]
                        ]
                      structure_item (src/astar.ml[129,4572+4]..src/astar.ml[130,4591+19])
                        Tstr_value Nonrec
                        [
                          <def>
                            pattern (src/astar.ml[129,4572+8]..src/astar.ml[129,4572+11])
                              Tpat_var "get/699"
                            expression (src/astar.ml[129,4572+12]..src/astar.ml[130,4591+19]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/astar.ml[129,4572+12]..src/astar.ml[129,4572+16])
                                    Tpat_var "node/701"
                                  expression (src/astar.ml[130,4591+6]..src/astar.ml[130,4591+19])
                                    Texp_apply
                                    expression (src/astar.ml[130,4591+6]..src/astar.ml[130,4591+12])
                                      Texp_ident "H/693.find"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/astar.ml[130,4591+13]..src/astar.ml[130,4591+14])
                                          Texp_ident "t/694"
                                      <arg>
                                        Nolabel
                                        expression (src/astar.ml[130,4591+15]..src/astar.ml[130,4591+19])
                                          Texp_ident "node/701"
                                    ]
                              ]
                        ]
                    ]
                  module_type (src/astar.ml[110,4174+13]..src/astar.ml[119,4405+5])
                    Tmty_signature
                    [
                      signature_item (src/astar.ml[113,4233+4]..src/astar.ml[113,4233+36])
                        Tsig_value
                        value_description add/702 (src/astar.ml[113,4233+4]..src/astar.ml[113,4233+36])
                          core_type (src/astar.ml[113,4233+13]..src/astar.ml[113,4233+36])
                            Ttyp_arrow
                            Nolabel
                            core_type (src/astar.ml[113,4233+13]..src/astar.ml[113,4233+19])
                              Ttyp_constr "G/492.node"
                              []
                            core_type (src/astar.ml[113,4233+23]..src/astar.ml[113,4233+36])
                              Ttyp_arrow
                              Nolabel
                              core_type (src/astar.ml[113,4233+23]..src/astar.ml[113,4233+28])
                                Ttyp_constr "inode/507"
                                []
                              core_type (src/astar.ml[113,4233+32]..src/astar.ml[113,4233+36])
                                Ttyp_constr "unit/6!"
                                []
                          []
                      signature_item (src/astar.ml[117,4375+4]..src/astar.ml[117,4375+28])
                        Tsig_value
                        value_description get/703 (src/astar.ml[117,4375+4]..src/astar.ml[117,4375+28])
                          core_type (src/astar.ml[117,4375+13]..src/astar.ml[117,4375+28])
                            Ttyp_arrow
                            Nolabel
                            core_type (src/astar.ml[117,4375+13]..src/astar.ml[117,4375+19])
                              Ttyp_constr "G/492.node"
                              []
                            core_type (src/astar.ml[117,4375+23]..src/astar.ml[117,4375+28])
                              Ttyp_constr "inode/507"
                              []
                          []
                    ]
            structure_item (src/astar.ml[137,4703+2]..src/astar.ml[226,7741+5])
              Tstr_module
              P/759
                module_expr (src/astar.ml[137,4703+11]..src/astar.ml[226,7741+5])
                  Tmod_constraint
                  module_expr (src/astar.ml[151,5137+8]..src/astar.ml[226,7741+5])
                    Tmod_structure
                    [
                      structure_item (src/astar.ml[153,5153+4]..src/astar.ml[153,5153+50])
                        Tstr_module
                        InfiniteArray/722
                          module_expr (src/astar.ml[153,5153+27]..src/astar.ml[153,5153+50])
                            Tmod_ident "MenhirLib!.InfiniteArray"
                      structure_item (src/astar.ml[159,5467+4]..src/astar.ml[159,5467+35])
                        Tstr_value Nonrec
                        [
                          <def>
                            pattern (src/astar.ml[159,5467+8]..src/astar.ml[159,5467+9])
                              Tpat_var "a/723"
                            expression (src/astar.ml[159,5467+12]..src/astar.ml[159,5467+35])
                              Texp_apply
                              expression (src/astar.ml[159,5467+12]..src/astar.ml[159,5467+30])
                                Texp_ident "InfiniteArray/722.make"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/astar.ml[159,5467+31]..src/astar.ml[159,5467+35])
                                    Texp_construct "None"
                                    []
                              ]
                        ]
                      structure_item (src/astar.ml[163,5647+4]..src/astar.ml[163,5647+20])
                        Tstr_value Nonrec
                        [
                          <def>
                            pattern (src/astar.ml[163,5647+8]..src/astar.ml[163,5647+12])
                              Tpat_var "best/736"
                            expression (src/astar.ml[163,5647+15]..src/astar.ml[163,5647+20])
                              Texp_apply
                              expression (src/astar.ml[163,5647+15]..src/astar.ml[163,5647+18])
                                Texp_ident "Stdlib!.ref"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/astar.ml[163,5647+19]..src/astar.ml[163,5647+20])
                                    Texp_constant Const_int 0
                              ]
                        ]
                      structure_item (src/astar.ml[167,5783+4]..src/astar.ml[167,5783+24])
                        Tstr_value Nonrec
                        [
                          <def>
                            pattern (src/astar.ml[167,5783+8]..src/astar.ml[167,5783+16])
                              Tpat_var "cardinal/737"
                            expression (src/astar.ml[167,5783+19]..src/astar.ml[167,5783+24])
                              Texp_apply
                              expression (src/astar.ml[167,5783+19]..src/astar.ml[167,5783+22])
                                Texp_ident "Stdlib!.ref"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/astar.ml[167,5783+23]..src/astar.ml[167,5783+24])
                                    Texp_constant Const_int 0
                              ]
                        ]
                      structure_item (src/astar.ml[170,5878+4]..src/astar.ml[185,6486+30])
                        Tstr_value Nonrec
                        [
                          <def>
                            pattern (src/astar.ml[170,5878+8]..src/astar.ml[170,5878+11])
                              Tpat_var "add/738"
                            expression (src/astar.ml[170,5878+12]..src/astar.ml[185,6486+30]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/astar.ml[170,5878+12]..src/astar.ml[170,5878+17])
                                    Tpat_var "inode/740"
                                  expression (src/astar.ml[170,5878+18]..src/astar.ml[185,6486+30]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/astar.ml[170,5878+18]..src/astar.ml[170,5878+26])
                                          Tpat_var "priority/741"
                                        expression (src/astar.ml[171,5907+6]..src/astar.ml[185,6486+30])
                                          Texp_sequence
                                          expression (src/astar.ml[171,5907+6]..src/astar.ml[171,5907+28])
                                            Texp_assert                                            expression (src/astar.ml[171,5907+13]..src/astar.ml[171,5907+28])
                                              Texp_apply
                                              expression (src/astar.ml[171,5907+16]..src/astar.ml[171,5907+18])
                                                Texp_ident "Stdlib!.<="
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/astar.ml[171,5907+14]..src/astar.ml[171,5907+15])
                                                    Texp_constant Const_int 0
                                                <arg>
                                                  Nolabel
                                                  expression (src/astar.ml[171,5907+19]..src/astar.ml[171,5907+27])
                                                    Texp_ident "priority/741"
                                              ]
                                          expression (src/astar.ml[172,5937+6]..src/astar.ml[185,6486+30])
                                            Texp_sequence
                                            expression (src/astar.ml[172,5937+6]..src/astar.ml[172,5937+31])
                                              Texp_apply
                                              expression (src/astar.ml[172,5937+15]..src/astar.ml[172,5937+17])
                                                Texp_ident "Stdlib!.:="
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/astar.ml[172,5937+6]..src/astar.ml[172,5937+14])
                                                    Texp_ident "cardinal/737"
                                                <arg>
                                                  Nolabel
                                                  expression (src/astar.ml[172,5937+18]..src/astar.ml[172,5937+31])
                                                    Texp_apply
                                                    expression (src/astar.ml[172,5937+28]..src/astar.ml[172,5937+29])
                                                      Texp_ident "Stdlib!.+"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/astar.ml[172,5937+18]..src/astar.ml[172,5937+27])
                                                          Texp_apply
                                                          expression (src/astar.ml[172,5937+18]..src/astar.ml[172,5937+19])
                                                            Texp_ident "Stdlib!.!"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/astar.ml[172,5937+19]..src/astar.ml[172,5937+27])
                                                                Texp_ident "cardinal/737"
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (src/astar.ml[172,5937+30]..src/astar.ml[172,5937+31])
                                                          Texp_constant Const_int 1
                                                    ]
                                              ]
                                            expression (src/astar.ml[173,5970+6]..src/astar.ml[185,6486+30])
                                              Texp_sequence
                                              expression (src/astar.ml[173,5970+6]..src/astar.ml[173,5970+32])
                                                Texp_setfield
                                                expression (src/astar.ml[173,5970+6]..src/astar.ml[173,5970+11])
                                                  Texp_ident "inode/740"
                                                "priority"
                                                expression (src/astar.ml[173,5970+24]..src/astar.ml[173,5970+32])
                                                  Texp_ident "priority/741"
                                              expression (src/astar.ml[174,6004+6]..src/astar.ml[185,6486+30])
                                                Texp_match
                                                expression (src/astar.ml[174,6004+12]..src/astar.ml[174,6004+40])
                                                  Texp_apply
                                                  expression (src/astar.ml[174,6004+12]..src/astar.ml[174,6004+29])
                                                    Texp_ident "InfiniteArray/722.get"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/astar.ml[174,6004+30]..src/astar.ml[174,6004+31])
                                                        Texp_ident "a/723"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/astar.ml[174,6004+32]..src/astar.ml[174,6004+40])
                                                        Texp_ident "priority/741"
                                                  ]
                                                [
                                                  <case>
                                                    pattern (src/astar.ml[175,6050+8]..src/astar.ml[175,6050+12])
                                                      Tpat_value
                                                      pattern (src/astar.ml[175,6050+8]..src/astar.ml[175,6050+12])
                                                        Tpat_construct "None"
                                                        []
                                                        None
                                                    expression (src/astar.ml[176,6066+10]..src/astar.ml[179,6261+37])
                                                      Texp_sequence
                                                      expression (src/astar.ml[176,6066+10]..src/astar.ml[176,6066+51])
                                                        Texp_apply
                                                        expression (src/astar.ml[176,6066+10]..src/astar.ml[176,6066+27])
                                                          Texp_ident "InfiniteArray/722.set"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/astar.ml[176,6066+28]..src/astar.ml[176,6066+29])
                                                              Texp_ident "a/723"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/astar.ml[176,6066+30]..src/astar.ml[176,6066+38])
                                                              Texp_ident "priority/741"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/astar.ml[176,6066+39]..src/astar.ml[176,6066+51])
                                                              Texp_construct "Some"
                                                              [
                                                                expression (src/astar.ml[176,6066+45]..src/astar.ml[176,6066+50])
                                                                  Texp_ident "inode/740"
                                                              ]
                                                        ]
                                                      expression (src/astar.ml[179,6261+10]..src/astar.ml[179,6261+36])
                                                        Texp_assert                                                        expression (src/astar.ml[179,6261+17]..src/astar.ml[179,6261+36])
                                                          Texp_apply
                                                          expression (src/astar.ml[179,6261+24]..src/astar.ml[179,6261+26])
                                                            Texp_ident "Stdlib!.<="
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/astar.ml[179,6261+18]..src/astar.ml[179,6261+23])
                                                                Texp_apply
                                                                expression (src/astar.ml[179,6261+18]..src/astar.ml[179,6261+19])
                                                                  Texp_ident "Stdlib!.!"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/astar.ml[179,6261+19]..src/astar.ml[179,6261+23])
                                                                      Texp_ident "best/736"
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (src/astar.ml[179,6261+27]..src/astar.ml[179,6261+35])
                                                                Texp_ident "priority/741"
                                                          ]
                                                  <case>
                                                    pattern (src/astar.ml[181,6357+8]..src/astar.ml[181,6357+19])
                                                      Tpat_value
                                                      pattern (src/astar.ml[181,6357+8]..src/astar.ml[181,6357+19])
                                                        Tpat_construct "Some"
                                                        [
                                                          pattern (src/astar.ml[181,6357+13]..src/astar.ml[181,6357+19])
                                                            Tpat_var "inode'/742"
                                                        ]
                                                        None
                                                    expression (src/astar.ml[182,6380+10]..src/astar.ml[185,6486+30])
                                                      Texp_sequence
                                                      expression (src/astar.ml[182,6380+10]..src/astar.ml[182,6380+30])
                                                        Texp_setfield
                                                        expression (src/astar.ml[182,6380+10]..src/astar.ml[182,6380+15])
                                                          Texp_ident "inode/740"
                                                        "next"
                                                        expression (src/astar.ml[182,6380+24]..src/astar.ml[182,6380+30])
                                                          Texp_ident "inode'/742"
                                                      expression (src/astar.ml[183,6412+10]..src/astar.ml[185,6486+30])
                                                        Texp_sequence
                                                        expression (src/astar.ml[183,6412+10]..src/astar.ml[183,6412+35])
                                                          Texp_setfield
                                                          expression (src/astar.ml[183,6412+10]..src/astar.ml[183,6412+15])
                                                            Texp_ident "inode/740"
                                                          "prev"
                                                          expression (src/astar.ml[183,6412+24]..src/astar.ml[183,6412+35])
                                                            Texp_field
                                                            expression (src/astar.ml[183,6412+24]..src/astar.ml[183,6412+30])
                                                              Texp_ident "inode'/742"
                                                            "prev"
                                                        expression (src/astar.ml[184,6449+10]..src/astar.ml[185,6486+30])
                                                          Texp_sequence
                                                          expression (src/astar.ml[184,6449+10]..src/astar.ml[184,6449+35])
                                                            Texp_setfield
                                                            expression (src/astar.ml[184,6449+10]..src/astar.ml[184,6449+21])
                                                              Texp_field
                                                              expression (src/astar.ml[184,6449+10]..src/astar.ml[184,6449+16])
                                                                Texp_ident "inode'/742"
                                                              "prev"
                                                            "next"
                                                            expression (src/astar.ml[184,6449+30]..src/astar.ml[184,6449+35])
                                                              Texp_ident "inode/740"
                                                          expression (src/astar.ml[185,6486+10]..src/astar.ml[185,6486+30])
                                                            Texp_setfield
                                                            expression (src/astar.ml[185,6486+10]..src/astar.ml[185,6486+16])
                                                              Texp_ident "inode'/742"
                                                            "prev"
                                                            expression (src/astar.ml[185,6486+25]..src/astar.ml[185,6486+30])
                                                              Texp_ident "inode/740"
                                                ]
                                    ]
                              ]
                        ]
                      structure_item (src/astar.ml[189,6661+4]..src/astar.ml[200,7024+26])
                        Tstr_value Nonrec
                        [
                          <def>
                            pattern (src/astar.ml[189,6661+8]..src/astar.ml[189,6661+14])
                              Tpat_var "remove/743"
                            expression (src/astar.ml[189,6661+15]..src/astar.ml[200,7024+26]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/astar.ml[189,6661+15]..src/astar.ml[189,6661+20])
                                    Tpat_var "inode/745"
                                  expression (src/astar.ml[190,6684+6]..src/astar.ml[200,7024+26])
                                    Texp_sequence
                                    expression (src/astar.ml[190,6684+6]..src/astar.ml[190,6684+31])
                                      Texp_apply
                                      expression (src/astar.ml[190,6684+15]..src/astar.ml[190,6684+17])
                                        Texp_ident "Stdlib!.:="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/astar.ml[190,6684+6]..src/astar.ml[190,6684+14])
                                            Texp_ident "cardinal/737"
                                        <arg>
                                          Nolabel
                                          expression (src/astar.ml[190,6684+18]..src/astar.ml[190,6684+31])
                                            Texp_apply
                                            expression (src/astar.ml[190,6684+28]..src/astar.ml[190,6684+29])
                                              Texp_ident "Stdlib!.-"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/astar.ml[190,6684+18]..src/astar.ml[190,6684+27])
                                                  Texp_apply
                                                  expression (src/astar.ml[190,6684+18]..src/astar.ml[190,6684+19])
                                                    Texp_ident "Stdlib!.!"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/astar.ml[190,6684+19]..src/astar.ml[190,6684+27])
                                                        Texp_ident "cardinal/737"
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (src/astar.ml[190,6684+30]..src/astar.ml[190,6684+31])
                                                  Texp_constant Const_int 1
                                            ]
                                      ]
                                    expression (src/astar.ml[191,6717+6]..src/astar.ml[200,7024+26])
                                      Texp_sequence
                                      expression (src/astar.ml[191,6717+6]..src/astar.ml[199,7013+9])
                                        Texp_ifthenelse
                                        expression (src/astar.ml[191,6717+9]..src/astar.ml[191,6717+28])
                                          Texp_apply
                                          expression (src/astar.ml[191,6717+20]..src/astar.ml[191,6717+22])
                                            Texp_ident "Stdlib!.=="
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/astar.ml[191,6717+9]..src/astar.ml[191,6717+19])
                                                Texp_field
                                                expression (src/astar.ml[191,6717+9]..src/astar.ml[191,6717+14])
                                                  Texp_ident "inode/745"
                                                "next"
                                            <arg>
                                              Nolabel
                                              expression (src/astar.ml[191,6717+23]..src/astar.ml[191,6717+28])
                                                Texp_ident "inode/745"
                                          ]
                                        expression (src/astar.ml[192,6751+8]..src/astar.ml[192,6751+47])
                                          Texp_apply
                                          expression (src/astar.ml[192,6751+8]..src/astar.ml[192,6751+25])
                                            Texp_ident "InfiniteArray/722.set"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/astar.ml[192,6751+26]..src/astar.ml[192,6751+27])
                                                Texp_ident "a/723"
                                            <arg>
                                              Nolabel
                                              expression (src/astar.ml[192,6751+28]..src/astar.ml[192,6751+42])
                                                Texp_field
                                                expression (src/astar.ml[192,6751+28]..src/astar.ml[192,6751+33])
                                                  Texp_ident "inode/745"
                                                "priority"
                                            <arg>
                                              Nolabel
                                              expression (src/astar.ml[192,6751+43]..src/astar.ml[192,6751+47])
                                                Texp_construct "None"
                                                []
                                          ]
                                        Some
                                          expression (src/astar.ml[193,6799+11]..src/astar.ml[199,7013+9])
                                            Texp_sequence
                                            expression (src/astar.ml[194,6816+8]..src/astar.ml[194,6816+60])
                                              Texp_apply
                                              expression (src/astar.ml[194,6816+8]..src/astar.ml[194,6816+25])
                                                Texp_ident "InfiniteArray/722.set"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/astar.ml[194,6816+26]..src/astar.ml[194,6816+27])
                                                    Texp_ident "a/723"
                                                <arg>
                                                  Nolabel
                                                  expression (src/astar.ml[194,6816+28]..src/astar.ml[194,6816+42])
                                                    Texp_field
                                                    expression (src/astar.ml[194,6816+28]..src/astar.ml[194,6816+33])
                                                      Texp_ident "inode/745"
                                                    "priority"
                                                <arg>
                                                  Nolabel
                                                  expression (src/astar.ml[194,6816+43]..src/astar.ml[194,6816+60])
                                                    Texp_construct "Some"
                                                    [
                                                      expression (src/astar.ml[194,6816+49]..src/astar.ml[194,6816+59])
                                                        Texp_field
                                                        expression (src/astar.ml[194,6816+49]..src/astar.ml[194,6816+54])
                                                          Texp_ident "inode/745"
                                                        "next"
                                                    ]
                                              ]
                                            expression (src/astar.ml[195,6878+8]..src/astar.ml[198,6985+27])
                                              Texp_sequence
                                              expression (src/astar.ml[195,6878+8]..src/astar.ml[195,6878+37])
                                                Texp_setfield
                                                expression (src/astar.ml[195,6878+8]..src/astar.ml[195,6878+18])
                                                  Texp_field
                                                  expression (src/astar.ml[195,6878+8]..src/astar.ml[195,6878+13])
                                                    Texp_ident "inode/745"
                                                  "next"
                                                "prev"
                                                expression (src/astar.ml[195,6878+27]..src/astar.ml[195,6878+37])
                                                  Texp_field
                                                  expression (src/astar.ml[195,6878+27]..src/astar.ml[195,6878+32])
                                                    Texp_ident "inode/745"
                                                  "prev"
                                              expression (src/astar.ml[196,6917+8]..src/astar.ml[198,6985+27])
                                                Texp_sequence
                                                expression (src/astar.ml[196,6917+8]..src/astar.ml[196,6917+37])
                                                  Texp_setfield
                                                  expression (src/astar.ml[196,6917+8]..src/astar.ml[196,6917+18])
                                                    Texp_field
                                                    expression (src/astar.ml[196,6917+8]..src/astar.ml[196,6917+13])
                                                      Texp_ident "inode/745"
                                                    "prev"
                                                  "next"
                                                  expression (src/astar.ml[196,6917+27]..src/astar.ml[196,6917+37])
                                                    Texp_field
                                                    expression (src/astar.ml[196,6917+27]..src/astar.ml[196,6917+32])
                                                      Texp_ident "inode/745"
                                                    "next"
                                                expression (src/astar.ml[197,6956+8]..src/astar.ml[198,6985+27])
                                                  Texp_sequence
                                                  expression (src/astar.ml[197,6956+8]..src/astar.ml[197,6956+27])
                                                    Texp_setfield
                                                    expression (src/astar.ml[197,6956+8]..src/astar.ml[197,6956+13])
                                                      Texp_ident "inode/745"
                                                    "next"
                                                    expression (src/astar.ml[197,6956+22]..src/astar.ml[197,6956+27])
                                                      Texp_ident "inode/745"
                                                  expression (src/astar.ml[198,6985+8]..src/astar.ml[198,6985+27])
                                                    Texp_setfield
                                                    expression (src/astar.ml[198,6985+8]..src/astar.ml[198,6985+13])
                                                      Texp_ident "inode/745"
                                                    "prev"
                                                    expression (src/astar.ml[198,6985+22]..src/astar.ml[198,6985+27])
                                                      Texp_ident "inode/745"
                                      expression (src/astar.ml[200,7024+6]..src/astar.ml[200,7024+26])
                                        Texp_setfield
                                        expression (src/astar.ml[200,7024+6]..src/astar.ml[200,7024+11])
                                          Texp_ident "inode/745"
                                        "priority"
                                        expression (src/astar.ml[200,7024+24]..src/astar.ml[200,7024+26])
                                          Texp_constant Const_int -1
                              ]
                        ]
                      structure_item (src/astar.ml[202,7052+4]..src/astar.ml[219,7600+16])
                        Tstr_value Rec
                        [
                          <def>
                            pattern (src/astar.ml[202,7052+12]..src/astar.ml[202,7052+15])
                              Tpat_var "get/746"
                            expression (src/astar.ml[202,7052+16]..src/astar.ml[206,7125+22]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/astar.ml[202,7052+16]..src/astar.ml[202,7052+18])
                                    Tpat_construct "()"
                                    []
                                    None
                                  expression (src/astar.ml[203,7073+6]..src/astar.ml[206,7125+22])
                                    Texp_ifthenelse
                                    expression (src/astar.ml[203,7073+9]..src/astar.ml[203,7073+22])
                                      Texp_apply
                                      expression (src/astar.ml[203,7073+19]..src/astar.ml[203,7073+20])
                                        Texp_ident "Stdlib!.="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/astar.ml[203,7073+9]..src/astar.ml[203,7073+18])
                                            Texp_apply
                                            expression (src/astar.ml[203,7073+9]..src/astar.ml[203,7073+10])
                                              Texp_ident "Stdlib!.!"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/astar.ml[203,7073+10]..src/astar.ml[203,7073+18])
                                                  Texp_ident "cardinal/737"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/astar.ml[203,7073+21]..src/astar.ml[203,7073+22])
                                            Texp_constant Const_int 0
                                      ]
                                    expression (src/astar.ml[204,7101+8]..src/astar.ml[204,7101+12])
                                      Texp_construct "None"
                                      []
                                    Some
                                      expression (src/astar.ml[206,7125+8]..src/astar.ml[206,7125+22])
                                        Texp_apply
                                        expression (src/astar.ml[206,7125+8]..src/astar.ml[206,7125+20])
                                          Texp_ident "get_nonempty/747"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/astar.ml[206,7125+20]..src/astar.ml[206,7125+22])
                                              Texp_construct "()"
                                              []
                                        ]
                              ]
                          <def>
                            pattern (src/astar.ml[208,7149+8]..src/astar.ml[208,7149+20])
                              Tpat_var "get_nonempty/747"
                            expression (src/astar.ml[208,7149+21]..src/astar.ml[219,7600+16]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/astar.ml[208,7149+21]..src/astar.ml[208,7149+23])
                                    Tpat_construct "()"
                                    []
                                    None
                                  expression (src/astar.ml[213,7431+6]..src/astar.ml[219,7600+16])
                                    Texp_match
                                    expression (src/astar.ml[213,7431+12]..src/astar.ml[213,7431+37])
                                      Texp_apply
                                      expression (src/astar.ml[213,7431+12]..src/astar.ml[213,7431+29])
                                        Texp_ident "InfiniteArray/722.get"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/astar.ml[213,7431+30]..src/astar.ml[213,7431+31])
                                            Texp_ident "a/723"
                                        <arg>
                                          Nolabel
                                          expression (src/astar.ml[213,7431+32]..src/astar.ml[213,7431+37])
                                            Texp_apply
                                            expression (src/astar.ml[213,7431+32]..src/astar.ml[213,7431+33])
                                              Texp_ident "Stdlib!.!"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/astar.ml[213,7431+33]..src/astar.ml[213,7431+37])
                                                  Texp_ident "best/736"
                                            ]
                                      ]
                                    [
                                      <case>
                                        pattern (src/astar.ml[214,7474+8]..src/astar.ml[214,7474+12])
                                          Tpat_value
                                          pattern (src/astar.ml[214,7474+8]..src/astar.ml[214,7474+12])
                                            Tpat_construct "None"
                                            []
                                            None
                                        expression (src/astar.ml[215,7490+10]..src/astar.ml[216,7519+24])
                                          Texp_sequence
                                          expression (src/astar.ml[215,7490+10]..src/astar.ml[215,7490+27])
                                            Texp_apply
                                            expression (src/astar.ml[215,7490+15]..src/astar.ml[215,7490+17])
                                              Texp_ident "Stdlib!.:="
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/astar.ml[215,7490+10]..src/astar.ml[215,7490+14])
                                                  Texp_ident "best/736"
                                              <arg>
                                                Nolabel
                                                expression (src/astar.ml[215,7490+18]..src/astar.ml[215,7490+27])
                                                  Texp_apply
                                                  expression (src/astar.ml[215,7490+24]..src/astar.ml[215,7490+25])
                                                    Texp_ident "Stdlib!.+"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/astar.ml[215,7490+18]..src/astar.ml[215,7490+23])
                                                        Texp_apply
                                                        expression (src/astar.ml[215,7490+18]..src/astar.ml[215,7490+19])
                                                          Texp_ident "Stdlib!.!"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/astar.ml[215,7490+19]..src/astar.ml[215,7490+23])
                                                              Texp_ident "best/736"
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (src/astar.ml[215,7490+26]..src/astar.ml[215,7490+27])
                                                        Texp_constant Const_int 1
                                                  ]
                                            ]
                                          expression (src/astar.ml[216,7519+10]..src/astar.ml[216,7519+24])
                                            Texp_apply
                                            expression (src/astar.ml[216,7519+10]..src/astar.ml[216,7519+22])
                                              Texp_ident "get_nonempty/747"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/astar.ml[216,7519+22]..src/astar.ml[216,7519+24])
                                                  Texp_construct "()"
                                                  []
                                            ]
                                      <case>
                                        pattern (src/astar.ml[217,7544+8]..src/astar.ml[217,7544+28])
                                          Tpat_value
                                          pattern (src/astar.ml[217,7544+8]..src/astar.ml[217,7544+28])
                                            Tpat_alias "result/750"
                                            pattern (src/astar.ml[217,7544+8]..src/astar.ml[217,7544+18])
                                              Tpat_construct "Some"
                                              [
                                                pattern (src/astar.ml[217,7544+13]..src/astar.ml[217,7544+18])
                                                  Tpat_var "inode/749"
                                              ]
                                              None
                                        expression (src/astar.ml[218,7576+10]..src/astar.ml[219,7600+16])
                                          Texp_sequence
                                          expression (src/astar.ml[218,7576+10]..src/astar.ml[218,7576+22])
                                            Texp_apply
                                            expression (src/astar.ml[218,7576+10]..src/astar.ml[218,7576+16])
                                              Texp_ident "remove/743"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/astar.ml[218,7576+17]..src/astar.ml[218,7576+22])
                                                  Texp_ident "inode/749"
                                            ]
                                          expression (src/astar.ml[219,7600+10]..src/astar.ml[219,7600+16])
                                            Texp_ident "result/750"
                                    ]
                              ]
                        ]
                      structure_item (src/astar.ml[221,7618+4]..src/astar.ml[224,7715+24])
                        Tstr_value Nonrec
                        [
                          <def>
                            pattern (src/astar.ml[221,7618+8]..src/astar.ml[221,7618+23])
                              Tpat_var "add_or_decrease/752"
                            expression (src/astar.ml[221,7618+24]..src/astar.ml[224,7715+24]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/astar.ml[221,7618+24]..src/astar.ml[221,7618+29])
                                    Tpat_var "inode/754"
                                  expression (src/astar.ml[221,7618+30]..src/astar.ml[224,7715+24]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/astar.ml[221,7618+30]..src/astar.ml[221,7618+38])
                                          Tpat_var "priority/755"
                                        expression (src/astar.ml[222,7659+6]..src/astar.ml[224,7715+24])
                                          Texp_sequence
                                          expression (src/astar.ml[222,7659+6]..src/astar.ml[223,7693+20])
                                            Texp_ifthenelse
                                            expression (src/astar.ml[222,7659+9]..src/astar.ml[222,7659+28])
                                              Texp_apply
                                              expression (src/astar.ml[222,7659+24]..src/astar.ml[222,7659+26])
                                                Texp_ident "Stdlib!.>="
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/astar.ml[222,7659+9]..src/astar.ml[222,7659+23])
                                                    Texp_field
                                                    expression (src/astar.ml[222,7659+9]..src/astar.ml[222,7659+14])
                                                      Texp_ident "inode/754"
                                                    "priority"
                                                <arg>
                                                  Nolabel
                                                  expression (src/astar.ml[222,7659+27]..src/astar.ml[222,7659+28])
                                                    Texp_constant Const_int 0
                                              ]
                                            expression (src/astar.ml[223,7693+8]..src/astar.ml[223,7693+20])
                                              Texp_apply
                                              expression (src/astar.ml[223,7693+8]..src/astar.ml[223,7693+14])
                                                Texp_ident "remove/743"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/astar.ml[223,7693+15]..src/astar.ml[223,7693+20])
                                                    Texp_ident "inode/754"
                                              ]
                                            None
                                          expression (src/astar.ml[224,7715+6]..src/astar.ml[224,7715+24])
                                            Texp_apply
                                            expression (src/astar.ml[224,7715+6]..src/astar.ml[224,7715+9])
                                              Texp_ident "add/738"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/astar.ml[224,7715+10]..src/astar.ml[224,7715+15])
                                                  Texp_ident "inode/754"
                                              <arg>
                                                Nolabel
                                                expression (src/astar.ml[224,7715+16]..src/astar.ml[224,7715+24])
                                                  Texp_ident "priority/755"
                                            ]
                                    ]
                              ]
                        ]
                    ]
                  module_type (src/astar.ml[137,4703+13]..src/astar.ml[151,5137+5])
                    Tmty_signature
                    [
                      signature_item (src/astar.ml[140,4760+4]..src/astar.ml[140,4760+38])
                        Tsig_value
                        value_description add/756 (src/astar.ml[140,4760+4]..src/astar.ml[140,4760+38])
                          core_type (src/astar.ml[140,4760+13]..src/astar.ml[140,4760+38])
                            Ttyp_arrow
                            Nolabel
                            core_type (src/astar.ml[140,4760+13]..src/astar.ml[140,4760+18])
                              Ttyp_constr "inode/507"
                              []
                            core_type (src/astar.ml[140,4760+22]..src/astar.ml[140,4760+38])
                              Ttyp_arrow
                              Nolabel
                              core_type (src/astar.ml[140,4760+22]..src/astar.ml[140,4760+30])
                                Ttyp_constr "priority/494"
                                []
                              core_type (src/astar.ml[140,4760+34]..src/astar.ml[140,4760+38])
                                Ttyp_constr "unit/6!"
                                []
                          []
                      signature_item (src/astar.ml[146,4989+4]..src/astar.ml[146,4989+50])
                        Tsig_value
                        value_description add_or_decrease/757 (src/astar.ml[146,4989+4]..src/astar.ml[146,4989+50])
                          core_type (src/astar.ml[146,4989+25]..src/astar.ml[146,4989+50])
                            Ttyp_arrow
                            Nolabel
                            core_type (src/astar.ml[146,4989+25]..src/astar.ml[146,4989+30])
                              Ttyp_constr "inode/507"
                              []
                            core_type (src/astar.ml[146,4989+34]..src/astar.ml[146,4989+50])
                              Ttyp_arrow
                              Nolabel
                              core_type (src/astar.ml[146,4989+34]..src/astar.ml[146,4989+42])
                                Ttyp_constr "priority/494"
                                []
                              core_type (src/astar.ml[146,4989+46]..src/astar.ml[146,4989+50])
                                Ttyp_constr "unit/6!"
                                []
                          []
                      signature_item (src/astar.ml[149,5102+4]..src/astar.ml[149,5102+33])
                        Tsig_value
                        value_description get/758 (src/astar.ml[149,5102+4]..src/astar.ml[149,5102+33])
                          core_type (src/astar.ml[149,5102+13]..src/astar.ml[149,5102+33])
                            Ttyp_arrow
                            Nolabel
                            core_type (src/astar.ml[149,5102+13]..src/astar.ml[149,5102+17])
                              Ttyp_constr "unit/6!"
                              []
                            core_type (src/astar.ml[149,5102+21]..src/astar.ml[149,5102+33])
                              Ttyp_constr "option/10!"
                              [
                                core_type (src/astar.ml[149,5102+21]..src/astar.ml[149,5102+26])
                                  Ttyp_constr "inode/507"
                                  []
                              ]
                          []
                    ]
            structure_item (src/astar.ml[230,7773+2]..src/astar.ml[233,7878+5])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/astar.ml[230,7773+6]..src/astar.ml[230,7773+14])
                    Tpat_var "estimate/760"
                  expression (src/astar.ml[230,7773+15]..src/astar.ml[233,7878+5]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/astar.ml[230,7773+15]..src/astar.ml[230,7773+19])
                          Tpat_var "node/762"
                        expression (src/astar.ml[231,7795+4]..src/astar.ml[233,7878+5])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (src/astar.ml[231,7795+8]..src/astar.ml[231,7795+9])
                                Tpat_var "e/763"
                              expression (src/astar.ml[231,7795+12]..src/astar.ml[231,7795+27])
                                Texp_apply
                                expression (src/astar.ml[231,7795+12]..src/astar.ml[231,7795+22])
                                  Texp_ident "G/492.estimate"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/astar.ml[231,7795+23]..src/astar.ml[231,7795+27])
                                      Texp_ident "node/762"
                                ]
                          ]
                          expression (src/astar.ml[232,7826+4]..src/astar.ml[233,7878+5])
                            Texp_sequence
                            expression (src/astar.ml[232,7826+4]..src/astar.ml[232,7826+19])
                              Texp_assert                              expression (src/astar.ml[232,7826+11]..src/astar.ml[232,7826+19])
                                Texp_apply
                                expression (src/astar.ml[232,7826+14]..src/astar.ml[232,7826+16])
                                  Texp_ident "Stdlib!.<="
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/astar.ml[232,7826+12]..src/astar.ml[232,7826+13])
                                      Texp_constant Const_int 0
                                  <arg>
                                    Nolabel
                                    expression (src/astar.ml[232,7826+17]..src/astar.ml[232,7826+18])
                                      Texp_ident "e/763"
                                ]
                            expression (src/astar.ml[233,7878+4]..src/astar.ml[233,7878+5])
                              Texp_ident "e/763"
                    ]
              ]
            structure_item (src/astar.ml[235,7885+2]..src/astar.ml[248,8182+5])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/astar.ml[235,7885+6]..src/astar.ml[235,7885+8])
                    Tpat_construct "()"
                    []
                    None
                  expression (src/astar.ml[236,7896+4]..src/astar.ml[248,8182+5])
                    Texp_apply
                    expression (src/astar.ml[236,7896+4]..src/astar.ml[236,7896+13])
                      Texp_ident "G/492.sources"
                    [
                      <arg>
                        Nolabel
                        expression (src/astar.ml[236,7896+14]..src/astar.ml[248,8182+5])
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/astar.ml[236,7896+19]..src/astar.ml[236,7896+23])
                                Tpat_var "node/764"
                              expression (src/astar.ml[237,7923+6]..src/astar.ml[247,8149+32])
                                Texp_let Rec
                                [
                                  <def>
                                    pattern (src/astar.ml[237,7923+14]..src/astar.ml[237,7923+19])
                                      Tpat_var "inode/765"
                                    expression (src/astar.ml[237,7923+22]..src/astar.ml[245,8114+7])
                                      Texp_record
                                        fields =
                                          [
                                            "this"
                                              expression (src/astar.ml[238,7947+15]..src/astar.ml[238,7947+19])
                                                Texp_ident "node/764"
                                            "cost"
                                              expression (src/astar.ml[239,7968+15]..src/astar.ml[239,7968+16])
                                                Texp_constant Const_int 0
                                            "estimate"
                                              expression (src/astar.ml[240,7986+19]..src/astar.ml[240,7986+32])
                                                Texp_apply
                                                expression (src/astar.ml[240,7986+19]..src/astar.ml[240,7986+27])
                                                  Texp_ident "estimate/760"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/astar.ml[240,7986+28]..src/astar.ml[240,7986+32])
                                                      Texp_ident "node/764"
                                                ]
                                            "path"
                                              expression (src/astar.ml[241,8020+15]..src/astar.ml[241,8020+26])
                                                Texp_construct "Source"
                                                [
                                                  expression (src/astar.ml[241,8020+22]..src/astar.ml[241,8020+26])
                                                    Texp_ident "node/764"
                                                ]
                                            "prev"
                                              expression (src/astar.ml[242,8048+15]..src/astar.ml[242,8048+20])
                                                Texp_ident "inode/765"
                                            "next"
                                              expression (src/astar.ml[243,8070+15]..src/astar.ml[243,8070+20])
                                                Texp_ident "inode/765"
                                            "priority"
                                              expression (src/astar.ml[244,8092+19]..src/astar.ml[244,8092+21])
                                                Texp_constant Const_int -1
                                          ]
                                        representation =
                                          Record_regular
                                        extended_expression =
                                          None
                                ]
                                expression (src/astar.ml[246,8125+6]..src/astar.ml[247,8149+32])
                                  Texp_sequence
                                  expression (src/astar.ml[246,8125+6]..src/astar.ml[246,8125+22])
                                    Texp_apply
                                    expression (src/astar.ml[246,8125+6]..src/astar.ml[246,8125+11])
                                      Texp_ident "M/704.add"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/astar.ml[246,8125+12]..src/astar.ml[246,8125+16])
                                          Texp_ident "node/764"
                                      <arg>
                                        Nolabel
                                        expression (src/astar.ml[246,8125+17]..src/astar.ml[246,8125+22])
                                          Texp_ident "inode/765"
                                    ]
                                  expression (src/astar.ml[247,8149+6]..src/astar.ml[247,8149+32])
                                    Texp_apply
                                    expression (src/astar.ml[247,8149+6]..src/astar.ml[247,8149+11])
                                      Texp_ident "P/759.add"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/astar.ml[247,8149+12]..src/astar.ml[247,8149+17])
                                          Texp_ident "inode/765"
                                      <arg>
                                        Nolabel
                                        expression (src/astar.ml[247,8149+18]..src/astar.ml[247,8149+32])
                                          Texp_field
                                          expression (src/astar.ml[247,8149+18]..src/astar.ml[247,8149+23])
                                            Texp_ident "inode/765"
                                          "estimate"
                                    ]
                          ]
                    ]
              ]
            structure_item (src/astar.ml[252,8255+2]..src/astar.ml[253,8277+51])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/astar.ml[252,8255+6]..src/astar.ml[252,8255+14])
                    Tpat_var "distance/766"
                  expression (src/astar.ml[252,8255+15]..src/astar.ml[253,8277+51]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/astar.ml[252,8255+15]..src/astar.ml[252,8255+19])
                          Tpat_var "node/768"
                        expression (src/astar.ml[253,8277+4]..src/astar.ml[253,8277+51])
                          Texp_try
                          expression (src/astar.ml[253,8277+8]..src/astar.ml[253,8277+25])
                            Texp_field
                            expression (src/astar.ml[253,8277+8]..src/astar.ml[253,8277+20])
                              Texp_apply
                              expression (src/astar.ml[253,8277+9]..src/astar.ml[253,8277+14])
                                Texp_ident "M/704.get"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/astar.ml[253,8277+15]..src/astar.ml[253,8277+19])
                                    Texp_ident "node/768"
                              ]
                            "cost"
                          [
                            <case>
                              pattern (src/astar.ml[253,8277+31]..src/astar.ml[253,8277+40])
                                Tpat_construct "Not_found"
                                []
                                None
                              expression (src/astar.ml[253,8277+44]..src/astar.ml[253,8277+51])
                                Texp_ident "Stdlib!.max_int"
                          ]
                    ]
              ]
            structure_item (src/astar.ml[255,8330+2]..src/astar.ml[256,8348+21])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/astar.ml[255,8330+6]..src/astar.ml[255,8330+10])
                    Tpat_var "path/769"
                  expression (src/astar.ml[255,8330+11]..src/astar.ml[256,8348+21]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/astar.ml[255,8330+11]..src/astar.ml[255,8330+15])
                          Tpat_var "node/771"
                        expression (src/astar.ml[256,8348+4]..src/astar.ml[256,8348+21])
                          Texp_field
                          expression (src/astar.ml[256,8348+4]..src/astar.ml[256,8348+16])
                            Texp_apply
                            expression (src/astar.ml[256,8348+5]..src/astar.ml[256,8348+10])
                              Texp_ident "M/704.get"
                            [
                              <arg>
                                Nolabel
                                expression (src/astar.ml[256,8348+11]..src/astar.ml[256,8348+15])
                                  Texp_ident "node/771"
                            ]
                          "path"
                    ]
              ]
            structure_item (src/astar.ml[260,8438+2]..src/astar.ml[323,10502+16])
              Tstr_value Rec
              [
                <def>
                  pattern (src/astar.ml[260,8438+10]..src/astar.ml[260,8438+16])
                    Tpat_var "search/772"
                  expression (src/astar.ml[260,8438+17]..src/astar.ml[323,10502+16]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/astar.ml[260,8438+17]..src/astar.ml[260,8438+18])
                          Tpat_var "f/773"
                        expression (src/astar.ml[265,8580+4]..src/astar.ml[323,10502+16])
                          Texp_match
                          expression (src/astar.ml[265,8580+10]..src/astar.ml[265,8580+17])
                            Texp_apply
                            expression (src/astar.ml[265,8580+10]..src/astar.ml[265,8580+15])
                              Texp_ident "P/759.get"
                            [
                              <arg>
                                Nolabel
                                expression (src/astar.ml[265,8580+15]..src/astar.ml[265,8580+17])
                                  Texp_construct "()"
                                  []
                            ]
                          [
                            <case>
                              pattern (src/astar.ml[266,8603+6]..src/astar.ml[266,8603+10])
                                Tpat_value
                                pattern (src/astar.ml[266,8603+6]..src/astar.ml[266,8603+10])
                                  Tpat_construct "None"
                                  []
                                  None
                              expression (src/astar.ml[268,8640+7]..src/astar.ml[268,8640+21])
                                Texp_tuple
                                [
                                  expression (src/astar.ml[268,8640+7]..src/astar.ml[268,8640+15])
                                    Texp_ident "distance/766"
                                  expression (src/astar.ml[268,8640+17]..src/astar.ml[268,8640+21])
                                    Texp_ident "path/769"
                                ]
                            <case>
                              pattern (src/astar.ml[270,8663+6]..src/astar.ml[270,8663+16])
                                Tpat_value
                                pattern (src/astar.ml[270,8663+6]..src/astar.ml[270,8663+16])
                                  Tpat_construct "Some"
                                  [
                                    pattern (src/astar.ml[270,8663+11]..src/astar.ml[270,8663+16])
                                      Tpat_var "inode/774"
                                  ]
                                  None
                              expression (src/astar.ml[271,8683+8]..src/astar.ml[323,10502+16])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (src/astar.ml[271,8683+12]..src/astar.ml[271,8683+16])
                                      Tpat_var "node/775"
                                    expression (src/astar.ml[271,8683+19]..src/astar.ml[271,8683+29])
                                      Texp_field
                                      expression (src/astar.ml[271,8683+19]..src/astar.ml[271,8683+24])
                                        Texp_ident "inode/774"
                                      "this"
                                ]
                                expression (src/astar.ml[274,8783+8]..src/astar.ml[323,10502+16])
                                  Texp_sequence
                                  expression (src/astar.ml[274,8783+8]..src/astar.ml[274,8783+28])
                                    Texp_apply
                                    expression (src/astar.ml[274,8783+8]..src/astar.ml[274,8783+9])
                                      Texp_ident "f/773"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/astar.ml[274,8783+10]..src/astar.ml[274,8783+28])
                                          Texp_tuple
                                          [
                                            expression (src/astar.ml[274,8783+11]..src/astar.ml[274,8783+15])
                                              Texp_ident "node/775"
                                            expression (src/astar.ml[274,8783+17]..src/astar.ml[274,8783+27])
                                              Texp_field
                                              expression (src/astar.ml[274,8783+17]..src/astar.ml[274,8783+22])
                                                Texp_ident "inode/774"
                                              "path"
                                          ]
                                    ]
                                  expression (src/astar.ml[277,8863+8]..src/astar.ml[323,10502+16])
                                    Texp_sequence
                                    expression (src/astar.ml[277,8863+8]..src/astar.ml[321,10490+9])
                                      Texp_apply
                                      expression (src/astar.ml[277,8863+8]..src/astar.ml[277,8863+20])
                                        Texp_ident "G/492.successors"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/astar.ml[277,8863+21]..src/astar.ml[277,8863+25])
                                            Texp_ident "node/775"
                                        <arg>
                                          Nolabel
                                          expression (src/astar.ml[277,8863+26]..src/astar.ml[321,10490+9])
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (src/astar.ml[277,8863+31]..src/astar.ml[277,8863+36])
                                                  Tpat_var "label/776"
                                                expression (src/astar.ml[277,8863+37]..src/astar.ml[319,10461+27]) ghost
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (src/astar.ml[277,8863+37]..src/astar.ml[277,8863+46])
                                                        Tpat_var "edge_cost/777"
                                                      expression (src/astar.ml[277,8863+47]..src/astar.ml[319,10461+27]) ghost
                                                        Texp_function
                                                        Nolabel
                                                        [
                                                          <case>
                                                            pattern (src/astar.ml[277,8863+47]..src/astar.ml[277,8863+50])
                                                              Tpat_var "son/778"
                                                            expression (src/astar.ml[278,8917+10]..src/astar.ml[319,10461+27])
                                                              Texp_sequence
                                                              expression (src/astar.ml[278,8917+10]..src/astar.ml[278,8917+33])
                                                                Texp_assert                                                                expression (src/astar.ml[278,8917+17]..src/astar.ml[278,8917+33])
                                                                  Texp_apply
                                                                  expression (src/astar.ml[278,8917+20]..src/astar.ml[278,8917+22])
                                                                    Texp_ident "Stdlib!.<="
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/astar.ml[278,8917+18]..src/astar.ml[278,8917+19])
                                                                        Texp_constant Const_int 0
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/astar.ml[278,8917+23]..src/astar.ml[278,8917+32])
                                                                        Texp_ident "edge_cost/777"
                                                                  ]
                                                              expression (src/astar.ml[282,9108+10]..src/astar.ml[319,10461+27])
                                                                Texp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (src/astar.ml[282,9108+14]..src/astar.ml[282,9108+22])
                                                                      Tpat_var "new_cost/779"
                                                                    expression (src/astar.ml[282,9108+25]..src/astar.ml[282,9108+47])
                                                                      Texp_apply
                                                                      expression (src/astar.ml[282,9108+36]..src/astar.ml[282,9108+37])
                                                                        Texp_ident "Stdlib!.+"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/astar.ml[282,9108+25]..src/astar.ml[282,9108+35])
                                                                            Texp_field
                                                                            expression (src/astar.ml[282,9108+25]..src/astar.ml[282,9108+30])
                                                                              Texp_ident "inode/774"
                                                                            "cost"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/astar.ml[282,9108+38]..src/astar.ml[282,9108+47])
                                                                            Texp_ident "edge_cost/777"
                                                                      ]
                                                                ]
                                                                expression (src/astar.ml[283,9159+10]..src/astar.ml[319,10461+27])
                                                                  Texp_sequence
                                                                  expression (src/astar.ml[283,9159+10]..src/astar.ml[283,9159+32])
                                                                    Texp_assert                                                                    expression (src/astar.ml[283,9159+17]..src/astar.ml[283,9159+32])
                                                                      Texp_apply
                                                                      expression (src/astar.ml[283,9159+20]..src/astar.ml[283,9159+22])
                                                                        Texp_ident "Stdlib!.<="
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/astar.ml[283,9159+18]..src/astar.ml[283,9159+19])
                                                                            Texp_constant Const_int 0
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/astar.ml[283,9159+23]..src/astar.ml[283,9159+31])
                                                                            Texp_ident "new_cost/779"
                                                                      ]
                                                                  expression (src/astar.ml[285,9223+10]..src/astar.ml[319,10461+27])
                                                                    Texp_try
                                                                    expression (src/astar.ml[286,9237+12]..src/astar.ml[301,9879+15])
                                                                      Texp_let Nonrec
                                                                      [
                                                                        <def>
                                                                          pattern (src/astar.ml[286,9237+16]..src/astar.ml[286,9237+20])
                                                                            Tpat_var "ison/780"
                                                                          expression (src/astar.ml[286,9237+23]..src/astar.ml[286,9237+32])
                                                                            Texp_apply
                                                                            expression (src/astar.ml[286,9237+23]..src/astar.ml[286,9237+28])
                                                                              Texp_ident "M/704.get"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/astar.ml[286,9237+29]..src/astar.ml[286,9237+32])
                                                                                  Texp_ident "son/778"
                                                                            ]
                                                                      ]
                                                                      expression (src/astar.ml[287,9273+12]..src/astar.ml[301,9879+15])
                                                                        Texp_ifthenelse
                                                                        expression (src/astar.ml[287,9273+15]..src/astar.ml[287,9273+35])
                                                                          Texp_apply
                                                                          expression (src/astar.ml[287,9273+24]..src/astar.ml[287,9273+25])
                                                                            Texp_ident "Stdlib!.<"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/astar.ml[287,9273+15]..src/astar.ml[287,9273+23])
                                                                                Texp_ident "new_cost/779"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/astar.ml[287,9273+26]..src/astar.ml[287,9273+35])
                                                                                Texp_field
                                                                                expression (src/astar.ml[287,9273+26]..src/astar.ml[287,9273+30])
                                                                                  Texp_ident "ison/780"
                                                                                "cost"
                                                                          ]
                                                                        expression (src/astar.ml[287,9273+41]..src/astar.ml[301,9879+15])
                                                                          Texp_let Nonrec
                                                                          [
                                                                            <def>
                                                                              pattern (src/astar.ml[295,9618+18]..src/astar.ml[295,9618+26])
                                                                                Tpat_var "new_fhat/781"
                                                                              expression (src/astar.ml[295,9618+29]..src/astar.ml[295,9618+53])
                                                                                Texp_apply
                                                                                expression (src/astar.ml[295,9618+38]..src/astar.ml[295,9618+39])
                                                                                  Texp_ident "Stdlib!.+"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/astar.ml[295,9618+29]..src/astar.ml[295,9618+37])
                                                                                      Texp_ident "new_cost/779"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/astar.ml[295,9618+40]..src/astar.ml[295,9618+53])
                                                                                      Texp_field
                                                                                      expression (src/astar.ml[295,9618+40]..src/astar.ml[295,9618+44])
                                                                                        Texp_ident "ison/780"
                                                                                      "estimate"
                                                                                ]
                                                                          ]
                                                                          expression (src/astar.ml[296,9675+14]..src/astar.ml[299,9826+51])
                                                                            Texp_sequence
                                                                            expression (src/astar.ml[296,9675+14]..src/astar.ml[296,9675+36])
                                                                              Texp_assert                                                                              expression (src/astar.ml[296,9675+21]..src/astar.ml[296,9675+36])
                                                                                Texp_apply
                                                                                expression (src/astar.ml[296,9675+24]..src/astar.ml[296,9675+26])
                                                                                  Texp_ident "Stdlib!.<="
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/astar.ml[296,9675+22]..src/astar.ml[296,9675+23])
                                                                                      Texp_constant Const_int 0
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/astar.ml[296,9675+27]..src/astar.ml[296,9675+35])
                                                                                      Texp_ident "new_fhat/781"
                                                                                ]
                                                                            expression (src/astar.ml[297,9742+14]..src/astar.ml[299,9826+51])
                                                                              Texp_sequence
                                                                              expression (src/astar.ml[297,9742+14]..src/astar.ml[297,9742+45])
                                                                                Texp_apply
                                                                                expression (src/astar.ml[297,9742+14]..src/astar.ml[297,9742+31])
                                                                                  Texp_ident "P/759.add_or_decrease"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/astar.ml[297,9742+32]..src/astar.ml[297,9742+36])
                                                                                      Texp_ident "ison/780"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/astar.ml[297,9742+37]..src/astar.ml[297,9742+45])
                                                                                      Texp_ident "new_fhat/781"
                                                                                ]
                                                                              expression (src/astar.ml[298,9789+14]..src/astar.ml[299,9826+51])
                                                                                Texp_sequence
                                                                                expression (src/astar.ml[298,9789+14]..src/astar.ml[298,9789+35])
                                                                                  Texp_setfield
                                                                                  expression (src/astar.ml[298,9789+14]..src/astar.ml[298,9789+18])
                                                                                    Texp_ident "ison/780"
                                                                                  "cost"
                                                                                  expression (src/astar.ml[298,9789+27]..src/astar.ml[298,9789+35])
                                                                                    Texp_ident "new_cost/779"
                                                                                expression (src/astar.ml[299,9826+14]..src/astar.ml[299,9826+51])
                                                                                  Texp_setfield
                                                                                  expression (src/astar.ml[299,9826+14]..src/astar.ml[299,9826+18])
                                                                                    Texp_ident "ison/780"
                                                                                  "path"
                                                                                  expression (src/astar.ml[299,9826+27]..src/astar.ml[299,9826+51])
                                                                                    Texp_construct "Edge"
                                                                                    [
                                                                                      expression (src/astar.ml[299,9826+33]..src/astar.ml[299,9826+38])
                                                                                        Texp_ident "label/776"
                                                                                      expression (src/astar.ml[299,9826+40]..src/astar.ml[299,9826+50])
                                                                                        Texp_field
                                                                                        expression (src/astar.ml[299,9826+40]..src/astar.ml[299,9826+45])
                                                                                          Texp_ident "inode/774"
                                                                                        "path"
                                                                                    ]
                                                                        None
                                                                    [
                                                                      <case>
                                                                        pattern (src/astar.ml[302,9895+15]..src/astar.ml[302,9895+24])
                                                                          Tpat_construct "Not_found"
                                                                          []
                                                                          None
                                                                        expression (src/astar.ml[307,10050+12]..src/astar.ml[319,10461+27])
                                                                          Texp_let Rec
                                                                          [
                                                                            <def>
                                                                              pattern (src/astar.ml[307,10050+20]..src/astar.ml[307,10050+24])
                                                                                Tpat_var "ison/782"
                                                                              expression (src/astar.ml[307,10050+27]..src/astar.ml[315,10304+13])
                                                                                Texp_record
                                                                                  fields =
                                                                                    [
                                                                                      "this"
                                                                                        expression (src/astar.ml[308,10079+21]..src/astar.ml[308,10079+24])
                                                                                          Texp_ident "son/778"
                                                                                      "cost"
                                                                                        expression (src/astar.ml[309,10105+21]..src/astar.ml[309,10105+29])
                                                                                          Texp_ident "new_cost/779"
                                                                                      "estimate"
                                                                                        expression (src/astar.ml[310,10136+25]..src/astar.ml[310,10136+37])
                                                                                          Texp_apply
                                                                                          expression (src/astar.ml[310,10136+25]..src/astar.ml[310,10136+33])
                                                                                            Texp_ident "estimate/760"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/astar.ml[310,10136+34]..src/astar.ml[310,10136+37])
                                                                                                Texp_ident "son/778"
                                                                                          ]
                                                                                      "path"
                                                                                        expression (src/astar.ml[311,10175+21]..src/astar.ml[311,10175+45])
                                                                                          Texp_construct "Edge"
                                                                                          [
                                                                                            expression (src/astar.ml[311,10175+27]..src/astar.ml[311,10175+32])
                                                                                              Texp_ident "label/776"
                                                                                            expression (src/astar.ml[311,10175+34]..src/astar.ml[311,10175+44])
                                                                                              Texp_field
                                                                                              expression (src/astar.ml[311,10175+34]..src/astar.ml[311,10175+39])
                                                                                                Texp_ident "inode/774"
                                                                                              "path"
                                                                                          ]
                                                                                      "prev"
                                                                                        expression (src/astar.ml[312,10222+21]..src/astar.ml[312,10222+25])
                                                                                          Texp_ident "ison/782"
                                                                                      "next"
                                                                                        expression (src/astar.ml[313,10249+21]..src/astar.ml[313,10249+25])
                                                                                          Texp_ident "ison/782"
                                                                                      "priority"
                                                                                        expression (src/astar.ml[314,10276+25]..src/astar.ml[314,10276+27])
                                                                                          Texp_constant Const_int -1
                                                                                    ]
                                                                                  representation =
                                                                                    Record_regular
                                                                                  extended_expression =
                                                                                    None
                                                                          ]
                                                                          expression (src/astar.ml[316,10321+12]..src/astar.ml[319,10461+27])
                                                                            Texp_sequence
                                                                            expression (src/astar.ml[316,10321+12]..src/astar.ml[316,10321+26])
                                                                              Texp_apply
                                                                              expression (src/astar.ml[316,10321+12]..src/astar.ml[316,10321+17])
                                                                                Texp_ident "M/704.add"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/astar.ml[316,10321+18]..src/astar.ml[316,10321+21])
                                                                                    Texp_ident "son/778"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/astar.ml[316,10321+22]..src/astar.ml[316,10321+26])
                                                                                    Texp_ident "ison/782"
                                                                              ]
                                                                            expression (src/astar.ml[317,10349+12]..src/astar.ml[319,10461+27])
                                                                              Texp_let Nonrec
                                                                              [
                                                                                <def>
                                                                                  pattern (src/astar.ml[317,10349+16]..src/astar.ml[317,10349+20])
                                                                                    Tpat_var "fhat/783"
                                                                                  expression (src/astar.ml[317,10349+23]..src/astar.ml[317,10349+47])
                                                                                    Texp_apply
                                                                                    expression (src/astar.ml[317,10349+32]..src/astar.ml[317,10349+33])
                                                                                      Texp_ident "Stdlib!.+"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/astar.ml[317,10349+23]..src/astar.ml[317,10349+31])
                                                                                          Texp_ident "new_cost/779"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/astar.ml[317,10349+34]..src/astar.ml[317,10349+47])
                                                                                          Texp_field
                                                                                          expression (src/astar.ml[317,10349+34]..src/astar.ml[317,10349+38])
                                                                                            Texp_ident "ison/782"
                                                                                          "estimate"
                                                                                    ]
                                                                              ]
                                                                              expression (src/astar.ml[318,10400+12]..src/astar.ml[319,10461+27])
                                                                                Texp_sequence
                                                                                expression (src/astar.ml[318,10400+12]..src/astar.ml[318,10400+30])
                                                                                  Texp_assert                                                                                  expression (src/astar.ml[318,10400+19]..src/astar.ml[318,10400+30])
                                                                                    Texp_apply
                                                                                    expression (src/astar.ml[318,10400+22]..src/astar.ml[318,10400+24])
                                                                                      Texp_ident "Stdlib!.<="
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/astar.ml[318,10400+20]..src/astar.ml[318,10400+21])
                                                                                          Texp_constant Const_int 0
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/astar.ml[318,10400+25]..src/astar.ml[318,10400+29])
                                                                                          Texp_ident "fhat/783"
                                                                                    ]
                                                                                expression (src/astar.ml[319,10461+12]..src/astar.ml[319,10461+27])
                                                                                  Texp_apply
                                                                                  expression (src/astar.ml[319,10461+12]..src/astar.ml[319,10461+17])
                                                                                    Texp_ident "P/759.add"
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/astar.ml[319,10461+18]..src/astar.ml[319,10461+22])
                                                                                        Texp_ident "ison/782"
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/astar.ml[319,10461+23]..src/astar.ml[319,10461+27])
                                                                                        Texp_ident "fhat/783"
                                                                                  ]
                                                                    ]
                                                        ]
                                                  ]
                                            ]
                                      ]
                                    expression (src/astar.ml[323,10502+8]..src/astar.ml[323,10502+16])
                                      Texp_apply
                                      expression (src/astar.ml[323,10502+8]..src/astar.ml[323,10502+14])
                                        Texp_ident "search/772"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/astar.ml[323,10502+15]..src/astar.ml[323,10502+16])
                                            Texp_ident "f/773"
                                      ]
                          ]
                    ]
              ]
          ]
]

{<Dune__exe__Astar>
 "Make"[module] ->
   Abs<Dune__exe__Astar.81>
      (G/492,
       {
        "path"[type] -> <Dune__exe__Astar.9>;
        "reverse"[value] -> <Dune__exe__Astar.18>;
        "search"[value] -> <Dune__exe__Astar.69>;
        });
 }

(let
  (Make/784 =
     (function G/1833 is_a_functor
       (let (G/492 =a G/1833)
         (letrec
           (follow/498
              (function labels/499 path/500
                (switch* path/500
                 case tag 0:
                  (let
                    (path/503 =a (field_imm 1 path/500)
                     label/502 =a (field_imm 0 path/500))
                    (apply follow/498 (makeblock 0 label/502 labels/499)
                      path/503))
                 case tag 1:
                  (let (node/501 =a (field_imm 0 path/500))
                    (makeblock 0 node/501 labels/499)))))
           (let
             (reverse/504 = (function path/506 (apply follow/498 0 path/506))
              M/704 =
                (let
                  (H/693 =
                     (apply
                       (let
                         (let/1824 = (field_imm 25 (global Stdlib__Hashtbl!)))
                         (field_imm 25 (global Stdlib__Hashtbl!)))
                       (let
                         (include/1823 =a G/492
                          equal/516 =a (field_mut 0 include/1823)
                          hash/517 =a (field_mut 1 include/1823)
                          sources/519 =a (field_mut 2 include/1823)
                          successors/520 =a (field_mut 3 include/1823)
                          estimate/521 =a (field_mut 4 include/1823))
                         (makeblock 0 equal/516 hash/517)))
                   t/694 = (apply (field_imm 0 H/693) 100003)
                   add/695 =
                     (function node/697 inode/698 : int
                       (apply (field_imm 4 H/693) t/694 node/697 inode/698))
                   get/699 =
                     (function node/701
                       (apply (field_imm 6 H/693) t/694 node/701)))
                  (makeblock 0 add/695 get/699))
              P/759 =
                (let
                  (a/723 =
                     (apply (field_imm 0 (field_imm 8 (global MenhirLib!)))
                       0)
                   best/736 = (makemutable 0 (int) 0)
                   cardinal/737 = (makemutable 0 (int) 0)
                   add/738 =
                     (function inode/740 priority/741[int] : int
                       (seq
                         (if (<= 0 priority/741) 0
                           (raise
                             (makeblock 0 (global Assert_failure/28!)
                               [0: "src/astar.ml" 171 6])))
                         (setfield_imm 0 cardinal/737
                           (+ (field_int 0 cardinal/737) 1))
                         (setfield_imm 6 inode/740 priority/741)
                         (let
                           (*match*/1825 =
                              (apply
                                (field_imm 1
                                  (field_imm 8 (global MenhirLib!)))
                                a/723 priority/741))
                           (if (isint *match*/1825)
                             (seq
                               (apply
                                 (field_imm 2
                                   (field_imm 8 (global MenhirLib!)))
                                 a/723 priority/741 (makeblock 0 inode/740))
                               (if (<= (field_int 0 best/736) priority/741) 0
                                 (raise
                                   (makeblock 0 (global Assert_failure/28!)
                                     [0: "src/astar.ml" 179 10]))))
                             (let (inode'/742 =a (field_imm 0 *match*/1825))
                               (seq (setfield_ptr 5 inode/740 inode'/742)
                                 (setfield_ptr 4 inode/740
                                   (field_mut 4 inode'/742))
                                 (setfield_ptr 5 (field_mut 4 inode'/742)
                                   inode/740)
                                 (setfield_ptr 4 inode'/742 inode/740)))))))
                   remove/743 =
                     (function inode/745 : int
                       (seq
                         (setfield_imm 0 cardinal/737
                           (- (field_int 0 cardinal/737) 1))
                         (if (== (field_mut 5 inode/745) inode/745)
                           (apply
                             (field_imm 2 (field_imm 8 (global MenhirLib!)))
                             a/723 (field_int 6 inode/745) 0)
                           (seq
                             (apply
                               (field_imm 2
                                 (field_imm 8 (global MenhirLib!)))
                               a/723 (field_int 6 inode/745)
                               (makeblock 0 (field_mut 5 inode/745)))
                             (setfield_ptr 4 (field_mut 5 inode/745)
                               (field_mut 4 inode/745))
                             (setfield_ptr 5 (field_mut 4 inode/745)
                               (field_mut 5 inode/745))
                             (setfield_ptr 5 inode/745 inode/745)
                             (setfield_ptr 4 inode/745 inode/745)))
                         (setfield_imm 6 inode/745 -1))))
                  (letrec
                    (get/746
                       (function param/748[int]
                         (if (== (field_int 0 cardinal/737) 0) 0
                           (apply get_nonempty/747 0)))
                      get_nonempty/747
                        (function param/751[int]
                          (let
                            (result/750 =
                               (apply
                                 (field_imm 1
                                   (field_imm 8 (global MenhirLib!)))
                                 a/723 (field_int 0 best/736)))
                            (if (isint result/750)
                              (seq
                                (setfield_imm 0 best/736
                                  (+ (field_int 0 best/736) 1))
                                (apply get_nonempty/747 0))
                              (let (inode/749 =a (field_imm 0 result/750))
                                (seq (apply remove/743 inode/749) result/750))))))
                    (let
                      (add_or_decrease/752 =
                         (function inode/754 priority/755[int] : int
                           (seq
                             (if (>= (field_int 6 inode/754) 0)
                               (apply remove/743 inode/754) 0)
                             (apply add/738 inode/754 priority/755))))
                      (makeblock 0 add/738 add_or_decrease/752 get/746))))
              estimate/760 =
                (function node/762 : int
                  (let (e/763 =[int] (apply (field_imm 4 G/492) node/762))
                    (seq
                      (if (<= 0 e/763) 0
                        (raise
                          (makeblock 0 (global Assert_failure/28!)
                            [0: "src/astar.ml" 232 4])))
                      e/763)))
              *match*/1832 =
                (apply (field_imm 2 G/492)
                  (function node/764 : int
                    (letrec
                      (inode/765
                         (makemutable 0 (*,int,int,*,*,*,int) node/764 0
                           (apply estimate/760 node/764)
                           (makeblock 1 node/764) inode/765 inode/765 -1))
                      (seq (apply (field_imm 0 M/704) node/764 inode/765)
                        (apply (field_imm 0 P/759) inode/765
                          (field_int 2 inode/765))))))
              distance/766 =
                (function node/768 : int
                  (try (field_int 1 (apply (field_imm 1 M/704) node/768))
                   with exn/1827
                    (catch
                      (if (== exn/1827 (field_imm 7 (global Stdlib!)))
                        (field_imm 18 (global Stdlib!)) (exit 1))
                     with (1) (reraise exn/1827))))
              path/769 =
                (function node/771
                  (field_mut 3 (apply (field_imm 1 M/704) node/771))))
             (letrec
               (search/772
                  (function f/773
                    (let (*match*/1830 = (apply (field_imm 2 P/759) 0))
                      (if (isint *match*/1830)
                        (makeblock 0 distance/766 path/769)
                        (let
                          (inode/774 =a (field_imm 0 *match*/1830)
                           node/775 = (field_imm 0 inode/774))
                          (seq
                            (apply f/773
                              (makeblock 0 node/775 (field_mut 3 inode/774)))
                            (apply (field_imm 3 G/492) node/775
                              (function label/776 edge_cost/777[int] son/778
                                : int
                                (seq
                                  (if (<= 0 edge_cost/777) 0
                                    (raise
                                      (makeblock 0
                                        (global Assert_failure/28!)
                                        [0: "src/astar.ml" 278 10])))
                                  (let
                                    (new_cost/779 =[int]
                                       (+ (field_int 1 inode/774)
                                         edge_cost/777))
                                    (seq
                                      (if (<= 0 new_cost/779) 0
                                        (raise
                                          (makeblock 0
                                            (global Assert_failure/28!)
                                            [0: "src/astar.ml" 283 10])))
                                      (try
                                        (let
                                          (ison/780 =
                                             (apply (field_imm 1 M/704)
                                               son/778))
                                          (if
                                            (< new_cost/779
                                              (field_int 1 ison/780))
                                            (let
                                              (new_fhat/781 =[int]
                                                 (+ new_cost/779
                                                   (field_int 2 ison/780)))
                                              (seq
                                                (if (<= 0 new_fhat/781) 0
                                                  (raise
                                                    (makeblock 0
                                                      (global Assert_failure/28!)
                                                      [0:
                                                       "src/astar.ml" 296 14])))
                                                (apply (field_imm 1 P/759)
                                                  ison/780 new_fhat/781)
                                                (setfield_imm 1 ison/780
                                                  new_cost/779)
                                                (setfield_ptr 3 ison/780
                                                  (makeblock 0 label/776
                                                    (field_mut 3 inode/774)))))
                                            0))
                                       with exn/1828
                                        (catch
                                          (if
                                            (== exn/1828
                                              (field_imm 7 (global Stdlib!)))
                                            (letrec
                                              (ison/782
                                                 (makemutable 0 (*,int,int,*,*,*,int)
                                                   son/778 new_cost/779
                                                   (apply estimate/760
                                                     son/778)
                                                   (makeblock 0 label/776
                                                     (field_mut 3 inode/774))
                                                   ison/782 ison/782 -1))
                                              (seq
                                                (apply (field_imm 0 M/704)
                                                  son/778 ison/782)
                                                (let
                                                  (fhat/783 =[int]
                                                     (+ new_cost/779
                                                       (field_int 2 ison/782)))
                                                  (seq
                                                    (if (<= 0 fhat/783) 0
                                                      (raise
                                                        (makeblock 0
                                                          (global Assert_failure/28!)
                                                          [0:
                                                           "src/astar.ml" 318
                                                           12])))
                                                    (apply
                                                      (field_imm 0 P/759)
                                                      ison/782 fhat/783)))))
                                            (exit 2))
                                         with (2) (reraise exn/1828))))))))
                            (apply search/772 f/773)))))))
               (makeblock 0 follow/498 reverse/504 M/704 P/759 estimate/760
                 distance/766 path/769 search/772)))))))
  (seq
    (setfield_ptr(root-init) 0 (global Dune__exe__Astar!)
      (function funarg/1834 is_a_functor stub
        (let (let/1835 = (apply Make/784 funarg/1834))
          (makeblock 0 (field_mut 1 let/1835) (field_mut 7 let/1835)))))
    0))
(let
  (Make/784 =
     (function G/1833 is_a_functor
       (letrec
         (follow/498
            (function labels/499 path/500
              (switch* path/500
               case tag 0:
                (apply follow/498
                  (makeblock 0 (field_imm 0 path/500) labels/499)
                  (field_imm 1 path/500))
               case tag 1: (makeblock 0 (field_imm 0 path/500) labels/499))))
         (let
           (reverse/504 = (function path/506 (apply follow/498 0 path/506))
            M/704 =
              (let
                (H/693 =
                   (apply
                     (let
                       (let/1824 = (field_imm 25 (global Stdlib__Hashtbl!)))
                       (field_imm 25 (global Stdlib__Hashtbl!)))
                     (makeblock 0 (field_mut 0 G/1833) (field_mut 1 G/1833)))
                 t/694 = (apply (field_imm 0 H/693) 100003)
                 add/695 =
                   (function node/697 inode/698 : int
                     (apply (field_imm 4 H/693) t/694 node/697 inode/698))
                 get/699 =
                   (function node/701
                     (apply (field_imm 6 H/693) t/694 node/701)))
                (makeblock 0 add/695 get/699))
            P/759 =
              (let
                (a/723 =
                   (apply (field_imm 0 (field_imm 8 (global MenhirLib!))) 0)
                 best/736 = (makemutable 0 (int) 0)
                 cardinal/737 = (makemutable 0 (int) 0)
                 add/738 =
                   (function inode/740 priority/741[int] : int
                     (seq
                       (if (<= 0 priority/741) 0
                         (raise
                           (makeblock 0 (global Assert_failure/28!)
                             [0: "src/astar.ml" 171 6])))
                       (setfield_imm 0 cardinal/737
                         (+ (field_int 0 cardinal/737) 1))
                       (setfield_imm 6 inode/740 priority/741)
                       (let
                         (*match*/1825 =
                            (apply
                              (field_imm 1 (field_imm 8 (global MenhirLib!)))
                              a/723 priority/741))
                         (if (isint *match*/1825)
                           (seq
                             (apply
                               (field_imm 2
                                 (field_imm 8 (global MenhirLib!)))
                               a/723 priority/741 (makeblock 0 inode/740))
                             (if (<= (field_int 0 best/736) priority/741) 0
                               (raise
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "src/astar.ml" 179 10]))))
                           (let (inode'/742 =a (field_imm 0 *match*/1825))
                             (seq (setfield_ptr 5 inode/740 inode'/742)
                               (setfield_ptr 4 inode/740
                                 (field_mut 4 inode'/742))
                               (setfield_ptr 5 (field_mut 4 inode'/742)
                                 inode/740)
                               (setfield_ptr 4 inode'/742 inode/740)))))))
                 remove/743 =
                   (function inode/745 : int
                     (seq
                       (setfield_imm 0 cardinal/737
                         (- (field_int 0 cardinal/737) 1))
                       (if (== (field_mut 5 inode/745) inode/745)
                         (apply
                           (field_imm 2 (field_imm 8 (global MenhirLib!)))
                           a/723 (field_int 6 inode/745) 0)
                         (seq
                           (apply
                             (field_imm 2 (field_imm 8 (global MenhirLib!)))
                             a/723 (field_int 6 inode/745)
                             (makeblock 0 (field_mut 5 inode/745)))
                           (setfield_ptr 4 (field_mut 5 inode/745)
                             (field_mut 4 inode/745))
                           (setfield_ptr 5 (field_mut 4 inode/745)
                             (field_mut 5 inode/745))
                           (setfield_ptr 5 inode/745 inode/745)
                           (setfield_ptr 4 inode/745 inode/745)))
                       (setfield_imm 6 inode/745 -1))))
                (letrec
                  (get/746
                     (function param/748[int]
                       (if (== (field_int 0 cardinal/737) 0) 0
                         (apply get_nonempty/747 0)))
                    get_nonempty/747
                      (function param/751[int]
                        (let
                          (result/750 =
                             (apply
                               (field_imm 1
                                 (field_imm 8 (global MenhirLib!)))
                               a/723 (field_int 0 best/736)))
                          (if (isint result/750)
                            (seq
                              (setfield_imm 0 best/736
                                (+ (field_int 0 best/736) 1))
                              (apply get_nonempty/747 0))
                            (seq (apply remove/743 (field_imm 0 result/750))
                              result/750)))))
                  (let
                    (add_or_decrease/752 =
                       (function inode/754 priority/755[int] : int
                         (seq
                           (if (>= (field_int 6 inode/754) 0)
                             (apply remove/743 inode/754) 0)
                           (apply add/738 inode/754 priority/755))))
                    (makeblock 0 add/738 add_or_decrease/752 get/746))))
            estimate/760 =
              (function node/762 : int
                (let (e/763 =[int] (apply (field_imm 4 G/1833) node/762))
                  (seq
                    (if (<= 0 e/763) 0
                      (raise
                        (makeblock 0 (global Assert_failure/28!)
                          [0: "src/astar.ml" 232 4])))
                    e/763)))
            *match*/1832 =
              (apply (field_imm 2 G/1833)
                (function node/764 : int
                  (letrec
                    (inode/765
                       (makemutable 0 (*,int,int,*,*,*,int) node/764 0
                         (apply estimate/760 node/764) (makeblock 1 node/764)
                         inode/765 inode/765 -1))
                    (seq (apply (field_imm 0 M/704) node/764 inode/765)
                      (apply (field_imm 0 P/759) inode/765
                        (field_int 2 inode/765))))))
            distance/766 =
              (function node/768 : int
                (try (field_int 1 (apply (field_imm 1 M/704) node/768))
                 with exn/1827
                  (if (== exn/1827 (field_imm 7 (global Stdlib!)))
                    (field_imm 18 (global Stdlib!)) (reraise exn/1827))))
            path/769 =
              (function node/771
                (field_mut 3 (apply (field_imm 1 M/704) node/771))))
           (letrec
             (search/772
                (function f/773
                  (let (*match*/1830 = (apply (field_imm 2 P/759) 0))
                    (if (isint *match*/1830)
                      (makeblock 0 distance/766 path/769)
                      (let
                        (inode/774 =a (field_imm 0 *match*/1830)
                         node/775 = (field_imm 0 inode/774))
                        (seq
                          (apply f/773
                            (makeblock 0 node/775 (field_mut 3 inode/774)))
                          (apply (field_imm 3 G/1833) node/775
                            (function label/776 edge_cost/777[int] son/778
                              : int
                              (seq
                                (if (<= 0 edge_cost/777) 0
                                  (raise
                                    (makeblock 0 (global Assert_failure/28!)
                                      [0: "src/astar.ml" 278 10])))
                                (let
                                  (new_cost/779 =[int]
                                     (+ (field_int 1 inode/774)
                                       edge_cost/777))
                                  (seq
                                    (if (<= 0 new_cost/779) 0
                                      (raise
                                        (makeblock 0
                                          (global Assert_failure/28!)
                                          [0: "src/astar.ml" 283 10])))
                                    (try
                                      (let
                                        (ison/780 =
                                           (apply (field_imm 1 M/704)
                                             son/778))
                                        (if
                                          (< new_cost/779
                                            (field_int 1 ison/780))
                                          (let
                                            (new_fhat/781 =[int]
                                               (+ new_cost/779
                                                 (field_int 2 ison/780)))
                                            (seq
                                              (if (<= 0 new_fhat/781) 0
                                                (raise
                                                  (makeblock 0
                                                    (global Assert_failure/28!)
                                                    [0:
                                                     "src/astar.ml" 296 14])))
                                              (apply (field_imm 1 P/759)
                                                ison/780 new_fhat/781)
                                              (setfield_imm 1 ison/780
                                                new_cost/779)
                                              (setfield_ptr 3 ison/780
                                                (makeblock 0 label/776
                                                  (field_mut 3 inode/774)))))
                                          0))
                                     with exn/1828
                                      (if
                                        (== exn/1828
                                          (field_imm 7 (global Stdlib!)))
                                        (letrec
                                          (ison/782
                                             (makemutable 0 (*,int,int,*,*,*,int)
                                               son/778 new_cost/779
                                               (apply estimate/760 son/778)
                                               (makeblock 0 label/776
                                                 (field_mut 3 inode/774))
                                               ison/782 ison/782 -1))
                                          (seq
                                            (apply (field_imm 0 M/704)
                                              son/778 ison/782)
                                            (let
                                              (fhat/783 =[int]
                                                 (+ new_cost/779
                                                   (field_int 2 ison/782)))
                                              (seq
                                                (if (<= 0 fhat/783) 0
                                                  (raise
                                                    (makeblock 0
                                                      (global Assert_failure/28!)
                                                      [0:
                                                       "src/astar.ml" 318 12])))
                                                (apply (field_imm 0 P/759)
                                                  ison/782 fhat/783)))))
                                        (reraise exn/1828))))))))
                          (apply search/772 f/773)))))))
             (makeblock 0 follow/498 reverse/504 M/704 P/759 estimate/760
               distance/766 path/769 search/772))))))
  (seq
    (setfield_ptr(root-init) 0 (global Dune__exe__Astar!)
      (function funarg/1834 is_a_functor stub
        (let (let/1835 = (apply Make/784 funarg/1834))
          (makeblock 0 (field_mut 1 let/1835) (field_mut 7 let/1835)))))
    0))
