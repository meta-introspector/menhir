[
  structure_item (src/RandomSentenceGenerator.ml[14,1013+0]..[14,1013+12])
    Pstr_open Fresh
    module_expr (src/RandomSentenceGenerator.ml[14,1013+5]..[14,1013+12])
      Pmod_ident "Grammar" (src/RandomSentenceGenerator.ml[14,1013+5]..[14,1013+12])
  structure_item (src/RandomSentenceGenerator.ml[20,1141+0]..[24,1246+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[20,1141+4]..[20,1141+10])
          Ppat_var "choose" (src/RandomSentenceGenerator.ml[20,1141+4]..[20,1141+10])
        expression (src/RandomSentenceGenerator.ml[20,1141+11]..[24,1246+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/RandomSentenceGenerator.ml[20,1141+11]..[20,1141+25])
            Ppat_constraint
            pattern (src/RandomSentenceGenerator.ml[20,1141+12]..[20,1141+14])
              Ppat_var "xs" (src/RandomSentenceGenerator.ml[20,1141+12]..[20,1141+14])
            core_type (src/RandomSentenceGenerator.ml[20,1141+17]..[20,1141+24])
              Ptyp_constr "list" (src/RandomSentenceGenerator.ml[20,1141+20]..[20,1141+24])
              [
                core_type (src/RandomSentenceGenerator.ml[20,1141+17]..[20,1141+19])
                  Ptyp_var a
              ]
          expression (src/RandomSentenceGenerator.ml[20,1141+26]..[24,1246+15])
            Pexp_constraint
            expression (src/RandomSentenceGenerator.ml[21,1174+2]..[24,1246+15])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/RandomSentenceGenerator.ml[21,1174+6]..[21,1174+7])
                    Ppat_var "n" (src/RandomSentenceGenerator.ml[21,1174+6]..[21,1174+7])
                  expression (src/RandomSentenceGenerator.ml[21,1174+10]..[21,1174+24])
                    Pexp_apply
                    expression (src/RandomSentenceGenerator.ml[21,1174+10]..[21,1174+21])
                      Pexp_ident "List.length" (src/RandomSentenceGenerator.ml[21,1174+10]..[21,1174+21])
                    [
                      <arg>
                      Nolabel
                        expression (src/RandomSentenceGenerator.ml[21,1174+22]..[21,1174+24])
                          Pexp_ident "xs" (src/RandomSentenceGenerator.ml[21,1174+22]..[21,1174+24])
                    ]
              ]
              expression (src/RandomSentenceGenerator.ml[22,1202+2]..[24,1246+15])
                Pexp_sequence
                expression (src/RandomSentenceGenerator.ml[22,1202+2]..[22,1202+16])
                  Pexp_assert
                  expression (src/RandomSentenceGenerator.ml[22,1202+9]..[22,1202+16])
                    Pexp_apply
                    expression (src/RandomSentenceGenerator.ml[22,1202+12]..[22,1202+13])
                      Pexp_ident ">" (src/RandomSentenceGenerator.ml[22,1202+12]..[22,1202+13])
                    [
                      <arg>
                      Nolabel
                        expression (src/RandomSentenceGenerator.ml[22,1202+10]..[22,1202+11])
                          Pexp_ident "n" (src/RandomSentenceGenerator.ml[22,1202+10]..[22,1202+11])
                      <arg>
                      Nolabel
                        expression (src/RandomSentenceGenerator.ml[22,1202+14]..[22,1202+15])
                          Pexp_constant PConst_int (0,None)
                    ]
                expression (src/RandomSentenceGenerator.ml[23,1220+2]..[24,1246+15])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/RandomSentenceGenerator.ml[23,1220+6]..[23,1220+7])
                        Ppat_var "i" (src/RandomSentenceGenerator.ml[23,1220+6]..[23,1220+7])
                      expression (src/RandomSentenceGenerator.ml[23,1220+10]..[23,1220+22])
                        Pexp_apply
                        expression (src/RandomSentenceGenerator.ml[23,1220+10]..[23,1220+20])
                          Pexp_ident "Random.int" (src/RandomSentenceGenerator.ml[23,1220+10]..[23,1220+20])
                        [
                          <arg>
                          Nolabel
                            expression (src/RandomSentenceGenerator.ml[23,1220+21]..[23,1220+22])
                              Pexp_ident "n" (src/RandomSentenceGenerator.ml[23,1220+21]..[23,1220+22])
                        ]
                  ]
                  expression (src/RandomSentenceGenerator.ml[24,1246+2]..[24,1246+15])
                    Pexp_apply
                    expression (src/RandomSentenceGenerator.ml[24,1246+2]..[24,1246+10])
                      Pexp_ident "List.nth" (src/RandomSentenceGenerator.ml[24,1246+2]..[24,1246+10])
                    [
                      <arg>
                      Nolabel
                        expression (src/RandomSentenceGenerator.ml[24,1246+11]..[24,1246+13])
                          Pexp_ident "xs" (src/RandomSentenceGenerator.ml[24,1246+11]..[24,1246+13])
                      <arg>
                      Nolabel
                        expression (src/RandomSentenceGenerator.ml[24,1246+14]..[24,1246+15])
                          Pexp_ident "i" (src/RandomSentenceGenerator.ml[24,1246+14]..[24,1246+15])
                    ]
            core_type (src/RandomSentenceGenerator.ml[20,1141+28]..[20,1141+30])
              Ptyp_var a
    ]
  structure_item (src/RandomSentenceGenerator.ml[28,1314+0]..[30,1351+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[28,1314+4]..[28,1314+8])
          Ppat_var "pick" (src/RandomSentenceGenerator.ml[28,1314+4]..[28,1314+8])
        expression (src/RandomSentenceGenerator.ml[28,1314+9]..[30,1351+28]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/RandomSentenceGenerator.ml[28,1314+9]..[28,1314+15])
            Ppat_tuple
            [
              pattern (src/RandomSentenceGenerator.ml[28,1314+10]..[28,1314+11])
                Ppat_var "i" (src/RandomSentenceGenerator.ml[28,1314+10]..[28,1314+11])
              pattern (src/RandomSentenceGenerator.ml[28,1314+13]..[28,1314+14])
                Ppat_var "j" (src/RandomSentenceGenerator.ml[28,1314+13]..[28,1314+14])
            ]
          expression (src/RandomSentenceGenerator.ml[29,1332+2]..[30,1351+28])
            Pexp_sequence
            expression (src/RandomSentenceGenerator.ml[29,1332+2]..[29,1332+17])
              Pexp_assert
              expression (src/RandomSentenceGenerator.ml[29,1332+9]..[29,1332+17])
                Pexp_apply
                expression (src/RandomSentenceGenerator.ml[29,1332+12]..[29,1332+14])
                  Pexp_ident "<=" (src/RandomSentenceGenerator.ml[29,1332+12]..[29,1332+14])
                [
                  <arg>
                  Nolabel
                    expression (src/RandomSentenceGenerator.ml[29,1332+10]..[29,1332+11])
                      Pexp_ident "i" (src/RandomSentenceGenerator.ml[29,1332+10]..[29,1332+11])
                  <arg>
                  Nolabel
                    expression (src/RandomSentenceGenerator.ml[29,1332+15]..[29,1332+16])
                      Pexp_ident "j" (src/RandomSentenceGenerator.ml[29,1332+15]..[29,1332+16])
                ]
            expression (src/RandomSentenceGenerator.ml[30,1351+2]..[30,1351+28])
              Pexp_apply
              expression (src/RandomSentenceGenerator.ml[30,1351+4]..[30,1351+5])
                Pexp_ident "+" (src/RandomSentenceGenerator.ml[30,1351+4]..[30,1351+5])
              [
                <arg>
                Nolabel
                  expression (src/RandomSentenceGenerator.ml[30,1351+2]..[30,1351+3])
                    Pexp_ident "i" (src/RandomSentenceGenerator.ml[30,1351+2]..[30,1351+3])
                <arg>
                Nolabel
                  expression (src/RandomSentenceGenerator.ml[30,1351+6]..[30,1351+28])
                    Pexp_apply
                    expression (src/RandomSentenceGenerator.ml[30,1351+6]..[30,1351+16])
                      Pexp_ident "Random.int" (src/RandomSentenceGenerator.ml[30,1351+6]..[30,1351+16])
                    [
                      <arg>
                      Nolabel
                        expression (src/RandomSentenceGenerator.ml[30,1351+17]..[30,1351+28])
                          Pexp_apply
                          expression (src/RandomSentenceGenerator.ml[30,1351+24]..[30,1351+25])
                            Pexp_ident "+" (src/RandomSentenceGenerator.ml[30,1351+24]..[30,1351+25])
                          [
                            <arg>
                            Nolabel
                              expression (src/RandomSentenceGenerator.ml[30,1351+18]..[30,1351+23])
                                Pexp_apply
                                expression (src/RandomSentenceGenerator.ml[30,1351+20]..[30,1351+21])
                                  Pexp_ident "-" (src/RandomSentenceGenerator.ml[30,1351+20]..[30,1351+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/RandomSentenceGenerator.ml[30,1351+18]..[30,1351+19])
                                      Pexp_ident "j" (src/RandomSentenceGenerator.ml[30,1351+18]..[30,1351+19])
                                  <arg>
                                  Nolabel
                                    expression (src/RandomSentenceGenerator.ml[30,1351+22]..[30,1351+23])
                                      Pexp_ident "i" (src/RandomSentenceGenerator.ml[30,1351+22]..[30,1351+23])
                                ]
                            <arg>
                            Nolabel
                              expression (src/RandomSentenceGenerator.ml[30,1351+26]..[30,1351+27])
                                Pexp_constant PConst_int (1,None)
                          ]
                    ]
              ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[36,1512+0]..[37,1527+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[36,1512+4]..[36,1512+12])
          Ppat_var "infinity" (src/RandomSentenceGenerator.ml[36,1512+4]..[36,1512+12])
        expression (src/RandomSentenceGenerator.ml[37,1527+2]..[37,1527+9])
          Pexp_ident "max_int" (src/RandomSentenceGenerator.ml[37,1527+2]..[37,1527+9])
    ]
  structure_item (src/RandomSentenceGenerator.ml[39,1538+0]..[40,1556+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[39,1538+4]..[39,1538+11])
          Ppat_var "between" (src/RandomSentenceGenerator.ml[39,1538+4]..[39,1538+11])
        expression (src/RandomSentenceGenerator.ml[39,1538+12]..[40,1556+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/RandomSentenceGenerator.ml[39,1538+12]..[39,1538+13])
            Ppat_var "i" (src/RandomSentenceGenerator.ml[39,1538+12]..[39,1538+13])
          expression (src/RandomSentenceGenerator.ml[39,1538+14]..[40,1556+8]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/RandomSentenceGenerator.ml[39,1538+14]..[39,1538+15])
              Ppat_var "j" (src/RandomSentenceGenerator.ml[39,1538+14]..[39,1538+15])
            expression (src/RandomSentenceGenerator.ml[40,1556+2]..[40,1556+8])
              Pexp_tuple
              [
                expression (src/RandomSentenceGenerator.ml[40,1556+3]..[40,1556+4])
                  Pexp_ident "i" (src/RandomSentenceGenerator.ml[40,1556+3]..[40,1556+4])
                expression (src/RandomSentenceGenerator.ml[40,1556+6]..[40,1556+7])
                  Pexp_ident "j" (src/RandomSentenceGenerator.ml[40,1556+6]..[40,1556+7])
              ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[42,1566+0]..[43,1583+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[42,1566+4]..[42,1566+12])
          Ppat_var "at_least" (src/RandomSentenceGenerator.ml[42,1566+4]..[42,1566+12])
        expression (src/RandomSentenceGenerator.ml[42,1566+13]..[43,1583+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/RandomSentenceGenerator.ml[42,1566+13]..[42,1566+14])
            Ppat_var "i" (src/RandomSentenceGenerator.ml[42,1566+13]..[42,1566+14])
          expression (src/RandomSentenceGenerator.ml[43,1583+2]..[43,1583+20])
            Pexp_apply
            expression (src/RandomSentenceGenerator.ml[43,1583+2]..[43,1583+9])
              Pexp_ident "between" (src/RandomSentenceGenerator.ml[43,1583+2]..[43,1583+9])
            [
              <arg>
              Nolabel
                expression (src/RandomSentenceGenerator.ml[43,1583+10]..[43,1583+11])
                  Pexp_ident "i" (src/RandomSentenceGenerator.ml[43,1583+10]..[43,1583+11])
              <arg>
              Nolabel
                expression (src/RandomSentenceGenerator.ml[43,1583+12]..[43,1583+20])
                  Pexp_ident "infinity" (src/RandomSentenceGenerator.ml[43,1583+12]..[43,1583+20])
            ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[45,1605+0]..[46,1621+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[45,1605+4]..[45,1605+11])
          Ppat_var "at_most" (src/RandomSentenceGenerator.ml[45,1605+4]..[45,1605+11])
        expression (src/RandomSentenceGenerator.ml[45,1605+12]..[46,1621+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/RandomSentenceGenerator.ml[45,1605+12]..[45,1605+13])
            Ppat_var "j" (src/RandomSentenceGenerator.ml[45,1605+12]..[45,1605+13])
          expression (src/RandomSentenceGenerator.ml[46,1621+2]..[46,1621+13])
            Pexp_apply
            expression (src/RandomSentenceGenerator.ml[46,1621+2]..[46,1621+9])
              Pexp_ident "between" (src/RandomSentenceGenerator.ml[46,1621+2]..[46,1621+9])
            [
              <arg>
              Nolabel
                expression (src/RandomSentenceGenerator.ml[46,1621+10]..[46,1621+11])
                  Pexp_constant PConst_int (0,None)
              <arg>
              Nolabel
                expression (src/RandomSentenceGenerator.ml[46,1621+12]..[46,1621+13])
                  Pexp_ident "j" (src/RandomSentenceGenerator.ml[46,1621+12]..[46,1621+13])
            ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[48,1636+0]..[49,1647+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[48,1636+4]..[48,1636+8])
          Ppat_var "full" (src/RandomSentenceGenerator.ml[48,1636+4]..[48,1636+8])
        expression (src/RandomSentenceGenerator.ml[49,1647+2]..[49,1647+14])
          Pexp_tuple
          [
            expression (src/RandomSentenceGenerator.ml[49,1647+3]..[49,1647+4])
              Pexp_constant PConst_int (0,None)
            expression (src/RandomSentenceGenerator.ml[49,1647+6]..[49,1647+13])
              Pexp_ident "max_int" (src/RandomSentenceGenerator.ml[49,1647+6]..[49,1647+13])
          ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[51,1663+0]..[52,1697+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[51,1663+4]..[51,1663+13])
          Ppat_var "intersect" (src/RandomSentenceGenerator.ml[51,1663+4]..[51,1663+13])
        expression (src/RandomSentenceGenerator.ml[51,1663+14]..[52,1697+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/RandomSentenceGenerator.ml[51,1663+14]..[51,1663+22])
            Ppat_tuple
            [
              pattern (src/RandomSentenceGenerator.ml[51,1663+15]..[51,1663+17])
                Ppat_var "i1" (src/RandomSentenceGenerator.ml[51,1663+15]..[51,1663+17])
              pattern (src/RandomSentenceGenerator.ml[51,1663+19]..[51,1663+21])
                Ppat_var "j1" (src/RandomSentenceGenerator.ml[51,1663+19]..[51,1663+21])
            ]
          expression (src/RandomSentenceGenerator.ml[51,1663+23]..[52,1697+24]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/RandomSentenceGenerator.ml[51,1663+23]..[51,1663+31])
              Ppat_tuple
              [
                pattern (src/RandomSentenceGenerator.ml[51,1663+24]..[51,1663+26])
                  Ppat_var "i2" (src/RandomSentenceGenerator.ml[51,1663+24]..[51,1663+26])
                pattern (src/RandomSentenceGenerator.ml[51,1663+28]..[51,1663+30])
                  Ppat_var "j2" (src/RandomSentenceGenerator.ml[51,1663+28]..[51,1663+30])
              ]
            expression (src/RandomSentenceGenerator.ml[52,1697+2]..[52,1697+24])
              Pexp_tuple
              [
                expression (src/RandomSentenceGenerator.ml[52,1697+3]..[52,1697+12])
                  Pexp_apply
                  expression (src/RandomSentenceGenerator.ml[52,1697+3]..[52,1697+6])
                    Pexp_ident "max" (src/RandomSentenceGenerator.ml[52,1697+3]..[52,1697+6])
                  [
                    <arg>
                    Nolabel
                      expression (src/RandomSentenceGenerator.ml[52,1697+7]..[52,1697+9])
                        Pexp_ident "i1" (src/RandomSentenceGenerator.ml[52,1697+7]..[52,1697+9])
                    <arg>
                    Nolabel
                      expression (src/RandomSentenceGenerator.ml[52,1697+10]..[52,1697+12])
                        Pexp_ident "i2" (src/RandomSentenceGenerator.ml[52,1697+10]..[52,1697+12])
                  ]
                expression (src/RandomSentenceGenerator.ml[52,1697+14]..[52,1697+23])
                  Pexp_apply
                  expression (src/RandomSentenceGenerator.ml[52,1697+14]..[52,1697+17])
                    Pexp_ident "min" (src/RandomSentenceGenerator.ml[52,1697+14]..[52,1697+17])
                  [
                    <arg>
                    Nolabel
                      expression (src/RandomSentenceGenerator.ml[52,1697+18]..[52,1697+20])
                        Pexp_ident "j1" (src/RandomSentenceGenerator.ml[52,1697+18]..[52,1697+20])
                    <arg>
                    Nolabel
                      expression (src/RandomSentenceGenerator.ml[52,1697+21]..[52,1697+23])
                        Pexp_ident "j2" (src/RandomSentenceGenerator.ml[52,1697+21]..[52,1697+23])
                  ]
              ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[54,1723+0]..[55,1749+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[54,1723+4]..[54,1723+13])
          Ppat_var "intersect" (src/RandomSentenceGenerator.ml[54,1723+4]..[54,1723+13])
        expression (src/RandomSentenceGenerator.ml[54,1723+14]..[55,1749+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/RandomSentenceGenerator.ml[54,1723+14]..[54,1723+23])
            Ppat_var "intervals" (src/RandomSentenceGenerator.ml[54,1723+14]..[54,1723+23])
          expression (src/RandomSentenceGenerator.ml[55,1749+2]..[55,1749+41])
            Pexp_apply
            expression (src/RandomSentenceGenerator.ml[55,1749+2]..[55,1749+16])
              Pexp_ident "List.fold_left" (src/RandomSentenceGenerator.ml[55,1749+2]..[55,1749+16])
            [
              <arg>
              Nolabel
                expression (src/RandomSentenceGenerator.ml[55,1749+17]..[55,1749+26])
                  Pexp_ident "intersect" (src/RandomSentenceGenerator.ml[55,1749+17]..[55,1749+26])
              <arg>
              Nolabel
                expression (src/RandomSentenceGenerator.ml[55,1749+27]..[55,1749+31])
                  Pexp_ident "full" (src/RandomSentenceGenerator.ml[55,1749+27]..[55,1749+31])
              <arg>
              Nolabel
                expression (src/RandomSentenceGenerator.ml[55,1749+32]..[55,1749+41])
                  Pexp_ident "intervals" (src/RandomSentenceGenerator.ml[55,1749+32]..[55,1749+41])
            ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[57,1792+0]..[58,1814+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[57,1792+4]..[57,1792+12])
          Ppat_var "nonempty" (src/RandomSentenceGenerator.ml[57,1792+4]..[57,1792+12])
        expression (src/RandomSentenceGenerator.ml[57,1792+13]..[58,1814+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/RandomSentenceGenerator.ml[57,1792+13]..[57,1792+19])
            Ppat_tuple
            [
              pattern (src/RandomSentenceGenerator.ml[57,1792+14]..[57,1792+15])
                Ppat_var "i" (src/RandomSentenceGenerator.ml[57,1792+14]..[57,1792+15])
              pattern (src/RandomSentenceGenerator.ml[57,1792+17]..[57,1792+18])
                Ppat_var "j" (src/RandomSentenceGenerator.ml[57,1792+17]..[57,1792+18])
            ]
          expression (src/RandomSentenceGenerator.ml[58,1814+2]..[58,1814+8])
            Pexp_apply
            expression (src/RandomSentenceGenerator.ml[58,1814+4]..[58,1814+6])
              Pexp_ident "<=" (src/RandomSentenceGenerator.ml[58,1814+4]..[58,1814+6])
            [
              <arg>
              Nolabel
                expression (src/RandomSentenceGenerator.ml[58,1814+2]..[58,1814+3])
                  Pexp_ident "i" (src/RandomSentenceGenerator.ml[58,1814+2]..[58,1814+3])
              <arg>
              Nolabel
                expression (src/RandomSentenceGenerator.ml[58,1814+7]..[58,1814+8])
                  Pexp_ident "j" (src/RandomSentenceGenerator.ml[58,1814+7]..[58,1814+8])
            ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[64,1946+0]..[65,1959+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[64,1946+4]..[64,1946+10])
          Ppat_var "buffer" (src/RandomSentenceGenerator.ml[64,1946+4]..[64,1946+10])
        expression (src/RandomSentenceGenerator.ml[65,1959+2]..[65,1959+8])
          Pexp_apply
          expression (src/RandomSentenceGenerator.ml[65,1959+2]..[65,1959+5])
            Pexp_ident "ref" (src/RandomSentenceGenerator.ml[65,1959+2]..[65,1959+5])
          [
            <arg>
            Nolabel
              expression (src/RandomSentenceGenerator.ml[65,1959+6]..[65,1959+8])
                Pexp_construct "[]" (src/RandomSentenceGenerator.ml[65,1959+6]..[65,1959+8])
                None
          ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[67,1969+0]..[68,1984+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[67,1969+4]..[67,1969+8])
          Ppat_var "emit" (src/RandomSentenceGenerator.ml[67,1969+4]..[67,1969+8])
        expression (src/RandomSentenceGenerator.ml[67,1969+9]..[68,1984+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/RandomSentenceGenerator.ml[67,1969+9]..[67,1969+12])
            Ppat_var "tok" (src/RandomSentenceGenerator.ml[67,1969+9]..[67,1969+12])
          expression (src/RandomSentenceGenerator.ml[68,1984+2]..[68,1984+26])
            Pexp_apply
            expression (src/RandomSentenceGenerator.ml[68,1984+9]..[68,1984+11])
              Pexp_ident ":=" (src/RandomSentenceGenerator.ml[68,1984+9]..[68,1984+11])
            [
              <arg>
              Nolabel
                expression (src/RandomSentenceGenerator.ml[68,1984+2]..[68,1984+8])
                  Pexp_ident "buffer" (src/RandomSentenceGenerator.ml[68,1984+2]..[68,1984+8])
              <arg>
              Nolabel
                expression (src/RandomSentenceGenerator.ml[68,1984+12]..[68,1984+26])
                  Pexp_construct "::" (src/RandomSentenceGenerator.ml[68,1984+16]..[68,1984+18])
                  Some
                    expression (src/RandomSentenceGenerator.ml[68,1984+12]..[68,1984+26]) ghost
                      Pexp_tuple
                      [
                        expression (src/RandomSentenceGenerator.ml[68,1984+12]..[68,1984+15])
                          Pexp_ident "tok" (src/RandomSentenceGenerator.ml[68,1984+12]..[68,1984+15])
                        expression (src/RandomSentenceGenerator.ml[68,1984+19]..[68,1984+26])
                          Pexp_apply
                          expression (src/RandomSentenceGenerator.ml[68,1984+19]..[68,1984+20])
                            Pexp_ident "!" (src/RandomSentenceGenerator.ml[68,1984+19]..[68,1984+20])
                          [
                            <arg>
                            Nolabel
                              expression (src/RandomSentenceGenerator.ml[68,1984+20]..[68,1984+26])
                                Pexp_ident "buffer" (src/RandomSentenceGenerator.ml[68,1984+20]..[68,1984+26])
                          ]
                      ]
            ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[70,2012+0]..[73,2067+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[70,2012+4]..[70,2012+9])
          Ppat_var "reset" (src/RandomSentenceGenerator.ml[70,2012+4]..[70,2012+9])
        expression (src/RandomSentenceGenerator.ml[70,2012+10]..[73,2067+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/RandomSentenceGenerator.ml[70,2012+10]..[70,2012+12])
            Ppat_construct "()" (src/RandomSentenceGenerator.ml[70,2012+10]..[70,2012+12])
            None
          expression (src/RandomSentenceGenerator.ml[71,2027+2]..[73,2067+15])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/RandomSentenceGenerator.ml[71,2027+6]..[71,2027+10])
                  Ppat_var "toks" (src/RandomSentenceGenerator.ml[71,2027+6]..[71,2027+10])
                expression (src/RandomSentenceGenerator.ml[71,2027+13]..[71,2027+20])
                  Pexp_apply
                  expression (src/RandomSentenceGenerator.ml[71,2027+13]..[71,2027+14])
                    Pexp_ident "!" (src/RandomSentenceGenerator.ml[71,2027+13]..[71,2027+14])
                  [
                    <arg>
                    Nolabel
                      expression (src/RandomSentenceGenerator.ml[71,2027+14]..[71,2027+20])
                        Pexp_ident "buffer" (src/RandomSentenceGenerator.ml[71,2027+14]..[71,2027+20])
                  ]
            ]
            expression (src/RandomSentenceGenerator.ml[72,2051+2]..[73,2067+15])
              Pexp_sequence
              expression (src/RandomSentenceGenerator.ml[72,2051+2]..[72,2051+14])
                Pexp_apply
                expression (src/RandomSentenceGenerator.ml[72,2051+9]..[72,2051+11])
                  Pexp_ident ":=" (src/RandomSentenceGenerator.ml[72,2051+9]..[72,2051+11])
                [
                  <arg>
                  Nolabel
                    expression (src/RandomSentenceGenerator.ml[72,2051+2]..[72,2051+8])
                      Pexp_ident "buffer" (src/RandomSentenceGenerator.ml[72,2051+2]..[72,2051+8])
                  <arg>
                  Nolabel
                    expression (src/RandomSentenceGenerator.ml[72,2051+12]..[72,2051+14])
                      Pexp_construct "[]" (src/RandomSentenceGenerator.ml[72,2051+12]..[72,2051+14])
                      None
                ]
              expression (src/RandomSentenceGenerator.ml[73,2067+2]..[73,2067+15])
                Pexp_apply
                expression (src/RandomSentenceGenerator.ml[73,2067+2]..[73,2067+10])
                  Pexp_ident "List.rev" (src/RandomSentenceGenerator.ml[73,2067+2]..[73,2067+10])
                [
                  <arg>
                  Nolabel
                    expression (src/RandomSentenceGenerator.ml[73,2067+11]..[73,2067+15])
                      Pexp_ident "toks" (src/RandomSentenceGenerator.ml[73,2067+11]..[73,2067+15])
                ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[82,2415+0]..[173,6157+5])
    Pstr_value Rec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[82,2415+8]..[82,2415+19])
          Ppat_var "nonterminal" (src/RandomSentenceGenerator.ml[82,2415+8]..[82,2415+19])
        expression (src/RandomSentenceGenerator.ml[82,2415+20]..[116,3932+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/RandomSentenceGenerator.ml[82,2415+20]..[82,2415+22])
            Ppat_var "nt" (src/RandomSentenceGenerator.ml[82,2415+20]..[82,2415+22])
          expression (src/RandomSentenceGenerator.ml[82,2415+23]..[116,3932+38]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/RandomSentenceGenerator.ml[82,2415+23]..[82,2415+27])
              Ppat_var "goal" (src/RandomSentenceGenerator.ml[82,2415+23]..[82,2415+27])
            expression (src/RandomSentenceGenerator.ml[82,2415+28]..[116,3932+38]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/RandomSentenceGenerator.ml[82,2415+28]..[82,2415+29])
                Ppat_var "k" (src/RandomSentenceGenerator.ml[82,2415+28]..[82,2415+29])
              expression (src/RandomSentenceGenerator.ml[82,2415+30]..[116,3932+38])
                Pexp_constraint
                expression (src/RandomSentenceGenerator.ml[83,2454+2]..[116,3932+38])
                  Pexp_sequence
                  expression (src/RandomSentenceGenerator.ml[83,2454+2]..[83,2454+38])
                    Pexp_assert
                    expression (src/RandomSentenceGenerator.ml[83,2454+9]..[83,2454+38])
                      Pexp_apply
                      expression (src/RandomSentenceGenerator.ml[83,2454+30]..[83,2454+32])
                        Pexp_ident "<=" (src/RandomSentenceGenerator.ml[83,2454+30]..[83,2454+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/RandomSentenceGenerator.ml[83,2454+10]..[83,2454+29])
                            Pexp_apply
                            expression (src/RandomSentenceGenerator.ml[83,2454+10]..[83,2454+26])
                              Pexp_ident "Analysis.minimal" (src/RandomSentenceGenerator.ml[83,2454+10]..[83,2454+26])
                            [
                              <arg>
                              Nolabel
                                expression (src/RandomSentenceGenerator.ml[83,2454+27]..[83,2454+29])
                                  Pexp_ident "nt" (src/RandomSentenceGenerator.ml[83,2454+27]..[83,2454+29])
                            ]
                        <arg>
                        Nolabel
                          expression (src/RandomSentenceGenerator.ml[83,2454+33]..[83,2454+37])
                            Pexp_ident "goal" (src/RandomSentenceGenerator.ml[83,2454+33]..[83,2454+37])
                      ]
                  expression (src/RandomSentenceGenerator.ml[84,2494+2]..[116,3932+38])
                    Pexp_sequence
                    expression (src/RandomSentenceGenerator.ml[84,2494+2]..[84,2494+38])
                      Pexp_assert
                      expression (src/RandomSentenceGenerator.ml[84,2494+9]..[84,2494+38])
                        Pexp_apply
                        expression (src/RandomSentenceGenerator.ml[84,2494+15]..[84,2494+17])
                          Pexp_ident "<=" (src/RandomSentenceGenerator.ml[84,2494+15]..[84,2494+17])
                        [
                          <arg>
                          Nolabel
                            expression (src/RandomSentenceGenerator.ml[84,2494+10]..[84,2494+14])
                              Pexp_ident "goal" (src/RandomSentenceGenerator.ml[84,2494+10]..[84,2494+14])
                          <arg>
                          Nolabel
                            expression (src/RandomSentenceGenerator.ml[84,2494+18]..[84,2494+37])
                              Pexp_apply
                              expression (src/RandomSentenceGenerator.ml[84,2494+18]..[84,2494+34])
                                Pexp_ident "Analysis.maximal" (src/RandomSentenceGenerator.ml[84,2494+18]..[84,2494+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/RandomSentenceGenerator.ml[84,2494+35]..[84,2494+37])
                                    Pexp_ident "nt" (src/RandomSentenceGenerator.ml[84,2494+35]..[84,2494+37])
                              ]
                        ]
                    expression (src/RandomSentenceGenerator.ml[102,3505+2]..[116,3932+38])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/RandomSentenceGenerator.ml[102,3505+6]..[102,3505+11])
                            Ppat_var "prods" (src/RandomSentenceGenerator.ml[102,3505+6]..[102,3505+11])
                          expression (src/RandomSentenceGenerator.ml[103,3519+4]..[109,3733+8])
                            Pexp_apply
                            expression (src/RandomSentenceGenerator.ml[103,3519+4]..[103,3519+21])
                              Pexp_ident "Production.foldnt" (src/RandomSentenceGenerator.ml[103,3519+4]..[103,3519+21])
                            [
                              <arg>
                              Nolabel
                                expression (src/RandomSentenceGenerator.ml[103,3519+22]..[103,3519+24])
                                  Pexp_ident "nt" (src/RandomSentenceGenerator.ml[103,3519+22]..[103,3519+24])
                              <arg>
                              Nolabel
                                expression (src/RandomSentenceGenerator.ml[103,3519+25]..[109,3733+5])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/RandomSentenceGenerator.ml[103,3519+30]..[103,3519+34])
                                    Ppat_var "prod" (src/RandomSentenceGenerator.ml[103,3519+30]..[103,3519+34])
                                  expression (src/RandomSentenceGenerator.ml[103,3519+35]..[108,3716+16]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/RandomSentenceGenerator.ml[103,3519+35]..[103,3519+40])
                                      Ppat_var "prods" (src/RandomSentenceGenerator.ml[103,3519+35]..[103,3519+40])
                                    expression (src/RandomSentenceGenerator.ml[104,3563+6]..[108,3716+16])
                                      Pexp_ifthenelse
                                      expression (src/RandomSentenceGenerator.ml[104,3563+9]..[106,3645+45])
                                        Pexp_apply
                                        expression (src/RandomSentenceGenerator.ml[105,3599+6]..[105,3599+8])
                                          Pexp_ident "&&" (src/RandomSentenceGenerator.ml[105,3599+6]..[105,3599+8])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/RandomSentenceGenerator.ml[104,3563+9]..[104,3563+35])
                                              Pexp_apply
                                              expression (src/RandomSentenceGenerator.ml[104,3563+9]..[104,3563+30])
                                                Pexp_ident "Production.error_free" (src/RandomSentenceGenerator.ml[104,3563+9]..[104,3563+30])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/RandomSentenceGenerator.ml[104,3563+31]..[104,3563+35])
                                                    Pexp_ident "prod" (src/RandomSentenceGenerator.ml[104,3563+31]..[104,3563+35])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (src/RandomSentenceGenerator.ml[105,3599+9]..[106,3645+45])
                                              Pexp_apply
                                              expression (src/RandomSentenceGenerator.ml[106,3645+6]..[106,3645+8])
                                                Pexp_ident "&&" (src/RandomSentenceGenerator.ml[106,3645+6]..[106,3645+8])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/RandomSentenceGenerator.ml[105,3599+9]..[105,3599+45])
                                                    Pexp_apply
                                                    expression (src/RandomSentenceGenerator.ml[105,3599+38]..[105,3599+40])
                                                      Pexp_ident "<=" (src/RandomSentenceGenerator.ml[105,3599+38]..[105,3599+40])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/RandomSentenceGenerator.ml[105,3599+9]..[105,3599+37])
                                                          Pexp_apply
                                                          expression (src/RandomSentenceGenerator.ml[105,3599+9]..[105,3599+30])
                                                            Pexp_ident "Analysis.minimal_prod" (src/RandomSentenceGenerator.ml[105,3599+9]..[105,3599+30])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/RandomSentenceGenerator.ml[105,3599+31]..[105,3599+35])
                                                                Pexp_ident "prod" (src/RandomSentenceGenerator.ml[105,3599+31]..[105,3599+35])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/RandomSentenceGenerator.ml[105,3599+36]..[105,3599+37])
                                                                Pexp_constant PConst_int (0,None)
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (src/RandomSentenceGenerator.ml[105,3599+41]..[105,3599+45])
                                                          Pexp_ident "goal" (src/RandomSentenceGenerator.ml[105,3599+41]..[105,3599+45])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (src/RandomSentenceGenerator.ml[106,3645+9]..[106,3645+45])
                                                    Pexp_apply
                                                    expression (src/RandomSentenceGenerator.ml[106,3645+14]..[106,3645+16])
                                                      Pexp_ident "<=" (src/RandomSentenceGenerator.ml[106,3645+14]..[106,3645+16])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/RandomSentenceGenerator.ml[106,3645+9]..[106,3645+13])
                                                          Pexp_ident "goal" (src/RandomSentenceGenerator.ml[106,3645+9]..[106,3645+13])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/RandomSentenceGenerator.ml[106,3645+17]..[106,3645+45])
                                                          Pexp_apply
                                                          expression (src/RandomSentenceGenerator.ml[106,3645+17]..[106,3645+38])
                                                            Pexp_ident "Analysis.maximal_prod" (src/RandomSentenceGenerator.ml[106,3645+17]..[106,3645+38])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/RandomSentenceGenerator.ml[106,3645+39]..[106,3645+43])
                                                                Pexp_ident "prod" (src/RandomSentenceGenerator.ml[106,3645+39]..[106,3645+43])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/RandomSentenceGenerator.ml[106,3645+44]..[106,3645+45])
                                                                Pexp_constant PConst_int (0,None)
                                                          ]
                                                    ]
                                              ]
                                        ]
                                      expression (src/RandomSentenceGenerator.ml[107,3691+11]..[107,3691+24])
                                        Pexp_construct "::" (src/RandomSentenceGenerator.ml[107,3691+16]..[107,3691+18])
                                        Some
                                          expression (src/RandomSentenceGenerator.ml[107,3691+11]..[107,3691+24]) ghost
                                            Pexp_tuple
                                            [
                                              expression (src/RandomSentenceGenerator.ml[107,3691+11]..[107,3691+15])
                                                Pexp_ident "prod" (src/RandomSentenceGenerator.ml[107,3691+11]..[107,3691+15])
                                              expression (src/RandomSentenceGenerator.ml[107,3691+19]..[107,3691+24])
                                                Pexp_ident "prods" (src/RandomSentenceGenerator.ml[107,3691+19]..[107,3691+24])
                                            ]
                                      Some
                                        expression (src/RandomSentenceGenerator.ml[108,3716+11]..[108,3716+16])
                                          Pexp_ident "prods" (src/RandomSentenceGenerator.ml[108,3716+11]..[108,3716+16])
                              <arg>
                              Nolabel
                                expression (src/RandomSentenceGenerator.ml[109,3733+6]..[109,3733+8])
                                  Pexp_construct "[]" (src/RandomSentenceGenerator.ml[109,3733+6]..[109,3733+8])
                                  None
                            ]
                      ]
                      expression (src/RandomSentenceGenerator.ml[111,3747+2]..[116,3932+38])
                        Pexp_ifthenelse
                        expression (src/RandomSentenceGenerator.ml[111,3747+5]..[111,3747+15])
                          Pexp_apply
                          expression (src/RandomSentenceGenerator.ml[111,3747+11]..[111,3747+12])
                            Pexp_ident "=" (src/RandomSentenceGenerator.ml[111,3747+11]..[111,3747+12])
                          [
                            <arg>
                            Nolabel
                              expression (src/RandomSentenceGenerator.ml[111,3747+5]..[111,3747+10])
                                Pexp_ident "prods" (src/RandomSentenceGenerator.ml[111,3747+5]..[111,3747+10])
                            <arg>
                            Nolabel
                              expression (src/RandomSentenceGenerator.ml[111,3747+13]..[111,3747+15])
                                Pexp_construct "[]" (src/RandomSentenceGenerator.ml[111,3747+13]..[111,3747+15])
                                None
                          ]
                        expression (src/RandomSentenceGenerator.ml[113,3830+4]..[113,3830+42])
                          Pexp_apply
                          expression (src/RandomSentenceGenerator.ml[113,3830+4]..[113,3830+15])
                            Pexp_ident "nonterminal" (src/RandomSentenceGenerator.ml[113,3830+4]..[113,3830+15])
                          [
                            <arg>
                            Nolabel
                              expression (src/RandomSentenceGenerator.ml[113,3830+16]..[113,3830+18])
                                Pexp_ident "nt" (src/RandomSentenceGenerator.ml[113,3830+16]..[113,3830+18])
                            <arg>
                            Nolabel
                              expression (src/RandomSentenceGenerator.ml[113,3830+19]..[113,3830+40])
                                Pexp_apply
                                expression (src/RandomSentenceGenerator.ml[113,3830+20]..[113,3830+36])
                                  Pexp_ident "Analysis.minimal" (src/RandomSentenceGenerator.ml[113,3830+20]..[113,3830+36])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/RandomSentenceGenerator.ml[113,3830+37]..[113,3830+39])
                                      Pexp_ident "nt" (src/RandomSentenceGenerator.ml[113,3830+37]..[113,3830+39])
                                ]
                            <arg>
                            Nolabel
                              expression (src/RandomSentenceGenerator.ml[113,3830+41]..[113,3830+42])
                                Pexp_ident "k" (src/RandomSentenceGenerator.ml[113,3830+41]..[113,3830+42])
                          ]
                        Some
                          expression (src/RandomSentenceGenerator.ml[116,3932+4]..[116,3932+38])
                            Pexp_apply
                            expression (src/RandomSentenceGenerator.ml[116,3932+4]..[116,3932+14])
                              Pexp_ident "production" (src/RandomSentenceGenerator.ml[116,3932+4]..[116,3932+14])
                            [
                              <arg>
                              Nolabel
                                expression (src/RandomSentenceGenerator.ml[116,3932+15]..[116,3932+29])
                                  Pexp_apply
                                  expression (src/RandomSentenceGenerator.ml[116,3932+16]..[116,3932+22])
                                    Pexp_ident "choose" (src/RandomSentenceGenerator.ml[116,3932+16]..[116,3932+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/RandomSentenceGenerator.ml[116,3932+23]..[116,3932+28])
                                        Pexp_ident "prods" (src/RandomSentenceGenerator.ml[116,3932+23]..[116,3932+28])
                                  ]
                              <arg>
                              Nolabel
                                expression (src/RandomSentenceGenerator.ml[116,3932+30]..[116,3932+31])
                                  Pexp_constant PConst_int (0,None)
                              <arg>
                              Nolabel
                                expression (src/RandomSentenceGenerator.ml[116,3932+32]..[116,3932+36])
                                  Pexp_ident "goal" (src/RandomSentenceGenerator.ml[116,3932+32]..[116,3932+36])
                              <arg>
                              Nolabel
                                expression (src/RandomSentenceGenerator.ml[116,3932+37]..[116,3932+38])
                                  Pexp_ident "k" (src/RandomSentenceGenerator.ml[116,3932+37]..[116,3932+38])
                            ]
                core_type (src/RandomSentenceGenerator.ml[82,2415+32]..[82,2415+36])
                  Ptyp_constr "unit" (src/RandomSentenceGenerator.ml[82,2415+32]..[82,2415+36])
                  []
      <def>
        pattern (src/RandomSentenceGenerator.ml[122,4156+4]..[122,4156+14])
          Ppat_var "production" (src/RandomSentenceGenerator.ml[122,4156+4]..[122,4156+14])
        expression (src/RandomSentenceGenerator.ml[122,4156+15]..[173,6157+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/RandomSentenceGenerator.ml[122,4156+15]..[122,4156+19])
            Ppat_var "prod" (src/RandomSentenceGenerator.ml[122,4156+15]..[122,4156+19])
          expression (src/RandomSentenceGenerator.ml[122,4156+20]..[173,6157+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/RandomSentenceGenerator.ml[122,4156+20]..[122,4156+21])
              Ppat_var "i" (src/RandomSentenceGenerator.ml[122,4156+20]..[122,4156+21])
            expression (src/RandomSentenceGenerator.ml[122,4156+22]..[173,6157+5]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/RandomSentenceGenerator.ml[122,4156+22]..[122,4156+26])
                Ppat_var "goal" (src/RandomSentenceGenerator.ml[122,4156+22]..[122,4156+26])
              expression (src/RandomSentenceGenerator.ml[122,4156+27]..[173,6157+5]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/RandomSentenceGenerator.ml[122,4156+27]..[122,4156+28])
                  Ppat_var "k" (src/RandomSentenceGenerator.ml[122,4156+27]..[122,4156+28])
                expression (src/RandomSentenceGenerator.ml[122,4156+29]..[173,6157+5])
                  Pexp_constraint
                  expression (src/RandomSentenceGenerator.ml[123,4194+2]..[173,6157+5])
                    Pexp_sequence
                    expression (src/RandomSentenceGenerator.ml[123,4194+2]..[123,4194+47])
                      Pexp_assert
                      expression (src/RandomSentenceGenerator.ml[123,4194+9]..[123,4194+47])
                        Pexp_apply
                        expression (src/RandomSentenceGenerator.ml[123,4194+39]..[123,4194+41])
                          Pexp_ident "<=" (src/RandomSentenceGenerator.ml[123,4194+39]..[123,4194+41])
                        [
                          <arg>
                          Nolabel
                            expression (src/RandomSentenceGenerator.ml[123,4194+10]..[123,4194+38])
                              Pexp_apply
                              expression (src/RandomSentenceGenerator.ml[123,4194+10]..[123,4194+31])
                                Pexp_ident "Analysis.minimal_prod" (src/RandomSentenceGenerator.ml[123,4194+10]..[123,4194+31])
                              [
                                <arg>
                                Nolabel
                                  expression (src/RandomSentenceGenerator.ml[123,4194+32]..[123,4194+36])
                                    Pexp_ident "prod" (src/RandomSentenceGenerator.ml[123,4194+32]..[123,4194+36])
                                <arg>
                                Nolabel
                                  expression (src/RandomSentenceGenerator.ml[123,4194+37]..[123,4194+38])
                                    Pexp_ident "i" (src/RandomSentenceGenerator.ml[123,4194+37]..[123,4194+38])
                              ]
                          <arg>
                          Nolabel
                            expression (src/RandomSentenceGenerator.ml[123,4194+42]..[123,4194+46])
                              Pexp_ident "goal" (src/RandomSentenceGenerator.ml[123,4194+42]..[123,4194+46])
                        ]
                    expression (src/RandomSentenceGenerator.ml[124,4243+2]..[173,6157+5])
                      Pexp_sequence
                      expression (src/RandomSentenceGenerator.ml[124,4243+2]..[124,4243+47])
                        Pexp_assert
                        expression (src/RandomSentenceGenerator.ml[124,4243+9]..[124,4243+47])
                          Pexp_apply
                          expression (src/RandomSentenceGenerator.ml[124,4243+15]..[124,4243+17])
                            Pexp_ident "<=" (src/RandomSentenceGenerator.ml[124,4243+15]..[124,4243+17])
                          [
                            <arg>
                            Nolabel
                              expression (src/RandomSentenceGenerator.ml[124,4243+10]..[124,4243+14])
                                Pexp_ident "goal" (src/RandomSentenceGenerator.ml[124,4243+10]..[124,4243+14])
                            <arg>
                            Nolabel
                              expression (src/RandomSentenceGenerator.ml[124,4243+18]..[124,4243+46])
                                Pexp_apply
                                expression (src/RandomSentenceGenerator.ml[124,4243+18]..[124,4243+39])
                                  Pexp_ident "Analysis.maximal_prod" (src/RandomSentenceGenerator.ml[124,4243+18]..[124,4243+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/RandomSentenceGenerator.ml[124,4243+40]..[124,4243+44])
                                      Pexp_ident "prod" (src/RandomSentenceGenerator.ml[124,4243+40]..[124,4243+44])
                                  <arg>
                                  Nolabel
                                    expression (src/RandomSentenceGenerator.ml[124,4243+45]..[124,4243+46])
                                      Pexp_ident "i" (src/RandomSentenceGenerator.ml[124,4243+45]..[124,4243+46])
                                ]
                          ]
                      expression (src/RandomSentenceGenerator.ml[125,4292+2]..[173,6157+5])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/RandomSentenceGenerator.ml[125,4292+6]..[125,4292+7])
                              Ppat_var "n" (src/RandomSentenceGenerator.ml[125,4292+6]..[125,4292+7])
                            expression (src/RandomSentenceGenerator.ml[125,4292+10]..[125,4292+32])
                              Pexp_apply
                              expression (src/RandomSentenceGenerator.ml[125,4292+10]..[125,4292+27])
                                Pexp_ident "Production.length" (src/RandomSentenceGenerator.ml[125,4292+10]..[125,4292+27])
                              [
                                <arg>
                                Nolabel
                                  expression (src/RandomSentenceGenerator.ml[125,4292+28]..[125,4292+32])
                                    Pexp_ident "prod" (src/RandomSentenceGenerator.ml[125,4292+28]..[125,4292+32])
                              ]
                        ]
                        expression (src/RandomSentenceGenerator.ml[126,4328+2]..[173,6157+5])
                          Pexp_sequence
                          expression (src/RandomSentenceGenerator.ml[126,4328+2]..[126,4328+27])
                            Pexp_assert
                            expression (src/RandomSentenceGenerator.ml[126,4328+9]..[126,4328+27])
                              Pexp_apply
                              expression (src/RandomSentenceGenerator.ml[126,4328+17]..[126,4328+19])
                                Pexp_ident "&&" (src/RandomSentenceGenerator.ml[126,4328+17]..[126,4328+19])
                              [
                                <arg>
                                Nolabel
                                  expression (src/RandomSentenceGenerator.ml[126,4328+10]..[126,4328+16])
                                    Pexp_apply
                                    expression (src/RandomSentenceGenerator.ml[126,4328+12]..[126,4328+14])
                                      Pexp_ident "<=" (src/RandomSentenceGenerator.ml[126,4328+12]..[126,4328+14])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/RandomSentenceGenerator.ml[126,4328+10]..[126,4328+11])
                                          Pexp_constant PConst_int (0,None)
                                      <arg>
                                      Nolabel
                                        expression (src/RandomSentenceGenerator.ml[126,4328+15]..[126,4328+16])
                                          Pexp_ident "i" (src/RandomSentenceGenerator.ml[126,4328+15]..[126,4328+16])
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/RandomSentenceGenerator.ml[126,4328+20]..[126,4328+26])
                                    Pexp_apply
                                    expression (src/RandomSentenceGenerator.ml[126,4328+22]..[126,4328+24])
                                      Pexp_ident "<=" (src/RandomSentenceGenerator.ml[126,4328+22]..[126,4328+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/RandomSentenceGenerator.ml[126,4328+20]..[126,4328+21])
                                          Pexp_ident "i" (src/RandomSentenceGenerator.ml[126,4328+20]..[126,4328+21])
                                      <arg>
                                      Nolabel
                                        expression (src/RandomSentenceGenerator.ml[126,4328+25]..[126,4328+26])
                                          Pexp_ident "n" (src/RandomSentenceGenerator.ml[126,4328+25]..[126,4328+26])
                                    ]
                              ]
                          expression (src/RandomSentenceGenerator.ml[127,4357+2]..[173,6157+5])
                            Pexp_ifthenelse
                            expression (src/RandomSentenceGenerator.ml[127,4357+5]..[127,4357+10])
                              Pexp_apply
                              expression (src/RandomSentenceGenerator.ml[127,4357+7]..[127,4357+8])
                                Pexp_ident "=" (src/RandomSentenceGenerator.ml[127,4357+7]..[127,4357+8])
                              [
                                <arg>
                                Nolabel
                                  expression (src/RandomSentenceGenerator.ml[127,4357+5]..[127,4357+6])
                                    Pexp_ident "i" (src/RandomSentenceGenerator.ml[127,4357+5]..[127,4357+6])
                                <arg>
                                Nolabel
                                  expression (src/RandomSentenceGenerator.ml[127,4357+9]..[127,4357+10])
                                    Pexp_ident "n" (src/RandomSentenceGenerator.ml[127,4357+9]..[127,4357+10])
                              ]
                            expression (src/RandomSentenceGenerator.ml[127,4357+16]..[130,4410+5])
                              Pexp_sequence
                              expression (src/RandomSentenceGenerator.ml[128,4379+4]..[128,4379+21])
                                Pexp_assert
                                expression (src/RandomSentenceGenerator.ml[128,4379+11]..[128,4379+21])
                                  Pexp_apply
                                  expression (src/RandomSentenceGenerator.ml[128,4379+17]..[128,4379+18])
                                    Pexp_ident "=" (src/RandomSentenceGenerator.ml[128,4379+17]..[128,4379+18])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/RandomSentenceGenerator.ml[128,4379+12]..[128,4379+16])
                                        Pexp_ident "goal" (src/RandomSentenceGenerator.ml[128,4379+12]..[128,4379+16])
                                    <arg>
                                    Nolabel
                                      expression (src/RandomSentenceGenerator.ml[128,4379+19]..[128,4379+20])
                                        Pexp_constant PConst_int (0,None)
                                  ]
                              expression (src/RandomSentenceGenerator.ml[129,4402+4]..[129,4402+7])
                                Pexp_apply
                                expression (src/RandomSentenceGenerator.ml[129,4402+4]..[129,4402+5])
                                  Pexp_ident "k" (src/RandomSentenceGenerator.ml[129,4402+4]..[129,4402+5])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/RandomSentenceGenerator.ml[129,4402+5]..[129,4402+7])
                                      Pexp_construct "()" (src/RandomSentenceGenerator.ml[129,4402+5]..[129,4402+7])
                                      None
                                ]
                            Some
                              expression (src/RandomSentenceGenerator.ml[131,4416+7]..[173,6157+5])
                                Pexp_ifthenelse
                                expression (src/RandomSentenceGenerator.ml[131,4416+10]..[131,4416+15])
                                  Pexp_apply
                                  expression (src/RandomSentenceGenerator.ml[131,4416+12]..[131,4416+13])
                                    Pexp_ident "<" (src/RandomSentenceGenerator.ml[131,4416+12]..[131,4416+13])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/RandomSentenceGenerator.ml[131,4416+10]..[131,4416+11])
                                        Pexp_ident "i" (src/RandomSentenceGenerator.ml[131,4416+10]..[131,4416+11])
                                    <arg>
                                    Nolabel
                                      expression (src/RandomSentenceGenerator.ml[131,4416+14]..[131,4416+15])
                                        Pexp_ident "n" (src/RandomSentenceGenerator.ml[131,4416+14]..[131,4416+15])
                                  ]
                                expression (src/RandomSentenceGenerator.ml[131,4416+21]..[173,6157+5])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/RandomSentenceGenerator.ml[132,4443+8]..[132,4443+11])
                                        Ppat_var "rhs" (src/RandomSentenceGenerator.ml[132,4443+8]..[132,4443+11])
                                      expression (src/RandomSentenceGenerator.ml[132,4443+14]..[132,4443+33])
                                        Pexp_apply
                                        expression (src/RandomSentenceGenerator.ml[132,4443+14]..[132,4443+28])
                                          Pexp_ident "Production.rhs" (src/RandomSentenceGenerator.ml[132,4443+14]..[132,4443+28])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/RandomSentenceGenerator.ml[132,4443+29]..[132,4443+33])
                                              Pexp_ident "prod" (src/RandomSentenceGenerator.ml[132,4443+29]..[132,4443+33])
                                        ]
                                  ]
                                  expression (src/RandomSentenceGenerator.ml[133,4480+4]..[172,6116+40])
                                    Pexp_match
                                    expression (src/RandomSentenceGenerator.ml[133,4480+10]..[133,4480+17])
                                      Pexp_apply
                                      expression (src/RandomSentenceGenerator.ml[133,4480+10]..[133,4480+17]) ghost
                                        Pexp_ident "Array.get" (src/RandomSentenceGenerator.ml[133,4480+10]..[133,4480+17]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/RandomSentenceGenerator.ml[133,4480+10]..[133,4480+13])
                                            Pexp_ident "rhs" (src/RandomSentenceGenerator.ml[133,4480+10]..[133,4480+13])
                                        <arg>
                                        Nolabel
                                          expression (src/RandomSentenceGenerator.ml[133,4480+15]..[133,4480+16])
                                            Pexp_ident "i" (src/RandomSentenceGenerator.ml[133,4480+15]..[133,4480+16])
                                      ]
                                    [
                                      <case>
                                        pattern (src/RandomSentenceGenerator.ml[134,4503+6]..[134,4503+18])
                                          Ppat_construct "Symbol.T" (src/RandomSentenceGenerator.ml[134,4503+6]..[134,4503+14])
                                          Some
                                            []
                                            pattern (src/RandomSentenceGenerator.ml[134,4503+15]..[134,4503+18])
                                              Ppat_var "tok" (src/RandomSentenceGenerator.ml[134,4503+15]..[134,4503+18])
                                        expression (src/RandomSentenceGenerator.ml[136,4575+8]..[137,4593+44])
                                          Pexp_sequence
                                          expression (src/RandomSentenceGenerator.ml[136,4575+8]..[136,4575+16])
                                            Pexp_apply
                                            expression (src/RandomSentenceGenerator.ml[136,4575+8]..[136,4575+12])
                                              Pexp_ident "emit" (src/RandomSentenceGenerator.ml[136,4575+8]..[136,4575+12])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/RandomSentenceGenerator.ml[136,4575+13]..[136,4575+16])
                                                  Pexp_ident "tok" (src/RandomSentenceGenerator.ml[136,4575+13]..[136,4575+16])
                                            ]
                                          expression (src/RandomSentenceGenerator.ml[137,4593+8]..[137,4593+44])
                                            Pexp_apply
                                            expression (src/RandomSentenceGenerator.ml[137,4593+8]..[137,4593+18])
                                              Pexp_ident "production" (src/RandomSentenceGenerator.ml[137,4593+8]..[137,4593+18])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/RandomSentenceGenerator.ml[137,4593+19]..[137,4593+23])
                                                  Pexp_ident "prod" (src/RandomSentenceGenerator.ml[137,4593+19]..[137,4593+23])
                                              <arg>
                                              Nolabel
                                                expression (src/RandomSentenceGenerator.ml[137,4593+24]..[137,4593+31])
                                                  Pexp_apply
                                                  expression (src/RandomSentenceGenerator.ml[137,4593+27]..[137,4593+28])
                                                    Pexp_ident "+" (src/RandomSentenceGenerator.ml[137,4593+27]..[137,4593+28])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/RandomSentenceGenerator.ml[137,4593+25]..[137,4593+26])
                                                        Pexp_ident "i" (src/RandomSentenceGenerator.ml[137,4593+25]..[137,4593+26])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/RandomSentenceGenerator.ml[137,4593+29]..[137,4593+30])
                                                        Pexp_constant PConst_int (1,None)
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (src/RandomSentenceGenerator.ml[137,4593+32]..[137,4593+42])
                                                  Pexp_apply
                                                  expression (src/RandomSentenceGenerator.ml[137,4593+38]..[137,4593+39])
                                                    Pexp_ident "-" (src/RandomSentenceGenerator.ml[137,4593+38]..[137,4593+39])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/RandomSentenceGenerator.ml[137,4593+33]..[137,4593+37])
                                                        Pexp_ident "goal" (src/RandomSentenceGenerator.ml[137,4593+33]..[137,4593+37])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/RandomSentenceGenerator.ml[137,4593+40]..[137,4593+41])
                                                        Pexp_constant PConst_int (1,None)
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (src/RandomSentenceGenerator.ml[137,4593+43]..[137,4593+44])
                                                  Pexp_ident "k" (src/RandomSentenceGenerator.ml[137,4593+43]..[137,4593+44])
                                            ]
                                      <case>
                                        pattern (src/RandomSentenceGenerator.ml[138,4638+6]..[138,4638+17])
                                          Ppat_construct "Symbol.N" (src/RandomSentenceGenerator.ml[138,4638+6]..[138,4638+14])
                                          Some
                                            []
                                            pattern (src/RandomSentenceGenerator.ml[138,4638+15]..[138,4638+17])
                                              Ppat_var "nt" (src/RandomSentenceGenerator.ml[138,4638+15]..[138,4638+17])
                                        expression (src/RandomSentenceGenerator.ml[141,4809+8]..[172,6116+40])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/RandomSentenceGenerator.ml[141,4809+12]..[141,4809+22])
                                                Ppat_tuple
                                                [
                                                  pattern (src/RandomSentenceGenerator.ml[141,4809+12]..[141,4809+16])
                                                    Ppat_var "min1" (src/RandomSentenceGenerator.ml[141,4809+12]..[141,4809+16])
                                                  pattern (src/RandomSentenceGenerator.ml[141,4809+18]..[141,4809+22])
                                                    Ppat_var "max1" (src/RandomSentenceGenerator.ml[141,4809+18]..[141,4809+22])
                                                ]
                                              expression (src/RandomSentenceGenerator.ml[142,4834+10]..[142,4834+43])
                                                Pexp_open Fresh
                                                module_expr (src/RandomSentenceGenerator.ml[142,4834+10]..[142,4834+18])
                                                  Pmod_ident "Analysis" (src/RandomSentenceGenerator.ml[142,4834+10]..[142,4834+18])
                                                expression (src/RandomSentenceGenerator.ml[142,4834+20]..[142,4834+42])
                                                  Pexp_tuple
                                                  [
                                                    expression (src/RandomSentenceGenerator.ml[142,4834+20]..[142,4834+30])
                                                      Pexp_apply
                                                      expression (src/RandomSentenceGenerator.ml[142,4834+20]..[142,4834+27])
                                                        Pexp_ident "minimal" (src/RandomSentenceGenerator.ml[142,4834+20]..[142,4834+27])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/RandomSentenceGenerator.ml[142,4834+28]..[142,4834+30])
                                                            Pexp_ident "nt" (src/RandomSentenceGenerator.ml[142,4834+28]..[142,4834+30])
                                                      ]
                                                    expression (src/RandomSentenceGenerator.ml[142,4834+32]..[142,4834+42])
                                                      Pexp_apply
                                                      expression (src/RandomSentenceGenerator.ml[142,4834+32]..[142,4834+39])
                                                        Pexp_ident "maximal" (src/RandomSentenceGenerator.ml[142,4834+32]..[142,4834+39])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/RandomSentenceGenerator.ml[142,4834+40]..[142,4834+42])
                                                            Pexp_ident "nt" (src/RandomSentenceGenerator.ml[142,4834+40]..[142,4834+42])
                                                      ]
                                                  ]
                                            <def>
                                              pattern (src/RandomSentenceGenerator.ml[143,4878+12]..[143,4878+22])
                                                Ppat_tuple
                                                [
                                                  pattern (src/RandomSentenceGenerator.ml[143,4878+12]..[143,4878+16])
                                                    Ppat_var "min2" (src/RandomSentenceGenerator.ml[143,4878+12]..[143,4878+16])
                                                  pattern (src/RandomSentenceGenerator.ml[143,4878+18]..[143,4878+22])
                                                    Ppat_var "max2" (src/RandomSentenceGenerator.ml[143,4878+18]..[143,4878+22])
                                                ]
                                              expression (src/RandomSentenceGenerator.ml[144,4903+10]..[144,4903+73])
                                                Pexp_open Fresh
                                                module_expr (src/RandomSentenceGenerator.ml[144,4903+10]..[144,4903+18])
                                                  Pmod_ident "Analysis" (src/RandomSentenceGenerator.ml[144,4903+10]..[144,4903+18])
                                                expression (src/RandomSentenceGenerator.ml[144,4903+20]..[144,4903+72])
                                                  Pexp_tuple
                                                  [
                                                    expression (src/RandomSentenceGenerator.ml[144,4903+20]..[144,4903+45])
                                                      Pexp_apply
                                                      expression (src/RandomSentenceGenerator.ml[144,4903+20]..[144,4903+32])
                                                        Pexp_ident "minimal_prod" (src/RandomSentenceGenerator.ml[144,4903+20]..[144,4903+32])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/RandomSentenceGenerator.ml[144,4903+33]..[144,4903+37])
                                                            Pexp_ident "prod" (src/RandomSentenceGenerator.ml[144,4903+33]..[144,4903+37])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/RandomSentenceGenerator.ml[144,4903+38]..[144,4903+45])
                                                            Pexp_apply
                                                            expression (src/RandomSentenceGenerator.ml[144,4903+41]..[144,4903+42])
                                                              Pexp_ident "+" (src/RandomSentenceGenerator.ml[144,4903+41]..[144,4903+42])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/RandomSentenceGenerator.ml[144,4903+39]..[144,4903+40])
                                                                  Pexp_ident "i" (src/RandomSentenceGenerator.ml[144,4903+39]..[144,4903+40])
                                                              <arg>
                                                              Nolabel
                                                                expression (src/RandomSentenceGenerator.ml[144,4903+43]..[144,4903+44])
                                                                  Pexp_constant PConst_int (1,None)
                                                            ]
                                                      ]
                                                    expression (src/RandomSentenceGenerator.ml[144,4903+47]..[144,4903+72])
                                                      Pexp_apply
                                                      expression (src/RandomSentenceGenerator.ml[144,4903+47]..[144,4903+59])
                                                        Pexp_ident "maximal_prod" (src/RandomSentenceGenerator.ml[144,4903+47]..[144,4903+59])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/RandomSentenceGenerator.ml[144,4903+60]..[144,4903+64])
                                                            Pexp_ident "prod" (src/RandomSentenceGenerator.ml[144,4903+60]..[144,4903+64])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/RandomSentenceGenerator.ml[144,4903+65]..[144,4903+72])
                                                            Pexp_apply
                                                            expression (src/RandomSentenceGenerator.ml[144,4903+68]..[144,4903+69])
                                                              Pexp_ident "+" (src/RandomSentenceGenerator.ml[144,4903+68]..[144,4903+69])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/RandomSentenceGenerator.ml[144,4903+66]..[144,4903+67])
                                                                  Pexp_ident "i" (src/RandomSentenceGenerator.ml[144,4903+66]..[144,4903+67])
                                                              <arg>
                                                              Nolabel
                                                                expression (src/RandomSentenceGenerator.ml[144,4903+70]..[144,4903+71])
                                                                  Pexp_constant PConst_int (1,None)
                                                            ]
                                                      ]
                                                  ]
                                          ]
                                          expression (src/RandomSentenceGenerator.ml[151,5314+8]..[172,6116+40])
                                            Pexp_sequence
                                            expression (src/RandomSentenceGenerator.ml[151,5314+8]..[151,5314+45])
                                              Pexp_assert
                                              expression (src/RandomSentenceGenerator.ml[151,5314+15]..[151,5314+45])
                                                Pexp_apply
                                                expression (src/RandomSentenceGenerator.ml[151,5314+29]..[151,5314+31])
                                                  Pexp_ident "&&" (src/RandomSentenceGenerator.ml[151,5314+29]..[151,5314+31])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/RandomSentenceGenerator.ml[151,5314+16]..[151,5314+28])
                                                      Pexp_apply
                                                      expression (src/RandomSentenceGenerator.ml[151,5314+21]..[151,5314+23])
                                                        Pexp_ident "<=" (src/RandomSentenceGenerator.ml[151,5314+21]..[151,5314+23])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/RandomSentenceGenerator.ml[151,5314+16]..[151,5314+20])
                                                            Pexp_ident "min1" (src/RandomSentenceGenerator.ml[151,5314+16]..[151,5314+20])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/RandomSentenceGenerator.ml[151,5314+24]..[151,5314+28])
                                                            Pexp_ident "max1" (src/RandomSentenceGenerator.ml[151,5314+24]..[151,5314+28])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (src/RandomSentenceGenerator.ml[151,5314+32]..[151,5314+44])
                                                      Pexp_apply
                                                      expression (src/RandomSentenceGenerator.ml[151,5314+37]..[151,5314+39])
                                                        Pexp_ident "<=" (src/RandomSentenceGenerator.ml[151,5314+37]..[151,5314+39])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/RandomSentenceGenerator.ml[151,5314+32]..[151,5314+36])
                                                            Pexp_ident "min2" (src/RandomSentenceGenerator.ml[151,5314+32]..[151,5314+36])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/RandomSentenceGenerator.ml[151,5314+40]..[151,5314+44])
                                                            Pexp_ident "max2" (src/RandomSentenceGenerator.ml[151,5314+40]..[151,5314+44])
                                                      ]
                                                ]
                                            expression (src/RandomSentenceGenerator.ml[152,5361+8]..[172,6116+40])
                                              Pexp_sequence
                                              expression (src/RandomSentenceGenerator.ml[152,5361+8]..[152,5361+36])
                                                Pexp_assert
                                                expression (src/RandomSentenceGenerator.ml[152,5361+15]..[152,5361+36])
                                                  Pexp_apply
                                                  expression (src/RandomSentenceGenerator.ml[152,5361+28]..[152,5361+30])
                                                    Pexp_ident "<=" (src/RandomSentenceGenerator.ml[152,5361+28]..[152,5361+30])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/RandomSentenceGenerator.ml[152,5361+16]..[152,5361+27])
                                                        Pexp_apply
                                                        expression (src/RandomSentenceGenerator.ml[152,5361+21]..[152,5361+22])
                                                          Pexp_ident "+" (src/RandomSentenceGenerator.ml[152,5361+21]..[152,5361+22])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/RandomSentenceGenerator.ml[152,5361+16]..[152,5361+20])
                                                              Pexp_ident "min1" (src/RandomSentenceGenerator.ml[152,5361+16]..[152,5361+20])
                                                          <arg>
                                                          Nolabel
                                                            expression (src/RandomSentenceGenerator.ml[152,5361+23]..[152,5361+27])
                                                              Pexp_ident "min2" (src/RandomSentenceGenerator.ml[152,5361+23]..[152,5361+27])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (src/RandomSentenceGenerator.ml[152,5361+31]..[152,5361+35])
                                                        Pexp_ident "goal" (src/RandomSentenceGenerator.ml[152,5361+31]..[152,5361+35])
                                                  ]
                                              expression (src/RandomSentenceGenerator.ml[153,5399+8]..[172,6116+40])
                                                Pexp_sequence
                                                expression (src/RandomSentenceGenerator.ml[153,5399+8]..[153,5399+74])
                                                  Pexp_assert
                                                  expression (src/RandomSentenceGenerator.ml[153,5399+15]..[153,5399+74])
                                                    Pexp_apply
                                                    expression (src/RandomSentenceGenerator.ml[153,5399+32]..[153,5399+34])
                                                      Pexp_ident "||" (src/RandomSentenceGenerator.ml[153,5399+32]..[153,5399+34])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/RandomSentenceGenerator.ml[153,5399+16]..[153,5399+31])
                                                          Pexp_apply
                                                          expression (src/RandomSentenceGenerator.ml[153,5399+21]..[153,5399+22])
                                                            Pexp_ident "=" (src/RandomSentenceGenerator.ml[153,5399+21]..[153,5399+22])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/RandomSentenceGenerator.ml[153,5399+16]..[153,5399+20])
                                                                Pexp_ident "max1" (src/RandomSentenceGenerator.ml[153,5399+16]..[153,5399+20])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/RandomSentenceGenerator.ml[153,5399+23]..[153,5399+31])
                                                                Pexp_ident "infinity" (src/RandomSentenceGenerator.ml[153,5399+23]..[153,5399+31])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (src/RandomSentenceGenerator.ml[153,5399+35]..[153,5399+73])
                                                          Pexp_apply
                                                          expression (src/RandomSentenceGenerator.ml[153,5399+51]..[153,5399+53])
                                                            Pexp_ident "||" (src/RandomSentenceGenerator.ml[153,5399+51]..[153,5399+53])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/RandomSentenceGenerator.ml[153,5399+35]..[153,5399+50])
                                                                Pexp_apply
                                                                expression (src/RandomSentenceGenerator.ml[153,5399+40]..[153,5399+41])
                                                                  Pexp_ident "=" (src/RandomSentenceGenerator.ml[153,5399+40]..[153,5399+41])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/RandomSentenceGenerator.ml[153,5399+35]..[153,5399+39])
                                                                      Pexp_ident "max2" (src/RandomSentenceGenerator.ml[153,5399+35]..[153,5399+39])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/RandomSentenceGenerator.ml[153,5399+42]..[153,5399+50])
                                                                      Pexp_ident "infinity" (src/RandomSentenceGenerator.ml[153,5399+42]..[153,5399+50])
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (src/RandomSentenceGenerator.ml[153,5399+54]..[153,5399+73])
                                                                Pexp_apply
                                                                expression (src/RandomSentenceGenerator.ml[153,5399+59]..[153,5399+61])
                                                                  Pexp_ident "<=" (src/RandomSentenceGenerator.ml[153,5399+59]..[153,5399+61])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/RandomSentenceGenerator.ml[153,5399+54]..[153,5399+58])
                                                                      Pexp_ident "goal" (src/RandomSentenceGenerator.ml[153,5399+54]..[153,5399+58])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/RandomSentenceGenerator.ml[153,5399+62]..[153,5399+73])
                                                                      Pexp_apply
                                                                      expression (src/RandomSentenceGenerator.ml[153,5399+67]..[153,5399+68])
Pexp_ident "+" (src/RandomSentenceGenerator.ml[153,5399+67]..[153,5399+68])
                                                                      [
<arg>
Nolabel
  expression (src/RandomSentenceGenerator.ml[153,5399+62]..[153,5399+66])
    Pexp_ident "max1" (src/RandomSentenceGenerator.ml[153,5399+62]..[153,5399+66])
<arg>
Nolabel
  expression (src/RandomSentenceGenerator.ml[153,5399+69]..[153,5399+73])
    Pexp_ident "max2" (src/RandomSentenceGenerator.ml[153,5399+69]..[153,5399+73])
                                                                      ]
                                                                ]
                                                          ]
                                                    ]
                                                expression (src/RandomSentenceGenerator.ml[155,5540+8]..[172,6116+40])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (src/RandomSentenceGenerator.ml[155,5540+12]..[155,5540+23])
                                                        Ppat_var "constraints" (src/RandomSentenceGenerator.ml[155,5540+12]..[155,5540+23])
                                                      expression (src/RandomSentenceGenerator.ml[156,5566+10]..[161,5754+11])
                                                        Pexp_apply
                                                        expression (src/RandomSentenceGenerator.ml[156,5566+10]..[156,5566+19])
                                                          Pexp_ident "intersect" (src/RandomSentenceGenerator.ml[156,5566+10]..[156,5566+19])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/RandomSentenceGenerator.ml[156,5566+20]..[161,5754+11])
                                                              Pexp_construct "::" (src/RandomSentenceGenerator.ml[157,5588+12]..[161,5754+11]) ghost
                                                              Some
                                                                expression (src/RandomSentenceGenerator.ml[157,5588+12]..[161,5754+11]) ghost
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (src/RandomSentenceGenerator.ml[157,5588+12]..[157,5588+26])
                                                                      Pexp_apply
                                                                      expression (src/RandomSentenceGenerator.ml[157,5588+12]..[157,5588+19])
Pexp_ident "between" (src/RandomSentenceGenerator.ml[157,5588+12]..[157,5588+19])
                                                                      [
<arg>
Nolabel
  expression (src/RandomSentenceGenerator.ml[157,5588+20]..[157,5588+21])
    Pexp_constant PConst_int (0,None)
<arg>
Nolabel
  expression (src/RandomSentenceGenerator.ml[157,5588+22]..[157,5588+26])
    Pexp_ident "goal" (src/RandomSentenceGenerator.ml[157,5588+22]..[157,5588+26])
                                                                      ]
                                                                    expression (src/RandomSentenceGenerator.ml[158,5616+12]..[161,5754+11]) ghost
                                                                      Pexp_construct "::" (src/RandomSentenceGenerator.ml[158,5616+12]..[161,5754+11]) ghost
                                                                      Some
expression (src/RandomSentenceGenerator.ml[158,5616+12]..[161,5754+11]) ghost
  Pexp_tuple
  [
    expression (src/RandomSentenceGenerator.ml[158,5616+12]..[158,5616+29])
      Pexp_apply
      expression (src/RandomSentenceGenerator.ml[158,5616+12]..[158,5616+19])
        Pexp_ident "between" (src/RandomSentenceGenerator.ml[158,5616+12]..[158,5616+19])
      [
        <arg>
        Nolabel
          expression (src/RandomSentenceGenerator.ml[158,5616+20]..[158,5616+24])
            Pexp_ident "min1" (src/RandomSentenceGenerator.ml[158,5616+20]..[158,5616+24])
        <arg>
        Nolabel
          expression (src/RandomSentenceGenerator.ml[158,5616+25]..[158,5616+29])
            Pexp_ident "max1" (src/RandomSentenceGenerator.ml[158,5616+25]..[158,5616+29])
      ]
    expression (src/RandomSentenceGenerator.ml[159,5647+12]..[161,5754+11]) ghost
      Pexp_construct "::" (src/RandomSentenceGenerator.ml[159,5647+12]..[161,5754+11]) ghost
      Some
        expression (src/RandomSentenceGenerator.ml[159,5647+12]..[161,5754+11]) ghost
          Pexp_tuple
          [
            expression (src/RandomSentenceGenerator.ml[159,5647+12]..[159,5647+70])
              Pexp_ifthenelse
              expression (src/RandomSentenceGenerator.ml[159,5647+16]..[159,5647+31])
                Pexp_apply
                expression (src/RandomSentenceGenerator.ml[159,5647+21]..[159,5647+22])
                  Pexp_ident "=" (src/RandomSentenceGenerator.ml[159,5647+21]..[159,5647+22])
                [
                  <arg>
                  Nolabel
                    expression (src/RandomSentenceGenerator.ml[159,5647+16]..[159,5647+20])
                      Pexp_ident "max2" (src/RandomSentenceGenerator.ml[159,5647+16]..[159,5647+20])
                  <arg>
                  Nolabel
                    expression (src/RandomSentenceGenerator.ml[159,5647+23]..[159,5647+31])
                      Pexp_ident "infinity" (src/RandomSentenceGenerator.ml[159,5647+23]..[159,5647+31])
                ]
              expression (src/RandomSentenceGenerator.ml[159,5647+37]..[159,5647+41])
                Pexp_ident "full" (src/RandomSentenceGenerator.ml[159,5647+37]..[159,5647+41])
              Some
                expression (src/RandomSentenceGenerator.ml[159,5647+47]..[159,5647+69])
                  Pexp_apply
                  expression (src/RandomSentenceGenerator.ml[159,5647+47]..[159,5647+55])
                    Pexp_ident "at_least" (src/RandomSentenceGenerator.ml[159,5647+47]..[159,5647+55])
                  [
                    <arg>
                    Nolabel
                      expression (src/RandomSentenceGenerator.ml[159,5647+56]..[159,5647+69])
                        Pexp_apply
                        expression (src/RandomSentenceGenerator.ml[159,5647+62]..[159,5647+63])
                          Pexp_ident "-" (src/RandomSentenceGenerator.ml[159,5647+62]..[159,5647+63])
                        [
                          <arg>
                          Nolabel
                            expression (src/RandomSentenceGenerator.ml[159,5647+57]..[159,5647+61])
                              Pexp_ident "goal" (src/RandomSentenceGenerator.ml[159,5647+57]..[159,5647+61])
                          <arg>
                          Nolabel
                            expression (src/RandomSentenceGenerator.ml[159,5647+64]..[159,5647+68])
                              Pexp_ident "max2" (src/RandomSentenceGenerator.ml[159,5647+64]..[159,5647+68])
                        ]
                  ]
            expression (src/RandomSentenceGenerator.ml[160,5719+12]..[161,5754+11]) ghost
              Pexp_construct "::" (src/RandomSentenceGenerator.ml[160,5719+12]..[161,5754+11]) ghost
              Some
                expression (src/RandomSentenceGenerator.ml[160,5719+12]..[161,5754+11]) ghost
                  Pexp_tuple
                  [
                    expression (src/RandomSentenceGenerator.ml[160,5719+12]..[160,5719+33])
                      Pexp_apply
                      expression (src/RandomSentenceGenerator.ml[160,5719+12]..[160,5719+19])
                        Pexp_ident "at_most" (src/RandomSentenceGenerator.ml[160,5719+12]..[160,5719+19])
                      [
                        <arg>
                        Nolabel
                          expression (src/RandomSentenceGenerator.ml[160,5719+20]..[160,5719+33])
                            Pexp_apply
                            expression (src/RandomSentenceGenerator.ml[160,5719+26]..[160,5719+27])
                              Pexp_ident "-" (src/RandomSentenceGenerator.ml[160,5719+26]..[160,5719+27])
                            [
                              <arg>
                              Nolabel
                                expression (src/RandomSentenceGenerator.ml[160,5719+21]..[160,5719+25])
                                  Pexp_ident "goal" (src/RandomSentenceGenerator.ml[160,5719+21]..[160,5719+25])
                              <arg>
                              Nolabel
                                expression (src/RandomSentenceGenerator.ml[160,5719+28]..[160,5719+32])
                                  Pexp_ident "min2" (src/RandomSentenceGenerator.ml[160,5719+28]..[160,5719+32])
                            ]
                      ]
                    expression (src/RandomSentenceGenerator.ml[161,5754+10]..[161,5754+11]) ghost
                      Pexp_construct "[]" (src/RandomSentenceGenerator.ml[161,5754+10]..[161,5754+11]) ghost
                      None
                  ]
          ]
  ]
                                                                  ]
                                                        ]
                                                  ]
                                                  expression (src/RandomSentenceGenerator.ml[164,5833+8]..[172,6116+40])
                                                    Pexp_sequence
                                                    expression (src/RandomSentenceGenerator.ml[164,5833+8]..[164,5833+37])
                                                      Pexp_assert
                                                      expression (src/RandomSentenceGenerator.ml[164,5833+15]..[164,5833+37])
                                                        Pexp_apply
                                                        expression (src/RandomSentenceGenerator.ml[164,5833+16]..[164,5833+24])
                                                          Pexp_ident "nonempty" (src/RandomSentenceGenerator.ml[164,5833+16]..[164,5833+24])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/RandomSentenceGenerator.ml[164,5833+25]..[164,5833+36])
                                                              Pexp_ident "constraints" (src/RandomSentenceGenerator.ml[164,5833+25]..[164,5833+36])
                                                        ]
                                                    expression (src/RandomSentenceGenerator.ml[165,5872+8]..[172,6116+40])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (src/RandomSentenceGenerator.ml[165,5872+12]..[165,5872+17])
                                                            Ppat_var "goal1" (src/RandomSentenceGenerator.ml[165,5872+12]..[165,5872+17])
                                                          expression (src/RandomSentenceGenerator.ml[165,5872+20]..[165,5872+36])
                                                            Pexp_apply
                                                            expression (src/RandomSentenceGenerator.ml[165,5872+20]..[165,5872+24])
                                                              Pexp_ident "pick" (src/RandomSentenceGenerator.ml[165,5872+20]..[165,5872+24])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/RandomSentenceGenerator.ml[165,5872+25]..[165,5872+36])
                                                                  Pexp_ident "constraints" (src/RandomSentenceGenerator.ml[165,5872+25]..[165,5872+36])
                                                            ]
                                                      ]
                                                      expression (src/RandomSentenceGenerator.ml[166,5912+8]..[172,6116+40])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (src/RandomSentenceGenerator.ml[166,5912+12]..[166,5912+17])
                                                              Ppat_var "goal2" (src/RandomSentenceGenerator.ml[166,5912+12]..[166,5912+17])
                                                            expression (src/RandomSentenceGenerator.ml[166,5912+20]..[166,5912+32])
                                                              Pexp_apply
                                                              expression (src/RandomSentenceGenerator.ml[166,5912+25]..[166,5912+26])
                                                                Pexp_ident "-" (src/RandomSentenceGenerator.ml[166,5912+25]..[166,5912+26])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/RandomSentenceGenerator.ml[166,5912+20]..[166,5912+24])
                                                                    Pexp_ident "goal" (src/RandomSentenceGenerator.ml[166,5912+20]..[166,5912+24])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/RandomSentenceGenerator.ml[166,5912+27]..[166,5912+32])
                                                                    Pexp_ident "goal1" (src/RandomSentenceGenerator.ml[166,5912+27]..[166,5912+32])
                                                              ]
                                                        ]
                                                        expression (src/RandomSentenceGenerator.ml[167,5948+8]..[172,6116+40])
                                                          Pexp_sequence
                                                          expression (src/RandomSentenceGenerator.ml[167,5948+8]..[167,5948+30])
                                                            Pexp_assert
                                                            expression (src/RandomSentenceGenerator.ml[167,5948+15]..[167,5948+30])
                                                              Pexp_apply
                                                              expression (src/RandomSentenceGenerator.ml[167,5948+21]..[167,5948+23])
                                                                Pexp_ident "<=" (src/RandomSentenceGenerator.ml[167,5948+21]..[167,5948+23])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/RandomSentenceGenerator.ml[167,5948+16]..[167,5948+20])
                                                                    Pexp_ident "min1" (src/RandomSentenceGenerator.ml[167,5948+16]..[167,5948+20])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/RandomSentenceGenerator.ml[167,5948+24]..[167,5948+29])
                                                                    Pexp_ident "goal1" (src/RandomSentenceGenerator.ml[167,5948+24]..[167,5948+29])
                                                              ]
                                                          expression (src/RandomSentenceGenerator.ml[168,5980+8]..[172,6116+40])
                                                            Pexp_sequence
                                                            expression (src/RandomSentenceGenerator.ml[168,5980+8]..[168,5980+30])
                                                              Pexp_assert
                                                              expression (src/RandomSentenceGenerator.ml[168,5980+15]..[168,5980+30])
                                                                Pexp_apply
                                                                expression (src/RandomSentenceGenerator.ml[168,5980+22]..[168,5980+24])
                                                                  Pexp_ident "<=" (src/RandomSentenceGenerator.ml[168,5980+22]..[168,5980+24])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/RandomSentenceGenerator.ml[168,5980+16]..[168,5980+21])
                                                                      Pexp_ident "goal1" (src/RandomSentenceGenerator.ml[168,5980+16]..[168,5980+21])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/RandomSentenceGenerator.ml[168,5980+25]..[168,5980+29])
                                                                      Pexp_ident "max1" (src/RandomSentenceGenerator.ml[168,5980+25]..[168,5980+29])
                                                                ]
                                                            expression (src/RandomSentenceGenerator.ml[169,6012+8]..[172,6116+40])
                                                              Pexp_sequence
                                                              expression (src/RandomSentenceGenerator.ml[169,6012+8]..[169,6012+30])
                                                                Pexp_assert
                                                                expression (src/RandomSentenceGenerator.ml[169,6012+15]..[169,6012+30])
                                                                  Pexp_apply
                                                                  expression (src/RandomSentenceGenerator.ml[169,6012+21]..[169,6012+23])
                                                                    Pexp_ident "<=" (src/RandomSentenceGenerator.ml[169,6012+21]..[169,6012+23])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/RandomSentenceGenerator.ml[169,6012+16]..[169,6012+20])
Pexp_ident "min2" (src/RandomSentenceGenerator.ml[169,6012+16]..[169,6012+20])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/RandomSentenceGenerator.ml[169,6012+24]..[169,6012+29])
Pexp_ident "goal2" (src/RandomSentenceGenerator.ml[169,6012+24]..[169,6012+29])
                                                                  ]
                                                              expression (src/RandomSentenceGenerator.ml[170,6044+8]..[172,6116+40])
                                                                Pexp_sequence
                                                                expression (src/RandomSentenceGenerator.ml[170,6044+8]..[170,6044+30])
                                                                  Pexp_assert
                                                                  expression (src/RandomSentenceGenerator.ml[170,6044+15]..[170,6044+30])
                                                                    Pexp_apply
                                                                    expression (src/RandomSentenceGenerator.ml[170,6044+22]..[170,6044+24])
                                                                      Pexp_ident "<=" (src/RandomSentenceGenerator.ml[170,6044+22]..[170,6044+24])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/RandomSentenceGenerator.ml[170,6044+16]..[170,6044+21])
  Pexp_ident "goal2" (src/RandomSentenceGenerator.ml[170,6044+16]..[170,6044+21])
                                                                      <arg>
                                                                      Nolabel
expression (src/RandomSentenceGenerator.ml[170,6044+25]..[170,6044+29])
  Pexp_ident "max2" (src/RandomSentenceGenerator.ml[170,6044+25]..[170,6044+29])
                                                                    ]
                                                                expression (src/RandomSentenceGenerator.ml[171,6076+8]..[172,6116+40])
                                                                  Pexp_apply
                                                                  expression (src/RandomSentenceGenerator.ml[171,6076+8]..[171,6076+19])
                                                                    Pexp_ident "nonterminal" (src/RandomSentenceGenerator.ml[171,6076+8]..[171,6076+19])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/RandomSentenceGenerator.ml[171,6076+20]..[171,6076+22])
Pexp_ident "nt" (src/RandomSentenceGenerator.ml[171,6076+20]..[171,6076+22])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/RandomSentenceGenerator.ml[171,6076+23]..[171,6076+28])
Pexp_ident "goal1" (src/RandomSentenceGenerator.ml[171,6076+23]..[171,6076+28])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/RandomSentenceGenerator.ml[171,6076+29]..[172,6116+40])
Pexp_fun
Nolabel
None
pattern (src/RandomSentenceGenerator.ml[171,6076+34]..[171,6076+36])
  Ppat_construct "()" (src/RandomSentenceGenerator.ml[171,6076+34]..[171,6076+36])
  None
expression (src/RandomSentenceGenerator.ml[172,6116+8]..[172,6116+39])
  Pexp_apply
  expression (src/RandomSentenceGenerator.ml[172,6116+8]..[172,6116+18])
    Pexp_ident "production" (src/RandomSentenceGenerator.ml[172,6116+8]..[172,6116+18])
  [
    <arg>
    Nolabel
      expression (src/RandomSentenceGenerator.ml[172,6116+19]..[172,6116+23])
        Pexp_ident "prod" (src/RandomSentenceGenerator.ml[172,6116+19]..[172,6116+23])
    <arg>
    Nolabel
      expression (src/RandomSentenceGenerator.ml[172,6116+24]..[172,6116+31])
        Pexp_apply
        expression (src/RandomSentenceGenerator.ml[172,6116+27]..[172,6116+28])
          Pexp_ident "+" (src/RandomSentenceGenerator.ml[172,6116+27]..[172,6116+28])
        [
          <arg>
          Nolabel
            expression (src/RandomSentenceGenerator.ml[172,6116+25]..[172,6116+26])
              Pexp_ident "i" (src/RandomSentenceGenerator.ml[172,6116+25]..[172,6116+26])
          <arg>
          Nolabel
            expression (src/RandomSentenceGenerator.ml[172,6116+29]..[172,6116+30])
              Pexp_constant PConst_int (1,None)
        ]
    <arg>
    Nolabel
      expression (src/RandomSentenceGenerator.ml[172,6116+32]..[172,6116+37])
        Pexp_ident "goal2" (src/RandomSentenceGenerator.ml[172,6116+32]..[172,6116+37])
    <arg>
    Nolabel
      expression (src/RandomSentenceGenerator.ml[172,6116+38]..[172,6116+39])
        Pexp_ident "k" (src/RandomSentenceGenerator.ml[172,6116+38]..[172,6116+39])
  ]
                                                                  ]
                                    ]
                                None
                  core_type (src/RandomSentenceGenerator.ml[122,4156+31]..[122,4156+35])
                    Ptyp_constr "unit" (src/RandomSentenceGenerator.ml[122,4156+31]..[122,4156+35])
                    []
    ]
  structure_item (src/RandomSentenceGenerator.ml[180,6346+0]..[188,6514+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[180,6346+4]..[180,6346+15])
          Ppat_var "nonterminal" (src/RandomSentenceGenerator.ml[180,6346+4]..[180,6346+15])
        expression (src/RandomSentenceGenerator.ml[180,6346+16]..[188,6514+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/RandomSentenceGenerator.ml[180,6346+16]..[180,6346+18])
            Ppat_var "nt" (src/RandomSentenceGenerator.ml[180,6346+16]..[180,6346+18])
          expression (src/RandomSentenceGenerator.ml[180,6346+19]..[188,6514+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/RandomSentenceGenerator.ml[180,6346+19]..[180,6346+23])
              Ppat_var "goal" (src/RandomSentenceGenerator.ml[180,6346+19]..[180,6346+23])
            expression (src/RandomSentenceGenerator.ml[181,6372+2]..[188,6514+13])
              Pexp_sequence
              expression (src/RandomSentenceGenerator.ml[181,6372+2]..[181,6372+23])
                Pexp_assert
                expression (src/RandomSentenceGenerator.ml[181,6372+9]..[181,6372+23])
                  Pexp_apply
                  expression (src/RandomSentenceGenerator.ml[181,6372+18]..[181,6372+19])
                    Pexp_ident "=" (src/RandomSentenceGenerator.ml[181,6372+18]..[181,6372+19])
                  [
                    <arg>
                    Nolabel
                      expression (src/RandomSentenceGenerator.ml[181,6372+10]..[181,6372+17])
                        Pexp_apply
                        expression (src/RandomSentenceGenerator.ml[181,6372+10]..[181,6372+11])
                          Pexp_ident "!" (src/RandomSentenceGenerator.ml[181,6372+10]..[181,6372+11])
                        [
                          <arg>
                          Nolabel
                            expression (src/RandomSentenceGenerator.ml[181,6372+11]..[181,6372+17])
                              Pexp_ident "buffer" (src/RandomSentenceGenerator.ml[181,6372+11]..[181,6372+17])
                        ]
                    <arg>
                    Nolabel
                      expression (src/RandomSentenceGenerator.ml[181,6372+20]..[181,6372+22])
                        Pexp_construct "[]" (src/RandomSentenceGenerator.ml[181,6372+20]..[181,6372+22])
                        None
                  ]
              expression (src/RandomSentenceGenerator.ml[182,6397+2]..[188,6514+13])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/RandomSentenceGenerator.ml[182,6397+6]..[182,6397+7])
                      Ppat_var "k" (src/RandomSentenceGenerator.ml[182,6397+6]..[182,6397+7])
                    expression (src/RandomSentenceGenerator.ml[182,6397+8]..[182,6397+15]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/RandomSentenceGenerator.ml[182,6397+8]..[182,6397+10])
                        Ppat_construct "()" (src/RandomSentenceGenerator.ml[182,6397+8]..[182,6397+10])
                        None
                      expression (src/RandomSentenceGenerator.ml[182,6397+13]..[182,6397+15])
                        Pexp_construct "()" (src/RandomSentenceGenerator.ml[182,6397+13]..[182,6397+15])
                        None
                ]
                expression (src/RandomSentenceGenerator.ml[183,6416+2]..[188,6514+13])
                  Pexp_match
                  expression (src/RandomSentenceGenerator.ml[183,6416+8]..[183,6416+29])
                    Pexp_apply
                    expression (src/RandomSentenceGenerator.ml[183,6416+8]..[183,6416+19])
                      Pexp_ident "nonterminal" (src/RandomSentenceGenerator.ml[183,6416+8]..[183,6416+19])
                    [
                      <arg>
                      Nolabel
                        expression (src/RandomSentenceGenerator.ml[183,6416+20]..[183,6416+22])
                          Pexp_ident "nt" (src/RandomSentenceGenerator.ml[183,6416+20]..[183,6416+22])
                      <arg>
                      Nolabel
                        expression (src/RandomSentenceGenerator.ml[183,6416+23]..[183,6416+27])
                          Pexp_ident "goal" (src/RandomSentenceGenerator.ml[183,6416+23]..[183,6416+27])
                      <arg>
                      Nolabel
                        expression (src/RandomSentenceGenerator.ml[183,6416+28]..[183,6416+29])
                          Pexp_ident "k" (src/RandomSentenceGenerator.ml[183,6416+28]..[183,6416+29])
                    ]
                  [
                    <case>
                      pattern (src/RandomSentenceGenerator.ml[184,6451+4]..[184,6451+6])
                        Ppat_construct "()" (src/RandomSentenceGenerator.ml[184,6451+4]..[184,6451+6])
                        None
                      expression (src/RandomSentenceGenerator.ml[185,6461+6]..[185,6461+13])
                        Pexp_apply
                        expression (src/RandomSentenceGenerator.ml[185,6461+6]..[185,6461+11])
                          Pexp_ident "reset" (src/RandomSentenceGenerator.ml[185,6461+6]..[185,6461+11])
                        [
                          <arg>
                          Nolabel
                            expression (src/RandomSentenceGenerator.ml[185,6461+11]..[185,6461+13])
                              Pexp_construct "()" (src/RandomSentenceGenerator.ml[185,6461+11]..[185,6461+13])
                              None
                        ]
                    <case>
                      pattern (src/RandomSentenceGenerator.ml[186,6475+4]..[186,6475+15])
                        Ppat_exception
                        pattern (src/RandomSentenceGenerator.ml[186,6475+14]..[186,6475+15])
                          Ppat_var "e" (src/RandomSentenceGenerator.ml[186,6475+14]..[186,6475+15])
                      expression (src/RandomSentenceGenerator.ml[187,6494+6]..[188,6514+13])
                        Pexp_sequence
                        expression (src/RandomSentenceGenerator.ml[187,6494+6]..[187,6494+18])
                          Pexp_apply
                          expression (src/RandomSentenceGenerator.ml[187,6494+13]..[187,6494+15])
                            Pexp_ident ":=" (src/RandomSentenceGenerator.ml[187,6494+13]..[187,6494+15])
                          [
                            <arg>
                            Nolabel
                              expression (src/RandomSentenceGenerator.ml[187,6494+6]..[187,6494+12])
                                Pexp_ident "buffer" (src/RandomSentenceGenerator.ml[187,6494+6]..[187,6494+12])
                            <arg>
                            Nolabel
                              expression (src/RandomSentenceGenerator.ml[187,6494+16]..[187,6494+18])
                                Pexp_construct "[]" (src/RandomSentenceGenerator.ml[187,6494+16]..[187,6494+18])
                                None
                          ]
                        expression (src/RandomSentenceGenerator.ml[188,6514+6]..[188,6514+13])
                          Pexp_apply
                          expression (src/RandomSentenceGenerator.ml[188,6514+6]..[188,6514+11])
                            Pexp_ident "raise" (src/RandomSentenceGenerator.ml[188,6514+6]..[188,6514+11])
                          [
                            <arg>
                            Nolabel
                              expression (src/RandomSentenceGenerator.ml[188,6514+12]..[188,6514+13])
                                Pexp_ident "e" (src/RandomSentenceGenerator.ml[188,6514+12]..[188,6514+13])
                          ]
                  ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[193,6626+0]..[206,6903+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[193,6626+4]..[193,6626+15])
          Ppat_var "nonterminal" (src/RandomSentenceGenerator.ml[193,6626+4]..[193,6626+15])
        expression (src/RandomSentenceGenerator.ml[193,6626+16]..[206,6903+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/RandomSentenceGenerator.ml[193,6626+16]..[193,6626+18])
            Ppat_var "nt" (src/RandomSentenceGenerator.ml[193,6626+16]..[193,6626+18])
          expression (src/RandomSentenceGenerator.ml[193,6626+19]..[206,6903+21]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/RandomSentenceGenerator.ml[193,6626+19]..[193,6626+23])
              Ppat_var "goal" (src/RandomSentenceGenerator.ml[193,6626+19]..[193,6626+23])
            expression (src/RandomSentenceGenerator.ml[194,6652+2]..[206,6903+21])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/RandomSentenceGenerator.ml[194,6652+6]..[194,6652+14])
                    Ppat_tuple
                    [
                      pattern (src/RandomSentenceGenerator.ml[194,6652+6]..[194,6652+9])
                        Ppat_var "min" (src/RandomSentenceGenerator.ml[194,6652+6]..[194,6652+9])
                      pattern (src/RandomSentenceGenerator.ml[194,6652+11]..[194,6652+14])
                        Ppat_var "max" (src/RandomSentenceGenerator.ml[194,6652+11]..[194,6652+14])
                    ]
                  expression (src/RandomSentenceGenerator.ml[194,6652+17]..[194,6652+50])
                    Pexp_open Fresh
                    module_expr (src/RandomSentenceGenerator.ml[194,6652+17]..[194,6652+25])
                      Pmod_ident "Analysis" (src/RandomSentenceGenerator.ml[194,6652+17]..[194,6652+25])
                    expression (src/RandomSentenceGenerator.ml[194,6652+27]..[194,6652+49])
                      Pexp_tuple
                      [
                        expression (src/RandomSentenceGenerator.ml[194,6652+27]..[194,6652+37])
                          Pexp_apply
                          expression (src/RandomSentenceGenerator.ml[194,6652+27]..[194,6652+34])
                            Pexp_ident "minimal" (src/RandomSentenceGenerator.ml[194,6652+27]..[194,6652+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/RandomSentenceGenerator.ml[194,6652+35]..[194,6652+37])
                                Pexp_ident "nt" (src/RandomSentenceGenerator.ml[194,6652+35]..[194,6652+37])
                          ]
                        expression (src/RandomSentenceGenerator.ml[194,6652+39]..[194,6652+49])
                          Pexp_apply
                          expression (src/RandomSentenceGenerator.ml[194,6652+39]..[194,6652+46])
                            Pexp_ident "maximal" (src/RandomSentenceGenerator.ml[194,6652+39]..[194,6652+46])
                          [
                            <arg>
                            Nolabel
                              expression (src/RandomSentenceGenerator.ml[194,6652+47]..[194,6652+49])
                                Pexp_ident "nt" (src/RandomSentenceGenerator.ml[194,6652+47]..[194,6652+49])
                          ]
                      ]
              ]
              expression (src/RandomSentenceGenerator.ml[195,6706+2]..[206,6903+21])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/RandomSentenceGenerator.ml[195,6706+6]..[195,6706+10])
                      Ppat_var "goal" (src/RandomSentenceGenerator.ml[195,6706+6]..[195,6706+10])
                    expression (src/RandomSentenceGenerator.ml[196,6719+4]..[204,6890+7])
                      Pexp_ifthenelse
                      expression (src/RandomSentenceGenerator.ml[196,6719+7]..[196,6719+33])
                        Pexp_apply
                        expression (src/RandomSentenceGenerator.ml[196,6719+19]..[196,6719+21])
                          Pexp_ident "&&" (src/RandomSentenceGenerator.ml[196,6719+19]..[196,6719+21])
                        [
                          <arg>
                          Nolabel
                            expression (src/RandomSentenceGenerator.ml[196,6719+7]..[196,6719+18])
                              Pexp_apply
                              expression (src/RandomSentenceGenerator.ml[196,6719+11]..[196,6719+13])
                                Pexp_ident "<=" (src/RandomSentenceGenerator.ml[196,6719+11]..[196,6719+13])
                              [
                                <arg>
                                Nolabel
                                  expression (src/RandomSentenceGenerator.ml[196,6719+7]..[196,6719+10])
                                    Pexp_ident "min" (src/RandomSentenceGenerator.ml[196,6719+7]..[196,6719+10])
                                <arg>
                                Nolabel
                                  expression (src/RandomSentenceGenerator.ml[196,6719+14]..[196,6719+18])
                                    Pexp_ident "goal" (src/RandomSentenceGenerator.ml[196,6719+14]..[196,6719+18])
                              ]
                          <arg>
                          Nolabel
                            expression (src/RandomSentenceGenerator.ml[196,6719+22]..[196,6719+33])
                              Pexp_apply
                              expression (src/RandomSentenceGenerator.ml[196,6719+27]..[196,6719+29])
                                Pexp_ident "<=" (src/RandomSentenceGenerator.ml[196,6719+27]..[196,6719+29])
                              [
                                <arg>
                                Nolabel
                                  expression (src/RandomSentenceGenerator.ml[196,6719+22]..[196,6719+26])
                                    Pexp_ident "goal" (src/RandomSentenceGenerator.ml[196,6719+22]..[196,6719+26])
                                <arg>
                                Nolabel
                                  expression (src/RandomSentenceGenerator.ml[196,6719+30]..[196,6719+33])
                                    Pexp_ident "max" (src/RandomSentenceGenerator.ml[196,6719+30]..[196,6719+33])
                              ]
                        ]
                      expression (src/RandomSentenceGenerator.ml[197,6758+6]..[197,6758+10])
                        Pexp_ident "goal" (src/RandomSentenceGenerator.ml[197,6758+6]..[197,6758+10])
                      Some
                        expression (src/RandomSentenceGenerator.ml[198,6769+9]..[204,6890+7])
                          Pexp_ifthenelse
                          expression (src/RandomSentenceGenerator.ml[198,6769+12]..[198,6769+22])
                            Pexp_apply
                            expression (src/RandomSentenceGenerator.ml[198,6769+17]..[198,6769+18])
                              Pexp_ident "<" (src/RandomSentenceGenerator.ml[198,6769+17]..[198,6769+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/RandomSentenceGenerator.ml[198,6769+12]..[198,6769+16])
                                  Pexp_ident "goal" (src/RandomSentenceGenerator.ml[198,6769+12]..[198,6769+16])
                              <arg>
                              Nolabel
                                expression (src/RandomSentenceGenerator.ml[198,6769+19]..[198,6769+22])
                                  Pexp_ident "min" (src/RandomSentenceGenerator.ml[198,6769+19]..[198,6769+22])
                            ]
                          expression (src/RandomSentenceGenerator.ml[199,6797+6]..[199,6797+9])
                            Pexp_ident "min" (src/RandomSentenceGenerator.ml[199,6797+6]..[199,6797+9])
                          Some
                            expression (src/RandomSentenceGenerator.ml[200,6807+9]..[204,6890+7])
                              Pexp_sequence
                              expression (src/RandomSentenceGenerator.ml[201,6822+6]..[201,6822+25])
                                Pexp_assert
                                expression (src/RandomSentenceGenerator.ml[201,6822+13]..[201,6822+25])
                                  Pexp_apply
                                  expression (src/RandomSentenceGenerator.ml[201,6822+18]..[201,6822+19])
                                    Pexp_ident "<" (src/RandomSentenceGenerator.ml[201,6822+18]..[201,6822+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/RandomSentenceGenerator.ml[201,6822+14]..[201,6822+17])
                                        Pexp_ident "max" (src/RandomSentenceGenerator.ml[201,6822+14]..[201,6822+17])
                                    <arg>
                                    Nolabel
                                      expression (src/RandomSentenceGenerator.ml[201,6822+20]..[201,6822+24])
                                        Pexp_ident "goal" (src/RandomSentenceGenerator.ml[201,6822+20]..[201,6822+24])
                                  ]
                              expression (src/RandomSentenceGenerator.ml[202,6849+6]..[203,6880+9])
                                Pexp_sequence
                                expression (src/RandomSentenceGenerator.ml[202,6849+6]..[202,6849+29])
                                  Pexp_assert
                                  expression (src/RandomSentenceGenerator.ml[202,6849+13]..[202,6849+29])
                                    Pexp_apply
                                    expression (src/RandomSentenceGenerator.ml[202,6849+18]..[202,6849+19])
                                      Pexp_ident "<" (src/RandomSentenceGenerator.ml[202,6849+18]..[202,6849+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/RandomSentenceGenerator.ml[202,6849+14]..[202,6849+17])
                                          Pexp_ident "max" (src/RandomSentenceGenerator.ml[202,6849+14]..[202,6849+17])
                                      <arg>
                                      Nolabel
                                        expression (src/RandomSentenceGenerator.ml[202,6849+20]..[202,6849+28])
                                          Pexp_ident "infinity" (src/RandomSentenceGenerator.ml[202,6849+20]..[202,6849+28])
                                    ]
                                expression (src/RandomSentenceGenerator.ml[203,6880+6]..[203,6880+9])
                                  Pexp_ident "max" (src/RandomSentenceGenerator.ml[203,6880+6]..[203,6880+9])
                ]
                expression (src/RandomSentenceGenerator.ml[206,6903+2]..[206,6903+21])
                  Pexp_apply
                  expression (src/RandomSentenceGenerator.ml[206,6903+2]..[206,6903+13])
                    Pexp_ident "nonterminal" (src/RandomSentenceGenerator.ml[206,6903+2]..[206,6903+13])
                  [
                    <arg>
                    Nolabel
                      expression (src/RandomSentenceGenerator.ml[206,6903+14]..[206,6903+16])
                        Pexp_ident "nt" (src/RandomSentenceGenerator.ml[206,6903+14]..[206,6903+16])
                    <arg>
                    Nolabel
                      expression (src/RandomSentenceGenerator.ml[206,6903+17]..[206,6903+21])
                        Pexp_ident "goal" (src/RandomSentenceGenerator.ml[206,6903+17]..[206,6903+21])
                  ]
    ]
]

open Grammar
let choose (xs : 'a list) =
  (let n = List.length xs in
   assert (n > 0); (let i = Random.int n in List.nth xs i) : 'a)
let pick (i, j) = assert (i <= j); i + (Random.int ((j - i) + 1))
let infinity = max_int
let between i j = (i, j)
let at_least i = between i infinity
let at_most j = between 0 j
let full = (0, max_int)
let intersect (i1, j1) (i2, j2) = ((max i1 i2), (min j1 j2))
let intersect intervals = List.fold_left intersect full intervals
let nonempty (i, j) = i <= j
let buffer = ref []
let emit tok = buffer := (tok :: (!buffer))
let reset () = let toks = !buffer in buffer := []; List.rev toks
let rec nonterminal nt goal k =
  (assert ((Analysis.minimal nt) <= goal);
   assert (goal <= (Analysis.maximal nt));
   (let prods =
      Production.foldnt nt
        (fun prod ->
           fun prods ->
             if
               (Production.error_free prod) &&
                 (((Analysis.minimal_prod prod 0) <= goal) &&
                    (goal <= (Analysis.maximal_prod prod 0)))
             then prod :: prods
             else prods) [] in
    if prods = []
    then nonterminal nt (Analysis.minimal nt) k
    else production (choose prods) 0 goal k) : unit)
and production prod i goal k =
  (assert ((Analysis.minimal_prod prod i) <= goal);
   assert (goal <= (Analysis.maximal_prod prod i));
   (let n = Production.length prod in
    assert ((0 <= i) && (i <= n));
    if i = n
    then (assert (goal = 0); k ())
    else
      if i < n
      then
        (let rhs = Production.rhs prod in
         match rhs.(i) with
         | Symbol.T tok -> (emit tok; production prod (i + 1) (goal - 1) k)
         | Symbol.N nt ->
             let (min1, max1) =
               let open Analysis in ((minimal nt), (maximal nt))
             and (min2, max2) =
               let open Analysis in
                 ((minimal_prod prod (i + 1)), (maximal_prod prod (i + 1))) in
             (assert ((min1 <= max1) && (min2 <= max2));
              assert ((min1 + min2) <= goal);
              assert
                ((max1 = infinity) ||
                   ((max2 = infinity) || (goal <= (max1 + max2))));
              (let constraints =
                 intersect
                   [between 0 goal;
                   between min1 max1;
                   if max2 = infinity then full else at_least (goal - max2);
                   at_most (goal - min2)] in
               assert (nonempty constraints);
               (let goal1 = pick constraints in
                let goal2 = goal - goal1 in
                assert (min1 <= goal1);
                assert (goal1 <= max1);
                assert (min2 <= goal2);
                assert (goal2 <= max2);
                nonterminal nt goal1
                  (fun () -> production prod (i + 1) goal2 k)))))) : 
  unit)
let nonterminal nt goal =
  assert ((!buffer) = []);
  (let k () = () in
   match nonterminal nt goal k with
   | () -> reset ()
   | exception e -> (buffer := []; raise e))
let nonterminal nt goal =
  let (min, max) = let open Analysis in ((minimal nt), (maximal nt)) in
  let goal =
    if (min <= goal) && (goal <= max)
    then goal
    else
      if goal < min
      then min
      else (assert (max < goal); assert (max < infinity); max) in
  nonterminal nt goal
[
  structure_item (src/RandomSentenceGenerator.ml[14,1013+0]..src/RandomSentenceGenerator.ml[14,1013+12])
    Tstr_open Fresh
    module_expr (src/RandomSentenceGenerator.ml[14,1013+5]..src/RandomSentenceGenerator.ml[14,1013+12])
      Tmod_ident "Dune__exe!.Grammar"
  structure_item (src/RandomSentenceGenerator.ml[20,1141+0]..src/RandomSentenceGenerator.ml[24,1246+15])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[20,1141+4]..src/RandomSentenceGenerator.ml[20,1141+10])
          Tpat_var "choose/414"
        expression (src/RandomSentenceGenerator.ml[20,1141+11]..src/RandomSentenceGenerator.ml[24,1246+15]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/RandomSentenceGenerator.ml[20,1141+12]..src/RandomSentenceGenerator.ml[20,1141+14])
                extra
                  Tpat_extra_constraint
                  core_type (src/RandomSentenceGenerator.ml[20,1141+17]..src/RandomSentenceGenerator.ml[20,1141+24])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/RandomSentenceGenerator.ml[20,1141+17]..src/RandomSentenceGenerator.ml[20,1141+19])
                        Ttyp_var a
                    ]
                Tpat_alias "xs/416"
                pattern (src/RandomSentenceGenerator.ml[20,1141+12]..src/RandomSentenceGenerator.ml[20,1141+14])
                  Tpat_any
              expression (src/RandomSentenceGenerator.ml[21,1174+2]..src/RandomSentenceGenerator.ml[24,1246+15])
                extra
                  Texp_constraint
                  core_type (src/RandomSentenceGenerator.ml[20,1141+28]..src/RandomSentenceGenerator.ml[20,1141+30])
                    Ttyp_var a
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/RandomSentenceGenerator.ml[21,1174+6]..src/RandomSentenceGenerator.ml[21,1174+7])
                      Tpat_var "n/417"
                    expression (src/RandomSentenceGenerator.ml[21,1174+10]..src/RandomSentenceGenerator.ml[21,1174+24])
                      Texp_apply
                      expression (src/RandomSentenceGenerator.ml[21,1174+10]..src/RandomSentenceGenerator.ml[21,1174+21])
                        Texp_ident "Stdlib!.List.length"
                      [
                        <arg>
                          Nolabel
                          expression (src/RandomSentenceGenerator.ml[21,1174+22]..src/RandomSentenceGenerator.ml[21,1174+24])
                            Texp_ident "xs/416"
                      ]
                ]
                expression (src/RandomSentenceGenerator.ml[22,1202+2]..src/RandomSentenceGenerator.ml[24,1246+15])
                  Texp_sequence
                  expression (src/RandomSentenceGenerator.ml[22,1202+2]..src/RandomSentenceGenerator.ml[22,1202+16])
                    Texp_assert                    expression (src/RandomSentenceGenerator.ml[22,1202+9]..src/RandomSentenceGenerator.ml[22,1202+16])
                      Texp_apply
                      expression (src/RandomSentenceGenerator.ml[22,1202+12]..src/RandomSentenceGenerator.ml[22,1202+13])
                        Texp_ident "Stdlib!.>"
                      [
                        <arg>
                          Nolabel
                          expression (src/RandomSentenceGenerator.ml[22,1202+10]..src/RandomSentenceGenerator.ml[22,1202+11])
                            Texp_ident "n/417"
                        <arg>
                          Nolabel
                          expression (src/RandomSentenceGenerator.ml[22,1202+14]..src/RandomSentenceGenerator.ml[22,1202+15])
                            Texp_constant Const_int 0
                      ]
                  expression (src/RandomSentenceGenerator.ml[23,1220+2]..src/RandomSentenceGenerator.ml[24,1246+15])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/RandomSentenceGenerator.ml[23,1220+6]..src/RandomSentenceGenerator.ml[23,1220+7])
                          Tpat_var "i/484"
                        expression (src/RandomSentenceGenerator.ml[23,1220+10]..src/RandomSentenceGenerator.ml[23,1220+22])
                          Texp_apply
                          expression (src/RandomSentenceGenerator.ml[23,1220+10]..src/RandomSentenceGenerator.ml[23,1220+20])
                            Texp_ident "Stdlib!.Random.int"
                          [
                            <arg>
                              Nolabel
                              expression (src/RandomSentenceGenerator.ml[23,1220+21]..src/RandomSentenceGenerator.ml[23,1220+22])
                                Texp_ident "n/417"
                          ]
                    ]
                    expression (src/RandomSentenceGenerator.ml[24,1246+2]..src/RandomSentenceGenerator.ml[24,1246+15])
                      Texp_apply
                      expression (src/RandomSentenceGenerator.ml[24,1246+2]..src/RandomSentenceGenerator.ml[24,1246+10])
                        Texp_ident "Stdlib!.List.nth"
                      [
                        <arg>
                          Nolabel
                          expression (src/RandomSentenceGenerator.ml[24,1246+11]..src/RandomSentenceGenerator.ml[24,1246+13])
                            Texp_ident "xs/416"
                        <arg>
                          Nolabel
                          expression (src/RandomSentenceGenerator.ml[24,1246+14]..src/RandomSentenceGenerator.ml[24,1246+15])
                            Texp_ident "i/484"
                      ]
          ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[28,1314+0]..src/RandomSentenceGenerator.ml[30,1351+28])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[28,1314+4]..src/RandomSentenceGenerator.ml[28,1314+8])
          Tpat_var "pick/503"
        expression (src/RandomSentenceGenerator.ml[28,1314+9]..src/RandomSentenceGenerator.ml[30,1351+28]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/RandomSentenceGenerator.ml[28,1314+9]..src/RandomSentenceGenerator.ml[28,1314+15])
                Tpat_tuple
                [
                  pattern (src/RandomSentenceGenerator.ml[28,1314+10]..src/RandomSentenceGenerator.ml[28,1314+11])
                    Tpat_var "i/505"
                  pattern (src/RandomSentenceGenerator.ml[28,1314+13]..src/RandomSentenceGenerator.ml[28,1314+14])
                    Tpat_var "j/506"
                ]
              expression (src/RandomSentenceGenerator.ml[29,1332+2]..src/RandomSentenceGenerator.ml[30,1351+28])
                Texp_sequence
                expression (src/RandomSentenceGenerator.ml[29,1332+2]..src/RandomSentenceGenerator.ml[29,1332+17])
                  Texp_assert                  expression (src/RandomSentenceGenerator.ml[29,1332+9]..src/RandomSentenceGenerator.ml[29,1332+17])
                    Texp_apply
                    expression (src/RandomSentenceGenerator.ml[29,1332+12]..src/RandomSentenceGenerator.ml[29,1332+14])
                      Texp_ident "Stdlib!.<="
                    [
                      <arg>
                        Nolabel
                        expression (src/RandomSentenceGenerator.ml[29,1332+10]..src/RandomSentenceGenerator.ml[29,1332+11])
                          Texp_ident "i/505"
                      <arg>
                        Nolabel
                        expression (src/RandomSentenceGenerator.ml[29,1332+15]..src/RandomSentenceGenerator.ml[29,1332+16])
                          Texp_ident "j/506"
                    ]
                expression (src/RandomSentenceGenerator.ml[30,1351+2]..src/RandomSentenceGenerator.ml[30,1351+28])
                  Texp_apply
                  expression (src/RandomSentenceGenerator.ml[30,1351+4]..src/RandomSentenceGenerator.ml[30,1351+5])
                    Texp_ident "Stdlib!.+"
                  [
                    <arg>
                      Nolabel
                      expression (src/RandomSentenceGenerator.ml[30,1351+2]..src/RandomSentenceGenerator.ml[30,1351+3])
                        Texp_ident "i/505"
                    <arg>
                      Nolabel
                      expression (src/RandomSentenceGenerator.ml[30,1351+6]..src/RandomSentenceGenerator.ml[30,1351+28])
                        Texp_apply
                        expression (src/RandomSentenceGenerator.ml[30,1351+6]..src/RandomSentenceGenerator.ml[30,1351+16])
                          Texp_ident "Stdlib!.Random.int"
                        [
                          <arg>
                            Nolabel
                            expression (src/RandomSentenceGenerator.ml[30,1351+17]..src/RandomSentenceGenerator.ml[30,1351+28])
                              Texp_apply
                              expression (src/RandomSentenceGenerator.ml[30,1351+24]..src/RandomSentenceGenerator.ml[30,1351+25])
                                Texp_ident "Stdlib!.+"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/RandomSentenceGenerator.ml[30,1351+18]..src/RandomSentenceGenerator.ml[30,1351+23])
                                    Texp_apply
                                    expression (src/RandomSentenceGenerator.ml[30,1351+20]..src/RandomSentenceGenerator.ml[30,1351+21])
                                      Texp_ident "Stdlib!.-"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/RandomSentenceGenerator.ml[30,1351+18]..src/RandomSentenceGenerator.ml[30,1351+19])
                                          Texp_ident "j/506"
                                      <arg>
                                        Nolabel
                                        expression (src/RandomSentenceGenerator.ml[30,1351+22]..src/RandomSentenceGenerator.ml[30,1351+23])
                                          Texp_ident "i/505"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/RandomSentenceGenerator.ml[30,1351+26]..src/RandomSentenceGenerator.ml[30,1351+27])
                                    Texp_constant Const_int 1
                              ]
                        ]
                  ]
          ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[36,1512+0]..src/RandomSentenceGenerator.ml[37,1527+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[36,1512+4]..src/RandomSentenceGenerator.ml[36,1512+12])
          Tpat_var "infinity/508"
        expression (src/RandomSentenceGenerator.ml[37,1527+2]..src/RandomSentenceGenerator.ml[37,1527+9])
          Texp_ident "Stdlib!.max_int"
    ]
  structure_item (src/RandomSentenceGenerator.ml[39,1538+0]..src/RandomSentenceGenerator.ml[40,1556+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[39,1538+4]..src/RandomSentenceGenerator.ml[39,1538+11])
          Tpat_var "between/509"
        expression (src/RandomSentenceGenerator.ml[39,1538+12]..src/RandomSentenceGenerator.ml[40,1556+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/RandomSentenceGenerator.ml[39,1538+12]..src/RandomSentenceGenerator.ml[39,1538+13])
                Tpat_var "i/511"
              expression (src/RandomSentenceGenerator.ml[39,1538+14]..src/RandomSentenceGenerator.ml[40,1556+8]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/RandomSentenceGenerator.ml[39,1538+14]..src/RandomSentenceGenerator.ml[39,1538+15])
                      Tpat_var "j/512"
                    expression (src/RandomSentenceGenerator.ml[40,1556+2]..src/RandomSentenceGenerator.ml[40,1556+8])
                      Texp_tuple
                      [
                        expression (src/RandomSentenceGenerator.ml[40,1556+3]..src/RandomSentenceGenerator.ml[40,1556+4])
                          Texp_ident "i/511"
                        expression (src/RandomSentenceGenerator.ml[40,1556+6]..src/RandomSentenceGenerator.ml[40,1556+7])
                          Texp_ident "j/512"
                      ]
                ]
          ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[42,1566+0]..src/RandomSentenceGenerator.ml[43,1583+20])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[42,1566+4]..src/RandomSentenceGenerator.ml[42,1566+12])
          Tpat_var "at_least/513"
        expression (src/RandomSentenceGenerator.ml[42,1566+13]..src/RandomSentenceGenerator.ml[43,1583+20]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/RandomSentenceGenerator.ml[42,1566+13]..src/RandomSentenceGenerator.ml[42,1566+14])
                Tpat_var "i/515"
              expression (src/RandomSentenceGenerator.ml[43,1583+2]..src/RandomSentenceGenerator.ml[43,1583+20])
                Texp_apply
                expression (src/RandomSentenceGenerator.ml[43,1583+2]..src/RandomSentenceGenerator.ml[43,1583+9])
                  Texp_ident "between/509"
                [
                  <arg>
                    Nolabel
                    expression (src/RandomSentenceGenerator.ml[43,1583+10]..src/RandomSentenceGenerator.ml[43,1583+11])
                      Texp_ident "i/515"
                  <arg>
                    Nolabel
                    expression (src/RandomSentenceGenerator.ml[43,1583+12]..src/RandomSentenceGenerator.ml[43,1583+20])
                      Texp_ident "infinity/508"
                ]
          ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[45,1605+0]..src/RandomSentenceGenerator.ml[46,1621+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[45,1605+4]..src/RandomSentenceGenerator.ml[45,1605+11])
          Tpat_var "at_most/516"
        expression (src/RandomSentenceGenerator.ml[45,1605+12]..src/RandomSentenceGenerator.ml[46,1621+13]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/RandomSentenceGenerator.ml[45,1605+12]..src/RandomSentenceGenerator.ml[45,1605+13])
                Tpat_var "j/518"
              expression (src/RandomSentenceGenerator.ml[46,1621+2]..src/RandomSentenceGenerator.ml[46,1621+13])
                Texp_apply
                expression (src/RandomSentenceGenerator.ml[46,1621+2]..src/RandomSentenceGenerator.ml[46,1621+9])
                  Texp_ident "between/509"
                [
                  <arg>
                    Nolabel
                    expression (src/RandomSentenceGenerator.ml[46,1621+10]..src/RandomSentenceGenerator.ml[46,1621+11])
                      Texp_constant Const_int 0
                  <arg>
                    Nolabel
                    expression (src/RandomSentenceGenerator.ml[46,1621+12]..src/RandomSentenceGenerator.ml[46,1621+13])
                      Texp_ident "j/518"
                ]
          ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[48,1636+0]..src/RandomSentenceGenerator.ml[49,1647+14])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[48,1636+4]..src/RandomSentenceGenerator.ml[48,1636+8])
          Tpat_var "full/519"
        expression (src/RandomSentenceGenerator.ml[49,1647+2]..src/RandomSentenceGenerator.ml[49,1647+14])
          Texp_tuple
          [
            expression (src/RandomSentenceGenerator.ml[49,1647+3]..src/RandomSentenceGenerator.ml[49,1647+4])
              Texp_constant Const_int 0
            expression (src/RandomSentenceGenerator.ml[49,1647+6]..src/RandomSentenceGenerator.ml[49,1647+13])
              Texp_ident "Stdlib!.max_int"
          ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[51,1663+0]..src/RandomSentenceGenerator.ml[52,1697+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[51,1663+4]..src/RandomSentenceGenerator.ml[51,1663+13])
          Tpat_var "intersect/520"
        expression (src/RandomSentenceGenerator.ml[51,1663+14]..src/RandomSentenceGenerator.ml[52,1697+24]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/RandomSentenceGenerator.ml[51,1663+14]..src/RandomSentenceGenerator.ml[51,1663+22])
                Tpat_tuple
                [
                  pattern (src/RandomSentenceGenerator.ml[51,1663+15]..src/RandomSentenceGenerator.ml[51,1663+17])
                    Tpat_var "i1/522"
                  pattern (src/RandomSentenceGenerator.ml[51,1663+19]..src/RandomSentenceGenerator.ml[51,1663+21])
                    Tpat_var "j1/523"
                ]
              expression (src/RandomSentenceGenerator.ml[51,1663+23]..src/RandomSentenceGenerator.ml[52,1697+24]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/RandomSentenceGenerator.ml[51,1663+23]..src/RandomSentenceGenerator.ml[51,1663+31])
                      Tpat_tuple
                      [
                        pattern (src/RandomSentenceGenerator.ml[51,1663+24]..src/RandomSentenceGenerator.ml[51,1663+26])
                          Tpat_var "i2/524"
                        pattern (src/RandomSentenceGenerator.ml[51,1663+28]..src/RandomSentenceGenerator.ml[51,1663+30])
                          Tpat_var "j2/525"
                      ]
                    expression (src/RandomSentenceGenerator.ml[52,1697+2]..src/RandomSentenceGenerator.ml[52,1697+24])
                      Texp_tuple
                      [
                        expression (src/RandomSentenceGenerator.ml[52,1697+3]..src/RandomSentenceGenerator.ml[52,1697+12])
                          Texp_apply
                          expression (src/RandomSentenceGenerator.ml[52,1697+3]..src/RandomSentenceGenerator.ml[52,1697+6])
                            Texp_ident "Stdlib!.max"
                          [
                            <arg>
                              Nolabel
                              expression (src/RandomSentenceGenerator.ml[52,1697+7]..src/RandomSentenceGenerator.ml[52,1697+9])
                                Texp_ident "i1/522"
                            <arg>
                              Nolabel
                              expression (src/RandomSentenceGenerator.ml[52,1697+10]..src/RandomSentenceGenerator.ml[52,1697+12])
                                Texp_ident "i2/524"
                          ]
                        expression (src/RandomSentenceGenerator.ml[52,1697+14]..src/RandomSentenceGenerator.ml[52,1697+23])
                          Texp_apply
                          expression (src/RandomSentenceGenerator.ml[52,1697+14]..src/RandomSentenceGenerator.ml[52,1697+17])
                            Texp_ident "Stdlib!.min"
                          [
                            <arg>
                              Nolabel
                              expression (src/RandomSentenceGenerator.ml[52,1697+18]..src/RandomSentenceGenerator.ml[52,1697+20])
                                Texp_ident "j1/523"
                            <arg>
                              Nolabel
                              expression (src/RandomSentenceGenerator.ml[52,1697+21]..src/RandomSentenceGenerator.ml[52,1697+23])
                                Texp_ident "j2/525"
                          ]
                      ]
                ]
          ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[54,1723+0]..src/RandomSentenceGenerator.ml[55,1749+41])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[54,1723+4]..src/RandomSentenceGenerator.ml[54,1723+13])
          Tpat_var "intersect/528"
        expression (src/RandomSentenceGenerator.ml[54,1723+14]..src/RandomSentenceGenerator.ml[55,1749+41]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/RandomSentenceGenerator.ml[54,1723+14]..src/RandomSentenceGenerator.ml[54,1723+23])
                Tpat_var "intervals/529"
              expression (src/RandomSentenceGenerator.ml[55,1749+2]..src/RandomSentenceGenerator.ml[55,1749+41])
                Texp_apply
                expression (src/RandomSentenceGenerator.ml[55,1749+2]..src/RandomSentenceGenerator.ml[55,1749+16])
                  Texp_ident "Stdlib!.List.fold_left"
                [
                  <arg>
                    Nolabel
                    expression (src/RandomSentenceGenerator.ml[55,1749+17]..src/RandomSentenceGenerator.ml[55,1749+26])
                      Texp_ident "intersect/520"
                  <arg>
                    Nolabel
                    expression (src/RandomSentenceGenerator.ml[55,1749+27]..src/RandomSentenceGenerator.ml[55,1749+31])
                      Texp_ident "full/519"
                  <arg>
                    Nolabel
                    expression (src/RandomSentenceGenerator.ml[55,1749+32]..src/RandomSentenceGenerator.ml[55,1749+41])
                      Texp_ident "intervals/529"
                ]
          ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[57,1792+0]..src/RandomSentenceGenerator.ml[58,1814+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[57,1792+4]..src/RandomSentenceGenerator.ml[57,1792+12])
          Tpat_var "nonempty/530"
        expression (src/RandomSentenceGenerator.ml[57,1792+13]..src/RandomSentenceGenerator.ml[58,1814+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/RandomSentenceGenerator.ml[57,1792+13]..src/RandomSentenceGenerator.ml[57,1792+19])
                Tpat_tuple
                [
                  pattern (src/RandomSentenceGenerator.ml[57,1792+14]..src/RandomSentenceGenerator.ml[57,1792+15])
                    Tpat_var "i/532"
                  pattern (src/RandomSentenceGenerator.ml[57,1792+17]..src/RandomSentenceGenerator.ml[57,1792+18])
                    Tpat_var "j/533"
                ]
              expression (src/RandomSentenceGenerator.ml[58,1814+2]..src/RandomSentenceGenerator.ml[58,1814+8])
                Texp_apply
                expression (src/RandomSentenceGenerator.ml[58,1814+4]..src/RandomSentenceGenerator.ml[58,1814+6])
                  Texp_ident "Stdlib!.<="
                [
                  <arg>
                    Nolabel
                    expression (src/RandomSentenceGenerator.ml[58,1814+2]..src/RandomSentenceGenerator.ml[58,1814+3])
                      Texp_ident "i/532"
                  <arg>
                    Nolabel
                    expression (src/RandomSentenceGenerator.ml[58,1814+7]..src/RandomSentenceGenerator.ml[58,1814+8])
                      Texp_ident "j/533"
                ]
          ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[64,1946+0]..src/RandomSentenceGenerator.ml[65,1959+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[64,1946+4]..src/RandomSentenceGenerator.ml[64,1946+10])
          Tpat_var "buffer/535"
        expression (src/RandomSentenceGenerator.ml[65,1959+2]..src/RandomSentenceGenerator.ml[65,1959+8])
          Texp_apply
          expression (src/RandomSentenceGenerator.ml[65,1959+2]..src/RandomSentenceGenerator.ml[65,1959+5])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (src/RandomSentenceGenerator.ml[65,1959+6]..src/RandomSentenceGenerator.ml[65,1959+8])
                Texp_construct "[]"
                []
          ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[67,1969+0]..src/RandomSentenceGenerator.ml[68,1984+26])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[67,1969+4]..src/RandomSentenceGenerator.ml[67,1969+8])
          Tpat_var "emit/536"
        expression (src/RandomSentenceGenerator.ml[67,1969+9]..src/RandomSentenceGenerator.ml[68,1984+26]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/RandomSentenceGenerator.ml[67,1969+9]..src/RandomSentenceGenerator.ml[67,1969+12])
                Tpat_var "tok/538"
              expression (src/RandomSentenceGenerator.ml[68,1984+2]..src/RandomSentenceGenerator.ml[68,1984+26])
                Texp_apply
                expression (src/RandomSentenceGenerator.ml[68,1984+9]..src/RandomSentenceGenerator.ml[68,1984+11])
                  Texp_ident "Stdlib!.:="
                [
                  <arg>
                    Nolabel
                    expression (src/RandomSentenceGenerator.ml[68,1984+2]..src/RandomSentenceGenerator.ml[68,1984+8])
                      Texp_ident "buffer/535"
                  <arg>
                    Nolabel
                    expression (src/RandomSentenceGenerator.ml[68,1984+12]..src/RandomSentenceGenerator.ml[68,1984+26])
                      Texp_construct "::"
                      [
                        expression (src/RandomSentenceGenerator.ml[68,1984+12]..src/RandomSentenceGenerator.ml[68,1984+15])
                          Texp_ident "tok/538"
                        expression (src/RandomSentenceGenerator.ml[68,1984+19]..src/RandomSentenceGenerator.ml[68,1984+26])
                          Texp_apply
                          expression (src/RandomSentenceGenerator.ml[68,1984+19]..src/RandomSentenceGenerator.ml[68,1984+20])
                            Texp_ident "Stdlib!.!"
                          [
                            <arg>
                              Nolabel
                              expression (src/RandomSentenceGenerator.ml[68,1984+20]..src/RandomSentenceGenerator.ml[68,1984+26])
                                Texp_ident "buffer/535"
                          ]
                      ]
                ]
          ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[70,2012+0]..src/RandomSentenceGenerator.ml[73,2067+15])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[70,2012+4]..src/RandomSentenceGenerator.ml[70,2012+9])
          Tpat_var "reset/539"
        expression (src/RandomSentenceGenerator.ml[70,2012+10]..src/RandomSentenceGenerator.ml[73,2067+15]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/RandomSentenceGenerator.ml[70,2012+10]..src/RandomSentenceGenerator.ml[70,2012+12])
                Tpat_construct "()"
                []
                None
              expression (src/RandomSentenceGenerator.ml[71,2027+2]..src/RandomSentenceGenerator.ml[73,2067+15])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/RandomSentenceGenerator.ml[71,2027+6]..src/RandomSentenceGenerator.ml[71,2027+10])
                      Tpat_var "toks/541"
                    expression (src/RandomSentenceGenerator.ml[71,2027+13]..src/RandomSentenceGenerator.ml[71,2027+20])
                      Texp_apply
                      expression (src/RandomSentenceGenerator.ml[71,2027+13]..src/RandomSentenceGenerator.ml[71,2027+14])
                        Texp_ident "Stdlib!.!"
                      [
                        <arg>
                          Nolabel
                          expression (src/RandomSentenceGenerator.ml[71,2027+14]..src/RandomSentenceGenerator.ml[71,2027+20])
                            Texp_ident "buffer/535"
                      ]
                ]
                expression (src/RandomSentenceGenerator.ml[72,2051+2]..src/RandomSentenceGenerator.ml[73,2067+15])
                  Texp_sequence
                  expression (src/RandomSentenceGenerator.ml[72,2051+2]..src/RandomSentenceGenerator.ml[72,2051+14])
                    Texp_apply
                    expression (src/RandomSentenceGenerator.ml[72,2051+9]..src/RandomSentenceGenerator.ml[72,2051+11])
                      Texp_ident "Stdlib!.:="
                    [
                      <arg>
                        Nolabel
                        expression (src/RandomSentenceGenerator.ml[72,2051+2]..src/RandomSentenceGenerator.ml[72,2051+8])
                          Texp_ident "buffer/535"
                      <arg>
                        Nolabel
                        expression (src/RandomSentenceGenerator.ml[72,2051+12]..src/RandomSentenceGenerator.ml[72,2051+14])
                          Texp_construct "[]"
                          []
                    ]
                  expression (src/RandomSentenceGenerator.ml[73,2067+2]..src/RandomSentenceGenerator.ml[73,2067+15])
                    Texp_apply
                    expression (src/RandomSentenceGenerator.ml[73,2067+2]..src/RandomSentenceGenerator.ml[73,2067+10])
                      Texp_ident "Stdlib!.List.rev"
                    [
                      <arg>
                        Nolabel
                        expression (src/RandomSentenceGenerator.ml[73,2067+11]..src/RandomSentenceGenerator.ml[73,2067+15])
                          Texp_ident "toks/541"
                    ]
          ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[82,2415+0]..src/RandomSentenceGenerator.ml[173,6157+5])
    Tstr_value Rec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[82,2415+8]..src/RandomSentenceGenerator.ml[82,2415+19])
          Tpat_var "nonterminal/543"
        expression (src/RandomSentenceGenerator.ml[82,2415+20]..src/RandomSentenceGenerator.ml[116,3932+38]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/RandomSentenceGenerator.ml[82,2415+20]..src/RandomSentenceGenerator.ml[82,2415+22])
                Tpat_var "nt/545"
              expression (src/RandomSentenceGenerator.ml[82,2415+23]..src/RandomSentenceGenerator.ml[116,3932+38]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/RandomSentenceGenerator.ml[82,2415+23]..src/RandomSentenceGenerator.ml[82,2415+27])
                      Tpat_var "goal/546"
                    expression (src/RandomSentenceGenerator.ml[82,2415+28]..src/RandomSentenceGenerator.ml[116,3932+38]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/RandomSentenceGenerator.ml[82,2415+28]..src/RandomSentenceGenerator.ml[82,2415+29])
                            Tpat_var "k/547"
                          expression (src/RandomSentenceGenerator.ml[83,2454+2]..src/RandomSentenceGenerator.ml[116,3932+38])
                            extra
                              Texp_constraint
                              core_type (src/RandomSentenceGenerator.ml[82,2415+32]..src/RandomSentenceGenerator.ml[82,2415+36])
                                Ttyp_constr "unit/6!"
                                []
                            Texp_sequence
                            expression (src/RandomSentenceGenerator.ml[83,2454+2]..src/RandomSentenceGenerator.ml[83,2454+38])
                              Texp_assert                              expression (src/RandomSentenceGenerator.ml[83,2454+9]..src/RandomSentenceGenerator.ml[83,2454+38])
                                Texp_apply
                                expression (src/RandomSentenceGenerator.ml[83,2454+30]..src/RandomSentenceGenerator.ml[83,2454+32])
                                  Texp_ident "Stdlib!.<="
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/RandomSentenceGenerator.ml[83,2454+10]..src/RandomSentenceGenerator.ml[83,2454+29])
                                      Texp_apply
                                      expression (src/RandomSentenceGenerator.ml[83,2454+10]..src/RandomSentenceGenerator.ml[83,2454+26])
                                        Texp_ident "Dune__exe!.Grammar.Analysis.minimal"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/RandomSentenceGenerator.ml[83,2454+27]..src/RandomSentenceGenerator.ml[83,2454+29])
                                            Texp_ident "nt/545"
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/RandomSentenceGenerator.ml[83,2454+33]..src/RandomSentenceGenerator.ml[83,2454+37])
                                      Texp_ident "goal/546"
                                ]
                            expression (src/RandomSentenceGenerator.ml[84,2494+2]..src/RandomSentenceGenerator.ml[116,3932+38])
                              Texp_sequence
                              expression (src/RandomSentenceGenerator.ml[84,2494+2]..src/RandomSentenceGenerator.ml[84,2494+38])
                                Texp_assert                                expression (src/RandomSentenceGenerator.ml[84,2494+9]..src/RandomSentenceGenerator.ml[84,2494+38])
                                  Texp_apply
                                  expression (src/RandomSentenceGenerator.ml[84,2494+15]..src/RandomSentenceGenerator.ml[84,2494+17])
                                    Texp_ident "Stdlib!.<="
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/RandomSentenceGenerator.ml[84,2494+10]..src/RandomSentenceGenerator.ml[84,2494+14])
                                        Texp_ident "goal/546"
                                    <arg>
                                      Nolabel
                                      expression (src/RandomSentenceGenerator.ml[84,2494+18]..src/RandomSentenceGenerator.ml[84,2494+37])
                                        Texp_apply
                                        expression (src/RandomSentenceGenerator.ml[84,2494+18]..src/RandomSentenceGenerator.ml[84,2494+34])
                                          Texp_ident "Dune__exe!.Grammar.Analysis.maximal"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/RandomSentenceGenerator.ml[84,2494+35]..src/RandomSentenceGenerator.ml[84,2494+37])
                                              Texp_ident "nt/545"
                                        ]
                                  ]
                              expression (src/RandomSentenceGenerator.ml[102,3505+2]..src/RandomSentenceGenerator.ml[116,3932+38])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (src/RandomSentenceGenerator.ml[102,3505+6]..src/RandomSentenceGenerator.ml[102,3505+11])
                                      Tpat_var "prods/598"
                                    expression (src/RandomSentenceGenerator.ml[103,3519+4]..src/RandomSentenceGenerator.ml[109,3733+8])
                                      Texp_apply
                                      expression (src/RandomSentenceGenerator.ml[103,3519+4]..src/RandomSentenceGenerator.ml[103,3519+21])
                                        Texp_ident "Dune__exe!.Grammar.Production.foldnt"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/RandomSentenceGenerator.ml[103,3519+22]..src/RandomSentenceGenerator.ml[103,3519+24])
                                            Texp_ident "nt/545"
                                        <arg>
                                          Nolabel
                                          expression (src/RandomSentenceGenerator.ml[103,3519+25]..src/RandomSentenceGenerator.ml[109,3733+5])
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (src/RandomSentenceGenerator.ml[103,3519+30]..src/RandomSentenceGenerator.ml[103,3519+34])
                                                  Tpat_var "prod/633"
                                                expression (src/RandomSentenceGenerator.ml[103,3519+35]..src/RandomSentenceGenerator.ml[108,3716+16]) ghost
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (src/RandomSentenceGenerator.ml[103,3519+35]..src/RandomSentenceGenerator.ml[103,3519+40])
                                                        Tpat_var "prods/634"
                                                      expression (src/RandomSentenceGenerator.ml[104,3563+6]..src/RandomSentenceGenerator.ml[108,3716+16])
                                                        Texp_ifthenelse
                                                        expression (src/RandomSentenceGenerator.ml[104,3563+9]..src/RandomSentenceGenerator.ml[106,3645+45])
                                                          Texp_apply
                                                          expression (src/RandomSentenceGenerator.ml[105,3599+6]..src/RandomSentenceGenerator.ml[105,3599+8])
                                                            Texp_ident "Stdlib!.&&"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/RandomSentenceGenerator.ml[104,3563+9]..src/RandomSentenceGenerator.ml[104,3563+35])
                                                                Texp_apply
                                                                expression (src/RandomSentenceGenerator.ml[104,3563+9]..src/RandomSentenceGenerator.ml[104,3563+30])
                                                                  Texp_ident "Dune__exe!.Grammar.Production.error_free"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/RandomSentenceGenerator.ml[104,3563+31]..src/RandomSentenceGenerator.ml[104,3563+35])
                                                                      Texp_ident "prod/633"
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (src/RandomSentenceGenerator.ml[105,3599+9]..src/RandomSentenceGenerator.ml[106,3645+45])
                                                                Texp_apply
                                                                expression (src/RandomSentenceGenerator.ml[106,3645+6]..src/RandomSentenceGenerator.ml[106,3645+8])
                                                                  Texp_ident "Stdlib!.&&"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/RandomSentenceGenerator.ml[105,3599+9]..src/RandomSentenceGenerator.ml[105,3599+45])
                                                                      Texp_apply
                                                                      expression (src/RandomSentenceGenerator.ml[105,3599+38]..src/RandomSentenceGenerator.ml[105,3599+40])
                                                                        Texp_ident "Stdlib!.<="
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/RandomSentenceGenerator.ml[105,3599+9]..src/RandomSentenceGenerator.ml[105,3599+37])
                                                                            Texp_apply
                                                                            expression (src/RandomSentenceGenerator.ml[105,3599+9]..src/RandomSentenceGenerator.ml[105,3599+30])
                                                                              Texp_ident "Dune__exe!.Grammar.Analysis.minimal_prod"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/RandomSentenceGenerator.ml[105,3599+31]..src/RandomSentenceGenerator.ml[105,3599+35])
                                                                                  Texp_ident "prod/633"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/RandomSentenceGenerator.ml[105,3599+36]..src/RandomSentenceGenerator.ml[105,3599+37])
                                                                                  Texp_constant Const_int 0
                                                                            ]
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/RandomSentenceGenerator.ml[105,3599+41]..src/RandomSentenceGenerator.ml[105,3599+45])
                                                                            Texp_ident "goal/546"
                                                                      ]
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/RandomSentenceGenerator.ml[106,3645+9]..src/RandomSentenceGenerator.ml[106,3645+45])
                                                                      Texp_apply
                                                                      expression (src/RandomSentenceGenerator.ml[106,3645+14]..src/RandomSentenceGenerator.ml[106,3645+16])
                                                                        Texp_ident "Stdlib!.<="
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/RandomSentenceGenerator.ml[106,3645+9]..src/RandomSentenceGenerator.ml[106,3645+13])
                                                                            Texp_ident "goal/546"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/RandomSentenceGenerator.ml[106,3645+17]..src/RandomSentenceGenerator.ml[106,3645+45])
                                                                            Texp_apply
                                                                            expression (src/RandomSentenceGenerator.ml[106,3645+17]..src/RandomSentenceGenerator.ml[106,3645+38])
                                                                              Texp_ident "Dune__exe!.Grammar.Analysis.maximal_prod"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/RandomSentenceGenerator.ml[106,3645+39]..src/RandomSentenceGenerator.ml[106,3645+43])
                                                                                  Texp_ident "prod/633"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/RandomSentenceGenerator.ml[106,3645+44]..src/RandomSentenceGenerator.ml[106,3645+45])
                                                                                  Texp_constant Const_int 0
                                                                            ]
                                                                      ]
                                                                ]
                                                          ]
                                                        expression (src/RandomSentenceGenerator.ml[107,3691+11]..src/RandomSentenceGenerator.ml[107,3691+24])
                                                          Texp_construct "::"
                                                          [
                                                            expression (src/RandomSentenceGenerator.ml[107,3691+11]..src/RandomSentenceGenerator.ml[107,3691+15])
                                                              Texp_ident "prod/633"
                                                            expression (src/RandomSentenceGenerator.ml[107,3691+19]..src/RandomSentenceGenerator.ml[107,3691+24])
                                                              Texp_ident "prods/634"
                                                          ]
                                                        Some
                                                          expression (src/RandomSentenceGenerator.ml[108,3716+11]..src/RandomSentenceGenerator.ml[108,3716+16])
                                                            Texp_ident "prods/634"
                                                  ]
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/RandomSentenceGenerator.ml[109,3733+6]..src/RandomSentenceGenerator.ml[109,3733+8])
                                            Texp_construct "[]"
                                            []
                                      ]
                                ]
                                expression (src/RandomSentenceGenerator.ml[111,3747+2]..src/RandomSentenceGenerator.ml[116,3932+38])
                                  Texp_ifthenelse
                                  expression (src/RandomSentenceGenerator.ml[111,3747+5]..src/RandomSentenceGenerator.ml[111,3747+15])
                                    Texp_apply
                                    expression (src/RandomSentenceGenerator.ml[111,3747+11]..src/RandomSentenceGenerator.ml[111,3747+12])
                                      Texp_ident "Stdlib!.="
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/RandomSentenceGenerator.ml[111,3747+5]..src/RandomSentenceGenerator.ml[111,3747+10])
                                          Texp_ident "prods/598"
                                      <arg>
                                        Nolabel
                                        expression (src/RandomSentenceGenerator.ml[111,3747+13]..src/RandomSentenceGenerator.ml[111,3747+15])
                                          Texp_construct "[]"
                                          []
                                    ]
                                  expression (src/RandomSentenceGenerator.ml[113,3830+4]..src/RandomSentenceGenerator.ml[113,3830+42])
                                    Texp_apply
                                    expression (src/RandomSentenceGenerator.ml[113,3830+4]..src/RandomSentenceGenerator.ml[113,3830+15])
                                      Texp_ident "nonterminal/543"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/RandomSentenceGenerator.ml[113,3830+16]..src/RandomSentenceGenerator.ml[113,3830+18])
                                          Texp_ident "nt/545"
                                      <arg>
                                        Nolabel
                                        expression (src/RandomSentenceGenerator.ml[113,3830+19]..src/RandomSentenceGenerator.ml[113,3830+40])
                                          Texp_apply
                                          expression (src/RandomSentenceGenerator.ml[113,3830+20]..src/RandomSentenceGenerator.ml[113,3830+36])
                                            Texp_ident "Dune__exe!.Grammar.Analysis.minimal"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/RandomSentenceGenerator.ml[113,3830+37]..src/RandomSentenceGenerator.ml[113,3830+39])
                                                Texp_ident "nt/545"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/RandomSentenceGenerator.ml[113,3830+41]..src/RandomSentenceGenerator.ml[113,3830+42])
                                          Texp_ident "k/547"
                                    ]
                                  Some
                                    expression (src/RandomSentenceGenerator.ml[116,3932+4]..src/RandomSentenceGenerator.ml[116,3932+38])
                                      Texp_apply
                                      expression (src/RandomSentenceGenerator.ml[116,3932+4]..src/RandomSentenceGenerator.ml[116,3932+14])
                                        Texp_ident "production/544"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/RandomSentenceGenerator.ml[116,3932+15]..src/RandomSentenceGenerator.ml[116,3932+29])
                                            Texp_apply
                                            expression (src/RandomSentenceGenerator.ml[116,3932+16]..src/RandomSentenceGenerator.ml[116,3932+22])
                                              Texp_ident "choose/414"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/RandomSentenceGenerator.ml[116,3932+23]..src/RandomSentenceGenerator.ml[116,3932+28])
                                                  Texp_ident "prods/598"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/RandomSentenceGenerator.ml[116,3932+30]..src/RandomSentenceGenerator.ml[116,3932+31])
                                            Texp_constant Const_int 0
                                        <arg>
                                          Nolabel
                                          expression (src/RandomSentenceGenerator.ml[116,3932+32]..src/RandomSentenceGenerator.ml[116,3932+36])
                                            Texp_ident "goal/546"
                                        <arg>
                                          Nolabel
                                          expression (src/RandomSentenceGenerator.ml[116,3932+37]..src/RandomSentenceGenerator.ml[116,3932+38])
                                            Texp_ident "k/547"
                                      ]
                      ]
                ]
          ]
      <def>
        pattern (src/RandomSentenceGenerator.ml[122,4156+4]..src/RandomSentenceGenerator.ml[122,4156+14])
          Tpat_var "production/544"
        expression (src/RandomSentenceGenerator.ml[122,4156+15]..src/RandomSentenceGenerator.ml[173,6157+5]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/RandomSentenceGenerator.ml[122,4156+15]..src/RandomSentenceGenerator.ml[122,4156+19])
                Tpat_var "prod/669"
              expression (src/RandomSentenceGenerator.ml[122,4156+20]..src/RandomSentenceGenerator.ml[173,6157+5]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/RandomSentenceGenerator.ml[122,4156+20]..src/RandomSentenceGenerator.ml[122,4156+21])
                      Tpat_var "i/670"
                    expression (src/RandomSentenceGenerator.ml[122,4156+22]..src/RandomSentenceGenerator.ml[173,6157+5]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/RandomSentenceGenerator.ml[122,4156+22]..src/RandomSentenceGenerator.ml[122,4156+26])
                            Tpat_var "goal/671"
                          expression (src/RandomSentenceGenerator.ml[122,4156+27]..src/RandomSentenceGenerator.ml[173,6157+5]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/RandomSentenceGenerator.ml[122,4156+27]..src/RandomSentenceGenerator.ml[122,4156+28])
                                  Tpat_var "k/672"
                                expression (src/RandomSentenceGenerator.ml[123,4194+2]..src/RandomSentenceGenerator.ml[173,6157+5])
                                  extra
                                    Texp_constraint
                                    core_type (src/RandomSentenceGenerator.ml[122,4156+31]..src/RandomSentenceGenerator.ml[122,4156+35])
                                      Ttyp_constr "unit/6!"
                                      []
                                  Texp_sequence
                                  expression (src/RandomSentenceGenerator.ml[123,4194+2]..src/RandomSentenceGenerator.ml[123,4194+47])
                                    Texp_assert                                    expression (src/RandomSentenceGenerator.ml[123,4194+9]..src/RandomSentenceGenerator.ml[123,4194+47])
                                      Texp_apply
                                      expression (src/RandomSentenceGenerator.ml[123,4194+39]..src/RandomSentenceGenerator.ml[123,4194+41])
                                        Texp_ident "Stdlib!.<="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/RandomSentenceGenerator.ml[123,4194+10]..src/RandomSentenceGenerator.ml[123,4194+38])
                                            Texp_apply
                                            expression (src/RandomSentenceGenerator.ml[123,4194+10]..src/RandomSentenceGenerator.ml[123,4194+31])
                                              Texp_ident "Dune__exe!.Grammar.Analysis.minimal_prod"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/RandomSentenceGenerator.ml[123,4194+32]..src/RandomSentenceGenerator.ml[123,4194+36])
                                                  Texp_ident "prod/669"
                                              <arg>
                                                Nolabel
                                                expression (src/RandomSentenceGenerator.ml[123,4194+37]..src/RandomSentenceGenerator.ml[123,4194+38])
                                                  Texp_ident "i/670"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/RandomSentenceGenerator.ml[123,4194+42]..src/RandomSentenceGenerator.ml[123,4194+46])
                                            Texp_ident "goal/671"
                                      ]
                                  expression (src/RandomSentenceGenerator.ml[124,4243+2]..src/RandomSentenceGenerator.ml[173,6157+5])
                                    Texp_sequence
                                    expression (src/RandomSentenceGenerator.ml[124,4243+2]..src/RandomSentenceGenerator.ml[124,4243+47])
                                      Texp_assert                                      expression (src/RandomSentenceGenerator.ml[124,4243+9]..src/RandomSentenceGenerator.ml[124,4243+47])
                                        Texp_apply
                                        expression (src/RandomSentenceGenerator.ml[124,4243+15]..src/RandomSentenceGenerator.ml[124,4243+17])
                                          Texp_ident "Stdlib!.<="
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/RandomSentenceGenerator.ml[124,4243+10]..src/RandomSentenceGenerator.ml[124,4243+14])
                                              Texp_ident "goal/671"
                                          <arg>
                                            Nolabel
                                            expression (src/RandomSentenceGenerator.ml[124,4243+18]..src/RandomSentenceGenerator.ml[124,4243+46])
                                              Texp_apply
                                              expression (src/RandomSentenceGenerator.ml[124,4243+18]..src/RandomSentenceGenerator.ml[124,4243+39])
                                                Texp_ident "Dune__exe!.Grammar.Analysis.maximal_prod"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/RandomSentenceGenerator.ml[124,4243+40]..src/RandomSentenceGenerator.ml[124,4243+44])
                                                    Texp_ident "prod/669"
                                                <arg>
                                                  Nolabel
                                                  expression (src/RandomSentenceGenerator.ml[124,4243+45]..src/RandomSentenceGenerator.ml[124,4243+46])
                                                    Texp_ident "i/670"
                                              ]
                                        ]
                                    expression (src/RandomSentenceGenerator.ml[125,4292+2]..src/RandomSentenceGenerator.ml[173,6157+5])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/RandomSentenceGenerator.ml[125,4292+6]..src/RandomSentenceGenerator.ml[125,4292+7])
                                            Tpat_var "n/673"
                                          expression (src/RandomSentenceGenerator.ml[125,4292+10]..src/RandomSentenceGenerator.ml[125,4292+32])
                                            Texp_apply
                                            expression (src/RandomSentenceGenerator.ml[125,4292+10]..src/RandomSentenceGenerator.ml[125,4292+27])
                                              Texp_ident "Dune__exe!.Grammar.Production.length"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/RandomSentenceGenerator.ml[125,4292+28]..src/RandomSentenceGenerator.ml[125,4292+32])
                                                  Texp_ident "prod/669"
                                            ]
                                      ]
                                      expression (src/RandomSentenceGenerator.ml[126,4328+2]..src/RandomSentenceGenerator.ml[173,6157+5])
                                        Texp_sequence
                                        expression (src/RandomSentenceGenerator.ml[126,4328+2]..src/RandomSentenceGenerator.ml[126,4328+27])
                                          Texp_assert                                          expression (src/RandomSentenceGenerator.ml[126,4328+9]..src/RandomSentenceGenerator.ml[126,4328+27])
                                            Texp_apply
                                            expression (src/RandomSentenceGenerator.ml[126,4328+17]..src/RandomSentenceGenerator.ml[126,4328+19])
                                              Texp_ident "Stdlib!.&&"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/RandomSentenceGenerator.ml[126,4328+10]..src/RandomSentenceGenerator.ml[126,4328+16])
                                                  Texp_apply
                                                  expression (src/RandomSentenceGenerator.ml[126,4328+12]..src/RandomSentenceGenerator.ml[126,4328+14])
                                                    Texp_ident "Stdlib!.<="
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/RandomSentenceGenerator.ml[126,4328+10]..src/RandomSentenceGenerator.ml[126,4328+11])
                                                        Texp_constant Const_int 0
                                                    <arg>
                                                      Nolabel
                                                      expression (src/RandomSentenceGenerator.ml[126,4328+15]..src/RandomSentenceGenerator.ml[126,4328+16])
                                                        Texp_ident "i/670"
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (src/RandomSentenceGenerator.ml[126,4328+20]..src/RandomSentenceGenerator.ml[126,4328+26])
                                                  Texp_apply
                                                  expression (src/RandomSentenceGenerator.ml[126,4328+22]..src/RandomSentenceGenerator.ml[126,4328+24])
                                                    Texp_ident "Stdlib!.<="
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/RandomSentenceGenerator.ml[126,4328+20]..src/RandomSentenceGenerator.ml[126,4328+21])
                                                        Texp_ident "i/670"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/RandomSentenceGenerator.ml[126,4328+25]..src/RandomSentenceGenerator.ml[126,4328+26])
                                                        Texp_ident "n/673"
                                                  ]
                                            ]
                                        expression (src/RandomSentenceGenerator.ml[127,4357+2]..src/RandomSentenceGenerator.ml[173,6157+5])
                                          Texp_ifthenelse
                                          expression (src/RandomSentenceGenerator.ml[127,4357+5]..src/RandomSentenceGenerator.ml[127,4357+10])
                                            Texp_apply
                                            expression (src/RandomSentenceGenerator.ml[127,4357+7]..src/RandomSentenceGenerator.ml[127,4357+8])
                                              Texp_ident "Stdlib!.="
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/RandomSentenceGenerator.ml[127,4357+5]..src/RandomSentenceGenerator.ml[127,4357+6])
                                                  Texp_ident "i/670"
                                              <arg>
                                                Nolabel
                                                expression (src/RandomSentenceGenerator.ml[127,4357+9]..src/RandomSentenceGenerator.ml[127,4357+10])
                                                  Texp_ident "n/673"
                                            ]
                                          expression (src/RandomSentenceGenerator.ml[127,4357+16]..src/RandomSentenceGenerator.ml[130,4410+5])
                                            Texp_sequence
                                            expression (src/RandomSentenceGenerator.ml[128,4379+4]..src/RandomSentenceGenerator.ml[128,4379+21])
                                              Texp_assert                                              expression (src/RandomSentenceGenerator.ml[128,4379+11]..src/RandomSentenceGenerator.ml[128,4379+21])
                                                Texp_apply
                                                expression (src/RandomSentenceGenerator.ml[128,4379+17]..src/RandomSentenceGenerator.ml[128,4379+18])
                                                  Texp_ident "Stdlib!.="
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/RandomSentenceGenerator.ml[128,4379+12]..src/RandomSentenceGenerator.ml[128,4379+16])
                                                      Texp_ident "goal/671"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/RandomSentenceGenerator.ml[128,4379+19]..src/RandomSentenceGenerator.ml[128,4379+20])
                                                      Texp_constant Const_int 0
                                                ]
                                            expression (src/RandomSentenceGenerator.ml[129,4402+4]..src/RandomSentenceGenerator.ml[129,4402+7])
                                              Texp_apply
                                              expression (src/RandomSentenceGenerator.ml[129,4402+4]..src/RandomSentenceGenerator.ml[129,4402+5])
                                                Texp_ident "k/672"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/RandomSentenceGenerator.ml[129,4402+5]..src/RandomSentenceGenerator.ml[129,4402+7])
                                                    Texp_construct "()"
                                                    []
                                              ]
                                          Some
                                            expression (src/RandomSentenceGenerator.ml[131,4416+7]..src/RandomSentenceGenerator.ml[173,6157+5])
                                              Texp_ifthenelse
                                              expression (src/RandomSentenceGenerator.ml[131,4416+10]..src/RandomSentenceGenerator.ml[131,4416+15])
                                                Texp_apply
                                                expression (src/RandomSentenceGenerator.ml[131,4416+12]..src/RandomSentenceGenerator.ml[131,4416+13])
                                                  Texp_ident "Stdlib!.<"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/RandomSentenceGenerator.ml[131,4416+10]..src/RandomSentenceGenerator.ml[131,4416+11])
                                                      Texp_ident "i/670"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/RandomSentenceGenerator.ml[131,4416+14]..src/RandomSentenceGenerator.ml[131,4416+15])
                                                      Texp_ident "n/673"
                                                ]
                                              expression (src/RandomSentenceGenerator.ml[131,4416+21]..src/RandomSentenceGenerator.ml[173,6157+5])
                                                Texp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (src/RandomSentenceGenerator.ml[132,4443+8]..src/RandomSentenceGenerator.ml[132,4443+11])
                                                      Tpat_var "rhs/674"
                                                    expression (src/RandomSentenceGenerator.ml[132,4443+14]..src/RandomSentenceGenerator.ml[132,4443+33])
                                                      Texp_apply
                                                      expression (src/RandomSentenceGenerator.ml[132,4443+14]..src/RandomSentenceGenerator.ml[132,4443+28])
                                                        Texp_ident "Dune__exe!.Grammar.Production.rhs"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/RandomSentenceGenerator.ml[132,4443+29]..src/RandomSentenceGenerator.ml[132,4443+33])
                                                            Texp_ident "prod/669"
                                                      ]
                                                ]
                                                expression (src/RandomSentenceGenerator.ml[133,4480+4]..src/RandomSentenceGenerator.ml[172,6116+40])
                                                  Texp_match
                                                  expression (src/RandomSentenceGenerator.ml[133,4480+10]..src/RandomSentenceGenerator.ml[133,4480+17])
                                                    Texp_apply
                                                    expression (src/RandomSentenceGenerator.ml[133,4480+10]..src/RandomSentenceGenerator.ml[133,4480+17]) ghost
                                                      Texp_ident "Stdlib!.Array.get"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/RandomSentenceGenerator.ml[133,4480+10]..src/RandomSentenceGenerator.ml[133,4480+13])
                                                          Texp_ident "rhs/674"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/RandomSentenceGenerator.ml[133,4480+15]..src/RandomSentenceGenerator.ml[133,4480+16])
                                                          Texp_ident "i/670"
                                                    ]
                                                  [
                                                    <case>
                                                      pattern (src/RandomSentenceGenerator.ml[134,4503+6]..src/RandomSentenceGenerator.ml[134,4503+18])
                                                        Tpat_value
                                                        pattern (src/RandomSentenceGenerator.ml[134,4503+6]..src/RandomSentenceGenerator.ml[134,4503+18])
                                                          Tpat_construct "Symbol.T"
                                                          [
                                                            pattern (src/RandomSentenceGenerator.ml[134,4503+15]..src/RandomSentenceGenerator.ml[134,4503+18])
                                                              Tpat_var "tok/745"
                                                          ]
                                                          None
                                                      expression (src/RandomSentenceGenerator.ml[136,4575+8]..src/RandomSentenceGenerator.ml[137,4593+44])
                                                        Texp_sequence
                                                        expression (src/RandomSentenceGenerator.ml[136,4575+8]..src/RandomSentenceGenerator.ml[136,4575+16])
                                                          Texp_apply
                                                          expression (src/RandomSentenceGenerator.ml[136,4575+8]..src/RandomSentenceGenerator.ml[136,4575+12])
                                                            Texp_ident "emit/536"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/RandomSentenceGenerator.ml[136,4575+13]..src/RandomSentenceGenerator.ml[136,4575+16])
                                                                Texp_ident "tok/745"
                                                          ]
                                                        expression (src/RandomSentenceGenerator.ml[137,4593+8]..src/RandomSentenceGenerator.ml[137,4593+44])
                                                          Texp_apply
                                                          expression (src/RandomSentenceGenerator.ml[137,4593+8]..src/RandomSentenceGenerator.ml[137,4593+18])
                                                            Texp_ident "production/544"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/RandomSentenceGenerator.ml[137,4593+19]..src/RandomSentenceGenerator.ml[137,4593+23])
                                                                Texp_ident "prod/669"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/RandomSentenceGenerator.ml[137,4593+24]..src/RandomSentenceGenerator.ml[137,4593+31])
                                                                Texp_apply
                                                                expression (src/RandomSentenceGenerator.ml[137,4593+27]..src/RandomSentenceGenerator.ml[137,4593+28])
                                                                  Texp_ident "Stdlib!.+"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/RandomSentenceGenerator.ml[137,4593+25]..src/RandomSentenceGenerator.ml[137,4593+26])
                                                                      Texp_ident "i/670"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/RandomSentenceGenerator.ml[137,4593+29]..src/RandomSentenceGenerator.ml[137,4593+30])
                                                                      Texp_constant Const_int 1
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (src/RandomSentenceGenerator.ml[137,4593+32]..src/RandomSentenceGenerator.ml[137,4593+42])
                                                                Texp_apply
                                                                expression (src/RandomSentenceGenerator.ml[137,4593+38]..src/RandomSentenceGenerator.ml[137,4593+39])
                                                                  Texp_ident "Stdlib!.-"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/RandomSentenceGenerator.ml[137,4593+33]..src/RandomSentenceGenerator.ml[137,4593+37])
                                                                      Texp_ident "goal/671"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/RandomSentenceGenerator.ml[137,4593+40]..src/RandomSentenceGenerator.ml[137,4593+41])
                                                                      Texp_constant Const_int 1
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (src/RandomSentenceGenerator.ml[137,4593+43]..src/RandomSentenceGenerator.ml[137,4593+44])
                                                                Texp_ident "k/672"
                                                          ]
                                                    <case>
                                                      pattern (src/RandomSentenceGenerator.ml[138,4638+6]..src/RandomSentenceGenerator.ml[138,4638+17])
                                                        Tpat_value
                                                        pattern (src/RandomSentenceGenerator.ml[138,4638+6]..src/RandomSentenceGenerator.ml[138,4638+17])
                                                          Tpat_construct "Symbol.N"
                                                          [
                                                            pattern (src/RandomSentenceGenerator.ml[138,4638+15]..src/RandomSentenceGenerator.ml[138,4638+17])
                                                              Tpat_var "nt/746"
                                                          ]
                                                          None
                                                      expression (src/RandomSentenceGenerator.ml[141,4809+8]..src/RandomSentenceGenerator.ml[172,6116+40])
                                                        Texp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (src/RandomSentenceGenerator.ml[141,4809+12]..src/RandomSentenceGenerator.ml[141,4809+22])
                                                              Tpat_tuple
                                                              [
                                                                pattern (src/RandomSentenceGenerator.ml[141,4809+12]..src/RandomSentenceGenerator.ml[141,4809+16])
                                                                  Tpat_var "min1/747"
                                                                pattern (src/RandomSentenceGenerator.ml[141,4809+18]..src/RandomSentenceGenerator.ml[141,4809+22])
                                                                  Tpat_var "max1/748"
                                                              ]
                                                            expression (src/RandomSentenceGenerator.ml[142,4834+10]..src/RandomSentenceGenerator.ml[142,4834+43])
                                                              Texp_open Fresh
                                                              module_expr (src/RandomSentenceGenerator.ml[142,4834+10]..src/RandomSentenceGenerator.ml[142,4834+18])
                                                                Tmod_ident "Dune__exe!.Grammar.Analysis"
                                                              expression (src/RandomSentenceGenerator.ml[142,4834+20]..src/RandomSentenceGenerator.ml[142,4834+42])
                                                                Texp_tuple
                                                                [
                                                                  expression (src/RandomSentenceGenerator.ml[142,4834+20]..src/RandomSentenceGenerator.ml[142,4834+30])
                                                                    Texp_apply
                                                                    expression (src/RandomSentenceGenerator.ml[142,4834+20]..src/RandomSentenceGenerator.ml[142,4834+27])
                                                                      Texp_ident "Dune__exe!.Grammar.Analysis.minimal"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/RandomSentenceGenerator.ml[142,4834+28]..src/RandomSentenceGenerator.ml[142,4834+30])
                                                                          Texp_ident "nt/746"
                                                                    ]
                                                                  expression (src/RandomSentenceGenerator.ml[142,4834+32]..src/RandomSentenceGenerator.ml[142,4834+42])
                                                                    Texp_apply
                                                                    expression (src/RandomSentenceGenerator.ml[142,4834+32]..src/RandomSentenceGenerator.ml[142,4834+39])
                                                                      Texp_ident "Dune__exe!.Grammar.Analysis.maximal"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/RandomSentenceGenerator.ml[142,4834+40]..src/RandomSentenceGenerator.ml[142,4834+42])
                                                                          Texp_ident "nt/746"
                                                                    ]
                                                                ]
                                                          <def>
                                                            pattern (src/RandomSentenceGenerator.ml[143,4878+12]..src/RandomSentenceGenerator.ml[143,4878+22])
                                                              Tpat_tuple
                                                              [
                                                                pattern (src/RandomSentenceGenerator.ml[143,4878+12]..src/RandomSentenceGenerator.ml[143,4878+16])
                                                                  Tpat_var "min2/749"
                                                                pattern (src/RandomSentenceGenerator.ml[143,4878+18]..src/RandomSentenceGenerator.ml[143,4878+22])
                                                                  Tpat_var "max2/750"
                                                              ]
                                                            expression (src/RandomSentenceGenerator.ml[144,4903+10]..src/RandomSentenceGenerator.ml[144,4903+73])
                                                              Texp_open Fresh
                                                              module_expr (src/RandomSentenceGenerator.ml[144,4903+10]..src/RandomSentenceGenerator.ml[144,4903+18])
                                                                Tmod_ident "Dune__exe!.Grammar.Analysis"
                                                              expression (src/RandomSentenceGenerator.ml[144,4903+20]..src/RandomSentenceGenerator.ml[144,4903+72])
                                                                Texp_tuple
                                                                [
                                                                  expression (src/RandomSentenceGenerator.ml[144,4903+20]..src/RandomSentenceGenerator.ml[144,4903+45])
                                                                    Texp_apply
                                                                    expression (src/RandomSentenceGenerator.ml[144,4903+20]..src/RandomSentenceGenerator.ml[144,4903+32])
                                                                      Texp_ident "Dune__exe!.Grammar.Analysis.minimal_prod"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/RandomSentenceGenerator.ml[144,4903+33]..src/RandomSentenceGenerator.ml[144,4903+37])
                                                                          Texp_ident "prod/669"
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/RandomSentenceGenerator.ml[144,4903+38]..src/RandomSentenceGenerator.ml[144,4903+45])
                                                                          Texp_apply
                                                                          expression (src/RandomSentenceGenerator.ml[144,4903+41]..src/RandomSentenceGenerator.ml[144,4903+42])
                                                                            Texp_ident "Stdlib!.+"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/RandomSentenceGenerator.ml[144,4903+39]..src/RandomSentenceGenerator.ml[144,4903+40])
                                                                                Texp_ident "i/670"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/RandomSentenceGenerator.ml[144,4903+43]..src/RandomSentenceGenerator.ml[144,4903+44])
                                                                                Texp_constant Const_int 1
                                                                          ]
                                                                    ]
                                                                  expression (src/RandomSentenceGenerator.ml[144,4903+47]..src/RandomSentenceGenerator.ml[144,4903+72])
                                                                    Texp_apply
                                                                    expression (src/RandomSentenceGenerator.ml[144,4903+47]..src/RandomSentenceGenerator.ml[144,4903+59])
                                                                      Texp_ident "Dune__exe!.Grammar.Analysis.maximal_prod"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/RandomSentenceGenerator.ml[144,4903+60]..src/RandomSentenceGenerator.ml[144,4903+64])
                                                                          Texp_ident "prod/669"
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/RandomSentenceGenerator.ml[144,4903+65]..src/RandomSentenceGenerator.ml[144,4903+72])
                                                                          Texp_apply
                                                                          expression (src/RandomSentenceGenerator.ml[144,4903+68]..src/RandomSentenceGenerator.ml[144,4903+69])
                                                                            Texp_ident "Stdlib!.+"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/RandomSentenceGenerator.ml[144,4903+66]..src/RandomSentenceGenerator.ml[144,4903+67])
                                                                                Texp_ident "i/670"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/RandomSentenceGenerator.ml[144,4903+70]..src/RandomSentenceGenerator.ml[144,4903+71])
                                                                                Texp_constant Const_int 1
                                                                          ]
                                                                    ]
                                                                ]
                                                        ]
                                                        expression (src/RandomSentenceGenerator.ml[151,5314+8]..src/RandomSentenceGenerator.ml[172,6116+40])
                                                          Texp_sequence
                                                          expression (src/RandomSentenceGenerator.ml[151,5314+8]..src/RandomSentenceGenerator.ml[151,5314+45])
                                                            Texp_assert                                                            expression (src/RandomSentenceGenerator.ml[151,5314+15]..src/RandomSentenceGenerator.ml[151,5314+45])
                                                              Texp_apply
                                                              expression (src/RandomSentenceGenerator.ml[151,5314+29]..src/RandomSentenceGenerator.ml[151,5314+31])
                                                                Texp_ident "Stdlib!.&&"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/RandomSentenceGenerator.ml[151,5314+16]..src/RandomSentenceGenerator.ml[151,5314+28])
                                                                    Texp_apply
                                                                    expression (src/RandomSentenceGenerator.ml[151,5314+21]..src/RandomSentenceGenerator.ml[151,5314+23])
                                                                      Texp_ident "Stdlib!.<="
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/RandomSentenceGenerator.ml[151,5314+16]..src/RandomSentenceGenerator.ml[151,5314+20])
                                                                          Texp_ident "min1/747"
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/RandomSentenceGenerator.ml[151,5314+24]..src/RandomSentenceGenerator.ml[151,5314+28])
                                                                          Texp_ident "max1/748"
                                                                    ]
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/RandomSentenceGenerator.ml[151,5314+32]..src/RandomSentenceGenerator.ml[151,5314+44])
                                                                    Texp_apply
                                                                    expression (src/RandomSentenceGenerator.ml[151,5314+37]..src/RandomSentenceGenerator.ml[151,5314+39])
                                                                      Texp_ident "Stdlib!.<="
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/RandomSentenceGenerator.ml[151,5314+32]..src/RandomSentenceGenerator.ml[151,5314+36])
                                                                          Texp_ident "min2/749"
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/RandomSentenceGenerator.ml[151,5314+40]..src/RandomSentenceGenerator.ml[151,5314+44])
                                                                          Texp_ident "max2/750"
                                                                    ]
                                                              ]
                                                          expression (src/RandomSentenceGenerator.ml[152,5361+8]..src/RandomSentenceGenerator.ml[172,6116+40])
                                                            Texp_sequence
                                                            expression (src/RandomSentenceGenerator.ml[152,5361+8]..src/RandomSentenceGenerator.ml[152,5361+36])
                                                              Texp_assert                                                              expression (src/RandomSentenceGenerator.ml[152,5361+15]..src/RandomSentenceGenerator.ml[152,5361+36])
                                                                Texp_apply
                                                                expression (src/RandomSentenceGenerator.ml[152,5361+28]..src/RandomSentenceGenerator.ml[152,5361+30])
                                                                  Texp_ident "Stdlib!.<="
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/RandomSentenceGenerator.ml[152,5361+16]..src/RandomSentenceGenerator.ml[152,5361+27])
                                                                      Texp_apply
                                                                      expression (src/RandomSentenceGenerator.ml[152,5361+21]..src/RandomSentenceGenerator.ml[152,5361+22])
                                                                        Texp_ident "Stdlib!.+"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/RandomSentenceGenerator.ml[152,5361+16]..src/RandomSentenceGenerator.ml[152,5361+20])
                                                                            Texp_ident "min1/747"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/RandomSentenceGenerator.ml[152,5361+23]..src/RandomSentenceGenerator.ml[152,5361+27])
                                                                            Texp_ident "min2/749"
                                                                      ]
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/RandomSentenceGenerator.ml[152,5361+31]..src/RandomSentenceGenerator.ml[152,5361+35])
                                                                      Texp_ident "goal/671"
                                                                ]
                                                            expression (src/RandomSentenceGenerator.ml[153,5399+8]..src/RandomSentenceGenerator.ml[172,6116+40])
                                                              Texp_sequence
                                                              expression (src/RandomSentenceGenerator.ml[153,5399+8]..src/RandomSentenceGenerator.ml[153,5399+74])
                                                                Texp_assert                                                                expression (src/RandomSentenceGenerator.ml[153,5399+15]..src/RandomSentenceGenerator.ml[153,5399+74])
                                                                  Texp_apply
                                                                  expression (src/RandomSentenceGenerator.ml[153,5399+32]..src/RandomSentenceGenerator.ml[153,5399+34])
                                                                    Texp_ident "Stdlib!.||"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/RandomSentenceGenerator.ml[153,5399+16]..src/RandomSentenceGenerator.ml[153,5399+31])
                                                                        Texp_apply
                                                                        expression (src/RandomSentenceGenerator.ml[153,5399+21]..src/RandomSentenceGenerator.ml[153,5399+22])
                                                                          Texp_ident "Stdlib!.="
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/RandomSentenceGenerator.ml[153,5399+16]..src/RandomSentenceGenerator.ml[153,5399+20])
                                                                              Texp_ident "max1/748"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/RandomSentenceGenerator.ml[153,5399+23]..src/RandomSentenceGenerator.ml[153,5399+31])
                                                                              Texp_ident "infinity/508"
                                                                        ]
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/RandomSentenceGenerator.ml[153,5399+35]..src/RandomSentenceGenerator.ml[153,5399+73])
                                                                        Texp_apply
                                                                        expression (src/RandomSentenceGenerator.ml[153,5399+51]..src/RandomSentenceGenerator.ml[153,5399+53])
                                                                          Texp_ident "Stdlib!.||"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/RandomSentenceGenerator.ml[153,5399+35]..src/RandomSentenceGenerator.ml[153,5399+50])
                                                                              Texp_apply
                                                                              expression (src/RandomSentenceGenerator.ml[153,5399+40]..src/RandomSentenceGenerator.ml[153,5399+41])
                                                                                Texp_ident "Stdlib!.="
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/RandomSentenceGenerator.ml[153,5399+35]..src/RandomSentenceGenerator.ml[153,5399+39])
                                                                                    Texp_ident "max2/750"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/RandomSentenceGenerator.ml[153,5399+42]..src/RandomSentenceGenerator.ml[153,5399+50])
                                                                                    Texp_ident "infinity/508"
                                                                              ]
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/RandomSentenceGenerator.ml[153,5399+54]..src/RandomSentenceGenerator.ml[153,5399+73])
                                                                              Texp_apply
                                                                              expression (src/RandomSentenceGenerator.ml[153,5399+59]..src/RandomSentenceGenerator.ml[153,5399+61])
                                                                                Texp_ident "Stdlib!.<="
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/RandomSentenceGenerator.ml[153,5399+54]..src/RandomSentenceGenerator.ml[153,5399+58])
                                                                                    Texp_ident "goal/671"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/RandomSentenceGenerator.ml[153,5399+62]..src/RandomSentenceGenerator.ml[153,5399+73])
                                                                                    Texp_apply
                                                                                    expression (src/RandomSentenceGenerator.ml[153,5399+67]..src/RandomSentenceGenerator.ml[153,5399+68])
                                                                                      Texp_ident "Stdlib!.+"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/RandomSentenceGenerator.ml[153,5399+62]..src/RandomSentenceGenerator.ml[153,5399+66])
                                                                                          Texp_ident "max1/748"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/RandomSentenceGenerator.ml[153,5399+69]..src/RandomSentenceGenerator.ml[153,5399+73])
                                                                                          Texp_ident "max2/750"
                                                                                    ]
                                                                              ]
                                                                        ]
                                                                  ]
                                                              expression (src/RandomSentenceGenerator.ml[155,5540+8]..src/RandomSentenceGenerator.ml[172,6116+40])
                                                                Texp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (src/RandomSentenceGenerator.ml[155,5540+12]..src/RandomSentenceGenerator.ml[155,5540+23])
                                                                      Tpat_var "constraints/751"
                                                                    expression (src/RandomSentenceGenerator.ml[156,5566+10]..src/RandomSentenceGenerator.ml[161,5754+11])
                                                                      Texp_apply
                                                                      expression (src/RandomSentenceGenerator.ml[156,5566+10]..src/RandomSentenceGenerator.ml[156,5566+19])
                                                                        Texp_ident "intersect/528"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/RandomSentenceGenerator.ml[156,5566+20]..src/RandomSentenceGenerator.ml[161,5754+11])
                                                                            Texp_construct "::"
                                                                            [
                                                                              expression (src/RandomSentenceGenerator.ml[157,5588+12]..src/RandomSentenceGenerator.ml[157,5588+26])
                                                                                Texp_apply
                                                                                expression (src/RandomSentenceGenerator.ml[157,5588+12]..src/RandomSentenceGenerator.ml[157,5588+19])
                                                                                  Texp_ident "between/509"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/RandomSentenceGenerator.ml[157,5588+20]..src/RandomSentenceGenerator.ml[157,5588+21])
                                                                                      Texp_constant Const_int 0
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/RandomSentenceGenerator.ml[157,5588+22]..src/RandomSentenceGenerator.ml[157,5588+26])
                                                                                      Texp_ident "goal/671"
                                                                                ]
                                                                              expression (src/RandomSentenceGenerator.ml[158,5616+12]..src/RandomSentenceGenerator.ml[161,5754+11]) ghost
                                                                                Texp_construct "::"
                                                                                [
                                                                                  expression (src/RandomSentenceGenerator.ml[158,5616+12]..src/RandomSentenceGenerator.ml[158,5616+29])
                                                                                    Texp_apply
                                                                                    expression (src/RandomSentenceGenerator.ml[158,5616+12]..src/RandomSentenceGenerator.ml[158,5616+19])
                                                                                      Texp_ident "between/509"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/RandomSentenceGenerator.ml[158,5616+20]..src/RandomSentenceGenerator.ml[158,5616+24])
                                                                                          Texp_ident "min1/747"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/RandomSentenceGenerator.ml[158,5616+25]..src/RandomSentenceGenerator.ml[158,5616+29])
                                                                                          Texp_ident "max1/748"
                                                                                    ]
                                                                                  expression (src/RandomSentenceGenerator.ml[159,5647+12]..src/RandomSentenceGenerator.ml[161,5754+11]) ghost
                                                                                    Texp_construct "::"
                                                                                    [
                                                                                      expression (src/RandomSentenceGenerator.ml[159,5647+12]..src/RandomSentenceGenerator.ml[159,5647+70])
                                                                                        Texp_ifthenelse
                                                                                        expression (src/RandomSentenceGenerator.ml[159,5647+16]..src/RandomSentenceGenerator.ml[159,5647+31])
                                                                                          Texp_apply
                                                                                          expression (src/RandomSentenceGenerator.ml[159,5647+21]..src/RandomSentenceGenerator.ml[159,5647+22])
                                                                                            Texp_ident "Stdlib!.="
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/RandomSentenceGenerator.ml[159,5647+16]..src/RandomSentenceGenerator.ml[159,5647+20])
                                                                                                Texp_ident "max2/750"
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/RandomSentenceGenerator.ml[159,5647+23]..src/RandomSentenceGenerator.ml[159,5647+31])
                                                                                                Texp_ident "infinity/508"
                                                                                          ]
                                                                                        expression (src/RandomSentenceGenerator.ml[159,5647+37]..src/RandomSentenceGenerator.ml[159,5647+41])
                                                                                          Texp_ident "full/519"
                                                                                        Some
                                                                                          expression (src/RandomSentenceGenerator.ml[159,5647+47]..src/RandomSentenceGenerator.ml[159,5647+69])
                                                                                            Texp_apply
                                                                                            expression (src/RandomSentenceGenerator.ml[159,5647+47]..src/RandomSentenceGenerator.ml[159,5647+55])
                                                                                              Texp_ident "at_least/513"
                                                                                            [
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/RandomSentenceGenerator.ml[159,5647+56]..src/RandomSentenceGenerator.ml[159,5647+69])
                                                                                                  Texp_apply
                                                                                                  expression (src/RandomSentenceGenerator.ml[159,5647+62]..src/RandomSentenceGenerator.ml[159,5647+63])
                                                                                                    Texp_ident "Stdlib!.-"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/RandomSentenceGenerator.ml[159,5647+57]..src/RandomSentenceGenerator.ml[159,5647+61])
                                                                                                        Texp_ident "goal/671"
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/RandomSentenceGenerator.ml[159,5647+64]..src/RandomSentenceGenerator.ml[159,5647+68])
                                                                                                        Texp_ident "max2/750"
                                                                                                  ]
                                                                                            ]
                                                                                      expression (src/RandomSentenceGenerator.ml[160,5719+12]..src/RandomSentenceGenerator.ml[161,5754+11]) ghost
                                                                                        Texp_construct "::"
                                                                                        [
                                                                                          expression (src/RandomSentenceGenerator.ml[160,5719+12]..src/RandomSentenceGenerator.ml[160,5719+33])
                                                                                            Texp_apply
                                                                                            expression (src/RandomSentenceGenerator.ml[160,5719+12]..src/RandomSentenceGenerator.ml[160,5719+19])
                                                                                              Texp_ident "at_most/516"
                                                                                            [
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/RandomSentenceGenerator.ml[160,5719+20]..src/RandomSentenceGenerator.ml[160,5719+33])
                                                                                                  Texp_apply
                                                                                                  expression (src/RandomSentenceGenerator.ml[160,5719+26]..src/RandomSentenceGenerator.ml[160,5719+27])
                                                                                                    Texp_ident "Stdlib!.-"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/RandomSentenceGenerator.ml[160,5719+21]..src/RandomSentenceGenerator.ml[160,5719+25])
                                                                                                        Texp_ident "goal/671"
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/RandomSentenceGenerator.ml[160,5719+28]..src/RandomSentenceGenerator.ml[160,5719+32])
                                                                                                        Texp_ident "min2/749"
                                                                                                  ]
                                                                                            ]
                                                                                          expression (src/RandomSentenceGenerator.ml[161,5754+10]..src/RandomSentenceGenerator.ml[161,5754+11]) ghost
                                                                                            Texp_construct "[]"
                                                                                            []
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                      ]
                                                                ]
                                                                expression (src/RandomSentenceGenerator.ml[164,5833+8]..src/RandomSentenceGenerator.ml[172,6116+40])
                                                                  Texp_sequence
                                                                  expression (src/RandomSentenceGenerator.ml[164,5833+8]..src/RandomSentenceGenerator.ml[164,5833+37])
                                                                    Texp_assert                                                                    expression (src/RandomSentenceGenerator.ml[164,5833+15]..src/RandomSentenceGenerator.ml[164,5833+37])
                                                                      Texp_apply
                                                                      expression (src/RandomSentenceGenerator.ml[164,5833+16]..src/RandomSentenceGenerator.ml[164,5833+24])
                                                                        Texp_ident "nonempty/530"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/RandomSentenceGenerator.ml[164,5833+25]..src/RandomSentenceGenerator.ml[164,5833+36])
                                                                            Texp_ident "constraints/751"
                                                                      ]
                                                                  expression (src/RandomSentenceGenerator.ml[165,5872+8]..src/RandomSentenceGenerator.ml[172,6116+40])
                                                                    Texp_let Nonrec
                                                                    [
                                                                      <def>
                                                                        pattern (src/RandomSentenceGenerator.ml[165,5872+12]..src/RandomSentenceGenerator.ml[165,5872+17])
                                                                          Tpat_var "goal1/752"
                                                                        expression (src/RandomSentenceGenerator.ml[165,5872+20]..src/RandomSentenceGenerator.ml[165,5872+36])
                                                                          Texp_apply
                                                                          expression (src/RandomSentenceGenerator.ml[165,5872+20]..src/RandomSentenceGenerator.ml[165,5872+24])
                                                                            Texp_ident "pick/503"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/RandomSentenceGenerator.ml[165,5872+25]..src/RandomSentenceGenerator.ml[165,5872+36])
                                                                                Texp_ident "constraints/751"
                                                                          ]
                                                                    ]
                                                                    expression (src/RandomSentenceGenerator.ml[166,5912+8]..src/RandomSentenceGenerator.ml[172,6116+40])
                                                                      Texp_let Nonrec
                                                                      [
                                                                        <def>
                                                                          pattern (src/RandomSentenceGenerator.ml[166,5912+12]..src/RandomSentenceGenerator.ml[166,5912+17])
                                                                            Tpat_var "goal2/753"
                                                                          expression (src/RandomSentenceGenerator.ml[166,5912+20]..src/RandomSentenceGenerator.ml[166,5912+32])
                                                                            Texp_apply
                                                                            expression (src/RandomSentenceGenerator.ml[166,5912+25]..src/RandomSentenceGenerator.ml[166,5912+26])
                                                                              Texp_ident "Stdlib!.-"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/RandomSentenceGenerator.ml[166,5912+20]..src/RandomSentenceGenerator.ml[166,5912+24])
                                                                                  Texp_ident "goal/671"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/RandomSentenceGenerator.ml[166,5912+27]..src/RandomSentenceGenerator.ml[166,5912+32])
                                                                                  Texp_ident "goal1/752"
                                                                            ]
                                                                      ]
                                                                      expression (src/RandomSentenceGenerator.ml[167,5948+8]..src/RandomSentenceGenerator.ml[172,6116+40])
                                                                        Texp_sequence
                                                                        expression (src/RandomSentenceGenerator.ml[167,5948+8]..src/RandomSentenceGenerator.ml[167,5948+30])
                                                                          Texp_assert                                                                          expression (src/RandomSentenceGenerator.ml[167,5948+15]..src/RandomSentenceGenerator.ml[167,5948+30])
                                                                            Texp_apply
                                                                            expression (src/RandomSentenceGenerator.ml[167,5948+21]..src/RandomSentenceGenerator.ml[167,5948+23])
                                                                              Texp_ident "Stdlib!.<="
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/RandomSentenceGenerator.ml[167,5948+16]..src/RandomSentenceGenerator.ml[167,5948+20])
                                                                                  Texp_ident "min1/747"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/RandomSentenceGenerator.ml[167,5948+24]..src/RandomSentenceGenerator.ml[167,5948+29])
                                                                                  Texp_ident "goal1/752"
                                                                            ]
                                                                        expression (src/RandomSentenceGenerator.ml[168,5980+8]..src/RandomSentenceGenerator.ml[172,6116+40])
                                                                          Texp_sequence
                                                                          expression (src/RandomSentenceGenerator.ml[168,5980+8]..src/RandomSentenceGenerator.ml[168,5980+30])
                                                                            Texp_assert                                                                            expression (src/RandomSentenceGenerator.ml[168,5980+15]..src/RandomSentenceGenerator.ml[168,5980+30])
                                                                              Texp_apply
                                                                              expression (src/RandomSentenceGenerator.ml[168,5980+22]..src/RandomSentenceGenerator.ml[168,5980+24])
                                                                                Texp_ident "Stdlib!.<="
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/RandomSentenceGenerator.ml[168,5980+16]..src/RandomSentenceGenerator.ml[168,5980+21])
                                                                                    Texp_ident "goal1/752"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/RandomSentenceGenerator.ml[168,5980+25]..src/RandomSentenceGenerator.ml[168,5980+29])
                                                                                    Texp_ident "max1/748"
                                                                              ]
                                                                          expression (src/RandomSentenceGenerator.ml[169,6012+8]..src/RandomSentenceGenerator.ml[172,6116+40])
                                                                            Texp_sequence
                                                                            expression (src/RandomSentenceGenerator.ml[169,6012+8]..src/RandomSentenceGenerator.ml[169,6012+30])
                                                                              Texp_assert                                                                              expression (src/RandomSentenceGenerator.ml[169,6012+15]..src/RandomSentenceGenerator.ml[169,6012+30])
                                                                                Texp_apply
                                                                                expression (src/RandomSentenceGenerator.ml[169,6012+21]..src/RandomSentenceGenerator.ml[169,6012+23])
                                                                                  Texp_ident "Stdlib!.<="
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/RandomSentenceGenerator.ml[169,6012+16]..src/RandomSentenceGenerator.ml[169,6012+20])
                                                                                      Texp_ident "min2/749"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/RandomSentenceGenerator.ml[169,6012+24]..src/RandomSentenceGenerator.ml[169,6012+29])
                                                                                      Texp_ident "goal2/753"
                                                                                ]
                                                                            expression (src/RandomSentenceGenerator.ml[170,6044+8]..src/RandomSentenceGenerator.ml[172,6116+40])
                                                                              Texp_sequence
                                                                              expression (src/RandomSentenceGenerator.ml[170,6044+8]..src/RandomSentenceGenerator.ml[170,6044+30])
                                                                                Texp_assert                                                                                expression (src/RandomSentenceGenerator.ml[170,6044+15]..src/RandomSentenceGenerator.ml[170,6044+30])
                                                                                  Texp_apply
                                                                                  expression (src/RandomSentenceGenerator.ml[170,6044+22]..src/RandomSentenceGenerator.ml[170,6044+24])
                                                                                    Texp_ident "Stdlib!.<="
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/RandomSentenceGenerator.ml[170,6044+16]..src/RandomSentenceGenerator.ml[170,6044+21])
                                                                                        Texp_ident "goal2/753"
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/RandomSentenceGenerator.ml[170,6044+25]..src/RandomSentenceGenerator.ml[170,6044+29])
                                                                                        Texp_ident "max2/750"
                                                                                  ]
                                                                              expression (src/RandomSentenceGenerator.ml[171,6076+8]..src/RandomSentenceGenerator.ml[172,6116+40])
                                                                                Texp_apply
                                                                                expression (src/RandomSentenceGenerator.ml[171,6076+8]..src/RandomSentenceGenerator.ml[171,6076+19])
                                                                                  Texp_ident "nonterminal/543"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/RandomSentenceGenerator.ml[171,6076+20]..src/RandomSentenceGenerator.ml[171,6076+22])
                                                                                      Texp_ident "nt/746"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/RandomSentenceGenerator.ml[171,6076+23]..src/RandomSentenceGenerator.ml[171,6076+28])
                                                                                      Texp_ident "goal1/752"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/RandomSentenceGenerator.ml[171,6076+29]..src/RandomSentenceGenerator.ml[172,6116+40])
                                                                                      Texp_function
                                                                                      Nolabel
                                                                                      [
                                                                                        <case>
                                                                                          pattern (src/RandomSentenceGenerator.ml[171,6076+34]..src/RandomSentenceGenerator.ml[171,6076+36])
                                                                                            Tpat_construct "()"
                                                                                            []
                                                                                            None
                                                                                          expression (src/RandomSentenceGenerator.ml[172,6116+8]..src/RandomSentenceGenerator.ml[172,6116+39])
                                                                                            Texp_apply
                                                                                            expression (src/RandomSentenceGenerator.ml[172,6116+8]..src/RandomSentenceGenerator.ml[172,6116+18])
                                                                                              Texp_ident "production/544"
                                                                                            [
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/RandomSentenceGenerator.ml[172,6116+19]..src/RandomSentenceGenerator.ml[172,6116+23])
                                                                                                  Texp_ident "prod/669"
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/RandomSentenceGenerator.ml[172,6116+24]..src/RandomSentenceGenerator.ml[172,6116+31])
                                                                                                  Texp_apply
                                                                                                  expression (src/RandomSentenceGenerator.ml[172,6116+27]..src/RandomSentenceGenerator.ml[172,6116+28])
                                                                                                    Texp_ident "Stdlib!.+"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/RandomSentenceGenerator.ml[172,6116+25]..src/RandomSentenceGenerator.ml[172,6116+26])
                                                                                                        Texp_ident "i/670"
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/RandomSentenceGenerator.ml[172,6116+29]..src/RandomSentenceGenerator.ml[172,6116+30])
                                                                                                        Texp_constant Const_int 1
                                                                                                  ]
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/RandomSentenceGenerator.ml[172,6116+32]..src/RandomSentenceGenerator.ml[172,6116+37])
                                                                                                  Texp_ident "goal2/753"
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/RandomSentenceGenerator.ml[172,6116+38]..src/RandomSentenceGenerator.ml[172,6116+39])
                                                                                                  Texp_ident "k/672"
                                                                                            ]
                                                                                      ]
                                                                                ]
                                                  ]
                                              None
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[180,6346+0]..src/RandomSentenceGenerator.ml[188,6514+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[180,6346+4]..src/RandomSentenceGenerator.ml[180,6346+15])
          Tpat_var "nonterminal/755"
        expression (src/RandomSentenceGenerator.ml[180,6346+16]..src/RandomSentenceGenerator.ml[188,6514+13]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/RandomSentenceGenerator.ml[180,6346+16]..src/RandomSentenceGenerator.ml[180,6346+18])
                Tpat_var "nt/756"
              expression (src/RandomSentenceGenerator.ml[180,6346+19]..src/RandomSentenceGenerator.ml[188,6514+13]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/RandomSentenceGenerator.ml[180,6346+19]..src/RandomSentenceGenerator.ml[180,6346+23])
                      Tpat_var "goal/757"
                    expression (src/RandomSentenceGenerator.ml[181,6372+2]..src/RandomSentenceGenerator.ml[188,6514+13])
                      Texp_sequence
                      expression (src/RandomSentenceGenerator.ml[181,6372+2]..src/RandomSentenceGenerator.ml[181,6372+23])
                        Texp_assert                        expression (src/RandomSentenceGenerator.ml[181,6372+9]..src/RandomSentenceGenerator.ml[181,6372+23])
                          Texp_apply
                          expression (src/RandomSentenceGenerator.ml[181,6372+18]..src/RandomSentenceGenerator.ml[181,6372+19])
                            Texp_ident "Stdlib!.="
                          [
                            <arg>
                              Nolabel
                              expression (src/RandomSentenceGenerator.ml[181,6372+10]..src/RandomSentenceGenerator.ml[181,6372+17])
                                Texp_apply
                                expression (src/RandomSentenceGenerator.ml[181,6372+10]..src/RandomSentenceGenerator.ml[181,6372+11])
                                  Texp_ident "Stdlib!.!"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/RandomSentenceGenerator.ml[181,6372+11]..src/RandomSentenceGenerator.ml[181,6372+17])
                                      Texp_ident "buffer/535"
                                ]
                            <arg>
                              Nolabel
                              expression (src/RandomSentenceGenerator.ml[181,6372+20]..src/RandomSentenceGenerator.ml[181,6372+22])
                                Texp_construct "[]"
                                []
                          ]
                      expression (src/RandomSentenceGenerator.ml[182,6397+2]..src/RandomSentenceGenerator.ml[188,6514+13])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/RandomSentenceGenerator.ml[182,6397+6]..src/RandomSentenceGenerator.ml[182,6397+7])
                              Tpat_var "k/758"
                            expression (src/RandomSentenceGenerator.ml[182,6397+8]..src/RandomSentenceGenerator.ml[182,6397+15]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/RandomSentenceGenerator.ml[182,6397+8]..src/RandomSentenceGenerator.ml[182,6397+10])
                                    Tpat_construct "()"
                                    []
                                    None
                                  expression (src/RandomSentenceGenerator.ml[182,6397+13]..src/RandomSentenceGenerator.ml[182,6397+15])
                                    Texp_construct "()"
                                    []
                              ]
                        ]
                        expression (src/RandomSentenceGenerator.ml[183,6416+2]..src/RandomSentenceGenerator.ml[188,6514+13])
                          Texp_match
                          expression (src/RandomSentenceGenerator.ml[183,6416+8]..src/RandomSentenceGenerator.ml[183,6416+29])
                            Texp_apply
                            expression (src/RandomSentenceGenerator.ml[183,6416+8]..src/RandomSentenceGenerator.ml[183,6416+19])
                              Texp_ident "nonterminal/543"
                            [
                              <arg>
                                Nolabel
                                expression (src/RandomSentenceGenerator.ml[183,6416+20]..src/RandomSentenceGenerator.ml[183,6416+22])
                                  Texp_ident "nt/756"
                              <arg>
                                Nolabel
                                expression (src/RandomSentenceGenerator.ml[183,6416+23]..src/RandomSentenceGenerator.ml[183,6416+27])
                                  Texp_ident "goal/757"
                              <arg>
                                Nolabel
                                expression (src/RandomSentenceGenerator.ml[183,6416+28]..src/RandomSentenceGenerator.ml[183,6416+29])
                                  Texp_ident "k/758"
                            ]
                          [
                            <case>
                              pattern (src/RandomSentenceGenerator.ml[184,6451+4]..src/RandomSentenceGenerator.ml[184,6451+6])
                                Tpat_value
                                pattern (src/RandomSentenceGenerator.ml[184,6451+4]..src/RandomSentenceGenerator.ml[184,6451+6])
                                  Tpat_construct "()"
                                  []
                                  None
                              expression (src/RandomSentenceGenerator.ml[185,6461+6]..src/RandomSentenceGenerator.ml[185,6461+13])
                                Texp_apply
                                expression (src/RandomSentenceGenerator.ml[185,6461+6]..src/RandomSentenceGenerator.ml[185,6461+11])
                                  Texp_ident "reset/539"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/RandomSentenceGenerator.ml[185,6461+11]..src/RandomSentenceGenerator.ml[185,6461+13])
                                      Texp_construct "()"
                                      []
                                ]
                            <case>
                              pattern (src/RandomSentenceGenerator.ml[186,6475+4]..src/RandomSentenceGenerator.ml[186,6475+15])
                                Tpat_exception
                                pattern (src/RandomSentenceGenerator.ml[186,6475+14]..src/RandomSentenceGenerator.ml[186,6475+15])
                                  Tpat_var "e/761"
                              expression (src/RandomSentenceGenerator.ml[187,6494+6]..src/RandomSentenceGenerator.ml[188,6514+13])
                                Texp_sequence
                                expression (src/RandomSentenceGenerator.ml[187,6494+6]..src/RandomSentenceGenerator.ml[187,6494+18])
                                  Texp_apply
                                  expression (src/RandomSentenceGenerator.ml[187,6494+13]..src/RandomSentenceGenerator.ml[187,6494+15])
                                    Texp_ident "Stdlib!.:="
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/RandomSentenceGenerator.ml[187,6494+6]..src/RandomSentenceGenerator.ml[187,6494+12])
                                        Texp_ident "buffer/535"
                                    <arg>
                                      Nolabel
                                      expression (src/RandomSentenceGenerator.ml[187,6494+16]..src/RandomSentenceGenerator.ml[187,6494+18])
                                        Texp_construct "[]"
                                        []
                                  ]
                                expression (src/RandomSentenceGenerator.ml[188,6514+6]..src/RandomSentenceGenerator.ml[188,6514+13])
                                  Texp_apply
                                  expression (src/RandomSentenceGenerator.ml[188,6514+6]..src/RandomSentenceGenerator.ml[188,6514+11])
                                    Texp_ident "Stdlib!.raise"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/RandomSentenceGenerator.ml[188,6514+12]..src/RandomSentenceGenerator.ml[188,6514+13])
                                        Texp_ident "e/761"
                                  ]
                          ]
                ]
          ]
    ]
  structure_item (src/RandomSentenceGenerator.ml[193,6626+0]..src/RandomSentenceGenerator.ml[206,6903+21])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/RandomSentenceGenerator.ml[193,6626+4]..src/RandomSentenceGenerator.ml[193,6626+15])
          Tpat_var "nonterminal/762"
        expression (src/RandomSentenceGenerator.ml[193,6626+16]..src/RandomSentenceGenerator.ml[206,6903+21]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/RandomSentenceGenerator.ml[193,6626+16]..src/RandomSentenceGenerator.ml[193,6626+18])
                Tpat_var "nt/763"
              expression (src/RandomSentenceGenerator.ml[193,6626+19]..src/RandomSentenceGenerator.ml[206,6903+21]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/RandomSentenceGenerator.ml[193,6626+19]..src/RandomSentenceGenerator.ml[193,6626+23])
                      Tpat_var "goal/764"
                    expression (src/RandomSentenceGenerator.ml[194,6652+2]..src/RandomSentenceGenerator.ml[206,6903+21])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/RandomSentenceGenerator.ml[194,6652+6]..src/RandomSentenceGenerator.ml[194,6652+14])
                            Tpat_tuple
                            [
                              pattern (src/RandomSentenceGenerator.ml[194,6652+6]..src/RandomSentenceGenerator.ml[194,6652+9])
                                Tpat_var "min/765"
                              pattern (src/RandomSentenceGenerator.ml[194,6652+11]..src/RandomSentenceGenerator.ml[194,6652+14])
                                Tpat_var "max/766"
                            ]
                          expression (src/RandomSentenceGenerator.ml[194,6652+17]..src/RandomSentenceGenerator.ml[194,6652+50])
                            Texp_open Fresh
                            module_expr (src/RandomSentenceGenerator.ml[194,6652+17]..src/RandomSentenceGenerator.ml[194,6652+25])
                              Tmod_ident "Dune__exe!.Grammar.Analysis"
                            expression (src/RandomSentenceGenerator.ml[194,6652+27]..src/RandomSentenceGenerator.ml[194,6652+49])
                              Texp_tuple
                              [
                                expression (src/RandomSentenceGenerator.ml[194,6652+27]..src/RandomSentenceGenerator.ml[194,6652+37])
                                  Texp_apply
                                  expression (src/RandomSentenceGenerator.ml[194,6652+27]..src/RandomSentenceGenerator.ml[194,6652+34])
                                    Texp_ident "Dune__exe!.Grammar.Analysis.minimal"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/RandomSentenceGenerator.ml[194,6652+35]..src/RandomSentenceGenerator.ml[194,6652+37])
                                        Texp_ident "nt/763"
                                  ]
                                expression (src/RandomSentenceGenerator.ml[194,6652+39]..src/RandomSentenceGenerator.ml[194,6652+49])
                                  Texp_apply
                                  expression (src/RandomSentenceGenerator.ml[194,6652+39]..src/RandomSentenceGenerator.ml[194,6652+46])
                                    Texp_ident "Dune__exe!.Grammar.Analysis.maximal"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/RandomSentenceGenerator.ml[194,6652+47]..src/RandomSentenceGenerator.ml[194,6652+49])
                                        Texp_ident "nt/763"
                                  ]
                              ]
                      ]
                      expression (src/RandomSentenceGenerator.ml[195,6706+2]..src/RandomSentenceGenerator.ml[206,6903+21])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/RandomSentenceGenerator.ml[195,6706+6]..src/RandomSentenceGenerator.ml[195,6706+10])
                              Tpat_var "goal/767"
                            expression (src/RandomSentenceGenerator.ml[196,6719+4]..src/RandomSentenceGenerator.ml[204,6890+7])
                              Texp_ifthenelse
                              expression (src/RandomSentenceGenerator.ml[196,6719+7]..src/RandomSentenceGenerator.ml[196,6719+33])
                                Texp_apply
                                expression (src/RandomSentenceGenerator.ml[196,6719+19]..src/RandomSentenceGenerator.ml[196,6719+21])
                                  Texp_ident "Stdlib!.&&"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/RandomSentenceGenerator.ml[196,6719+7]..src/RandomSentenceGenerator.ml[196,6719+18])
                                      Texp_apply
                                      expression (src/RandomSentenceGenerator.ml[196,6719+11]..src/RandomSentenceGenerator.ml[196,6719+13])
                                        Texp_ident "Stdlib!.<="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/RandomSentenceGenerator.ml[196,6719+7]..src/RandomSentenceGenerator.ml[196,6719+10])
                                            Texp_ident "min/765"
                                        <arg>
                                          Nolabel
                                          expression (src/RandomSentenceGenerator.ml[196,6719+14]..src/RandomSentenceGenerator.ml[196,6719+18])
                                            Texp_ident "goal/764"
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/RandomSentenceGenerator.ml[196,6719+22]..src/RandomSentenceGenerator.ml[196,6719+33])
                                      Texp_apply
                                      expression (src/RandomSentenceGenerator.ml[196,6719+27]..src/RandomSentenceGenerator.ml[196,6719+29])
                                        Texp_ident "Stdlib!.<="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/RandomSentenceGenerator.ml[196,6719+22]..src/RandomSentenceGenerator.ml[196,6719+26])
                                            Texp_ident "goal/764"
                                        <arg>
                                          Nolabel
                                          expression (src/RandomSentenceGenerator.ml[196,6719+30]..src/RandomSentenceGenerator.ml[196,6719+33])
                                            Texp_ident "max/766"
                                      ]
                                ]
                              expression (src/RandomSentenceGenerator.ml[197,6758+6]..src/RandomSentenceGenerator.ml[197,6758+10])
                                Texp_ident "goal/764"
                              Some
                                expression (src/RandomSentenceGenerator.ml[198,6769+9]..src/RandomSentenceGenerator.ml[204,6890+7])
                                  Texp_ifthenelse
                                  expression (src/RandomSentenceGenerator.ml[198,6769+12]..src/RandomSentenceGenerator.ml[198,6769+22])
                                    Texp_apply
                                    expression (src/RandomSentenceGenerator.ml[198,6769+17]..src/RandomSentenceGenerator.ml[198,6769+18])
                                      Texp_ident "Stdlib!.<"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/RandomSentenceGenerator.ml[198,6769+12]..src/RandomSentenceGenerator.ml[198,6769+16])
                                          Texp_ident "goal/764"
                                      <arg>
                                        Nolabel
                                        expression (src/RandomSentenceGenerator.ml[198,6769+19]..src/RandomSentenceGenerator.ml[198,6769+22])
                                          Texp_ident "min/765"
                                    ]
                                  expression (src/RandomSentenceGenerator.ml[199,6797+6]..src/RandomSentenceGenerator.ml[199,6797+9])
                                    Texp_ident "min/765"
                                  Some
                                    expression (src/RandomSentenceGenerator.ml[200,6807+9]..src/RandomSentenceGenerator.ml[204,6890+7])
                                      Texp_sequence
                                      expression (src/RandomSentenceGenerator.ml[201,6822+6]..src/RandomSentenceGenerator.ml[201,6822+25])
                                        Texp_assert                                        expression (src/RandomSentenceGenerator.ml[201,6822+13]..src/RandomSentenceGenerator.ml[201,6822+25])
                                          Texp_apply
                                          expression (src/RandomSentenceGenerator.ml[201,6822+18]..src/RandomSentenceGenerator.ml[201,6822+19])
                                            Texp_ident "Stdlib!.<"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/RandomSentenceGenerator.ml[201,6822+14]..src/RandomSentenceGenerator.ml[201,6822+17])
                                                Texp_ident "max/766"
                                            <arg>
                                              Nolabel
                                              expression (src/RandomSentenceGenerator.ml[201,6822+20]..src/RandomSentenceGenerator.ml[201,6822+24])
                                                Texp_ident "goal/764"
                                          ]
                                      expression (src/RandomSentenceGenerator.ml[202,6849+6]..src/RandomSentenceGenerator.ml[203,6880+9])
                                        Texp_sequence
                                        expression (src/RandomSentenceGenerator.ml[202,6849+6]..src/RandomSentenceGenerator.ml[202,6849+29])
                                          Texp_assert                                          expression (src/RandomSentenceGenerator.ml[202,6849+13]..src/RandomSentenceGenerator.ml[202,6849+29])
                                            Texp_apply
                                            expression (src/RandomSentenceGenerator.ml[202,6849+18]..src/RandomSentenceGenerator.ml[202,6849+19])
                                              Texp_ident "Stdlib!.<"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/RandomSentenceGenerator.ml[202,6849+14]..src/RandomSentenceGenerator.ml[202,6849+17])
                                                  Texp_ident "max/766"
                                              <arg>
                                                Nolabel
                                                expression (src/RandomSentenceGenerator.ml[202,6849+20]..src/RandomSentenceGenerator.ml[202,6849+28])
                                                  Texp_ident "infinity/508"
                                            ]
                                        expression (src/RandomSentenceGenerator.ml[203,6880+6]..src/RandomSentenceGenerator.ml[203,6880+9])
                                          Texp_ident "max/766"
                        ]
                        expression (src/RandomSentenceGenerator.ml[206,6903+2]..src/RandomSentenceGenerator.ml[206,6903+21])
                          Texp_apply
                          expression (src/RandomSentenceGenerator.ml[206,6903+2]..src/RandomSentenceGenerator.ml[206,6903+13])
                            Texp_ident "nonterminal/755"
                          [
                            <arg>
                              Nolabel
                              expression (src/RandomSentenceGenerator.ml[206,6903+14]..src/RandomSentenceGenerator.ml[206,6903+16])
                                Texp_ident "nt/763"
                            <arg>
                              Nolabel
                              expression (src/RandomSentenceGenerator.ml[206,6903+17]..src/RandomSentenceGenerator.ml[206,6903+21])
                                Texp_ident "goal/767"
                          ]
                ]
          ]
    ]
]

{<Dune__exe__RandomSentenceGenerator>
 "nonterminal"[value] -> <Dune__exe__RandomSentenceGenerator.59>;
 }

(seq
  (let
    (choose/414 =
       (function xs/416
         (let
           (n/417 =[int] (apply (field_imm 0 (global Stdlib__List!)) xs/416))
           (seq
             (if (> n/417 0) 0
               (raise
                 (makeblock 0 (global Assert_failure/28!)
                   [0: "src/RandomSentenceGenerator.ml" 22 2])))
             (let
               (i/484 =[int]
                  (apply (field_imm 4 (global Stdlib__Random!)) n/417))
               (apply (field_imm 7 (global Stdlib__List!)) xs/416 i/484))))))
    (setfield_ptr(root-init) 1 (global Dune__exe__RandomSentenceGenerator!)
      choose/414))
  (let
    (pick/503 =
       (function (param/3022[int], param/3023[int]) : int
         (let (j/506 =a param/3023 i/505 =a param/3022)
           (seq
             (if (<= i/505 j/506) 0
               (raise
                 (makeblock 0 (global Assert_failure/28!)
                   [0: "src/RandomSentenceGenerator.ml" 29 2])))
             (+ i/505
               (apply (field_imm 4 (global Stdlib__Random!))
                 (+ (- j/506 i/505) 1)))))))
    (setfield_ptr(root-init) 2 (global Dune__exe__RandomSentenceGenerator!)
      pick/503))
  (let (infinity/508 =[int] (field_imm 18 (global Stdlib!)))
    (setfield_ptr(root-init) 3 (global Dune__exe__RandomSentenceGenerator!)
      infinity/508))
  (let (between/509 = (function i/511 j/512 (makeblock 0 i/511 j/512)))
    (setfield_ptr(root-init) 4 (global Dune__exe__RandomSentenceGenerator!)
      between/509))
  (let
    (at_least/513 =
       (function i/515
         (apply (field_imm 4 (global Dune__exe__RandomSentenceGenerator!))
           i/515 (field_imm 3 (global Dune__exe__RandomSentenceGenerator!)))))
    (setfield_ptr(root-init) 5 (global Dune__exe__RandomSentenceGenerator!)
      at_least/513))
  (let
    (at_most/516 =
       (function j/518
         (apply (field_imm 4 (global Dune__exe__RandomSentenceGenerator!)) 0
           j/518)))
    (setfield_ptr(root-init) 6 (global Dune__exe__RandomSentenceGenerator!)
      at_most/516))
  (let (full/519 = (makeblock 0 (int,int) 0 (field_imm 18 (global Stdlib!))))
    (setfield_ptr(root-init) 7 (global Dune__exe__RandomSentenceGenerator!)
      full/519))
  (let
    (intersect/520 =
       (function param/527 param/526
         (let
           (j2/525 =a (field_imm 1 param/526)
            i2/524 =a (field_imm 0 param/526)
            j1/523 =a (field_imm 1 param/527)
            i1/522 =a (field_imm 0 param/527))
           (makeblock 0 (apply (field_imm 16 (global Stdlib!)) i1/522 i2/524)
             (apply (field_imm 15 (global Stdlib!)) j1/523 j2/525)))))
    (setfield_ptr(root-init) 8 (global Dune__exe__RandomSentenceGenerator!)
      intersect/520))
  (let
    (intersect/528 =
       (function intervals/529
         (apply (field_imm 25 (global Stdlib__List!))
           (field_imm 8 (global Dune__exe__RandomSentenceGenerator!))
           (field_imm 7 (global Dune__exe__RandomSentenceGenerator!))
           intervals/529)))
    (setfield_ptr(root-init) 9 (global Dune__exe__RandomSentenceGenerator!)
      intersect/528))
  (let
    (nonempty/530 =
       (function (param/3024, param/3025) : int
         (let (j/533 =a param/3025 i/532 =a param/3024)
           (caml_lessequal i/532 j/533))))
    (setfield_ptr(root-init) 10 (global Dune__exe__RandomSentenceGenerator!)
      nonempty/530))
  (let (buffer/535 = (makemutable 0 0))
    (setfield_ptr(root-init) 11 (global Dune__exe__RandomSentenceGenerator!)
      buffer/535))
  (let
    (emit/536 =
       (function tok/538 : int
         (setfield_ptr 0
           (field_imm 11 (global Dune__exe__RandomSentenceGenerator!))
           (makeblock 0 tok/538
             (field_mut 0
               (field_imm 11 (global Dune__exe__RandomSentenceGenerator!)))))))
    (setfield_ptr(root-init) 12 (global Dune__exe__RandomSentenceGenerator!)
      emit/536))
  (let
    (reset/539 =
       (function param/542[int]
         (let
           (toks/541 =
              (field_mut 0
                (field_imm 11 (global Dune__exe__RandomSentenceGenerator!))))
           (seq
             (setfield_ptr 0
               (field_imm 11 (global Dune__exe__RandomSentenceGenerator!)) 0)
             (apply (field_imm 9 (global Stdlib__List!)) toks/541)))))
    (setfield_ptr(root-init) 13 (global Dune__exe__RandomSentenceGenerator!)
      reset/539))
  (letrec
    (nonterminal/543
       (function nt/545 goal/546[int] k/547 : int
         (seq
           (if
             (<=
               (apply
                 (field_imm 9 (field_imm 11 (global Dune__exe__Grammar!)))
                 nt/545)
               goal/546)
             0
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "src/RandomSentenceGenerator.ml" 83 2])))
           (if
             (<= goal/546
               (apply
                 (field_imm 11 (field_imm 11 (global Dune__exe__Grammar!)))
                 nt/545))
             0
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "src/RandomSentenceGenerator.ml" 84 2])))
           (let
             (prods/598 =
                (apply
                  (field_imm 23 (field_imm 8 (global Dune__exe__Grammar!)))
                  nt/545
                  (function prod/633 prods/634
                    (if
                      (&&
                        (apply
                          (field_imm 28
                            (field_imm 8 (global Dune__exe__Grammar!)))
                          prod/633)
                        (&&
                          (<=
                            (apply
                              (field_imm 10
                                (field_imm 11 (global Dune__exe__Grammar!)))
                              prod/633 0)
                            goal/546)
                          (<= goal/546
                            (apply
                              (field_imm 12
                                (field_imm 11 (global Dune__exe__Grammar!)))
                              prod/633 0))))
                      (makeblock 0 prod/633 prods/634) prods/634))
                  0))
             (if (== prods/598 0)
               (apply nonterminal/543 nt/545
                 (apply
                   (field_imm 9 (field_imm 11 (global Dune__exe__Grammar!)))
                   nt/545)
                 k/547)
               (apply production/544
                 (apply
                   (field_imm 1 (global Dune__exe__RandomSentenceGenerator!))
                   prods/598)
                 0 goal/546 k/547)))))
      production/544
        (function prod/669 i/670[int] goal/671[int] k/672 : int
          (seq
            (if
              (<=
                (apply
                  (field_imm 10 (field_imm 11 (global Dune__exe__Grammar!)))
                  prod/669 i/670)
                goal/671)
              0
              (raise
                (makeblock 0 (global Assert_failure/28!)
                  [0: "src/RandomSentenceGenerator.ml" 123 2])))
            (if
              (<= goal/671
                (apply
                  (field_imm 12 (field_imm 11 (global Dune__exe__Grammar!)))
                  prod/669 i/670))
              0
              (raise
                (makeblock 0 (global Assert_failure/28!)
                  [0: "src/RandomSentenceGenerator.ml" 124 2])))
            (let
              (n/673 =[int]
                 (apply
                   (field_imm 7 (field_imm 8 (global Dune__exe__Grammar!)))
                   prod/669))
              (seq
                (if (&& (<= 0 i/670) (<= i/670 n/673)) 0
                  (raise
                    (makeblock 0 (global Assert_failure/28!)
                      [0: "src/RandomSentenceGenerator.ml" 126 2])))
                (if (== i/670 n/673)
                  (seq
                    (if (== goal/671 0) 0
                      (raise
                        (makeblock 0 (global Assert_failure/28!)
                          [0: "src/RandomSentenceGenerator.ml" 128 4])))
                    (apply k/672 0))
                  (if (< i/670 n/673)
                    (let
                      (rhs/674 =
                         (apply
                           (field_imm 6
                             (field_imm 8 (global Dune__exe__Grammar!)))
                           prod/669)
                       *match*/3030 = (array.get[addr] rhs/674 i/670))
                      (switch* *match*/3030
                       case tag 0:
                        (let (nt/746 =a (field_imm 0 *match*/3030))
                          (catch
                            (let
                              (max1/3029 =
                                 (apply
                                   (field_imm 11
                                     (field_imm 11
                                       (global Dune__exe__Grammar!)))
                                   nt/746)
                               min1/3028 =
                                 (apply
                                   (field_imm 9
                                     (field_imm 11
                                       (global Dune__exe__Grammar!)))
                                   nt/746))
                              (exit 4 min1/3028 max1/3029))
                           with (4 min1/747[int] max1/748[int])
                            (catch
                              (let
                                (max2/3027 =
                                   (apply
                                     (field_imm 12
                                       (field_imm 11
                                         (global Dune__exe__Grammar!)))
                                     prod/669 (+ i/670 1))
                                 min2/3026 =
                                   (apply
                                     (field_imm 10
                                       (field_imm 11
                                         (global Dune__exe__Grammar!)))
                                     prod/669 (+ i/670 1)))
                                (exit 1 min2/3026 max2/3027))
                             with (1 min2/749[int] max2/750[int])
                              (seq
                                (if
                                  (&& (<= min1/747 max1/748)
                                    (<= min2/749 max2/750))
                                  0
                                  (raise
                                    (makeblock 0 (global Assert_failure/28!)
                                      [0:
                                       "src/RandomSentenceGenerator.ml" 151 8])))
                                (if (<= (+ min1/747 min2/749) goal/671) 0
                                  (raise
                                    (makeblock 0 (global Assert_failure/28!)
                                      [0:
                                       "src/RandomSentenceGenerator.ml" 152 8])))
                                (if
                                  (||
                                    (== max1/748
                                      (field_imm 3
                                        (global Dune__exe__RandomSentenceGenerator!)))
                                    (||
                                      (== max2/750
                                        (field_imm 3
                                          (global Dune__exe__RandomSentenceGenerator!)))
                                      (<= goal/671 (+ max1/748 max2/750))))
                                  0
                                  (raise
                                    (makeblock 0 (global Assert_failure/28!)
                                      [0:
                                       "src/RandomSentenceGenerator.ml" 153 8])))
                                (let
                                  (constraints/751 =
                                     (apply
                                       (field_imm 9
                                         (global Dune__exe__RandomSentenceGenerator!))
                                       (makeblock 0
                                         (apply
                                           (field_imm 4
                                             (global Dune__exe__RandomSentenceGenerator!))
                                           0 goal/671)
                                         (makeblock 0
                                           (apply
                                             (field_imm 4
                                               (global Dune__exe__RandomSentenceGenerator!))
                                             min1/747 max1/748)
                                           (makeblock 0
                                             (if
                                               (== max2/750
                                                 (field_imm 3
                                                   (global Dune__exe__RandomSentenceGenerator!)))
                                               (field_imm 7
                                                 (global Dune__exe__RandomSentenceGenerator!))
                                               (apply
                                                 (field_imm 5
                                                   (global Dune__exe__RandomSentenceGenerator!))
                                                 (- goal/671 max2/750)))
                                             (makeblock 0
                                               (apply
                                                 (field_imm 6
                                                   (global Dune__exe__RandomSentenceGenerator!))
                                                 (- goal/671 min2/749))
                                               0))))))
                                  (seq
                                    (if
                                      (apply
                                        (field_imm 10
                                          (global Dune__exe__RandomSentenceGenerator!))
                                        constraints/751)
                                      0
                                      (raise
                                        (makeblock 0
                                          (global Assert_failure/28!)
                                          [0:
                                           "src/RandomSentenceGenerator.ml"
                                           164 8])))
                                    (let
                                      (goal1/752 =[int]
                                         (apply
                                           (field_imm 2
                                             (global Dune__exe__RandomSentenceGenerator!))
                                           constraints/751)
                                       goal2/753 =[int]
                                         (- goal/671 goal1/752))
                                      (seq
                                        (if (<= min1/747 goal1/752) 0
                                          (raise
                                            (makeblock 0
                                              (global Assert_failure/28!)
                                              [0:
                                               "src/RandomSentenceGenerator.ml"
                                               167 8])))
                                        (if (<= goal1/752 max1/748) 0
                                          (raise
                                            (makeblock 0
                                              (global Assert_failure/28!)
                                              [0:
                                               "src/RandomSentenceGenerator.ml"
                                               168 8])))
                                        (if (<= min2/749 goal2/753) 0
                                          (raise
                                            (makeblock 0
                                              (global Assert_failure/28!)
                                              [0:
                                               "src/RandomSentenceGenerator.ml"
                                               169 8])))
                                        (if (<= goal2/753 max2/750) 0
                                          (raise
                                            (makeblock 0
                                              (global Assert_failure/28!)
                                              [0:
                                               "src/RandomSentenceGenerator.ml"
                                               170 8])))
                                        (apply nonterminal/543 nt/746
                                          goal1/752
                                          (function param/754[int] : int
                                            (apply production/544 prod/669
                                              (+ i/670 1) goal2/753 k/672)))))))))))
                       case tag 1:
                        (let (tok/745 =a (field_imm 0 *match*/3030))
                          (seq
                            (apply
                              (field_imm 12
                                (global Dune__exe__RandomSentenceGenerator!))
                              tok/745)
                            (apply production/544 prod/669 (+ i/670 1)
                              (- goal/671 1) k/672)))))
                    0)))))))
    (seq
      (setfield_ptr(root-init) 14
        (global Dune__exe__RandomSentenceGenerator!) nonterminal/543)
      (setfield_ptr(root-init) 15
        (global Dune__exe__RandomSentenceGenerator!) production/544)))
  (let
    (nonterminal/755 =
       (function nt/756 goal/757[int]
         (seq
           (if
             (==
               (field_mut 0
                 (field_imm 11 (global Dune__exe__RandomSentenceGenerator!)))
               0)
             0
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "src/RandomSentenceGenerator.ml" 181 2])))
           (let (k/758 = (function param/760[int] : int 0))
             (catch
               (try
                 (exit 7
                   (apply
                     (field_imm 14
                       (global Dune__exe__RandomSentenceGenerator!))
                     nt/756 goal/757 k/758))
                with e/761
                 (seq
                   (setfield_ptr 0
                     (field_imm 11
                       (global Dune__exe__RandomSentenceGenerator!))
                     0)
                   (reraise e/761)))
              with (7 val/3031[int])
               (apply
                 (field_imm 13 (global Dune__exe__RandomSentenceGenerator!))
                 0))))))
    (setfield_ptr(root-init) 16 (global Dune__exe__RandomSentenceGenerator!)
      nonterminal/755))
  (let
    (nonterminal/762 =
       (function nt/763 goal/764[int]
         (catch
           (let
             (max/3033 =
                (apply
                  (field_imm 11 (field_imm 11 (global Dune__exe__Grammar!)))
                  nt/763)
              min/3032 =
                (apply
                  (field_imm 9 (field_imm 11 (global Dune__exe__Grammar!)))
                  nt/763))
             (exit 9 min/3032 max/3033))
          with (9 min/765[int] max/766[int])
           (let
             (goal/767 =[int]
                (if (&& (<= min/765 goal/764) (<= goal/764 max/766)) goal/764
                  (if (< goal/764 min/765) min/765
                    (seq
                      (if (< max/766 goal/764) 0
                        (raise
                          (makeblock 0 (global Assert_failure/28!)
                            [0: "src/RandomSentenceGenerator.ml" 201 6])))
                      (if
                        (< max/766
                          (field_imm 3
                            (global Dune__exe__RandomSentenceGenerator!)))
                        0
                        (raise
                          (makeblock 0 (global Assert_failure/28!)
                            [0: "src/RandomSentenceGenerator.ml" 202 6])))
                      max/766))))
             (apply
               (field_imm 16 (global Dune__exe__RandomSentenceGenerator!))
               nt/763 goal/767)))))
    (setfield_ptr(root-init) 0 (global Dune__exe__RandomSentenceGenerator!)
      nonterminal/762))
  0)
(seq
  (let
    (choose/414 =
       (function xs/416
         (let
           (n/417 =[int] (apply (field_imm 0 (global Stdlib__List!)) xs/416))
           (seq
             (if (> n/417 0) 0
               (raise
                 (makeblock 0 (global Assert_failure/28!)
                   [0: "src/RandomSentenceGenerator.ml" 22 2])))
             (let
               (i/484 =[int]
                  (apply (field_imm 4 (global Stdlib__Random!)) n/417))
               (apply (field_imm 7 (global Stdlib__List!)) xs/416 i/484))))))
    (setfield_ptr(root-init) 1 (global Dune__exe__RandomSentenceGenerator!)
      choose/414))
  (let
    (pick/503 =
       (function (param/3022[int], param/3023[int]) : int
         (seq
           (if (<= param/3022 param/3023) 0
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "src/RandomSentenceGenerator.ml" 29 2])))
           (+ param/3022
             (apply (field_imm 4 (global Stdlib__Random!))
               (+ (- param/3023 param/3022) 1))))))
    (setfield_ptr(root-init) 2 (global Dune__exe__RandomSentenceGenerator!)
      pick/503))
  (let (infinity/508 =[int] (field_imm 18 (global Stdlib!)))
    (setfield_ptr(root-init) 3 (global Dune__exe__RandomSentenceGenerator!)
      infinity/508))
  (let (between/509 = (function i/511 j/512 (makeblock 0 i/511 j/512)))
    (setfield_ptr(root-init) 4 (global Dune__exe__RandomSentenceGenerator!)
      between/509))
  (let
    (at_least/513 =
       (function i/515
         (apply (field_imm 4 (global Dune__exe__RandomSentenceGenerator!))
           i/515 (field_imm 3 (global Dune__exe__RandomSentenceGenerator!)))))
    (setfield_ptr(root-init) 5 (global Dune__exe__RandomSentenceGenerator!)
      at_least/513))
  (let
    (at_most/516 =
       (function j/518
         (apply (field_imm 4 (global Dune__exe__RandomSentenceGenerator!)) 0
           j/518)))
    (setfield_ptr(root-init) 6 (global Dune__exe__RandomSentenceGenerator!)
      at_most/516))
  (let (full/519 = (makeblock 0 (int,int) 0 (field_imm 18 (global Stdlib!))))
    (setfield_ptr(root-init) 7 (global Dune__exe__RandomSentenceGenerator!)
      full/519))
  (let
    (intersect/520 =
       (function param/527 param/526
         (makeblock 0
           (apply (field_imm 16 (global Stdlib!)) (field_imm 0 param/527)
             (field_imm 0 param/526))
           (apply (field_imm 15 (global Stdlib!)) (field_imm 1 param/527)
             (field_imm 1 param/526)))))
    (setfield_ptr(root-init) 8 (global Dune__exe__RandomSentenceGenerator!)
      intersect/520))
  (let
    (intersect/528 =
       (function intervals/529
         (apply (field_imm 25 (global Stdlib__List!))
           (field_imm 8 (global Dune__exe__RandomSentenceGenerator!))
           (field_imm 7 (global Dune__exe__RandomSentenceGenerator!))
           intervals/529)))
    (setfield_ptr(root-init) 9 (global Dune__exe__RandomSentenceGenerator!)
      intersect/528))
  (let
    (nonempty/530 =
       (function (param/3024, param/3025) : int
         (caml_lessequal param/3024 param/3025)))
    (setfield_ptr(root-init) 10 (global Dune__exe__RandomSentenceGenerator!)
      nonempty/530))
  (let (buffer/535 = (makemutable 0 0))
    (setfield_ptr(root-init) 11 (global Dune__exe__RandomSentenceGenerator!)
      buffer/535))
  (let
    (emit/536 =
       (function tok/538 : int
         (setfield_ptr 0
           (field_imm 11 (global Dune__exe__RandomSentenceGenerator!))
           (makeblock 0 tok/538
             (field_mut 0
               (field_imm 11 (global Dune__exe__RandomSentenceGenerator!)))))))
    (setfield_ptr(root-init) 12 (global Dune__exe__RandomSentenceGenerator!)
      emit/536))
  (let
    (reset/539 =
       (function param/542[int]
         (let
           (toks/541 =
              (field_mut 0
                (field_imm 11 (global Dune__exe__RandomSentenceGenerator!))))
           (seq
             (setfield_ptr 0
               (field_imm 11 (global Dune__exe__RandomSentenceGenerator!)) 0)
             (apply (field_imm 9 (global Stdlib__List!)) toks/541)))))
    (setfield_ptr(root-init) 13 (global Dune__exe__RandomSentenceGenerator!)
      reset/539))
  (letrec
    (nonterminal/543
       (function nt/545 goal/546[int] k/547 : int
         (seq
           (if
             (<=
               (apply
                 (field_imm 9 (field_imm 11 (global Dune__exe__Grammar!)))
                 nt/545)
               goal/546)
             0
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "src/RandomSentenceGenerator.ml" 83 2])))
           (if
             (<= goal/546
               (apply
                 (field_imm 11 (field_imm 11 (global Dune__exe__Grammar!)))
                 nt/545))
             0
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "src/RandomSentenceGenerator.ml" 84 2])))
           (let
             (prods/598 =
                (apply
                  (field_imm 23 (field_imm 8 (global Dune__exe__Grammar!)))
                  nt/545
                  (function prod/633 prods/634
                    (if
                      (&&
                        (apply
                          (field_imm 28
                            (field_imm 8 (global Dune__exe__Grammar!)))
                          prod/633)
                        (&&
                          (<=
                            (apply
                              (field_imm 10
                                (field_imm 11 (global Dune__exe__Grammar!)))
                              prod/633 0)
                            goal/546)
                          (<= goal/546
                            (apply
                              (field_imm 12
                                (field_imm 11 (global Dune__exe__Grammar!)))
                              prod/633 0))))
                      (makeblock 0 prod/633 prods/634) prods/634))
                  0))
             (if (== prods/598 0)
               (apply nonterminal/543 nt/545
                 (apply
                   (field_imm 9 (field_imm 11 (global Dune__exe__Grammar!)))
                   nt/545)
                 k/547)
               (apply production/544
                 (apply
                   (field_imm 1 (global Dune__exe__RandomSentenceGenerator!))
                   prods/598)
                 0 goal/546 k/547)))))
      production/544
        (function prod/669 i/670[int] goal/671[int] k/672 : int
          (seq
            (if
              (<=
                (apply
                  (field_imm 10 (field_imm 11 (global Dune__exe__Grammar!)))
                  prod/669 i/670)
                goal/671)
              0
              (raise
                (makeblock 0 (global Assert_failure/28!)
                  [0: "src/RandomSentenceGenerator.ml" 123 2])))
            (if
              (<= goal/671
                (apply
                  (field_imm 12 (field_imm 11 (global Dune__exe__Grammar!)))
                  prod/669 i/670))
              0
              (raise
                (makeblock 0 (global Assert_failure/28!)
                  [0: "src/RandomSentenceGenerator.ml" 124 2])))
            (let
              (n/673 =[int]
                 (apply
                   (field_imm 7 (field_imm 8 (global Dune__exe__Grammar!)))
                   prod/669))
              (seq
                (if (&& (<= 0 i/670) (<= i/670 n/673)) 0
                  (raise
                    (makeblock 0 (global Assert_failure/28!)
                      [0: "src/RandomSentenceGenerator.ml" 126 2])))
                (if (== i/670 n/673)
                  (seq
                    (if (== goal/671 0) 0
                      (raise
                        (makeblock 0 (global Assert_failure/28!)
                          [0: "src/RandomSentenceGenerator.ml" 128 4])))
                    (apply k/672 0))
                  (if (< i/670 n/673)
                    (let
                      (rhs/674 =
                         (apply
                           (field_imm 6
                             (field_imm 8 (global Dune__exe__Grammar!)))
                           prod/669)
                       *match*/3030 = (array.get[addr] rhs/674 i/670))
                      (switch* *match*/3030
                       case tag 0:
                        (let
                          (nt/746 =a (field_imm 0 *match*/3030)
                           max1/3029 =
                             (apply
                               (field_imm 11
                                 (field_imm 11 (global Dune__exe__Grammar!)))
                               nt/746)
                           min1/3028 =
                             (apply
                               (field_imm 9
                                 (field_imm 11 (global Dune__exe__Grammar!)))
                               nt/746)
                           max2/3027 =
                             (apply
                               (field_imm 12
                                 (field_imm 11 (global Dune__exe__Grammar!)))
                               prod/669 (+ i/670 1))
                           min2/3026 =
                             (apply
                               (field_imm 10
                                 (field_imm 11 (global Dune__exe__Grammar!)))
                               prod/669 (+ i/670 1)))
                          (seq
                            (if
                              (&& (<= min1/3028 max1/3029)
                                (<= min2/3026 max2/3027))
                              0
                              (raise
                                (makeblock 0 (global Assert_failure/28!)
                                  [0: "src/RandomSentenceGenerator.ml" 151 8])))
                            (if (<= (+ min1/3028 min2/3026) goal/671) 0
                              (raise
                                (makeblock 0 (global Assert_failure/28!)
                                  [0: "src/RandomSentenceGenerator.ml" 152 8])))
                            (if
                              (||
                                (== max1/3029
                                  (field_imm 3
                                    (global Dune__exe__RandomSentenceGenerator!)))
                                (||
                                  (== max2/3027
                                    (field_imm 3
                                      (global Dune__exe__RandomSentenceGenerator!)))
                                  (<= goal/671 (+ max1/3029 max2/3027))))
                              0
                              (raise
                                (makeblock 0 (global Assert_failure/28!)
                                  [0: "src/RandomSentenceGenerator.ml" 153 8])))
                            (let
                              (constraints/751 =
                                 (apply
                                   (field_imm 9
                                     (global Dune__exe__RandomSentenceGenerator!))
                                   (makeblock 0
                                     (apply
                                       (field_imm 4
                                         (global Dune__exe__RandomSentenceGenerator!))
                                       0 goal/671)
                                     (makeblock 0
                                       (apply
                                         (field_imm 4
                                           (global Dune__exe__RandomSentenceGenerator!))
                                         min1/3028 max1/3029)
                                       (makeblock 0
                                         (if
                                           (== max2/3027
                                             (field_imm 3
                                               (global Dune__exe__RandomSentenceGenerator!)))
                                           (field_imm 7
                                             (global Dune__exe__RandomSentenceGenerator!))
                                           (apply
                                             (field_imm 5
                                               (global Dune__exe__RandomSentenceGenerator!))
                                             (- goal/671 max2/3027)))
                                         (makeblock 0
                                           (apply
                                             (field_imm 6
                                               (global Dune__exe__RandomSentenceGenerator!))
                                             (- goal/671 min2/3026))
                                           0))))))
                              (seq
                                (if
                                  (apply
                                    (field_imm 10
                                      (global Dune__exe__RandomSentenceGenerator!))
                                    constraints/751)
                                  0
                                  (raise
                                    (makeblock 0 (global Assert_failure/28!)
                                      [0:
                                       "src/RandomSentenceGenerator.ml" 164 8])))
                                (let
                                  (goal1/752 =[int]
                                     (apply
                                       (field_imm 2
                                         (global Dune__exe__RandomSentenceGenerator!))
                                       constraints/751)
                                   goal2/753 =[int] (- goal/671 goal1/752))
                                  (seq
                                    (if (<= min1/3028 goal1/752) 0
                                      (raise
                                        (makeblock 0
                                          (global Assert_failure/28!)
                                          [0:
                                           "src/RandomSentenceGenerator.ml"
                                           167 8])))
                                    (if (<= goal1/752 max1/3029) 0
                                      (raise
                                        (makeblock 0
                                          (global Assert_failure/28!)
                                          [0:
                                           "src/RandomSentenceGenerator.ml"
                                           168 8])))
                                    (if (<= min2/3026 goal2/753) 0
                                      (raise
                                        (makeblock 0
                                          (global Assert_failure/28!)
                                          [0:
                                           "src/RandomSentenceGenerator.ml"
                                           169 8])))
                                    (if (<= goal2/753 max2/3027) 0
                                      (raise
                                        (makeblock 0
                                          (global Assert_failure/28!)
                                          [0:
                                           "src/RandomSentenceGenerator.ml"
                                           170 8])))
                                    (apply nonterminal/543 nt/746 goal1/752
                                      (function param/754[int] : int
                                        (apply production/544 prod/669
                                          (+ i/670 1) goal2/753 k/672)))))))))
                       case tag 1:
                        (seq
                          (apply
                            (field_imm 12
                              (global Dune__exe__RandomSentenceGenerator!))
                            (field_imm 0 *match*/3030))
                          (apply production/544 prod/669 (+ i/670 1)
                            (- goal/671 1) k/672))))
                    0)))))))
    (seq
      (setfield_ptr(root-init) 14
        (global Dune__exe__RandomSentenceGenerator!) nonterminal/543)
      (setfield_ptr(root-init) 15
        (global Dune__exe__RandomSentenceGenerator!) production/544)))
  (let
    (nonterminal/755 =
       (function nt/756 goal/757[int]
         (seq
           (if
             (==
               (field_mut 0
                 (field_imm 11 (global Dune__exe__RandomSentenceGenerator!)))
               0)
             0
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "src/RandomSentenceGenerator.ml" 181 2])))
           (let (k/758 = (function param/760[int] : int 0))
             (catch
               (try
                 (exit 7
                   (apply
                     (field_imm 14
                       (global Dune__exe__RandomSentenceGenerator!))
                     nt/756 goal/757 k/758))
                with e/761
                 (seq
                   (setfield_ptr 0
                     (field_imm 11
                       (global Dune__exe__RandomSentenceGenerator!))
                     0)
                   (reraise e/761)))
              with (7 val/3031[int])
               (apply
                 (field_imm 13 (global Dune__exe__RandomSentenceGenerator!))
                 0))))))
    (setfield_ptr(root-init) 16 (global Dune__exe__RandomSentenceGenerator!)
      nonterminal/755))
  (let
    (nonterminal/762 =
       (function nt/763 goal/764[int]
         (let
           (max/3033 =
              (apply
                (field_imm 11 (field_imm 11 (global Dune__exe__Grammar!)))
                nt/763)
            min/3032 =
              (apply
                (field_imm 9 (field_imm 11 (global Dune__exe__Grammar!)))
                nt/763)
            goal/767 =[int]
              (if (&& (<= min/3032 goal/764) (<= goal/764 max/3033)) goal/764
                (if (< goal/764 min/3032) min/3032
                  (seq
                    (if (< max/3033 goal/764) 0
                      (raise
                        (makeblock 0 (global Assert_failure/28!)
                          [0: "src/RandomSentenceGenerator.ml" 201 6])))
                    (if
                      (< max/3033
                        (field_imm 3
                          (global Dune__exe__RandomSentenceGenerator!)))
                      0
                      (raise
                        (makeblock 0 (global Assert_failure/28!)
                          [0: "src/RandomSentenceGenerator.ml" 202 6])))
                    max/3033))))
           (apply (field_imm 16 (global Dune__exe__RandomSentenceGenerator!))
             nt/763 goal/767))))
    (setfield_ptr(root-init) 0 (global Dune__exe__RandomSentenceGenerator!)
      nonterminal/762))
  0)
