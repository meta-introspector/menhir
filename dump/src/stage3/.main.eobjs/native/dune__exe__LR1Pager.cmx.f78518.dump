[
  structure_item (src/LR1Pager.ml[67,4082+0]..[68,4098+10])
    Pstr_type Rec
    [
      type_declaration "lr0state" (src/LR1Pager.ml[67,4082+5]..[67,4082+13]) (src/LR1Pager.ml[67,4082+0]..[68,4098+10])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/LR1Pager.ml[68,4098+2]..[68,4098+10])
              Ptyp_constr "Lr0.node" (src/LR1Pager.ml[68,4098+2]..[68,4098+10])
              []
    ]
  structure_item (src/LR1Pager.ml[70,4110+0]..[71,4126+14])
    Pstr_type Rec
    [
      type_declaration "lr1state" (src/LR1Pager.ml[70,4110+5]..[70,4110+13]) (src/LR1Pager.ml[70,4110+0]..[71,4126+14])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/LR1Pager.ml[71,4126+2]..[71,4126+14])
              Ptyp_constr "Lr0.lr1state" (src/LR1Pager.ml[71,4126+2]..[71,4126+14])
              []
    ]
  structure_item (src/LR1Pager.ml[73,4142+0]..[73,4142+12])
    Pstr_open Fresh
    module_expr (src/LR1Pager.ml[73,4142+5]..[73,4142+12])
      Pmod_ident "Grammar" (src/LR1Pager.ml[73,4142+5]..[73,4142+12])
  structure_item (src/LR1Pager.ml[75,4156+0]..[421,15473+3])
    Pstr_module
    "Run" (src/LR1Pager.ml[75,4156+7]..[75,4156+10])
      module_expr (src/LR1Pager.ml[75,4156+11]..[421,15473+3])
        Pmod_functor ()
        module_expr (src/LR1Pager.ml[75,4156+16]..[421,15473+3])
          Pmod_structure
          [
            structure_item (src/LR1Pager.ml[83,4405+0]..[99,4780+3])
              Pstr_module
              "G" (src/LR1Pager.ml[83,4405+7]..[83,4405+8])
                module_expr (src/LR1Pager.ml[83,4405+11]..[99,4780+3])
                  Pmod_structure
                  [
                    structure_item (src/LR1Pager.ml[85,4424+2]..[85,4424+19])
                      Pstr_type Rec
                      [
                        type_declaration "t" (src/LR1Pager.ml[85,4424+7]..[85,4424+8]) (src/LR1Pager.ml[85,4424+2]..[85,4424+19])
                          ptype_params =
                            []
                          ptype_cstrs =
                            []
                          ptype_kind =
                            Ptype_abstract
                          ptype_private = Public
                          ptype_manifest =
                            Some
                              core_type (src/LR1Pager.ml[85,4424+11]..[85,4424+19])
                                Ptyp_constr "lr1state" (src/LR1Pager.ml[85,4424+11]..[85,4424+19])
                                []
                      ]
                    structure_item (src/LR1Pager.ml[87,4445+2]..[90,4542+15])
                      Pstr_value Nonrec
                      [
                        <def>
                          pattern (src/LR1Pager.ml[87,4445+6]..[87,4445+18])
                            Ppat_var "foreach_root" (src/LR1Pager.ml[87,4445+6]..[87,4445+18])
                          expression (src/LR1Pager.ml[87,4445+19]..[90,4542+15]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/LR1Pager.ml[87,4445+19]..[87,4445+20])
                              Ppat_var "f" (src/LR1Pager.ml[87,4445+19]..[87,4445+20])
                            expression (src/LR1Pager.ml[88,4468+4]..[90,4542+15])
                              Pexp_apply
                              expression (src/LR1Pager.ml[88,4468+4]..[88,4468+22])
                                Pexp_ident "ProductionMap.iter" (src/LR1Pager.ml[88,4468+4]..[88,4468+22])
                              [
                                <arg>
                                Nolabel
                                  expression (src/LR1Pager.ml[88,4468+23]..[90,4542+5])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/LR1Pager.ml[88,4468+28]..[88,4468+33])
                                      Ppat_var "_prod" (src/LR1Pager.ml[88,4468+28]..[88,4468+33])
                                    expression (src/LR1Pager.ml[88,4468+34]..[89,4520+21]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (src/LR1Pager.ml[88,4468+34]..[88,4468+48])
                                        Ppat_constraint
                                        pattern (src/LR1Pager.ml[88,4468+35]..[88,4468+36])
                                          Ppat_var "c" (src/LR1Pager.ml[88,4468+35]..[88,4468+36])
                                        core_type (src/LR1Pager.ml[88,4468+39]..[88,4468+47])
                                          Ptyp_constr "lr0state" (src/LR1Pager.ml[88,4468+39]..[88,4468+47])
                                          []
                                      expression (src/LR1Pager.ml[89,4520+6]..[89,4520+21])
                                        Pexp_apply
                                        expression (src/LR1Pager.ml[89,4520+6]..[89,4520+7])
                                          Pexp_ident "f" (src/LR1Pager.ml[89,4520+6]..[89,4520+7])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/LR1Pager.ml[89,4520+8]..[89,4520+21])
                                              Pexp_apply
                                              expression (src/LR1Pager.ml[89,4520+9]..[89,4520+18])
                                                Pexp_ident "Lr0.start" (src/LR1Pager.ml[89,4520+9]..[89,4520+18])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/LR1Pager.ml[89,4520+19]..[89,4520+20])
                                                    Pexp_ident "c" (src/LR1Pager.ml[89,4520+19]..[89,4520+20])
                                              ]
                                        ]
                                <arg>
                                Nolabel
                                  expression (src/LR1Pager.ml[90,4542+6]..[90,4542+15])
                                    Pexp_ident "Lr0.entry" (src/LR1Pager.ml[90,4542+6]..[90,4542+15])
                              ]
                      ]
                    structure_item (src/LR1Pager.ml[92,4559+2]..[97,4765+13])
                      Pstr_value Nonrec
                      [
                        <def>
                          pattern (src/LR1Pager.ml[92,4559+6]..[92,4559+23])
                            Ppat_var "foreach_successor" (src/LR1Pager.ml[92,4559+6]..[92,4559+23])
                          expression (src/LR1Pager.ml[92,4559+24]..[97,4765+13]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/LR1Pager.ml[92,4559+24]..[92,4559+42])
                              Ppat_constraint
                              pattern (src/LR1Pager.ml[92,4559+25]..[92,4559+30])
                                Ppat_var "state" (src/LR1Pager.ml[92,4559+25]..[92,4559+30])
                              core_type (src/LR1Pager.ml[92,4559+33]..[92,4559+41])
                                Ptyp_constr "lr1state" (src/LR1Pager.ml[92,4559+33]..[92,4559+41])
                                []
                            expression (src/LR1Pager.ml[92,4559+43]..[97,4765+13]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/LR1Pager.ml[92,4559+43]..[92,4559+44])
                                Ppat_var "f" (src/LR1Pager.ml[92,4559+43]..[92,4559+44])
                              expression (src/LR1Pager.ml[93,4606+4]..[97,4765+13])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/LR1Pager.ml[93,4606+8]..[93,4606+15])
                                      Ppat_var "symbols" (src/LR1Pager.ml[93,4606+8]..[93,4606+15])
                                    expression (src/LR1Pager.ml[93,4606+18]..[93,4606+55])
                                      Pexp_apply
                                      expression (src/LR1Pager.ml[93,4606+18]..[93,4606+38])
                                        Pexp_ident "Lr0.outgoing_symbols" (src/LR1Pager.ml[93,4606+18]..[93,4606+38])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/LR1Pager.ml[93,4606+39]..[93,4606+55])
                                            Pexp_apply
                                            expression (src/LR1Pager.ml[93,4606+40]..[93,4606+48])
                                              Pexp_ident "Lr0.core" (src/LR1Pager.ml[93,4606+40]..[93,4606+48])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/LR1Pager.ml[93,4606+49]..[93,4606+54])
                                                  Pexp_ident "state" (src/LR1Pager.ml[93,4606+49]..[93,4606+54])
                                            ]
                                      ]
                                ]
                                expression (src/LR1Pager.ml[94,4665+4]..[97,4765+13])
                                  Pexp_apply
                                  expression (src/LR1Pager.ml[94,4665+4]..[94,4665+13])
                                    Pexp_ident "List.iter" (src/LR1Pager.ml[94,4665+4]..[94,4665+13])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/LR1Pager.ml[94,4665+14]..[97,4765+5])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/LR1Pager.ml[94,4665+19]..[94,4665+25])
                                          Ppat_var "symbol" (src/LR1Pager.ml[94,4665+19]..[94,4665+25])
                                        expression (src/LR1Pager.ml[95,4694+6]..[96,4747+17])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/LR1Pager.ml[95,4694+10]..[95,4694+19])
                                                Ppat_var "successor" (src/LR1Pager.ml[95,4694+10]..[95,4694+19])
                                              expression (src/LR1Pager.ml[95,4694+22]..[95,4694+49])
                                                Pexp_apply
                                                expression (src/LR1Pager.ml[95,4694+22]..[95,4694+36])
                                                  Pexp_ident "Lr0.transition" (src/LR1Pager.ml[95,4694+22]..[95,4694+36])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/LR1Pager.ml[95,4694+37]..[95,4694+43])
                                                      Pexp_ident "symbol" (src/LR1Pager.ml[95,4694+37]..[95,4694+43])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/LR1Pager.ml[95,4694+44]..[95,4694+49])
                                                      Pexp_ident "state" (src/LR1Pager.ml[95,4694+44]..[95,4694+49])
                                                ]
                                          ]
                                          expression (src/LR1Pager.ml[96,4747+6]..[96,4747+17])
                                            Pexp_apply
                                            expression (src/LR1Pager.ml[96,4747+6]..[96,4747+7])
                                              Pexp_ident "f" (src/LR1Pager.ml[96,4747+6]..[96,4747+7])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/LR1Pager.ml[96,4747+8]..[96,4747+17])
                                                  Pexp_ident "successor" (src/LR1Pager.ml[96,4747+8]..[96,4747+17])
                                            ]
                                    <arg>
                                    Nolabel
                                      expression (src/LR1Pager.ml[97,4765+6]..[97,4765+13])
                                        Pexp_ident "symbols" (src/LR1Pager.ml[97,4765+6]..[97,4765+13])
                                  ]
                      ]
                  ]
            structure_item (src/LR1Pager.ml[110,5193+0]..[130,5716+3])
              Pstr_module
              "S" (src/LR1Pager.ml[110,5193+7]..[110,5193+8])
                module_expr (src/LR1Pager.ml[110,5193+11]..[130,5716+3])
                  Pmod_structure
                  [
                    structure_item (src/LR1Pager.ml[112,5212+2]..[112,5212+45])
                      Pstr_include                      module_expr (src/LR1Pager.ml[112,5212+10]..[112,5212+45])
                        Pmod_apply
                        module_expr (src/LR1Pager.ml[112,5212+10]..[112,5212+18])
                          Pmod_ident "Set.Make" (src/LR1Pager.ml[112,5212+10]..[112,5212+18])
                        module_expr (src/LR1Pager.ml[112,5212+19]..[112,5212+44])
                          Pmod_ident "Lr0.Lr1StateAsOrderedType" (src/LR1Pager.ml[112,5212+19]..[112,5212+44])
                    structure_item (src/LR1Pager.ml[119,5515+2]..[119,5515+24])
                      Pstr_exception
                      type_exception
                        ptyext_constructor =
                          extension_constructor (src/LR1Pager.ml[119,5515+2]..[119,5515+24])
                            pext_name = "Found"
                            pext_kind =
                              Pext_decl
                                [
                                  core_type (src/LR1Pager.ml[119,5515+21]..[119,5515+24])
                                    Ptyp_constr "elt" (src/LR1Pager.ml[119,5515+21]..[119,5515+24])
                                    []
                                ]
                                None
                    structure_item (src/LR1Pager.ml[121,5541+2]..[128,5702+12])
                      Pstr_value Nonrec
                      [
                        <def>
                          pattern (src/LR1Pager.ml[121,5541+6]..[121,5541+12])
                            Ppat_var "select" (src/LR1Pager.ml[121,5541+6]..[121,5541+12])
                          expression (src/LR1Pager.ml[121,5541+13]..[128,5702+12]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/LR1Pager.ml[121,5541+13]..[121,5541+30])
                              Ppat_constraint
                              pattern (src/LR1Pager.ml[121,5541+14]..[121,5541+15])
                                Ppat_var "p" (src/LR1Pager.ml[121,5541+14]..[121,5541+15])
                              core_type (src/LR1Pager.ml[121,5541+18]..[121,5541+29])
                                Ptyp_arrow
                                Nolabel
                                core_type (src/LR1Pager.ml[121,5541+18]..[121,5541+21])
                                  Ptyp_constr "elt" (src/LR1Pager.ml[121,5541+18]..[121,5541+21])
                                  []
                                core_type (src/LR1Pager.ml[121,5541+25]..[121,5541+29])
                                  Ptyp_constr "bool" (src/LR1Pager.ml[121,5541+25]..[121,5541+29])
                                  []
                            expression (src/LR1Pager.ml[121,5541+31]..[128,5702+12]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/LR1Pager.ml[121,5541+31]..[121,5541+38])
                                Ppat_constraint
                                pattern (src/LR1Pager.ml[121,5541+32]..[121,5541+33])
                                  Ppat_var "s" (src/LR1Pager.ml[121,5541+32]..[121,5541+33])
                                core_type (src/LR1Pager.ml[121,5541+36]..[121,5541+37])
                                  Ptyp_constr "t" (src/LR1Pager.ml[121,5541+36]..[121,5541+37])
                                  []
                              expression (src/LR1Pager.ml[121,5541+39]..[128,5702+12])
                                Pexp_constraint
                                expression (src/LR1Pager.ml[122,5595+4]..[128,5702+12])
                                  Pexp_try
                                  expression (src/LR1Pager.ml[123,5603+6]..[126,5671+10])
                                    Pexp_sequence
                                    expression (src/LR1Pager.ml[123,5603+6]..[125,5660+9])
                                      Pexp_apply
                                      expression (src/LR1Pager.ml[123,5603+6]..[123,5603+10])
                                        Pexp_ident "iter" (src/LR1Pager.ml[123,5603+6]..[123,5603+10])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/LR1Pager.ml[123,5603+11]..[125,5660+7])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (src/LR1Pager.ml[123,5603+16]..[123,5603+17])
                                              Ppat_var "x" (src/LR1Pager.ml[123,5603+16]..[123,5603+17])
                                            expression (src/LR1Pager.ml[124,5624+8]..[124,5624+35])
                                              Pexp_ifthenelse
                                              expression (src/LR1Pager.ml[124,5624+11]..[124,5624+14])
                                                Pexp_apply
                                                expression (src/LR1Pager.ml[124,5624+11]..[124,5624+12])
                                                  Pexp_ident "p" (src/LR1Pager.ml[124,5624+11]..[124,5624+12])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/LR1Pager.ml[124,5624+13]..[124,5624+14])
                                                      Pexp_ident "x" (src/LR1Pager.ml[124,5624+13]..[124,5624+14])
                                                ]
                                              expression (src/LR1Pager.ml[124,5624+20]..[124,5624+35])
                                                Pexp_apply
                                                expression (src/LR1Pager.ml[124,5624+20]..[124,5624+25])
                                                  Pexp_ident "raise" (src/LR1Pager.ml[124,5624+20]..[124,5624+25])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/LR1Pager.ml[124,5624+26]..[124,5624+35])
                                                      Pexp_construct "Found" (src/LR1Pager.ml[124,5624+27]..[124,5624+32])
                                                      Some
                                                        expression (src/LR1Pager.ml[124,5624+33]..[124,5624+34])
                                                          Pexp_ident "x" (src/LR1Pager.ml[124,5624+33]..[124,5624+34])
                                                ]
                                              None
                                        <arg>
                                        Nolabel
                                          expression (src/LR1Pager.ml[125,5660+8]..[125,5660+9])
                                            Pexp_ident "s" (src/LR1Pager.ml[125,5660+8]..[125,5660+9])
                                      ]
                                    expression (src/LR1Pager.ml[126,5671+6]..[126,5671+10])
                                      Pexp_construct "None" (src/LR1Pager.ml[126,5671+6]..[126,5671+10])
                                      None
                                  [
                                    <case>
                                      pattern (src/LR1Pager.ml[127,5682+9]..[127,5682+16])
                                        Ppat_construct "Found" (src/LR1Pager.ml[127,5682+9]..[127,5682+14])
                                        Some
                                          []
                                          pattern (src/LR1Pager.ml[127,5682+15]..[127,5682+16])
                                            Ppat_var "x" (src/LR1Pager.ml[127,5682+15]..[127,5682+16])
                                      expression (src/LR1Pager.ml[128,5702+6]..[128,5702+12])
                                        Pexp_construct "Some" (src/LR1Pager.ml[128,5702+6]..[128,5702+10])
                                        Some
                                          expression (src/LR1Pager.ml[128,5702+11]..[128,5702+12])
                                            Pexp_ident "x" (src/LR1Pager.ml[128,5702+11]..[128,5702+12])
                                  ]
                                core_type (src/LR1Pager.ml[121,5541+41]..[121,5541+51])
                                  Ptyp_constr "option" (src/LR1Pager.ml[121,5541+45]..[121,5541+51])
                                  [
                                    core_type (src/LR1Pager.ml[121,5541+41]..[121,5541+44])
                                      Ptyp_constr "elt" (src/LR1Pager.ml[121,5541+41]..[121,5541+44])
                                      []
                                  ]
                      ]
                  ]
            structure_item (src/LR1Pager.ml[143,6265+0]..[144,6292+26])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Pager.ml[143,6265+4]..[143,6265+12])
                    Ppat_var "families" (src/LR1Pager.ml[143,6265+4]..[143,6265+12])
                  core_type (src/LR1Pager.ml[143,6265+15]..[143,6265+24])
                    Ptyp_constr "array" (src/LR1Pager.ml[143,6265+19]..[143,6265+24])
                    [
                      core_type (src/LR1Pager.ml[143,6265+15]..[143,6265+18])
                        Ptyp_constr "S.t" (src/LR1Pager.ml[143,6265+15]..[143,6265+18])
                        []
                    ]
                  expression (src/LR1Pager.ml[144,6292+2]..[144,6292+26])
                    Pexp_apply
                    expression (src/LR1Pager.ml[144,6292+2]..[144,6292+12])
                      Pexp_ident "Array.make" (src/LR1Pager.ml[144,6292+2]..[144,6292+12])
                    [
                      <arg>
                      Nolabel
                        expression (src/LR1Pager.ml[144,6292+13]..[144,6292+18])
                          Pexp_ident "Lr0.n" (src/LR1Pager.ml[144,6292+13]..[144,6292+18])
                      <arg>
                      Nolabel
                        expression (src/LR1Pager.ml[144,6292+19]..[144,6292+26])
                          Pexp_ident "S.empty" (src/LR1Pager.ml[144,6292+19]..[144,6292+26])
                    ]
              ]
            structure_item (src/LR1Pager.ml[151,6525+0]..[152,6559+16])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Pager.ml[151,6525+4]..[151,6525+12])
                    Ppat_var "frontier" (src/LR1Pager.ml[151,6525+4]..[151,6525+12])
                  core_type (src/LR1Pager.ml[151,6525+15]..[151,6525+31])
                    Ptyp_constr "Stack.t" (src/LR1Pager.ml[151,6525+24]..[151,6525+31])
                    [
                      core_type (src/LR1Pager.ml[151,6525+15]..[151,6525+23])
                        Ptyp_constr "lr1state" (src/LR1Pager.ml[151,6525+15]..[151,6525+23])
                        []
                    ]
                  expression (src/LR1Pager.ml[152,6559+2]..[152,6559+16])
                    Pexp_apply
                    expression (src/LR1Pager.ml[152,6559+2]..[152,6559+14])
                      Pexp_ident "Stack.create" (src/LR1Pager.ml[152,6559+2]..[152,6559+14])
                    [
                      <arg>
                      Nolabel
                        expression (src/LR1Pager.ml[152,6559+14]..[152,6559+16])
                          Pexp_construct "()" (src/LR1Pager.ml[152,6559+14]..[152,6559+16])
                          None
                    ]
              ]
            structure_item (src/LR1Pager.ml[154,6577+0]..[155,6598+27])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Pager.ml[154,6577+4]..[154,6577+12])
                    Ppat_var "schedule" (src/LR1Pager.ml[154,6577+4]..[154,6577+12])
                  expression (src/LR1Pager.ml[154,6577+13]..[155,6598+27]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LR1Pager.ml[154,6577+13]..[154,6577+18])
                      Ppat_var "state" (src/LR1Pager.ml[154,6577+13]..[154,6577+18])
                    expression (src/LR1Pager.ml[155,6598+2]..[155,6598+27])
                      Pexp_apply
                      expression (src/LR1Pager.ml[155,6598+2]..[155,6598+12])
                        Pexp_ident "Stack.push" (src/LR1Pager.ml[155,6598+2]..[155,6598+12])
                      [
                        <arg>
                        Nolabel
                          expression (src/LR1Pager.ml[155,6598+13]..[155,6598+18])
                            Pexp_ident "state" (src/LR1Pager.ml[155,6598+13]..[155,6598+18])
                        <arg>
                        Nolabel
                          expression (src/LR1Pager.ml[155,6598+19]..[155,6598+27])
                            Pexp_ident "frontier" (src/LR1Pager.ml[155,6598+19]..[155,6598+27])
                      ]
              ]
            structure_item (src/LR1Pager.ml[168,7154+0]..[170,7217+38])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Pager.ml[168,7154+4]..[168,7154+11])
                    Ppat_var "subsume" (src/LR1Pager.ml[168,7154+4]..[168,7154+11])
                  expression (src/LR1Pager.ml[168,7154+12]..[170,7217+38]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LR1Pager.ml[168,7154+12]..[168,7154+21])
                      Ppat_var "candidate" (src/LR1Pager.ml[168,7154+12]..[168,7154+21])
                    expression (src/LR1Pager.ml[168,7154+22]..[170,7217+38]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/LR1Pager.ml[168,7154+22]..[168,7154+27])
                        Ppat_var "state" (src/LR1Pager.ml[168,7154+22]..[168,7154+27])
                      expression (src/LR1Pager.ml[169,7184+2]..[170,7217+38])
                        Pexp_apply
                        expression (src/LR1Pager.ml[169,7184+30]..[169,7184+32])
                          Pexp_ident "&&" (src/LR1Pager.ml[169,7184+30]..[169,7184+32])
                        [
                          <arg>
                          Nolabel
                            expression (src/LR1Pager.ml[169,7184+2]..[169,7184+29])
                              Pexp_apply
                              expression (src/LR1Pager.ml[169,7184+2]..[169,7184+13])
                                Pexp_ident "Lr0.subsume" (src/LR1Pager.ml[169,7184+2]..[169,7184+13])
                              [
                                <arg>
                                Nolabel
                                  expression (src/LR1Pager.ml[169,7184+14]..[169,7184+23])
                                    Pexp_ident "candidate" (src/LR1Pager.ml[169,7184+14]..[169,7184+23])
                                <arg>
                                Nolabel
                                  expression (src/LR1Pager.ml[169,7184+24]..[169,7184+29])
                                    Pexp_ident "state" (src/LR1Pager.ml[169,7184+24]..[169,7184+29])
                              ]
                          <arg>
                          Nolabel
                            expression (src/LR1Pager.ml[170,7217+2]..[170,7217+38])
                              Pexp_apply
                              expression (src/LR1Pager.ml[170,7217+2]..[170,7217+22])
                                Pexp_ident "Lr0.error_compatible" (src/LR1Pager.ml[170,7217+2]..[170,7217+22])
                              [
                                <arg>
                                Nolabel
                                  expression (src/LR1Pager.ml[170,7217+23]..[170,7217+32])
                                    Pexp_ident "candidate" (src/LR1Pager.ml[170,7217+23]..[170,7217+32])
                                <arg>
                                Nolabel
                                  expression (src/LR1Pager.ml[170,7217+33]..[170,7217+38])
                                    Pexp_ident "state" (src/LR1Pager.ml[170,7217+33]..[170,7217+38])
                              ]
                        ]
              ]
            structure_item (src/LR1Pager.ml[172,7257+0]..[175,7366+38])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Pager.ml[172,7257+4]..[172,7257+14])
                    Ppat_var "compatible" (src/LR1Pager.ml[172,7257+4]..[172,7257+14])
                  expression (src/LR1Pager.ml[172,7257+15]..[175,7366+38]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LR1Pager.ml[172,7257+15]..[172,7257+24])
                      Ppat_var "candidate" (src/LR1Pager.ml[172,7257+15]..[172,7257+24])
                    expression (src/LR1Pager.ml[172,7257+25]..[175,7366+38]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/LR1Pager.ml[172,7257+25]..[172,7257+30])
                        Ppat_var "state" (src/LR1Pager.ml[172,7257+25]..[172,7257+30])
                      expression (src/LR1Pager.ml[173,7290+2]..[175,7366+38])
                        Pexp_apply
                        expression (src/LR1Pager.ml[173,7290+33]..[173,7290+35])
                          Pexp_ident "&&" (src/LR1Pager.ml[173,7290+33]..[173,7290+35])
                        [
                          <arg>
                          Nolabel
                            expression (src/LR1Pager.ml[173,7290+2]..[173,7290+32])
                              Pexp_apply
                              expression (src/LR1Pager.ml[173,7290+2]..[173,7290+16])
                                Pexp_ident "Lr0.compatible" (src/LR1Pager.ml[173,7290+2]..[173,7290+16])
                              [
                                <arg>
                                Nolabel
                                  expression (src/LR1Pager.ml[173,7290+17]..[173,7290+26])
                                    Pexp_ident "candidate" (src/LR1Pager.ml[173,7290+17]..[173,7290+26])
                                <arg>
                                Nolabel
                                  expression (src/LR1Pager.ml[173,7290+27]..[173,7290+32])
                                    Pexp_ident "state" (src/LR1Pager.ml[173,7290+27]..[173,7290+32])
                              ]
                          <arg>
                          Nolabel
                            expression (src/LR1Pager.ml[174,7326+2]..[175,7366+38])
                              Pexp_apply
                              expression (src/LR1Pager.ml[174,7326+37]..[174,7326+39])
                                Pexp_ident "&&" (src/LR1Pager.ml[174,7326+37]..[174,7326+39])
                              [
                                <arg>
                                Nolabel
                                  expression (src/LR1Pager.ml[174,7326+2]..[174,7326+36])
                                    Pexp_apply
                                    expression (src/LR1Pager.ml[174,7326+2]..[174,7326+20])
                                      Pexp_ident "Lr0.eos_compatible" (src/LR1Pager.ml[174,7326+2]..[174,7326+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/LR1Pager.ml[174,7326+21]..[174,7326+30])
                                          Pexp_ident "candidate" (src/LR1Pager.ml[174,7326+21]..[174,7326+30])
                                      <arg>
                                      Nolabel
                                        expression (src/LR1Pager.ml[174,7326+31]..[174,7326+36])
                                          Pexp_ident "state" (src/LR1Pager.ml[174,7326+31]..[174,7326+36])
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/LR1Pager.ml[175,7366+2]..[175,7366+38])
                                    Pexp_apply
                                    expression (src/LR1Pager.ml[175,7366+2]..[175,7366+22])
                                      Pexp_ident "Lr0.error_compatible" (src/LR1Pager.ml[175,7366+2]..[175,7366+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/LR1Pager.ml[175,7366+23]..[175,7366+32])
                                          Pexp_ident "candidate" (src/LR1Pager.ml[175,7366+23]..[175,7366+32])
                                      <arg>
                                      Nolabel
                                        expression (src/LR1Pager.ml[175,7366+33]..[175,7366+38])
                                          Pexp_ident "state" (src/LR1Pager.ml[175,7366+33]..[175,7366+38])
                                    ]
                              ]
                        ]
              ]
            structure_item (src/LR1Pager.ml[184,7858+0]..[195,8169+3])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Pager.ml[184,7858+4]..[184,7858+14])
                    Ppat_var "compatible" (src/LR1Pager.ml[184,7858+4]..[184,7858+14])
                  expression (src/LR1Pager.ml[184,7858+15]..[195,8169+3]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LR1Pager.ml[184,7858+15]..[184,7858+24])
                      Ppat_var "candidate" (src/LR1Pager.ml[184,7858+15]..[184,7858+24])
                    expression (src/LR1Pager.ml[184,7858+25]..[195,8169+3]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/LR1Pager.ml[184,7858+25]..[184,7858+30])
                        Ppat_var "state" (src/LR1Pager.ml[184,7858+25]..[184,7858+30])
                      expression (src/LR1Pager.ml[185,7891+2]..[195,8169+3])
                        Pexp_open Fresh
                        module_expr (src/LR1Pager.ml[185,7891+2]..[185,7891+10])
                          Pmod_ident "Settings" (src/LR1Pager.ml[185,7891+2]..[185,7891+10])
                        expression (src/LR1Pager.ml[186,7904+4]..[194,8148+20])
                          Pexp_match
                          expression (src/LR1Pager.ml[186,7904+10]..[186,7904+27])
                            Pexp_ident "construction_mode" (src/LR1Pager.ml[186,7904+10]..[186,7904+27])
                          [
                            <case>
                              pattern (src/LR1Pager.ml[187,7937+6]..[187,7937+15])
                                Ppat_construct "ModePager" (src/LR1Pager.ml[187,7937+6]..[187,7937+15])
                                None
                              expression (src/LR1Pager.ml[188,7956+8]..[188,7956+34])
                                Pexp_apply
                                expression (src/LR1Pager.ml[188,7956+8]..[188,7956+18])
                                  Pexp_ident "compatible" (src/LR1Pager.ml[188,7956+8]..[188,7956+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/LR1Pager.ml[188,7956+19]..[188,7956+28])
                                      Pexp_ident "candidate" (src/LR1Pager.ml[188,7956+19]..[188,7956+28])
                                  <arg>
                                  Nolabel
                                    expression (src/LR1Pager.ml[188,7956+29]..[188,7956+34])
                                      Pexp_ident "state" (src/LR1Pager.ml[188,7956+29]..[188,7956+34])
                                ]
                            <case>
                              pattern (src/LR1Pager.ml[189,7991+6]..[189,7991+23])
                                Ppat_construct "ModeInclusionOnly" (src/LR1Pager.ml[189,7991+6]..[189,7991+23])
                                None
                              expression (src/LR1Pager.ml[190,8018+8]..[190,8018+58])
                                Pexp_apply
                                expression (src/LR1Pager.ml[190,8018+32]..[190,8018+34])
                                  Pexp_ident "||" (src/LR1Pager.ml[190,8018+32]..[190,8018+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/LR1Pager.ml[190,8018+8]..[190,8018+31])
                                      Pexp_apply
                                      expression (src/LR1Pager.ml[190,8018+8]..[190,8018+15])
                                        Pexp_ident "subsume" (src/LR1Pager.ml[190,8018+8]..[190,8018+15])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/LR1Pager.ml[190,8018+16]..[190,8018+25])
                                            Pexp_ident "candidate" (src/LR1Pager.ml[190,8018+16]..[190,8018+25])
                                        <arg>
                                        Nolabel
                                          expression (src/LR1Pager.ml[190,8018+26]..[190,8018+31])
                                            Pexp_ident "state" (src/LR1Pager.ml[190,8018+26]..[190,8018+31])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/LR1Pager.ml[190,8018+35]..[190,8018+58])
                                      Pexp_apply
                                      expression (src/LR1Pager.ml[190,8018+35]..[190,8018+42])
                                        Pexp_ident "subsume" (src/LR1Pager.ml[190,8018+35]..[190,8018+42])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/LR1Pager.ml[190,8018+43]..[190,8018+48])
                                            Pexp_ident "state" (src/LR1Pager.ml[190,8018+43]..[190,8018+48])
                                        <arg>
                                        Nolabel
                                          expression (src/LR1Pager.ml[190,8018+49]..[190,8018+58])
                                            Pexp_ident "candidate" (src/LR1Pager.ml[190,8018+49]..[190,8018+58])
                                      ]
                                ]
                            <case>
                              pattern (src/LR1Pager.ml[191,8077+6]..[192,8097+14])
                                Ppat_or
                                pattern (src/LR1Pager.ml[191,8077+6]..[191,8077+19])
                                  Ppat_construct "ModeCanonical" (src/LR1Pager.ml[191,8077+6]..[191,8077+19])
                                  None
                                pattern (src/LR1Pager.ml[192,8097+6]..[192,8097+14])
                                  Ppat_construct "ModeLALR" (src/LR1Pager.ml[192,8097+6]..[192,8097+14])
                                  None
                              expression (src/LR1Pager.ml[194,8148+8]..[194,8148+20])
                                Pexp_assert
                                expression (src/LR1Pager.ml[194,8148+15]..[194,8148+20])
                                  Pexp_construct "false" (src/LR1Pager.ml[194,8148+15]..[194,8148+20])
                                  None
                          ]
              ]
            structure_item (src/LR1Pager.ml[201,8279+0]..[202,8291+7])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Pager.ml[201,8279+4]..[201,8279+9])
                    Ppat_var "debug" (src/LR1Pager.ml[201,8279+4]..[201,8279+9])
                  expression (src/LR1Pager.ml[202,8291+2]..[202,8291+7])
                    Pexp_construct "false" (src/LR1Pager.ml[202,8291+2]..[202,8291+7])
                    None
              ]
            structure_item (src/LR1Pager.ml[204,8300+0]..[210,8436+23])
              Pstr_value Rec
              [
                <def>
                  pattern (src/LR1Pager.ml[204,8300+8]..[204,8300+14])
                    Ppat_var "no_two" (src/LR1Pager.ml[204,8300+8]..[204,8300+14])
                  expression (src/LR1Pager.ml[204,8300+15]..[210,8436+23]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LR1Pager.ml[204,8300+15]..[204,8300+22])
                      Ppat_var "related" (src/LR1Pager.ml[204,8300+15]..[204,8300+22])
                    expression (src/LR1Pager.ml[204,8300+23]..[210,8436+23]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/LR1Pager.ml[204,8300+23]..[204,8300+25])
                        Ppat_var "xs" (src/LR1Pager.ml[204,8300+23]..[204,8300+25])
                      expression (src/LR1Pager.ml[205,8328+2]..[210,8436+23])
                        Pexp_match
                        expression (src/LR1Pager.ml[205,8328+8]..[205,8328+10])
                          Pexp_ident "xs" (src/LR1Pager.ml[205,8328+8]..[205,8328+10])
                        [
                          <case>
                            pattern (src/LR1Pager.ml[206,8344+4]..[206,8344+6])
                              Ppat_construct "[]" (src/LR1Pager.ml[206,8344+4]..[206,8344+6])
                              None
                            expression (src/LR1Pager.ml[207,8354+6]..[207,8354+10])
                              Pexp_construct "true" (src/LR1Pager.ml[207,8354+6]..[207,8354+10])
                              None
                          <case>
                            pattern (src/LR1Pager.ml[208,8365+4]..[208,8365+11])
                              Ppat_construct "::" (src/LR1Pager.ml[208,8365+6]..[208,8365+8])
                              Some
                                []
                                pattern (src/LR1Pager.ml[208,8365+4]..[208,8365+11]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (src/LR1Pager.ml[208,8365+4]..[208,8365+5])
                                      Ppat_var "x" (src/LR1Pager.ml[208,8365+4]..[208,8365+5])
                                    pattern (src/LR1Pager.ml[208,8365+9]..[208,8365+11])
                                      Ppat_var "xs" (src/LR1Pager.ml[208,8365+9]..[208,8365+11])
                                  ]
                            expression (src/LR1Pager.ml[209,8380+6]..[210,8436+23])
                              Pexp_apply
                              expression (src/LR1Pager.ml[209,8380+53]..[209,8380+55])
                                Pexp_ident "&&" (src/LR1Pager.ml[209,8380+53]..[209,8380+55])
                              [
                                <arg>
                                Nolabel
                                  expression (src/LR1Pager.ml[209,8380+6]..[209,8380+52])
                                    Pexp_apply
                                    expression (src/LR1Pager.ml[209,8380+6]..[209,8380+18])
                                      Pexp_ident "List.for_all" (src/LR1Pager.ml[209,8380+6]..[209,8380+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/LR1Pager.ml[209,8380+19]..[209,8380+49])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (src/LR1Pager.ml[209,8380+24]..[209,8380+26])
                                            Ppat_var "x'" (src/LR1Pager.ml[209,8380+24]..[209,8380+26])
                                          expression (src/LR1Pager.ml[209,8380+30]..[209,8380+48])
                                            Pexp_apply
                                            expression (src/LR1Pager.ml[209,8380+30]..[209,8380+33])
                                              Pexp_ident "not" (src/LR1Pager.ml[209,8380+30]..[209,8380+33])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/LR1Pager.ml[209,8380+34]..[209,8380+48])
                                                  Pexp_apply
                                                  expression (src/LR1Pager.ml[209,8380+35]..[209,8380+42])
                                                    Pexp_ident "related" (src/LR1Pager.ml[209,8380+35]..[209,8380+42])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/LR1Pager.ml[209,8380+43]..[209,8380+44])
                                                        Pexp_ident "x" (src/LR1Pager.ml[209,8380+43]..[209,8380+44])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/LR1Pager.ml[209,8380+45]..[209,8380+47])
                                                        Pexp_ident "x'" (src/LR1Pager.ml[209,8380+45]..[209,8380+47])
                                                  ]
                                            ]
                                      <arg>
                                      Nolabel
                                        expression (src/LR1Pager.ml[209,8380+50]..[209,8380+52])
                                          Pexp_ident "xs" (src/LR1Pager.ml[209,8380+50]..[209,8380+52])
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/LR1Pager.ml[210,8436+6]..[210,8436+23])
                                    Pexp_apply
                                    expression (src/LR1Pager.ml[210,8436+6]..[210,8436+12])
                                      Pexp_ident "no_two" (src/LR1Pager.ml[210,8436+6]..[210,8436+12])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/LR1Pager.ml[210,8436+13]..[210,8436+20])
                                          Pexp_ident "related" (src/LR1Pager.ml[210,8436+13]..[210,8436+20])
                                      <arg>
                                      Nolabel
                                        expression (src/LR1Pager.ml[210,8436+21]..[210,8436+23])
                                          Pexp_ident "xs" (src/LR1Pager.ml[210,8436+21]..[210,8436+23])
                                    ]
                              ]
                        ]
              ]
            structure_item (src/LR1Pager.ml[212,8461+0]..[214,8538+27])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Pager.ml[212,8461+4]..[212,8461+15])
                    Ppat_var "well_formed" (src/LR1Pager.ml[212,8461+4]..[212,8461+15])
                  expression (src/LR1Pager.ml[212,8461+16]..[214,8538+27]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LR1Pager.ml[212,8461+16]..[212,8461+30])
                      Ppat_constraint
                      pattern (src/LR1Pager.ml[212,8461+17]..[212,8461+23])
                        Ppat_var "family" (src/LR1Pager.ml[212,8461+17]..[212,8461+23])
                      core_type (src/LR1Pager.ml[212,8461+26]..[212,8461+29])
                        Ptyp_constr "S.t" (src/LR1Pager.ml[212,8461+26]..[212,8461+29])
                        []
                    expression (src/LR1Pager.ml[212,8461+31]..[214,8538+27])
                      Pexp_constraint
                      expression (src/LR1Pager.ml[213,8501+2]..[214,8538+27])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/LR1Pager.ml[213,8501+6]..[213,8501+13])
                              Ppat_var "members" (src/LR1Pager.ml[213,8501+6]..[213,8501+13])
                            expression (src/LR1Pager.ml[213,8501+16]..[213,8501+33])
                              Pexp_apply
                              expression (src/LR1Pager.ml[213,8501+16]..[213,8501+26])
                                Pexp_ident "S.elements" (src/LR1Pager.ml[213,8501+16]..[213,8501+26])
                              [
                                <arg>
                                Nolabel
                                  expression (src/LR1Pager.ml[213,8501+27]..[213,8501+33])
                                    Pexp_ident "family" (src/LR1Pager.ml[213,8501+27]..[213,8501+33])
                              ]
                        ]
                        expression (src/LR1Pager.ml[214,8538+2]..[214,8538+27])
                          Pexp_apply
                          expression (src/LR1Pager.ml[214,8538+2]..[214,8538+8])
                            Pexp_ident "no_two" (src/LR1Pager.ml[214,8538+2]..[214,8538+8])
                          [
                            <arg>
                            Nolabel
                              expression (src/LR1Pager.ml[214,8538+9]..[214,8538+19])
                                Pexp_ident "compatible" (src/LR1Pager.ml[214,8538+9]..[214,8538+19])
                            <arg>
                            Nolabel
                              expression (src/LR1Pager.ml[214,8538+20]..[214,8538+27])
                                Pexp_ident "members" (src/LR1Pager.ml[214,8538+20]..[214,8538+27])
                          ]
                      core_type (src/LR1Pager.ml[212,8461+33]..[212,8461+37])
                        Ptyp_constr "bool" (src/LR1Pager.ml[212,8461+33]..[212,8461+37])
                        []
              ]
            structure_item (src/LR1Pager.ml[230,9340+0]..[307,12231+24])
              Pstr_value Rec
              [
                <def>
                  pattern (src/LR1Pager.ml[230,9340+8]..[230,9340+15])
                    Ppat_var "examine" (src/LR1Pager.ml[230,9340+8]..[230,9340+15])
                  expression (src/LR1Pager.ml[230,9340+16]..[260,10440+27]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LR1Pager.ml[230,9340+16]..[230,9340+38])
                      Ppat_constraint
                      pattern (src/LR1Pager.ml[230,9340+17]..[230,9340+26])
                        Ppat_var "candidate" (src/LR1Pager.ml[230,9340+17]..[230,9340+26])
                      core_type (src/LR1Pager.ml[230,9340+29]..[230,9340+37])
                        Ptyp_constr "lr1state" (src/LR1Pager.ml[230,9340+29]..[230,9340+37])
                        []
                    expression (src/LR1Pager.ml[235,9483+2]..[260,10440+27])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/LR1Pager.ml[235,9483+6]..[235,9483+7])
                            Ppat_var "c" (src/LR1Pager.ml[235,9483+6]..[235,9483+7])
                          core_type (src/LR1Pager.ml[235,9483+10]..[235,9483+18])
                            Ptyp_constr "lr0state" (src/LR1Pager.ml[235,9483+10]..[235,9483+18])
                            []
                          expression (src/LR1Pager.ml[235,9483+21]..[235,9483+39])
                            Pexp_apply
                            expression (src/LR1Pager.ml[235,9483+21]..[235,9483+29])
                              Pexp_ident "Lr0.core" (src/LR1Pager.ml[235,9483+21]..[235,9483+29])
                            [
                              <arg>
                              Nolabel
                                expression (src/LR1Pager.ml[235,9483+30]..[235,9483+39])
                                  Pexp_ident "candidate" (src/LR1Pager.ml[235,9483+30]..[235,9483+39])
                            ]
                      ]
                      expression (src/LR1Pager.ml[236,9526+2]..[260,10440+27])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/LR1Pager.ml[236,9526+6]..[236,9526+12])
                              Ppat_var "family" (src/LR1Pager.ml[236,9526+6]..[236,9526+12])
                            core_type (src/LR1Pager.ml[236,9526+15]..[236,9526+18])
                              Ptyp_constr "S.t" (src/LR1Pager.ml[236,9526+15]..[236,9526+18])
                              []
                            expression (src/LR1Pager.ml[236,9526+21]..[236,9526+33])
                              Pexp_apply
                              expression (src/LR1Pager.ml[236,9526+21]..[236,9526+33]) ghost
                                Pexp_ident "Array.get" (src/LR1Pager.ml[236,9526+21]..[236,9526+33]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (src/LR1Pager.ml[236,9526+21]..[236,9526+29])
                                    Pexp_ident "families" (src/LR1Pager.ml[236,9526+21]..[236,9526+29])
                                <arg>
                                Nolabel
                                  expression (src/LR1Pager.ml[236,9526+31]..[236,9526+32])
                                    Pexp_ident "c" (src/LR1Pager.ml[236,9526+31]..[236,9526+32])
                              ]
                        ]
                        expression (src/LR1Pager.ml[237,9563+2]..[260,10440+27])
                          Pexp_sequence
                          expression (src/LR1Pager.ml[237,9563+2]..[237,9563+43])
                            Pexp_ifthenelse
                            expression (src/LR1Pager.ml[237,9563+5]..[237,9563+10])
                              Pexp_ident "debug" (src/LR1Pager.ml[237,9563+5]..[237,9563+10])
                            expression (src/LR1Pager.ml[237,9563+16]..[237,9563+43])
                              Pexp_assert
                              expression (src/LR1Pager.ml[237,9563+23]..[237,9563+43])
                                Pexp_apply
                                expression (src/LR1Pager.ml[237,9563+24]..[237,9563+35])
                                  Pexp_ident "well_formed" (src/LR1Pager.ml[237,9563+24]..[237,9563+35])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/LR1Pager.ml[237,9563+36]..[237,9563+42])
                                      Pexp_ident "family" (src/LR1Pager.ml[237,9563+36]..[237,9563+42])
                                ]
                            None
                          expression (src/LR1Pager.ml[247,10007+2]..[260,10440+27])
                            Pexp_ifthenelse
                            expression (src/LR1Pager.ml[247,10007+5]..[247,10007+40])
                              Pexp_apply
                              expression (src/LR1Pager.ml[247,10007+5]..[247,10007+13])
                                Pexp_ident "S.exists" (src/LR1Pager.ml[247,10007+5]..[247,10007+13])
                              [
                                <arg>
                                Nolabel
                                  expression (src/LR1Pager.ml[247,10007+14]..[247,10007+33])
                                    Pexp_apply
                                    expression (src/LR1Pager.ml[247,10007+15]..[247,10007+22])
                                      Pexp_ident "subsume" (src/LR1Pager.ml[247,10007+15]..[247,10007+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/LR1Pager.ml[247,10007+23]..[247,10007+32])
                                          Pexp_ident "candidate" (src/LR1Pager.ml[247,10007+23]..[247,10007+32])
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/LR1Pager.ml[247,10007+34]..[247,10007+40])
                                    Pexp_ident "family" (src/LR1Pager.ml[247,10007+34]..[247,10007+40])
                              ]
                            expression (src/LR1Pager.ml[257,10425+4]..[257,10425+6])
                              Pexp_construct "()" (src/LR1Pager.ml[257,10425+4]..[257,10425+6])
                              None
                            Some
                              expression (src/LR1Pager.ml[260,10440+4]..[260,10440+27])
                                Pexp_apply
                                expression (src/LR1Pager.ml[260,10440+4]..[260,10440+8])
                                  Pexp_ident "fuse" (src/LR1Pager.ml[260,10440+4]..[260,10440+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/LR1Pager.ml[260,10440+9]..[260,10440+10])
                                      Pexp_ident "c" (src/LR1Pager.ml[260,10440+9]..[260,10440+10])
                                  <arg>
                                  Nolabel
                                    expression (src/LR1Pager.ml[260,10440+11]..[260,10440+17])
                                      Pexp_ident "family" (src/LR1Pager.ml[260,10440+11]..[260,10440+17])
                                  <arg>
                                  Nolabel
                                    expression (src/LR1Pager.ml[260,10440+18]..[260,10440+27])
                                      Pexp_ident "candidate" (src/LR1Pager.ml[260,10440+18]..[260,10440+27])
                                ]
                <def>
                  pattern (src/LR1Pager.ml[262,10469+4]..[262,10469+8])
                    Ppat_var "fuse" (src/LR1Pager.ml[262,10469+4]..[262,10469+8])
                  expression (src/LR1Pager.ml[262,10469+9]..[307,12231+24]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LR1Pager.ml[262,10469+9]..[262,10469+23])
                      Ppat_constraint
                      pattern (src/LR1Pager.ml[262,10469+10]..[262,10469+11])
                        Ppat_var "c" (src/LR1Pager.ml[262,10469+10]..[262,10469+11])
                      core_type (src/LR1Pager.ml[262,10469+14]..[262,10469+22])
                        Ptyp_constr "lr0state" (src/LR1Pager.ml[262,10469+14]..[262,10469+22])
                        []
                    expression (src/LR1Pager.ml[262,10469+24]..[307,12231+24]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/LR1Pager.ml[262,10469+24]..[262,10469+38])
                        Ppat_constraint
                        pattern (src/LR1Pager.ml[262,10469+25]..[262,10469+31])
                          Ppat_var "family" (src/LR1Pager.ml[262,10469+25]..[262,10469+31])
                        core_type (src/LR1Pager.ml[262,10469+34]..[262,10469+37])
                          Ptyp_constr "S.t" (src/LR1Pager.ml[262,10469+34]..[262,10469+37])
                          []
                      expression (src/LR1Pager.ml[262,10469+39]..[307,12231+24]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/LR1Pager.ml[262,10469+39]..[262,10469+61])
                          Ppat_constraint
                          pattern (src/LR1Pager.ml[262,10469+40]..[262,10469+49])
                            Ppat_var "candidate" (src/LR1Pager.ml[262,10469+40]..[262,10469+49])
                          core_type (src/LR1Pager.ml[262,10469+52]..[262,10469+60])
                            Ptyp_constr "lr1state" (src/LR1Pager.ml[262,10469+52]..[262,10469+60])
                            []
                        expression (src/LR1Pager.ml[268,10687+2]..[307,12231+24])
                          Pexp_match
                          expression (src/LR1Pager.ml[268,10687+8]..[268,10687+46])
                            Pexp_apply
                            expression (src/LR1Pager.ml[268,10687+8]..[268,10687+16])
                              Pexp_ident "S.select" (src/LR1Pager.ml[268,10687+8]..[268,10687+16])
                            [
                              <arg>
                              Nolabel
                                expression (src/LR1Pager.ml[268,10687+17]..[268,10687+39])
                                  Pexp_apply
                                  expression (src/LR1Pager.ml[268,10687+18]..[268,10687+28])
                                    Pexp_ident "compatible" (src/LR1Pager.ml[268,10687+18]..[268,10687+28])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/LR1Pager.ml[268,10687+29]..[268,10687+38])
                                        Pexp_ident "candidate" (src/LR1Pager.ml[268,10687+29]..[268,10687+38])
                                  ]
                              <arg>
                              Nolabel
                                expression (src/LR1Pager.ml[268,10687+40]..[268,10687+46])
                                  Pexp_ident "family" (src/LR1Pager.ml[268,10687+40]..[268,10687+46])
                            ]
                          [
                            <case>
                              pattern (src/LR1Pager.ml[269,10739+4]..[269,10739+14])
                                Ppat_construct "Some" (src/LR1Pager.ml[269,10739+4]..[269,10739+8])
                                Some
                                  []
                                  pattern (src/LR1Pager.ml[269,10739+9]..[269,10739+14])
                                    Ppat_var "state" (src/LR1Pager.ml[269,10739+9]..[269,10739+14])
                              expression (src/LR1Pager.ml[270,10757+6]..[296,11966+29])
                                Pexp_sequence
                                expression (src/LR1Pager.ml[270,10757+6]..[270,10757+58])
                                  Pexp_ifthenelse
                                  expression (src/LR1Pager.ml[270,10757+9]..[270,10757+14])
                                    Pexp_ident "debug" (src/LR1Pager.ml[270,10757+9]..[270,10757+14])
                                  expression (src/LR1Pager.ml[270,10757+20]..[270,10757+58])
                                    Pexp_assert
                                    expression (src/LR1Pager.ml[270,10757+27]..[270,10757+58])
                                      Pexp_apply
                                      expression (src/LR1Pager.ml[270,10757+28]..[270,10757+31])
                                        Pexp_ident "not" (src/LR1Pager.ml[270,10757+28]..[270,10757+31])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/LR1Pager.ml[270,10757+32]..[270,10757+57])
                                            Pexp_apply
                                            expression (src/LR1Pager.ml[270,10757+33]..[270,10757+40])
                                              Pexp_ident "subsume" (src/LR1Pager.ml[270,10757+33]..[270,10757+40])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/LR1Pager.ml[270,10757+41]..[270,10757+50])
                                                  Pexp_ident "candidate" (src/LR1Pager.ml[270,10757+41]..[270,10757+50])
                                              <arg>
                                              Nolabel
                                                expression (src/LR1Pager.ml[270,10757+51]..[270,10757+56])
                                                  Pexp_ident "state" (src/LR1Pager.ml[270,10757+51]..[270,10757+56])
                                            ]
                                      ]
                                  None
                                expression (src/LR1Pager.ml[271,10817+6]..[296,11966+29])
                                  Pexp_sequence
                                  expression (src/LR1Pager.ml[271,10817+6]..[271,10817+55])
                                    Pexp_ifthenelse
                                    expression (src/LR1Pager.ml[271,10817+9]..[271,10817+14])
                                      Pexp_ident "debug" (src/LR1Pager.ml[271,10817+9]..[271,10817+14])
                                    expression (src/LR1Pager.ml[271,10817+20]..[271,10817+55])
                                      Pexp_assert
                                      expression (src/LR1Pager.ml[271,10817+27]..[271,10817+55])
                                        Pexp_apply
                                        expression (src/LR1Pager.ml[271,10817+28]..[271,10817+38])
                                          Pexp_ident "compatible" (src/LR1Pager.ml[271,10817+28]..[271,10817+38])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/LR1Pager.ml[271,10817+39]..[271,10817+48])
                                              Pexp_ident "candidate" (src/LR1Pager.ml[271,10817+39]..[271,10817+48])
                                          <arg>
                                          Nolabel
                                            expression (src/LR1Pager.ml[271,10817+49]..[271,10817+54])
                                              Pexp_ident "state" (src/LR1Pager.ml[271,10817+49]..[271,10817+54])
                                        ]
                                    None
                                  expression (src/LR1Pager.ml[278,11154+6]..[296,11966+29])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/LR1Pager.ml[278,11154+10]..[278,11154+19])
                                          Ppat_var "candidate" (src/LR1Pager.ml[278,11154+10]..[278,11154+19])
                                        core_type (src/LR1Pager.ml[278,11154+22]..[278,11154+30])
                                          Ptyp_constr "lr1state" (src/LR1Pager.ml[278,11154+22]..[278,11154+30])
                                          []
                                        expression (src/LR1Pager.ml[278,11154+33]..[278,11154+58])
                                          Pexp_apply
                                          expression (src/LR1Pager.ml[278,11154+33]..[278,11154+42])
                                            Pexp_ident "Lr0.union" (src/LR1Pager.ml[278,11154+33]..[278,11154+42])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/LR1Pager.ml[278,11154+43]..[278,11154+52])
                                                Pexp_ident "candidate" (src/LR1Pager.ml[278,11154+43]..[278,11154+52])
                                            <arg>
                                            Nolabel
                                              expression (src/LR1Pager.ml[278,11154+53]..[278,11154+58])
                                                Pexp_ident "state" (src/LR1Pager.ml[278,11154+53]..[278,11154+58])
                                          ]
                                    ]
                                    expression (src/LR1Pager.ml[289,11712+6]..[296,11966+29])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/LR1Pager.ml[289,11712+10]..[289,11712+16])
                                            Ppat_var "family" (src/LR1Pager.ml[289,11712+10]..[289,11712+16])
                                          expression (src/LR1Pager.ml[289,11712+19]..[289,11712+40])
                                            Pexp_apply
                                            expression (src/LR1Pager.ml[289,11712+19]..[289,11712+27])
                                              Pexp_ident "S.remove" (src/LR1Pager.ml[289,11712+19]..[289,11712+27])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/LR1Pager.ml[289,11712+28]..[289,11712+33])
                                                  Pexp_ident "state" (src/LR1Pager.ml[289,11712+28]..[289,11712+33])
                                              <arg>
                                              Nolabel
                                                expression (src/LR1Pager.ml[289,11712+34]..[289,11712+40])
                                                  Pexp_ident "family" (src/LR1Pager.ml[289,11712+34]..[289,11712+40])
                                            ]
                                      ]
                                      expression (src/LR1Pager.ml[290,11756+6]..[296,11966+29])
                                        Pexp_sequence
                                        expression (src/LR1Pager.ml[290,11756+6]..[290,11756+47])
                                          Pexp_ifthenelse
                                          expression (src/LR1Pager.ml[290,11756+9]..[290,11756+14])
                                            Pexp_ident "debug" (src/LR1Pager.ml[290,11756+9]..[290,11756+14])
                                          expression (src/LR1Pager.ml[290,11756+20]..[290,11756+47])
                                            Pexp_assert
                                            expression (src/LR1Pager.ml[290,11756+27]..[290,11756+47])
                                              Pexp_apply
                                              expression (src/LR1Pager.ml[290,11756+28]..[290,11756+39])
                                                Pexp_ident "well_formed" (src/LR1Pager.ml[290,11756+28]..[290,11756+39])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/LR1Pager.ml[290,11756+40]..[290,11756+46])
                                                    Pexp_ident "family" (src/LR1Pager.ml[290,11756+40]..[290,11756+46])
                                              ]
                                          None
                                        expression (src/LR1Pager.ml[296,11966+6]..[296,11966+29])
                                          Pexp_apply
                                          expression (src/LR1Pager.ml[296,11966+6]..[296,11966+10])
                                            Pexp_ident "fuse" (src/LR1Pager.ml[296,11966+6]..[296,11966+10])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/LR1Pager.ml[296,11966+11]..[296,11966+12])
                                                Pexp_ident "c" (src/LR1Pager.ml[296,11966+11]..[296,11966+12])
                                            <arg>
                                            Nolabel
                                              expression (src/LR1Pager.ml[296,11966+13]..[296,11966+19])
                                                Pexp_ident "family" (src/LR1Pager.ml[296,11966+13]..[296,11966+19])
                                            <arg>
                                            Nolabel
                                              expression (src/LR1Pager.ml[296,11966+20]..[296,11966+29])
                                                Pexp_ident "candidate" (src/LR1Pager.ml[296,11966+20]..[296,11966+29])
                                          ]
                            <case>
                              pattern (src/LR1Pager.ml[298,11997+4]..[298,11997+8])
                                Ppat_construct "None" (src/LR1Pager.ml[298,11997+4]..[298,11997+8])
                                None
                              expression (src/LR1Pager.ml[304,12107+6]..[307,12231+24])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/LR1Pager.ml[304,12107+10]..[304,12107+16])
                                      Ppat_var "family" (src/LR1Pager.ml[304,12107+10]..[304,12107+16])
                                    expression (src/LR1Pager.ml[304,12107+19]..[304,12107+41])
                                      Pexp_apply
                                      expression (src/LR1Pager.ml[304,12107+19]..[304,12107+24])
                                        Pexp_ident "S.add" (src/LR1Pager.ml[304,12107+19]..[304,12107+24])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/LR1Pager.ml[304,12107+25]..[304,12107+34])
                                            Pexp_ident "candidate" (src/LR1Pager.ml[304,12107+25]..[304,12107+34])
                                        <arg>
                                        Nolabel
                                          expression (src/LR1Pager.ml[304,12107+35]..[304,12107+41])
                                            Pexp_ident "family" (src/LR1Pager.ml[304,12107+35]..[304,12107+41])
                                      ]
                                ]
                                expression (src/LR1Pager.ml[305,12152+6]..[307,12231+24])
                                  Pexp_sequence
                                  expression (src/LR1Pager.ml[305,12152+6]..[305,12152+47])
                                    Pexp_ifthenelse
                                    expression (src/LR1Pager.ml[305,12152+9]..[305,12152+14])
                                      Pexp_ident "debug" (src/LR1Pager.ml[305,12152+9]..[305,12152+14])
                                    expression (src/LR1Pager.ml[305,12152+20]..[305,12152+47])
                                      Pexp_assert
                                      expression (src/LR1Pager.ml[305,12152+27]..[305,12152+47])
                                        Pexp_apply
                                        expression (src/LR1Pager.ml[305,12152+28]..[305,12152+39])
                                          Pexp_ident "well_formed" (src/LR1Pager.ml[305,12152+28]..[305,12152+39])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/LR1Pager.ml[305,12152+40]..[305,12152+46])
                                              Pexp_ident "family" (src/LR1Pager.ml[305,12152+40]..[305,12152+46])
                                        ]
                                    None
                                  expression (src/LR1Pager.ml[306,12201+6]..[307,12231+24])
                                    Pexp_sequence
                                    expression (src/LR1Pager.ml[306,12201+6]..[306,12201+28])
                                      Pexp_apply
                                      expression (src/LR1Pager.ml[306,12201+6]..[306,12201+28]) ghost
                                        Pexp_ident "Array.set" (src/LR1Pager.ml[306,12201+6]..[306,12201+28]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/LR1Pager.ml[306,12201+6]..[306,12201+14])
                                            Pexp_ident "families" (src/LR1Pager.ml[306,12201+6]..[306,12201+14])
                                        <arg>
                                        Nolabel
                                          expression (src/LR1Pager.ml[306,12201+16]..[306,12201+17])
                                            Pexp_ident "c" (src/LR1Pager.ml[306,12201+16]..[306,12201+17])
                                        <arg>
                                        Nolabel
                                          expression (src/LR1Pager.ml[306,12201+22]..[306,12201+28])
                                            Pexp_ident "family" (src/LR1Pager.ml[306,12201+22]..[306,12201+28])
                                      ]
                                    expression (src/LR1Pager.ml[307,12231+6]..[307,12231+24])
                                      Pexp_apply
                                      expression (src/LR1Pager.ml[307,12231+6]..[307,12231+14])
                                        Pexp_ident "schedule" (src/LR1Pager.ml[307,12231+6]..[307,12231+14])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/LR1Pager.ml[307,12231+15]..[307,12231+24])
                                            Pexp_ident "candidate" (src/LR1Pager.ml[307,12231+15]..[307,12231+24])
                                      ]
                          ]
              ]
            structure_item (src/LR1Pager.ml[314,12495+0]..[320,12675+3])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Pager.ml[314,12495+4]..[314,12495+6])
                    Ppat_construct "()" (src/LR1Pager.ml[314,12495+4]..[314,12495+6])
                    None
                  expression (src/LR1Pager.ml[315,12504+2]..[320,12675+3])
                    Pexp_apply
                    expression (src/LR1Pager.ml[315,12504+2]..[315,12504+16])
                      Pexp_ident "G.foreach_root" (src/LR1Pager.ml[315,12504+2]..[315,12504+16])
                    [
                      <arg>
                      Nolabel
                        expression (src/LR1Pager.ml[315,12504+17]..[320,12675+3])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/LR1Pager.ml[315,12504+22]..[315,12504+27])
                            Ppat_var "state" (src/LR1Pager.ml[315,12504+22]..[315,12504+27])
                          expression (src/LR1Pager.ml[316,12535+4]..[319,12656+18])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/LR1Pager.ml[316,12535+8]..[316,12535+9])
                                  Ppat_var "c" (src/LR1Pager.ml[316,12535+8]..[316,12535+9])
                                expression (src/LR1Pager.ml[316,12535+12]..[316,12535+26])
                                  Pexp_apply
                                  expression (src/LR1Pager.ml[316,12535+12]..[316,12535+20])
                                    Pexp_ident "Lr0.core" (src/LR1Pager.ml[316,12535+12]..[316,12535+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/LR1Pager.ml[316,12535+21]..[316,12535+26])
                                        Pexp_ident "state" (src/LR1Pager.ml[316,12535+21]..[316,12535+26])
                                  ]
                            ]
                            expression (src/LR1Pager.ml[317,12565+4]..[319,12656+18])
                              Pexp_sequence
                              expression (src/LR1Pager.ml[317,12565+4]..[317,12565+50])
                                Pexp_ifthenelse
                                expression (src/LR1Pager.ml[317,12565+7]..[317,12565+12])
                                  Pexp_ident "debug" (src/LR1Pager.ml[317,12565+7]..[317,12565+12])
                                expression (src/LR1Pager.ml[317,12565+18]..[317,12565+50])
                                  Pexp_assert
                                  expression (src/LR1Pager.ml[317,12565+25]..[317,12565+50])
                                    Pexp_apply
                                    expression (src/LR1Pager.ml[317,12565+26]..[317,12565+36])
                                      Pexp_ident "S.is_empty" (src/LR1Pager.ml[317,12565+26]..[317,12565+36])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/LR1Pager.ml[317,12565+37]..[317,12565+49])
                                          Pexp_apply
                                          expression (src/LR1Pager.ml[317,12565+37]..[317,12565+49]) ghost
                                            Pexp_ident "Array.get" (src/LR1Pager.ml[317,12565+37]..[317,12565+49]) ghost
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/LR1Pager.ml[317,12565+37]..[317,12565+45])
                                                Pexp_ident "families" (src/LR1Pager.ml[317,12565+37]..[317,12565+45])
                                            <arg>
                                            Nolabel
                                              expression (src/LR1Pager.ml[317,12565+47]..[317,12565+48])
                                                Pexp_ident "c" (src/LR1Pager.ml[317,12565+47]..[317,12565+48])
                                          ]
                                    ]
                                None
                              expression (src/LR1Pager.ml[318,12617+4]..[319,12656+18])
                                Pexp_sequence
                                expression (src/LR1Pager.ml[318,12617+4]..[318,12617+37])
                                  Pexp_apply
                                  expression (src/LR1Pager.ml[318,12617+4]..[318,12617+37]) ghost
                                    Pexp_ident "Array.set" (src/LR1Pager.ml[318,12617+4]..[318,12617+37]) ghost
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/LR1Pager.ml[318,12617+4]..[318,12617+12])
                                        Pexp_ident "families" (src/LR1Pager.ml[318,12617+4]..[318,12617+12])
                                    <arg>
                                    Nolabel
                                      expression (src/LR1Pager.ml[318,12617+14]..[318,12617+15])
                                        Pexp_ident "c" (src/LR1Pager.ml[318,12617+14]..[318,12617+15])
                                    <arg>
                                    Nolabel
                                      expression (src/LR1Pager.ml[318,12617+20]..[318,12617+37])
                                        Pexp_apply
                                        expression (src/LR1Pager.ml[318,12617+20]..[318,12617+31])
                                          Pexp_ident "S.singleton" (src/LR1Pager.ml[318,12617+20]..[318,12617+31])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/LR1Pager.ml[318,12617+32]..[318,12617+37])
                                              Pexp_ident "state" (src/LR1Pager.ml[318,12617+32]..[318,12617+37])
                                        ]
                                  ]
                                expression (src/LR1Pager.ml[319,12656+4]..[319,12656+18])
                                  Pexp_apply
                                  expression (src/LR1Pager.ml[319,12656+4]..[319,12656+12])
                                    Pexp_ident "schedule" (src/LR1Pager.ml[319,12656+4]..[319,12656+12])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/LR1Pager.ml[319,12656+13]..[319,12656+18])
                                        Pexp_ident "state" (src/LR1Pager.ml[319,12656+13]..[319,12656+18])
                                  ]
                    ]
              ]
            structure_item (src/LR1Pager.ml[322,12680+0]..[326,12806+6])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Pager.ml[322,12680+4]..[322,12680+6])
                    Ppat_construct "()" (src/LR1Pager.ml[322,12680+4]..[322,12680+6])
                    None
                  expression (src/LR1Pager.ml[323,12689+2]..[326,12806+6])
                    Pexp_while
                    expression (src/LR1Pager.ml[323,12689+8]..[323,12689+37])
                      Pexp_apply
                      expression (src/LR1Pager.ml[323,12689+8]..[323,12689+11])
                        Pexp_ident "not" (src/LR1Pager.ml[323,12689+8]..[323,12689+11])
                      [
                        <arg>
                        Nolabel
                          expression (src/LR1Pager.ml[323,12689+12]..[323,12689+37])
                            Pexp_apply
                            expression (src/LR1Pager.ml[323,12689+13]..[323,12689+27])
                              Pexp_ident "Stack.is_empty" (src/LR1Pager.ml[323,12689+13]..[323,12689+27])
                            [
                              <arg>
                              Nolabel
                                expression (src/LR1Pager.ml[323,12689+28]..[323,12689+36])
                                  Pexp_ident "frontier" (src/LR1Pager.ml[323,12689+28]..[323,12689+36])
                            ]
                      ]
                    expression (src/LR1Pager.ml[324,12730+4]..[325,12768+37])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/LR1Pager.ml[324,12730+8]..[324,12730+13])
                            Ppat_var "state" (src/LR1Pager.ml[324,12730+8]..[324,12730+13])
                          expression (src/LR1Pager.ml[324,12730+16]..[324,12730+34])
                            Pexp_apply
                            expression (src/LR1Pager.ml[324,12730+16]..[324,12730+25])
                              Pexp_ident "Stack.pop" (src/LR1Pager.ml[324,12730+16]..[324,12730+25])
                            [
                              <arg>
                              Nolabel
                                expression (src/LR1Pager.ml[324,12730+26]..[324,12730+34])
                                  Pexp_ident "frontier" (src/LR1Pager.ml[324,12730+26]..[324,12730+34])
                            ]
                      ]
                      expression (src/LR1Pager.ml[325,12768+4]..[325,12768+37])
                        Pexp_apply
                        expression (src/LR1Pager.ml[325,12768+4]..[325,12768+23])
                          Pexp_ident "G.foreach_successor" (src/LR1Pager.ml[325,12768+4]..[325,12768+23])
                        [
                          <arg>
                          Nolabel
                            expression (src/LR1Pager.ml[325,12768+24]..[325,12768+29])
                              Pexp_ident "state" (src/LR1Pager.ml[325,12768+24]..[325,12768+29])
                          <arg>
                          Nolabel
                            expression (src/LR1Pager.ml[325,12768+30]..[325,12768+37])
                              Pexp_ident "examine" (src/LR1Pager.ml[325,12768+30]..[325,12768+37])
                        ]
              ]
            structure_item (src/LR1Pager.ml[339,13181+0]..[347,13456+20])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Pager.ml[339,13181+4]..[339,13181+12])
                    Ppat_var "redirect" (src/LR1Pager.ml[339,13181+4]..[339,13181+12])
                  expression (src/LR1Pager.ml[339,13181+13]..[347,13456+20]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LR1Pager.ml[339,13181+13]..[339,13181+22])
                      Ppat_var "candidate" (src/LR1Pager.ml[339,13181+13]..[339,13181+22])
                    expression (src/LR1Pager.ml[340,13206+4]..[347,13456+20])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/LR1Pager.ml[340,13206+8]..[340,13206+9])
                            Ppat_var "c" (src/LR1Pager.ml[340,13206+8]..[340,13206+9])
                          expression (src/LR1Pager.ml[340,13206+12]..[340,13206+30])
                            Pexp_apply
                            expression (src/LR1Pager.ml[340,13206+12]..[340,13206+20])
                              Pexp_ident "Lr0.core" (src/LR1Pager.ml[340,13206+12]..[340,13206+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/LR1Pager.ml[340,13206+21]..[340,13206+30])
                                  Pexp_ident "candidate" (src/LR1Pager.ml[340,13206+21]..[340,13206+30])
                            ]
                      ]
                      expression (src/LR1Pager.ml[341,13240+4]..[347,13456+20])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/LR1Pager.ml[341,13240+8]..[341,13240+14])
                              Ppat_var "family" (src/LR1Pager.ml[341,13240+8]..[341,13240+14])
                            expression (src/LR1Pager.ml[341,13240+17]..[341,13240+29])
                              Pexp_apply
                              expression (src/LR1Pager.ml[341,13240+17]..[341,13240+29]) ghost
                                Pexp_ident "Array.get" (src/LR1Pager.ml[341,13240+17]..[341,13240+29]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (src/LR1Pager.ml[341,13240+17]..[341,13240+25])
                                    Pexp_ident "families" (src/LR1Pager.ml[341,13240+17]..[341,13240+25])
                                <arg>
                                Nolabel
                                  expression (src/LR1Pager.ml[341,13240+27]..[341,13240+28])
                                    Pexp_ident "c" (src/LR1Pager.ml[341,13240+27]..[341,13240+28])
                              ]
                        ]
                        expression (src/LR1Pager.ml[342,13273+4]..[347,13456+20])
                          Pexp_match
                          expression (src/LR1Pager.ml[342,13273+10]..[342,13273+45])
                            Pexp_apply
                            expression (src/LR1Pager.ml[342,13273+10]..[342,13273+18])
                              Pexp_ident "S.select" (src/LR1Pager.ml[342,13273+10]..[342,13273+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/LR1Pager.ml[342,13273+19]..[342,13273+38])
                                  Pexp_apply
                                  expression (src/LR1Pager.ml[342,13273+20]..[342,13273+27])
                                    Pexp_ident "subsume" (src/LR1Pager.ml[342,13273+20]..[342,13273+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/LR1Pager.ml[342,13273+28]..[342,13273+37])
                                        Pexp_ident "candidate" (src/LR1Pager.ml[342,13273+28]..[342,13273+37])
                                  ]
                              <arg>
                              Nolabel
                                expression (src/LR1Pager.ml[342,13273+39]..[342,13273+45])
                                  Pexp_ident "family" (src/LR1Pager.ml[342,13273+39]..[342,13273+45])
                            ]
                          [
                            <case>
                              pattern (src/LR1Pager.ml[343,13324+6]..[343,13324+20])
                                Ppat_construct "Some" (src/LR1Pager.ml[343,13324+6]..[343,13324+10])
                                Some
                                  []
                                  pattern (src/LR1Pager.ml[343,13324+11]..[343,13324+20])
                                    Ppat_var "successor" (src/LR1Pager.ml[343,13324+11]..[343,13324+20])
                              expression (src/LR1Pager.ml[344,13348+8]..[344,13348+17])
                                Pexp_ident "successor" (src/LR1Pager.ml[344,13348+8]..[344,13348+17])
                            <case>
                              pattern (src/LR1Pager.ml[345,13366+6]..[345,13366+10])
                                Ppat_construct "None" (src/LR1Pager.ml[345,13366+6]..[345,13366+10])
                                None
                              expression (src/LR1Pager.ml[347,13456+8]..[347,13456+20])
                                Pexp_assert
                                expression (src/LR1Pager.ml[347,13456+15]..[347,13456+20])
                                  Pexp_construct "false" (src/LR1Pager.ml[347,13456+15]..[347,13456+20])
                                  None
                          ]
              ]
            structure_item (src/LR1Pager.ml[353,13679+0]..[363,13876+3])
              Pstr_module
              "G'" (src/LR1Pager.ml[353,13679+7]..[353,13679+9])
                module_expr (src/LR1Pager.ml[353,13679+12]..[363,13876+3])
                  Pmod_structure
                  [
                    structure_item (src/LR1Pager.ml[355,13699+2]..[355,13699+11])
                      Pstr_include                      module_expr (src/LR1Pager.ml[355,13699+10]..[355,13699+11])
                        Pmod_ident "G" (src/LR1Pager.ml[355,13699+10]..[355,13699+11])
                    structure_item (src/LR1Pager.ml[357,13712+2]..[361,13869+5])
                      Pstr_value Nonrec
                      [
                        <def>
                          pattern (src/LR1Pager.ml[357,13712+6]..[357,13712+23])
                            Ppat_var "foreach_successor" (src/LR1Pager.ml[357,13712+6]..[357,13712+23])
                          expression (src/LR1Pager.ml[357,13712+24]..[361,13869+5]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/LR1Pager.ml[357,13712+24]..[357,13712+42])
                              Ppat_constraint
                              pattern (src/LR1Pager.ml[357,13712+25]..[357,13712+30])
                                Ppat_var "state" (src/LR1Pager.ml[357,13712+25]..[357,13712+30])
                              core_type (src/LR1Pager.ml[357,13712+33]..[357,13712+41])
                                Ptyp_constr "lr1state" (src/LR1Pager.ml[357,13712+33]..[357,13712+41])
                                []
                            expression (src/LR1Pager.ml[357,13712+43]..[361,13869+5]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/LR1Pager.ml[357,13712+43]..[357,13712+44])
                                Ppat_var "f" (src/LR1Pager.ml[357,13712+43]..[357,13712+44])
                              expression (src/LR1Pager.ml[358,13759+4]..[361,13869+5])
                                Pexp_apply
                                expression (src/LR1Pager.ml[358,13759+4]..[358,13759+23])
                                  Pexp_ident "G.foreach_successor" (src/LR1Pager.ml[358,13759+4]..[358,13759+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/LR1Pager.ml[358,13759+24]..[358,13759+29])
                                      Pexp_ident "state" (src/LR1Pager.ml[358,13759+24]..[358,13759+29])
                                  <arg>
                                  Nolabel
                                    expression (src/LR1Pager.ml[358,13759+30]..[361,13869+5])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (src/LR1Pager.ml[358,13759+35]..[358,13759+44])
                                        Ppat_var "candidate" (src/LR1Pager.ml[358,13759+35]..[358,13759+44])
                                      expression (src/LR1Pager.ml[359,13807+6]..[360,13851+17])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/LR1Pager.ml[359,13807+10]..[359,13807+19])
                                              Ppat_var "successor" (src/LR1Pager.ml[359,13807+10]..[359,13807+19])
                                            expression (src/LR1Pager.ml[359,13807+22]..[359,13807+40])
                                              Pexp_apply
                                              expression (src/LR1Pager.ml[359,13807+22]..[359,13807+30])
                                                Pexp_ident "redirect" (src/LR1Pager.ml[359,13807+22]..[359,13807+30])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/LR1Pager.ml[359,13807+31]..[359,13807+40])
                                                    Pexp_ident "candidate" (src/LR1Pager.ml[359,13807+31]..[359,13807+40])
                                              ]
                                        ]
                                        expression (src/LR1Pager.ml[360,13851+6]..[360,13851+17])
                                          Pexp_apply
                                          expression (src/LR1Pager.ml[360,13851+6]..[360,13851+7])
                                            Pexp_ident "f" (src/LR1Pager.ml[360,13851+6]..[360,13851+7])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/LR1Pager.ml[360,13851+8]..[360,13851+17])
                                                Pexp_ident "successor" (src/LR1Pager.ml[360,13851+8]..[360,13851+17])
                                          ]
                                ]
                      ]
                  ]
            structure_item (src/LR1Pager.ml[371,14141+0]..[372,14153+5])
              Pstr_type Rec
              [
                type_declaration "node" (src/LR1Pager.ml[371,14141+5]..[371,14141+9]) (src/LR1Pager.ml[371,14141+0]..[372,14153+5])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (src/LR1Pager.ml[372,14153+2]..[372,14153+5])
                        Ptyp_constr "int" (src/LR1Pager.ml[372,14153+2]..[372,14153+5])
                        []
              ]
            structure_item (src/LR1Pager.ml[374,14160+0]..[374,14160+72])
              Pstr_include              module_expr (src/LR1Pager.ml[374,14160+8]..[374,14160+72])
                Pmod_apply
                module_expr (src/LR1Pager.ml[374,14160+8]..[374,14160+68])
                  Pmod_apply
                  module_expr (src/LR1Pager.ml[374,14160+8]..[374,14160+41])
                    Pmod_ident "Fix.GraphNumbering.ForOrderedType" (src/LR1Pager.ml[374,14160+8]..[374,14160+41])
                  module_expr (src/LR1Pager.ml[374,14160+42]..[374,14160+67])
                    Pmod_ident "Lr0.Lr1StateAsOrderedType" (src/LR1Pager.ml[374,14160+42]..[374,14160+67])
                module_expr (src/LR1Pager.ml[374,14160+69]..[374,14160+71])
                  Pmod_ident "G'" (src/LR1Pager.ml[374,14160+69]..[374,14160+71])
            structure_item (src/LR1Pager.ml[383,14494+0]..[384,14525+8])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Pager.ml[383,14494+4]..[383,14494+9])
                    Ppat_var "state" (src/LR1Pager.ml[383,14494+4]..[383,14494+9])
                  core_type (src/LR1Pager.ml[383,14494+12]..[383,14494+28])
                    Ptyp_arrow
                    Nolabel
                    core_type (src/LR1Pager.ml[383,14494+12]..[383,14494+16])
                      Ptyp_constr "node" (src/LR1Pager.ml[383,14494+12]..[383,14494+16])
                      []
                    core_type (src/LR1Pager.ml[383,14494+20]..[383,14494+28])
                      Ptyp_constr "lr1state" (src/LR1Pager.ml[383,14494+20]..[383,14494+28])
                      []
                  expression (src/LR1Pager.ml[384,14525+2]..[384,14525+8])
                    Pexp_ident "decode" (src/LR1Pager.ml[384,14525+2]..[384,14525+8])
              ]
            structure_item (src/LR1Pager.ml[390,14671+0]..[393,14774+13])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Pager.ml[390,14671+4]..[390,14671+9])
                    Ppat_var "entry" (src/LR1Pager.ml[390,14671+4]..[390,14671+9])
                  core_type (src/LR1Pager.ml[390,14671+12]..[390,14671+32])
                    Ptyp_constr "ProductionMap.t" (src/LR1Pager.ml[390,14671+17]..[390,14671+32])
                    [
                      core_type (src/LR1Pager.ml[390,14671+12]..[390,14671+16])
                        Ptyp_constr "node" (src/LR1Pager.ml[390,14671+12]..[390,14671+16])
                        []
                    ]
                  expression (src/LR1Pager.ml[391,14706+2]..[393,14774+13])
                    Pexp_apply
                    expression (src/LR1Pager.ml[391,14706+2]..[391,14706+19])
                      Pexp_ident "ProductionMap.map" (src/LR1Pager.ml[391,14706+2]..[391,14706+19])
                    [
                      <arg>
                      Nolabel
                        expression (src/LR1Pager.ml[391,14706+20]..[393,14774+3])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/LR1Pager.ml[391,14706+25]..[391,14706+39])
                            Ppat_constraint
                            pattern (src/LR1Pager.ml[391,14706+26]..[391,14706+27])
                              Ppat_var "c" (src/LR1Pager.ml[391,14706+26]..[391,14706+27])
                            core_type (src/LR1Pager.ml[391,14706+30]..[391,14706+38])
                              Ptyp_constr "lr0state" (src/LR1Pager.ml[391,14706+30]..[391,14706+38])
                              []
                          expression (src/LR1Pager.ml[392,14749+4]..[392,14749+24])
                            Pexp_apply
                            expression (src/LR1Pager.ml[392,14749+4]..[392,14749+10])
                              Pexp_ident "encode" (src/LR1Pager.ml[392,14749+4]..[392,14749+10])
                            [
                              <arg>
                              Nolabel
                                expression (src/LR1Pager.ml[392,14749+11]..[392,14749+24])
                                  Pexp_apply
                                  expression (src/LR1Pager.ml[392,14749+12]..[392,14749+21])
                                    Pexp_ident "Lr0.start" (src/LR1Pager.ml[392,14749+12]..[392,14749+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/LR1Pager.ml[392,14749+22]..[392,14749+23])
                                        Pexp_ident "c" (src/LR1Pager.ml[392,14749+22]..[392,14749+23])
                                  ]
                            ]
                      <arg>
                      Nolabel
                        expression (src/LR1Pager.ml[393,14774+4]..[393,14774+13])
                          Pexp_ident "Lr0.entry" (src/LR1Pager.ml[393,14774+4]..[393,14774+13])
                    ]
              ]
            structure_item (src/LR1Pager.ml[399,14925+0]..[400,14967+53])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Pager.ml[399,14925+4]..[399,14925+14])
                    Ppat_var "transition" (src/LR1Pager.ml[399,14925+4]..[399,14925+14])
                  expression (src/LR1Pager.ml[399,14925+15]..[400,14967+53]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LR1Pager.ml[399,14925+15]..[399,14925+21])
                      Ppat_var "symbol" (src/LR1Pager.ml[399,14925+15]..[399,14925+21])
                    expression (src/LR1Pager.ml[399,14925+22]..[400,14967+53]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/LR1Pager.ml[399,14925+22]..[399,14925+32])
                        Ppat_constraint
                        pattern (src/LR1Pager.ml[399,14925+23]..[399,14925+24])
                          Ppat_var "i" (src/LR1Pager.ml[399,14925+23]..[399,14925+24])
                        core_type (src/LR1Pager.ml[399,14925+27]..[399,14925+31])
                          Ptyp_constr "node" (src/LR1Pager.ml[399,14925+27]..[399,14925+31])
                          []
                      expression (src/LR1Pager.ml[399,14925+33]..[400,14967+53])
                        Pexp_constraint
                        expression (src/LR1Pager.ml[400,14967+2]..[400,14967+53])
                          Pexp_apply
                          expression (src/LR1Pager.ml[400,14967+2]..[400,14967+8])
                            Pexp_ident "encode" (src/LR1Pager.ml[400,14967+2]..[400,14967+8])
                          [
                            <arg>
                            Nolabel
                              expression (src/LR1Pager.ml[400,14967+9]..[400,14967+53])
                                Pexp_apply
                                expression (src/LR1Pager.ml[400,14967+10]..[400,14967+18])
                                  Pexp_ident "redirect" (src/LR1Pager.ml[400,14967+10]..[400,14967+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/LR1Pager.ml[400,14967+19]..[400,14967+52])
                                      Pexp_apply
                                      expression (src/LR1Pager.ml[400,14967+20]..[400,14967+34])
                                        Pexp_ident "Lr0.transition" (src/LR1Pager.ml[400,14967+20]..[400,14967+34])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/LR1Pager.ml[400,14967+35]..[400,14967+41])
                                            Pexp_ident "symbol" (src/LR1Pager.ml[400,14967+35]..[400,14967+41])
                                        <arg>
                                        Nolabel
                                          expression (src/LR1Pager.ml[400,14967+42]..[400,14967+51])
                                            Pexp_apply
                                            expression (src/LR1Pager.ml[400,14967+43]..[400,14967+48])
                                              Pexp_ident "state" (src/LR1Pager.ml[400,14967+43]..[400,14967+48])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/LR1Pager.ml[400,14967+49]..[400,14967+50])
                                                  Pexp_ident "i" (src/LR1Pager.ml[400,14967+49]..[400,14967+50])
                                            ]
                                      ]
                                ]
                          ]
                        core_type (src/LR1Pager.ml[399,14925+35]..[399,14925+39])
                          Ptyp_constr "node" (src/LR1Pager.ml[399,14925+35]..[399,14925+39])
                          []
              ]
            structure_item (src/LR1Pager.ml[403,15059+0]..[404,15093+43])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Pager.ml[403,15059+4]..[403,15059+20])
                    Ppat_var "outgoing_symbols" (src/LR1Pager.ml[403,15059+4]..[403,15059+20])
                  expression (src/LR1Pager.ml[403,15059+21]..[404,15093+43]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LR1Pager.ml[403,15059+21]..[403,15059+31])
                      Ppat_constraint
                      pattern (src/LR1Pager.ml[403,15059+22]..[403,15059+23])
                        Ppat_var "i" (src/LR1Pager.ml[403,15059+22]..[403,15059+23])
                      core_type (src/LR1Pager.ml[403,15059+26]..[403,15059+30])
                        Ptyp_constr "node" (src/LR1Pager.ml[403,15059+26]..[403,15059+30])
                        []
                    expression (src/LR1Pager.ml[404,15093+2]..[404,15093+43])
                      Pexp_apply
                      expression (src/LR1Pager.ml[404,15093+2]..[404,15093+22])
                        Pexp_ident "Lr0.outgoing_symbols" (src/LR1Pager.ml[404,15093+2]..[404,15093+22])
                      [
                        <arg>
                        Nolabel
                          expression (src/LR1Pager.ml[404,15093+23]..[404,15093+43])
                            Pexp_apply
                            expression (src/LR1Pager.ml[404,15093+24]..[404,15093+32])
                              Pexp_ident "Lr0.core" (src/LR1Pager.ml[404,15093+24]..[404,15093+32])
                            [
                              <arg>
                              Nolabel
                                expression (src/LR1Pager.ml[404,15093+33]..[404,15093+42])
                                  Pexp_apply
                                  expression (src/LR1Pager.ml[404,15093+34]..[404,15093+39])
                                    Pexp_ident "state" (src/LR1Pager.ml[404,15093+34]..[404,15093+39])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/LR1Pager.ml[404,15093+40]..[404,15093+41])
                                        Pexp_ident "i" (src/LR1Pager.ml[404,15093+40]..[404,15093+41])
                                  ]
                            ]
                      ]
              ]
            structure_item (src/LR1Pager.ml[406,15138+0]..[409,15242+24])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Pager.ml[406,15138+4]..[406,15138+15])
                    Ppat_var "transitions" (src/LR1Pager.ml[406,15138+4]..[406,15138+15])
                  expression (src/LR1Pager.ml[406,15138+16]..[409,15242+24]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LR1Pager.ml[406,15138+16]..[406,15138+26])
                      Ppat_constraint
                      pattern (src/LR1Pager.ml[406,15138+17]..[406,15138+18])
                        Ppat_var "i" (src/LR1Pager.ml[406,15138+17]..[406,15138+18])
                      core_type (src/LR1Pager.ml[406,15138+21]..[406,15138+25])
                        Ptyp_constr "node" (src/LR1Pager.ml[406,15138+21]..[406,15138+25])
                        []
                    expression (src/LR1Pager.ml[406,15138+27]..[409,15242+24])
                      Pexp_constraint
                      expression (src/LR1Pager.ml[407,15186+2]..[409,15242+24])
                        Pexp_apply
                        expression (src/LR1Pager.ml[407,15186+2]..[407,15186+16])
                          Pexp_ident "SymbolMap.init" (src/LR1Pager.ml[407,15186+2]..[407,15186+16])
                        [
                          <arg>
                          Nolabel
                            expression (src/LR1Pager.ml[407,15186+17]..[409,15242+3])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/LR1Pager.ml[407,15186+22]..[407,15186+28])
                                Ppat_var "symbol" (src/LR1Pager.ml[407,15186+22]..[407,15186+28])
                              expression (src/LR1Pager.ml[408,15218+4]..[408,15218+23])
                                Pexp_apply
                                expression (src/LR1Pager.ml[408,15218+4]..[408,15218+14])
                                  Pexp_ident "transition" (src/LR1Pager.ml[408,15218+4]..[408,15218+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/LR1Pager.ml[408,15218+15]..[408,15218+21])
                                      Pexp_ident "symbol" (src/LR1Pager.ml[408,15218+15]..[408,15218+21])
                                  <arg>
                                  Nolabel
                                    expression (src/LR1Pager.ml[408,15218+22]..[408,15218+23])
                                      Pexp_ident "i" (src/LR1Pager.ml[408,15218+22]..[408,15218+23])
                                ]
                          <arg>
                          Nolabel
                            expression (src/LR1Pager.ml[409,15242+4]..[409,15242+24])
                              Pexp_apply
                              expression (src/LR1Pager.ml[409,15242+5]..[409,15242+21])
                                Pexp_ident "outgoing_symbols" (src/LR1Pager.ml[409,15242+5]..[409,15242+21])
                              [
                                <arg>
                                Nolabel
                                  expression (src/LR1Pager.ml[409,15242+22]..[409,15242+23])
                                    Pexp_ident "i" (src/LR1Pager.ml[409,15242+22]..[409,15242+23])
                              ]
                        ]
                      core_type (src/LR1Pager.ml[406,15138+29]..[406,15138+45])
                        Ptyp_constr "SymbolMap.t" (src/LR1Pager.ml[406,15138+34]..[406,15138+45])
                        [
                          core_type (src/LR1Pager.ml[406,15138+29]..[406,15138+33])
                            Ptyp_constr "node" (src/LR1Pager.ml[406,15138+29]..[406,15138+33])
                            []
                        ]
              ]
            structure_item (src/LR1Pager.ml[415,15405+0]..[416,15435+3])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Pager.ml[415,15405+4]..[415,15405+10])
                    Ppat_var "number" (src/LR1Pager.ml[415,15405+4]..[415,15405+10])
                  expression (src/LR1Pager.ml[415,15405+11]..[416,15435+3]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LR1Pager.ml[415,15405+11]..[415,15405+21])
                      Ppat_constraint
                      pattern (src/LR1Pager.ml[415,15405+12]..[415,15405+13])
                        Ppat_var "i" (src/LR1Pager.ml[415,15405+12]..[415,15405+13])
                      core_type (src/LR1Pager.ml[415,15405+16]..[415,15405+20])
                        Ptyp_constr "node" (src/LR1Pager.ml[415,15405+16]..[415,15405+20])
                        []
                    expression (src/LR1Pager.ml[415,15405+22]..[416,15435+3])
                      Pexp_constraint
                      expression (src/LR1Pager.ml[416,15435+2]..[416,15435+3])
                        Pexp_ident "i" (src/LR1Pager.ml[416,15435+2]..[416,15435+3])
                      core_type (src/LR1Pager.ml[415,15405+24]..[415,15405+27])
                        Ptyp_constr "int" (src/LR1Pager.ml[415,15405+24]..[415,15405+27])
                        []
              ]
            structure_item (src/LR1Pager.ml[418,15440+0]..[419,15468+3])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Pager.ml[418,15440+4]..[418,15440+8])
                    Ppat_var "node" (src/LR1Pager.ml[418,15440+4]..[418,15440+8])
                  expression (src/LR1Pager.ml[418,15440+9]..[419,15468+3]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LR1Pager.ml[418,15440+9]..[418,15440+18])
                      Ppat_constraint
                      pattern (src/LR1Pager.ml[418,15440+10]..[418,15440+11])
                        Ppat_var "i" (src/LR1Pager.ml[418,15440+10]..[418,15440+11])
                      core_type (src/LR1Pager.ml[418,15440+14]..[418,15440+17])
                        Ptyp_constr "int" (src/LR1Pager.ml[418,15440+14]..[418,15440+17])
                        []
                    expression (src/LR1Pager.ml[418,15440+19]..[419,15468+3])
                      Pexp_constraint
                      expression (src/LR1Pager.ml[419,15468+2]..[419,15468+3])
                        Pexp_ident "i" (src/LR1Pager.ml[419,15468+2]..[419,15468+3])
                      core_type (src/LR1Pager.ml[418,15440+21]..[418,15440+25])
                        Ptyp_constr "node" (src/LR1Pager.ml[418,15440+21]..[418,15440+25])
                        []
              ]
          ]
]

type lr0state = Lr0.node
type lr1state = Lr0.lr1state
open Grammar
module Run() =
  struct
    module G =
      struct
        type t = lr1state
        let foreach_root f =
          ProductionMap.iter
            (fun _prod -> fun (c : lr0state) -> f (Lr0.start c)) Lr0.entry
        let foreach_successor (state : lr1state) f =
          let symbols = Lr0.outgoing_symbols (Lr0.core state) in
          List.iter
            (fun symbol ->
               let successor = Lr0.transition symbol state in f successor)
            symbols
      end
    module S =
      struct
        include (Set.Make)(Lr0.Lr1StateAsOrderedType)
        exception Found of elt 
        let select (p : elt -> bool) (s : t) =
          (try iter (fun x -> if p x then raise (Found x)) s; None
           with | Found x -> Some x : elt option)
      end
    let families : S.t array = Array.make Lr0.n S.empty
    let frontier : lr1state Stack.t = Stack.create ()
    let schedule state = Stack.push state frontier
    let subsume candidate state =
      (Lr0.subsume candidate state) && (Lr0.error_compatible candidate state)
    let compatible candidate state =
      (Lr0.compatible candidate state) &&
        ((Lr0.eos_compatible candidate state) &&
           (Lr0.error_compatible candidate state))
    let compatible candidate state =
      let open Settings in
        match construction_mode with
        | ModePager -> compatible candidate state
        | ModeInclusionOnly ->
            (subsume candidate state) || (subsume state candidate)
        | ModeCanonical | ModeLALR -> assert false
    let debug = false
    let rec no_two related xs =
      match xs with
      | [] -> true
      | x::xs ->
          (List.for_all (fun x' -> not (related x x')) xs) &&
            (no_two related xs)
    let well_formed (family : S.t) =
      (let members = S.elements family in no_two compatible members : 
      bool)
    let rec examine (candidate : lr1state) =
      let c : lr0state = Lr0.core candidate in
      let family : S.t = families.(c) in
      if debug then assert (well_formed family);
      if S.exists (subsume candidate) family
      then ()
      else fuse c family candidate
    and fuse (c : lr0state) (family : S.t) (candidate : lr1state) =
      match S.select (compatible candidate) family with
      | Some state ->
          (if debug then assert (not (subsume candidate state));
           if debug then assert (compatible candidate state);
           (let candidate : lr1state = Lr0.union candidate state in
            let family = S.remove state family in
            if debug then assert (well_formed family);
            fuse c family candidate))
      | None ->
          let family = S.add candidate family in
          (if debug then assert (well_formed family);
           families.(c) <- family;
           schedule candidate)
    let () =
      G.foreach_root
        (fun state ->
           let c = Lr0.core state in
           if debug then assert (S.is_empty (families.(c)));
           families.(c) <- (S.singleton state);
           schedule state)
    let () =
      while not (Stack.is_empty frontier) do
        let state = Stack.pop frontier in G.foreach_successor state examine
        done
    let redirect candidate =
      let c = Lr0.core candidate in
      let family = families.(c) in
      match S.select (subsume candidate) family with
      | Some successor -> successor
      | None -> assert false
    module G' =
      struct
        include G
        let foreach_successor (state : lr1state) f =
          G.foreach_successor state
            (fun candidate ->
               let successor = redirect candidate in f successor)
      end
    type node = int
    include
      ((Fix.GraphNumbering.ForOrderedType)(Lr0.Lr1StateAsOrderedType))(G')
    let state : node -> lr1state = decode
    let entry : node ProductionMap.t =
      ProductionMap.map (fun (c : lr0state) -> encode (Lr0.start c))
        Lr0.entry
    let transition symbol (i : node) =
      (encode (redirect (Lr0.transition symbol (state i))) : node)
    let outgoing_symbols (i : node) =
      Lr0.outgoing_symbols (Lr0.core (state i))
    let transitions (i : node) =
      (SymbolMap.init (fun symbol -> transition symbol i)
         (outgoing_symbols i) : node SymbolMap.t)
    let number (i : node) = (i : int)
    let node (i : int) = (i : node)
  end
[
  structure_item (src/LR1Pager.ml[67,4082+0]..src/LR1Pager.ml[68,4098+10])
    Tstr_type Rec
    [
      type_declaration lr0state/397 (src/LR1Pager.ml[67,4082+0]..src/LR1Pager.ml[68,4098+10])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/LR1Pager.ml[68,4098+2]..src/LR1Pager.ml[68,4098+10])
              Ttyp_constr "Dune__exe!.Lr0.node"
              []
    ]
  structure_item (src/LR1Pager.ml[70,4110+0]..src/LR1Pager.ml[71,4126+14])
    Tstr_type Rec
    [
      type_declaration lr1state/436 (src/LR1Pager.ml[70,4110+0]..src/LR1Pager.ml[71,4126+14])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/LR1Pager.ml[71,4126+2]..src/LR1Pager.ml[71,4126+14])
              Ttyp_constr "Dune__exe!.Lr0.lr1state"
              []
    ]
  structure_item (src/LR1Pager.ml[73,4142+0]..src/LR1Pager.ml[73,4142+12])
    Tstr_open Fresh
    module_expr (src/LR1Pager.ml[73,4142+5]..src/LR1Pager.ml[73,4142+12])
      Tmod_ident "Dune__exe!.Grammar"
  structure_item (src/LR1Pager.ml[75,4156+0]..src/LR1Pager.ml[421,15473+3])
    Tstr_module
    Run/1599
      module_expr (src/LR1Pager.ml[75,4156+11]..src/LR1Pager.ml[421,15473+3])
        Tmod_functor ()
        module_expr (src/LR1Pager.ml[75,4156+16]..src/LR1Pager.ml[421,15473+3])
          module_expr (src/LR1Pager.ml[75,4156+16]..src/LR1Pager.ml[421,15473+3])
            Tmod_structure
            [
              structure_item (src/LR1Pager.ml[83,4405+0]..src/LR1Pager.ml[99,4780+3])
                Tstr_module
                G/678
                  module_expr (src/LR1Pager.ml[83,4405+11]..src/LR1Pager.ml[99,4780+3])
                    Tmod_structure
                    [
                      structure_item (src/LR1Pager.ml[85,4424+2]..src/LR1Pager.ml[85,4424+19])
                        Tstr_type Rec
                        [
                          type_declaration t/492 (src/LR1Pager.ml[85,4424+2]..src/LR1Pager.ml[85,4424+19])
                            ptype_params =
                              []
                            ptype_cstrs =
                              []
                            ptype_kind =
                              Ttype_abstract
                            ptype_private = Public
                            ptype_manifest =
                              Some
                                core_type (src/LR1Pager.ml[85,4424+11]..src/LR1Pager.ml[85,4424+19])
                                  Ttyp_constr "lr1state/436"
                                  []
                        ]
                      structure_item (src/LR1Pager.ml[87,4445+2]..src/LR1Pager.ml[90,4542+15])
                        Tstr_value Nonrec
                        [
                          <def>
                            pattern (src/LR1Pager.ml[87,4445+6]..src/LR1Pager.ml[87,4445+18])
                              Tpat_var "foreach_root/493"
                            expression (src/LR1Pager.ml[87,4445+19]..src/LR1Pager.ml[90,4542+15]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/LR1Pager.ml[87,4445+19]..src/LR1Pager.ml[87,4445+20])
                                    Tpat_var "f/495"
                                  expression (src/LR1Pager.ml[88,4468+4]..src/LR1Pager.ml[90,4542+15])
                                    Texp_apply
                                    expression (src/LR1Pager.ml[88,4468+4]..src/LR1Pager.ml[88,4468+22])
                                      Texp_ident "Dune__exe!.Grammar.ProductionMap.iter"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/LR1Pager.ml[88,4468+23]..src/LR1Pager.ml[90,4542+5])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/LR1Pager.ml[88,4468+28]..src/LR1Pager.ml[88,4468+33])
                                                Tpat_var "_prod/547"
                                              expression (src/LR1Pager.ml[88,4468+34]..src/LR1Pager.ml[89,4520+21]) ghost
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (src/LR1Pager.ml[88,4468+35]..src/LR1Pager.ml[88,4468+36])
                                                      extra
                                                        Tpat_extra_constraint
                                                        core_type (src/LR1Pager.ml[88,4468+39]..src/LR1Pager.ml[88,4468+47])
                                                          Ttyp_constr "lr0state/397"
                                                          []
                                                      Tpat_alias "c/548"
                                                      pattern (src/LR1Pager.ml[88,4468+35]..src/LR1Pager.ml[88,4468+36])
                                                        Tpat_any
                                                    expression (src/LR1Pager.ml[89,4520+6]..src/LR1Pager.ml[89,4520+21])
                                                      Texp_apply
                                                      expression (src/LR1Pager.ml[89,4520+6]..src/LR1Pager.ml[89,4520+7])
                                                        Texp_ident "f/495"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/LR1Pager.ml[89,4520+8]..src/LR1Pager.ml[89,4520+21])
                                                            Texp_apply
                                                            expression (src/LR1Pager.ml[89,4520+9]..src/LR1Pager.ml[89,4520+18])
                                                              Texp_ident "Dune__exe!.Lr0.start"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/LR1Pager.ml[89,4520+19]..src/LR1Pager.ml[89,4520+20])
                                                                  Texp_ident "c/548"
                                                            ]
                                                      ]
                                                ]
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/LR1Pager.ml[90,4542+6]..src/LR1Pager.ml[90,4542+15])
                                          Texp_ident "Dune__exe!.Lr0.entry"
                                    ]
                              ]
                        ]
                      structure_item (src/LR1Pager.ml[92,4559+2]..src/LR1Pager.ml[97,4765+13])
                        Tstr_value Nonrec
                        [
                          <def>
                            pattern (src/LR1Pager.ml[92,4559+6]..src/LR1Pager.ml[92,4559+23])
                              Tpat_var "foreach_successor/583"
                            expression (src/LR1Pager.ml[92,4559+24]..src/LR1Pager.ml[97,4765+13]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/LR1Pager.ml[92,4559+25]..src/LR1Pager.ml[92,4559+30])
                                    extra
                                      Tpat_extra_constraint
                                      core_type (src/LR1Pager.ml[92,4559+33]..src/LR1Pager.ml[92,4559+41])
                                        Ttyp_constr "lr1state/436"
                                        []
                                    Tpat_alias "state/585"
                                    pattern (src/LR1Pager.ml[92,4559+25]..src/LR1Pager.ml[92,4559+30])
                                      Tpat_any
                                  expression (src/LR1Pager.ml[92,4559+43]..src/LR1Pager.ml[97,4765+13]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/LR1Pager.ml[92,4559+43]..src/LR1Pager.ml[92,4559+44])
                                          Tpat_var "f/586"
                                        expression (src/LR1Pager.ml[93,4606+4]..src/LR1Pager.ml[97,4765+13])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/LR1Pager.ml[93,4606+8]..src/LR1Pager.ml[93,4606+15])
                                                Tpat_var "symbols/587"
                                              expression (src/LR1Pager.ml[93,4606+18]..src/LR1Pager.ml[93,4606+55])
                                                Texp_apply
                                                expression (src/LR1Pager.ml[93,4606+18]..src/LR1Pager.ml[93,4606+38])
                                                  Texp_ident "Dune__exe!.Lr0.outgoing_symbols"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/LR1Pager.ml[93,4606+39]..src/LR1Pager.ml[93,4606+55])
                                                      Texp_apply
                                                      expression (src/LR1Pager.ml[93,4606+40]..src/LR1Pager.ml[93,4606+48])
                                                        Texp_ident "Dune__exe!.Lr0.core"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/LR1Pager.ml[93,4606+49]..src/LR1Pager.ml[93,4606+54])
                                                            Texp_ident "state/585"
                                                      ]
                                                ]
                                          ]
                                          expression (src/LR1Pager.ml[94,4665+4]..src/LR1Pager.ml[97,4765+13])
                                            Texp_apply
                                            expression (src/LR1Pager.ml[94,4665+4]..src/LR1Pager.ml[94,4665+13])
                                              Texp_ident "Stdlib!.List.iter"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/LR1Pager.ml[94,4665+14]..src/LR1Pager.ml[97,4765+5])
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (src/LR1Pager.ml[94,4665+19]..src/LR1Pager.ml[94,4665+25])
                                                        Tpat_var "symbol/654"
                                                      expression (src/LR1Pager.ml[95,4694+6]..src/LR1Pager.ml[96,4747+17])
                                                        Texp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (src/LR1Pager.ml[95,4694+10]..src/LR1Pager.ml[95,4694+19])
                                                              Tpat_var "successor/655"
                                                            expression (src/LR1Pager.ml[95,4694+22]..src/LR1Pager.ml[95,4694+49])
                                                              Texp_apply
                                                              expression (src/LR1Pager.ml[95,4694+22]..src/LR1Pager.ml[95,4694+36])
                                                                Texp_ident "Dune__exe!.Lr0.transition"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/LR1Pager.ml[95,4694+37]..src/LR1Pager.ml[95,4694+43])
                                                                    Texp_ident "symbol/654"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/LR1Pager.ml[95,4694+44]..src/LR1Pager.ml[95,4694+49])
                                                                    Texp_ident "state/585"
                                                              ]
                                                        ]
                                                        expression (src/LR1Pager.ml[96,4747+6]..src/LR1Pager.ml[96,4747+17])
                                                          Texp_apply
                                                          expression (src/LR1Pager.ml[96,4747+6]..src/LR1Pager.ml[96,4747+7])
                                                            Texp_ident "f/586"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/LR1Pager.ml[96,4747+8]..src/LR1Pager.ml[96,4747+17])
                                                                Texp_ident "successor/655"
                                                          ]
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (src/LR1Pager.ml[97,4765+6]..src/LR1Pager.ml[97,4765+13])
                                                  Texp_ident "symbols/587"
                                            ]
                                    ]
                              ]
                        ]
                    ]
              structure_item (src/LR1Pager.ml[110,5193+0]..src/LR1Pager.ml[130,5716+3])
                Tstr_module
                S/969
                  module_expr (src/LR1Pager.ml[110,5193+11]..src/LR1Pager.ml[130,5716+3])
                    Tmod_structure
                    [
                      structure_item (src/LR1Pager.ml[112,5212+2]..src/LR1Pager.ml[112,5212+45])
                        Tstr_include                        module_expr (src/LR1Pager.ml[112,5212+10]..src/LR1Pager.ml[112,5212+45])
                          Tmod_apply
                          module_expr (src/LR1Pager.ml[112,5212+10]..src/LR1Pager.ml[112,5212+18])
                            module_expr (src/LR1Pager.ml[112,5212+10]..src/LR1Pager.ml[112,5212+18])
                              Tmod_ident "Stdlib!.Set.Make"
                          module_expr (src/LR1Pager.ml[112,5212+19]..src/LR1Pager.ml[112,5212+44])
                            module_expr (src/LR1Pager.ml[112,5212+19]..src/LR1Pager.ml[112,5212+44])
                              Tmod_ident "Dune__exe!.Lr0.Lr1StateAsOrderedType"
                      structure_item (src/LR1Pager.ml[119,5515+2]..src/LR1Pager.ml[119,5515+24])
                        Tstr_exception
                        type_exception
                          ptyext_constructor =
                            extension_constructor (src/LR1Pager.ml[119,5515+2]..src/LR1Pager.ml[119,5515+24])
                              pext_name = "Found/827"
                              pext_kind =
                                Text_decl
                                  [
                                    core_type (src/LR1Pager.ml[119,5515+21]..src/LR1Pager.ml[119,5515+24])
                                      Ttyp_constr "elt/782"
                                      []
                                  ]
                                  None
                      structure_item (src/LR1Pager.ml[121,5541+2]..src/LR1Pager.ml[128,5702+12])
                        Tstr_value Nonrec
                        [
                          <def>
                            pattern (src/LR1Pager.ml[121,5541+6]..src/LR1Pager.ml[121,5541+12])
                              Tpat_var "select/828"
                            expression (src/LR1Pager.ml[121,5541+13]..src/LR1Pager.ml[128,5702+12]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/LR1Pager.ml[121,5541+14]..src/LR1Pager.ml[121,5541+15])
                                    extra
                                      Tpat_extra_constraint
                                      core_type (src/LR1Pager.ml[121,5541+18]..src/LR1Pager.ml[121,5541+29])
                                        Ttyp_arrow
                                        Nolabel
                                        core_type (src/LR1Pager.ml[121,5541+18]..src/LR1Pager.ml[121,5541+21])
                                          Ttyp_constr "elt/782"
                                          []
                                        core_type (src/LR1Pager.ml[121,5541+25]..src/LR1Pager.ml[121,5541+29])
                                          Ttyp_constr "bool/5!"
                                          []
                                    Tpat_alias "p/830"
                                    pattern (src/LR1Pager.ml[121,5541+14]..src/LR1Pager.ml[121,5541+15])
                                      Tpat_any
                                  expression (src/LR1Pager.ml[121,5541+31]..src/LR1Pager.ml[128,5702+12]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/LR1Pager.ml[121,5541+32]..src/LR1Pager.ml[121,5541+33])
                                          extra
                                            Tpat_extra_constraint
                                            core_type (src/LR1Pager.ml[121,5541+36]..src/LR1Pager.ml[121,5541+37])
                                              Ttyp_constr "t/783"
                                              []
                                          Tpat_alias "s/831"
                                          pattern (src/LR1Pager.ml[121,5541+32]..src/LR1Pager.ml[121,5541+33])
                                            Tpat_any
                                        expression (src/LR1Pager.ml[122,5595+4]..src/LR1Pager.ml[128,5702+12])
                                          extra
                                            Texp_constraint
                                            core_type (src/LR1Pager.ml[121,5541+41]..src/LR1Pager.ml[121,5541+51])
                                              Ttyp_constr "option/10!"
                                              [
                                                core_type (src/LR1Pager.ml[121,5541+41]..src/LR1Pager.ml[121,5541+44])
                                                  Ttyp_constr "elt/782"
                                                  []
                                              ]
                                          Texp_try
                                          expression (src/LR1Pager.ml[123,5603+6]..src/LR1Pager.ml[126,5671+10])
                                            Texp_sequence
                                            expression (src/LR1Pager.ml[123,5603+6]..src/LR1Pager.ml[125,5660+9])
                                              Texp_apply
                                              expression (src/LR1Pager.ml[123,5603+6]..src/LR1Pager.ml[123,5603+10])
                                                Texp_ident "iter/806"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/LR1Pager.ml[123,5603+11]..src/LR1Pager.ml[125,5660+7])
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (src/LR1Pager.ml[123,5603+16]..src/LR1Pager.ml[123,5603+17])
                                                          Tpat_var "x/832"
                                                        expression (src/LR1Pager.ml[124,5624+8]..src/LR1Pager.ml[124,5624+35])
                                                          Texp_ifthenelse
                                                          expression (src/LR1Pager.ml[124,5624+11]..src/LR1Pager.ml[124,5624+14])
                                                            Texp_apply
                                                            expression (src/LR1Pager.ml[124,5624+11]..src/LR1Pager.ml[124,5624+12])
                                                              Texp_ident "p/830"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/LR1Pager.ml[124,5624+13]..src/LR1Pager.ml[124,5624+14])
                                                                  Texp_ident "x/832"
                                                            ]
                                                          expression (src/LR1Pager.ml[124,5624+20]..src/LR1Pager.ml[124,5624+35])
                                                            Texp_apply
                                                            expression (src/LR1Pager.ml[124,5624+20]..src/LR1Pager.ml[124,5624+25])
                                                              Texp_ident "Stdlib!.raise"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/LR1Pager.ml[124,5624+26]..src/LR1Pager.ml[124,5624+35])
                                                                  Texp_construct "Found"
                                                                  [
                                                                    expression (src/LR1Pager.ml[124,5624+33]..src/LR1Pager.ml[124,5624+34])
                                                                      Texp_ident "x/832"
                                                                  ]
                                                            ]
                                                          None
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (src/LR1Pager.ml[125,5660+8]..src/LR1Pager.ml[125,5660+9])
                                                    Texp_ident "s/831"
                                              ]
                                            expression (src/LR1Pager.ml[126,5671+6]..src/LR1Pager.ml[126,5671+10])
                                              Texp_construct "None"
                                              []
                                          [
                                            <case>
                                              pattern (src/LR1Pager.ml[127,5682+9]..src/LR1Pager.ml[127,5682+16])
                                                Tpat_construct "Found"
                                                [
                                                  pattern (src/LR1Pager.ml[127,5682+15]..src/LR1Pager.ml[127,5682+16])
                                                    Tpat_var "x/968"
                                                ]
                                                None
                                              expression (src/LR1Pager.ml[128,5702+6]..src/LR1Pager.ml[128,5702+12])
                                                Texp_construct "Some"
                                                [
                                                  expression (src/LR1Pager.ml[128,5702+11]..src/LR1Pager.ml[128,5702+12])
                                                    Texp_ident "x/968"
                                                ]
                                          ]
                                    ]
                              ]
                        ]
                    ]
              structure_item (src/LR1Pager.ml[143,6265+0]..src/LR1Pager.ml[144,6292+26])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LR1Pager.ml[143,6265+4]..src/LR1Pager.ml[143,6265+12])
                      extra
                        Tpat_extra_constraint
                        core_type (src/LR1Pager.ml[143,6265+15]..src/LR1Pager.ml[143,6265+24])
                          Ttyp_constr "array/8!"
                          [
                            core_type (src/LR1Pager.ml[143,6265+15]..src/LR1Pager.ml[143,6265+18])
                              Ttyp_constr "S/969.t"
                              []
                          ]
                      Tpat_alias "families/970"
                      pattern (src/LR1Pager.ml[143,6265+4]..src/LR1Pager.ml[143,6265+12])
                        Tpat_any
                    expression (src/LR1Pager.ml[144,6292+2]..src/LR1Pager.ml[144,6292+26])
                      extra
                        Texp_constraint
                        core_type (src/LR1Pager.ml[143,6265+15]..src/LR1Pager.ml[143,6265+24])
                          Ttyp_constr "array/8!"
                          [
                            core_type (src/LR1Pager.ml[143,6265+15]..src/LR1Pager.ml[143,6265+18])
                              Ttyp_constr "S/969.t"
                              []
                          ]
                      Texp_apply
                      expression (src/LR1Pager.ml[144,6292+2]..src/LR1Pager.ml[144,6292+12])
                        Texp_ident "Stdlib!.Array.make"
                      [
                        <arg>
                          Nolabel
                          expression (src/LR1Pager.ml[144,6292+13]..src/LR1Pager.ml[144,6292+18])
                            Texp_ident "Dune__exe!.Lr0.n"
                        <arg>
                          Nolabel
                          expression (src/LR1Pager.ml[144,6292+19]..src/LR1Pager.ml[144,6292+26])
                            Texp_ident "S/969.empty"
                      ]
                ]
              structure_item (src/LR1Pager.ml[151,6525+0]..src/LR1Pager.ml[152,6559+16])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LR1Pager.ml[151,6525+4]..src/LR1Pager.ml[151,6525+12])
                      extra
                        Tpat_extra_constraint
                        core_type (src/LR1Pager.ml[151,6525+15]..src/LR1Pager.ml[151,6525+31])
                          Ttyp_constr "Stdlib!.Stack.t"
                          [
                            core_type (src/LR1Pager.ml[151,6525+15]..src/LR1Pager.ml[151,6525+23])
                              Ttyp_constr "lr1state/436"
                              []
                          ]
                      Tpat_alias "frontier/1037"
                      pattern (src/LR1Pager.ml[151,6525+4]..src/LR1Pager.ml[151,6525+12])
                        Tpat_any
                    expression (src/LR1Pager.ml[152,6559+2]..src/LR1Pager.ml[152,6559+16])
                      extra
                        Texp_constraint
                        core_type (src/LR1Pager.ml[151,6525+15]..src/LR1Pager.ml[151,6525+31])
                          Ttyp_constr "Stdlib!.Stack.t"
                          [
                            core_type (src/LR1Pager.ml[151,6525+15]..src/LR1Pager.ml[151,6525+23])
                              Ttyp_constr "lr1state/436"
                              []
                          ]
                      Texp_apply
                      expression (src/LR1Pager.ml[152,6559+2]..src/LR1Pager.ml[152,6559+14])
                        Texp_ident "Stdlib!.Stack.create"
                      [
                        <arg>
                          Nolabel
                          expression (src/LR1Pager.ml[152,6559+14]..src/LR1Pager.ml[152,6559+16])
                            Texp_construct "()"
                            []
                      ]
                ]
              structure_item (src/LR1Pager.ml[154,6577+0]..src/LR1Pager.ml[155,6598+27])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LR1Pager.ml[154,6577+4]..src/LR1Pager.ml[154,6577+12])
                      Tpat_var "schedule/1056"
                    expression (src/LR1Pager.ml[154,6577+13]..src/LR1Pager.ml[155,6598+27]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/LR1Pager.ml[154,6577+13]..src/LR1Pager.ml[154,6577+18])
                            Tpat_var "state/1058"
                          expression (src/LR1Pager.ml[155,6598+2]..src/LR1Pager.ml[155,6598+27])
                            Texp_apply
                            expression (src/LR1Pager.ml[155,6598+2]..src/LR1Pager.ml[155,6598+12])
                              Texp_ident "Stdlib!.Stack.push"
                            [
                              <arg>
                                Nolabel
                                expression (src/LR1Pager.ml[155,6598+13]..src/LR1Pager.ml[155,6598+18])
                                  Texp_ident "state/1058"
                              <arg>
                                Nolabel
                                expression (src/LR1Pager.ml[155,6598+19]..src/LR1Pager.ml[155,6598+27])
                                  Texp_ident "frontier/1037"
                            ]
                      ]
                ]
              structure_item (src/LR1Pager.ml[168,7154+0]..src/LR1Pager.ml[170,7217+38])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LR1Pager.ml[168,7154+4]..src/LR1Pager.ml[168,7154+11])
                      Tpat_var "subsume/1059"
                    expression (src/LR1Pager.ml[168,7154+12]..src/LR1Pager.ml[170,7217+38]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/LR1Pager.ml[168,7154+12]..src/LR1Pager.ml[168,7154+21])
                            Tpat_var "candidate/1061"
                          expression (src/LR1Pager.ml[168,7154+22]..src/LR1Pager.ml[170,7217+38]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/LR1Pager.ml[168,7154+22]..src/LR1Pager.ml[168,7154+27])
                                  Tpat_var "state/1062"
                                expression (src/LR1Pager.ml[169,7184+2]..src/LR1Pager.ml[170,7217+38])
                                  Texp_apply
                                  expression (src/LR1Pager.ml[169,7184+30]..src/LR1Pager.ml[169,7184+32])
                                    Texp_ident "Stdlib!.&&"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/LR1Pager.ml[169,7184+2]..src/LR1Pager.ml[169,7184+29])
                                        Texp_apply
                                        expression (src/LR1Pager.ml[169,7184+2]..src/LR1Pager.ml[169,7184+13])
                                          Texp_ident "Dune__exe!.Lr0.subsume"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/LR1Pager.ml[169,7184+14]..src/LR1Pager.ml[169,7184+23])
                                              Texp_ident "candidate/1061"
                                          <arg>
                                            Nolabel
                                            expression (src/LR1Pager.ml[169,7184+24]..src/LR1Pager.ml[169,7184+29])
                                              Texp_ident "state/1062"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/LR1Pager.ml[170,7217+2]..src/LR1Pager.ml[170,7217+38])
                                        Texp_apply
                                        expression (src/LR1Pager.ml[170,7217+2]..src/LR1Pager.ml[170,7217+22])
                                          Texp_ident "Dune__exe!.Lr0.error_compatible"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/LR1Pager.ml[170,7217+23]..src/LR1Pager.ml[170,7217+32])
                                              Texp_ident "candidate/1061"
                                          <arg>
                                            Nolabel
                                            expression (src/LR1Pager.ml[170,7217+33]..src/LR1Pager.ml[170,7217+38])
                                              Texp_ident "state/1062"
                                        ]
                                  ]
                            ]
                      ]
                ]
              structure_item (src/LR1Pager.ml[172,7257+0]..src/LR1Pager.ml[175,7366+38])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LR1Pager.ml[172,7257+4]..src/LR1Pager.ml[172,7257+14])
                      Tpat_var "compatible/1063"
                    expression (src/LR1Pager.ml[172,7257+15]..src/LR1Pager.ml[175,7366+38]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/LR1Pager.ml[172,7257+15]..src/LR1Pager.ml[172,7257+24])
                            Tpat_var "candidate/1065"
                          expression (src/LR1Pager.ml[172,7257+25]..src/LR1Pager.ml[175,7366+38]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/LR1Pager.ml[172,7257+25]..src/LR1Pager.ml[172,7257+30])
                                  Tpat_var "state/1066"
                                expression (src/LR1Pager.ml[173,7290+2]..src/LR1Pager.ml[175,7366+38])
                                  Texp_apply
                                  expression (src/LR1Pager.ml[173,7290+33]..src/LR1Pager.ml[173,7290+35])
                                    Texp_ident "Stdlib!.&&"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/LR1Pager.ml[173,7290+2]..src/LR1Pager.ml[173,7290+32])
                                        Texp_apply
                                        expression (src/LR1Pager.ml[173,7290+2]..src/LR1Pager.ml[173,7290+16])
                                          Texp_ident "Dune__exe!.Lr0.compatible"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/LR1Pager.ml[173,7290+17]..src/LR1Pager.ml[173,7290+26])
                                              Texp_ident "candidate/1065"
                                          <arg>
                                            Nolabel
                                            expression (src/LR1Pager.ml[173,7290+27]..src/LR1Pager.ml[173,7290+32])
                                              Texp_ident "state/1066"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/LR1Pager.ml[174,7326+2]..src/LR1Pager.ml[175,7366+38])
                                        Texp_apply
                                        expression (src/LR1Pager.ml[174,7326+37]..src/LR1Pager.ml[174,7326+39])
                                          Texp_ident "Stdlib!.&&"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/LR1Pager.ml[174,7326+2]..src/LR1Pager.ml[174,7326+36])
                                              Texp_apply
                                              expression (src/LR1Pager.ml[174,7326+2]..src/LR1Pager.ml[174,7326+20])
                                                Texp_ident "Dune__exe!.Lr0.eos_compatible"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/LR1Pager.ml[174,7326+21]..src/LR1Pager.ml[174,7326+30])
                                                    Texp_ident "candidate/1065"
                                                <arg>
                                                  Nolabel
                                                  expression (src/LR1Pager.ml[174,7326+31]..src/LR1Pager.ml[174,7326+36])
                                                    Texp_ident "state/1066"
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/LR1Pager.ml[175,7366+2]..src/LR1Pager.ml[175,7366+38])
                                              Texp_apply
                                              expression (src/LR1Pager.ml[175,7366+2]..src/LR1Pager.ml[175,7366+22])
                                                Texp_ident "Dune__exe!.Lr0.error_compatible"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/LR1Pager.ml[175,7366+23]..src/LR1Pager.ml[175,7366+32])
                                                    Texp_ident "candidate/1065"
                                                <arg>
                                                  Nolabel
                                                  expression (src/LR1Pager.ml[175,7366+33]..src/LR1Pager.ml[175,7366+38])
                                                    Texp_ident "state/1066"
                                              ]
                                        ]
                                  ]
                            ]
                      ]
                ]
              structure_item (src/LR1Pager.ml[184,7858+0]..src/LR1Pager.ml[195,8169+3])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LR1Pager.ml[184,7858+4]..src/LR1Pager.ml[184,7858+14])
                      Tpat_var "compatible/1067"
                    expression (src/LR1Pager.ml[184,7858+15]..src/LR1Pager.ml[195,8169+3]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/LR1Pager.ml[184,7858+15]..src/LR1Pager.ml[184,7858+24])
                            Tpat_var "candidate/1068"
                          expression (src/LR1Pager.ml[184,7858+25]..src/LR1Pager.ml[195,8169+3]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/LR1Pager.ml[184,7858+25]..src/LR1Pager.ml[184,7858+30])
                                  Tpat_var "state/1069"
                                expression (src/LR1Pager.ml[185,7891+2]..src/LR1Pager.ml[195,8169+3])
                                  Texp_open Fresh
                                  module_expr (src/LR1Pager.ml[185,7891+2]..src/LR1Pager.ml[185,7891+10])
                                    Tmod_ident "Dune__exe!.Settings"
                                  expression (src/LR1Pager.ml[186,7904+4]..src/LR1Pager.ml[194,8148+20])
                                    Texp_match
                                    expression (src/LR1Pager.ml[186,7904+10]..src/LR1Pager.ml[186,7904+27])
                                      Texp_ident "Dune__exe!.Settings.construction_mode"
                                    [
                                      <case>
                                        pattern (src/LR1Pager.ml[187,7937+6]..src/LR1Pager.ml[187,7937+15])
                                          Tpat_value
                                          pattern (src/LR1Pager.ml[187,7937+6]..src/LR1Pager.ml[187,7937+15])
                                            Tpat_construct "ModePager"
                                            []
                                            None
                                        expression (src/LR1Pager.ml[188,7956+8]..src/LR1Pager.ml[188,7956+34])
                                          Texp_apply
                                          expression (src/LR1Pager.ml[188,7956+8]..src/LR1Pager.ml[188,7956+18])
                                            Texp_ident "compatible/1063"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/LR1Pager.ml[188,7956+19]..src/LR1Pager.ml[188,7956+28])
                                                Texp_ident "candidate/1068"
                                            <arg>
                                              Nolabel
                                              expression (src/LR1Pager.ml[188,7956+29]..src/LR1Pager.ml[188,7956+34])
                                                Texp_ident "state/1069"
                                          ]
                                      <case>
                                        pattern (src/LR1Pager.ml[189,7991+6]..src/LR1Pager.ml[189,7991+23])
                                          Tpat_value
                                          pattern (src/LR1Pager.ml[189,7991+6]..src/LR1Pager.ml[189,7991+23])
                                            Tpat_construct "ModeInclusionOnly"
                                            []
                                            None
                                        expression (src/LR1Pager.ml[190,8018+8]..src/LR1Pager.ml[190,8018+58])
                                          Texp_apply
                                          expression (src/LR1Pager.ml[190,8018+32]..src/LR1Pager.ml[190,8018+34])
                                            Texp_ident "Stdlib!.||"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/LR1Pager.ml[190,8018+8]..src/LR1Pager.ml[190,8018+31])
                                                Texp_apply
                                                expression (src/LR1Pager.ml[190,8018+8]..src/LR1Pager.ml[190,8018+15])
                                                  Texp_ident "subsume/1059"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/LR1Pager.ml[190,8018+16]..src/LR1Pager.ml[190,8018+25])
                                                      Texp_ident "candidate/1068"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/LR1Pager.ml[190,8018+26]..src/LR1Pager.ml[190,8018+31])
                                                      Texp_ident "state/1069"
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/LR1Pager.ml[190,8018+35]..src/LR1Pager.ml[190,8018+58])
                                                Texp_apply
                                                expression (src/LR1Pager.ml[190,8018+35]..src/LR1Pager.ml[190,8018+42])
                                                  Texp_ident "subsume/1059"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/LR1Pager.ml[190,8018+43]..src/LR1Pager.ml[190,8018+48])
                                                      Texp_ident "state/1069"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/LR1Pager.ml[190,8018+49]..src/LR1Pager.ml[190,8018+58])
                                                      Texp_ident "candidate/1068"
                                                ]
                                          ]
                                      <case>
                                        pattern (src/LR1Pager.ml[191,8077+6]..src/LR1Pager.ml[192,8097+14])
                                          Tpat_or
                                          pattern (src/LR1Pager.ml[191,8077+6]..src/LR1Pager.ml[191,8077+19])
                                            Tpat_value
                                            pattern (src/LR1Pager.ml[191,8077+6]..src/LR1Pager.ml[191,8077+19])
                                              Tpat_construct "ModeCanonical"
                                              []
                                              None
                                          pattern (src/LR1Pager.ml[192,8097+6]..src/LR1Pager.ml[192,8097+14])
                                            Tpat_value
                                            pattern (src/LR1Pager.ml[192,8097+6]..src/LR1Pager.ml[192,8097+14])
                                              Tpat_construct "ModeLALR"
                                              []
                                              None
                                        expression (src/LR1Pager.ml[194,8148+8]..src/LR1Pager.ml[194,8148+20])
                                          Texp_assert                                          expression (src/LR1Pager.ml[194,8148+15]..src/LR1Pager.ml[194,8148+20])
                                            Texp_construct "false"
                                            []
                                    ]
                            ]
                      ]
                ]
              structure_item (src/LR1Pager.ml[201,8279+0]..src/LR1Pager.ml[202,8291+7])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LR1Pager.ml[201,8279+4]..src/LR1Pager.ml[201,8279+9])
                      Tpat_var "debug/1190"
                    expression (src/LR1Pager.ml[202,8291+2]..src/LR1Pager.ml[202,8291+7])
                      Texp_construct "false"
                      []
                ]
              structure_item (src/LR1Pager.ml[204,8300+0]..src/LR1Pager.ml[210,8436+23])
                Tstr_value Rec
                [
                  <def>
                    pattern (src/LR1Pager.ml[204,8300+8]..src/LR1Pager.ml[204,8300+14])
                      Tpat_var "no_two/1191"
                    expression (src/LR1Pager.ml[204,8300+15]..src/LR1Pager.ml[210,8436+23]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/LR1Pager.ml[204,8300+15]..src/LR1Pager.ml[204,8300+22])
                            Tpat_var "related/1192"
                          expression (src/LR1Pager.ml[204,8300+23]..src/LR1Pager.ml[210,8436+23]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/LR1Pager.ml[204,8300+23]..src/LR1Pager.ml[204,8300+25])
                                  Tpat_var "xs/1193"
                                expression (src/LR1Pager.ml[205,8328+2]..src/LR1Pager.ml[210,8436+23])
                                  Texp_match
                                  expression (src/LR1Pager.ml[205,8328+8]..src/LR1Pager.ml[205,8328+10])
                                    Texp_ident "xs/1193"
                                  [
                                    <case>
                                      pattern (src/LR1Pager.ml[206,8344+4]..src/LR1Pager.ml[206,8344+6])
                                        Tpat_value
                                        pattern (src/LR1Pager.ml[206,8344+4]..src/LR1Pager.ml[206,8344+6])
                                          Tpat_construct "[]"
                                          []
                                          None
                                      expression (src/LR1Pager.ml[207,8354+6]..src/LR1Pager.ml[207,8354+10])
                                        Texp_construct "true"
                                        []
                                    <case>
                                      pattern (src/LR1Pager.ml[208,8365+4]..src/LR1Pager.ml[208,8365+11])
                                        Tpat_value
                                        pattern (src/LR1Pager.ml[208,8365+4]..src/LR1Pager.ml[208,8365+11])
                                          Tpat_construct "::"
                                          [
                                            pattern (src/LR1Pager.ml[208,8365+4]..src/LR1Pager.ml[208,8365+5])
                                              Tpat_var "x/1194"
                                            pattern (src/LR1Pager.ml[208,8365+9]..src/LR1Pager.ml[208,8365+11])
                                              Tpat_var "xs/1195"
                                          ]
                                          None
                                      expression (src/LR1Pager.ml[209,8380+6]..src/LR1Pager.ml[210,8436+23])
                                        Texp_apply
                                        expression (src/LR1Pager.ml[209,8380+53]..src/LR1Pager.ml[209,8380+55])
                                          Texp_ident "Stdlib!.&&"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/LR1Pager.ml[209,8380+6]..src/LR1Pager.ml[209,8380+52])
                                              Texp_apply
                                              expression (src/LR1Pager.ml[209,8380+6]..src/LR1Pager.ml[209,8380+18])
                                                Texp_ident "Stdlib!.List.for_all"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/LR1Pager.ml[209,8380+19]..src/LR1Pager.ml[209,8380+49])
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (src/LR1Pager.ml[209,8380+24]..src/LR1Pager.ml[209,8380+26])
                                                          Tpat_var "x'/1196"
                                                        expression (src/LR1Pager.ml[209,8380+30]..src/LR1Pager.ml[209,8380+48])
                                                          Texp_apply
                                                          expression (src/LR1Pager.ml[209,8380+30]..src/LR1Pager.ml[209,8380+33])
                                                            Texp_ident "Stdlib!.not"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/LR1Pager.ml[209,8380+34]..src/LR1Pager.ml[209,8380+48])
                                                                Texp_apply
                                                                expression (src/LR1Pager.ml[209,8380+35]..src/LR1Pager.ml[209,8380+42])
                                                                  Texp_ident "related/1192"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/LR1Pager.ml[209,8380+43]..src/LR1Pager.ml[209,8380+44])
                                                                      Texp_ident "x/1194"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/LR1Pager.ml[209,8380+45]..src/LR1Pager.ml[209,8380+47])
                                                                      Texp_ident "x'/1196"
                                                                ]
                                                          ]
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (src/LR1Pager.ml[209,8380+50]..src/LR1Pager.ml[209,8380+52])
                                                    Texp_ident "xs/1195"
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/LR1Pager.ml[210,8436+6]..src/LR1Pager.ml[210,8436+23])
                                              Texp_apply
                                              expression (src/LR1Pager.ml[210,8436+6]..src/LR1Pager.ml[210,8436+12])
                                                Texp_ident "no_two/1191"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/LR1Pager.ml[210,8436+13]..src/LR1Pager.ml[210,8436+20])
                                                    Texp_ident "related/1192"
                                                <arg>
                                                  Nolabel
                                                  expression (src/LR1Pager.ml[210,8436+21]..src/LR1Pager.ml[210,8436+23])
                                                    Texp_ident "xs/1195"
                                              ]
                                        ]
                                  ]
                            ]
                      ]
                ]
              structure_item (src/LR1Pager.ml[212,8461+0]..src/LR1Pager.ml[214,8538+27])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LR1Pager.ml[212,8461+4]..src/LR1Pager.ml[212,8461+15])
                      Tpat_var "well_formed/1197"
                    expression (src/LR1Pager.ml[212,8461+16]..src/LR1Pager.ml[214,8538+27]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/LR1Pager.ml[212,8461+17]..src/LR1Pager.ml[212,8461+23])
                            extra
                              Tpat_extra_constraint
                              core_type (src/LR1Pager.ml[212,8461+26]..src/LR1Pager.ml[212,8461+29])
                                Ttyp_constr "S/969.t"
                                []
                            Tpat_alias "family/1199"
                            pattern (src/LR1Pager.ml[212,8461+17]..src/LR1Pager.ml[212,8461+23])
                              Tpat_any
                          expression (src/LR1Pager.ml[213,8501+2]..src/LR1Pager.ml[214,8538+27])
                            extra
                              Texp_constraint
                              core_type (src/LR1Pager.ml[212,8461+33]..src/LR1Pager.ml[212,8461+37])
                                Ttyp_constr "bool/5!"
                                []
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/LR1Pager.ml[213,8501+6]..src/LR1Pager.ml[213,8501+13])
                                  Tpat_var "members/1200"
                                expression (src/LR1Pager.ml[213,8501+16]..src/LR1Pager.ml[213,8501+33])
                                  Texp_apply
                                  expression (src/LR1Pager.ml[213,8501+16]..src/LR1Pager.ml[213,8501+26])
                                    Texp_ident "S/969.elements"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/LR1Pager.ml[213,8501+27]..src/LR1Pager.ml[213,8501+33])
                                        Texp_ident "family/1199"
                                  ]
                            ]
                            expression (src/LR1Pager.ml[214,8538+2]..src/LR1Pager.ml[214,8538+27])
                              Texp_apply
                              expression (src/LR1Pager.ml[214,8538+2]..src/LR1Pager.ml[214,8538+8])
                                Texp_ident "no_two/1191"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/LR1Pager.ml[214,8538+9]..src/LR1Pager.ml[214,8538+19])
                                    Texp_ident "compatible/1067"
                                <arg>
                                  Nolabel
                                  expression (src/LR1Pager.ml[214,8538+20]..src/LR1Pager.ml[214,8538+27])
                                    Texp_ident "members/1200"
                              ]
                      ]
                ]
              structure_item (src/LR1Pager.ml[230,9340+0]..src/LR1Pager.ml[307,12231+24])
                Tstr_value Rec
                [
                  <def>
                    pattern (src/LR1Pager.ml[230,9340+8]..src/LR1Pager.ml[230,9340+15])
                      Tpat_var "examine/1201"
                    expression (src/LR1Pager.ml[230,9340+16]..src/LR1Pager.ml[260,10440+27]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/LR1Pager.ml[230,9340+17]..src/LR1Pager.ml[230,9340+26])
                            extra
                              Tpat_extra_constraint
                              core_type (src/LR1Pager.ml[230,9340+29]..src/LR1Pager.ml[230,9340+37])
                                Ttyp_constr "lr1state/436"
                                []
                            Tpat_alias "candidate/1203"
                            pattern (src/LR1Pager.ml[230,9340+17]..src/LR1Pager.ml[230,9340+26])
                              Tpat_any
                          expression (src/LR1Pager.ml[235,9483+2]..src/LR1Pager.ml[260,10440+27])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/LR1Pager.ml[235,9483+6]..src/LR1Pager.ml[235,9483+7])
                                  extra
                                    Tpat_extra_constraint
                                    core_type (src/LR1Pager.ml[235,9483+10]..src/LR1Pager.ml[235,9483+18])
                                      Ttyp_constr "lr0state/397"
                                      []
                                  Tpat_alias "c/1204"
                                  pattern (src/LR1Pager.ml[235,9483+6]..src/LR1Pager.ml[235,9483+7])
                                    Tpat_any
                                expression (src/LR1Pager.ml[235,9483+21]..src/LR1Pager.ml[235,9483+39])
                                  extra
                                    Texp_constraint
                                    core_type (src/LR1Pager.ml[235,9483+10]..src/LR1Pager.ml[235,9483+18])
                                      Ttyp_constr "lr0state/397"
                                      []
                                  Texp_apply
                                  expression (src/LR1Pager.ml[235,9483+21]..src/LR1Pager.ml[235,9483+29])
                                    Texp_ident "Dune__exe!.Lr0.core"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/LR1Pager.ml[235,9483+30]..src/LR1Pager.ml[235,9483+39])
                                        Texp_ident "candidate/1203"
                                  ]
                            ]
                            expression (src/LR1Pager.ml[236,9526+2]..src/LR1Pager.ml[260,10440+27])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/LR1Pager.ml[236,9526+6]..src/LR1Pager.ml[236,9526+12])
                                    extra
                                      Tpat_extra_constraint
                                      core_type (src/LR1Pager.ml[236,9526+15]..src/LR1Pager.ml[236,9526+18])
                                        Ttyp_constr "S/969.t"
                                        []
                                    Tpat_alias "family/1205"
                                    pattern (src/LR1Pager.ml[236,9526+6]..src/LR1Pager.ml[236,9526+12])
                                      Tpat_any
                                  expression (src/LR1Pager.ml[236,9526+21]..src/LR1Pager.ml[236,9526+33])
                                    extra
                                      Texp_constraint
                                      core_type (src/LR1Pager.ml[236,9526+15]..src/LR1Pager.ml[236,9526+18])
                                        Ttyp_constr "S/969.t"
                                        []
                                    Texp_apply
                                    expression (src/LR1Pager.ml[236,9526+21]..src/LR1Pager.ml[236,9526+33]) ghost
                                      Texp_ident "Stdlib!.Array.get"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/LR1Pager.ml[236,9526+21]..src/LR1Pager.ml[236,9526+29])
                                          Texp_ident "families/970"
                                      <arg>
                                        Nolabel
                                        expression (src/LR1Pager.ml[236,9526+31]..src/LR1Pager.ml[236,9526+32])
                                          Texp_ident "c/1204"
                                    ]
                              ]
                              expression (src/LR1Pager.ml[237,9563+2]..src/LR1Pager.ml[260,10440+27])
                                Texp_sequence
                                expression (src/LR1Pager.ml[237,9563+2]..src/LR1Pager.ml[237,9563+43])
                                  Texp_ifthenelse
                                  expression (src/LR1Pager.ml[237,9563+5]..src/LR1Pager.ml[237,9563+10])
                                    Texp_ident "debug/1190"
                                  expression (src/LR1Pager.ml[237,9563+16]..src/LR1Pager.ml[237,9563+43])
                                    Texp_assert                                    expression (src/LR1Pager.ml[237,9563+23]..src/LR1Pager.ml[237,9563+43])
                                      Texp_apply
                                      expression (src/LR1Pager.ml[237,9563+24]..src/LR1Pager.ml[237,9563+35])
                                        Texp_ident "well_formed/1197"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/LR1Pager.ml[237,9563+36]..src/LR1Pager.ml[237,9563+42])
                                            Texp_ident "family/1205"
                                      ]
                                  None
                                expression (src/LR1Pager.ml[247,10007+2]..src/LR1Pager.ml[260,10440+27])
                                  Texp_ifthenelse
                                  expression (src/LR1Pager.ml[247,10007+5]..src/LR1Pager.ml[247,10007+40])
                                    Texp_apply
                                    expression (src/LR1Pager.ml[247,10007+5]..src/LR1Pager.ml[247,10007+13])
                                      Texp_ident "S/969.exists"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/LR1Pager.ml[247,10007+14]..src/LR1Pager.ml[247,10007+33])
                                          Texp_apply
                                          expression (src/LR1Pager.ml[247,10007+15]..src/LR1Pager.ml[247,10007+22])
                                            Texp_ident "subsume/1059"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/LR1Pager.ml[247,10007+23]..src/LR1Pager.ml[247,10007+32])
                                                Texp_ident "candidate/1203"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/LR1Pager.ml[247,10007+34]..src/LR1Pager.ml[247,10007+40])
                                          Texp_ident "family/1205"
                                    ]
                                  expression (src/LR1Pager.ml[257,10425+4]..src/LR1Pager.ml[257,10425+6])
                                    Texp_construct "()"
                                    []
                                  Some
                                    expression (src/LR1Pager.ml[260,10440+4]..src/LR1Pager.ml[260,10440+27])
                                      Texp_apply
                                      expression (src/LR1Pager.ml[260,10440+4]..src/LR1Pager.ml[260,10440+8])
                                        Texp_ident "fuse/1202"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/LR1Pager.ml[260,10440+9]..src/LR1Pager.ml[260,10440+10])
                                            Texp_ident "c/1204"
                                        <arg>
                                          Nolabel
                                          expression (src/LR1Pager.ml[260,10440+11]..src/LR1Pager.ml[260,10440+17])
                                            Texp_ident "family/1205"
                                        <arg>
                                          Nolabel
                                          expression (src/LR1Pager.ml[260,10440+18]..src/LR1Pager.ml[260,10440+27])
                                            Texp_ident "candidate/1203"
                                      ]
                      ]
                  <def>
                    pattern (src/LR1Pager.ml[262,10469+4]..src/LR1Pager.ml[262,10469+8])
                      Tpat_var "fuse/1202"
                    expression (src/LR1Pager.ml[262,10469+9]..src/LR1Pager.ml[307,12231+24]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/LR1Pager.ml[262,10469+10]..src/LR1Pager.ml[262,10469+11])
                            extra
                              Tpat_extra_constraint
                              core_type (src/LR1Pager.ml[262,10469+14]..src/LR1Pager.ml[262,10469+22])
                                Ttyp_constr "lr0state/397"
                                []
                            Tpat_alias "c/1206"
                            pattern (src/LR1Pager.ml[262,10469+10]..src/LR1Pager.ml[262,10469+11])
                              Tpat_any
                          expression (src/LR1Pager.ml[262,10469+24]..src/LR1Pager.ml[307,12231+24]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/LR1Pager.ml[262,10469+25]..src/LR1Pager.ml[262,10469+31])
                                  extra
                                    Tpat_extra_constraint
                                    core_type (src/LR1Pager.ml[262,10469+34]..src/LR1Pager.ml[262,10469+37])
                                      Ttyp_constr "S/969.t"
                                      []
                                  Tpat_alias "family/1207"
                                  pattern (src/LR1Pager.ml[262,10469+25]..src/LR1Pager.ml[262,10469+31])
                                    Tpat_any
                                expression (src/LR1Pager.ml[262,10469+39]..src/LR1Pager.ml[307,12231+24]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/LR1Pager.ml[262,10469+40]..src/LR1Pager.ml[262,10469+49])
                                        extra
                                          Tpat_extra_constraint
                                          core_type (src/LR1Pager.ml[262,10469+52]..src/LR1Pager.ml[262,10469+60])
                                            Ttyp_constr "lr1state/436"
                                            []
                                        Tpat_alias "candidate/1208"
                                        pattern (src/LR1Pager.ml[262,10469+40]..src/LR1Pager.ml[262,10469+49])
                                          Tpat_any
                                      expression (src/LR1Pager.ml[268,10687+2]..src/LR1Pager.ml[307,12231+24])
                                        Texp_match
                                        expression (src/LR1Pager.ml[268,10687+8]..src/LR1Pager.ml[268,10687+46])
                                          Texp_apply
                                          expression (src/LR1Pager.ml[268,10687+8]..src/LR1Pager.ml[268,10687+16])
                                            Texp_ident "S/969.select"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/LR1Pager.ml[268,10687+17]..src/LR1Pager.ml[268,10687+39])
                                                Texp_apply
                                                expression (src/LR1Pager.ml[268,10687+18]..src/LR1Pager.ml[268,10687+28])
                                                  Texp_ident "compatible/1067"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/LR1Pager.ml[268,10687+29]..src/LR1Pager.ml[268,10687+38])
                                                      Texp_ident "candidate/1208"
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/LR1Pager.ml[268,10687+40]..src/LR1Pager.ml[268,10687+46])
                                                Texp_ident "family/1207"
                                          ]
                                        [
                                          <case>
                                            pattern (src/LR1Pager.ml[269,10739+4]..src/LR1Pager.ml[269,10739+14])
                                              Tpat_value
                                              pattern (src/LR1Pager.ml[269,10739+4]..src/LR1Pager.ml[269,10739+14])
                                                Tpat_construct "Some"
                                                [
                                                  pattern (src/LR1Pager.ml[269,10739+9]..src/LR1Pager.ml[269,10739+14])
                                                    Tpat_var "state/1209"
                                                ]
                                                None
                                            expression (src/LR1Pager.ml[270,10757+6]..src/LR1Pager.ml[296,11966+29])
                                              Texp_sequence
                                              expression (src/LR1Pager.ml[270,10757+6]..src/LR1Pager.ml[270,10757+58])
                                                Texp_ifthenelse
                                                expression (src/LR1Pager.ml[270,10757+9]..src/LR1Pager.ml[270,10757+14])
                                                  Texp_ident "debug/1190"
                                                expression (src/LR1Pager.ml[270,10757+20]..src/LR1Pager.ml[270,10757+58])
                                                  Texp_assert                                                  expression (src/LR1Pager.ml[270,10757+27]..src/LR1Pager.ml[270,10757+58])
                                                    Texp_apply
                                                    expression (src/LR1Pager.ml[270,10757+28]..src/LR1Pager.ml[270,10757+31])
                                                      Texp_ident "Stdlib!.not"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/LR1Pager.ml[270,10757+32]..src/LR1Pager.ml[270,10757+57])
                                                          Texp_apply
                                                          expression (src/LR1Pager.ml[270,10757+33]..src/LR1Pager.ml[270,10757+40])
                                                            Texp_ident "subsume/1059"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/LR1Pager.ml[270,10757+41]..src/LR1Pager.ml[270,10757+50])
                                                                Texp_ident "candidate/1208"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/LR1Pager.ml[270,10757+51]..src/LR1Pager.ml[270,10757+56])
                                                                Texp_ident "state/1209"
                                                          ]
                                                    ]
                                                None
                                              expression (src/LR1Pager.ml[271,10817+6]..src/LR1Pager.ml[296,11966+29])
                                                Texp_sequence
                                                expression (src/LR1Pager.ml[271,10817+6]..src/LR1Pager.ml[271,10817+55])
                                                  Texp_ifthenelse
                                                  expression (src/LR1Pager.ml[271,10817+9]..src/LR1Pager.ml[271,10817+14])
                                                    Texp_ident "debug/1190"
                                                  expression (src/LR1Pager.ml[271,10817+20]..src/LR1Pager.ml[271,10817+55])
                                                    Texp_assert                                                    expression (src/LR1Pager.ml[271,10817+27]..src/LR1Pager.ml[271,10817+55])
                                                      Texp_apply
                                                      expression (src/LR1Pager.ml[271,10817+28]..src/LR1Pager.ml[271,10817+38])
                                                        Texp_ident "compatible/1067"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/LR1Pager.ml[271,10817+39]..src/LR1Pager.ml[271,10817+48])
                                                            Texp_ident "candidate/1208"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/LR1Pager.ml[271,10817+49]..src/LR1Pager.ml[271,10817+54])
                                                            Texp_ident "state/1209"
                                                      ]
                                                  None
                                                expression (src/LR1Pager.ml[278,11154+6]..src/LR1Pager.ml[296,11966+29])
                                                  Texp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (src/LR1Pager.ml[278,11154+10]..src/LR1Pager.ml[278,11154+19])
                                                        extra
                                                          Tpat_extra_constraint
                                                          core_type (src/LR1Pager.ml[278,11154+22]..src/LR1Pager.ml[278,11154+30])
                                                            Ttyp_constr "lr1state/436"
                                                            []
                                                        Tpat_alias "candidate/1210"
                                                        pattern (src/LR1Pager.ml[278,11154+10]..src/LR1Pager.ml[278,11154+19])
                                                          Tpat_any
                                                      expression (src/LR1Pager.ml[278,11154+33]..src/LR1Pager.ml[278,11154+58])
                                                        extra
                                                          Texp_constraint
                                                          core_type (src/LR1Pager.ml[278,11154+22]..src/LR1Pager.ml[278,11154+30])
                                                            Ttyp_constr "lr1state/436"
                                                            []
                                                        Texp_apply
                                                        expression (src/LR1Pager.ml[278,11154+33]..src/LR1Pager.ml[278,11154+42])
                                                          Texp_ident "Dune__exe!.Lr0.union"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/LR1Pager.ml[278,11154+43]..src/LR1Pager.ml[278,11154+52])
                                                              Texp_ident "candidate/1208"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/LR1Pager.ml[278,11154+53]..src/LR1Pager.ml[278,11154+58])
                                                              Texp_ident "state/1209"
                                                        ]
                                                  ]
                                                  expression (src/LR1Pager.ml[289,11712+6]..src/LR1Pager.ml[296,11966+29])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (src/LR1Pager.ml[289,11712+10]..src/LR1Pager.ml[289,11712+16])
                                                          Tpat_var "family/1211"
                                                        expression (src/LR1Pager.ml[289,11712+19]..src/LR1Pager.ml[289,11712+40])
                                                          Texp_apply
                                                          expression (src/LR1Pager.ml[289,11712+19]..src/LR1Pager.ml[289,11712+27])
                                                            Texp_ident "S/969.remove"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/LR1Pager.ml[289,11712+28]..src/LR1Pager.ml[289,11712+33])
                                                                Texp_ident "state/1209"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/LR1Pager.ml[289,11712+34]..src/LR1Pager.ml[289,11712+40])
                                                                Texp_ident "family/1207"
                                                          ]
                                                    ]
                                                    expression (src/LR1Pager.ml[290,11756+6]..src/LR1Pager.ml[296,11966+29])
                                                      Texp_sequence
                                                      expression (src/LR1Pager.ml[290,11756+6]..src/LR1Pager.ml[290,11756+47])
                                                        Texp_ifthenelse
                                                        expression (src/LR1Pager.ml[290,11756+9]..src/LR1Pager.ml[290,11756+14])
                                                          Texp_ident "debug/1190"
                                                        expression (src/LR1Pager.ml[290,11756+20]..src/LR1Pager.ml[290,11756+47])
                                                          Texp_assert                                                          expression (src/LR1Pager.ml[290,11756+27]..src/LR1Pager.ml[290,11756+47])
                                                            Texp_apply
                                                            expression (src/LR1Pager.ml[290,11756+28]..src/LR1Pager.ml[290,11756+39])
                                                              Texp_ident "well_formed/1197"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/LR1Pager.ml[290,11756+40]..src/LR1Pager.ml[290,11756+46])
                                                                  Texp_ident "family/1211"
                                                            ]
                                                        None
                                                      expression (src/LR1Pager.ml[296,11966+6]..src/LR1Pager.ml[296,11966+29])
                                                        Texp_apply
                                                        expression (src/LR1Pager.ml[296,11966+6]..src/LR1Pager.ml[296,11966+10])
                                                          Texp_ident "fuse/1202"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/LR1Pager.ml[296,11966+11]..src/LR1Pager.ml[296,11966+12])
                                                              Texp_ident "c/1206"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/LR1Pager.ml[296,11966+13]..src/LR1Pager.ml[296,11966+19])
                                                              Texp_ident "family/1211"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/LR1Pager.ml[296,11966+20]..src/LR1Pager.ml[296,11966+29])
                                                              Texp_ident "candidate/1210"
                                                        ]
                                          <case>
                                            pattern (src/LR1Pager.ml[298,11997+4]..src/LR1Pager.ml[298,11997+8])
                                              Tpat_value
                                              pattern (src/LR1Pager.ml[298,11997+4]..src/LR1Pager.ml[298,11997+8])
                                                Tpat_construct "None"
                                                []
                                                None
                                            expression (src/LR1Pager.ml[304,12107+6]..src/LR1Pager.ml[307,12231+24])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/LR1Pager.ml[304,12107+10]..src/LR1Pager.ml[304,12107+16])
                                                    Tpat_var "family/1212"
                                                  expression (src/LR1Pager.ml[304,12107+19]..src/LR1Pager.ml[304,12107+41])
                                                    Texp_apply
                                                    expression (src/LR1Pager.ml[304,12107+19]..src/LR1Pager.ml[304,12107+24])
                                                      Texp_ident "S/969.add"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/LR1Pager.ml[304,12107+25]..src/LR1Pager.ml[304,12107+34])
                                                          Texp_ident "candidate/1208"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/LR1Pager.ml[304,12107+35]..src/LR1Pager.ml[304,12107+41])
                                                          Texp_ident "family/1207"
                                                    ]
                                              ]
                                              expression (src/LR1Pager.ml[305,12152+6]..src/LR1Pager.ml[307,12231+24])
                                                Texp_sequence
                                                expression (src/LR1Pager.ml[305,12152+6]..src/LR1Pager.ml[305,12152+47])
                                                  Texp_ifthenelse
                                                  expression (src/LR1Pager.ml[305,12152+9]..src/LR1Pager.ml[305,12152+14])
                                                    Texp_ident "debug/1190"
                                                  expression (src/LR1Pager.ml[305,12152+20]..src/LR1Pager.ml[305,12152+47])
                                                    Texp_assert                                                    expression (src/LR1Pager.ml[305,12152+27]..src/LR1Pager.ml[305,12152+47])
                                                      Texp_apply
                                                      expression (src/LR1Pager.ml[305,12152+28]..src/LR1Pager.ml[305,12152+39])
                                                        Texp_ident "well_formed/1197"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/LR1Pager.ml[305,12152+40]..src/LR1Pager.ml[305,12152+46])
                                                            Texp_ident "family/1212"
                                                      ]
                                                  None
                                                expression (src/LR1Pager.ml[306,12201+6]..src/LR1Pager.ml[307,12231+24])
                                                  Texp_sequence
                                                  expression (src/LR1Pager.ml[306,12201+6]..src/LR1Pager.ml[306,12201+28])
                                                    Texp_apply
                                                    expression (src/LR1Pager.ml[306,12201+6]..src/LR1Pager.ml[306,12201+28]) ghost
                                                      Texp_ident "Stdlib!.Array.set"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/LR1Pager.ml[306,12201+6]..src/LR1Pager.ml[306,12201+14])
                                                          Texp_ident "families/970"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/LR1Pager.ml[306,12201+16]..src/LR1Pager.ml[306,12201+17])
                                                          Texp_ident "c/1206"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/LR1Pager.ml[306,12201+22]..src/LR1Pager.ml[306,12201+28])
                                                          Texp_ident "family/1212"
                                                    ]
                                                  expression (src/LR1Pager.ml[307,12231+6]..src/LR1Pager.ml[307,12231+24])
                                                    Texp_apply
                                                    expression (src/LR1Pager.ml[307,12231+6]..src/LR1Pager.ml[307,12231+14])
                                                      Texp_ident "schedule/1056"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/LR1Pager.ml[307,12231+15]..src/LR1Pager.ml[307,12231+24])
                                                          Texp_ident "candidate/1208"
                                                    ]
                                        ]
                                  ]
                            ]
                      ]
                ]
              structure_item (src/LR1Pager.ml[314,12495+0]..src/LR1Pager.ml[320,12675+3])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LR1Pager.ml[314,12495+4]..src/LR1Pager.ml[314,12495+6])
                      Tpat_construct "()"
                      []
                      None
                    expression (src/LR1Pager.ml[315,12504+2]..src/LR1Pager.ml[320,12675+3])
                      Texp_apply
                      expression (src/LR1Pager.ml[315,12504+2]..src/LR1Pager.ml[315,12504+16])
                        Texp_ident "G/678.foreach_root"
                      [
                        <arg>
                          Nolabel
                          expression (src/LR1Pager.ml[315,12504+17]..src/LR1Pager.ml[320,12675+3])
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/LR1Pager.ml[315,12504+22]..src/LR1Pager.ml[315,12504+27])
                                  Tpat_var "state/1213"
                                expression (src/LR1Pager.ml[316,12535+4]..src/LR1Pager.ml[319,12656+18])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/LR1Pager.ml[316,12535+8]..src/LR1Pager.ml[316,12535+9])
                                        Tpat_var "c/1214"
                                      expression (src/LR1Pager.ml[316,12535+12]..src/LR1Pager.ml[316,12535+26])
                                        Texp_apply
                                        expression (src/LR1Pager.ml[316,12535+12]..src/LR1Pager.ml[316,12535+20])
                                          Texp_ident "Dune__exe!.Lr0.core"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/LR1Pager.ml[316,12535+21]..src/LR1Pager.ml[316,12535+26])
                                              Texp_ident "state/1213"
                                        ]
                                  ]
                                  expression (src/LR1Pager.ml[317,12565+4]..src/LR1Pager.ml[319,12656+18])
                                    Texp_sequence
                                    expression (src/LR1Pager.ml[317,12565+4]..src/LR1Pager.ml[317,12565+50])
                                      Texp_ifthenelse
                                      expression (src/LR1Pager.ml[317,12565+7]..src/LR1Pager.ml[317,12565+12])
                                        Texp_ident "debug/1190"
                                      expression (src/LR1Pager.ml[317,12565+18]..src/LR1Pager.ml[317,12565+50])
                                        Texp_assert                                        expression (src/LR1Pager.ml[317,12565+25]..src/LR1Pager.ml[317,12565+50])
                                          Texp_apply
                                          expression (src/LR1Pager.ml[317,12565+26]..src/LR1Pager.ml[317,12565+36])
                                            Texp_ident "S/969.is_empty"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/LR1Pager.ml[317,12565+37]..src/LR1Pager.ml[317,12565+49])
                                                Texp_apply
                                                expression (src/LR1Pager.ml[317,12565+37]..src/LR1Pager.ml[317,12565+49]) ghost
                                                  Texp_ident "Stdlib!.Array.get"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/LR1Pager.ml[317,12565+37]..src/LR1Pager.ml[317,12565+45])
                                                      Texp_ident "families/970"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/LR1Pager.ml[317,12565+47]..src/LR1Pager.ml[317,12565+48])
                                                      Texp_ident "c/1214"
                                                ]
                                          ]
                                      None
                                    expression (src/LR1Pager.ml[318,12617+4]..src/LR1Pager.ml[319,12656+18])
                                      Texp_sequence
                                      expression (src/LR1Pager.ml[318,12617+4]..src/LR1Pager.ml[318,12617+37])
                                        Texp_apply
                                        expression (src/LR1Pager.ml[318,12617+4]..src/LR1Pager.ml[318,12617+37]) ghost
                                          Texp_ident "Stdlib!.Array.set"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/LR1Pager.ml[318,12617+4]..src/LR1Pager.ml[318,12617+12])
                                              Texp_ident "families/970"
                                          <arg>
                                            Nolabel
                                            expression (src/LR1Pager.ml[318,12617+14]..src/LR1Pager.ml[318,12617+15])
                                              Texp_ident "c/1214"
                                          <arg>
                                            Nolabel
                                            expression (src/LR1Pager.ml[318,12617+20]..src/LR1Pager.ml[318,12617+37])
                                              Texp_apply
                                              expression (src/LR1Pager.ml[318,12617+20]..src/LR1Pager.ml[318,12617+31])
                                                Texp_ident "S/969.singleton"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/LR1Pager.ml[318,12617+32]..src/LR1Pager.ml[318,12617+37])
                                                    Texp_ident "state/1213"
                                              ]
                                        ]
                                      expression (src/LR1Pager.ml[319,12656+4]..src/LR1Pager.ml[319,12656+18])
                                        Texp_apply
                                        expression (src/LR1Pager.ml[319,12656+4]..src/LR1Pager.ml[319,12656+12])
                                          Texp_ident "schedule/1056"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/LR1Pager.ml[319,12656+13]..src/LR1Pager.ml[319,12656+18])
                                              Texp_ident "state/1213"
                                        ]
                            ]
                      ]
                ]
              structure_item (src/LR1Pager.ml[322,12680+0]..src/LR1Pager.ml[326,12806+6])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LR1Pager.ml[322,12680+4]..src/LR1Pager.ml[322,12680+6])
                      Tpat_construct "()"
                      []
                      None
                    expression (src/LR1Pager.ml[323,12689+2]..src/LR1Pager.ml[326,12806+6])
                      Texp_while
                      expression (src/LR1Pager.ml[323,12689+8]..src/LR1Pager.ml[323,12689+37])
                        Texp_apply
                        expression (src/LR1Pager.ml[323,12689+8]..src/LR1Pager.ml[323,12689+11])
                          Texp_ident "Stdlib!.not"
                        [
                          <arg>
                            Nolabel
                            expression (src/LR1Pager.ml[323,12689+12]..src/LR1Pager.ml[323,12689+37])
                              Texp_apply
                              expression (src/LR1Pager.ml[323,12689+13]..src/LR1Pager.ml[323,12689+27])
                                Texp_ident "Stdlib!.Stack.is_empty"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/LR1Pager.ml[323,12689+28]..src/LR1Pager.ml[323,12689+36])
                                    Texp_ident "frontier/1037"
                              ]
                        ]
                      expression (src/LR1Pager.ml[324,12730+4]..src/LR1Pager.ml[325,12768+37])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/LR1Pager.ml[324,12730+8]..src/LR1Pager.ml[324,12730+13])
                              Tpat_var "state/1215"
                            expression (src/LR1Pager.ml[324,12730+16]..src/LR1Pager.ml[324,12730+34])
                              Texp_apply
                              expression (src/LR1Pager.ml[324,12730+16]..src/LR1Pager.ml[324,12730+25])
                                Texp_ident "Stdlib!.Stack.pop"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/LR1Pager.ml[324,12730+26]..src/LR1Pager.ml[324,12730+34])
                                    Texp_ident "frontier/1037"
                              ]
                        ]
                        expression (src/LR1Pager.ml[325,12768+4]..src/LR1Pager.ml[325,12768+37])
                          Texp_apply
                          expression (src/LR1Pager.ml[325,12768+4]..src/LR1Pager.ml[325,12768+23])
                            Texp_ident "G/678.foreach_successor"
                          [
                            <arg>
                              Nolabel
                              expression (src/LR1Pager.ml[325,12768+24]..src/LR1Pager.ml[325,12768+29])
                                Texp_ident "state/1215"
                            <arg>
                              Nolabel
                              expression (src/LR1Pager.ml[325,12768+30]..src/LR1Pager.ml[325,12768+37])
                                Texp_ident "examine/1201"
                          ]
                ]
              structure_item (src/LR1Pager.ml[339,13181+0]..src/LR1Pager.ml[347,13456+20])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LR1Pager.ml[339,13181+4]..src/LR1Pager.ml[339,13181+12])
                      Tpat_var "redirect/1216"
                    expression (src/LR1Pager.ml[339,13181+13]..src/LR1Pager.ml[347,13456+20]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/LR1Pager.ml[339,13181+13]..src/LR1Pager.ml[339,13181+22])
                            Tpat_var "candidate/1218"
                          expression (src/LR1Pager.ml[340,13206+4]..src/LR1Pager.ml[347,13456+20])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/LR1Pager.ml[340,13206+8]..src/LR1Pager.ml[340,13206+9])
                                  Tpat_var "c/1219"
                                expression (src/LR1Pager.ml[340,13206+12]..src/LR1Pager.ml[340,13206+30])
                                  Texp_apply
                                  expression (src/LR1Pager.ml[340,13206+12]..src/LR1Pager.ml[340,13206+20])
                                    Texp_ident "Dune__exe!.Lr0.core"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/LR1Pager.ml[340,13206+21]..src/LR1Pager.ml[340,13206+30])
                                        Texp_ident "candidate/1218"
                                  ]
                            ]
                            expression (src/LR1Pager.ml[341,13240+4]..src/LR1Pager.ml[347,13456+20])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/LR1Pager.ml[341,13240+8]..src/LR1Pager.ml[341,13240+14])
                                    Tpat_var "family/1220"
                                  expression (src/LR1Pager.ml[341,13240+17]..src/LR1Pager.ml[341,13240+29])
                                    Texp_apply
                                    expression (src/LR1Pager.ml[341,13240+17]..src/LR1Pager.ml[341,13240+29]) ghost
                                      Texp_ident "Stdlib!.Array.get"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/LR1Pager.ml[341,13240+17]..src/LR1Pager.ml[341,13240+25])
                                          Texp_ident "families/970"
                                      <arg>
                                        Nolabel
                                        expression (src/LR1Pager.ml[341,13240+27]..src/LR1Pager.ml[341,13240+28])
                                          Texp_ident "c/1219"
                                    ]
                              ]
                              expression (src/LR1Pager.ml[342,13273+4]..src/LR1Pager.ml[347,13456+20])
                                Texp_match
                                expression (src/LR1Pager.ml[342,13273+10]..src/LR1Pager.ml[342,13273+45])
                                  Texp_apply
                                  expression (src/LR1Pager.ml[342,13273+10]..src/LR1Pager.ml[342,13273+18])
                                    Texp_ident "S/969.select"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/LR1Pager.ml[342,13273+19]..src/LR1Pager.ml[342,13273+38])
                                        Texp_apply
                                        expression (src/LR1Pager.ml[342,13273+20]..src/LR1Pager.ml[342,13273+27])
                                          Texp_ident "subsume/1059"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/LR1Pager.ml[342,13273+28]..src/LR1Pager.ml[342,13273+37])
                                              Texp_ident "candidate/1218"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/LR1Pager.ml[342,13273+39]..src/LR1Pager.ml[342,13273+45])
                                        Texp_ident "family/1220"
                                  ]
                                [
                                  <case>
                                    pattern (src/LR1Pager.ml[343,13324+6]..src/LR1Pager.ml[343,13324+20])
                                      Tpat_value
                                      pattern (src/LR1Pager.ml[343,13324+6]..src/LR1Pager.ml[343,13324+20])
                                        Tpat_construct "Some"
                                        [
                                          pattern (src/LR1Pager.ml[343,13324+11]..src/LR1Pager.ml[343,13324+20])
                                            Tpat_var "successor/1221"
                                        ]
                                        None
                                    expression (src/LR1Pager.ml[344,13348+8]..src/LR1Pager.ml[344,13348+17])
                                      Texp_ident "successor/1221"
                                  <case>
                                    pattern (src/LR1Pager.ml[345,13366+6]..src/LR1Pager.ml[345,13366+10])
                                      Tpat_value
                                      pattern (src/LR1Pager.ml[345,13366+6]..src/LR1Pager.ml[345,13366+10])
                                        Tpat_construct "None"
                                        []
                                        None
                                    expression (src/LR1Pager.ml[347,13456+8]..src/LR1Pager.ml[347,13456+20])
                                      Texp_assert                                      expression (src/LR1Pager.ml[347,13456+15]..src/LR1Pager.ml[347,13456+20])
                                        Texp_construct "false"
                                        []
                                ]
                      ]
                ]
              structure_item (src/LR1Pager.ml[353,13679+0]..src/LR1Pager.ml[363,13876+3])
                Tstr_module
                G'/1230
                  module_expr (src/LR1Pager.ml[353,13679+12]..src/LR1Pager.ml[363,13876+3])
                    module_expr (src/LR1Pager.ml[353,13679+12]..src/LR1Pager.ml[363,13876+3])
                      Tmod_structure
                      [
                        structure_item (src/LR1Pager.ml[355,13699+2]..src/LR1Pager.ml[355,13699+11])
                          Tstr_include                          module_expr (src/LR1Pager.ml[355,13699+10]..src/LR1Pager.ml[355,13699+11])
                            Tmod_ident "G/678"
                        structure_item (src/LR1Pager.ml[357,13712+2]..src/LR1Pager.ml[361,13869+5])
                          Tstr_value Nonrec
                          [
                            <def>
                              pattern (src/LR1Pager.ml[357,13712+6]..src/LR1Pager.ml[357,13712+23])
                                Tpat_var "foreach_successor/1225"
                              expression (src/LR1Pager.ml[357,13712+24]..src/LR1Pager.ml[361,13869+5]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/LR1Pager.ml[357,13712+25]..src/LR1Pager.ml[357,13712+30])
                                      extra
                                        Tpat_extra_constraint
                                        core_type (src/LR1Pager.ml[357,13712+33]..src/LR1Pager.ml[357,13712+41])
                                          Ttyp_constr "lr1state/436"
                                          []
                                      Tpat_alias "state/1226"
                                      pattern (src/LR1Pager.ml[357,13712+25]..src/LR1Pager.ml[357,13712+30])
                                        Tpat_any
                                    expression (src/LR1Pager.ml[357,13712+43]..src/LR1Pager.ml[361,13869+5]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (src/LR1Pager.ml[357,13712+43]..src/LR1Pager.ml[357,13712+44])
                                            Tpat_var "f/1227"
                                          expression (src/LR1Pager.ml[358,13759+4]..src/LR1Pager.ml[361,13869+5])
                                            Texp_apply
                                            expression (src/LR1Pager.ml[358,13759+4]..src/LR1Pager.ml[358,13759+23])
                                              Texp_ident "G/678.foreach_successor"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/LR1Pager.ml[358,13759+24]..src/LR1Pager.ml[358,13759+29])
                                                  Texp_ident "state/1226"
                                              <arg>
                                                Nolabel
                                                expression (src/LR1Pager.ml[358,13759+30]..src/LR1Pager.ml[361,13869+5])
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (src/LR1Pager.ml[358,13759+35]..src/LR1Pager.ml[358,13759+44])
                                                        Tpat_var "candidate/1228"
                                                      expression (src/LR1Pager.ml[359,13807+6]..src/LR1Pager.ml[360,13851+17])
                                                        Texp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (src/LR1Pager.ml[359,13807+10]..src/LR1Pager.ml[359,13807+19])
                                                              Tpat_var "successor/1229"
                                                            expression (src/LR1Pager.ml[359,13807+22]..src/LR1Pager.ml[359,13807+40])
                                                              Texp_apply
                                                              expression (src/LR1Pager.ml[359,13807+22]..src/LR1Pager.ml[359,13807+30])
                                                                Texp_ident "redirect/1216"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/LR1Pager.ml[359,13807+31]..src/LR1Pager.ml[359,13807+40])
                                                                    Texp_ident "candidate/1228"
                                                              ]
                                                        ]
                                                        expression (src/LR1Pager.ml[360,13851+6]..src/LR1Pager.ml[360,13851+17])
                                                          Texp_apply
                                                          expression (src/LR1Pager.ml[360,13851+6]..src/LR1Pager.ml[360,13851+7])
                                                            Texp_ident "f/1227"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/LR1Pager.ml[360,13851+8]..src/LR1Pager.ml[360,13851+17])
                                                                Texp_ident "successor/1229"
                                                          ]
                                                  ]
                                            ]
                                      ]
                                ]
                          ]
                      ]
              structure_item (src/LR1Pager.ml[371,14141+0]..src/LR1Pager.ml[372,14153+5])
                Tstr_type Rec
                [
                  type_declaration node/1231 (src/LR1Pager.ml[371,14141+0]..src/LR1Pager.ml[372,14153+5])
                    ptype_params =
                      []
                    ptype_cstrs =
                      []
                    ptype_kind =
                      Ttype_abstract
                    ptype_private = Public
                    ptype_manifest =
                      Some
                        core_type (src/LR1Pager.ml[372,14153+2]..src/LR1Pager.ml[372,14153+5])
                          Ttyp_constr "int/1!"
                          []
                ]
              structure_item (src/LR1Pager.ml[374,14160+0]..src/LR1Pager.ml[374,14160+72])
                Tstr_include                module_expr (src/LR1Pager.ml[374,14160+8]..src/LR1Pager.ml[374,14160+72])
                  Tmod_apply
                  module_expr (src/LR1Pager.ml[374,14160+8]..src/LR1Pager.ml[374,14160+68])
                    Tmod_apply
                    module_expr (src/LR1Pager.ml[374,14160+8]..src/LR1Pager.ml[374,14160+41])
                      module_expr (src/LR1Pager.ml[374,14160+8]..src/LR1Pager.ml[374,14160+41])
                        Tmod_ident "Dune__exe!.Fix.GraphNumbering.ForOrderedType"
                    module_expr (src/LR1Pager.ml[374,14160+42]..src/LR1Pager.ml[374,14160+67])
                      module_expr (src/LR1Pager.ml[374,14160+42]..src/LR1Pager.ml[374,14160+67])
                        Tmod_ident "Dune__exe!.Lr0.Lr1StateAsOrderedType"
                  module_expr (src/LR1Pager.ml[374,14160+69]..src/LR1Pager.ml[374,14160+71])
                    Tmod_ident "G'/1230"
              structure_item (src/LR1Pager.ml[383,14494+0]..src/LR1Pager.ml[384,14525+8])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LR1Pager.ml[383,14494+4]..src/LR1Pager.ml[383,14494+9])
                      extra
                        Tpat_extra_constraint
                        core_type (src/LR1Pager.ml[383,14494+12]..src/LR1Pager.ml[383,14494+28])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/LR1Pager.ml[383,14494+12]..src/LR1Pager.ml[383,14494+16])
                            Ttyp_constr "node/1231"
                            []
                          core_type (src/LR1Pager.ml[383,14494+20]..src/LR1Pager.ml[383,14494+28])
                            Ttyp_constr "lr1state/436"
                            []
                      Tpat_alias "state/1361"
                      pattern (src/LR1Pager.ml[383,14494+4]..src/LR1Pager.ml[383,14494+9])
                        Tpat_any
                    expression (src/LR1Pager.ml[384,14525+2]..src/LR1Pager.ml[384,14525+8])
                      extra
                        Texp_constraint
                        core_type (src/LR1Pager.ml[383,14494+12]..src/LR1Pager.ml[383,14494+28])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/LR1Pager.ml[383,14494+12]..src/LR1Pager.ml[383,14494+16])
                            Ttyp_constr "node/1231"
                            []
                          core_type (src/LR1Pager.ml[383,14494+20]..src/LR1Pager.ml[383,14494+28])
                            Ttyp_constr "lr1state/436"
                            []
                      Texp_ident "decode/1360"
                ]
              structure_item (src/LR1Pager.ml[390,14671+0]..src/LR1Pager.ml[393,14774+13])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LR1Pager.ml[390,14671+4]..src/LR1Pager.ml[390,14671+9])
                      extra
                        Tpat_extra_constraint
                        core_type (src/LR1Pager.ml[390,14671+12]..src/LR1Pager.ml[390,14671+32])
                          Ttyp_constr "Dune__exe!.Grammar.ProductionMap.t"
                          [
                            core_type (src/LR1Pager.ml[390,14671+12]..src/LR1Pager.ml[390,14671+16])
                              Ttyp_constr "node/1231"
                              []
                          ]
                      Tpat_alias "entry/1362"
                      pattern (src/LR1Pager.ml[390,14671+4]..src/LR1Pager.ml[390,14671+9])
                        Tpat_any
                    expression (src/LR1Pager.ml[391,14706+2]..src/LR1Pager.ml[393,14774+13])
                      extra
                        Texp_constraint
                        core_type (src/LR1Pager.ml[390,14671+12]..src/LR1Pager.ml[390,14671+32])
                          Ttyp_constr "Dune__exe!.Grammar.ProductionMap.t"
                          [
                            core_type (src/LR1Pager.ml[390,14671+12]..src/LR1Pager.ml[390,14671+16])
                              Ttyp_constr "node/1231"
                              []
                          ]
                      Texp_apply
                      expression (src/LR1Pager.ml[391,14706+2]..src/LR1Pager.ml[391,14706+19])
                        Texp_ident "Dune__exe!.Grammar.ProductionMap.map"
                      [
                        <arg>
                          Nolabel
                          expression (src/LR1Pager.ml[391,14706+20]..src/LR1Pager.ml[393,14774+3])
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/LR1Pager.ml[391,14706+26]..src/LR1Pager.ml[391,14706+27])
                                  extra
                                    Tpat_extra_constraint
                                    core_type (src/LR1Pager.ml[391,14706+30]..src/LR1Pager.ml[391,14706+38])
                                      Ttyp_constr "lr0state/397"
                                      []
                                  Tpat_alias "c/1363"
                                  pattern (src/LR1Pager.ml[391,14706+26]..src/LR1Pager.ml[391,14706+27])
                                    Tpat_any
                                expression (src/LR1Pager.ml[392,14749+4]..src/LR1Pager.ml[392,14749+24])
                                  Texp_apply
                                  expression (src/LR1Pager.ml[392,14749+4]..src/LR1Pager.ml[392,14749+10])
                                    Texp_ident "encode/1359"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/LR1Pager.ml[392,14749+11]..src/LR1Pager.ml[392,14749+24])
                                        Texp_apply
                                        expression (src/LR1Pager.ml[392,14749+12]..src/LR1Pager.ml[392,14749+21])
                                          Texp_ident "Dune__exe!.Lr0.start"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/LR1Pager.ml[392,14749+22]..src/LR1Pager.ml[392,14749+23])
                                              Texp_ident "c/1363"
                                        ]
                                  ]
                            ]
                        <arg>
                          Nolabel
                          expression (src/LR1Pager.ml[393,14774+4]..src/LR1Pager.ml[393,14774+13])
                            Texp_ident "Dune__exe!.Lr0.entry"
                      ]
                ]
              structure_item (src/LR1Pager.ml[399,14925+0]..src/LR1Pager.ml[400,14967+53])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LR1Pager.ml[399,14925+4]..src/LR1Pager.ml[399,14925+14])
                      Tpat_var "transition/1364"
                    expression (src/LR1Pager.ml[399,14925+15]..src/LR1Pager.ml[400,14967+53]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/LR1Pager.ml[399,14925+15]..src/LR1Pager.ml[399,14925+21])
                            Tpat_var "symbol/1366"
                          expression (src/LR1Pager.ml[399,14925+22]..src/LR1Pager.ml[400,14967+53]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/LR1Pager.ml[399,14925+23]..src/LR1Pager.ml[399,14925+24])
                                  extra
                                    Tpat_extra_constraint
                                    core_type (src/LR1Pager.ml[399,14925+27]..src/LR1Pager.ml[399,14925+31])
                                      Ttyp_constr "node/1231"
                                      []
                                  Tpat_alias "i/1367"
                                  pattern (src/LR1Pager.ml[399,14925+23]..src/LR1Pager.ml[399,14925+24])
                                    Tpat_any
                                expression (src/LR1Pager.ml[400,14967+2]..src/LR1Pager.ml[400,14967+53])
                                  extra
                                    Texp_constraint
                                    core_type (src/LR1Pager.ml[399,14925+35]..src/LR1Pager.ml[399,14925+39])
                                      Ttyp_constr "node/1231"
                                      []
                                  Texp_apply
                                  expression (src/LR1Pager.ml[400,14967+2]..src/LR1Pager.ml[400,14967+8])
                                    Texp_ident "encode/1359"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/LR1Pager.ml[400,14967+9]..src/LR1Pager.ml[400,14967+53])
                                        Texp_apply
                                        expression (src/LR1Pager.ml[400,14967+10]..src/LR1Pager.ml[400,14967+18])
                                          Texp_ident "redirect/1216"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/LR1Pager.ml[400,14967+19]..src/LR1Pager.ml[400,14967+52])
                                              Texp_apply
                                              expression (src/LR1Pager.ml[400,14967+20]..src/LR1Pager.ml[400,14967+34])
                                                Texp_ident "Dune__exe!.Lr0.transition"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/LR1Pager.ml[400,14967+35]..src/LR1Pager.ml[400,14967+41])
                                                    Texp_ident "symbol/1366"
                                                <arg>
                                                  Nolabel
                                                  expression (src/LR1Pager.ml[400,14967+42]..src/LR1Pager.ml[400,14967+51])
                                                    Texp_apply
                                                    expression (src/LR1Pager.ml[400,14967+43]..src/LR1Pager.ml[400,14967+48])
                                                      Texp_ident "state/1361"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/LR1Pager.ml[400,14967+49]..src/LR1Pager.ml[400,14967+50])
                                                          Texp_ident "i/1367"
                                                    ]
                                              ]
                                        ]
                                  ]
                            ]
                      ]
                ]
              structure_item (src/LR1Pager.ml[403,15059+0]..src/LR1Pager.ml[404,15093+43])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LR1Pager.ml[403,15059+4]..src/LR1Pager.ml[403,15059+20])
                      Tpat_var "outgoing_symbols/1368"
                    expression (src/LR1Pager.ml[403,15059+21]..src/LR1Pager.ml[404,15093+43]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/LR1Pager.ml[403,15059+22]..src/LR1Pager.ml[403,15059+23])
                            extra
                              Tpat_extra_constraint
                              core_type (src/LR1Pager.ml[403,15059+26]..src/LR1Pager.ml[403,15059+30])
                                Ttyp_constr "node/1231"
                                []
                            Tpat_alias "i/1370"
                            pattern (src/LR1Pager.ml[403,15059+22]..src/LR1Pager.ml[403,15059+23])
                              Tpat_any
                          expression (src/LR1Pager.ml[404,15093+2]..src/LR1Pager.ml[404,15093+43])
                            Texp_apply
                            expression (src/LR1Pager.ml[404,15093+2]..src/LR1Pager.ml[404,15093+22])
                              Texp_ident "Dune__exe!.Lr0.outgoing_symbols"
                            [
                              <arg>
                                Nolabel
                                expression (src/LR1Pager.ml[404,15093+23]..src/LR1Pager.ml[404,15093+43])
                                  Texp_apply
                                  expression (src/LR1Pager.ml[404,15093+24]..src/LR1Pager.ml[404,15093+32])
                                    Texp_ident "Dune__exe!.Lr0.core"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/LR1Pager.ml[404,15093+33]..src/LR1Pager.ml[404,15093+42])
                                        Texp_apply
                                        expression (src/LR1Pager.ml[404,15093+34]..src/LR1Pager.ml[404,15093+39])
                                          Texp_ident "state/1361"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/LR1Pager.ml[404,15093+40]..src/LR1Pager.ml[404,15093+41])
                                              Texp_ident "i/1370"
                                        ]
                                  ]
                            ]
                      ]
                ]
              structure_item (src/LR1Pager.ml[406,15138+0]..src/LR1Pager.ml[409,15242+24])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LR1Pager.ml[406,15138+4]..src/LR1Pager.ml[406,15138+15])
                      Tpat_var "transitions/1371"
                    expression (src/LR1Pager.ml[406,15138+16]..src/LR1Pager.ml[409,15242+24]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/LR1Pager.ml[406,15138+17]..src/LR1Pager.ml[406,15138+18])
                            extra
                              Tpat_extra_constraint
                              core_type (src/LR1Pager.ml[406,15138+21]..src/LR1Pager.ml[406,15138+25])
                                Ttyp_constr "node/1231"
                                []
                            Tpat_alias "i/1373"
                            pattern (src/LR1Pager.ml[406,15138+17]..src/LR1Pager.ml[406,15138+18])
                              Tpat_any
                          expression (src/LR1Pager.ml[407,15186+2]..src/LR1Pager.ml[409,15242+24])
                            extra
                              Texp_constraint
                              core_type (src/LR1Pager.ml[406,15138+29]..src/LR1Pager.ml[406,15138+45])
                                Ttyp_constr "Dune__exe!.Grammar.SymbolMap.t"
                                [
                                  core_type (src/LR1Pager.ml[406,15138+29]..src/LR1Pager.ml[406,15138+33])
                                    Ttyp_constr "node/1231"
                                    []
                                ]
                            Texp_apply
                            expression (src/LR1Pager.ml[407,15186+2]..src/LR1Pager.ml[407,15186+16])
                              Texp_ident "Dune__exe!.Grammar.SymbolMap.init"
                            [
                              <arg>
                                Nolabel
                                expression (src/LR1Pager.ml[407,15186+17]..src/LR1Pager.ml[409,15242+3])
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/LR1Pager.ml[407,15186+22]..src/LR1Pager.ml[407,15186+28])
                                        Tpat_var "symbol/1470"
                                      expression (src/LR1Pager.ml[408,15218+4]..src/LR1Pager.ml[408,15218+23])
                                        Texp_apply
                                        expression (src/LR1Pager.ml[408,15218+4]..src/LR1Pager.ml[408,15218+14])
                                          Texp_ident "transition/1364"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/LR1Pager.ml[408,15218+15]..src/LR1Pager.ml[408,15218+21])
                                              Texp_ident "symbol/1470"
                                          <arg>
                                            Nolabel
                                            expression (src/LR1Pager.ml[408,15218+22]..src/LR1Pager.ml[408,15218+23])
                                              Texp_ident "i/1373"
                                        ]
                                  ]
                              <arg>
                                Nolabel
                                expression (src/LR1Pager.ml[409,15242+4]..src/LR1Pager.ml[409,15242+24])
                                  Texp_apply
                                  expression (src/LR1Pager.ml[409,15242+5]..src/LR1Pager.ml[409,15242+21])
                                    Texp_ident "outgoing_symbols/1368"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/LR1Pager.ml[409,15242+22]..src/LR1Pager.ml[409,15242+23])
                                        Texp_ident "i/1373"
                                  ]
                            ]
                      ]
                ]
              structure_item (src/LR1Pager.ml[415,15405+0]..src/LR1Pager.ml[416,15435+3])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LR1Pager.ml[415,15405+4]..src/LR1Pager.ml[415,15405+10])
                      Tpat_var "number/1471"
                    expression (src/LR1Pager.ml[415,15405+11]..src/LR1Pager.ml[416,15435+3]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/LR1Pager.ml[415,15405+12]..src/LR1Pager.ml[415,15405+13])
                            extra
                              Tpat_extra_constraint
                              core_type (src/LR1Pager.ml[415,15405+16]..src/LR1Pager.ml[415,15405+20])
                                Ttyp_constr "node/1231"
                                []
                            Tpat_alias "i/1473"
                            pattern (src/LR1Pager.ml[415,15405+12]..src/LR1Pager.ml[415,15405+13])
                              Tpat_any
                          expression (src/LR1Pager.ml[416,15435+2]..src/LR1Pager.ml[416,15435+3])
                            extra
                              Texp_constraint
                              core_type (src/LR1Pager.ml[415,15405+24]..src/LR1Pager.ml[415,15405+27])
                                Ttyp_constr "int/1!"
                                []
                            Texp_ident "i/1473"
                      ]
                ]
              structure_item (src/LR1Pager.ml[418,15440+0]..src/LR1Pager.ml[419,15468+3])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LR1Pager.ml[418,15440+4]..src/LR1Pager.ml[418,15440+8])
                      Tpat_var "node/1474"
                    expression (src/LR1Pager.ml[418,15440+9]..src/LR1Pager.ml[419,15468+3]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/LR1Pager.ml[418,15440+10]..src/LR1Pager.ml[418,15440+11])
                            extra
                              Tpat_extra_constraint
                              core_type (src/LR1Pager.ml[418,15440+14]..src/LR1Pager.ml[418,15440+17])
                                Ttyp_constr "int/1!"
                                []
                            Tpat_alias "i/1476"
                            pattern (src/LR1Pager.ml[418,15440+10]..src/LR1Pager.ml[418,15440+11])
                              Tpat_any
                          expression (src/LR1Pager.ml[419,15468+2]..src/LR1Pager.ml[419,15468+3])
                            extra
                              Texp_constraint
                              core_type (src/LR1Pager.ml[418,15440+21]..src/LR1Pager.ml[418,15440+25])
                                Ttyp_constr "node/1231"
                                []
                            Texp_ident "i/1476"
                      ]
                ]
            ]
]

{<Dune__exe__LR1Pager>
 "Run"[module] ->
   Abs<Dune__exe__LR1Pager.86>
      (()/1,
       {
        "entry"[value] -> <Dune__exe__LR1Pager.72>;
        "n"[value] ->
          CU Dune__exe . "Fix"[module] . "GraphNumbering"[module] .
          "ForOrderedType"[module](
          CU Dune__exe . "Lr0"[module] . "Lr1StateAsOrderedType"[module])(
          {<Dune__exe__LR1Pager.69>
           "foreach_root"[value] -> <Dune__exe__LR1Pager.3>;
           "foreach_successor"[value] -> <Dune__exe__LR1Pager.64>;
           "t"[type] -> <Dune__exe__LR1Pager.2>;
           })
          . "n"[value];
        "node"[value] -> <Dune__exe__LR1Pager.84>;
        "node"[type] -> <Dune__exe__LR1Pager.70>;
        "number"[value] -> <Dune__exe__LR1Pager.82>;
        "state"[value] -> <Dune__exe__LR1Pager.71>;
        "transitions"[value] -> <Dune__exe__LR1Pager.79>;
        });
 }

(let
  (Run/1599 =
     (function */3835 is_a_functor
       (let
         (*/3810 =a */3835
          G/678 =
            (let
              (foreach_root/493 =
                 (function f/495 : int
                   (apply
                     (field_imm 18
                       (field_imm 9 (global Dune__exe__Grammar!)))
                     (function _prod/547 c/548[int] : int
                       (apply f/495
                         (apply (field_imm 12 (global Dune__exe__Lr0!))
                           c/548)))
                     (field_imm 1 (global Dune__exe__Lr0!))))
               foreach_successor/583 =
                 (function state/585 f/586 : int
                   (let
                     (symbols/587 =
                        (apply (field_imm 6 (global Dune__exe__Lr0!))
                          (apply (field_imm 11 (global Dune__exe__Lr0!))
                            state/585)))
                     (apply (field_imm 17 (global Stdlib__List!))
                       (function symbol/654 : int
                         (let
                           (successor/655 =
                              (apply (field_imm 14 (global Dune__exe__Lr0!))
                                symbol/654 state/585))
                           (apply f/586 successor/655)))
                       symbols/587))))
              (makeblock 0 foreach_root/493 foreach_successor/583))
          S/969 =
            (let
              (include/3811 =
                 (apply
                   (let (let/3815 = (field_imm 0 (global Stdlib__Set!)))
                     (field_imm 0 (global Stdlib__Set!)))
                   (let (let/3814 = (field_imm 8 (global Dune__exe__Lr0!)))
                     (field_imm 8 (global Dune__exe__Lr0!))))
               empty/784 =a (field_mut 0 include/3811)
               add/785 =a (field_mut 1 include/3811)
               singleton/786 =a (field_mut 2 include/3811)
               remove/787 =a (field_mut 3 include/3811)
               union/788 =a (field_mut 4 include/3811)
               inter/789 =a (field_mut 5 include/3811)
               disjoint/790 =a (field_mut 6 include/3811)
               diff/791 =a (field_mut 7 include/3811)
               cardinal/792 =a (field_mut 8 include/3811)
               elements/793 =a (field_mut 9 include/3811)
               min_elt/794 =a (field_mut 10 include/3811)
               min_elt_opt/795 =a (field_mut 11 include/3811)
               max_elt/796 =a (field_mut 12 include/3811)
               max_elt_opt/797 =a (field_mut 13 include/3811)
               choose/798 =a (field_mut 14 include/3811)
               choose_opt/799 =a (field_mut 15 include/3811)
               find/800 =a (field_mut 16 include/3811)
               find_opt/801 =a (field_mut 17 include/3811)
               find_first/802 =a (field_mut 18 include/3811)
               find_first_opt/803 =a (field_mut 19 include/3811)
               find_last/804 =a (field_mut 20 include/3811)
               find_last_opt/805 =a (field_mut 21 include/3811)
               iter/806 =a (field_mut 22 include/3811)
               fold/807 =a (field_mut 23 include/3811)
               map/808 =a (field_mut 24 include/3811)
               filter/809 =a (field_mut 25 include/3811)
               filter_map/810 =a (field_mut 26 include/3811)
               partition/811 =a (field_mut 27 include/3811)
               split/812 =a (field_mut 28 include/3811)
               is_empty/813 =a (field_mut 29 include/3811)
               mem/814 =a (field_mut 30 include/3811)
               equal/815 =a (field_mut 31 include/3811)
               compare/816 =a (field_mut 32 include/3811)
               subset/817 =a (field_mut 33 include/3811)
               for_all/818 =a (field_mut 34 include/3811)
               exists/819 =a (field_mut 35 include/3811)
               to_list/820 =a (field_mut 36 include/3811)
               of_list/821 =a (field_mut 37 include/3811)
               to_seq_from/822 =a (field_mut 38 include/3811)
               to_seq/823 =a (field_mut 39 include/3811)
               to_rev_seq/824 =a (field_mut 40 include/3811)
               add_seq/825 =a (field_mut 41 include/3811)
               of_seq/826 =a (field_mut 42 include/3811)
               Found/827 = (makeblock 248 "Found" (caml_fresh_oo_id 0))
               select/828 =
                 (function p/830 s/831
                   (try
                     (seq
                       (apply iter/806
                         (function x/832 : int
                           (if (apply p/830 x/832)
                             (raise (makeblock 0 Found/827 x/832)) 0))
                         s/831)
                       0)
                    with exn/3812
                     (catch
                       (let (tag/3813 =a (field_imm 0 exn/3812))
                         (if (== tag/3813 Found/827)
                           (let (x/968 =a (field_imm 1 exn/3812))
                             (makeblock 0 x/968))
                           (exit 1)))
                      with (1) (reraise exn/3812)))))
              (makeblock 0 empty/784 add/785 singleton/786 remove/787
                union/788 inter/789 disjoint/790 diff/791 cardinal/792
                elements/793 min_elt/794 min_elt_opt/795 max_elt/796
                max_elt_opt/797 choose/798 choose_opt/799 find/800
                find_opt/801 find_first/802 find_first_opt/803 find_last/804
                find_last_opt/805 iter/806 fold/807 map/808 filter/809
                filter_map/810 partition/811 split/812 is_empty/813 mem/814
                equal/815 compare/816 subset/817 for_all/818 exists/819
                to_list/820 of_list/821 to_seq_from/822 to_seq/823
                to_rev_seq/824 add_seq/825 of_seq/826 Found/827 select/828))
          families/970 =
            (caml_make_vect (field_imm 0 (global Dune__exe__Lr0!))
              (field_imm 0 S/969))
          frontier/1037 = (apply (field_imm 1 (global Stdlib__Stack!)) 0)
          schedule/1056 =
            (function state/1058 : int
              (apply (field_imm 2 (global Stdlib__Stack!)) state/1058
                frontier/1037))
          subsume/1059 =
            (function candidate/1061 state/1062 : int
              (&&
                (apply (field_imm 18 (global Dune__exe__Lr0!)) candidate/1061
                  state/1062)
                (apply (field_imm 21 (global Dune__exe__Lr0!)) candidate/1061
                  state/1062)))
          compatible/1063 =
            (function candidate/1065 state/1066 : int
              (&&
                (apply (field_imm 19 (global Dune__exe__Lr0!)) candidate/1065
                  state/1066)
                (&&
                  (apply (field_imm 20 (global Dune__exe__Lr0!))
                    candidate/1065 state/1066)
                  (apply (field_imm 21 (global Dune__exe__Lr0!))
                    candidate/1065 state/1066))))
          compatible/1067 =
            (function candidate/1068 state/1069 : int
              (let
                (*match*/3816 = (field_imm 2 (global Dune__exe__Settings!)))
                (catch
                  (if (!= *match*/3816 0)
                    (let (switcher/3817 =a (-1+ *match*/3816))
                      (switch* switcher/3817
                       case int 0:
                        (|| (apply subsume/1059 candidate/1068 state/1069)
                          (apply subsume/1059 state/1069 candidate/1068))
                       case int 1:
                        (apply compatible/1063 candidate/1068 state/1069)
                       case int 2: (exit 2)))
                    (exit 2))
                 with (2)
                  (raise
                    (makeblock 0 (global Assert_failure/28!)
                      [0: "src/LR1Pager.ml" 194 8])))))
          debug/1190 =[int] 0)
         (letrec
           (no_two/1191
              (function related/1192 xs/1193 : int
                (if (isint xs/1193) 1
                  (let
                    (xs/1195 =a (field_imm 1 xs/1193)
                     x/1194 =a (field_imm 0 xs/1193))
                    (&&
                      (apply (field_imm 32 (global Stdlib__List!))
                        (function x'/1196 : int
                          (not (apply related/1192 x/1194 x'/1196)))
                        xs/1195)
                      (apply no_two/1191 related/1192 xs/1195))))))
           (let
             (well_formed/1197 =
                (function family/1199 : int
                  (let
                    (members/1200 = (apply (field_imm 9 S/969) family/1199))
                    (apply no_two/1191 compatible/1067 members/1200))))
             (letrec
               (examine/1201
                  (function candidate/1203 : int
                    (let
                      (c/1204 =
                         (apply (field_imm 11 (global Dune__exe__Lr0!))
                           candidate/1203)
                       family/1205 = (array.get[gen] families/970 c/1204))
                      (seq
                        (if debug/1190
                          (if (apply well_formed/1197 family/1205) 0
                            (raise
                              (makeblock 0 (global Assert_failure/28!)
                                [0: "src/LR1Pager.ml" 237 16])))
                          0)
                        (if
                          (apply (field_imm 35 S/969)
                            (apply subsume/1059 candidate/1203) family/1205)
                          0
                          (apply fuse/1202 c/1204 family/1205 candidate/1203)))))
                 fuse/1202
                   (function c/1206[int] family/1207 candidate/1208 : int
                     (let
                       (*match*/3821 =
                          (apply (field_imm 44 S/969)
                            (apply compatible/1067 candidate/1208)
                            family/1207))
                       (if (isint *match*/3821)
                         (let
                           (family/1212 =
                              (apply (field_imm 1 S/969) candidate/1208
                                family/1207))
                           (seq
                             (if debug/1190
                               (if (apply well_formed/1197 family/1212) 0
                                 (raise
                                   (makeblock 0 (global Assert_failure/28!)
                                     [0: "src/LR1Pager.ml" 305 20])))
                               0)
                             (array.set[gen] families/970 c/1206 family/1212)
                             (apply schedule/1056 candidate/1208)))
                         (let (state/1209 =a (field_imm 0 *match*/3821))
                           (seq
                             (if debug/1190
                               (if
                                 (not
                                   (apply subsume/1059 candidate/1208
                                     state/1209))
                                 0
                                 (raise
                                   (makeblock 0 (global Assert_failure/28!)
                                     [0: "src/LR1Pager.ml" 270 20])))
                               0)
                             (if debug/1190
                               (if
                                 (apply compatible/1067 candidate/1208
                                   state/1209)
                                 0
                                 (raise
                                   (makeblock 0 (global Assert_failure/28!)
                                     [0: "src/LR1Pager.ml" 271 20])))
                               0)
                             (let
                               (candidate/1210 =
                                  (apply
                                    (field_imm 22 (global Dune__exe__Lr0!))
                                    candidate/1208 state/1209)
                                family/1211 =
                                  (apply (field_imm 3 S/969) state/1209
                                    family/1207))
                               (seq
                                 (if debug/1190
                                   (if (apply well_formed/1197 family/1211) 0
                                     (raise
                                       (makeblock 0
                                         (global Assert_failure/28!)
                                         [0: "src/LR1Pager.ml" 290 20])))
                                   0)
                                 (apply fuse/1202 c/1206 family/1211
                                   candidate/1210)))))))))
               (let
                 (*match*/3832 =
                    (apply (field_imm 0 G/678)
                      (function state/1213 : int
                        (let
                          (c/1214 =[int]
                             (apply (field_imm 11 (global Dune__exe__Lr0!))
                               state/1213))
                          (seq
                            (if debug/1190
                              (if
                                (apply (field_imm 29 S/969)
                                  (array.get[gen] families/970 c/1214))
                                0
                                (raise
                                  (makeblock 0 (global Assert_failure/28!)
                                    [0: "src/LR1Pager.ml" 317 18])))
                              0)
                            (array.set[gen] families/970 c/1214
                              (apply (field_imm 2 S/969) state/1213))
                            (apply schedule/1056 state/1213)))))
                  *match*/3830 =
                    (while
                      (not
                        (apply (field_imm 10 (global Stdlib__Stack!))
                          frontier/1037))
                      (let
                        (state/1215 =
                           (apply (field_imm 3 (global Stdlib__Stack!))
                             frontier/1037))
                        (apply (field_imm 1 G/678) state/1215 examine/1201)))
                  redirect/1216 =
                    (function candidate/1218
                      (let
                        (c/1219 =[int]
                           (apply (field_imm 11 (global Dune__exe__Lr0!))
                             candidate/1218)
                         family/1220 = (array.get[gen] families/970 c/1219)
                         *match*/3822 =
                           (apply (field_imm 44 S/969)
                             (apply subsume/1059 candidate/1218) family/1220))
                        (if (isint *match*/3822)
                          (raise
                            (makeblock 0 (global Assert_failure/28!)
                              [0: "src/LR1Pager.ml" 347 8]))
                          (let (successor/1221 =a (field_imm 0 *match*/3822))
                            successor/1221))))
                  G'/1230 =
                    (let
                      (include/3823 =a G/678
                       foreach_root/1223 =a (field_mut 0 include/3823)
                       foreach_successor/1224 =a (field_mut 1 include/3823)
                       foreach_successor/1225 =
                         (function state/1226 f/1227 : int
                           (apply (field_imm 1 G/678) state/1226
                             (function candidate/1228 : int
                               (let
                                 (successor/1229 =
                                    (apply redirect/1216 candidate/1228))
                                 (apply f/1227 successor/1229))))))
                      (makeblock 0 foreach_root/1223 foreach_successor/1225))
                  include/3824 =
                    (apply
                      (apply
                        (let
                          (let/3828 =
                             (field_imm 1
                               (global Vendored_fix__GraphNumbering!)))
                          (field_imm 1
                            (global Vendored_fix__GraphNumbering!)))
                        (let
                          (let/3827 = (field_imm 8 (global Dune__exe__Lr0!)))
                          (field_imm 8 (global Dune__exe__Lr0!))))
                      G'/1230)
                  n/1358 =a (field_mut 0 include/3824)
                  encode/1359 =a (field_mut 1 include/3824)
                  decode/1360 =a (field_mut 2 include/3824)
                  state/1361 =a decode/1360
                  entry/1362 =
                    (apply
                      (field_imm 23
                        (field_imm 9 (global Dune__exe__Grammar!)))
                      (function c/1363[int] : int
                        (apply encode/1359
                          (apply (field_imm 12 (global Dune__exe__Lr0!))
                            c/1363)))
                      (field_imm 1 (global Dune__exe__Lr0!)))
                  transition/1364 =
                    (function symbol/1366 i/1367[int] : int
                      (apply encode/1359
                        (apply redirect/1216
                          (apply (field_imm 14 (global Dune__exe__Lr0!))
                            symbol/1366 (apply state/1361 i/1367)))))
                  outgoing_symbols/1368 =
                    (function i/1370[int]
                      (apply (field_imm 6 (global Dune__exe__Lr0!))
                        (apply (field_imm 11 (global Dune__exe__Lr0!))
                          (apply state/1361 i/1370))))
                  transitions/1371 =
                    (function i/1373[int]
                      (apply
                        (field_imm 44
                          (field_imm 7 (global Dune__exe__Grammar!)))
                        (function symbol/1470 : int
                          (apply transition/1364 symbol/1470 i/1373))
                        (apply outgoing_symbols/1368 i/1373)))
                  number/1471 = (function i/1473[int] : int i/1473)
                  node/1474 = (function i/1476[int] : int i/1476))
                 (makeblock 0 G/678 S/969 families/970 frontier/1037
                   schedule/1056 subsume/1059 compatible/1067 debug/1190
                   no_two/1191 well_formed/1197 examine/1201 fuse/1202
                   redirect/1216 G'/1230 n/1358 encode/1359 decode/1360
                   state/1361 entry/1362 transition/1364
                   outgoing_symbols/1368 transitions/1371 number/1471
                   node/1474))))))))
  (seq
    (setfield_ptr(root-init) 0 (global Dune__exe__LR1Pager!)
      (function funarg/3836 is_a_functor stub
        (let (let/3837 = (apply Run/1599 funarg/3836))
          (makeblock 0 (field_mut 14 let/3837) (field_mut 22 let/3837)
            (field_mut 23 let/3837) (field_mut 18 let/3837)
            (field_mut 21 let/3837) (field_mut 17 let/3837)))))
    0))
(let
  (Run/1599 =
     (function */3835 is_a_functor
       (let
         (G/678 =
            (let
              (foreach_root/493 =
                 (function f/495 : int
                   (apply
                     (field_imm 18
                       (field_imm 9 (global Dune__exe__Grammar!)))
                     (function _prod/547 c/548[int] : int
                       (apply f/495
                         (apply (field_imm 12 (global Dune__exe__Lr0!))
                           c/548)))
                     (field_imm 1 (global Dune__exe__Lr0!))))
               foreach_successor/583 =
                 (function state/585 f/586 : int
                   (let
                     (symbols/587 =
                        (apply (field_imm 6 (global Dune__exe__Lr0!))
                          (apply (field_imm 11 (global Dune__exe__Lr0!))
                            state/585)))
                     (apply (field_imm 17 (global Stdlib__List!))
                       (function symbol/654 : int
                         (let
                           (successor/655 =
                              (apply (field_imm 14 (global Dune__exe__Lr0!))
                                symbol/654 state/585))
                           (apply f/586 successor/655)))
                       symbols/587))))
              (makeblock 0 foreach_root/493 foreach_successor/583))
          S/969 =
            (let
              (include/3811 =
                 (apply
                   (let (let/3815 = (field_imm 0 (global Stdlib__Set!)))
                     (field_imm 0 (global Stdlib__Set!)))
                   (let (let/3814 = (field_imm 8 (global Dune__exe__Lr0!)))
                     (field_imm 8 (global Dune__exe__Lr0!))))
               iter/806 =a (field_mut 22 include/3811)
               Found/827 = (makeblock 248 "Found" (caml_fresh_oo_id 0))
               select/828 =
                 (function p/830 s/831
                   (try
                     (seq
                       (apply iter/806
                         (function x/832 : int
                           (if (apply p/830 x/832)
                             (raise (makeblock 0 Found/827 x/832)) 0))
                         s/831)
                       0)
                    with exn/3812
                     (if (== (field_imm 0 exn/3812) Found/827)
                       (makeblock 0 (field_imm 1 exn/3812))
                       (reraise exn/3812)))))
              (makeblock 0 (field_mut 0 include/3811)
                (field_mut 1 include/3811) (field_mut 2 include/3811)
                (field_mut 3 include/3811) (field_mut 4 include/3811)
                (field_mut 5 include/3811) (field_mut 6 include/3811)
                (field_mut 7 include/3811) (field_mut 8 include/3811)
                (field_mut 9 include/3811) (field_mut 10 include/3811)
                (field_mut 11 include/3811) (field_mut 12 include/3811)
                (field_mut 13 include/3811) (field_mut 14 include/3811)
                (field_mut 15 include/3811) (field_mut 16 include/3811)
                (field_mut 17 include/3811) (field_mut 18 include/3811)
                (field_mut 19 include/3811) (field_mut 20 include/3811)
                (field_mut 21 include/3811) iter/806
                (field_mut 23 include/3811) (field_mut 24 include/3811)
                (field_mut 25 include/3811) (field_mut 26 include/3811)
                (field_mut 27 include/3811) (field_mut 28 include/3811)
                (field_mut 29 include/3811) (field_mut 30 include/3811)
                (field_mut 31 include/3811) (field_mut 32 include/3811)
                (field_mut 33 include/3811) (field_mut 34 include/3811)
                (field_mut 35 include/3811) (field_mut 36 include/3811)
                (field_mut 37 include/3811) (field_mut 38 include/3811)
                (field_mut 39 include/3811) (field_mut 40 include/3811)
                (field_mut 41 include/3811) (field_mut 42 include/3811)
                Found/827 select/828))
          families/970 =
            (caml_make_vect (field_imm 0 (global Dune__exe__Lr0!))
              (field_imm 0 S/969))
          frontier/1037 = (apply (field_imm 1 (global Stdlib__Stack!)) 0)
          schedule/1056 =
            (function state/1058 : int
              (apply (field_imm 2 (global Stdlib__Stack!)) state/1058
                frontier/1037))
          subsume/1059 =
            (function candidate/1061 state/1062 : int
              (&&
                (apply (field_imm 18 (global Dune__exe__Lr0!)) candidate/1061
                  state/1062)
                (apply (field_imm 21 (global Dune__exe__Lr0!)) candidate/1061
                  state/1062)))
          compatible/1063 =
            (function candidate/1065 state/1066 : int
              (&&
                (apply (field_imm 19 (global Dune__exe__Lr0!)) candidate/1065
                  state/1066)
                (&&
                  (apply (field_imm 20 (global Dune__exe__Lr0!))
                    candidate/1065 state/1066)
                  (apply (field_imm 21 (global Dune__exe__Lr0!))
                    candidate/1065 state/1066))))
          compatible/1067 =
            (function candidate/1068 state/1069 : int
              (let
                (*match*/3816 = (field_imm 2 (global Dune__exe__Settings!)))
                (catch
                  (if (!= *match*/3816 0)
                    (switch* (-1+ *match*/3816)
                     case int 0:
                      (|| (apply subsume/1059 candidate/1068 state/1069)
                        (apply subsume/1059 state/1069 candidate/1068))
                     case int 1:
                      (apply compatible/1063 candidate/1068 state/1069)
                     case int 2: (exit 2))
                    (exit 2))
                 with (2)
                  (raise
                    (makeblock 0 (global Assert_failure/28!)
                      [0: "src/LR1Pager.ml" 194 8])))))
          debug/1190 =[int] 0)
         (letrec
           (no_two/1191
              (function related/1192 xs/1193 : int
                (if (isint xs/1193) 1
                  (let
                    (xs/1195 =a (field_imm 1 xs/1193)
                     x/1194 =a (field_imm 0 xs/1193))
                    (&&
                      (apply (field_imm 32 (global Stdlib__List!))
                        (function x'/1196 : int
                          (not (apply related/1192 x/1194 x'/1196)))
                        xs/1195)
                      (apply no_two/1191 related/1192 xs/1195))))))
           (let
             (well_formed/1197 =
                (function family/1199 : int
                  (let
                    (members/1200 = (apply (field_imm 9 S/969) family/1199))
                    (apply no_two/1191 compatible/1067 members/1200))))
             (letrec
               (examine/1201
                  (function candidate/1203 : int
                    (let
                      (c/1204 =
                         (apply (field_imm 11 (global Dune__exe__Lr0!))
                           candidate/1203)
                       family/1205 = (array.get[gen] families/970 c/1204))
                      (seq
                        (if debug/1190
                          (if (apply well_formed/1197 family/1205) 0
                            (raise
                              (makeblock 0 (global Assert_failure/28!)
                                [0: "src/LR1Pager.ml" 237 16])))
                          0)
                        (if
                          (apply (field_imm 35 S/969)
                            (apply subsume/1059 candidate/1203) family/1205)
                          0
                          (apply fuse/1202 c/1204 family/1205 candidate/1203)))))
                 fuse/1202
                   (function c/1206[int] family/1207 candidate/1208 : int
                     (let
                       (*match*/3821 =
                          (apply (field_imm 44 S/969)
                            (apply compatible/1067 candidate/1208)
                            family/1207))
                       (if (isint *match*/3821)
                         (let
                           (family/1212 =
                              (apply (field_imm 1 S/969) candidate/1208
                                family/1207))
                           (seq
                             (if debug/1190
                               (if (apply well_formed/1197 family/1212) 0
                                 (raise
                                   (makeblock 0 (global Assert_failure/28!)
                                     [0: "src/LR1Pager.ml" 305 20])))
                               0)
                             (array.set[gen] families/970 c/1206 family/1212)
                             (apply schedule/1056 candidate/1208)))
                         (let (state/1209 =a (field_imm 0 *match*/3821))
                           (seq
                             (if debug/1190
                               (if
                                 (not
                                   (apply subsume/1059 candidate/1208
                                     state/1209))
                                 0
                                 (raise
                                   (makeblock 0 (global Assert_failure/28!)
                                     [0: "src/LR1Pager.ml" 270 20])))
                               0)
                             (if debug/1190
                               (if
                                 (apply compatible/1067 candidate/1208
                                   state/1209)
                                 0
                                 (raise
                                   (makeblock 0 (global Assert_failure/28!)
                                     [0: "src/LR1Pager.ml" 271 20])))
                               0)
                             (let
                               (candidate/1210 =
                                  (apply
                                    (field_imm 22 (global Dune__exe__Lr0!))
                                    candidate/1208 state/1209)
                                family/1211 =
                                  (apply (field_imm 3 S/969) state/1209
                                    family/1207))
                               (seq
                                 (if debug/1190
                                   (if (apply well_formed/1197 family/1211) 0
                                     (raise
                                       (makeblock 0
                                         (global Assert_failure/28!)
                                         [0: "src/LR1Pager.ml" 290 20])))
                                   0)
                                 (apply fuse/1202 c/1206 family/1211
                                   candidate/1210)))))))))
               (let
                 (*match*/3832 =
                    (apply (field_imm 0 G/678)
                      (function state/1213 : int
                        (let
                          (c/1214 =[int]
                             (apply (field_imm 11 (global Dune__exe__Lr0!))
                               state/1213))
                          (seq
                            (if debug/1190
                              (if
                                (apply (field_imm 29 S/969)
                                  (array.get[gen] families/970 c/1214))
                                0
                                (raise
                                  (makeblock 0 (global Assert_failure/28!)
                                    [0: "src/LR1Pager.ml" 317 18])))
                              0)
                            (array.set[gen] families/970 c/1214
                              (apply (field_imm 2 S/969) state/1213))
                            (apply schedule/1056 state/1213)))))
                  *match*/3830 =
                    (while
                      (not
                        (apply (field_imm 10 (global Stdlib__Stack!))
                          frontier/1037))
                      (let
                        (state/1215 =
                           (apply (field_imm 3 (global Stdlib__Stack!))
                             frontier/1037))
                        (apply (field_imm 1 G/678) state/1215 examine/1201)))
                  redirect/1216 =
                    (function candidate/1218
                      (let
                        (c/1219 =[int]
                           (apply (field_imm 11 (global Dune__exe__Lr0!))
                             candidate/1218)
                         family/1220 = (array.get[gen] families/970 c/1219)
                         *match*/3822 =
                           (apply (field_imm 44 S/969)
                             (apply subsume/1059 candidate/1218) family/1220))
                        (if (isint *match*/3822)
                          (raise
                            (makeblock 0 (global Assert_failure/28!)
                              [0: "src/LR1Pager.ml" 347 8]))
                          (field_imm 0 *match*/3822))))
                  G'/1230 =
                    (let
                      (foreach_successor/1225 =
                         (function state/1226 f/1227 : int
                           (apply (field_imm 1 G/678) state/1226
                             (function candidate/1228 : int
                               (let
                                 (successor/1229 =
                                    (apply redirect/1216 candidate/1228))
                                 (apply f/1227 successor/1229))))))
                      (makeblock 0 (field_mut 0 G/678)
                        foreach_successor/1225))
                  include/3824 =
                    (apply
                      (apply
                        (let
                          (let/3828 =
                             (field_imm 1
                               (global Vendored_fix__GraphNumbering!)))
                          (field_imm 1
                            (global Vendored_fix__GraphNumbering!)))
                        (let
                          (let/3827 = (field_imm 8 (global Dune__exe__Lr0!)))
                          (field_imm 8 (global Dune__exe__Lr0!))))
                      G'/1230)
                  encode/1359 =a (field_mut 1 include/3824)
                  decode/1360 =a (field_mut 2 include/3824)
                  entry/1362 =
                    (apply
                      (field_imm 23
                        (field_imm 9 (global Dune__exe__Grammar!)))
                      (function c/1363[int] : int
                        (apply encode/1359
                          (apply (field_imm 12 (global Dune__exe__Lr0!))
                            c/1363)))
                      (field_imm 1 (global Dune__exe__Lr0!)))
                  transition/1364 =
                    (function symbol/1366 i/1367[int] : int
                      (apply encode/1359
                        (apply redirect/1216
                          (apply (field_imm 14 (global Dune__exe__Lr0!))
                            symbol/1366 (apply decode/1360 i/1367)))))
                  outgoing_symbols/1368 =
                    (function i/1370[int]
                      (apply (field_imm 6 (global Dune__exe__Lr0!))
                        (apply (field_imm 11 (global Dune__exe__Lr0!))
                          (apply decode/1360 i/1370))))
                  transitions/1371 =
                    (function i/1373[int]
                      (apply
                        (field_imm 44
                          (field_imm 7 (global Dune__exe__Grammar!)))
                        (function symbol/1470 : int
                          (apply transition/1364 symbol/1470 i/1373))
                        (apply outgoing_symbols/1368 i/1373)))
                  number/1471 = (function i/1473[int] : int i/1473)
                  node/1474 = (function i/1476[int] : int i/1476))
                 (makeblock 0 G/678 S/969 families/970 frontier/1037
                   schedule/1056 subsume/1059 compatible/1067 debug/1190
                   no_two/1191 well_formed/1197 examine/1201 fuse/1202
                   redirect/1216 G'/1230 (field_mut 0 include/3824)
                   encode/1359 decode/1360 decode/1360 entry/1362
                   transition/1364 outgoing_symbols/1368 transitions/1371
                   number/1471 node/1474))))))))
  (seq
    (setfield_ptr(root-init) 0 (global Dune__exe__LR1Pager!)
      (function funarg/3836 is_a_functor stub
        (let (let/3837 = (apply Run/1599 funarg/3836))
          (makeblock 0 (field_mut 14 let/3837) (field_mut 22 let/3837)
            (field_mut 23 let/3837) (field_mut 18 let/3837)
            (field_mut 21 let/3837) (field_mut 17 let/3837)))))
    0))
