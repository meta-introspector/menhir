[
  structure_item (src/LALR.ml[20,1190+0]..[20,1190+12])
    Pstr_open Fresh
    module_expr (src/LALR.ml[20,1190+5]..[20,1190+12])
      Pmod_ident "Grammar" (src/LALR.ml[20,1190+5]..[20,1190+12])
  structure_item (src/LALR.ml[22,1204+0]..[23,1220+14])
    Pstr_type Rec
    [
      type_declaration "lr1state" (src/LALR.ml[22,1204+5]..[22,1204+13]) (src/LALR.ml[22,1204+0]..[23,1220+14])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/LALR.ml[23,1220+2]..[23,1220+14])
              Ptyp_constr "Lr0.lr1state" (src/LALR.ml[23,1220+2]..[23,1220+14])
              []
    ]
  structure_item (src/LALR.ml[25,1236+0]..[127,4388+3])
    Pstr_module
    "Run" (src/LALR.ml[25,1236+7]..[25,1236+10])
      module_expr (src/LALR.ml[25,1236+11]..[127,4388+3])
        Pmod_functor ()
        module_expr (src/LALR.ml[25,1236+16]..[127,4388+3])
          Pmod_structure
          [
            structure_item (src/LALR.ml[26,1259+0]..[26,1259+11])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LALR.ml[26,1259+4]..[26,1259+6])
                    Ppat_construct "()" (src/LALR.ml[26,1259+4]..[26,1259+6])
                    None
                  expression (src/LALR.ml[26,1259+9]..[26,1259+11])
                    Pexp_construct "()" (src/LALR.ml[26,1259+9]..[26,1259+11])
                    None
              ]
            structure_item (src/LALR.ml[43,2030+0]..[44,2042+5])
              Pstr_type Rec
              [
                type_declaration "node" (src/LALR.ml[43,2030+5]..[43,2030+9]) (src/LALR.ml[43,2030+0]..[44,2042+5])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (src/LALR.ml[44,2042+2]..[44,2042+5])
                        Ptyp_constr "int" (src/LALR.ml[44,2042+2]..[44,2042+5])
                        []
              ]
            structure_item (src/LALR.ml[51,2352+0]..[54,2424+3])
              Pstr_module
              "P" (src/LALR.ml[51,2352+7]..[51,2352+8])
                module_expr (src/LALR.ml[51,2352+11]..[54,2424+3])
                  Pmod_structure
                  [
                    structure_item (src/LALR.ml[52,2370+2]..[52,2370+26])
                      Pstr_type Rec
                      [
                        type_declaration "property" (src/LALR.ml[52,2370+7]..[52,2370+15]) (src/LALR.ml[52,2370+2]..[52,2370+26])
                          ptype_params =
                            []
                          ptype_cstrs =
                            []
                          ptype_kind =
                            Ptype_abstract
                          ptype_private = Public
                          ptype_manifest =
                            Some
                              core_type (src/LALR.ml[52,2370+18]..[52,2370+26])
                                Ptyp_constr "lr1state" (src/LALR.ml[52,2370+18]..[52,2370+26])
                                []
                      ]
                    structure_item (src/LALR.ml[53,2397+2]..[53,2397+26])
                      Pstr_value Nonrec
                      [
                        <def>
                          pattern (src/LALR.ml[53,2397+6]..[53,2397+14])
                            Ppat_var "leq_join" (src/LALR.ml[53,2397+6]..[53,2397+14])
                          expression (src/LALR.ml[53,2397+17]..[53,2397+26])
                            Pexp_ident "Lr0.union" (src/LALR.ml[53,2397+17]..[53,2397+26])
                      ]
                  ]
            structure_item (src/LALR.ml[58,2447+0]..[81,3214+3])
              Pstr_module
              "G" (src/LALR.ml[58,2447+7]..[58,2447+8])
                module_expr (src/LALR.ml[58,2447+11]..[81,3214+3])
                  Pmod_structure
                  [
                    structure_item (src/LALR.ml[60,2466+2]..[60,2466+22])
                      Pstr_type Rec
                      [
                        type_declaration "variable" (src/LALR.ml[60,2466+7]..[60,2466+15]) (src/LALR.ml[60,2466+2]..[60,2466+22])
                          ptype_params =
                            []
                          ptype_cstrs =
                            []
                          ptype_kind =
                            Ptype_abstract
                          ptype_private = Public
                          ptype_manifest =
                            Some
                              core_type (src/LALR.ml[60,2466+18]..[60,2466+22])
                                Ptyp_constr "node" (src/LALR.ml[60,2466+18]..[60,2466+22])
                                []
                      ]
                    structure_item (src/LALR.ml[61,2489+2]..[61,2489+28])
                      Pstr_type Rec
                      [
                        type_declaration "property" (src/LALR.ml[61,2489+7]..[61,2489+15]) (src/LALR.ml[61,2489+2]..[61,2489+28])
                          ptype_params =
                            []
                          ptype_cstrs =
                            []
                          ptype_kind =
                            Ptype_abstract
                          ptype_private = Public
                          ptype_manifest =
                            Some
                              core_type (src/LALR.ml[61,2489+18]..[61,2489+28])
                                Ptyp_constr "P.property" (src/LALR.ml[61,2489+18]..[61,2489+28])
                                []
                      ]
                    structure_item (src/LALR.ml[66,2674+2]..[69,2769+15])
                      Pstr_value Nonrec
                      [
                        <def>
                          pattern (src/LALR.ml[66,2674+6]..[66,2674+18])
                            Ppat_var "foreach_root" (src/LALR.ml[66,2674+6]..[66,2674+18])
                          expression (src/LALR.ml[66,2674+19]..[69,2769+15]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/LALR.ml[66,2674+19]..[66,2674+20])
                              Ppat_var "f" (src/LALR.ml[66,2674+19]..[66,2674+20])
                            expression (src/LALR.ml[67,2697+4]..[69,2769+15])
                              Pexp_apply
                              expression (src/LALR.ml[67,2697+4]..[67,2697+22])
                                Pexp_ident "ProductionMap.iter" (src/LALR.ml[67,2697+4]..[67,2697+22])
                              [
                                <arg>
                                Nolabel
                                  expression (src/LALR.ml[67,2697+23]..[69,2769+5])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/LALR.ml[67,2697+28]..[67,2697+33])
                                      Ppat_var "_prod" (src/LALR.ml[67,2697+28]..[67,2697+33])
                                    expression (src/LALR.ml[67,2697+34]..[68,2739+29]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (src/LALR.ml[67,2697+34]..[67,2697+38])
                                        Ppat_var "node" (src/LALR.ml[67,2697+34]..[67,2697+38])
                                      expression (src/LALR.ml[68,2739+6]..[68,2739+29])
                                        Pexp_apply
                                        expression (src/LALR.ml[68,2739+6]..[68,2739+7])
                                          Pexp_ident "f" (src/LALR.ml[68,2739+6]..[68,2739+7])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/LALR.ml[68,2739+8]..[68,2739+12])
                                              Pexp_ident "node" (src/LALR.ml[68,2739+8]..[68,2739+12])
                                          <arg>
                                          Nolabel
                                            expression (src/LALR.ml[68,2739+13]..[68,2739+29])
                                              Pexp_apply
                                              expression (src/LALR.ml[68,2739+14]..[68,2739+23])
                                                Pexp_ident "Lr0.start" (src/LALR.ml[68,2739+14]..[68,2739+23])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/LALR.ml[68,2739+24]..[68,2739+28])
                                                    Pexp_ident "node" (src/LALR.ml[68,2739+24]..[68,2739+28])
                                              ]
                                        ]
                                <arg>
                                Nolabel
                                  expression (src/LALR.ml[69,2769+6]..[69,2769+15])
                                    Pexp_ident "Lr0.entry" (src/LALR.ml[69,2769+6]..[69,2769+15])
                              ]
                      ]
                    structure_item (src/LALR.ml[75,2975+2]..[79,3181+31])
                      Pstr_value Nonrec
                      [
                        <def>
                          pattern (src/LALR.ml[75,2975+6]..[75,2975+23])
                            Ppat_var "foreach_successor" (src/LALR.ml[75,2975+6]..[75,2975+23])
                          expression (src/LALR.ml[75,2975+24]..[79,3181+31]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/LALR.ml[75,2975+24]..[75,2975+28])
                              Ppat_var "node" (src/LALR.ml[75,2975+24]..[75,2975+28])
                            expression (src/LALR.ml[75,2975+29]..[79,3181+31]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/LALR.ml[75,2975+29]..[75,2975+34])
                                Ppat_var "state" (src/LALR.ml[75,2975+29]..[75,2975+34])
                              expression (src/LALR.ml[75,2975+35]..[79,3181+31]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/LALR.ml[75,2975+35]..[75,2975+36])
                                  Ppat_var "f" (src/LALR.ml[75,2975+35]..[75,2975+36])
                                expression (src/LALR.ml[76,3014+4]..[79,3181+31])
                                  Pexp_apply
                                  expression (src/LALR.ml[76,3014+4]..[76,3014+18])
                                    Pexp_ident "SymbolMap.iter" (src/LALR.ml[76,3014+4]..[76,3014+18])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/LALR.ml[76,3014+19]..[79,3181+5])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/LALR.ml[76,3014+24]..[76,3014+30])
                                          Ppat_var "symbol" (src/LALR.ml[76,3014+24]..[76,3014+30])
                                        expression (src/LALR.ml[76,3014+31]..[78,3142+38]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (src/LALR.ml[76,3014+31]..[76,3014+54])
                                            Ppat_constraint
                                            pattern (src/LALR.ml[76,3014+32]..[76,3014+46])
                                              Ppat_var "successor_node" (src/LALR.ml[76,3014+32]..[76,3014+46])
                                            core_type (src/LALR.ml[76,3014+49]..[76,3014+53])
                                              Ptyp_constr "node" (src/LALR.ml[76,3014+49]..[76,3014+53])
                                              []
                                          expression (src/LALR.ml[77,3072+6]..[78,3142+38])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/LALR.ml[77,3072+10]..[77,3072+25])
                                                  Ppat_var "successor_state" (src/LALR.ml[77,3072+10]..[77,3072+25])
                                                core_type (src/LALR.ml[77,3072+28]..[77,3072+36])
                                                  Ptyp_constr "lr1state" (src/LALR.ml[77,3072+28]..[77,3072+36])
                                                  []
                                                expression (src/LALR.ml[77,3072+39]..[77,3072+66])
                                                  Pexp_apply
                                                  expression (src/LALR.ml[77,3072+39]..[77,3072+53])
                                                    Pexp_ident "Lr0.transition" (src/LALR.ml[77,3072+39]..[77,3072+53])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/LALR.ml[77,3072+54]..[77,3072+60])
                                                        Pexp_ident "symbol" (src/LALR.ml[77,3072+54]..[77,3072+60])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/LALR.ml[77,3072+61]..[77,3072+66])
                                                        Pexp_ident "state" (src/LALR.ml[77,3072+61]..[77,3072+66])
                                                  ]
                                            ]
                                            expression (src/LALR.ml[78,3142+6]..[78,3142+38])
                                              Pexp_apply
                                              expression (src/LALR.ml[78,3142+6]..[78,3142+7])
                                                Pexp_ident "f" (src/LALR.ml[78,3142+6]..[78,3142+7])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/LALR.ml[78,3142+8]..[78,3142+22])
                                                    Pexp_ident "successor_node" (src/LALR.ml[78,3142+8]..[78,3142+22])
                                                <arg>
                                                Nolabel
                                                  expression (src/LALR.ml[78,3142+23]..[78,3142+38])
                                                    Pexp_ident "successor_state" (src/LALR.ml[78,3142+23]..[78,3142+38])
                                              ]
                                    <arg>
                                    Nolabel
                                      expression (src/LALR.ml[79,3181+6]..[79,3181+31])
                                        Pexp_apply
                                        expression (src/LALR.ml[79,3181+7]..[79,3181+25])
                                          Pexp_ident "Lr0.outgoing_edges" (src/LALR.ml[79,3181+7]..[79,3181+25])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/LALR.ml[79,3181+26]..[79,3181+30])
                                              Pexp_ident "node" (src/LALR.ml[79,3181+26]..[79,3181+30])
                                        ]
                                  ]
                      ]
                  ]
            structure_item (src/LALR.ml[85,3257+0]..[85,3257+48])
              Pstr_module
              "F" (src/LALR.ml[85,3257+7]..[85,3257+8])
                module_expr (src/LALR.ml[85,3257+11]..[85,3257+48])
                  Pmod_apply
                  module_expr (src/LALR.ml[85,3257+11]..[85,3257+45])
                    Pmod_apply
                    module_expr (src/LALR.ml[85,3257+11]..[85,3257+42])
                      Pmod_apply
                      module_expr (src/LALR.ml[85,3257+11]..[85,3257+37])
                        Pmod_ident "Fix.DataFlow.ForIntSegment" (src/LALR.ml[85,3257+11]..[85,3257+37])
                      module_expr (src/LALR.ml[85,3257+38]..[85,3257+41])
                        Pmod_ident "Lr0" (src/LALR.ml[85,3257+38]..[85,3257+41])
                    module_expr (src/LALR.ml[85,3257+43]..[85,3257+44])
                      Pmod_ident "P" (src/LALR.ml[85,3257+43]..[85,3257+44])
                  module_expr (src/LALR.ml[85,3257+46]..[85,3257+47])
                    Pmod_ident "G" (src/LALR.ml[85,3257+46]..[85,3257+47])
            structure_item (src/LALR.ml[93,3568+0]..[94,3576+7])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LALR.ml[93,3568+4]..[93,3568+5])
                    Ppat_var "n" (src/LALR.ml[93,3568+4]..[93,3568+5])
                  expression (src/LALR.ml[94,3576+2]..[94,3576+7])
                    Pexp_ident "Lr0.n" (src/LALR.ml[94,3576+2]..[94,3576+7])
              ]
            structure_item (src/LALR.ml[96,3585+0]..[97,3615+59])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LALR.ml[96,3585+4]..[96,3585+10])
                    Ppat_var "states" (src/LALR.ml[96,3585+4]..[96,3585+10])
                  core_type (src/LALR.ml[96,3585+13]..[96,3585+27])
                    Ptyp_constr "array" (src/LALR.ml[96,3585+22]..[96,3585+27])
                    [
                      core_type (src/LALR.ml[96,3585+13]..[96,3585+21])
                        Ptyp_constr "lr1state" (src/LALR.ml[96,3585+13]..[96,3585+21])
                        []
                    ]
                  expression (src/LALR.ml[97,3615+2]..[97,3615+59])
                    Pexp_apply
                    expression (src/LALR.ml[97,3615+2]..[97,3615+12])
                      Pexp_ident "Array.init" (src/LALR.ml[97,3615+2]..[97,3615+12])
                    [
                      <arg>
                      Nolabel
                        expression (src/LALR.ml[97,3615+13]..[97,3615+14])
                          Pexp_ident "n" (src/LALR.ml[97,3615+13]..[97,3615+14])
                      <arg>
                      Nolabel
                        expression (src/LALR.ml[97,3615+15]..[97,3615+59])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/LALR.ml[97,3615+20]..[97,3615+24])
                            Ppat_var "node" (src/LALR.ml[97,3615+20]..[97,3615+24])
                          expression (src/LALR.ml[97,3615+28]..[97,3615+58])
                            Pexp_apply
                            expression (src/LALR.ml[97,3615+28]..[97,3615+40])
                              Pexp_ident "Option.force" (src/LALR.ml[97,3615+28]..[97,3615+40])
                            [
                              <arg>
                              Nolabel
                                expression (src/LALR.ml[97,3615+41]..[97,3615+58])
                                  Pexp_apply
                                  expression (src/LALR.ml[97,3615+42]..[97,3615+52])
                                    Pexp_ident "F.solution" (src/LALR.ml[97,3615+42]..[97,3615+52])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/LALR.ml[97,3615+53]..[97,3615+57])
                                        Pexp_ident "node" (src/LALR.ml[97,3615+53]..[97,3615+57])
                                  ]
                            ]
                    ]
              ]
            structure_item (src/LALR.ml[99,3676+0]..[100,3707+18])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LALR.ml[99,3676+4]..[99,3676+9])
                    Ppat_var "state" (src/LALR.ml[99,3676+4]..[99,3676+9])
                  core_type (src/LALR.ml[99,3676+12]..[99,3676+28])
                    Ptyp_arrow
                    Nolabel
                    core_type (src/LALR.ml[99,3676+12]..[99,3676+16])
                      Ptyp_constr "node" (src/LALR.ml[99,3676+12]..[99,3676+16])
                      []
                    core_type (src/LALR.ml[99,3676+20]..[99,3676+28])
                      Ptyp_constr "lr1state" (src/LALR.ml[99,3676+20]..[99,3676+28])
                      []
                  expression (src/LALR.ml[100,3707+2]..[100,3707+18])
                    Pexp_apply
                    expression (src/LALR.ml[100,3707+2]..[100,3707+11])
                      Pexp_ident "Array.get" (src/LALR.ml[100,3707+2]..[100,3707+11])
                    [
                      <arg>
                      Nolabel
                        expression (src/LALR.ml[100,3707+12]..[100,3707+18])
                          Pexp_ident "states" (src/LALR.ml[100,3707+12]..[100,3707+18])
                    ]
              ]
            structure_item (src/LALR.ml[109,3986+0]..[110,4021+11])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LALR.ml[109,3986+4]..[109,3986+9])
                    Ppat_var "entry" (src/LALR.ml[109,3986+4]..[109,3986+9])
                  core_type (src/LALR.ml[109,3986+12]..[109,3986+32])
                    Ptyp_constr "ProductionMap.t" (src/LALR.ml[109,3986+17]..[109,3986+32])
                    [
                      core_type (src/LALR.ml[109,3986+12]..[109,3986+16])
                        Ptyp_constr "node" (src/LALR.ml[109,3986+12]..[109,3986+16])
                        []
                    ]
                  expression (src/LALR.ml[110,4021+2]..[110,4021+11])
                    Pexp_ident "Lr0.entry" (src/LALR.ml[110,4021+2]..[110,4021+11])
              ]
            structure_item (src/LALR.ml[112,4034+0]..[113,4079+20])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LALR.ml[112,4034+4]..[112,4034+15])
                    Ppat_var "transitions" (src/LALR.ml[112,4034+4]..[112,4034+15])
                  core_type (src/LALR.ml[112,4034+18]..[112,4034+42])
                    Ptyp_arrow
                    Nolabel
                    core_type (src/LALR.ml[112,4034+18]..[112,4034+22])
                      Ptyp_constr "node" (src/LALR.ml[112,4034+18]..[112,4034+22])
                      []
                    core_type (src/LALR.ml[112,4034+26]..[112,4034+42])
                      Ptyp_constr "SymbolMap.t" (src/LALR.ml[112,4034+31]..[112,4034+42])
                      [
                        core_type (src/LALR.ml[112,4034+26]..[112,4034+30])
                          Ptyp_constr "node" (src/LALR.ml[112,4034+26]..[112,4034+30])
                          []
                      ]
                  expression (src/LALR.ml[113,4079+2]..[113,4079+20])
                    Pexp_ident "Lr0.outgoing_edges" (src/LALR.ml[113,4079+2]..[113,4079+20])
              ]
            structure_item (src/LALR.ml[119,4238+0]..[120,4268+3])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LALR.ml[119,4238+4]..[119,4238+10])
                    Ppat_var "number" (src/LALR.ml[119,4238+4]..[119,4238+10])
                  expression (src/LALR.ml[119,4238+11]..[120,4268+3]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LALR.ml[119,4238+11]..[119,4238+21])
                      Ppat_constraint
                      pattern (src/LALR.ml[119,4238+12]..[119,4238+13])
                        Ppat_var "i" (src/LALR.ml[119,4238+12]..[119,4238+13])
                      core_type (src/LALR.ml[119,4238+16]..[119,4238+20])
                        Ptyp_constr "node" (src/LALR.ml[119,4238+16]..[119,4238+20])
                        []
                    expression (src/LALR.ml[119,4238+22]..[120,4268+3])
                      Pexp_constraint
                      expression (src/LALR.ml[120,4268+2]..[120,4268+3])
                        Pexp_ident "i" (src/LALR.ml[120,4268+2]..[120,4268+3])
                      core_type (src/LALR.ml[119,4238+24]..[119,4238+27])
                        Ptyp_constr "int" (src/LALR.ml[119,4238+24]..[119,4238+27])
                        []
              ]
            structure_item (src/LALR.ml[122,4273+0]..[123,4301+3])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LALR.ml[122,4273+4]..[122,4273+8])
                    Ppat_var "node" (src/LALR.ml[122,4273+4]..[122,4273+8])
                  expression (src/LALR.ml[122,4273+9]..[123,4301+3]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LALR.ml[122,4273+9]..[122,4273+18])
                      Ppat_constraint
                      pattern (src/LALR.ml[122,4273+10]..[122,4273+11])
                        Ppat_var "i" (src/LALR.ml[122,4273+10]..[122,4273+11])
                      core_type (src/LALR.ml[122,4273+14]..[122,4273+17])
                        Ptyp_constr "int" (src/LALR.ml[122,4273+14]..[122,4273+17])
                        []
                    expression (src/LALR.ml[122,4273+19]..[123,4301+3])
                      Pexp_constraint
                      expression (src/LALR.ml[123,4301+2]..[123,4301+3])
                        Pexp_ident "i" (src/LALR.ml[123,4301+2]..[123,4301+3])
                      core_type (src/LALR.ml[122,4273+21]..[122,4273+25])
                        Ptyp_constr "node" (src/LALR.ml[122,4273+21]..[122,4273+25])
                        []
              ]
          ]
]

open Grammar
type lr1state = Lr0.lr1state
module Run() =
  struct
    let () = ()
    type node = int
    module P = struct type property = lr1state
                      let leq_join = Lr0.union end
    module G =
      struct
        type variable = node
        type property = P.property
        let foreach_root f =
          ProductionMap.iter
            (fun _prod -> fun node -> f node (Lr0.start node)) Lr0.entry
        let foreach_successor node state f =
          SymbolMap.iter
            (fun symbol ->
               fun (successor_node : node) ->
                 let successor_state : lr1state = Lr0.transition symbol state in
                 f successor_node successor_state) (Lr0.outgoing_edges node)
      end
    module F = (((Fix.DataFlow.ForIntSegment)(Lr0))(P))(G)
    let n = Lr0.n
    let states : lr1state array =
      Array.init n (fun node -> Option.force (F.solution node))
    let state : node -> lr1state = Array.get states
    let entry : node ProductionMap.t = Lr0.entry
    let transitions : node -> node SymbolMap.t = Lr0.outgoing_edges
    let number (i : node) = (i : int)
    let node (i : int) = (i : node)
  end
[
  structure_item (src/LALR.ml[20,1190+0]..src/LALR.ml[20,1190+12])
    Tstr_open Fresh
    module_expr (src/LALR.ml[20,1190+5]..src/LALR.ml[20,1190+12])
      Tmod_ident "Dune__exe!.Grammar"
  structure_item (src/LALR.ml[22,1204+0]..src/LALR.ml[23,1220+14])
    Tstr_type Rec
    [
      type_declaration lr1state/414 (src/LALR.ml[22,1204+0]..src/LALR.ml[23,1220+14])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/LALR.ml[23,1220+2]..src/LALR.ml[23,1220+14])
              Ttyp_constr "Dune__exe!.Lr0.lr1state"
              []
    ]
  structure_item (src/LALR.ml[25,1236+0]..src/LALR.ml[127,4388+3])
    Tstr_module
    Run/938
      module_expr (src/LALR.ml[25,1236+11]..src/LALR.ml[127,4388+3])
        Tmod_functor ()
        module_expr (src/LALR.ml[25,1236+16]..src/LALR.ml[127,4388+3])
          Tmod_structure
          [
            structure_item (src/LALR.ml[26,1259+0]..src/LALR.ml[26,1259+11])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/LALR.ml[26,1259+4]..src/LALR.ml[26,1259+6])
                    Tpat_construct "()"
                    []
                    None
                  expression (src/LALR.ml[26,1259+9]..src/LALR.ml[26,1259+11])
                    Texp_construct "()"
                    []
              ]
            structure_item (src/LALR.ml[43,2030+0]..src/LALR.ml[44,2042+5])
              Tstr_type Rec
              [
                type_declaration node/491 (src/LALR.ml[43,2030+0]..src/LALR.ml[44,2042+5])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (src/LALR.ml[44,2042+2]..src/LALR.ml[44,2042+5])
                        Ttyp_constr "int/1!"
                        []
              ]
            structure_item (src/LALR.ml[51,2352+0]..src/LALR.ml[54,2424+3])
              Tstr_module
              P/494
                module_expr (src/LALR.ml[51,2352+11]..src/LALR.ml[54,2424+3])
                  Tmod_structure
                  [
                    structure_item (src/LALR.ml[52,2370+2]..src/LALR.ml[52,2370+26])
                      Tstr_type Rec
                      [
                        type_declaration property/492 (src/LALR.ml[52,2370+2]..src/LALR.ml[52,2370+26])
                          ptype_params =
                            []
                          ptype_cstrs =
                            []
                          ptype_kind =
                            Ttype_abstract
                          ptype_private = Public
                          ptype_manifest =
                            Some
                              core_type (src/LALR.ml[52,2370+18]..src/LALR.ml[52,2370+26])
                                Ttyp_constr "lr1state/414"
                                []
                      ]
                    structure_item (src/LALR.ml[53,2397+2]..src/LALR.ml[53,2397+26])
                      Tstr_value Nonrec
                      [
                        <def>
                          pattern (src/LALR.ml[53,2397+6]..src/LALR.ml[53,2397+14])
                            Tpat_var "leq_join/493"
                          expression (src/LALR.ml[53,2397+17]..src/LALR.ml[53,2397+26])
                            Texp_ident "Dune__exe!.Lr0.union"
                      ]
                  ]
            structure_item (src/LALR.ml[58,2447+0]..src/LALR.ml[81,3214+3])
              Tstr_module
              G/713
                module_expr (src/LALR.ml[58,2447+11]..src/LALR.ml[81,3214+3])
                  Tmod_structure
                  [
                    structure_item (src/LALR.ml[60,2466+2]..src/LALR.ml[60,2466+22])
                      Tstr_type Rec
                      [
                        type_declaration variable/495 (src/LALR.ml[60,2466+2]..src/LALR.ml[60,2466+22])
                          ptype_params =
                            []
                          ptype_cstrs =
                            []
                          ptype_kind =
                            Ttype_abstract
                          ptype_private = Public
                          ptype_manifest =
                            Some
                              core_type (src/LALR.ml[60,2466+18]..src/LALR.ml[60,2466+22])
                                Ttyp_constr "node/491"
                                []
                      ]
                    structure_item (src/LALR.ml[61,2489+2]..src/LALR.ml[61,2489+28])
                      Tstr_type Rec
                      [
                        type_declaration property/496 (src/LALR.ml[61,2489+2]..src/LALR.ml[61,2489+28])
                          ptype_params =
                            []
                          ptype_cstrs =
                            []
                          ptype_kind =
                            Ttype_abstract
                          ptype_private = Public
                          ptype_manifest =
                            Some
                              core_type (src/LALR.ml[61,2489+18]..src/LALR.ml[61,2489+28])
                                Ttyp_constr "P/494.property"
                                []
                      ]
                    structure_item (src/LALR.ml[66,2674+2]..src/LALR.ml[69,2769+15])
                      Tstr_value Nonrec
                      [
                        <def>
                          pattern (src/LALR.ml[66,2674+6]..src/LALR.ml[66,2674+18])
                            Tpat_var "foreach_root/497"
                          expression (src/LALR.ml[66,2674+19]..src/LALR.ml[69,2769+15]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/LALR.ml[66,2674+19]..src/LALR.ml[66,2674+20])
                                  Tpat_var "f/499"
                                expression (src/LALR.ml[67,2697+4]..src/LALR.ml[69,2769+15])
                                  Texp_apply
                                  expression (src/LALR.ml[67,2697+4]..src/LALR.ml[67,2697+22])
                                    Texp_ident "Dune__exe!.Grammar.ProductionMap.iter"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/LALR.ml[67,2697+23]..src/LALR.ml[69,2769+5])
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/LALR.ml[67,2697+28]..src/LALR.ml[67,2697+33])
                                              Tpat_var "_prod/551"
                                            expression (src/LALR.ml[67,2697+34]..src/LALR.ml[68,2739+29]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/LALR.ml[67,2697+34]..src/LALR.ml[67,2697+38])
                                                    Tpat_var "node/552"
                                                  expression (src/LALR.ml[68,2739+6]..src/LALR.ml[68,2739+29])
                                                    Texp_apply
                                                    expression (src/LALR.ml[68,2739+6]..src/LALR.ml[68,2739+7])
                                                      Texp_ident "f/499"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/LALR.ml[68,2739+8]..src/LALR.ml[68,2739+12])
                                                          Texp_ident "node/552"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/LALR.ml[68,2739+13]..src/LALR.ml[68,2739+29])
                                                          Texp_apply
                                                          expression (src/LALR.ml[68,2739+14]..src/LALR.ml[68,2739+23])
                                                            Texp_ident "Dune__exe!.Lr0.start"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/LALR.ml[68,2739+24]..src/LALR.ml[68,2739+28])
                                                                Texp_ident "node/552"
                                                          ]
                                                    ]
                                              ]
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/LALR.ml[69,2769+6]..src/LALR.ml[69,2769+15])
                                        Texp_ident "Dune__exe!.Lr0.entry"
                                  ]
                            ]
                      ]
                    structure_item (src/LALR.ml[75,2975+2]..src/LALR.ml[79,3181+31])
                      Tstr_value Nonrec
                      [
                        <def>
                          pattern (src/LALR.ml[75,2975+6]..src/LALR.ml[75,2975+23])
                            Tpat_var "foreach_successor/587"
                          expression (src/LALR.ml[75,2975+24]..src/LALR.ml[79,3181+31]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/LALR.ml[75,2975+24]..src/LALR.ml[75,2975+28])
                                  Tpat_var "node/589"
                                expression (src/LALR.ml[75,2975+29]..src/LALR.ml[79,3181+31]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/LALR.ml[75,2975+29]..src/LALR.ml[75,2975+34])
                                        Tpat_var "state/590"
                                      expression (src/LALR.ml[75,2975+35]..src/LALR.ml[79,3181+31]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/LALR.ml[75,2975+35]..src/LALR.ml[75,2975+36])
                                              Tpat_var "f/591"
                                            expression (src/LALR.ml[76,3014+4]..src/LALR.ml[79,3181+31])
                                              Texp_apply
                                              expression (src/LALR.ml[76,3014+4]..src/LALR.ml[76,3014+18])
                                                Texp_ident "Dune__exe!.Grammar.SymbolMap.iter"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/LALR.ml[76,3014+19]..src/LALR.ml[79,3181+5])
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (src/LALR.ml[76,3014+24]..src/LALR.ml[76,3014+30])
                                                          Tpat_var "symbol/640"
                                                        expression (src/LALR.ml[76,3014+31]..src/LALR.ml[78,3142+38]) ghost
                                                          Texp_function
                                                          Nolabel
                                                          [
                                                            <case>
                                                              pattern (src/LALR.ml[76,3014+32]..src/LALR.ml[76,3014+46])
                                                                extra
                                                                  Tpat_extra_constraint
                                                                  core_type (src/LALR.ml[76,3014+49]..src/LALR.ml[76,3014+53])
                                                                    Ttyp_constr "node/491"
                                                                    []
                                                                Tpat_alias "successor_node/641"
                                                                pattern (src/LALR.ml[76,3014+32]..src/LALR.ml[76,3014+46])
                                                                  Tpat_any
                                                              expression (src/LALR.ml[77,3072+6]..src/LALR.ml[78,3142+38])
                                                                Texp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (src/LALR.ml[77,3072+10]..src/LALR.ml[77,3072+25])
                                                                      extra
                                                                        Tpat_extra_constraint
                                                                        core_type (src/LALR.ml[77,3072+28]..src/LALR.ml[77,3072+36])
                                                                          Ttyp_constr "lr1state/414"
                                                                          []
                                                                      Tpat_alias "successor_state/642"
                                                                      pattern (src/LALR.ml[77,3072+10]..src/LALR.ml[77,3072+25])
                                                                        Tpat_any
                                                                    expression (src/LALR.ml[77,3072+39]..src/LALR.ml[77,3072+66])
                                                                      extra
                                                                        Texp_constraint
                                                                        core_type (src/LALR.ml[77,3072+28]..src/LALR.ml[77,3072+36])
                                                                          Ttyp_constr "lr1state/414"
                                                                          []
                                                                      Texp_apply
                                                                      expression (src/LALR.ml[77,3072+39]..src/LALR.ml[77,3072+53])
                                                                        Texp_ident "Dune__exe!.Lr0.transition"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/LALR.ml[77,3072+54]..src/LALR.ml[77,3072+60])
                                                                            Texp_ident "symbol/640"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/LALR.ml[77,3072+61]..src/LALR.ml[77,3072+66])
                                                                            Texp_ident "state/590"
                                                                      ]
                                                                ]
                                                                expression (src/LALR.ml[78,3142+6]..src/LALR.ml[78,3142+38])
                                                                  Texp_apply
                                                                  expression (src/LALR.ml[78,3142+6]..src/LALR.ml[78,3142+7])
                                                                    Texp_ident "f/591"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/LALR.ml[78,3142+8]..src/LALR.ml[78,3142+22])
                                                                        Texp_ident "successor_node/641"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/LALR.ml[78,3142+23]..src/LALR.ml[78,3142+38])
                                                                        Texp_ident "successor_state/642"
                                                                  ]
                                                          ]
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (src/LALR.ml[79,3181+6]..src/LALR.ml[79,3181+31])
                                                    Texp_apply
                                                    expression (src/LALR.ml[79,3181+7]..src/LALR.ml[79,3181+25])
                                                      Texp_ident "Dune__exe!.Lr0.outgoing_edges"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/LALR.ml[79,3181+26]..src/LALR.ml[79,3181+30])
                                                          Texp_ident "node/589"
                                                    ]
                                              ]
                                        ]
                                  ]
                            ]
                      ]
                  ]
            structure_item (src/LALR.ml[85,3257+0]..src/LALR.ml[85,3257+48])
              Tstr_module
              F/866
                module_expr (src/LALR.ml[85,3257+11]..src/LALR.ml[85,3257+48])
                  Tmod_apply
                  module_expr (src/LALR.ml[85,3257+11]..src/LALR.ml[85,3257+45])
                    Tmod_apply
                    module_expr (src/LALR.ml[85,3257+11]..src/LALR.ml[85,3257+42])
                      Tmod_apply
                      module_expr (src/LALR.ml[85,3257+11]..src/LALR.ml[85,3257+37])
                        module_expr (src/LALR.ml[85,3257+11]..src/LALR.ml[85,3257+37])
                          Tmod_ident "Dune__exe!.Fix.DataFlow.ForIntSegment"
                      module_expr (src/LALR.ml[85,3257+38]..src/LALR.ml[85,3257+41])
                        module_expr (src/LALR.ml[85,3257+38]..src/LALR.ml[85,3257+41])
                          Tmod_ident "Dune__exe!.Lr0"
                    module_expr (src/LALR.ml[85,3257+43]..src/LALR.ml[85,3257+44])
                      Tmod_ident "P/494"
                  module_expr (src/LALR.ml[85,3257+46]..src/LALR.ml[85,3257+47])
                    Tmod_ident "G/713"
            structure_item (src/LALR.ml[93,3568+0]..src/LALR.ml[94,3576+7])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/LALR.ml[93,3568+4]..src/LALR.ml[93,3568+5])
                    Tpat_var "n/867"
                  expression (src/LALR.ml[94,3576+2]..src/LALR.ml[94,3576+7])
                    Texp_ident "Dune__exe!.Lr0.n"
              ]
            structure_item (src/LALR.ml[96,3585+0]..src/LALR.ml[97,3615+59])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/LALR.ml[96,3585+4]..src/LALR.ml[96,3585+10])
                    extra
                      Tpat_extra_constraint
                      core_type (src/LALR.ml[96,3585+13]..src/LALR.ml[96,3585+27])
                        Ttyp_constr "array/8!"
                        [
                          core_type (src/LALR.ml[96,3585+13]..src/LALR.ml[96,3585+21])
                            Ttyp_constr "lr1state/414"
                            []
                        ]
                    Tpat_alias "states/868"
                    pattern (src/LALR.ml[96,3585+4]..src/LALR.ml[96,3585+10])
                      Tpat_any
                  expression (src/LALR.ml[97,3615+2]..src/LALR.ml[97,3615+59])
                    extra
                      Texp_constraint
                      core_type (src/LALR.ml[96,3585+13]..src/LALR.ml[96,3585+27])
                        Ttyp_constr "array/8!"
                        [
                          core_type (src/LALR.ml[96,3585+13]..src/LALR.ml[96,3585+21])
                            Ttyp_constr "lr1state/414"
                            []
                        ]
                    Texp_apply
                    expression (src/LALR.ml[97,3615+2]..src/LALR.ml[97,3615+12])
                      Texp_ident "Stdlib!.Array.init"
                    [
                      <arg>
                        Nolabel
                        expression (src/LALR.ml[97,3615+13]..src/LALR.ml[97,3615+14])
                          Texp_ident "n/867"
                      <arg>
                        Nolabel
                        expression (src/LALR.ml[97,3615+15]..src/LALR.ml[97,3615+59])
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/LALR.ml[97,3615+20]..src/LALR.ml[97,3615+24])
                                Tpat_var "node/917"
                              expression (src/LALR.ml[97,3615+28]..src/LALR.ml[97,3615+58])
                                Texp_apply
                                expression (src/LALR.ml[97,3615+28]..src/LALR.ml[97,3615+40])
                                  Texp_ident "Dune__exe!.Option.force"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/LALR.ml[97,3615+41]..src/LALR.ml[97,3615+58])
                                      Texp_apply
                                      expression (src/LALR.ml[97,3615+42]..src/LALR.ml[97,3615+52])
                                        Texp_ident "F/866.solution"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/LALR.ml[97,3615+53]..src/LALR.ml[97,3615+57])
                                            Texp_ident "node/917"
                                      ]
                                ]
                          ]
                    ]
              ]
            structure_item (src/LALR.ml[99,3676+0]..src/LALR.ml[100,3707+18])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/LALR.ml[99,3676+4]..src/LALR.ml[99,3676+9])
                    extra
                      Tpat_extra_constraint
                      core_type (src/LALR.ml[99,3676+12]..src/LALR.ml[99,3676+28])
                        Ttyp_arrow
                        Nolabel
                        core_type (src/LALR.ml[99,3676+12]..src/LALR.ml[99,3676+16])
                          Ttyp_constr "node/491"
                          []
                        core_type (src/LALR.ml[99,3676+20]..src/LALR.ml[99,3676+28])
                          Ttyp_constr "lr1state/414"
                          []
                    Tpat_alias "state/929"
                    pattern (src/LALR.ml[99,3676+4]..src/LALR.ml[99,3676+9])
                      Tpat_any
                  expression (src/LALR.ml[100,3707+2]..src/LALR.ml[100,3707+18])
                    extra
                      Texp_constraint
                      core_type (src/LALR.ml[99,3676+12]..src/LALR.ml[99,3676+28])
                        Ttyp_arrow
                        Nolabel
                        core_type (src/LALR.ml[99,3676+12]..src/LALR.ml[99,3676+16])
                          Ttyp_constr "node/491"
                          []
                        core_type (src/LALR.ml[99,3676+20]..src/LALR.ml[99,3676+28])
                          Ttyp_constr "lr1state/414"
                          []
                    Texp_apply
                    expression (src/LALR.ml[100,3707+2]..src/LALR.ml[100,3707+11])
                      Texp_ident "Stdlib!.Array.get"
                    [
                      <arg>
                        Nolabel
                        expression (src/LALR.ml[100,3707+12]..src/LALR.ml[100,3707+18])
                          Texp_ident "states/868"
                    ]
              ]
            structure_item (src/LALR.ml[109,3986+0]..src/LALR.ml[110,4021+11])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/LALR.ml[109,3986+4]..src/LALR.ml[109,3986+9])
                    extra
                      Tpat_extra_constraint
                      core_type (src/LALR.ml[109,3986+12]..src/LALR.ml[109,3986+32])
                        Ttyp_constr "Dune__exe!.Grammar.ProductionMap.t"
                        [
                          core_type (src/LALR.ml[109,3986+12]..src/LALR.ml[109,3986+16])
                            Ttyp_constr "node/491"
                            []
                        ]
                    Tpat_alias "entry/930"
                    pattern (src/LALR.ml[109,3986+4]..src/LALR.ml[109,3986+9])
                      Tpat_any
                  expression (src/LALR.ml[110,4021+2]..src/LALR.ml[110,4021+11])
                    extra
                      Texp_constraint
                      core_type (src/LALR.ml[109,3986+12]..src/LALR.ml[109,3986+32])
                        Ttyp_constr "Dune__exe!.Grammar.ProductionMap.t"
                        [
                          core_type (src/LALR.ml[109,3986+12]..src/LALR.ml[109,3986+16])
                            Ttyp_constr "node/491"
                            []
                        ]
                    Texp_ident "Dune__exe!.Lr0.entry"
              ]
            structure_item (src/LALR.ml[112,4034+0]..src/LALR.ml[113,4079+20])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/LALR.ml[112,4034+4]..src/LALR.ml[112,4034+15])
                    extra
                      Tpat_extra_constraint
                      core_type (src/LALR.ml[112,4034+18]..src/LALR.ml[112,4034+42])
                        Ttyp_arrow
                        Nolabel
                        core_type (src/LALR.ml[112,4034+18]..src/LALR.ml[112,4034+22])
                          Ttyp_constr "node/491"
                          []
                        core_type (src/LALR.ml[112,4034+26]..src/LALR.ml[112,4034+42])
                          Ttyp_constr "Dune__exe!.Grammar.SymbolMap.t"
                          [
                            core_type (src/LALR.ml[112,4034+26]..src/LALR.ml[112,4034+30])
                              Ttyp_constr "node/491"
                              []
                          ]
                    Tpat_alias "transitions/931"
                    pattern (src/LALR.ml[112,4034+4]..src/LALR.ml[112,4034+15])
                      Tpat_any
                  expression (src/LALR.ml[113,4079+2]..src/LALR.ml[113,4079+20])
                    extra
                      Texp_constraint
                      core_type (src/LALR.ml[112,4034+18]..src/LALR.ml[112,4034+42])
                        Ttyp_arrow
                        Nolabel
                        core_type (src/LALR.ml[112,4034+18]..src/LALR.ml[112,4034+22])
                          Ttyp_constr "node/491"
                          []
                        core_type (src/LALR.ml[112,4034+26]..src/LALR.ml[112,4034+42])
                          Ttyp_constr "Dune__exe!.Grammar.SymbolMap.t"
                          [
                            core_type (src/LALR.ml[112,4034+26]..src/LALR.ml[112,4034+30])
                              Ttyp_constr "node/491"
                              []
                          ]
                    Texp_ident "Dune__exe!.Lr0.outgoing_edges"
              ]
            structure_item (src/LALR.ml[119,4238+0]..src/LALR.ml[120,4268+3])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/LALR.ml[119,4238+4]..src/LALR.ml[119,4238+10])
                    Tpat_var "number/932"
                  expression (src/LALR.ml[119,4238+11]..src/LALR.ml[120,4268+3]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/LALR.ml[119,4238+12]..src/LALR.ml[119,4238+13])
                          extra
                            Tpat_extra_constraint
                            core_type (src/LALR.ml[119,4238+16]..src/LALR.ml[119,4238+20])
                              Ttyp_constr "node/491"
                              []
                          Tpat_alias "i/934"
                          pattern (src/LALR.ml[119,4238+12]..src/LALR.ml[119,4238+13])
                            Tpat_any
                        expression (src/LALR.ml[120,4268+2]..src/LALR.ml[120,4268+3])
                          extra
                            Texp_constraint
                            core_type (src/LALR.ml[119,4238+24]..src/LALR.ml[119,4238+27])
                              Ttyp_constr "int/1!"
                              []
                          Texp_ident "i/934"
                    ]
              ]
            structure_item (src/LALR.ml[122,4273+0]..src/LALR.ml[123,4301+3])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/LALR.ml[122,4273+4]..src/LALR.ml[122,4273+8])
                    Tpat_var "node/935"
                  expression (src/LALR.ml[122,4273+9]..src/LALR.ml[123,4301+3]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/LALR.ml[122,4273+10]..src/LALR.ml[122,4273+11])
                          extra
                            Tpat_extra_constraint
                            core_type (src/LALR.ml[122,4273+14]..src/LALR.ml[122,4273+17])
                              Ttyp_constr "int/1!"
                              []
                          Tpat_alias "i/937"
                          pattern (src/LALR.ml[122,4273+10]..src/LALR.ml[122,4273+11])
                            Tpat_any
                        expression (src/LALR.ml[123,4301+2]..src/LALR.ml[123,4301+3])
                          extra
                            Texp_constraint
                            core_type (src/LALR.ml[122,4273+21]..src/LALR.ml[122,4273+25])
                              Ttyp_constr "node/491"
                              []
                          Texp_ident "i/937"
                    ]
              ]
          ]
]

{<Dune__exe__LALR>
 "Run"[module] ->
   Abs<Dune__exe__LALR.30>
      (()/1,
       {
        "entry"[value] -> <Dune__exe__LALR.24>;
        "n"[value] -> <Dune__exe__LALR.20>;
        "node"[value] -> <Dune__exe__LALR.28>;
        "node"[type] -> <Dune__exe__LALR.1>;
        "number"[value] -> <Dune__exe__LALR.26>;
        "state"[value] -> <Dune__exe__LALR.23>;
        "transitions"[value] -> <Dune__exe__LALR.25>;
        });
 }

(let
  (Run/938 =
     (function */2513 is_a_functor
       (let
         (*/2500 =a */2513
          *match*/2512 = 0
          P/494 =
            (let (leq_join/493 = (field_imm 22 (global Dune__exe__Lr0!)))
              (makeblock 0 leq_join/493))
          G/713 =
            (let
              (foreach_root/497 =
                 (function f/499 : int
                   (apply
                     (field_imm 18
                       (field_imm 9 (global Dune__exe__Grammar!)))
                     (function _prod/551 node/552[int] : int
                       (apply f/499 node/552
                         (apply (field_imm 12 (global Dune__exe__Lr0!))
                           node/552)))
                     (field_imm 1 (global Dune__exe__Lr0!))))
               foreach_successor/587 =
                 (function node/589[int] state/590 f/591 : int
                   (apply
                     (field_imm 22
                       (field_imm 7 (global Dune__exe__Grammar!)))
                     (function symbol/640 successor_node/641[int] : int
                       (let
                         (successor_state/642 =
                            (apply (field_imm 14 (global Dune__exe__Lr0!))
                              symbol/640 state/590))
                         (apply f/591 successor_node/641 successor_state/642)))
                     (apply (field_imm 5 (global Dune__exe__Lr0!)) node/589))))
              (makeblock 0 foreach_root/497 foreach_successor/587))
          F/866 =
            (apply
              (apply
                (apply
                  (let
                    (let/2504 =
                       (field_imm 4 (global Vendored_fix__DataFlow!)))
                    (field_imm 4 (global Vendored_fix__DataFlow!)))
                  (let
                    (let/2502 = (global Dune__exe__Lr0!)
                     let/2503 =a (global Dune__exe__Lr0!))
                    (makeblock 0 (field_mut 0 let/2503))))
                P/494)
              G/713)
          n/867 =[int] (field_imm 0 (global Dune__exe__Lr0!))
          states/868 =
            (apply (field_imm 0 (global Stdlib__Array!)) n/867
              (function node/917[int]
                (apply (field_imm 4 (global Dune__exe__Option!))
                  (apply (field_imm 0 F/866) node/917))))
          state/929 =
            (apply
              (function prim/2506 prim/2505 stub
                (array.get[gen] prim/2506 prim/2505))
              states/868)
          entry/930 = (field_imm 1 (global Dune__exe__Lr0!))
          transitions/931 = (field_imm 5 (global Dune__exe__Lr0!))
          number/932 = (function i/934[int] : int i/934)
          node/935 = (function i/937[int] : int i/937))
         (makeblock 0 P/494 G/713 F/866 n/867 states/868 state/929 entry/930
           transitions/931 number/932 node/935))))
  (seq
    (setfield_ptr(root-init) 0 (global Dune__exe__LALR!)
      (function funarg/2514 is_a_functor stub
        (let (let/2515 = (apply Run/938 funarg/2514))
          (makeblock 0 (field_mut 3 let/2515) (field_mut 8 let/2515)
            (field_mut 9 let/2515) (field_mut 6 let/2515)
            (field_mut 7 let/2515) (field_mut 5 let/2515)))))
    0))
(let
  (Run/938 =
     (function */2513 is_a_functor
       (let
         (*match*/2512 = 0
          P/494 =
            (let (leq_join/493 = (field_imm 22 (global Dune__exe__Lr0!)))
              (makeblock 0 leq_join/493))
          G/713 =
            (let
              (foreach_root/497 =
                 (function f/499 : int
                   (apply
                     (field_imm 18
                       (field_imm 9 (global Dune__exe__Grammar!)))
                     (function _prod/551 node/552[int] : int
                       (apply f/499 node/552
                         (apply (field_imm 12 (global Dune__exe__Lr0!))
                           node/552)))
                     (field_imm 1 (global Dune__exe__Lr0!))))
               foreach_successor/587 =
                 (function node/589[int] state/590 f/591 : int
                   (apply
                     (field_imm 22
                       (field_imm 7 (global Dune__exe__Grammar!)))
                     (function symbol/640 successor_node/641[int] : int
                       (let
                         (successor_state/642 =
                            (apply (field_imm 14 (global Dune__exe__Lr0!))
                              symbol/640 state/590))
                         (apply f/591 successor_node/641 successor_state/642)))
                     (apply (field_imm 5 (global Dune__exe__Lr0!)) node/589))))
              (makeblock 0 foreach_root/497 foreach_successor/587))
          F/866 =
            (apply
              (apply
                (apply
                  (let
                    (let/2504 =
                       (field_imm 4 (global Vendored_fix__DataFlow!)))
                    (field_imm 4 (global Vendored_fix__DataFlow!)))
                  (let (let/2502 = (global Dune__exe__Lr0!))
                    (makeblock 0 (field_mut 0 (global Dune__exe__Lr0!)))))
                P/494)
              G/713)
          n/867 =[int] (field_imm 0 (global Dune__exe__Lr0!))
          states/868 =
            (apply (field_imm 0 (global Stdlib__Array!)) n/867
              (function node/917[int]
                (apply (field_imm 4 (global Dune__exe__Option!))
                  (apply (field_imm 0 F/866) node/917))))
          state/929 =
            (apply
              (function prim/2506 prim/2505 stub
                (array.get[gen] prim/2506 prim/2505))
              states/868)
          entry/930 = (field_imm 1 (global Dune__exe__Lr0!))
          transitions/931 = (field_imm 5 (global Dune__exe__Lr0!))
          number/932 = (function i/934[int] : int i/934)
          node/935 = (function i/937[int] : int i/937))
         (makeblock 0 P/494 G/713 F/866 n/867 states/868 state/929 entry/930
           transitions/931 number/932 node/935))))
  (seq
    (setfield_ptr(root-init) 0 (global Dune__exe__LALR!)
      (function funarg/2514 is_a_functor stub
        (let (let/2515 = (apply Run/938 funarg/2514))
          (makeblock 0 (field_mut 3 let/2515) (field_mut 8 let/2515)
            (field_mut 9 let/2515) (field_mut 6 let/2515)
            (field_mut 7 let/2515) (field_mut 5 let/2515)))))
    0))
