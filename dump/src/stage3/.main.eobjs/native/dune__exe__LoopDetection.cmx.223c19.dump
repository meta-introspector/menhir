[
  structure_item (src/LoopDetection.ml[14,1003+0]..[14,1003+12])
    Pstr_open Fresh
    module_expr (src/LoopDetection.ml[14,1003+5]..[14,1003+12])
      Pmod_ident "Grammar" (src/LoopDetection.ml[14,1003+5]..[14,1003+12])
  structure_item (src/LoopDetection.ml[16,1017+0]..[213,9015+3])
    Pstr_module
    "Run" (src/LoopDetection.ml[16,1017+7]..[16,1017+10])
      module_expr (src/LoopDetection.ml[16,1017+11]..[213,9015+3])
        Pmod_functor ()
        module_expr (src/LoopDetection.ml[16,1017+16]..[213,9015+3])
          Pmod_structure
          [
            structure_item (src/LoopDetection.ml[49,2606+0]..[51,2694+10])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LoopDetection.ml[49,2606+4]..[49,2606+19])
                    Ppat_var "nullable_suffix" (src/LoopDetection.ml[49,2606+4]..[49,2606+19])
                  expression (src/LoopDetection.ml[49,2606+20]..[51,2694+10]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LoopDetection.ml[49,2606+20]..[49,2606+24])
                      Ppat_var "prod" (src/LoopDetection.ml[49,2606+20]..[49,2606+24])
                    expression (src/LoopDetection.ml[49,2606+25]..[51,2694+10]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/LoopDetection.ml[49,2606+25]..[49,2606+26])
                        Ppat_var "i" (src/LoopDetection.ml[49,2606+25]..[49,2606+26])
                      expression (src/LoopDetection.ml[50,2635+2]..[51,2694+10])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/LoopDetection.ml[50,2635+6]..[50,2635+17])
                              Ppat_tuple
                              [
                                pattern (src/LoopDetection.ml[50,2635+6]..[50,2635+14])
                                  Ppat_var "nullable" (src/LoopDetection.ml[50,2635+6]..[50,2635+14])
                                pattern (src/LoopDetection.ml[50,2635+16]..[50,2635+17])
                                  Ppat_any
                              ]
                            expression (src/LoopDetection.ml[50,2635+20]..[50,2635+55])
                              Pexp_apply
                              expression (src/LoopDetection.ml[50,2635+20]..[50,2635+48])
                                Pexp_ident "Analysis.nullable_first_prod" (src/LoopDetection.ml[50,2635+20]..[50,2635+48])
                              [
                                <arg>
                                Nolabel
                                  expression (src/LoopDetection.ml[50,2635+49]..[50,2635+53])
                                    Pexp_ident "prod" (src/LoopDetection.ml[50,2635+49]..[50,2635+53])
                                <arg>
                                Nolabel
                                  expression (src/LoopDetection.ml[50,2635+54]..[50,2635+55])
                                    Pexp_ident "i" (src/LoopDetection.ml[50,2635+54]..[50,2635+55])
                              ]
                        ]
                        expression (src/LoopDetection.ml[51,2694+2]..[51,2694+10])
                          Pexp_ident "nullable" (src/LoopDetection.ml[51,2694+2]..[51,2694+10])
              ]
            structure_item (src/LoopDetection.ml[53,2706+0]..[74,3413+5])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LoopDetection.ml[53,2706+4]..[53,2706+14])
                    Ppat_var "successors" (src/LoopDetection.ml[53,2706+4]..[53,2706+14])
                  expression (src/LoopDetection.ml[54,2721+2]..[74,3413+5]) ghost
                    Pexp_fun
                    Labelled "require_nullable_suffix"
                    None
                    pattern (src/LoopDetection.ml[54,2721+3]..[54,2721+26])
                      Ppat_var "require_nullable_suffix" (src/LoopDetection.ml[54,2721+3]..[54,2721+26])
                    expression (src/LoopDetection.ml[55,2748+2]..[74,3413+5]) ghost
                      Pexp_fun
                      Labelled "require_nonempty_prefix"
                      None
                      pattern (src/LoopDetection.ml[55,2748+3]..[55,2748+26])
                        Ppat_var "require_nonempty_prefix" (src/LoopDetection.ml[55,2748+3]..[55,2748+26])
                      expression (src/LoopDetection.ml[56,2775+2]..[74,3413+5]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/LoopDetection.ml[56,2775+2]..[56,2775+53])
                          Ppat_constraint
                          pattern (src/LoopDetection.ml[56,2775+3]..[56,2775+8])
                            Ppat_var "yield" (src/LoopDetection.ml[56,2775+3]..[56,2775+8])
                          core_type (src/LoopDetection.ml[56,2775+11]..[56,2775+52])
                            Ptyp_arrow
                            Nolabel
                            core_type (src/LoopDetection.ml[56,2775+11]..[56,2775+27])
                              Ptyp_constr "Production.index" (src/LoopDetection.ml[56,2775+11]..[56,2775+27])
                              []
                            core_type (src/LoopDetection.ml[56,2775+31]..[56,2775+52])
                              Ptyp_arrow
                              Nolabel
                              core_type (src/LoopDetection.ml[56,2775+31]..[56,2775+44])
                                Ptyp_constr "Nonterminal.t" (src/LoopDetection.ml[56,2775+31]..[56,2775+44])
                                []
                              core_type (src/LoopDetection.ml[56,2775+48]..[56,2775+52])
                                Ptyp_constr "unit" (src/LoopDetection.ml[56,2775+48]..[56,2775+52])
                                []
                        expression (src/LoopDetection.ml[57,2829+2]..[74,3413+5]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/LoopDetection.ml[57,2829+2]..[57,2829+22])
                            Ppat_constraint
                            pattern (src/LoopDetection.ml[57,2829+3]..[57,2829+5])
                              Ppat_var "nt" (src/LoopDetection.ml[57,2829+3]..[57,2829+5])
                            core_type (src/LoopDetection.ml[57,2829+8]..[57,2829+21])
                              Ptyp_constr "Nonterminal.t" (src/LoopDetection.ml[57,2829+8]..[57,2829+21])
                              []
                          expression (src/LoopDetection.ml[57,2829+23]..[74,3413+5])
                            Pexp_constraint
                            expression (src/LoopDetection.ml[59,2861+2]..[74,3413+5])
                              Pexp_apply
                              expression (src/LoopDetection.ml[59,2861+2]..[59,2861+19])
                                Pexp_ident "Production.iternt" (src/LoopDetection.ml[59,2861+2]..[59,2861+19])
                              [
                                <arg>
                                Nolabel
                                  expression (src/LoopDetection.ml[59,2861+20]..[59,2861+22])
                                    Pexp_ident "nt" (src/LoopDetection.ml[59,2861+20]..[59,2861+22])
                                <arg>
                                Nolabel
                                  expression (src/LoopDetection.ml[59,2861+23]..[74,3413+5])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/LoopDetection.ml[59,2861+33]..[59,2861+37])
                                      Ppat_var "prod" (src/LoopDetection.ml[59,2861+33]..[59,2861+37])
                                    expression (src/LoopDetection.ml[60,2902+4]..[73,3404+8])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/LoopDetection.ml[60,2902+8]..[60,2902+11])
                                            Ppat_var "rhs" (src/LoopDetection.ml[60,2902+8]..[60,2902+11])
                                          expression (src/LoopDetection.ml[60,2902+14]..[60,2902+33])
                                            Pexp_apply
                                            expression (src/LoopDetection.ml[60,2902+14]..[60,2902+28])
                                              Pexp_ident "Production.rhs" (src/LoopDetection.ml[60,2902+14]..[60,2902+28])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/LoopDetection.ml[60,2902+29]..[60,2902+33])
                                                  Pexp_ident "prod" (src/LoopDetection.ml[60,2902+29]..[60,2902+33])
                                            ]
                                      ]
                                      expression (src/LoopDetection.ml[61,2939+4]..[73,3404+8])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/LoopDetection.ml[61,2939+8]..[61,2939+9])
                                              Ppat_var "n" (src/LoopDetection.ml[61,2939+8]..[61,2939+9])
                                            expression (src/LoopDetection.ml[61,2939+12]..[61,2939+28])
                                              Pexp_apply
                                              expression (src/LoopDetection.ml[61,2939+12]..[61,2939+24])
                                                Pexp_ident "Array.length" (src/LoopDetection.ml[61,2939+12]..[61,2939+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/LoopDetection.ml[61,2939+25]..[61,2939+28])
                                                    Pexp_ident "rhs" (src/LoopDetection.ml[61,2939+25]..[61,2939+28])
                                              ]
                                        ]
                                        expression (src/LoopDetection.ml[62,2971+4]..[73,3404+8])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/LoopDetection.ml[62,2971+8]..[62,2971+23])
                                                Ppat_var "nullable_prefix" (src/LoopDetection.ml[62,2971+8]..[62,2971+23])
                                              expression (src/LoopDetection.ml[62,2971+26]..[62,2971+34])
                                                Pexp_apply
                                                expression (src/LoopDetection.ml[62,2971+26]..[62,2971+29])
                                                  Pexp_ident "ref" (src/LoopDetection.ml[62,2971+26]..[62,2971+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/LoopDetection.ml[62,2971+30]..[62,2971+34])
                                                      Pexp_construct "true" (src/LoopDetection.ml[62,2971+30]..[62,2971+34])
                                                      None
                                                ]
                                          ]
                                          expression (src/LoopDetection.ml[63,3009+4]..[73,3404+8])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/LoopDetection.ml[63,3009+8]..[63,3009+9])
                                                  Ppat_var "i" (src/LoopDetection.ml[63,3009+8]..[63,3009+9])
                                                expression (src/LoopDetection.ml[63,3009+12]..[63,3009+17])
                                                  Pexp_apply
                                                  expression (src/LoopDetection.ml[63,3009+12]..[63,3009+15])
                                                    Pexp_ident "ref" (src/LoopDetection.ml[63,3009+12]..[63,3009+15])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/LoopDetection.ml[63,3009+16]..[63,3009+17])
                                                        Pexp_constant PConst_int (0,None)
                                                  ]
                                            ]
                                            expression (src/LoopDetection.ml[64,3030+4]..[73,3404+8])
                                              Pexp_while
                                              expression (src/LoopDetection.ml[64,3030+10]..[64,3030+36])
                                                Pexp_apply
                                                expression (src/LoopDetection.ml[64,3030+27]..[64,3030+29])
                                                  Pexp_ident "&&" (src/LoopDetection.ml[64,3030+27]..[64,3030+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/LoopDetection.ml[64,3030+10]..[64,3030+26])
                                                      Pexp_apply
                                                      expression (src/LoopDetection.ml[64,3030+10]..[64,3030+11])
                                                        Pexp_ident "!" (src/LoopDetection.ml[64,3030+10]..[64,3030+11])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/LoopDetection.ml[64,3030+11]..[64,3030+26])
                                                            Pexp_ident "nullable_prefix" (src/LoopDetection.ml[64,3030+11]..[64,3030+26])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (src/LoopDetection.ml[64,3030+30]..[64,3030+36])
                                                      Pexp_apply
                                                      expression (src/LoopDetection.ml[64,3030+33]..[64,3030+34])
                                                        Pexp_ident "<" (src/LoopDetection.ml[64,3030+33]..[64,3030+34])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/LoopDetection.ml[64,3030+30]..[64,3030+32])
                                                            Pexp_apply
                                                            expression (src/LoopDetection.ml[64,3030+30]..[64,3030+31])
                                                              Pexp_ident "!" (src/LoopDetection.ml[64,3030+30]..[64,3030+31])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/LoopDetection.ml[64,3030+31]..[64,3030+32])
                                                                  Pexp_ident "i" (src/LoopDetection.ml[64,3030+31]..[64,3030+32])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (src/LoopDetection.ml[64,3030+35]..[64,3030+36])
                                                            Pexp_ident "n" (src/LoopDetection.ml[64,3030+35]..[64,3030+36])
                                                      ]
                                                ]
                                              expression (src/LoopDetection.ml[65,3070+6]..[72,3353+50])
                                                Pexp_match
                                                expression (src/LoopDetection.ml[65,3070+12]..[65,3070+38])
                                                  Pexp_apply
                                                  expression (src/LoopDetection.ml[65,3070+12]..[65,3070+38]) ghost
                                                    Pexp_ident "Array.get" (src/LoopDetection.ml[65,3070+12]..[65,3070+38]) ghost
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/LoopDetection.ml[65,3070+12]..[65,3070+15])
                                                        Pexp_ident "rhs" (src/LoopDetection.ml[65,3070+12]..[65,3070+15])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/LoopDetection.ml[65,3070+17]..[65,3070+37])
                                                        Pexp_apply
                                                        expression (src/LoopDetection.ml[65,3070+17]..[65,3070+35])
                                                          Pexp_ident "Misc.postincrement" (src/LoopDetection.ml[65,3070+17]..[65,3070+35])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/LoopDetection.ml[65,3070+36]..[65,3070+37])
                                                              Pexp_ident "i" (src/LoopDetection.ml[65,3070+36]..[65,3070+37])
                                                        ]
                                                  ]
                                                [
                                                  <case>
                                                    pattern (src/LoopDetection.ml[66,3114+8]..[66,3114+18])
                                                      Ppat_construct "Symbol.T" (src/LoopDetection.ml[66,3114+8]..[66,3114+16])
                                                      Some
                                                        []
                                                        pattern (src/LoopDetection.ml[66,3114+17]..[66,3114+18])
                                                          Ppat_any
                                                    expression (src/LoopDetection.ml[67,3138+10]..[67,3138+34])
                                                      Pexp_apply
                                                      expression (src/LoopDetection.ml[67,3138+26]..[67,3138+28])
                                                        Pexp_ident ":=" (src/LoopDetection.ml[67,3138+26]..[67,3138+28])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/LoopDetection.ml[67,3138+10]..[67,3138+25])
                                                            Pexp_ident "nullable_prefix" (src/LoopDetection.ml[67,3138+10]..[67,3138+25])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/LoopDetection.ml[67,3138+29]..[67,3138+34])
                                                            Pexp_construct "false" (src/LoopDetection.ml[67,3138+29]..[67,3138+34])
                                                            None
                                                      ]
                                                  <case>
                                                    pattern (src/LoopDetection.ml[68,3173+8]..[68,3173+20])
                                                      Ppat_construct "Symbol.N" (src/LoopDetection.ml[68,3173+8]..[68,3173+16])
                                                      Some
                                                        []
                                                        pattern (src/LoopDetection.ml[68,3173+17]..[68,3173+20])
                                                          Ppat_var "nt'" (src/LoopDetection.ml[68,3173+17]..[68,3173+20])
                                                    expression (src/LoopDetection.ml[69,3197+10]..[72,3353+50])
                                                      Pexp_sequence
                                                      expression (src/LoopDetection.ml[69,3197+10]..[71,3325+26])
                                                        Pexp_ifthenelse
                                                        expression (src/LoopDetection.ml[69,3197+13]..[70,3267+52])
                                                          Pexp_apply
                                                          expression (src/LoopDetection.ml[70,3267+10]..[70,3267+12])
                                                            Pexp_ident "&&" (src/LoopDetection.ml[70,3267+10]..[70,3267+12])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/LoopDetection.ml[69,3197+13]..[69,3197+69])
                                                                Pexp_apply
                                                                expression (src/LoopDetection.ml[69,3197+42]..[69,3197+44])
                                                                  Pexp_ident "||" (src/LoopDetection.ml[69,3197+42]..[69,3197+44])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/LoopDetection.ml[69,3197+14]..[69,3197+41])
                                                                      Pexp_apply
                                                                      expression (src/LoopDetection.ml[69,3197+14]..[69,3197+17])
Pexp_ident "not" (src/LoopDetection.ml[69,3197+14]..[69,3197+17])
                                                                      [
<arg>
Nolabel
  expression (src/LoopDetection.ml[69,3197+18]..[69,3197+41])
    Pexp_ident "require_nullable_suffix" (src/LoopDetection.ml[69,3197+18]..[69,3197+41])
                                                                      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/LoopDetection.ml[69,3197+45]..[69,3197+68])
                                                                      Pexp_apply
                                                                      expression (src/LoopDetection.ml[69,3197+45]..[69,3197+60])
Pexp_ident "nullable_suffix" (src/LoopDetection.ml[69,3197+45]..[69,3197+60])
                                                                      [
<arg>
Nolabel
  expression (src/LoopDetection.ml[69,3197+61]..[69,3197+65])
    Pexp_ident "prod" (src/LoopDetection.ml[69,3197+61]..[69,3197+65])
<arg>
Nolabel
  expression (src/LoopDetection.ml[69,3197+66]..[69,3197+68])
    Pexp_apply
    expression (src/LoopDetection.ml[69,3197+66]..[69,3197+67])
      Pexp_ident "!" (src/LoopDetection.ml[69,3197+66]..[69,3197+67])
    [
      <arg>
      Nolabel
        expression (src/LoopDetection.ml[69,3197+67]..[69,3197+68])
          Pexp_ident "i" (src/LoopDetection.ml[69,3197+67]..[69,3197+68])
    ]
                                                                      ]
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (src/LoopDetection.ml[70,3267+13]..[70,3267+52])
                                                                Pexp_apply
                                                                expression (src/LoopDetection.ml[70,3267+42]..[70,3267+44])
                                                                  Pexp_ident "||" (src/LoopDetection.ml[70,3267+42]..[70,3267+44])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/LoopDetection.ml[70,3267+14]..[70,3267+41])
                                                                      Pexp_apply
                                                                      expression (src/LoopDetection.ml[70,3267+14]..[70,3267+17])
Pexp_ident "not" (src/LoopDetection.ml[70,3267+14]..[70,3267+17])
                                                                      [
<arg>
Nolabel
  expression (src/LoopDetection.ml[70,3267+18]..[70,3267+41])
    Pexp_ident "require_nonempty_prefix" (src/LoopDetection.ml[70,3267+18]..[70,3267+41])
                                                                      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/LoopDetection.ml[70,3267+45]..[70,3267+51])
                                                                      Pexp_apply
                                                                      expression (src/LoopDetection.ml[70,3267+48]..[70,3267+49])
Pexp_ident ">" (src/LoopDetection.ml[70,3267+48]..[70,3267+49])
                                                                      [
<arg>
Nolabel
  expression (src/LoopDetection.ml[70,3267+45]..[70,3267+47])
    Pexp_apply
    expression (src/LoopDetection.ml[70,3267+45]..[70,3267+46])
      Pexp_ident "!" (src/LoopDetection.ml[70,3267+45]..[70,3267+46])
    [
      <arg>
      Nolabel
        expression (src/LoopDetection.ml[70,3267+46]..[70,3267+47])
          Pexp_ident "i" (src/LoopDetection.ml[70,3267+46]..[70,3267+47])
    ]
<arg>
Nolabel
  expression (src/LoopDetection.ml[70,3267+50]..[70,3267+51])
    Pexp_constant PConst_int (1,None)
                                                                      ]
                                                                ]
                                                          ]
                                                        expression (src/LoopDetection.ml[71,3325+12]..[71,3325+26])
                                                          Pexp_apply
                                                          expression (src/LoopDetection.ml[71,3325+12]..[71,3325+17])
                                                            Pexp_ident "yield" (src/LoopDetection.ml[71,3325+12]..[71,3325+17])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/LoopDetection.ml[71,3325+18]..[71,3325+22])
                                                                Pexp_ident "prod" (src/LoopDetection.ml[71,3325+18]..[71,3325+22])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/LoopDetection.ml[71,3325+23]..[71,3325+26])
                                                                Pexp_ident "nt'" (src/LoopDetection.ml[71,3325+23]..[71,3325+26])
                                                          ]
                                                        None
                                                      expression (src/LoopDetection.ml[72,3353+10]..[72,3353+50])
                                                        Pexp_apply
                                                        expression (src/LoopDetection.ml[72,3353+26]..[72,3353+28])
                                                          Pexp_ident ":=" (src/LoopDetection.ml[72,3353+26]..[72,3353+28])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/LoopDetection.ml[72,3353+10]..[72,3353+25])
                                                              Pexp_ident "nullable_prefix" (src/LoopDetection.ml[72,3353+10]..[72,3353+25])
                                                          <arg>
                                                          Nolabel
                                                            expression (src/LoopDetection.ml[72,3353+29]..[72,3353+50])
                                                              Pexp_apply
                                                              expression (src/LoopDetection.ml[72,3353+29]..[72,3353+46])
                                                                Pexp_ident "Analysis.nullable" (src/LoopDetection.ml[72,3353+29]..[72,3353+46])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/LoopDetection.ml[72,3353+47]..[72,3353+50])
                                                                    Pexp_ident "nt'" (src/LoopDetection.ml[72,3353+47]..[72,3353+50])
                                                              ]
                                                        ]
                                                ]
                              ]
                            core_type (src/LoopDetection.ml[57,2829+25]..[57,2829+29])
                              Ptyp_constr "unit" (src/LoopDetection.ml[57,2829+25]..[57,2829+29])
                              []
              ]
            structure_item (src/LoopDetection.ml[78,3485+0]..[79,3517+44])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LoopDetection.ml[78,3485+4]..[78,3485+9])
                    Ppat_var "adapt" (src/LoopDetection.ml[78,3485+4]..[78,3485+9])
                  expression (src/LoopDetection.ml[78,3485+10]..[79,3517+44]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LoopDetection.ml[78,3485+10]..[78,3485+20])
                      Ppat_var "successors" (src/LoopDetection.ml[78,3485+10]..[78,3485+20])
                    expression (src/LoopDetection.ml[78,3485+21]..[79,3517+44]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/LoopDetection.ml[78,3485+21]..[78,3485+26])
                        Ppat_var "yield" (src/LoopDetection.ml[78,3485+21]..[78,3485+26])
                      expression (src/LoopDetection.ml[78,3485+27]..[79,3517+44]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/LoopDetection.ml[78,3485+27]..[78,3485+29])
                          Ppat_var "nt" (src/LoopDetection.ml[78,3485+27]..[78,3485+29])
                        expression (src/LoopDetection.ml[79,3517+2]..[79,3517+44])
                          Pexp_apply
                          expression (src/LoopDetection.ml[79,3517+2]..[79,3517+12])
                            Pexp_ident "successors" (src/LoopDetection.ml[79,3517+2]..[79,3517+12])
                          [
                            <arg>
                            Nolabel
                              expression (src/LoopDetection.ml[79,3517+13]..[79,3517+41])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/LoopDetection.ml[79,3517+18]..[79,3517+23])
                                  Ppat_var "_prod" (src/LoopDetection.ml[79,3517+18]..[79,3517+23])
                                expression (src/LoopDetection.ml[79,3517+24]..[79,3517+40]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/LoopDetection.ml[79,3517+24]..[79,3517+27])
                                    Ppat_var "nt'" (src/LoopDetection.ml[79,3517+24]..[79,3517+27])
                                  expression (src/LoopDetection.ml[79,3517+31]..[79,3517+40])
                                    Pexp_apply
                                    expression (src/LoopDetection.ml[79,3517+31]..[79,3517+36])
                                      Pexp_ident "yield" (src/LoopDetection.ml[79,3517+31]..[79,3517+36])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/LoopDetection.ml[79,3517+37]..[79,3517+40])
                                          Pexp_ident "nt'" (src/LoopDetection.ml[79,3517+37]..[79,3517+40])
                                    ]
                            <arg>
                            Nolabel
                              expression (src/LoopDetection.ml[79,3517+42]..[79,3517+44])
                                Pexp_ident "nt" (src/LoopDetection.ml[79,3517+42]..[79,3517+44])
                          ]
              ]
            structure_item (src/LoopDetection.ml[83,3637+0]..[98,4178+5])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LoopDetection.ml[83,3637+4]..[83,3637+14])
                    Ppat_var "show_cycle" (src/LoopDetection.ml[83,3637+4]..[83,3637+14])
                  expression (src/LoopDetection.ml[83,3637+15]..[98,4178+5]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LoopDetection.ml[83,3637+15]..[83,3637+18])
                      Ppat_var "nts" (src/LoopDetection.ml[83,3637+15]..[83,3637+18])
                    expression (src/LoopDetection.ml[83,3637+19]..[98,4178+5]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/LoopDetection.ml[83,3637+19]..[83,3637+21])
                        Ppat_var "nt" (src/LoopDetection.ml[83,3637+19]..[83,3637+21])
                      expression (src/LoopDetection.ml[84,3661+2]..[98,4178+5])
                        Pexp_sequence
                        expression (src/LoopDetection.ml[84,3661+2]..[84,3661+27])
                          Pexp_assert
                          expression (src/LoopDetection.ml[84,3661+9]..[84,3661+27])
                            Pexp_apply
                            expression (src/LoopDetection.ml[84,3661+22]..[84,3661+23])
                              Pexp_ident "=" (src/LoopDetection.ml[84,3661+22]..[84,3661+23])
                            [
                              <arg>
                              Nolabel
                                expression (src/LoopDetection.ml[84,3661+10]..[84,3661+21])
                                  Pexp_apply
                                  expression (src/LoopDetection.ml[84,3661+10]..[84,3661+17])
                                    Pexp_ident "List.hd" (src/LoopDetection.ml[84,3661+10]..[84,3661+17])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/LoopDetection.ml[84,3661+18]..[84,3661+21])
                                        Pexp_ident "nts" (src/LoopDetection.ml[84,3661+18]..[84,3661+21])
                                  ]
                              <arg>
                              Nolabel
                                expression (src/LoopDetection.ml[84,3661+24]..[84,3661+26])
                                  Pexp_ident "nt" (src/LoopDetection.ml[84,3661+24]..[84,3661+26])
                            ]
                        expression (src/LoopDetection.ml[85,3690+2]..[98,4178+5])
                          Pexp_ifthenelse
                          expression (src/LoopDetection.ml[85,3690+5]..[85,3690+24])
                            Pexp_apply
                            expression (src/LoopDetection.ml[85,3690+21]..[85,3690+22])
                              Pexp_ident "=" (src/LoopDetection.ml[85,3690+21]..[85,3690+22])
                            [
                              <arg>
                              Nolabel
                                expression (src/LoopDetection.ml[85,3690+5]..[85,3690+20])
                                  Pexp_apply
                                  expression (src/LoopDetection.ml[85,3690+5]..[85,3690+16])
                                    Pexp_ident "List.length" (src/LoopDetection.ml[85,3690+5]..[85,3690+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/LoopDetection.ml[85,3690+17]..[85,3690+20])
                                        Pexp_ident "nts" (src/LoopDetection.ml[85,3690+17]..[85,3690+20])
                                  ]
                              <arg>
                              Nolabel
                                expression (src/LoopDetection.ml[85,3690+23]..[85,3690+24])
                                  Pexp_constant PConst_int (1,None)
                            ]
                          expression (src/LoopDetection.ml[85,3690+30]..[85,3690+32])
                            Pexp_constant PConst_string("",(src/LoopDetection.ml[85,3690+31]..[85,3690+31]),None)
                          Some
                            expression (src/LoopDetection.ml[85,3690+38]..[98,4178+5])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/LoopDetection.ml[86,3734+8]..[86,3734+11])
                                    Ppat_var "nts" (src/LoopDetection.ml[86,3734+8]..[86,3734+11])
                                  expression (src/LoopDetection.ml[86,3734+14]..[86,3734+40])
                                    Pexp_apply
                                    expression (src/LoopDetection.ml[86,3734+14]..[86,3734+27])
                                      Pexp_ident "Array.of_list" (src/LoopDetection.ml[86,3734+14]..[86,3734+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/LoopDetection.ml[86,3734+28]..[86,3734+40])
                                          Pexp_apply
                                          expression (src/LoopDetection.ml[86,3734+33]..[86,3734+34])
                                            Pexp_ident "@" (src/LoopDetection.ml[86,3734+33]..[86,3734+34])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/LoopDetection.ml[86,3734+29]..[86,3734+32])
                                                Pexp_ident "nts" (src/LoopDetection.ml[86,3734+29]..[86,3734+32])
                                            <arg>
                                            Nolabel
                                              expression (src/LoopDetection.ml[86,3734+35]..[86,3734+39])
                                                Pexp_construct "::" (src/LoopDetection.ml[86,3734+36]..[86,3734+39]) ghost
                                                Some
                                                  expression (src/LoopDetection.ml[86,3734+36]..[86,3734+39]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (src/LoopDetection.ml[86,3734+36]..[86,3734+38])
                                                        Pexp_ident "nt" (src/LoopDetection.ml[86,3734+36]..[86,3734+38])
                                                      expression (src/LoopDetection.ml[86,3734+38]..[86,3734+39]) ghost
                                                        Pexp_construct "[]" (src/LoopDetection.ml[86,3734+38]..[86,3734+39]) ghost
                                                        None
                                                    ]
                                          ]
                                    ]
                              ]
                              expression (src/LoopDetection.ml[87,3778+4]..[97,4170+7])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/LoopDetection.ml[87,3778+8]..[87,3778+9])
                                      Ppat_var "i" (src/LoopDetection.ml[87,3778+8]..[87,3778+9])
                                    expression (src/LoopDetection.ml[87,3778+12]..[87,3778+17])
                                      Pexp_apply
                                      expression (src/LoopDetection.ml[87,3778+12]..[87,3778+15])
                                        Pexp_ident "ref" (src/LoopDetection.ml[87,3778+12]..[87,3778+15])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/LoopDetection.ml[87,3778+16]..[87,3778+17])
                                            Pexp_constant PConst_int (0,None)
                                      ]
                                ]
                                expression (src/LoopDetection.ml[88,3799+4]..[97,4170+7])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/LoopDetection.ml[88,3799+8]..[88,3799+12])
                                        Ppat_var "next" (src/LoopDetection.ml[88,3799+8]..[88,3799+12])
                                      expression (src/LoopDetection.ml[88,3799+13]..[88,3799+68]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/LoopDetection.ml[88,3799+13]..[88,3799+15])
                                          Ppat_construct "()" (src/LoopDetection.ml[88,3799+13]..[88,3799+15])
                                          None
                                        expression (src/LoopDetection.ml[88,3799+18]..[88,3799+68])
                                          Pexp_apply
                                          expression (src/LoopDetection.ml[88,3799+18]..[88,3799+35])
                                            Pexp_ident "Nonterminal.print" (src/LoopDetection.ml[88,3799+18]..[88,3799+35])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/LoopDetection.ml[88,3799+36]..[88,3799+41])
                                                Pexp_construct "false" (src/LoopDetection.ml[88,3799+36]..[88,3799+41])
                                                None
                                            <arg>
                                            Nolabel
                                              expression (src/LoopDetection.ml[88,3799+42]..[88,3799+68])
                                                Pexp_apply
                                                expression (src/LoopDetection.ml[88,3799+42]..[88,3799+68]) ghost
                                                  Pexp_ident "Array.get" (src/LoopDetection.ml[88,3799+42]..[88,3799+68]) ghost
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/LoopDetection.ml[88,3799+42]..[88,3799+45])
                                                      Pexp_ident "nts" (src/LoopDetection.ml[88,3799+42]..[88,3799+45])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/LoopDetection.ml[88,3799+47]..[88,3799+67])
                                                      Pexp_apply
                                                      expression (src/LoopDetection.ml[88,3799+47]..[88,3799+65])
                                                        Pexp_ident "Misc.postincrement" (src/LoopDetection.ml[88,3799+47]..[88,3799+65])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/LoopDetection.ml[88,3799+66]..[88,3799+67])
                                                            Pexp_ident "i" (src/LoopDetection.ml[88,3799+66]..[88,3799+67])
                                                      ]
                                                ]
                                          ]
                                    <def>
                                      pattern (src/LoopDetection.ml[89,3868+8]..[89,3868+16])
                                        Ppat_var "finished" (src/LoopDetection.ml[89,3868+8]..[89,3868+16])
                                      expression (src/LoopDetection.ml[89,3868+17]..[89,3868+43]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/LoopDetection.ml[89,3868+17]..[89,3868+19])
                                          Ppat_construct "()" (src/LoopDetection.ml[89,3868+17]..[89,3868+19])
                                          None
                                        expression (src/LoopDetection.ml[89,3868+22]..[89,3868+43])
                                          Pexp_apply
                                          expression (src/LoopDetection.ml[89,3868+25]..[89,3868+26])
                                            Pexp_ident "=" (src/LoopDetection.ml[89,3868+25]..[89,3868+26])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/LoopDetection.ml[89,3868+22]..[89,3868+24])
                                                Pexp_apply
                                                expression (src/LoopDetection.ml[89,3868+22]..[89,3868+23])
                                                  Pexp_ident "!" (src/LoopDetection.ml[89,3868+22]..[89,3868+23])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/LoopDetection.ml[89,3868+23]..[89,3868+24])
                                                      Pexp_ident "i" (src/LoopDetection.ml[89,3868+23]..[89,3868+24])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (src/LoopDetection.ml[89,3868+27]..[89,3868+43])
                                                Pexp_apply
                                                expression (src/LoopDetection.ml[89,3868+27]..[89,3868+39])
                                                  Pexp_ident "Array.length" (src/LoopDetection.ml[89,3868+27]..[89,3868+39])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/LoopDetection.ml[89,3868+40]..[89,3868+43])
                                                      Pexp_ident "nts" (src/LoopDetection.ml[89,3868+40]..[89,3868+43])
                                                ]
                                          ]
                                  ]
                                  expression (src/LoopDetection.ml[90,3915+4]..[97,4170+7])
                                    Pexp_apply
                                    expression (src/LoopDetection.ml[90,3915+4]..[90,3915+20])
                                      Pexp_ident "Misc.with_buffer" (src/LoopDetection.ml[90,3915+4]..[90,3915+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/LoopDetection.ml[90,3915+21]..[90,3915+25])
                                          Pexp_constant PConst_int (1024,None)
                                      <arg>
                                      Nolabel
                                        expression (src/LoopDetection.ml[90,3915+26]..[97,4170+7])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (src/LoopDetection.ml[90,3915+36]..[90,3915+37])
                                            Ppat_var "b" (src/LoopDetection.ml[90,3915+36]..[90,3915+37])
                                          expression (src/LoopDetection.ml[91,3956+6]..[96,4159+10])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/LoopDetection.ml[91,3956+10]..[91,3956+13])
                                                  Ppat_var "out" (src/LoopDetection.ml[91,3956+10]..[91,3956+13])
                                                expression (src/LoopDetection.ml[91,3956+14]..[91,3956+46]) ghost
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (src/LoopDetection.ml[91,3956+14]..[91,3956+20])
                                                    Ppat_var "format" (src/LoopDetection.ml[91,3956+14]..[91,3956+20])
                                                  expression (src/LoopDetection.ml[91,3956+23]..[91,3956+46])
                                                    Pexp_apply
                                                    expression (src/LoopDetection.ml[91,3956+23]..[91,3956+37])
                                                      Pexp_ident "Printf.bprintf" (src/LoopDetection.ml[91,3956+23]..[91,3956+37])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/LoopDetection.ml[91,3956+38]..[91,3956+39])
                                                          Pexp_ident "b" (src/LoopDetection.ml[91,3956+38]..[91,3956+39])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/LoopDetection.ml[91,3956+40]..[91,3956+46])
                                                          Pexp_ident "format" (src/LoopDetection.ml[91,3956+40]..[91,3956+46])
                                                    ]
                                            ]
                                            expression (src/LoopDetection.ml[92,4006+6]..[96,4159+10])
                                              Pexp_sequence
                                              expression (src/LoopDetection.ml[92,4006+6]..[92,4006+23])
                                                Pexp_apply
                                                expression (src/LoopDetection.ml[92,4006+6]..[92,4006+9])
                                                  Pexp_ident "out" (src/LoopDetection.ml[92,4006+6]..[92,4006+9])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/LoopDetection.ml[92,4006+10]..[92,4006+14])
                                                      Pexp_constant PConst_string("%s",(src/LoopDetection.ml[92,4006+11]..[92,4006+13]),None)
                                                  <arg>
                                                  Nolabel
                                                    expression (src/LoopDetection.ml[92,4006+15]..[92,4006+23])
                                                      Pexp_apply
                                                      expression (src/LoopDetection.ml[92,4006+16]..[92,4006+20])
                                                        Pexp_ident "next" (src/LoopDetection.ml[92,4006+16]..[92,4006+20])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/LoopDetection.ml[92,4006+20]..[92,4006+22])
                                                            Pexp_construct "()" (src/LoopDetection.ml[92,4006+20]..[92,4006+22])
                                                            None
                                                      ]
                                                ]
                                              expression (src/LoopDetection.ml[93,4031+6]..[96,4159+10])
                                                Pexp_while
                                                expression (src/LoopDetection.ml[93,4031+12]..[93,4031+28])
                                                  Pexp_apply
                                                  expression (src/LoopDetection.ml[93,4031+12]..[93,4031+15])
                                                    Pexp_ident "not" (src/LoopDetection.ml[93,4031+12]..[93,4031+15])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/LoopDetection.ml[93,4031+16]..[93,4031+28])
                                                        Pexp_apply
                                                        expression (src/LoopDetection.ml[93,4031+17]..[93,4031+25])
                                                          Pexp_ident "finished" (src/LoopDetection.ml[93,4031+17]..[93,4031+25])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/LoopDetection.ml[93,4031+25]..[93,4031+27])
                                                              Pexp_construct "()" (src/LoopDetection.ml[93,4031+25]..[93,4031+27])
                                                              None
                                                        ]
                                                  ]
                                                expression (src/LoopDetection.ml[94,4063+8]..[95,4102+56])
                                                  Pexp_sequence
                                                  expression (src/LoopDetection.ml[94,4063+8]..[94,4063+37])
                                                    Pexp_apply
                                                    expression (src/LoopDetection.ml[94,4063+8]..[94,4063+11])
                                                      Pexp_ident "out" (src/LoopDetection.ml[94,4063+8]..[94,4063+11])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/LoopDetection.ml[94,4063+12]..[94,4063+28])
                                                          Pexp_constant PConst_string(" expands to %s",(src/LoopDetection.ml[94,4063+13]..[94,4063+27]),None)
                                                      <arg>
                                                      Nolabel
                                                        expression (src/LoopDetection.ml[94,4063+29]..[94,4063+37])
                                                          Pexp_apply
                                                          expression (src/LoopDetection.ml[94,4063+30]..[94,4063+34])
                                                            Pexp_ident "next" (src/LoopDetection.ml[94,4063+30]..[94,4063+34])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/LoopDetection.ml[94,4063+34]..[94,4063+36])
                                                                Pexp_construct "()" (src/LoopDetection.ml[94,4063+34]..[94,4063+36])
                                                                None
                                                          ]
                                                    ]
                                                  expression (src/LoopDetection.ml[95,4102+8]..[95,4102+56])
                                                    Pexp_ifthenelse
                                                    expression (src/LoopDetection.ml[95,4102+11]..[95,4102+21])
                                                      Pexp_apply
                                                      expression (src/LoopDetection.ml[95,4102+11]..[95,4102+19])
                                                        Pexp_ident "finished" (src/LoopDetection.ml[95,4102+11]..[95,4102+19])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/LoopDetection.ml[95,4102+19]..[95,4102+21])
                                                            Pexp_construct "()" (src/LoopDetection.ml[95,4102+19]..[95,4102+21])
                                                            None
                                                      ]
                                                    expression (src/LoopDetection.ml[95,4102+27]..[95,4102+36])
                                                      Pexp_apply
                                                      expression (src/LoopDetection.ml[95,4102+27]..[95,4102+30])
                                                        Pexp_ident "out" (src/LoopDetection.ml[95,4102+27]..[95,4102+30])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/LoopDetection.ml[95,4102+31]..[95,4102+36])
                                                            Pexp_constant PConst_string(".\n",(src/LoopDetection.ml[95,4102+32]..[95,4102+35]),None)
                                                      ]
                                                    Some
                                                      expression (src/LoopDetection.ml[95,4102+42]..[95,4102+56])
                                                        Pexp_apply
                                                        expression (src/LoopDetection.ml[95,4102+42]..[95,4102+45])
                                                          Pexp_ident "out" (src/LoopDetection.ml[95,4102+42]..[95,4102+45])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/LoopDetection.ml[95,4102+46]..[95,4102+56])
                                                              Pexp_constant PConst_string(",\nwhich",(src/LoopDetection.ml[95,4102+47]..[95,4102+55]),None)
                                                        ]
                                    ]
              ]
            structure_item (src/LoopDetection.ml[100,4185+0]..[107,4454+23])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LoopDetection.ml[100,4185+4]..[100,4185+8])
                    Ppat_var "fail" (src/LoopDetection.ml[100,4185+4]..[100,4185+8])
                  expression (src/LoopDetection.ml[100,4185+9]..[107,4454+23]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LoopDetection.ml[100,4185+9]..[100,4185+12])
                      Ppat_var "nts" (src/LoopDetection.ml[100,4185+9]..[100,4185+12])
                    expression (src/LoopDetection.ml[100,4185+13]..[107,4454+23]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/LoopDetection.ml[100,4185+13]..[100,4185+15])
                        Ppat_var "nt" (src/LoopDetection.ml[100,4185+13]..[100,4185+15])
                      expression (src/LoopDetection.ml[101,4203+2]..[107,4454+23])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/LoopDetection.ml[101,4203+6]..[101,4203+15])
                              Ppat_var "positions" (src/LoopDetection.ml[101,4203+6]..[101,4203+15])
                            expression (src/LoopDetection.ml[101,4203+18]..[101,4203+67])
                              Pexp_apply
                              expression (src/LoopDetection.ml[101,4203+18]..[101,4203+30])
                                Pexp_ident "List.flatten" (src/LoopDetection.ml[101,4203+18]..[101,4203+30])
                              [
                                <arg>
                                Nolabel
                                  expression (src/LoopDetection.ml[101,4203+31]..[101,4203+67])
                                    Pexp_apply
                                    expression (src/LoopDetection.ml[101,4203+32]..[101,4203+40])
                                      Pexp_ident "List.map" (src/LoopDetection.ml[101,4203+32]..[101,4203+40])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/LoopDetection.ml[101,4203+41]..[101,4203+62])
                                          Pexp_ident "Nonterminal.positions" (src/LoopDetection.ml[101,4203+41]..[101,4203+62])
                                      <arg>
                                      Nolabel
                                        expression (src/LoopDetection.ml[101,4203+63]..[101,4203+66])
                                          Pexp_ident "nts" (src/LoopDetection.ml[101,4203+63]..[101,4203+66])
                                    ]
                              ]
                        ]
                        expression (src/LoopDetection.ml[102,4274+2]..[107,4454+23])
                          Pexp_apply
                          expression (src/LoopDetection.ml[102,4274+2]..[102,4274+13])
                            Pexp_ident "Error.error" (src/LoopDetection.ml[102,4274+2]..[102,4274+13])
                          [
                            <arg>
                            Nolabel
                              expression (src/LoopDetection.ml[102,4274+14]..[102,4274+23])
                                Pexp_ident "positions" (src/LoopDetection.ml[102,4274+14]..[102,4274+23])
                            <arg>
                            Nolabel
                              expression (src/LoopDetection.ml[103,4298+4]..[105,4384+36])
                                Pexp_constant PConst_string("the grammar is cyclic:\nthe nonterminal symbol %s expands to itself.\n%sA cyclic grammar is ambiguous.",(src/LoopDetection.ml[103,4298+5]..[105,4384+35]),None)
                            <arg>
                            Nolabel
                              expression (src/LoopDetection.ml[106,4421+4]..[106,4421+32])
                                Pexp_apply
                                expression (src/LoopDetection.ml[106,4421+5]..[106,4421+22])
                                  Pexp_ident "Nonterminal.print" (src/LoopDetection.ml[106,4421+5]..[106,4421+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/LoopDetection.ml[106,4421+23]..[106,4421+28])
                                      Pexp_construct "false" (src/LoopDetection.ml[106,4421+23]..[106,4421+28])
                                      None
                                  <arg>
                                  Nolabel
                                    expression (src/LoopDetection.ml[106,4421+29]..[106,4421+31])
                                      Pexp_ident "nt" (src/LoopDetection.ml[106,4421+29]..[106,4421+31])
                                ]
                            <arg>
                            Nolabel
                              expression (src/LoopDetection.ml[107,4454+4]..[107,4454+23])
                                Pexp_apply
                                expression (src/LoopDetection.ml[107,4454+5]..[107,4454+15])
                                  Pexp_ident "show_cycle" (src/LoopDetection.ml[107,4454+5]..[107,4454+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/LoopDetection.ml[107,4454+16]..[107,4454+19])
                                      Pexp_ident "nts" (src/LoopDetection.ml[107,4454+16]..[107,4454+19])
                                  <arg>
                                  Nolabel
                                    expression (src/LoopDetection.ml[107,4454+20]..[107,4454+22])
                                      Pexp_ident "nt" (src/LoopDetection.ml[107,4454+20]..[107,4454+22])
                                ]
                          ]
              ]
            structure_item (src/LoopDetection.ml[118,4990+0]..[128,5274+15])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LoopDetection.ml[118,4990+4]..[118,4990+6])
                    Ppat_construct "()" (src/LoopDetection.ml[118,4990+4]..[118,4990+6])
                    None
                  expression (src/LoopDetection.ml[119,4999+2]..[128,5274+15])
                    Pexp_letmodule "M" (src/LoopDetection.ml[119,4999+13]..[119,4999+14])
                    module_expr (src/LoopDetection.ml[119,4999+17]..[119,4999+49])
                      Pmod_apply
                      module_expr (src/LoopDetection.ml[119,4999+17]..[119,4999+36])
                        Pmod_ident "Fix.Memoize.ForType" (src/LoopDetection.ml[119,4999+17]..[119,4999+36])
                      module_expr (src/LoopDetection.ml[119,4999+37]..[119,4999+48])
                        Pmod_ident "Nonterminal" (src/LoopDetection.ml[119,4999+37]..[119,4999+48])
                    expression (src/LoopDetection.ml[120,5052+2]..[128,5274+15])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/LoopDetection.ml[120,5052+6]..[120,5052+18])
                            Ppat_var "successors_R" (src/LoopDetection.ml[120,5052+6]..[120,5052+18])
                          expression (src/LoopDetection.ml[121,5073+4]..[122,5149+12])
                            Pexp_apply
                            expression (src/LoopDetection.ml[122,5149+4]..[122,5149+6])
                              Pexp_ident "|>" (src/LoopDetection.ml[122,5149+4]..[122,5149+6])
                            [
                              <arg>
                              Nolabel
                                expression (src/LoopDetection.ml[121,5073+4]..[121,5073+75])
                                  Pexp_apply
                                  expression (src/LoopDetection.ml[121,5073+4]..[121,5073+14])
                                    Pexp_ident "successors" (src/LoopDetection.ml[121,5073+4]..[121,5073+14])
                                  [
                                    <arg>
                                    Labelled "require_nullable_suffix"
                                      expression (src/LoopDetection.ml[121,5073+40]..[121,5073+44])
                                        Pexp_construct "true" (src/LoopDetection.ml[121,5073+40]..[121,5073+44])
                                        None
                                    <arg>
                                    Labelled "require_nonempty_prefix"
                                      expression (src/LoopDetection.ml[121,5073+70]..[121,5073+75])
                                        Pexp_construct "false" (src/LoopDetection.ml[121,5073+70]..[121,5073+75])
                                        None
                                  ]
                              <arg>
                              Nolabel
                                expression (src/LoopDetection.ml[122,5149+7]..[122,5149+12])
                                  Pexp_ident "adapt" (src/LoopDetection.ml[122,5149+7]..[122,5149+12])
                            ]
                      ]
                      expression (src/LoopDetection.ml[124,5167+2]..[128,5274+15])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/LoopDetection.ml[124,5167+6]..[124,5167+11])
                              Ppat_var "check" (src/LoopDetection.ml[124,5167+6]..[124,5167+11])
                            expression (src/LoopDetection.ml[124,5167+14]..[124,5167+42])
                              Pexp_apply
                              expression (src/LoopDetection.ml[124,5167+14]..[124,5167+29])
                                Pexp_ident "M.defensive_fix" (src/LoopDetection.ml[124,5167+14]..[124,5167+29])
                              [
                                <arg>
                                Nolabel
                                  expression (src/LoopDetection.ml[124,5167+30]..[124,5167+42])
                                    Pexp_ident "successors_R" (src/LoopDetection.ml[124,5167+30]..[124,5167+42])
                              ]
                        ]
                        expression (src/LoopDetection.ml[125,5213+2]..[128,5274+15])
                          Pexp_try
                          expression (src/LoopDetection.ml[126,5219+4]..[126,5219+26])
                            Pexp_apply
                            expression (src/LoopDetection.ml[126,5219+4]..[126,5219+20])
                              Pexp_ident "Nonterminal.iter" (src/LoopDetection.ml[126,5219+4]..[126,5219+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/LoopDetection.ml[126,5219+21]..[126,5219+26])
                                  Pexp_ident "check" (src/LoopDetection.ml[126,5219+21]..[126,5219+26])
                            ]
                          [
                            <case>
                              pattern (src/LoopDetection.ml[127,5246+7]..[127,5246+24])
                                Ppat_construct "M.Cycle" (src/LoopDetection.ml[127,5246+7]..[127,5246+14])
                                Some
                                  []
                                  pattern (src/LoopDetection.ml[127,5246+15]..[127,5246+24])
                                    Ppat_tuple
                                    [
                                      pattern (src/LoopDetection.ml[127,5246+16]..[127,5246+19])
                                        Ppat_var "nts" (src/LoopDetection.ml[127,5246+16]..[127,5246+19])
                                      pattern (src/LoopDetection.ml[127,5246+21]..[127,5246+23])
                                        Ppat_var "nt" (src/LoopDetection.ml[127,5246+21]..[127,5246+23])
                                    ]
                              expression (src/LoopDetection.ml[128,5274+4]..[128,5274+15])
                                Pexp_apply
                                expression (src/LoopDetection.ml[128,5274+4]..[128,5274+8])
                                  Pexp_ident "fail" (src/LoopDetection.ml[128,5274+4]..[128,5274+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/LoopDetection.ml[128,5274+9]..[128,5274+12])
                                      Pexp_ident "nts" (src/LoopDetection.ml[128,5274+9]..[128,5274+12])
                                  <arg>
                                  Nolabel
                                    expression (src/LoopDetection.ml[128,5274+13]..[128,5274+15])
                                      Pexp_ident "nt" (src/LoopDetection.ml[128,5274+13]..[128,5274+15])
                                ]
                          ]
              ]
            structure_item (src/LoopDetection.ml[163,7045+0]..[175,7545+32])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LoopDetection.ml[163,7045+4]..[163,7045+8])
                    Ppat_var "fail" (src/LoopDetection.ml[163,7045+4]..[163,7045+8])
                  expression (src/LoopDetection.ml[163,7045+9]..[175,7545+32]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LoopDetection.ml[163,7045+9]..[163,7045+13])
                      Ppat_var "prod" (src/LoopDetection.ml[163,7045+9]..[163,7045+13])
                    expression (src/LoopDetection.ml[164,7061+2]..[175,7545+32])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/LoopDetection.ml[164,7061+6]..[164,7061+13])
                            Ppat_tuple
                            [
                              pattern (src/LoopDetection.ml[164,7061+6]..[164,7061+8])
                                Ppat_var "nt" (src/LoopDetection.ml[164,7061+6]..[164,7061+8])
                              pattern (src/LoopDetection.ml[164,7061+10]..[164,7061+13])
                                Ppat_var "rhs" (src/LoopDetection.ml[164,7061+10]..[164,7061+13])
                            ]
                          expression (src/LoopDetection.ml[164,7061+16]..[164,7061+35])
                            Pexp_apply
                            expression (src/LoopDetection.ml[164,7061+16]..[164,7061+30])
                              Pexp_ident "Production.def" (src/LoopDetection.ml[164,7061+16]..[164,7061+30])
                            [
                              <arg>
                              Nolabel
                                expression (src/LoopDetection.ml[164,7061+31]..[164,7061+35])
                                  Pexp_ident "prod" (src/LoopDetection.ml[164,7061+31]..[164,7061+35])
                            ]
                      ]
                      expression (src/LoopDetection.ml[165,7100+2]..[175,7545+32])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/LoopDetection.ml[165,7100+6]..[165,7100+15])
                              Ppat_var "positions" (src/LoopDetection.ml[165,7100+6]..[165,7100+15])
                            expression (src/LoopDetection.ml[165,7100+18]..[165,7100+43])
                              Pexp_apply
                              expression (src/LoopDetection.ml[165,7100+18]..[165,7100+38])
                                Pexp_ident "Production.positions" (src/LoopDetection.ml[165,7100+18]..[165,7100+38])
                              [
                                <arg>
                                Nolabel
                                  expression (src/LoopDetection.ml[165,7100+39]..[165,7100+43])
                                    Pexp_ident "prod" (src/LoopDetection.ml[165,7100+39]..[165,7100+43])
                              ]
                        ]
                        expression (src/LoopDetection.ml[166,7147+2]..[175,7545+32])
                          Pexp_apply
                          expression (src/LoopDetection.ml[166,7147+2]..[166,7147+13])
                            Pexp_ident "Error.error" (src/LoopDetection.ml[166,7147+2]..[166,7147+13])
                          [
                            <arg>
                            Nolabel
                              expression (src/LoopDetection.ml[166,7147+14]..[166,7147+23])
                                Pexp_ident "positions" (src/LoopDetection.ml[166,7147+14]..[166,7147+23])
                            <arg>
                            Nolabel
                              expression (src/LoopDetection.ml[167,7171+4]..[172,7430+59])
                                Pexp_constant PConst_string("the grammar exhibits hidden left recursion: in the production\n%s,\nthe nonterminal symbol %s is nullable,\nand the remainder of the right-hand side expands to a sentential form\nthat begins with the nonterminal symbol %s.\nThis implies that the grammar is not LR(k) for any k.",(src/LoopDetection.ml[167,7171+5]..[172,7430+58]),None)
                            <arg>
                            Nolabel
                              expression (src/LoopDetection.ml[173,7490+4]..[173,7490+27])
                                Pexp_apply
                                expression (src/LoopDetection.ml[173,7490+5]..[173,7490+21])
                                  Pexp_ident "Production.print" (src/LoopDetection.ml[173,7490+5]..[173,7490+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/LoopDetection.ml[173,7490+22]..[173,7490+26])
                                      Pexp_ident "prod" (src/LoopDetection.ml[173,7490+22]..[173,7490+26])
                                ]
                            <arg>
                            Nolabel
                              expression (src/LoopDetection.ml[174,7518+4]..[174,7518+26])
                                Pexp_apply
                                expression (src/LoopDetection.ml[174,7518+5]..[174,7518+17])
                                  Pexp_ident "Symbol.print" (src/LoopDetection.ml[174,7518+5]..[174,7518+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/LoopDetection.ml[174,7518+18]..[174,7518+25])
                                      Pexp_apply
                                      expression (src/LoopDetection.ml[174,7518+18]..[174,7518+25]) ghost
                                        Pexp_ident "Array.get" (src/LoopDetection.ml[174,7518+18]..[174,7518+25]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/LoopDetection.ml[174,7518+18]..[174,7518+21])
                                            Pexp_ident "rhs" (src/LoopDetection.ml[174,7518+18]..[174,7518+21])
                                        <arg>
                                        Nolabel
                                          expression (src/LoopDetection.ml[174,7518+23]..[174,7518+24])
                                            Pexp_constant PConst_int (0,None)
                                      ]
                                ]
                            <arg>
                            Nolabel
                              expression (src/LoopDetection.ml[175,7545+4]..[175,7545+32])
                                Pexp_apply
                                expression (src/LoopDetection.ml[175,7545+5]..[175,7545+17])
                                  Pexp_ident "Symbol.print" (src/LoopDetection.ml[175,7545+5]..[175,7545+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/LoopDetection.ml[175,7545+18]..[175,7545+31])
                                      Pexp_construct "Symbol.N" (src/LoopDetection.ml[175,7545+19]..[175,7545+27])
                                      Some
                                        expression (src/LoopDetection.ml[175,7545+28]..[175,7545+30])
                                          Pexp_ident "nt" (src/LoopDetection.ml[175,7545+28]..[175,7545+30])
                                ]
                          ]
              ]
            structure_item (src/LoopDetection.ml[184,8029+0]..[206,8879+5])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LoopDetection.ml[184,8029+4]..[184,8029+6])
                    Ppat_construct "()" (src/LoopDetection.ml[184,8029+4]..[184,8029+6])
                    None
                  expression (src/LoopDetection.ml[185,8038+2]..[206,8879+5])
                    Pexp_letmodule "T" (src/LoopDetection.ml[185,8038+13]..[185,8038+14])
                    module_expr (src/LoopDetection.ml[185,8038+17]..[194,8358+6])
                      Pmod_apply
                      module_expr (src/LoopDetection.ml[185,8038+17]..[185,8038+27])
                        Pmod_ident "Tarjan.Run" (src/LoopDetection.ml[185,8038+17]..[185,8038+27])
                      module_expr (src/LoopDetection.ml[185,8038+29]..[194,8358+5])
                        Pmod_structure
                        [
                          structure_item (src/LoopDetection.ml[186,8074+4]..[186,8074+29])
                            Pstr_type Rec
                            [
                              type_declaration "node" (src/LoopDetection.ml[186,8074+9]..[186,8074+13]) (src/LoopDetection.ml[186,8074+4]..[186,8074+29])
                                ptype_params =
                                  []
                                ptype_cstrs =
                                  []
                                ptype_kind =
                                  Ptype_abstract
                                ptype_private = Public
                                ptype_manifest =
                                  Some
                                    core_type (src/LoopDetection.ml[186,8074+16]..[186,8074+29])
                                      Ptyp_constr "Nonterminal.t" (src/LoopDetection.ml[186,8074+16]..[186,8074+29])
                                      []
                            ]
                          structure_item (src/LoopDetection.ml[187,8104+4]..[187,8104+25])
                            Pstr_value Nonrec
                            [
                              <def>
                                pattern (src/LoopDetection.ml[187,8104+8]..[187,8104+9])
                                  Ppat_var "n" (src/LoopDetection.ml[187,8104+8]..[187,8104+9])
                                expression (src/LoopDetection.ml[187,8104+12]..[187,8104+25])
                                  Pexp_ident "Nonterminal.n" (src/LoopDetection.ml[187,8104+12]..[187,8104+25])
                            ]
                          structure_item (src/LoopDetection.ml[188,8130+4]..[188,8130+31])
                            Pstr_value Nonrec
                            [
                              <def>
                                pattern (src/LoopDetection.ml[188,8130+8]..[188,8130+13])
                                  Ppat_var "index" (src/LoopDetection.ml[188,8130+8]..[188,8130+13])
                                expression (src/LoopDetection.ml[188,8130+16]..[188,8130+31])
                                  Pexp_ident "Nonterminal.n2i" (src/LoopDetection.ml[188,8130+16]..[188,8130+31])
                            ]
                          structure_item (src/LoopDetection.ml[189,8162+4]..[189,8162+31])
                            Pstr_value Nonrec
                            [
                              <def>
                                pattern (src/LoopDetection.ml[189,8162+8]..[189,8162+12])
                                  Ppat_var "iter" (src/LoopDetection.ml[189,8162+8]..[189,8162+12])
                                expression (src/LoopDetection.ml[189,8162+15]..[189,8162+31])
                                  Pexp_ident "Nonterminal.iter" (src/LoopDetection.ml[189,8162+15]..[189,8162+31])
                            ]
                          structure_item (src/LoopDetection.ml[191,8243+4]..[193,8343+14])
                            Pstr_value Nonrec
                            [
                              <def>
                                pattern (src/LoopDetection.ml[191,8243+8]..[191,8243+18])
                                  Ppat_var "successors" (src/LoopDetection.ml[191,8243+8]..[191,8243+18])
                                expression (src/LoopDetection.ml[192,8264+6]..[193,8343+14])
                                  Pexp_apply
                                  expression (src/LoopDetection.ml[193,8343+6]..[193,8343+8])
                                    Pexp_ident "|>" (src/LoopDetection.ml[193,8343+6]..[193,8343+8])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/LoopDetection.ml[192,8264+6]..[192,8264+78])
                                        Pexp_apply
                                        expression (src/LoopDetection.ml[192,8264+6]..[192,8264+16])
                                          Pexp_ident "successors" (src/LoopDetection.ml[192,8264+6]..[192,8264+16])
                                        [
                                          <arg>
                                          Labelled "require_nullable_suffix"
                                            expression (src/LoopDetection.ml[192,8264+42]..[192,8264+47])
                                              Pexp_construct "false" (src/LoopDetection.ml[192,8264+42]..[192,8264+47])
                                              None
                                          <arg>
                                          Labelled "require_nonempty_prefix"
                                            expression (src/LoopDetection.ml[192,8264+73]..[192,8264+78])
                                              Pexp_construct "false" (src/LoopDetection.ml[192,8264+73]..[192,8264+78])
                                              None
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/LoopDetection.ml[193,8343+9]..[193,8343+14])
                                        Pexp_ident "adapt" (src/LoopDetection.ml[193,8343+9]..[193,8343+14])
                                  ]
                            ]
                        ]
                    expression (src/LoopDetection.ml[196,8415+2]..[206,8879+5])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/LoopDetection.ml[196,8415+6]..[196,8415+18])
                            Ppat_var "successors_H" (src/LoopDetection.ml[196,8415+6]..[196,8415+18])
                          expression (src/LoopDetection.ml[197,8436+4]..[197,8436+75])
                            Pexp_apply
                            expression (src/LoopDetection.ml[197,8436+4]..[197,8436+14])
                              Pexp_ident "successors" (src/LoopDetection.ml[197,8436+4]..[197,8436+14])
                            [
                              <arg>
                              Labelled "require_nullable_suffix"
                                expression (src/LoopDetection.ml[197,8436+40]..[197,8436+45])
                                  Pexp_construct "false" (src/LoopDetection.ml[197,8436+40]..[197,8436+45])
                                  None
                              <arg>
                              Labelled "require_nonempty_prefix"
                                expression (src/LoopDetection.ml[197,8436+71]..[197,8436+75])
                                  Pexp_construct "true" (src/LoopDetection.ml[197,8436+71]..[197,8436+75])
                                  None
                            ]
                      ]
                      expression (src/LoopDetection.ml[199,8564+2]..[206,8879+5])
                        Pexp_apply
                        expression (src/LoopDetection.ml[199,8564+2]..[199,8564+18])
                          Pexp_ident "Nonterminal.iter" (src/LoopDetection.ml[199,8564+2]..[199,8564+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/LoopDetection.ml[199,8564+19]..[206,8879+5])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/LoopDetection.ml[199,8564+29]..[199,8564+31])
                                Ppat_var "nt" (src/LoopDetection.ml[199,8564+29]..[199,8564+31])
                              expression (src/LoopDetection.ml[200,8599+4]..[205,8871+7])
                                Pexp_apply
                                expression (src/LoopDetection.ml[200,8599+7]..[200,8599+9])
                                  Pexp_ident "|>" (src/LoopDetection.ml[200,8599+7]..[200,8599+9])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/LoopDetection.ml[200,8599+4]..[200,8599+6])
                                      Pexp_ident "nt" (src/LoopDetection.ml[200,8599+4]..[200,8599+6])
                                  <arg>
                                  Nolabel
                                    expression (src/LoopDetection.ml[200,8599+10]..[205,8871+7])
                                      Pexp_apply
                                      expression (src/LoopDetection.ml[200,8599+10]..[200,8599+22])
                                        Pexp_ident "successors_H" (src/LoopDetection.ml[200,8599+10]..[200,8599+22])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/LoopDetection.ml[200,8599+23]..[205,8871+7])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (src/LoopDetection.ml[200,8599+33]..[200,8599+37])
                                              Ppat_var "prod" (src/LoopDetection.ml[200,8599+33]..[200,8599+37])
                                            expression (src/LoopDetection.ml[200,8599+38]..[204,8853+17]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (src/LoopDetection.ml[200,8599+38]..[200,8599+41])
                                                Ppat_var "nt'" (src/LoopDetection.ml[200,8599+38]..[200,8599+41])
                                              expression (src/LoopDetection.ml[203,8796+6]..[204,8853+17])
                                                Pexp_ifthenelse
                                                expression (src/LoopDetection.ml[203,8796+9]..[203,8796+51])
                                                  Pexp_apply
                                                  expression (src/LoopDetection.ml[203,8796+29]..[203,8796+30])
                                                    Pexp_ident "=" (src/LoopDetection.ml[203,8796+29]..[203,8796+30])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/LoopDetection.ml[203,8796+9]..[203,8796+28])
                                                        Pexp_apply
                                                        expression (src/LoopDetection.ml[203,8796+9]..[203,8796+25])
                                                          Pexp_ident "T.representative" (src/LoopDetection.ml[203,8796+9]..[203,8796+25])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/LoopDetection.ml[203,8796+26]..[203,8796+28])
                                                              Pexp_ident "nt" (src/LoopDetection.ml[203,8796+26]..[203,8796+28])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (src/LoopDetection.ml[203,8796+31]..[203,8796+51])
                                                        Pexp_apply
                                                        expression (src/LoopDetection.ml[203,8796+31]..[203,8796+47])
                                                          Pexp_ident "T.representative" (src/LoopDetection.ml[203,8796+31]..[203,8796+47])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/LoopDetection.ml[203,8796+48]..[203,8796+51])
                                                              Pexp_ident "nt'" (src/LoopDetection.ml[203,8796+48]..[203,8796+51])
                                                        ]
                                                  ]
                                                expression (src/LoopDetection.ml[204,8853+8]..[204,8853+17])
                                                  Pexp_apply
                                                  expression (src/LoopDetection.ml[204,8853+8]..[204,8853+12])
                                                    Pexp_ident "fail" (src/LoopDetection.ml[204,8853+8]..[204,8853+12])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/LoopDetection.ml[204,8853+13]..[204,8853+17])
                                                        Pexp_ident "prod" (src/LoopDetection.ml[204,8853+13]..[204,8853+17])
                                                  ]
                                                None
                                      ]
                                ]
                        ]
              ]
            structure_item (src/LoopDetection.ml[210,8968+0]..[211,8977+36])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LoopDetection.ml[210,8968+4]..[210,8968+6])
                    Ppat_construct "()" (src/LoopDetection.ml[210,8968+4]..[210,8968+6])
                    None
                  expression (src/LoopDetection.ml[211,8977+2]..[211,8977+36])
                    Pexp_apply
                    expression (src/LoopDetection.ml[211,8977+2]..[211,8977+11])
                      Pexp_ident "Time.tick" (src/LoopDetection.ml[211,8977+2]..[211,8977+11])
                    [
                      <arg>
                      Nolabel
                        expression (src/LoopDetection.ml[211,8977+12]..[211,8977+36])
                          Pexp_constant PConst_string("Running loop detection",(src/LoopDetection.ml[211,8977+13]..[211,8977+35]),None)
                    ]
              ]
          ]
]

open Grammar
module Run() =
  struct
    let nullable_suffix prod i =
      let (nullable, _) = Analysis.nullable_first_prod prod i in nullable
    let successors ~require_nullable_suffix  ~require_nonempty_prefix 
      (yield : Production.index -> Nonterminal.t -> unit)
      (nt : Nonterminal.t) =
      (Production.iternt nt
         (fun prod ->
            let rhs = Production.rhs prod in
            let n = Array.length rhs in
            let nullable_prefix = ref true in
            let i = ref 0 in
            while (!nullable_prefix) && ((!i) < n) do
              match rhs.(Misc.postincrement i) with
              | Symbol.T _ -> nullable_prefix := false
              | Symbol.N nt' ->
                  (if
                     ((not require_nullable_suffix) ||
                        (nullable_suffix prod (!i)))
                       && ((not require_nonempty_prefix) || ((!i) > 1))
                   then yield prod nt';
                   nullable_prefix := (Analysis.nullable nt'))
              done) : unit)
    let adapt successors yield nt =
      successors (fun _prod -> fun nt' -> yield nt') nt
    let show_cycle nts nt =
      assert ((List.hd nts) = nt);
      if (List.length nts) = 1
      then ""
      else
        (let nts = Array.of_list (nts @ [nt]) in
         let i = ref 0 in
         let next () = Nonterminal.print false (nts.(Misc.postincrement i))
         and finished () = (!i) = (Array.length nts) in
         Misc.with_buffer 1024
           (fun b ->
              let out format = Printf.bprintf b format in
              out "%s" (next ());
              while not (finished ()) do
                (out " expands to %s" (next ());
                 if finished () then out ".\n" else out ",\nwhich")
                done))
    let fail nts nt =
      let positions = List.flatten (List.map Nonterminal.positions nts) in
      Error.error positions
        "the grammar is cyclic:\nthe nonterminal symbol %s expands to itself.\n%sA cyclic grammar is ambiguous."
        (Nonterminal.print false nt) (show_cycle nts nt)
    let () =
      let module M = (Fix.Memoize.ForType)(Nonterminal) in
        let successors_R =
          (successors ~require_nullable_suffix:true
             ~require_nonempty_prefix:false)
            |> adapt in
        let check = M.defensive_fix successors_R in
        try Nonterminal.iter check with | M.Cycle (nts, nt) -> fail nts nt
    let fail prod =
      let (nt, rhs) = Production.def prod in
      let positions = Production.positions prod in
      Error.error positions
        "the grammar exhibits hidden left recursion: in the production\n%s,\nthe nonterminal symbol %s is nullable,\nand the remainder of the right-hand side expands to a sentential form\nthat begins with the nonterminal symbol %s.\nThis implies that the grammar is not LR(k) for any k."
        (Production.print prod) (Symbol.print (rhs.(0)))
        (Symbol.print (Symbol.N nt))
    let () =
      let module T =
        (Tarjan.Run)(struct
                       type node = Nonterminal.t
                       let n = Nonterminal.n
                       let index = Nonterminal.n2i
                       let iter = Nonterminal.iter
                       let successors =
                         (successors ~require_nullable_suffix:false
                            ~require_nonempty_prefix:false)
                           |> adapt
                     end) in
        let successors_H =
          successors ~require_nullable_suffix:false
            ~require_nonempty_prefix:true in
        Nonterminal.iter
          (fun nt ->
             nt |>
               (successors_H
                  (fun prod ->
                     fun nt' ->
                       if (T.representative nt) = (T.representative nt')
                       then fail prod)))
    let () = Time.tick "Running loop detection"
  end
[
  structure_item (src/LoopDetection.ml[14,1003+0]..src/LoopDetection.ml[14,1003+12])
    Tstr_open Fresh
    module_expr (src/LoopDetection.ml[14,1003+5]..src/LoopDetection.ml[14,1003+12])
      Tmod_ident "Dune__exe!.Grammar"
  structure_item (src/LoopDetection.ml[16,1017+0]..src/LoopDetection.ml[213,9015+3])
    Tstr_module
    Run/1090
      module_expr (src/LoopDetection.ml[16,1017+11]..src/LoopDetection.ml[213,9015+3])
        Tmod_functor ()
        module_expr (src/LoopDetection.ml[16,1017+16]..src/LoopDetection.ml[213,9015+3])
          module_expr (src/LoopDetection.ml[16,1017+16]..src/LoopDetection.ml[213,9015+3])
            Tmod_structure
            [
              structure_item (src/LoopDetection.ml[49,2606+0]..src/LoopDetection.ml[51,2694+10])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LoopDetection.ml[49,2606+4]..src/LoopDetection.ml[49,2606+19])
                      Tpat_var "nullable_suffix/414"
                    expression (src/LoopDetection.ml[49,2606+20]..src/LoopDetection.ml[51,2694+10]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/LoopDetection.ml[49,2606+20]..src/LoopDetection.ml[49,2606+24])
                            Tpat_var "prod/416"
                          expression (src/LoopDetection.ml[49,2606+25]..src/LoopDetection.ml[51,2694+10]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/LoopDetection.ml[49,2606+25]..src/LoopDetection.ml[49,2606+26])
                                  Tpat_var "i/417"
                                expression (src/LoopDetection.ml[50,2635+2]..src/LoopDetection.ml[51,2694+10])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/LoopDetection.ml[50,2635+6]..src/LoopDetection.ml[50,2635+17])
                                        Tpat_tuple
                                        [
                                          pattern (src/LoopDetection.ml[50,2635+6]..src/LoopDetection.ml[50,2635+14])
                                            Tpat_var "nullable/418"
                                          pattern (src/LoopDetection.ml[50,2635+16]..src/LoopDetection.ml[50,2635+17])
                                            Tpat_any
                                        ]
                                      expression (src/LoopDetection.ml[50,2635+20]..src/LoopDetection.ml[50,2635+55])
                                        Texp_apply
                                        expression (src/LoopDetection.ml[50,2635+20]..src/LoopDetection.ml[50,2635+48])
                                          Texp_ident "Dune__exe!.Grammar.Analysis.nullable_first_prod"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/LoopDetection.ml[50,2635+49]..src/LoopDetection.ml[50,2635+53])
                                              Texp_ident "prod/416"
                                          <arg>
                                            Nolabel
                                            expression (src/LoopDetection.ml[50,2635+54]..src/LoopDetection.ml[50,2635+55])
                                              Texp_ident "i/417"
                                        ]
                                  ]
                                  expression (src/LoopDetection.ml[51,2694+2]..src/LoopDetection.ml[51,2694+10])
                                    Texp_ident "nullable/418"
                            ]
                      ]
                ]
              structure_item (src/LoopDetection.ml[53,2706+0]..src/LoopDetection.ml[74,3413+5])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LoopDetection.ml[53,2706+4]..src/LoopDetection.ml[53,2706+14])
                      Tpat_var "successors/483"
                    expression (src/LoopDetection.ml[54,2721+2]..src/LoopDetection.ml[74,3413+5]) ghost
                      Texp_function
                      Labelled "require_nullable_suffix"
                      [
                        <case>
                          pattern (src/LoopDetection.ml[54,2721+3]..src/LoopDetection.ml[54,2721+26])
                            Tpat_var "require_nullable_suffix/485"
                          expression (src/LoopDetection.ml[55,2748+2]..src/LoopDetection.ml[74,3413+5]) ghost
                            Texp_function
                            Labelled "require_nonempty_prefix"
                            [
                              <case>
                                pattern (src/LoopDetection.ml[55,2748+3]..src/LoopDetection.ml[55,2748+26])
                                  Tpat_var "require_nonempty_prefix/486"
                                expression (src/LoopDetection.ml[56,2775+2]..src/LoopDetection.ml[74,3413+5]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/LoopDetection.ml[56,2775+3]..src/LoopDetection.ml[56,2775+8])
                                        extra
                                          Tpat_extra_constraint
                                          core_type (src/LoopDetection.ml[56,2775+11]..src/LoopDetection.ml[56,2775+52])
                                            Ttyp_arrow
                                            Nolabel
                                            core_type (src/LoopDetection.ml[56,2775+11]..src/LoopDetection.ml[56,2775+27])
                                              Ttyp_constr "Dune__exe!.Grammar.Production.index"
                                              []
                                            core_type (src/LoopDetection.ml[56,2775+31]..src/LoopDetection.ml[56,2775+52])
                                              Ttyp_arrow
                                              Nolabel
                                              core_type (src/LoopDetection.ml[56,2775+31]..src/LoopDetection.ml[56,2775+44])
                                                Ttyp_constr "Dune__exe!.Grammar.Nonterminal.t"
                                                []
                                              core_type (src/LoopDetection.ml[56,2775+48]..src/LoopDetection.ml[56,2775+52])
                                                Ttyp_constr "unit/6!"
                                                []
                                        Tpat_alias "yield/541"
                                        pattern (src/LoopDetection.ml[56,2775+3]..src/LoopDetection.ml[56,2775+8])
                                          Tpat_any
                                      expression (src/LoopDetection.ml[57,2829+2]..src/LoopDetection.ml[74,3413+5]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/LoopDetection.ml[57,2829+3]..src/LoopDetection.ml[57,2829+5])
                                              extra
                                                Tpat_extra_constraint
                                                core_type (src/LoopDetection.ml[57,2829+8]..src/LoopDetection.ml[57,2829+21])
                                                  Ttyp_constr "Dune__exe!.Grammar.Nonterminal.t"
                                                  []
                                              Tpat_alias "nt/542"
                                              pattern (src/LoopDetection.ml[57,2829+3]..src/LoopDetection.ml[57,2829+5])
                                                Tpat_any
                                            expression (src/LoopDetection.ml[59,2861+2]..src/LoopDetection.ml[74,3413+5])
                                              extra
                                                Texp_constraint
                                                core_type (src/LoopDetection.ml[57,2829+25]..src/LoopDetection.ml[57,2829+29])
                                                  Ttyp_constr "unit/6!"
                                                  []
                                              Texp_apply
                                              expression (src/LoopDetection.ml[59,2861+2]..src/LoopDetection.ml[59,2861+19])
                                                Texp_ident "Dune__exe!.Grammar.Production.iternt"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/LoopDetection.ml[59,2861+20]..src/LoopDetection.ml[59,2861+22])
                                                    Texp_ident "nt/542"
                                                <arg>
                                                  Nolabel
                                                  expression (src/LoopDetection.ml[59,2861+23]..src/LoopDetection.ml[74,3413+5])
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (src/LoopDetection.ml[59,2861+33]..src/LoopDetection.ml[59,2861+37])
                                                          Tpat_var "prod/563"
                                                        expression (src/LoopDetection.ml[60,2902+4]..src/LoopDetection.ml[73,3404+8])
                                                          Texp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (src/LoopDetection.ml[60,2902+8]..src/LoopDetection.ml[60,2902+11])
                                                                Tpat_var "rhs/564"
                                                              expression (src/LoopDetection.ml[60,2902+14]..src/LoopDetection.ml[60,2902+33])
                                                                Texp_apply
                                                                expression (src/LoopDetection.ml[60,2902+14]..src/LoopDetection.ml[60,2902+28])
                                                                  Texp_ident "Dune__exe!.Grammar.Production.rhs"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/LoopDetection.ml[60,2902+29]..src/LoopDetection.ml[60,2902+33])
                                                                      Texp_ident "prod/563"
                                                                ]
                                                          ]
                                                          expression (src/LoopDetection.ml[61,2939+4]..src/LoopDetection.ml[73,3404+8])
                                                            Texp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (src/LoopDetection.ml[61,2939+8]..src/LoopDetection.ml[61,2939+9])
                                                                  Tpat_var "n/565"
                                                                expression (src/LoopDetection.ml[61,2939+12]..src/LoopDetection.ml[61,2939+28])
                                                                  Texp_apply
                                                                  expression (src/LoopDetection.ml[61,2939+12]..src/LoopDetection.ml[61,2939+24])
                                                                    Texp_ident "Stdlib!.Array.length"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/LoopDetection.ml[61,2939+25]..src/LoopDetection.ml[61,2939+28])
                                                                        Texp_ident "rhs/564"
                                                                  ]
                                                            ]
                                                            expression (src/LoopDetection.ml[62,2971+4]..src/LoopDetection.ml[73,3404+8])
                                                              Texp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (src/LoopDetection.ml[62,2971+8]..src/LoopDetection.ml[62,2971+23])
                                                                    Tpat_var "nullable_prefix/614"
                                                                  expression (src/LoopDetection.ml[62,2971+26]..src/LoopDetection.ml[62,2971+34])
                                                                    Texp_apply
                                                                    expression (src/LoopDetection.ml[62,2971+26]..src/LoopDetection.ml[62,2971+29])
                                                                      Texp_ident "Stdlib!.ref"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/LoopDetection.ml[62,2971+30]..src/LoopDetection.ml[62,2971+34])
                                                                          Texp_construct "true"
                                                                          []
                                                                    ]
                                                              ]
                                                              expression (src/LoopDetection.ml[63,3009+4]..src/LoopDetection.ml[73,3404+8])
                                                                Texp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (src/LoopDetection.ml[63,3009+8]..src/LoopDetection.ml[63,3009+9])
                                                                      Tpat_var "i/615"
                                                                    expression (src/LoopDetection.ml[63,3009+12]..src/LoopDetection.ml[63,3009+17])
                                                                      Texp_apply
                                                                      expression (src/LoopDetection.ml[63,3009+12]..src/LoopDetection.ml[63,3009+15])
                                                                        Texp_ident "Stdlib!.ref"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/LoopDetection.ml[63,3009+16]..src/LoopDetection.ml[63,3009+17])
                                                                            Texp_constant Const_int 0
                                                                      ]
                                                                ]
                                                                expression (src/LoopDetection.ml[64,3030+4]..src/LoopDetection.ml[73,3404+8])
                                                                  Texp_while
                                                                  expression (src/LoopDetection.ml[64,3030+10]..src/LoopDetection.ml[64,3030+36])
                                                                    Texp_apply
                                                                    expression (src/LoopDetection.ml[64,3030+27]..src/LoopDetection.ml[64,3030+29])
                                                                      Texp_ident "Stdlib!.&&"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/LoopDetection.ml[64,3030+10]..src/LoopDetection.ml[64,3030+26])
                                                                          Texp_apply
                                                                          expression (src/LoopDetection.ml[64,3030+10]..src/LoopDetection.ml[64,3030+11])
                                                                            Texp_ident "Stdlib!.!"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/LoopDetection.ml[64,3030+11]..src/LoopDetection.ml[64,3030+26])
                                                                                Texp_ident "nullable_prefix/614"
                                                                          ]
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/LoopDetection.ml[64,3030+30]..src/LoopDetection.ml[64,3030+36])
                                                                          Texp_apply
                                                                          expression (src/LoopDetection.ml[64,3030+33]..src/LoopDetection.ml[64,3030+34])
                                                                            Texp_ident "Stdlib!.<"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/LoopDetection.ml[64,3030+30]..src/LoopDetection.ml[64,3030+32])
                                                                                Texp_apply
                                                                                expression (src/LoopDetection.ml[64,3030+30]..src/LoopDetection.ml[64,3030+31])
                                                                                  Texp_ident "Stdlib!.!"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/LoopDetection.ml[64,3030+31]..src/LoopDetection.ml[64,3030+32])
                                                                                      Texp_ident "i/615"
                                                                                ]
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/LoopDetection.ml[64,3030+35]..src/LoopDetection.ml[64,3030+36])
                                                                                Texp_ident "n/565"
                                                                          ]
                                                                    ]
                                                                  expression (src/LoopDetection.ml[65,3070+6]..src/LoopDetection.ml[72,3353+50])
                                                                    Texp_match
                                                                    expression (src/LoopDetection.ml[65,3070+12]..src/LoopDetection.ml[65,3070+38])
                                                                      Texp_apply
                                                                      expression (src/LoopDetection.ml[65,3070+12]..src/LoopDetection.ml[65,3070+38]) ghost
                                                                        Texp_ident "Stdlib!.Array.get"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/LoopDetection.ml[65,3070+12]..src/LoopDetection.ml[65,3070+15])
                                                                            Texp_ident "rhs/564"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/LoopDetection.ml[65,3070+17]..src/LoopDetection.ml[65,3070+37])
                                                                            Texp_apply
                                                                            expression (src/LoopDetection.ml[65,3070+17]..src/LoopDetection.ml[65,3070+35])
                                                                              Texp_ident "Dune__exe!.Misc.postincrement"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/LoopDetection.ml[65,3070+36]..src/LoopDetection.ml[65,3070+37])
                                                                                  Texp_ident "i/615"
                                                                            ]
                                                                      ]
                                                                    [
                                                                      <case>
                                                                        pattern (src/LoopDetection.ml[66,3114+8]..src/LoopDetection.ml[66,3114+18])
                                                                          Tpat_value
                                                                          pattern (src/LoopDetection.ml[66,3114+8]..src/LoopDetection.ml[66,3114+18])
                                                                            Tpat_construct "Symbol.T"
                                                                            [
                                                                              pattern (src/LoopDetection.ml[66,3114+17]..src/LoopDetection.ml[66,3114+18])
                                                                                Tpat_any
                                                                            ]
                                                                            None
                                                                        expression (src/LoopDetection.ml[67,3138+10]..src/LoopDetection.ml[67,3138+34])
                                                                          Texp_apply
                                                                          expression (src/LoopDetection.ml[67,3138+26]..src/LoopDetection.ml[67,3138+28])
                                                                            Texp_ident "Stdlib!.:="
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/LoopDetection.ml[67,3138+10]..src/LoopDetection.ml[67,3138+25])
                                                                                Texp_ident "nullable_prefix/614"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/LoopDetection.ml[67,3138+29]..src/LoopDetection.ml[67,3138+34])
                                                                                Texp_construct "false"
                                                                                []
                                                                          ]
                                                                      <case>
                                                                        pattern (src/LoopDetection.ml[68,3173+8]..src/LoopDetection.ml[68,3173+20])
                                                                          Tpat_value
                                                                          pattern (src/LoopDetection.ml[68,3173+8]..src/LoopDetection.ml[68,3173+20])
                                                                            Tpat_construct "Symbol.N"
                                                                            [
                                                                              pattern (src/LoopDetection.ml[68,3173+17]..src/LoopDetection.ml[68,3173+20])
                                                                                Tpat_var "nt'/674"
                                                                            ]
                                                                            None
                                                                        expression (src/LoopDetection.ml[69,3197+10]..src/LoopDetection.ml[72,3353+50])
                                                                          Texp_sequence
                                                                          expression (src/LoopDetection.ml[69,3197+10]..src/LoopDetection.ml[71,3325+26])
                                                                            Texp_ifthenelse
                                                                            expression (src/LoopDetection.ml[69,3197+13]..src/LoopDetection.ml[70,3267+52])
                                                                              Texp_apply
                                                                              expression (src/LoopDetection.ml[70,3267+10]..src/LoopDetection.ml[70,3267+12])
                                                                                Texp_ident "Stdlib!.&&"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/LoopDetection.ml[69,3197+13]..src/LoopDetection.ml[69,3197+69])
                                                                                    Texp_apply
                                                                                    expression (src/LoopDetection.ml[69,3197+42]..src/LoopDetection.ml[69,3197+44])
                                                                                      Texp_ident "Stdlib!.||"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/LoopDetection.ml[69,3197+14]..src/LoopDetection.ml[69,3197+41])
                                                                                          Texp_apply
                                                                                          expression (src/LoopDetection.ml[69,3197+14]..src/LoopDetection.ml[69,3197+17])
                                                                                            Texp_ident "Stdlib!.not"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/LoopDetection.ml[69,3197+18]..src/LoopDetection.ml[69,3197+41])
                                                                                                Texp_ident "require_nullable_suffix/485"
                                                                                          ]
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/LoopDetection.ml[69,3197+45]..src/LoopDetection.ml[69,3197+68])
                                                                                          Texp_apply
                                                                                          expression (src/LoopDetection.ml[69,3197+45]..src/LoopDetection.ml[69,3197+60])
                                                                                            Texp_ident "nullable_suffix/414"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/LoopDetection.ml[69,3197+61]..src/LoopDetection.ml[69,3197+65])
                                                                                                Texp_ident "prod/563"
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/LoopDetection.ml[69,3197+66]..src/LoopDetection.ml[69,3197+68])
                                                                                                Texp_apply
                                                                                                expression (src/LoopDetection.ml[69,3197+66]..src/LoopDetection.ml[69,3197+67])
                                                                                                  Texp_ident "Stdlib!.!"
                                                                                                [
                                                                                                  <arg>
                                                                                                    Nolabel
                                                                                                    expression (src/LoopDetection.ml[69,3197+67]..src/LoopDetection.ml[69,3197+68])
                                                                                                      Texp_ident "i/615"
                                                                                                ]
                                                                                          ]
                                                                                    ]
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/LoopDetection.ml[70,3267+13]..src/LoopDetection.ml[70,3267+52])
                                                                                    Texp_apply
                                                                                    expression (src/LoopDetection.ml[70,3267+42]..src/LoopDetection.ml[70,3267+44])
                                                                                      Texp_ident "Stdlib!.||"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/LoopDetection.ml[70,3267+14]..src/LoopDetection.ml[70,3267+41])
                                                                                          Texp_apply
                                                                                          expression (src/LoopDetection.ml[70,3267+14]..src/LoopDetection.ml[70,3267+17])
                                                                                            Texp_ident "Stdlib!.not"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/LoopDetection.ml[70,3267+18]..src/LoopDetection.ml[70,3267+41])
                                                                                                Texp_ident "require_nonempty_prefix/486"
                                                                                          ]
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/LoopDetection.ml[70,3267+45]..src/LoopDetection.ml[70,3267+51])
                                                                                          Texp_apply
                                                                                          expression (src/LoopDetection.ml[70,3267+48]..src/LoopDetection.ml[70,3267+49])
                                                                                            Texp_ident "Stdlib!.>"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/LoopDetection.ml[70,3267+45]..src/LoopDetection.ml[70,3267+47])
                                                                                                Texp_apply
                                                                                                expression (src/LoopDetection.ml[70,3267+45]..src/LoopDetection.ml[70,3267+46])
                                                                                                  Texp_ident "Stdlib!.!"
                                                                                                [
                                                                                                  <arg>
                                                                                                    Nolabel
                                                                                                    expression (src/LoopDetection.ml[70,3267+46]..src/LoopDetection.ml[70,3267+47])
                                                                                                      Texp_ident "i/615"
                                                                                                ]
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/LoopDetection.ml[70,3267+50]..src/LoopDetection.ml[70,3267+51])
                                                                                                Texp_constant Const_int 1
                                                                                          ]
                                                                                    ]
                                                                              ]
                                                                            expression (src/LoopDetection.ml[71,3325+12]..src/LoopDetection.ml[71,3325+26])
                                                                              Texp_apply
                                                                              expression (src/LoopDetection.ml[71,3325+12]..src/LoopDetection.ml[71,3325+17])
                                                                                Texp_ident "yield/541"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/LoopDetection.ml[71,3325+18]..src/LoopDetection.ml[71,3325+22])
                                                                                    Texp_ident "prod/563"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/LoopDetection.ml[71,3325+23]..src/LoopDetection.ml[71,3325+26])
                                                                                    Texp_ident "nt'/674"
                                                                              ]
                                                                            None
                                                                          expression (src/LoopDetection.ml[72,3353+10]..src/LoopDetection.ml[72,3353+50])
                                                                            Texp_apply
                                                                            expression (src/LoopDetection.ml[72,3353+26]..src/LoopDetection.ml[72,3353+28])
                                                                              Texp_ident "Stdlib!.:="
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/LoopDetection.ml[72,3353+10]..src/LoopDetection.ml[72,3353+25])
                                                                                  Texp_ident "nullable_prefix/614"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/LoopDetection.ml[72,3353+29]..src/LoopDetection.ml[72,3353+50])
                                                                                  Texp_apply
                                                                                  expression (src/LoopDetection.ml[72,3353+29]..src/LoopDetection.ml[72,3353+46])
                                                                                    Texp_ident "Dune__exe!.Grammar.Analysis.nullable"
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/LoopDetection.ml[72,3353+47]..src/LoopDetection.ml[72,3353+50])
                                                                                        Texp_ident "nt'/674"
                                                                                  ]
                                                                            ]
                                                                    ]
                                                    ]
                                              ]
                                        ]
                                  ]
                            ]
                      ]
                ]
              structure_item (src/LoopDetection.ml[78,3485+0]..src/LoopDetection.ml[79,3517+44])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LoopDetection.ml[78,3485+4]..src/LoopDetection.ml[78,3485+9])
                      Tpat_var "adapt/675"
                    expression (src/LoopDetection.ml[78,3485+10]..src/LoopDetection.ml[79,3517+44]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/LoopDetection.ml[78,3485+10]..src/LoopDetection.ml[78,3485+20])
                            Tpat_var "successors/677"
                          expression (src/LoopDetection.ml[78,3485+21]..src/LoopDetection.ml[79,3517+44]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/LoopDetection.ml[78,3485+21]..src/LoopDetection.ml[78,3485+26])
                                  Tpat_var "yield/678"
                                expression (src/LoopDetection.ml[78,3485+27]..src/LoopDetection.ml[79,3517+44]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/LoopDetection.ml[78,3485+27]..src/LoopDetection.ml[78,3485+29])
                                        Tpat_var "nt/679"
                                      expression (src/LoopDetection.ml[79,3517+2]..src/LoopDetection.ml[79,3517+44])
                                        Texp_apply
                                        expression (src/LoopDetection.ml[79,3517+2]..src/LoopDetection.ml[79,3517+12])
                                          Texp_ident "successors/677"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/LoopDetection.ml[79,3517+13]..src/LoopDetection.ml[79,3517+41])
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/LoopDetection.ml[79,3517+18]..src/LoopDetection.ml[79,3517+23])
                                                    Tpat_var "_prod/680"
                                                  expression (src/LoopDetection.ml[79,3517+24]..src/LoopDetection.ml[79,3517+40]) ghost
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (src/LoopDetection.ml[79,3517+24]..src/LoopDetection.ml[79,3517+27])
                                                          Tpat_var "nt'/681"
                                                        expression (src/LoopDetection.ml[79,3517+31]..src/LoopDetection.ml[79,3517+40])
                                                          Texp_apply
                                                          expression (src/LoopDetection.ml[79,3517+31]..src/LoopDetection.ml[79,3517+36])
                                                            Texp_ident "yield/678"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/LoopDetection.ml[79,3517+37]..src/LoopDetection.ml[79,3517+40])
                                                                Texp_ident "nt'/681"
                                                          ]
                                                    ]
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/LoopDetection.ml[79,3517+42]..src/LoopDetection.ml[79,3517+44])
                                              Texp_ident "nt/679"
                                        ]
                                  ]
                            ]
                      ]
                ]
              structure_item (src/LoopDetection.ml[83,3637+0]..src/LoopDetection.ml[98,4178+5])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LoopDetection.ml[83,3637+4]..src/LoopDetection.ml[83,3637+14])
                      Tpat_var "show_cycle/682"
                    expression (src/LoopDetection.ml[83,3637+15]..src/LoopDetection.ml[98,4178+5]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/LoopDetection.ml[83,3637+15]..src/LoopDetection.ml[83,3637+18])
                            Tpat_var "nts/684"
                          expression (src/LoopDetection.ml[83,3637+19]..src/LoopDetection.ml[98,4178+5]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/LoopDetection.ml[83,3637+19]..src/LoopDetection.ml[83,3637+21])
                                  Tpat_var "nt/685"
                                expression (src/LoopDetection.ml[84,3661+2]..src/LoopDetection.ml[98,4178+5])
                                  Texp_sequence
                                  expression (src/LoopDetection.ml[84,3661+2]..src/LoopDetection.ml[84,3661+27])
                                    Texp_assert                                    expression (src/LoopDetection.ml[84,3661+9]..src/LoopDetection.ml[84,3661+27])
                                      Texp_apply
                                      expression (src/LoopDetection.ml[84,3661+22]..src/LoopDetection.ml[84,3661+23])
                                        Texp_ident "Stdlib!.="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/LoopDetection.ml[84,3661+10]..src/LoopDetection.ml[84,3661+21])
                                            Texp_apply
                                            expression (src/LoopDetection.ml[84,3661+10]..src/LoopDetection.ml[84,3661+17])
                                              Texp_ident "Stdlib!.List.hd"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/LoopDetection.ml[84,3661+18]..src/LoopDetection.ml[84,3661+21])
                                                  Texp_ident "nts/684"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/LoopDetection.ml[84,3661+24]..src/LoopDetection.ml[84,3661+26])
                                            Texp_ident "nt/685"
                                      ]
                                  expression (src/LoopDetection.ml[85,3690+2]..src/LoopDetection.ml[98,4178+5])
                                    Texp_ifthenelse
                                    expression (src/LoopDetection.ml[85,3690+5]..src/LoopDetection.ml[85,3690+24])
                                      Texp_apply
                                      expression (src/LoopDetection.ml[85,3690+21]..src/LoopDetection.ml[85,3690+22])
                                        Texp_ident "Stdlib!.="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/LoopDetection.ml[85,3690+5]..src/LoopDetection.ml[85,3690+20])
                                            Texp_apply
                                            expression (src/LoopDetection.ml[85,3690+5]..src/LoopDetection.ml[85,3690+16])
                                              Texp_ident "Stdlib!.List.length"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/LoopDetection.ml[85,3690+17]..src/LoopDetection.ml[85,3690+20])
                                                  Texp_ident "nts/684"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/LoopDetection.ml[85,3690+23]..src/LoopDetection.ml[85,3690+24])
                                            Texp_constant Const_int 1
                                      ]
                                    expression (src/LoopDetection.ml[85,3690+30]..src/LoopDetection.ml[85,3690+32])
                                      Texp_constant Const_string("",(src/LoopDetection.ml[85,3690+31]..src/LoopDetection.ml[85,3690+31]),None)
                                    Some
                                      expression (src/LoopDetection.ml[85,3690+38]..src/LoopDetection.ml[98,4178+5])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/LoopDetection.ml[86,3734+8]..src/LoopDetection.ml[86,3734+11])
                                              Tpat_var "nts/752"
                                            expression (src/LoopDetection.ml[86,3734+14]..src/LoopDetection.ml[86,3734+40])
                                              Texp_apply
                                              expression (src/LoopDetection.ml[86,3734+14]..src/LoopDetection.ml[86,3734+27])
                                                Texp_ident "Stdlib!.Array.of_list"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/LoopDetection.ml[86,3734+28]..src/LoopDetection.ml[86,3734+40])
                                                    Texp_apply
                                                    expression (src/LoopDetection.ml[86,3734+33]..src/LoopDetection.ml[86,3734+34])
                                                      Texp_ident "Stdlib!.@"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/LoopDetection.ml[86,3734+29]..src/LoopDetection.ml[86,3734+32])
                                                          Texp_ident "nts/684"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/LoopDetection.ml[86,3734+35]..src/LoopDetection.ml[86,3734+39])
                                                          Texp_construct "::"
                                                          [
                                                            expression (src/LoopDetection.ml[86,3734+36]..src/LoopDetection.ml[86,3734+38])
                                                              Texp_ident "nt/685"
                                                            expression (src/LoopDetection.ml[86,3734+38]..src/LoopDetection.ml[86,3734+39]) ghost
                                                              Texp_construct "[]"
                                                              []
                                                          ]
                                                    ]
                                              ]
                                        ]
                                        expression (src/LoopDetection.ml[87,3778+4]..src/LoopDetection.ml[97,4170+7])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/LoopDetection.ml[87,3778+8]..src/LoopDetection.ml[87,3778+9])
                                                Tpat_var "i/753"
                                              expression (src/LoopDetection.ml[87,3778+12]..src/LoopDetection.ml[87,3778+17])
                                                Texp_apply
                                                expression (src/LoopDetection.ml[87,3778+12]..src/LoopDetection.ml[87,3778+15])
                                                  Texp_ident "Stdlib!.ref"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/LoopDetection.ml[87,3778+16]..src/LoopDetection.ml[87,3778+17])
                                                      Texp_constant Const_int 0
                                                ]
                                          ]
                                          expression (src/LoopDetection.ml[88,3799+4]..src/LoopDetection.ml[97,4170+7])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/LoopDetection.ml[88,3799+8]..src/LoopDetection.ml[88,3799+12])
                                                  Tpat_var "next/754"
                                                expression (src/LoopDetection.ml[88,3799+13]..src/LoopDetection.ml[88,3799+68]) ghost
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (src/LoopDetection.ml[88,3799+13]..src/LoopDetection.ml[88,3799+15])
                                                        Tpat_construct "()"
                                                        []
                                                        None
                                                      expression (src/LoopDetection.ml[88,3799+18]..src/LoopDetection.ml[88,3799+68])
                                                        Texp_apply
                                                        expression (src/LoopDetection.ml[88,3799+18]..src/LoopDetection.ml[88,3799+35])
                                                          Texp_ident "Dune__exe!.Grammar.Nonterminal.print"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/LoopDetection.ml[88,3799+36]..src/LoopDetection.ml[88,3799+41])
                                                              Texp_construct "false"
                                                              []
                                                          <arg>
                                                            Nolabel
                                                            expression (src/LoopDetection.ml[88,3799+42]..src/LoopDetection.ml[88,3799+68])
                                                              Texp_apply
                                                              expression (src/LoopDetection.ml[88,3799+42]..src/LoopDetection.ml[88,3799+68]) ghost
                                                                Texp_ident "Stdlib!.Array.get"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/LoopDetection.ml[88,3799+42]..src/LoopDetection.ml[88,3799+45])
                                                                    Texp_ident "nts/752"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/LoopDetection.ml[88,3799+47]..src/LoopDetection.ml[88,3799+67])
                                                                    Texp_apply
                                                                    expression (src/LoopDetection.ml[88,3799+47]..src/LoopDetection.ml[88,3799+65])
                                                                      Texp_ident "Dune__exe!.Misc.postincrement"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/LoopDetection.ml[88,3799+66]..src/LoopDetection.ml[88,3799+67])
                                                                          Texp_ident "i/753"
                                                                    ]
                                                              ]
                                                        ]
                                                  ]
                                              <def>
                                                pattern (src/LoopDetection.ml[89,3868+8]..src/LoopDetection.ml[89,3868+16])
                                                  Tpat_var "finished/755"
                                                expression (src/LoopDetection.ml[89,3868+17]..src/LoopDetection.ml[89,3868+43]) ghost
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (src/LoopDetection.ml[89,3868+17]..src/LoopDetection.ml[89,3868+19])
                                                        Tpat_construct "()"
                                                        []
                                                        None
                                                      expression (src/LoopDetection.ml[89,3868+22]..src/LoopDetection.ml[89,3868+43])
                                                        Texp_apply
                                                        expression (src/LoopDetection.ml[89,3868+25]..src/LoopDetection.ml[89,3868+26])
                                                          Texp_ident "Stdlib!.="
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/LoopDetection.ml[89,3868+22]..src/LoopDetection.ml[89,3868+24])
                                                              Texp_apply
                                                              expression (src/LoopDetection.ml[89,3868+22]..src/LoopDetection.ml[89,3868+23])
                                                                Texp_ident "Stdlib!.!"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/LoopDetection.ml[89,3868+23]..src/LoopDetection.ml[89,3868+24])
                                                                    Texp_ident "i/753"
                                                              ]
                                                          <arg>
                                                            Nolabel
                                                            expression (src/LoopDetection.ml[89,3868+27]..src/LoopDetection.ml[89,3868+43])
                                                              Texp_apply
                                                              expression (src/LoopDetection.ml[89,3868+27]..src/LoopDetection.ml[89,3868+39])
                                                                Texp_ident "Stdlib!.Array.length"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/LoopDetection.ml[89,3868+40]..src/LoopDetection.ml[89,3868+43])
                                                                    Texp_ident "nts/752"
                                                              ]
                                                        ]
                                                  ]
                                            ]
                                            expression (src/LoopDetection.ml[90,3915+4]..src/LoopDetection.ml[97,4170+7])
                                              Texp_apply
                                              expression (src/LoopDetection.ml[90,3915+4]..src/LoopDetection.ml[90,3915+20])
                                                Texp_ident "Dune__exe!.Misc.with_buffer"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/LoopDetection.ml[90,3915+21]..src/LoopDetection.ml[90,3915+25])
                                                    Texp_constant Const_int 1024
                                                <arg>
                                                  Nolabel
                                                  expression (src/LoopDetection.ml[90,3915+26]..src/LoopDetection.ml[97,4170+7])
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (src/LoopDetection.ml[90,3915+36]..src/LoopDetection.ml[90,3915+37])
                                                          Tpat_var "b/760"
                                                        expression (src/LoopDetection.ml[91,3956+6]..src/LoopDetection.ml[96,4159+10])
                                                          Texp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (src/LoopDetection.ml[91,3956+10]..src/LoopDetection.ml[91,3956+13])
                                                                Tpat_var "out/761"
                                                              expression (src/LoopDetection.ml[91,3956+14]..src/LoopDetection.ml[91,3956+46]) ghost
                                                                Texp_function
                                                                Nolabel
                                                                [
                                                                  <case>
                                                                    pattern (src/LoopDetection.ml[91,3956+14]..src/LoopDetection.ml[91,3956+20])
                                                                      Tpat_var "format/763"
                                                                    expression (src/LoopDetection.ml[91,3956+23]..src/LoopDetection.ml[91,3956+46])
                                                                      Texp_apply
                                                                      expression (src/LoopDetection.ml[91,3956+23]..src/LoopDetection.ml[91,3956+37])
                                                                        Texp_ident "Stdlib!.Printf.bprintf"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/LoopDetection.ml[91,3956+38]..src/LoopDetection.ml[91,3956+39])
                                                                            Texp_ident "b/760"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/LoopDetection.ml[91,3956+40]..src/LoopDetection.ml[91,3956+46])
                                                                            Texp_ident "format/763"
                                                                      ]
                                                                ]
                                                          ]
                                                          expression (src/LoopDetection.ml[92,4006+6]..src/LoopDetection.ml[96,4159+10])
                                                            Texp_sequence
                                                            expression (src/LoopDetection.ml[92,4006+6]..src/LoopDetection.ml[92,4006+23])
                                                              Texp_apply
                                                              expression (src/LoopDetection.ml[92,4006+6]..src/LoopDetection.ml[92,4006+9])
                                                                Texp_ident "out/761"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/LoopDetection.ml[92,4006+10]..src/LoopDetection.ml[92,4006+14])
                                                                    Texp_construct "CamlinternalFormatBasics.Format"
                                                                    [
                                                                      expression (src/LoopDetection.ml[92,4006+10]..src/LoopDetection.ml[92,4006+14]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.String"
                                                                        [
                                                                          expression (src/LoopDetection.ml[92,4006+10]..src/LoopDetection.ml[92,4006+14]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                            []
                                                                          expression (src/LoopDetection.ml[92,4006+10]..src/LoopDetection.ml[92,4006+14]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                            []
                                                                        ]
                                                                      expression (src/LoopDetection.ml[92,4006+10]..src/LoopDetection.ml[92,4006+14]) ghost
                                                                        Texp_constant Const_string("%s",(src/LoopDetection.ml[92,4006+10]..src/LoopDetection.ml[92,4006+14]) ghost,None)
                                                                    ]
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/LoopDetection.ml[92,4006+15]..src/LoopDetection.ml[92,4006+23])
                                                                    Texp_apply
                                                                    expression (src/LoopDetection.ml[92,4006+16]..src/LoopDetection.ml[92,4006+20])
                                                                      Texp_ident "next/754"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/LoopDetection.ml[92,4006+20]..src/LoopDetection.ml[92,4006+22])
                                                                          Texp_construct "()"
                                                                          []
                                                                    ]
                                                              ]
                                                            expression (src/LoopDetection.ml[93,4031+6]..src/LoopDetection.ml[96,4159+10])
                                                              Texp_while
                                                              expression (src/LoopDetection.ml[93,4031+12]..src/LoopDetection.ml[93,4031+28])
                                                                Texp_apply
                                                                expression (src/LoopDetection.ml[93,4031+12]..src/LoopDetection.ml[93,4031+15])
                                                                  Texp_ident "Stdlib!.not"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/LoopDetection.ml[93,4031+16]..src/LoopDetection.ml[93,4031+28])
                                                                      Texp_apply
                                                                      expression (src/LoopDetection.ml[93,4031+17]..src/LoopDetection.ml[93,4031+25])
                                                                        Texp_ident "finished/755"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/LoopDetection.ml[93,4031+25]..src/LoopDetection.ml[93,4031+27])
                                                                            Texp_construct "()"
                                                                            []
                                                                      ]
                                                                ]
                                                              expression (src/LoopDetection.ml[94,4063+8]..src/LoopDetection.ml[95,4102+56])
                                                                Texp_sequence
                                                                expression (src/LoopDetection.ml[94,4063+8]..src/LoopDetection.ml[94,4063+37])
                                                                  Texp_apply
                                                                  expression (src/LoopDetection.ml[94,4063+8]..src/LoopDetection.ml[94,4063+11])
                                                                    Texp_ident "out/761"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/LoopDetection.ml[94,4063+12]..src/LoopDetection.ml[94,4063+28])
                                                                        Texp_construct "CamlinternalFormatBasics.Format"
                                                                        [
                                                                          expression (src/LoopDetection.ml[94,4063+12]..src/LoopDetection.ml[94,4063+28]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                            [
                                                                              expression (src/LoopDetection.ml[94,4063+12]..src/LoopDetection.ml[94,4063+28]) ghost
                                                                                Texp_constant Const_string(" expands to ",(src/LoopDetection.ml[94,4063+12]..src/LoopDetection.ml[94,4063+28]) ghost,None)
                                                                              expression (src/LoopDetection.ml[94,4063+12]..src/LoopDetection.ml[94,4063+28]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.String"
                                                                                [
                                                                                  expression (src/LoopDetection.ml[94,4063+12]..src/LoopDetection.ml[94,4063+28]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                    []
                                                                                  expression (src/LoopDetection.ml[94,4063+12]..src/LoopDetection.ml[94,4063+28]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                    []
                                                                                ]
                                                                            ]
                                                                          expression (src/LoopDetection.ml[94,4063+12]..src/LoopDetection.ml[94,4063+28]) ghost
                                                                            Texp_constant Const_string(" expands to %s",(src/LoopDetection.ml[94,4063+12]..src/LoopDetection.ml[94,4063+28]) ghost,None)
                                                                        ]
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/LoopDetection.ml[94,4063+29]..src/LoopDetection.ml[94,4063+37])
                                                                        Texp_apply
                                                                        expression (src/LoopDetection.ml[94,4063+30]..src/LoopDetection.ml[94,4063+34])
                                                                          Texp_ident "next/754"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/LoopDetection.ml[94,4063+34]..src/LoopDetection.ml[94,4063+36])
                                                                              Texp_construct "()"
                                                                              []
                                                                        ]
                                                                  ]
                                                                expression (src/LoopDetection.ml[95,4102+8]..src/LoopDetection.ml[95,4102+56])
                                                                  Texp_ifthenelse
                                                                  expression (src/LoopDetection.ml[95,4102+11]..src/LoopDetection.ml[95,4102+21])
                                                                    Texp_apply
                                                                    expression (src/LoopDetection.ml[95,4102+11]..src/LoopDetection.ml[95,4102+19])
                                                                      Texp_ident "finished/755"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/LoopDetection.ml[95,4102+19]..src/LoopDetection.ml[95,4102+21])
                                                                          Texp_construct "()"
                                                                          []
                                                                    ]
                                                                  expression (src/LoopDetection.ml[95,4102+27]..src/LoopDetection.ml[95,4102+36])
                                                                    Texp_apply
                                                                    expression (src/LoopDetection.ml[95,4102+27]..src/LoopDetection.ml[95,4102+30])
                                                                      Texp_ident "out/761"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/LoopDetection.ml[95,4102+31]..src/LoopDetection.ml[95,4102+36])
                                                                          Texp_construct "CamlinternalFormatBasics.Format"
                                                                          [
                                                                            expression (src/LoopDetection.ml[95,4102+31]..src/LoopDetection.ml[95,4102+36]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                              [
                                                                                expression (src/LoopDetection.ml[95,4102+31]..src/LoopDetection.ml[95,4102+36]) ghost
                                                                                  Texp_constant Const_string(".\n",(src/LoopDetection.ml[95,4102+31]..src/LoopDetection.ml[95,4102+36]) ghost,None)
                                                                                expression (src/LoopDetection.ml[95,4102+31]..src/LoopDetection.ml[95,4102+36]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                  []
                                                                              ]
                                                                            expression (src/LoopDetection.ml[95,4102+31]..src/LoopDetection.ml[95,4102+36]) ghost
                                                                              Texp_constant Const_string(".\n",(src/LoopDetection.ml[95,4102+31]..src/LoopDetection.ml[95,4102+36]) ghost,None)
                                                                          ]
                                                                    ]
                                                                  Some
                                                                    expression (src/LoopDetection.ml[95,4102+42]..src/LoopDetection.ml[95,4102+56])
                                                                      Texp_apply
                                                                      expression (src/LoopDetection.ml[95,4102+42]..src/LoopDetection.ml[95,4102+45])
                                                                        Texp_ident "out/761"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/LoopDetection.ml[95,4102+46]..src/LoopDetection.ml[95,4102+56])
                                                                            Texp_construct "CamlinternalFormatBasics.Format"
                                                                            [
                                                                              expression (src/LoopDetection.ml[95,4102+46]..src/LoopDetection.ml[95,4102+56]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                [
                                                                                  expression (src/LoopDetection.ml[95,4102+46]..src/LoopDetection.ml[95,4102+56]) ghost
                                                                                    Texp_constant Const_string(",\nwhich",(src/LoopDetection.ml[95,4102+46]..src/LoopDetection.ml[95,4102+56]) ghost,None)
                                                                                  expression (src/LoopDetection.ml[95,4102+46]..src/LoopDetection.ml[95,4102+56]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                    []
                                                                                ]
                                                                              expression (src/LoopDetection.ml[95,4102+46]..src/LoopDetection.ml[95,4102+56]) ghost
                                                                                Texp_constant Const_string(",\nwhich",(src/LoopDetection.ml[95,4102+46]..src/LoopDetection.ml[95,4102+56]) ghost,None)
                                                                            ]
                                                                      ]
                                                    ]
                                              ]
                            ]
                      ]
                ]
              structure_item (src/LoopDetection.ml[100,4185+0]..src/LoopDetection.ml[107,4454+23])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LoopDetection.ml[100,4185+4]..src/LoopDetection.ml[100,4185+8])
                      Tpat_var "fail/882"
                    expression (src/LoopDetection.ml[100,4185+9]..src/LoopDetection.ml[107,4454+23]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/LoopDetection.ml[100,4185+9]..src/LoopDetection.ml[100,4185+12])
                            Tpat_var "nts/884"
                          expression (src/LoopDetection.ml[100,4185+13]..src/LoopDetection.ml[107,4454+23]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/LoopDetection.ml[100,4185+13]..src/LoopDetection.ml[100,4185+15])
                                  Tpat_var "nt/885"
                                expression (src/LoopDetection.ml[101,4203+2]..src/LoopDetection.ml[107,4454+23])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/LoopDetection.ml[101,4203+6]..src/LoopDetection.ml[101,4203+15])
                                        Tpat_var "positions/886"
                                      expression (src/LoopDetection.ml[101,4203+18]..src/LoopDetection.ml[101,4203+67])
                                        Texp_apply
                                        expression (src/LoopDetection.ml[101,4203+18]..src/LoopDetection.ml[101,4203+30])
                                          Texp_ident "Stdlib!.List.flatten"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/LoopDetection.ml[101,4203+31]..src/LoopDetection.ml[101,4203+67])
                                              Texp_apply
                                              expression (src/LoopDetection.ml[101,4203+32]..src/LoopDetection.ml[101,4203+40])
                                                Texp_ident "Stdlib!.List.map"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/LoopDetection.ml[101,4203+41]..src/LoopDetection.ml[101,4203+62])
                                                    Texp_ident "Dune__exe!.Grammar.Nonterminal.positions"
                                                <arg>
                                                  Nolabel
                                                  expression (src/LoopDetection.ml[101,4203+63]..src/LoopDetection.ml[101,4203+66])
                                                    Texp_ident "nts/884"
                                              ]
                                        ]
                                  ]
                                  expression (src/LoopDetection.ml[102,4274+2]..src/LoopDetection.ml[107,4454+23])
                                    Texp_apply
                                    expression (src/LoopDetection.ml[102,4274+2]..src/LoopDetection.ml[102,4274+13])
                                      Texp_ident "Dune__exe!.Error.error"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/LoopDetection.ml[102,4274+14]..src/LoopDetection.ml[102,4274+23])
                                          Texp_ident "positions/886"
                                      <arg>
                                        Nolabel
                                        expression (src/LoopDetection.ml[103,4298+4]..src/LoopDetection.ml[105,4384+36])
                                          Texp_construct "CamlinternalFormatBasics.Format"
                                          [
                                            expression (src/LoopDetection.ml[103,4298+4]..src/LoopDetection.ml[105,4384+36]) ghost
                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                              [
                                                expression (src/LoopDetection.ml[103,4298+4]..src/LoopDetection.ml[105,4384+36]) ghost
                                                  Texp_constant Const_string("the grammar is cyclic:\nthe nonterminal symbol ",(src/LoopDetection.ml[103,4298+4]..src/LoopDetection.ml[105,4384+36]) ghost,None)
                                                expression (src/LoopDetection.ml[103,4298+4]..src/LoopDetection.ml[105,4384+36]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.String"
                                                  [
                                                    expression (src/LoopDetection.ml[103,4298+4]..src/LoopDetection.ml[105,4384+36]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                      []
                                                    expression (src/LoopDetection.ml[103,4298+4]..src/LoopDetection.ml[105,4384+36]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                                      [
                                                        expression (src/LoopDetection.ml[103,4298+4]..src/LoopDetection.ml[105,4384+36]) ghost
                                                          Texp_constant Const_string(" expands to itself.\n",(src/LoopDetection.ml[103,4298+4]..src/LoopDetection.ml[105,4384+36]) ghost,None)
                                                        expression (src/LoopDetection.ml[103,4298+4]..src/LoopDetection.ml[105,4384+36]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.String"
                                                          [
                                                            expression (src/LoopDetection.ml[103,4298+4]..src/LoopDetection.ml[105,4384+36]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                                              []
                                                            expression (src/LoopDetection.ml[103,4298+4]..src/LoopDetection.ml[105,4384+36]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                              [
                                                                expression (src/LoopDetection.ml[103,4298+4]..src/LoopDetection.ml[105,4384+36]) ghost
                                                                  Texp_constant Const_string("A cyclic grammar is ambiguous.",(src/LoopDetection.ml[103,4298+4]..src/LoopDetection.ml[105,4384+36]) ghost,None)
                                                                expression (src/LoopDetection.ml[103,4298+4]..src/LoopDetection.ml[105,4384+36]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                  []
                                                              ]
                                                          ]
                                                      ]
                                                  ]
                                              ]
                                            expression (src/LoopDetection.ml[103,4298+4]..src/LoopDetection.ml[105,4384+36]) ghost
                                              Texp_constant Const_string("the grammar is cyclic:\nthe nonterminal symbol %s expands to itself.\n%sA cyclic grammar is ambiguous.",(src/LoopDetection.ml[103,4298+4]..src/LoopDetection.ml[105,4384+36]) ghost,None)
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/LoopDetection.ml[106,4421+4]..src/LoopDetection.ml[106,4421+32])
                                          Texp_apply
                                          expression (src/LoopDetection.ml[106,4421+5]..src/LoopDetection.ml[106,4421+22])
                                            Texp_ident "Dune__exe!.Grammar.Nonterminal.print"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/LoopDetection.ml[106,4421+23]..src/LoopDetection.ml[106,4421+28])
                                                Texp_construct "false"
                                                []
                                            <arg>
                                              Nolabel
                                              expression (src/LoopDetection.ml[106,4421+29]..src/LoopDetection.ml[106,4421+31])
                                                Texp_ident "nt/885"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/LoopDetection.ml[107,4454+4]..src/LoopDetection.ml[107,4454+23])
                                          Texp_apply
                                          expression (src/LoopDetection.ml[107,4454+5]..src/LoopDetection.ml[107,4454+15])
                                            Texp_ident "show_cycle/682"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/LoopDetection.ml[107,4454+16]..src/LoopDetection.ml[107,4454+19])
                                                Texp_ident "nts/884"
                                            <arg>
                                              Nolabel
                                              expression (src/LoopDetection.ml[107,4454+20]..src/LoopDetection.ml[107,4454+22])
                                                Texp_ident "nt/885"
                                          ]
                                    ]
                            ]
                      ]
                ]
              structure_item (src/LoopDetection.ml[118,4990+0]..src/LoopDetection.ml[128,5274+15])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LoopDetection.ml[118,4990+4]..src/LoopDetection.ml[118,4990+6])
                      Tpat_construct "()"
                      []
                      None
                    expression (src/LoopDetection.ml[119,4999+2]..src/LoopDetection.ml[128,5274+15])
                      Texp_letmodule "M/1047"
                      module_expr (src/LoopDetection.ml[119,4999+17]..src/LoopDetection.ml[119,4999+49])
                        Tmod_apply
                        module_expr (src/LoopDetection.ml[119,4999+17]..src/LoopDetection.ml[119,4999+36])
                          module_expr (src/LoopDetection.ml[119,4999+17]..src/LoopDetection.ml[119,4999+36])
                            Tmod_ident "Dune__exe!.Fix.Memoize.ForType"
                        module_expr (src/LoopDetection.ml[119,4999+37]..src/LoopDetection.ml[119,4999+48])
                          module_expr (src/LoopDetection.ml[119,4999+37]..src/LoopDetection.ml[119,4999+48])
                            Tmod_ident "Dune__exe!.Grammar.Nonterminal"
                      expression (src/LoopDetection.ml[120,5052+2]..src/LoopDetection.ml[128,5274+15])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/LoopDetection.ml[120,5052+6]..src/LoopDetection.ml[120,5052+18])
                              Tpat_var "successors_R/1048"
                            expression (src/LoopDetection.ml[121,5073+4]..src/LoopDetection.ml[122,5149+12])
                              Texp_apply
                              expression (src/LoopDetection.ml[122,5149+7]..src/LoopDetection.ml[122,5149+12])
                                Texp_ident "adapt/675"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/LoopDetection.ml[121,5073+4]..src/LoopDetection.ml[121,5073+75])
                                    Texp_apply
                                    expression (src/LoopDetection.ml[121,5073+4]..src/LoopDetection.ml[121,5073+14])
                                      Texp_ident "successors/483"
                                    [
                                      <arg>
                                        Labelled "require_nullable_suffix"
                                        expression (src/LoopDetection.ml[121,5073+40]..src/LoopDetection.ml[121,5073+44])
                                          Texp_construct "true"
                                          []
                                      <arg>
                                        Labelled "require_nonempty_prefix"
                                        expression (src/LoopDetection.ml[121,5073+70]..src/LoopDetection.ml[121,5073+75])
                                          Texp_construct "false"
                                          []
                                    ]
                              ]
                        ]
                        expression (src/LoopDetection.ml[124,5167+2]..src/LoopDetection.ml[128,5274+15])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (src/LoopDetection.ml[124,5167+6]..src/LoopDetection.ml[124,5167+11])
                                Tpat_var "check/1049"
                              expression (src/LoopDetection.ml[124,5167+14]..src/LoopDetection.ml[124,5167+42])
                                Texp_apply
                                expression (src/LoopDetection.ml[124,5167+14]..src/LoopDetection.ml[124,5167+29])
                                  Texp_ident "M/1047.defensive_fix"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/LoopDetection.ml[124,5167+30]..src/LoopDetection.ml[124,5167+42])
                                      Texp_ident "successors_R/1048"
                                ]
                          ]
                          expression (src/LoopDetection.ml[125,5213+2]..src/LoopDetection.ml[128,5274+15])
                            Texp_try
                            expression (src/LoopDetection.ml[126,5219+4]..src/LoopDetection.ml[126,5219+26])
                              Texp_apply
                              expression (src/LoopDetection.ml[126,5219+4]..src/LoopDetection.ml[126,5219+20])
                                Texp_ident "Dune__exe!.Grammar.Nonterminal.iter"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/LoopDetection.ml[126,5219+21]..src/LoopDetection.ml[126,5219+26])
                                    Texp_ident "check/1049"
                              ]
                            [
                              <case>
                                pattern (src/LoopDetection.ml[127,5246+7]..src/LoopDetection.ml[127,5246+24])
                                  Tpat_construct "M.Cycle"
                                  [
                                    pattern (src/LoopDetection.ml[127,5246+16]..src/LoopDetection.ml[127,5246+19])
                                      Tpat_var "nts/1050"
                                    pattern (src/LoopDetection.ml[127,5246+21]..src/LoopDetection.ml[127,5246+23])
                                      Tpat_var "nt/1051"
                                  ]
                                  None
                                expression (src/LoopDetection.ml[128,5274+4]..src/LoopDetection.ml[128,5274+15])
                                  Texp_apply
                                  expression (src/LoopDetection.ml[128,5274+4]..src/LoopDetection.ml[128,5274+8])
                                    Texp_ident "fail/882"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/LoopDetection.ml[128,5274+9]..src/LoopDetection.ml[128,5274+12])
                                        Texp_ident "nts/1050"
                                    <arg>
                                      Nolabel
                                      expression (src/LoopDetection.ml[128,5274+13]..src/LoopDetection.ml[128,5274+15])
                                        Texp_ident "nt/1051"
                                  ]
                            ]
                ]
              structure_item (src/LoopDetection.ml[163,7045+0]..src/LoopDetection.ml[175,7545+32])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LoopDetection.ml[163,7045+4]..src/LoopDetection.ml[163,7045+8])
                      Tpat_var "fail/1052"
                    expression (src/LoopDetection.ml[163,7045+9]..src/LoopDetection.ml[175,7545+32]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/LoopDetection.ml[163,7045+9]..src/LoopDetection.ml[163,7045+13])
                            Tpat_var "prod/1053"
                          expression (src/LoopDetection.ml[164,7061+2]..src/LoopDetection.ml[175,7545+32])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/LoopDetection.ml[164,7061+6]..src/LoopDetection.ml[164,7061+13])
                                  Tpat_tuple
                                  [
                                    pattern (src/LoopDetection.ml[164,7061+6]..src/LoopDetection.ml[164,7061+8])
                                      Tpat_var "nt/1054"
                                    pattern (src/LoopDetection.ml[164,7061+10]..src/LoopDetection.ml[164,7061+13])
                                      Tpat_var "rhs/1055"
                                  ]
                                expression (src/LoopDetection.ml[164,7061+16]..src/LoopDetection.ml[164,7061+35])
                                  Texp_apply
                                  expression (src/LoopDetection.ml[164,7061+16]..src/LoopDetection.ml[164,7061+30])
                                    Texp_ident "Dune__exe!.Grammar.Production.def"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/LoopDetection.ml[164,7061+31]..src/LoopDetection.ml[164,7061+35])
                                        Texp_ident "prod/1053"
                                  ]
                            ]
                            expression (src/LoopDetection.ml[165,7100+2]..src/LoopDetection.ml[175,7545+32])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/LoopDetection.ml[165,7100+6]..src/LoopDetection.ml[165,7100+15])
                                    Tpat_var "positions/1056"
                                  expression (src/LoopDetection.ml[165,7100+18]..src/LoopDetection.ml[165,7100+43])
                                    Texp_apply
                                    expression (src/LoopDetection.ml[165,7100+18]..src/LoopDetection.ml[165,7100+38])
                                      Texp_ident "Dune__exe!.Grammar.Production.positions"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/LoopDetection.ml[165,7100+39]..src/LoopDetection.ml[165,7100+43])
                                          Texp_ident "prod/1053"
                                    ]
                              ]
                              expression (src/LoopDetection.ml[166,7147+2]..src/LoopDetection.ml[175,7545+32])
                                Texp_apply
                                expression (src/LoopDetection.ml[166,7147+2]..src/LoopDetection.ml[166,7147+13])
                                  Texp_ident "Dune__exe!.Error.error"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/LoopDetection.ml[166,7147+14]..src/LoopDetection.ml[166,7147+23])
                                      Texp_ident "positions/1056"
                                  <arg>
                                    Nolabel
                                    expression (src/LoopDetection.ml[167,7171+4]..src/LoopDetection.ml[172,7430+59])
                                      Texp_construct "CamlinternalFormatBasics.Format"
                                      [
                                        expression (src/LoopDetection.ml[167,7171+4]..src/LoopDetection.ml[172,7430+59]) ghost
                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                          [
                                            expression (src/LoopDetection.ml[167,7171+4]..src/LoopDetection.ml[172,7430+59]) ghost
                                              Texp_constant Const_string("the grammar exhibits hidden left recursion: in the production\n",(src/LoopDetection.ml[167,7171+4]..src/LoopDetection.ml[172,7430+59]) ghost,None)
                                            expression (src/LoopDetection.ml[167,7171+4]..src/LoopDetection.ml[172,7430+59]) ghost
                                              Texp_construct "CamlinternalFormatBasics.String"
                                              [
                                                expression (src/LoopDetection.ml[167,7171+4]..src/LoopDetection.ml[172,7430+59]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                  []
                                                expression (src/LoopDetection.ml[167,7171+4]..src/LoopDetection.ml[172,7430+59]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                  [
                                                    expression (src/LoopDetection.ml[167,7171+4]..src/LoopDetection.ml[172,7430+59]) ghost
                                                      Texp_constant Const_string(",\nthe nonterminal symbol ",(src/LoopDetection.ml[167,7171+4]..src/LoopDetection.ml[172,7430+59]) ghost,None)
                                                    expression (src/LoopDetection.ml[167,7171+4]..src/LoopDetection.ml[172,7430+59]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.String"
                                                      [
                                                        expression (src/LoopDetection.ml[167,7171+4]..src/LoopDetection.ml[172,7430+59]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                                          []
                                                        expression (src/LoopDetection.ml[167,7171+4]..src/LoopDetection.ml[172,7430+59]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                                          [
                                                            expression (src/LoopDetection.ml[167,7171+4]..src/LoopDetection.ml[172,7430+59]) ghost
                                                              Texp_constant Const_string(" is nullable,\nand the remainder of the right-hand side expands to a sentential form\nthat begins with the nonterminal symbol ",(src/LoopDetection.ml[167,7171+4]..src/LoopDetection.ml[172,7430+59]) ghost,None)
                                                            expression (src/LoopDetection.ml[167,7171+4]..src/LoopDetection.ml[172,7430+59]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.String"
                                                              [
                                                                expression (src/LoopDetection.ml[167,7171+4]..src/LoopDetection.ml[172,7430+59]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                  []
                                                                expression (src/LoopDetection.ml[167,7171+4]..src/LoopDetection.ml[172,7430+59]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                  [
                                                                    expression (src/LoopDetection.ml[167,7171+4]..src/LoopDetection.ml[172,7430+59]) ghost
                                                                      Texp_constant Const_string(".\nThis implies that the grammar is not LR(k) for any k.",(src/LoopDetection.ml[167,7171+4]..src/LoopDetection.ml[172,7430+59]) ghost,None)
                                                                    expression (src/LoopDetection.ml[167,7171+4]..src/LoopDetection.ml[172,7430+59]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                      []
                                                                  ]
                                                              ]
                                                          ]
                                                      ]
                                                  ]
                                              ]
                                          ]
                                        expression (src/LoopDetection.ml[167,7171+4]..src/LoopDetection.ml[172,7430+59]) ghost
                                          Texp_constant Const_string("the grammar exhibits hidden left recursion: in the production\n%s,\nthe nonterminal symbol %s is nullable,\nand the remainder of the right-hand side expands to a sentential form\nthat begins with the nonterminal symbol %s.\nThis implies that the grammar is not LR(k) for any k.",(src/LoopDetection.ml[167,7171+4]..src/LoopDetection.ml[172,7430+59]) ghost,None)
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/LoopDetection.ml[173,7490+4]..src/LoopDetection.ml[173,7490+27])
                                      Texp_apply
                                      expression (src/LoopDetection.ml[173,7490+5]..src/LoopDetection.ml[173,7490+21])
                                        Texp_ident "Dune__exe!.Grammar.Production.print"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/LoopDetection.ml[173,7490+22]..src/LoopDetection.ml[173,7490+26])
                                            Texp_ident "prod/1053"
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/LoopDetection.ml[174,7518+4]..src/LoopDetection.ml[174,7518+26])
                                      Texp_apply
                                      expression (src/LoopDetection.ml[174,7518+5]..src/LoopDetection.ml[174,7518+17])
                                        Texp_ident "Dune__exe!.Grammar.Symbol.print"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/LoopDetection.ml[174,7518+18]..src/LoopDetection.ml[174,7518+25])
                                            Texp_apply
                                            expression (src/LoopDetection.ml[174,7518+18]..src/LoopDetection.ml[174,7518+25]) ghost
                                              Texp_ident "Stdlib!.Array.get"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/LoopDetection.ml[174,7518+18]..src/LoopDetection.ml[174,7518+21])
                                                  Texp_ident "rhs/1055"
                                              <arg>
                                                Nolabel
                                                expression (src/LoopDetection.ml[174,7518+23]..src/LoopDetection.ml[174,7518+24])
                                                  Texp_constant Const_int 0
                                            ]
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/LoopDetection.ml[175,7545+4]..src/LoopDetection.ml[175,7545+32])
                                      Texp_apply
                                      expression (src/LoopDetection.ml[175,7545+5]..src/LoopDetection.ml[175,7545+17])
                                        Texp_ident "Dune__exe!.Grammar.Symbol.print"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/LoopDetection.ml[175,7545+18]..src/LoopDetection.ml[175,7545+31])
                                            Texp_construct "Symbol.N"
                                            [
                                              expression (src/LoopDetection.ml[175,7545+28]..src/LoopDetection.ml[175,7545+30])
                                                Texp_ident "nt/1054"
                                            ]
                                      ]
                                ]
                      ]
                ]
              structure_item (src/LoopDetection.ml[184,8029+0]..src/LoopDetection.ml[206,8879+5])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LoopDetection.ml[184,8029+4]..src/LoopDetection.ml[184,8029+6])
                      Tpat_construct "()"
                      []
                      None
                    expression (src/LoopDetection.ml[185,8038+2]..src/LoopDetection.ml[206,8879+5])
                      Texp_letmodule "T/1080"
                      module_expr (src/LoopDetection.ml[185,8038+17]..src/LoopDetection.ml[194,8358+6])
                        Tmod_apply
                        module_expr (src/LoopDetection.ml[185,8038+17]..src/LoopDetection.ml[185,8038+27])
                          module_expr (src/LoopDetection.ml[185,8038+17]..src/LoopDetection.ml[185,8038+27])
                            Tmod_ident "Dune__exe!.Tarjan.Run"
                        module_expr (src/LoopDetection.ml[185,8038+29]..src/LoopDetection.ml[194,8358+5])
                          Tmod_structure
                          [
                            structure_item (src/LoopDetection.ml[186,8074+4]..src/LoopDetection.ml[186,8074+29])
                              Tstr_type Rec
                              [
                                type_declaration node/1057 (src/LoopDetection.ml[186,8074+4]..src/LoopDetection.ml[186,8074+29])
                                  ptype_params =
                                    []
                                  ptype_cstrs =
                                    []
                                  ptype_kind =
                                    Ttype_abstract
                                  ptype_private = Public
                                  ptype_manifest =
                                    Some
                                      core_type (src/LoopDetection.ml[186,8074+16]..src/LoopDetection.ml[186,8074+29])
                                        Ttyp_constr "Dune__exe!.Grammar.Nonterminal.t"
                                        []
                              ]
                            structure_item (src/LoopDetection.ml[187,8104+4]..src/LoopDetection.ml[187,8104+25])
                              Tstr_value Nonrec
                              [
                                <def>
                                  pattern (src/LoopDetection.ml[187,8104+8]..src/LoopDetection.ml[187,8104+9])
                                    Tpat_var "n/1058"
                                  expression (src/LoopDetection.ml[187,8104+12]..src/LoopDetection.ml[187,8104+25])
                                    Texp_ident "Dune__exe!.Grammar.Nonterminal.n"
                              ]
                            structure_item (src/LoopDetection.ml[188,8130+4]..src/LoopDetection.ml[188,8130+31])
                              Tstr_value Nonrec
                              [
                                <def>
                                  pattern (src/LoopDetection.ml[188,8130+8]..src/LoopDetection.ml[188,8130+13])
                                    Tpat_var "index/1059"
                                  expression (src/LoopDetection.ml[188,8130+16]..src/LoopDetection.ml[188,8130+31])
                                    Texp_ident "Dune__exe!.Grammar.Nonterminal.n2i"
                              ]
                            structure_item (src/LoopDetection.ml[189,8162+4]..src/LoopDetection.ml[189,8162+31])
                              Tstr_value Nonrec
                              [
                                <def>
                                  pattern (src/LoopDetection.ml[189,8162+8]..src/LoopDetection.ml[189,8162+12])
                                    Tpat_var "iter/1060"
                                  expression (src/LoopDetection.ml[189,8162+15]..src/LoopDetection.ml[189,8162+31])
                                    Texp_ident "Dune__exe!.Grammar.Nonterminal.iter"
                              ]
                            structure_item (src/LoopDetection.ml[191,8243+4]..src/LoopDetection.ml[193,8343+14])
                              Tstr_value Nonrec
                              [
                                <def>
                                  pattern (src/LoopDetection.ml[191,8243+8]..src/LoopDetection.ml[191,8243+18])
                                    Tpat_var "successors/1061"
                                  expression (src/LoopDetection.ml[192,8264+6]..src/LoopDetection.ml[193,8343+14])
                                    Texp_apply
                                    expression (src/LoopDetection.ml[193,8343+9]..src/LoopDetection.ml[193,8343+14])
                                      Texp_ident "adapt/675"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/LoopDetection.ml[192,8264+6]..src/LoopDetection.ml[192,8264+78])
                                          Texp_apply
                                          expression (src/LoopDetection.ml[192,8264+6]..src/LoopDetection.ml[192,8264+16])
                                            Texp_ident "successors/483"
                                          [
                                            <arg>
                                              Labelled "require_nullable_suffix"
                                              expression (src/LoopDetection.ml[192,8264+42]..src/LoopDetection.ml[192,8264+47])
                                                Texp_construct "false"
                                                []
                                            <arg>
                                              Labelled "require_nonempty_prefix"
                                              expression (src/LoopDetection.ml[192,8264+73]..src/LoopDetection.ml[192,8264+78])
                                                Texp_construct "false"
                                                []
                                          ]
                                    ]
                              ]
                          ]
                      expression (src/LoopDetection.ml[196,8415+2]..src/LoopDetection.ml[206,8879+5])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/LoopDetection.ml[196,8415+6]..src/LoopDetection.ml[196,8415+18])
                              Tpat_var "successors_H/1081"
                            expression (src/LoopDetection.ml[197,8436+4]..src/LoopDetection.ml[197,8436+75])
                              Texp_apply
                              expression (src/LoopDetection.ml[197,8436+4]..src/LoopDetection.ml[197,8436+14])
                                Texp_ident "successors/483"
                              [
                                <arg>
                                  Labelled "require_nullable_suffix"
                                  expression (src/LoopDetection.ml[197,8436+40]..src/LoopDetection.ml[197,8436+45])
                                    Texp_construct "false"
                                    []
                                <arg>
                                  Labelled "require_nonempty_prefix"
                                  expression (src/LoopDetection.ml[197,8436+71]..src/LoopDetection.ml[197,8436+75])
                                    Texp_construct "true"
                                    []
                              ]
                        ]
                        expression (src/LoopDetection.ml[199,8564+2]..src/LoopDetection.ml[206,8879+5])
                          Texp_apply
                          expression (src/LoopDetection.ml[199,8564+2]..src/LoopDetection.ml[199,8564+18])
                            Texp_ident "Dune__exe!.Grammar.Nonterminal.iter"
                          [
                            <arg>
                              Nolabel
                              expression (src/LoopDetection.ml[199,8564+19]..src/LoopDetection.ml[206,8879+5])
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/LoopDetection.ml[199,8564+29]..src/LoopDetection.ml[199,8564+31])
                                      Tpat_var "nt/1082"
                                    expression (src/LoopDetection.ml[200,8599+4]..src/LoopDetection.ml[205,8871+7])
                                      Texp_apply
                                      expression (src/LoopDetection.ml[200,8599+10]..src/LoopDetection.ml[205,8871+7])
                                        Texp_apply
                                        expression (src/LoopDetection.ml[200,8599+10]..src/LoopDetection.ml[200,8599+22])
                                          Texp_ident "successors_H/1081"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/LoopDetection.ml[200,8599+23]..src/LoopDetection.ml[205,8871+7])
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/LoopDetection.ml[200,8599+33]..src/LoopDetection.ml[200,8599+37])
                                                    Tpat_var "prod/1083"
                                                  expression (src/LoopDetection.ml[200,8599+38]..src/LoopDetection.ml[204,8853+17]) ghost
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (src/LoopDetection.ml[200,8599+38]..src/LoopDetection.ml[200,8599+41])
                                                          Tpat_var "nt'/1084"
                                                        expression (src/LoopDetection.ml[203,8796+6]..src/LoopDetection.ml[204,8853+17])
                                                          Texp_ifthenelse
                                                          expression (src/LoopDetection.ml[203,8796+9]..src/LoopDetection.ml[203,8796+51])
                                                            Texp_apply
                                                            expression (src/LoopDetection.ml[203,8796+29]..src/LoopDetection.ml[203,8796+30])
                                                              Texp_ident "Stdlib!.="
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/LoopDetection.ml[203,8796+9]..src/LoopDetection.ml[203,8796+28])
                                                                  Texp_apply
                                                                  expression (src/LoopDetection.ml[203,8796+9]..src/LoopDetection.ml[203,8796+25])
                                                                    Texp_ident "T/1080.representative"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/LoopDetection.ml[203,8796+26]..src/LoopDetection.ml[203,8796+28])
                                                                        Texp_ident "nt/1082"
                                                                  ]
                                                              <arg>
                                                                Nolabel
                                                                expression (src/LoopDetection.ml[203,8796+31]..src/LoopDetection.ml[203,8796+51])
                                                                  Texp_apply
                                                                  expression (src/LoopDetection.ml[203,8796+31]..src/LoopDetection.ml[203,8796+47])
                                                                    Texp_ident "T/1080.representative"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/LoopDetection.ml[203,8796+48]..src/LoopDetection.ml[203,8796+51])
                                                                        Texp_ident "nt'/1084"
                                                                  ]
                                                            ]
                                                          expression (src/LoopDetection.ml[204,8853+8]..src/LoopDetection.ml[204,8853+17])
                                                            Texp_apply
                                                            expression (src/LoopDetection.ml[204,8853+8]..src/LoopDetection.ml[204,8853+12])
                                                              Texp_ident "fail/1052"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/LoopDetection.ml[204,8853+13]..src/LoopDetection.ml[204,8853+17])
                                                                  Texp_ident "prod/1083"
                                                            ]
                                                          None
                                                    ]
                                              ]
                                        ]
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/LoopDetection.ml[200,8599+4]..src/LoopDetection.ml[200,8599+6])
                                            Texp_ident "nt/1082"
                                      ]
                                ]
                          ]
                ]
              structure_item (src/LoopDetection.ml[210,8968+0]..src/LoopDetection.ml[211,8977+36])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/LoopDetection.ml[210,8968+4]..src/LoopDetection.ml[210,8968+6])
                      Tpat_construct "()"
                      []
                      None
                    expression (src/LoopDetection.ml[211,8977+2]..src/LoopDetection.ml[211,8977+36])
                      Texp_apply
                      expression (src/LoopDetection.ml[211,8977+2]..src/LoopDetection.ml[211,8977+11])
                        Texp_ident "Dune__exe!.Time.tick"
                      [
                        <arg>
                          Nolabel
                          expression (src/LoopDetection.ml[211,8977+12]..src/LoopDetection.ml[211,8977+36])
                            Texp_constant Const_string("Running loop detection",(src/LoopDetection.ml[211,8977+13]..src/LoopDetection.ml[211,8977+35]),None)
                      ]
                ]
            ]
]

{<Dune__exe__LoopDetection>
 "Run"[module] -> Abs<Dune__exe__LoopDetection.55>(()/1, {
                                                          });
 }

(let
  (Run/1090 =
     (function */3636 is_a_functor
       (let
         (*/3611 =a */3636
          nullable_suffix/414 =
            (function prod/416 i/417[int] : int
              (let
                (*match*/3615 =
                   (apply
                     (field_imm 4
                       (field_imm 11 (global Dune__exe__Grammar!)))
                     prod/416 i/417)
                 *match*/3616 =a (field_imm 1 *match*/3615)
                 nullable/418 =a (field_imm 0 *match*/3615))
                nullable/418))
          successors/483 =
            (function require_nullable_suffix/485[int]
              require_nonempty_prefix/486[int] yield/541 nt/542 : int
              (apply
                (field_imm 22 (field_imm 8 (global Dune__exe__Grammar!)))
                nt/542
                (function prod/563 : int
                  (let
                    (rhs/564 =
                       (apply
                         (field_imm 6
                           (field_imm 8 (global Dune__exe__Grammar!)))
                         prod/563)
                     n/565 =[int] (array.length[addr] rhs/564)
                     nullable_prefix/614 = (makemutable 0 (int) 1)
                     i/615 = (makemutable 0 (int) 0))
                    (while
                      (&& (field_int 0 nullable_prefix/614)
                        (< (field_int 0 i/615) n/565))
                      (let
                        (*match*/3617 =
                           (array.get[addr] rhs/564
                             (apply (field_imm 22 (global Dune__exe__Misc!))
                               i/615)))
                        (switch* *match*/3617
                         case tag 0:
                          (let (nt'/674 =a (field_imm 0 *match*/3617))
                            (seq
                              (if
                                (&&
                                  (|| (not require_nullable_suffix/485)
                                    (apply nullable_suffix/414 prod/563
                                      (field_int 0 i/615)))
                                  (|| (not require_nonempty_prefix/486)
                                    (> (field_int 0 i/615) 1)))
                                (apply yield/541 prod/563 nt'/674) 0)
                              (setfield_imm 0 nullable_prefix/614
                                (apply
                                  (field_imm 0
                                    (field_imm 11
                                      (global Dune__exe__Grammar!)))
                                  nt'/674))))
                         case tag 1:
                          (let (*match*/3618 =a (field_imm 0 *match*/3617))
                            (setfield_imm 0 nullable_prefix/614 0)))))))))
          adapt/675 =
            (function successors/677 yield/678 nt/679
              (apply successors/677
                (function _prod/680 nt'/681 (apply yield/678 nt'/681))
                nt/679))
          show_cycle/682 =
            (function nts/684 nt/685
              (seq
                (if
                  (caml_equal
                    (apply (field_imm 5 (global Stdlib__List!)) nts/684)
                    nt/685)
                  0
                  (raise
                    (makeblock 0 (global Assert_failure/28!)
                      [0: "src/LoopDetection.ml" 84 2])))
                (if
                  (== (apply (field_imm 0 (global Stdlib__List!)) nts/684) 1)
                  ""
                  (let
                    (nts/752 =
                       (apply (field_imm 9 (global Stdlib__Array!))
                         (apply (field_imm 36 (global Stdlib!)) nts/684
                           (makeblock 0 nt/685 0)))
                     i/753 = (makemutable 0 (int) 0)
                     next/754 =
                       (function param/758[int]
                         (apply
                           (field_imm 5
                             (field_imm 0 (global Dune__exe__Grammar!)))
                           0
                           (array.get[gen] nts/752
                             (apply (field_imm 22 (global Dune__exe__Misc!))
                               i/753))))
                     finished/755 =
                       (function param/759[int] : int
                         (== (field_int 0 i/753) (array.length[gen] nts/752))))
                    (apply (field_imm 4 (global Dune__exe__Misc!)) 1024
                      (function b/760 : int
                        (let
                          (out/761 =
                             (function format/763
                               (apply (field_imm 4 (global Stdlib__Printf!))
                                 b/760 format/763)))
                          (seq
                            (apply out/761 [0: [2: 0 0] "%s"]
                              (apply next/754 0))
                            (while (not (apply finished/755 0))
                              (seq
                                (apply out/761
                                  [0:
                                   [11: " expands to " [2: 0 0]]
                                   " expands to %s"]
                                  (apply next/754 0))
                                (if (apply finished/755 0)
                                  (apply out/761 [0: [11: ".\n" 0] ".\n"])
                                  (apply out/761
                                    [0: [11: ",\nwhich" 0] ",\nwhich"]))))))))))))
          fail/882 =
            (function nts/884 nt/885
              (let
                (positions/886 =
                   (apply (field_imm 14 (global Stdlib__List!))
                     (apply (field_imm 19 (global Stdlib__List!))
                       (field_imm 15
                         (field_imm 0 (global Dune__exe__Grammar!)))
                       nts/884)))
                (apply (field_imm 5 (global Dune__exe__Error!)) positions/886
                  [0:
                   [11:
                    "the grammar is cyclic:\nthe nonterminal symbol "
                    [2:
                     0
                     [11:
                      " expands to itself.\n"
                      [2: 0 [11: "A cyclic grammar is ambiguous." 0]]]]]
                   "the grammar is cyclic:\nthe nonterminal symbol %s expands to itself.\n%sA cyclic grammar is ambiguous."]
                  (apply
                    (field_imm 5 (field_imm 0 (global Dune__exe__Grammar!)))
                    0 nt/885)
                  (apply show_cycle/682 nts/884 nt/885))))
          *match*/3635 =
            (let
              (M/1047 =
                 (apply
                   (let
                     (let/3621 =
                        (field_imm 3 (global Vendored_fix__Memoize!)))
                     (field_imm 3 (global Vendored_fix__Memoize!)))
                   (let
                     (let/3619 = (field_imm 0 (global Dune__exe__Grammar!))
                      let/3620 =a (field_imm 0 (global Dune__exe__Grammar!)))
                     (makeblock 0)))
               successors_R/1048 =
                 (apply adapt/675 (apply successors/483 1 0))
               check/1049 = (apply (field_imm 4 M/1047) successors_R/1048))
              (try
                (apply
                  (field_imm 9 (field_imm 0 (global Dune__exe__Grammar!)))
                  check/1049)
               with exn/3622
                (catch
                  (let (tag/3623 =a (field_imm 0 exn/3622))
                    (if (== tag/3623 (field_imm 3 M/1047))
                      (let
                        (nt/1051 =a (field_imm 2 exn/3622)
                         nts/1050 =a (field_imm 1 exn/3622))
                        (apply fail/882 nts/1050 nt/1051))
                      (exit 4)))
                 with (4) (reraise exn/3622))))
          fail/1052 =
            (function prod/1053
              (let
                (*match*/3627 =
                   (apply
                     (field_imm 4 (field_imm 8 (global Dune__exe__Grammar!)))
                     prod/1053)
                 rhs/1055 =a (field_imm 1 *match*/3627)
                 nt/1054 =a (field_imm 0 *match*/3627)
                 positions/1056 =
                   (apply
                     (field_imm 10
                       (field_imm 8 (global Dune__exe__Grammar!)))
                     prod/1053))
                (apply (field_imm 5 (global Dune__exe__Error!))
                  positions/1056
                  [0:
                   [11:
                    "the grammar exhibits hidden left recursion: in the production\n"
                    [2:
                     0
                     [11:
                      ",\nthe nonterminal symbol "
                      [2:
                       0
                       [11:
                        " is nullable,\nand the remainder of the right-hand side expands to a sentential form\nthat begins with the nonterminal symbol "
                        [2:
                         0
                         [11:
                          ".\nThis implies that the grammar is not LR(k) for any k."
                          0]]]]]]]
                   "the grammar exhibits hidden left recursion: in the production\n%s,\nthe nonterminal symbol %s is nullable,\nand the remainder of the right-hand side expands to a sentential form\nthat begins with the nonterminal symbol %s.\nThis implies that the grammar is not LR(k) for any k."]
                  (apply
                    (field_imm 29 (field_imm 8 (global Dune__exe__Grammar!)))
                    prod/1053)
                  (apply
                    (field_imm 5 (field_imm 5 (global Dune__exe__Grammar!)))
                    (array.get[addr] rhs/1055 0))
                  (apply
                    (field_imm 5 (field_imm 5 (global Dune__exe__Grammar!)))
                    (makeblock 0 nt/1054)))))
          *match*/3632 =
            (let
              (T/1080 =
                 (apply
                   (let
                     (let/3628 = (field_imm 0 (global Dune__exe__Tarjan!)))
                     (field_imm 0 (global Dune__exe__Tarjan!)))
                   (let
                     (n/1058 =[int]
                        (field_imm 2
                          (field_imm 0 (global Dune__exe__Grammar!)))
                      index/1059 =
                        (field_imm 4
                          (field_imm 0 (global Dune__exe__Grammar!)))
                      iter/1060 =
                        (field_imm 9
                          (field_imm 0 (global Dune__exe__Grammar!)))
                      successors/1061 =
                        (apply adapt/675 (apply successors/483 0 0)))
                     (makeblock 0 n/1058 index/1059 successors/1061
                       iter/1060)))
               successors_H/1081 = (apply successors/483 0 1))
              (apply (field_imm 9 (field_imm 0 (global Dune__exe__Grammar!)))
                (function nt/1082 : int
                  (apply successors_H/1081
                    (function prod/1083 nt'/1084 : int
                      (if
                        (caml_equal (apply (field_imm 0 T/1080) nt/1082)
                          (apply (field_imm 0 T/1080) nt'/1084))
                        (apply fail/1052 prod/1083) 0))
                    nt/1082))))
          *match*/3630 =
            (apply (field_imm 0 (global Dune__exe__Time!))
              "Running loop detection"))
         (makeblock 0 nullable_suffix/414 successors/483 adapt/675
           show_cycle/682 fail/1052))))
  (seq
    (setfield_ptr(root-init) 0 (global Dune__exe__LoopDetection!)
      (function funarg/3637 is_a_functor stub
        (let (let/3638 = (apply Run/1090 funarg/3637)) (makeblock 0))))
    0))
(let
  (Run/1090 =
     (function */3636 is_a_functor
       (let
         (nullable_suffix/414 =
            (function prod/416 i/417[int] : int
              (let
                (*match*/3615 =
                   (apply
                     (field_imm 4
                       (field_imm 11 (global Dune__exe__Grammar!)))
                     prod/416 i/417))
                (field_imm 0 *match*/3615)))
          successors/483 =
            (function require_nullable_suffix/485[int]
              require_nonempty_prefix/486[int] yield/541 nt/542 : int
              (apply
                (field_imm 22 (field_imm 8 (global Dune__exe__Grammar!)))
                nt/542
                (function prod/563 : int
                  (let
                    (rhs/564 =
                       (apply
                         (field_imm 6
                           (field_imm 8 (global Dune__exe__Grammar!)))
                         prod/563)
                     n/565 =[int] (array.length[addr] rhs/564)
                     nullable_prefix/614 =mut[int] 1
                     i/615 = (makemutable 0 (int) 0))
                    (while
                      (&& *nullable_prefix/614 (< (field_int 0 i/615) n/565))
                      (let
                        (*match*/3617 =
                           (array.get[addr] rhs/564
                             (apply (field_imm 22 (global Dune__exe__Misc!))
                               i/615)))
                        (switch* *match*/3617
                         case tag 0:
                          (let (nt'/674 =a (field_imm 0 *match*/3617))
                            (seq
                              (if
                                (&&
                                  (|| (not require_nullable_suffix/485)
                                    (apply nullable_suffix/414 prod/563
                                      (field_int 0 i/615)))
                                  (|| (not require_nonempty_prefix/486)
                                    (> (field_int 0 i/615) 1)))
                                (apply yield/541 prod/563 nt'/674) 0)
                              (assign nullable_prefix/614
                                (apply
                                  (field_imm 0
                                    (field_imm 11
                                      (global Dune__exe__Grammar!)))
                                  nt'/674))))
                         case tag 1: (assign nullable_prefix/614 0))))))))
          adapt/675 =
            (function successors/677 yield/678 nt/679
              (apply successors/677
                (function _prod/680 nt'/681 (apply yield/678 nt'/681))
                nt/679))
          show_cycle/682 =
            (function nts/684 nt/685
              (seq
                (if
                  (caml_equal
                    (apply (field_imm 5 (global Stdlib__List!)) nts/684)
                    nt/685)
                  0
                  (raise
                    (makeblock 0 (global Assert_failure/28!)
                      [0: "src/LoopDetection.ml" 84 2])))
                (if
                  (== (apply (field_imm 0 (global Stdlib__List!)) nts/684) 1)
                  ""
                  (let
                    (nts/752 =
                       (apply (field_imm 9 (global Stdlib__Array!))
                         (apply (field_imm 36 (global Stdlib!)) nts/684
                           (makeblock 0 nt/685 0)))
                     i/753 = (makemutable 0 (int) 0)
                     next/754 =
                       (function param/758[int]
                         (apply
                           (field_imm 5
                             (field_imm 0 (global Dune__exe__Grammar!)))
                           0
                           (array.get[gen] nts/752
                             (apply (field_imm 22 (global Dune__exe__Misc!))
                               i/753))))
                     finished/755 =
                       (function param/759[int] : int
                         (== (field_int 0 i/753) (array.length[gen] nts/752))))
                    (apply (field_imm 4 (global Dune__exe__Misc!)) 1024
                      (function b/760 : int
                        (let
                          (out/761 =
                             (function format/763
                               (apply (field_imm 4 (global Stdlib__Printf!))
                                 b/760 format/763)))
                          (seq
                            (apply out/761 [0: [2: 0 0] "%s"]
                              (apply next/754 0))
                            (while (not (apply finished/755 0))
                              (seq
                                (apply out/761
                                  [0:
                                   [11: " expands to " [2: 0 0]]
                                   " expands to %s"]
                                  (apply next/754 0))
                                (if (apply finished/755 0)
                                  (apply out/761 [0: [11: ".\n" 0] ".\n"])
                                  (apply out/761
                                    [0: [11: ",\nwhich" 0] ",\nwhich"]))))))))))))
          *match*/3635 =
            (let
              (M/1047 =
                 (apply
                   (let
                     (let/3621 =
                        (field_imm 3 (global Vendored_fix__Memoize!)))
                     (field_imm 3 (global Vendored_fix__Memoize!)))
                   (let
                     (let/3619 = (field_imm 0 (global Dune__exe__Grammar!)))
                     (makeblock 0)))
               successors_R/1048 =
                 (apply adapt/675 (apply successors/483 1 0))
               check/1049 = (apply (field_imm 4 M/1047) successors_R/1048))
              (try
                (apply
                  (field_imm 9 (field_imm 0 (global Dune__exe__Grammar!)))
                  check/1049)
               with exn/3622
                (if (== (field_imm 0 exn/3622) (field_imm 3 M/1047))
                  (let
                    (nt/1051 =a (field_imm 2 exn/3622)
                     nts/1050 =a (field_imm 1 exn/3622)
                     positions/886 =
                       (apply (field_imm 14 (global Stdlib__List!))
                         (apply (field_imm 19 (global Stdlib__List!))
                           (field_imm 15
                             (field_imm 0 (global Dune__exe__Grammar!)))
                           nts/1050)))
                    (apply (field_imm 5 (global Dune__exe__Error!))
                      positions/886
                      [0:
                       [11:
                        "the grammar is cyclic:\nthe nonterminal symbol "
                        [2:
                         0
                         [11:
                          " expands to itself.\n"
                          [2: 0 [11: "A cyclic grammar is ambiguous." 0]]]]]
                       "the grammar is cyclic:\nthe nonterminal symbol %s expands to itself.\n%sA cyclic grammar is ambiguous."]
                      (apply
                        (field_imm 5
                          (field_imm 0 (global Dune__exe__Grammar!)))
                        0 nt/1051)
                      (apply show_cycle/682 nts/1050 nt/1051)))
                  (reraise exn/3622))))
          fail/1052 =
            (function prod/1053
              (let
                (*match*/3627 =
                   (apply
                     (field_imm 4 (field_imm 8 (global Dune__exe__Grammar!)))
                     prod/1053)
                 positions/1056 =
                   (apply
                     (field_imm 10
                       (field_imm 8 (global Dune__exe__Grammar!)))
                     prod/1053))
                (apply (field_imm 5 (global Dune__exe__Error!))
                  positions/1056
                  [0:
                   [11:
                    "the grammar exhibits hidden left recursion: in the production\n"
                    [2:
                     0
                     [11:
                      ",\nthe nonterminal symbol "
                      [2:
                       0
                       [11:
                        " is nullable,\nand the remainder of the right-hand side expands to a sentential form\nthat begins with the nonterminal symbol "
                        [2:
                         0
                         [11:
                          ".\nThis implies that the grammar is not LR(k) for any k."
                          0]]]]]]]
                   "the grammar exhibits hidden left recursion: in the production\n%s,\nthe nonterminal symbol %s is nullable,\nand the remainder of the right-hand side expands to a sentential form\nthat begins with the nonterminal symbol %s.\nThis implies that the grammar is not LR(k) for any k."]
                  (apply
                    (field_imm 29 (field_imm 8 (global Dune__exe__Grammar!)))
                    prod/1053)
                  (apply
                    (field_imm 5 (field_imm 5 (global Dune__exe__Grammar!)))
                    (array.get[addr] (field_imm 1 *match*/3627) 0))
                  (apply
                    (field_imm 5 (field_imm 5 (global Dune__exe__Grammar!)))
                    (makeblock 0 (field_imm 0 *match*/3627))))))
          *match*/3632 =
            (let
              (T/1080 =
                 (apply
                   (let
                     (let/3628 = (field_imm 0 (global Dune__exe__Tarjan!)))
                     (field_imm 0 (global Dune__exe__Tarjan!)))
                   (let
                     (n/1058 =[int]
                        (field_imm 2
                          (field_imm 0 (global Dune__exe__Grammar!)))
                      index/1059 =
                        (field_imm 4
                          (field_imm 0 (global Dune__exe__Grammar!)))
                      iter/1060 =
                        (field_imm 9
                          (field_imm 0 (global Dune__exe__Grammar!)))
                      successors/1061 =
                        (apply adapt/675 (apply successors/483 0 0)))
                     (makeblock 0 n/1058 index/1059 successors/1061
                       iter/1060)))
               successors_H/1081 = (apply successors/483 0 1))
              (apply (field_imm 9 (field_imm 0 (global Dune__exe__Grammar!)))
                (function nt/1082 : int
                  (apply successors_H/1081
                    (function prod/1083 nt'/1084 : int
                      (if
                        (caml_equal (apply (field_imm 0 T/1080) nt/1082)
                          (apply (field_imm 0 T/1080) nt'/1084))
                        (apply fail/1052 prod/1083) 0))
                    nt/1082))))
          *match*/3630 =
            (apply (field_imm 0 (global Dune__exe__Time!))
              "Running loop detection"))
         (makeblock 0 nullable_suffix/414 successors/483 adapt/675
           show_cycle/682 fail/1052))))
  (seq
    (setfield_ptr(root-init) 0 (global Dune__exe__LoopDetection!)
      (function funarg/3637 is_a_functor stub
        (let (let/3638 = (apply Run/1090 funarg/3637)) (makeblock 0))))
    0))
