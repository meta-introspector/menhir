[
  structure_item (src/codeInliner.ml[14,1001+0]..[14,1001+7])
    Pstr_open Fresh
    module_expr (src/codeInliner.ml[14,1001+5]..[14,1001+7])
      Pmod_ident "IL" (src/codeInliner.ml[14,1001+5]..[14,1001+7])
  structure_item (src/codeInliner.ml[15,1009+0]..[15,1009+13])
    Pstr_open Fresh
    module_expr (src/codeInliner.ml[15,1009+5]..[15,1009+13])
      Pmod_ident "CodeBits" (src/codeInliner.ml[15,1009+5]..[15,1009+13])
  structure_item (src/codeInliner.ml[25,1448+0]..[30,1600+3])
    Pstr_class
    [
      class_declaration (src/codeInliner.ml[25,1448+0]..[30,1600+3])
        pci_virt = Concrete
        pci_params =
          []
        pci_name = "locals" (src/codeInliner.ml[25,1448+6]..[25,1448+12])
        pci_expr =
          class_expr (src/codeInliner.ml[25,1448+13]..[30,1600+3])
            Pcl_fun
            Nolabel
            None
            pattern (src/codeInliner.ml[25,1448+13]..[25,1448+18])
              Ppat_var "table" (src/codeInliner.ml[25,1448+13]..[25,1448+18])
            class_expr (src/codeInliner.ml[25,1448+21]..[30,1600+3])
              Pcl_structure
              class_structure
                pattern (src/codeInliner.ml[25,1448+27]..[25,1448+27]) ghost
                  Ppat_any
                [
                  class_field (src/codeInliner.ml[27,1477+2]..[28,1530+68])
                    Pcf_method Public
                      "pvar" (src/codeInliner.ml[27,1477+9]..[27,1477+13])
                      Concrete Fresh
                      expression (src/codeInliner.ml[27,1477+14]..[28,1530+68]) ghost
                        Pexp_poly
                        expression (src/codeInliner.ml[27,1477+14]..[28,1530+68]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/codeInliner.ml[27,1477+14]..[27,1477+36])
                            Ppat_constraint
                            pattern (src/codeInliner.ml[27,1477+15]..[27,1477+21])
                              Ppat_var "locals" (src/codeInliner.ml[27,1477+15]..[27,1477+21])
                            core_type (src/codeInliner.ml[27,1477+24]..[27,1477+35])
                              Ptyp_constr "StringSet.t" (src/codeInliner.ml[27,1477+24]..[27,1477+35])
                              []
                          expression (src/codeInliner.ml[27,1477+37]..[28,1530+68]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/codeInliner.ml[27,1477+37]..[27,1477+50])
                              Ppat_constraint
                              pattern (src/codeInliner.ml[27,1477+38]..[27,1477+40])
                                Ppat_var "id" (src/codeInliner.ml[27,1477+38]..[27,1477+40])
                              core_type (src/codeInliner.ml[27,1477+43]..[27,1477+49])
                                Ptyp_constr "string" (src/codeInliner.ml[27,1477+43]..[27,1477+49])
                                []
                            expression (src/codeInliner.ml[28,1530+4]..[28,1530+68])
                              Pexp_ifthenelse
                              expression (src/codeInliner.ml[28,1530+7]..[28,1530+27])
                                Pexp_apply
                                expression (src/codeInliner.ml[28,1530+7]..[28,1530+18])
                                  Pexp_ident "Hashtbl.mem" (src/codeInliner.ml[28,1530+7]..[28,1530+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/codeInliner.ml[28,1530+19]..[28,1530+24])
                                      Pexp_ident "table" (src/codeInliner.ml[28,1530+19]..[28,1530+24])
                                  <arg>
                                  Nolabel
                                    expression (src/codeInliner.ml[28,1530+25]..[28,1530+27])
                                      Pexp_ident "id" (src/codeInliner.ml[28,1530+25]..[28,1530+27])
                                ]
                              expression (src/codeInliner.ml[28,1530+33]..[28,1530+56])
                                Pexp_apply
                                expression (src/codeInliner.ml[28,1530+33]..[28,1530+46])
                                  Pexp_ident "StringSet.add" (src/codeInliner.ml[28,1530+33]..[28,1530+46])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/codeInliner.ml[28,1530+47]..[28,1530+49])
                                      Pexp_ident "id" (src/codeInliner.ml[28,1530+47]..[28,1530+49])
                                  <arg>
                                  Nolabel
                                    expression (src/codeInliner.ml[28,1530+50]..[28,1530+56])
                                      Pexp_ident "locals" (src/codeInliner.ml[28,1530+50]..[28,1530+56])
                                ]
                              Some
                                expression (src/codeInliner.ml[28,1530+62]..[28,1530+68])
                                  Pexp_ident "locals" (src/codeInliner.ml[28,1530+62]..[28,1530+68])
                        None
                ]
    ]
  structure_item (src/codeInliner.ml[34,1633+0]..[282,8873+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/codeInliner.ml[34,1633+4]..[34,1633+18])
          Ppat_var "inline_valdefs" (src/codeInliner.ml[34,1633+4]..[34,1633+18])
        expression (src/codeInliner.ml[34,1633+19]..[282,8873+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/codeInliner.ml[34,1633+19]..[34,1633+39])
            Ppat_constraint
            pattern (src/codeInliner.ml[34,1633+20]..[34,1633+24])
              Ppat_var "defs" (src/codeInliner.ml[34,1633+20]..[34,1633+24])
            core_type (src/codeInliner.ml[34,1633+27]..[34,1633+38])
              Ptyp_constr "list" (src/codeInliner.ml[34,1633+34]..[34,1633+38])
              [
                core_type (src/codeInliner.ml[34,1633+27]..[34,1633+33])
                  Ptyp_constr "valdef" (src/codeInliner.ml[34,1633+27]..[34,1633+33])
                  []
              ]
          expression (src/codeInliner.ml[34,1633+40]..[282,8873+9])
            Pexp_constraint
            expression (src/codeInliner.ml[38,1741+2]..[282,8873+9])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/codeInliner.ml[38,1741+6]..[38,1741+19])
                    Ppat_tuple
                    [
                      pattern (src/codeInliner.ml[38,1741+6]..[38,1741+12])
                        Ppat_var "before" (src/codeInliner.ml[38,1741+6]..[38,1741+12])
                      pattern (src/codeInliner.ml[38,1741+14]..[38,1741+19])
                        Ppat_var "table" (src/codeInliner.ml[38,1741+14]..[38,1741+19])
                    ]
                  expression (src/codeInliner.ml[38,1741+22]..[38,1741+49])
                    Pexp_apply
                    expression (src/codeInliner.ml[38,1741+22]..[38,1741+44])
                      Pexp_ident "Traverse.tabulate_defs" (src/codeInliner.ml[38,1741+22]..[38,1741+44])
                    [
                      <arg>
                      Nolabel
                        expression (src/codeInliner.ml[38,1741+45]..[38,1741+49])
                          Pexp_ident "defs" (src/codeInliner.ml[38,1741+45]..[38,1741+49])
                    ]
              ]
              expression (src/codeInliner.ml[44,1978+2]..[282,8873+9])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/codeInliner.ml[44,1978+6]..[44,1978+11])
                      Ppat_var "queue" (src/codeInliner.ml[44,1978+6]..[44,1978+11])
                    core_type (src/codeInliner.ml[44,1978+14]..[44,1978+28])
                      Ptyp_constr "Queue.t" (src/codeInliner.ml[44,1978+21]..[44,1978+28])
                      [
                        core_type (src/codeInliner.ml[44,1978+14]..[44,1978+20])
                          Ptyp_constr "valdef" (src/codeInliner.ml[44,1978+14]..[44,1978+20])
                          []
                      ]
                    expression (src/codeInliner.ml[45,2009+4]..[45,2009+18])
                      Pexp_apply
                      expression (src/codeInliner.ml[45,2009+4]..[45,2009+16])
                        Pexp_ident "Queue.create" (src/codeInliner.ml[45,2009+4]..[45,2009+16])
                      [
                        <arg>
                        Nolabel
                          expression (src/codeInliner.ml[45,2009+16]..[45,2009+18])
                            Pexp_construct "()" (src/codeInliner.ml[45,2009+16]..[45,2009+18])
                            None
                      ]
                  <def>
                    pattern (src/codeInliner.ml[46,2028+6]..[46,2028+11])
                      Ppat_var "usage" (src/codeInliner.ml[46,2028+6]..[46,2028+11])
                    core_type (src/codeInliner.ml[46,2028+14]..[46,2028+33])
                      Ptyp_constr "ref" (src/codeInliner.ml[46,2028+30]..[46,2028+33])
                      [
                        core_type (src/codeInliner.ml[46,2028+14]..[46,2028+29])
                          Ptyp_constr "StringMap.t" (src/codeInliner.ml[46,2028+18]..[46,2028+29])
                          [
                            core_type (src/codeInliner.ml[46,2028+14]..[46,2028+17])
                              Ptyp_constr "int" (src/codeInliner.ml[46,2028+14]..[46,2028+17])
                              []
                          ]
                      ]
                    expression (src/codeInliner.ml[47,2064+4]..[47,2064+23])
                      Pexp_apply
                      expression (src/codeInliner.ml[47,2064+4]..[47,2064+7])
                        Pexp_ident "ref" (src/codeInliner.ml[47,2064+4]..[47,2064+7])
                      [
                        <arg>
                        Nolabel
                          expression (src/codeInliner.ml[47,2064+8]..[47,2064+23])
                            Pexp_ident "StringMap.empty" (src/codeInliner.ml[47,2064+8]..[47,2064+23])
                      ]
                ]
                expression (src/codeInliner.ml[52,2153+2]..[282,8873+9])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/codeInliner.ml[52,2153+6]..[52,2153+11])
                        Ppat_var "visit" (src/codeInliner.ml[52,2153+6]..[52,2153+11])
                      expression (src/codeInliner.ml[52,2153+12]..[77,2893+10]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/codeInliner.ml[52,2153+12]..[52,2153+18])
                          Ppat_var "locals" (src/codeInliner.ml[52,2153+12]..[52,2153+18])
                        expression (src/codeInliner.ml[52,2153+19]..[77,2893+10]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/codeInliner.ml[52,2153+19]..[52,2153+21])
                            Ppat_var "id" (src/codeInliner.ml[52,2153+19]..[52,2153+21])
                          expression (src/codeInliner.ml[53,2177+4]..[77,2893+10])
                            Pexp_ifthenelse
                            expression (src/codeInliner.ml[53,2177+7]..[53,2177+30])
                              Pexp_apply
                              expression (src/codeInliner.ml[53,2177+7]..[53,2177+20])
                                Pexp_ident "StringSet.mem" (src/codeInliner.ml[53,2177+7]..[53,2177+20])
                              [
                                <arg>
                                Nolabel
                                  expression (src/codeInliner.ml[53,2177+21]..[53,2177+23])
                                    Pexp_ident "id" (src/codeInliner.ml[53,2177+21]..[53,2177+23])
                                <arg>
                                Nolabel
                                  expression (src/codeInliner.ml[53,2177+24]..[53,2177+30])
                                    Pexp_ident "locals" (src/codeInliner.ml[53,2177+24]..[53,2177+30])
                              ]
                            expression (src/codeInliner.ml[55,2265+6]..[55,2265+8])
                              Pexp_construct "()" (src/codeInliner.ml[55,2265+6]..[55,2265+8])
                              None
                            Some
                              expression (src/codeInliner.ml[57,2283+6]..[77,2893+10])
                                Pexp_try
                                expression (src/codeInliner.ml[58,2293+8]..[71,2661+48])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/codeInliner.ml[58,2293+12]..[58,2293+18])
                                        Ppat_tuple
                                        [
                                          pattern (src/codeInliner.ml[58,2293+12]..[58,2293+13])
                                            Ppat_any
                                          pattern (src/codeInliner.ml[58,2293+15]..[58,2293+18])
                                            Ppat_var "def" (src/codeInliner.ml[58,2293+15]..[58,2293+18])
                                        ]
                                      expression (src/codeInliner.ml[58,2293+21]..[58,2293+42])
                                        Pexp_apply
                                        expression (src/codeInliner.ml[58,2293+21]..[58,2293+33])
                                          Pexp_ident "Hashtbl.find" (src/codeInliner.ml[58,2293+21]..[58,2293+33])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/codeInliner.ml[58,2293+34]..[58,2293+39])
                                              Pexp_ident "table" (src/codeInliner.ml[58,2293+34]..[58,2293+39])
                                          <arg>
                                          Nolabel
                                            expression (src/codeInliner.ml[58,2293+40]..[58,2293+42])
                                              Pexp_ident "id" (src/codeInliner.ml[58,2293+40]..[58,2293+42])
                                        ]
                                  ]
                                  expression (src/codeInliner.ml[64,2508+8]..[71,2661+48])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/codeInliner.ml[64,2508+12]..[64,2508+13])
                                          Ppat_var "n" (src/codeInliner.ml[64,2508+12]..[64,2508+13])
                                        expression (src/codeInliner.ml[65,2524+10]..[69,2636+13])
                                          Pexp_try
                                          expression (src/codeInliner.ml[66,2538+12]..[66,2538+36])
                                            Pexp_apply
                                            expression (src/codeInliner.ml[66,2538+12]..[66,2538+26])
                                              Pexp_ident "StringMap.find" (src/codeInliner.ml[66,2538+12]..[66,2538+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/codeInliner.ml[66,2538+27]..[66,2538+29])
                                                  Pexp_ident "id" (src/codeInliner.ml[66,2538+27]..[66,2538+29])
                                              <arg>
                                              Nolabel
                                                expression (src/codeInliner.ml[66,2538+30]..[66,2538+36])
                                                  Pexp_apply
                                                  expression (src/codeInliner.ml[66,2538+30]..[66,2538+31])
                                                    Pexp_ident "!" (src/codeInliner.ml[66,2538+30]..[66,2538+31])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/codeInliner.ml[66,2538+31]..[66,2538+36])
                                                        Pexp_ident "usage" (src/codeInliner.ml[66,2538+31]..[66,2538+36])
                                                  ]
                                            ]
                                          [
                                            <case>
                                              pattern (src/codeInliner.ml[67,2575+15]..[67,2575+24])
                                                Ppat_construct "Not_found" (src/codeInliner.ml[67,2575+15]..[67,2575+24])
                                                None
                                              expression (src/codeInliner.ml[68,2603+12]..[69,2636+13])
                                                Pexp_sequence
                                                expression (src/codeInliner.ml[68,2603+12]..[68,2603+31])
                                                  Pexp_apply
                                                  expression (src/codeInliner.ml[68,2603+12]..[68,2603+21])
                                                    Pexp_ident "Queue.add" (src/codeInliner.ml[68,2603+12]..[68,2603+21])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/codeInliner.ml[68,2603+22]..[68,2603+25])
                                                        Pexp_ident "def" (src/codeInliner.ml[68,2603+22]..[68,2603+25])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/codeInliner.ml[68,2603+26]..[68,2603+31])
                                                        Pexp_ident "queue" (src/codeInliner.ml[68,2603+26]..[68,2603+31])
                                                  ]
                                                expression (src/codeInliner.ml[69,2636+12]..[69,2636+13])
                                                  Pexp_constant PConst_int (0,None)
                                          ]
                                    ]
                                    expression (src/codeInliner.ml[71,2661+8]..[71,2661+48])
                                      Pexp_apply
                                      expression (src/codeInliner.ml[71,2661+14]..[71,2661+16])
                                        Pexp_ident ":=" (src/codeInliner.ml[71,2661+14]..[71,2661+16])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/codeInliner.ml[71,2661+8]..[71,2661+13])
                                            Pexp_ident "usage" (src/codeInliner.ml[71,2661+8]..[71,2661+13])
                                        <arg>
                                        Nolabel
                                          expression (src/codeInliner.ml[71,2661+17]..[71,2661+48])
                                            Pexp_apply
                                            expression (src/codeInliner.ml[71,2661+17]..[71,2661+30])
                                              Pexp_ident "StringMap.add" (src/codeInliner.ml[71,2661+17]..[71,2661+30])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/codeInliner.ml[71,2661+31]..[71,2661+33])
                                                  Pexp_ident "id" (src/codeInliner.ml[71,2661+31]..[71,2661+33])
                                              <arg>
                                              Nolabel
                                                expression (src/codeInliner.ml[71,2661+34]..[71,2661+41])
                                                  Pexp_apply
                                                  expression (src/codeInliner.ml[71,2661+37]..[71,2661+38])
                                                    Pexp_ident "+" (src/codeInliner.ml[71,2661+37]..[71,2661+38])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/codeInliner.ml[71,2661+35]..[71,2661+36])
                                                        Pexp_ident "n" (src/codeInliner.ml[71,2661+35]..[71,2661+36])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/codeInliner.ml[71,2661+39]..[71,2661+40])
                                                        Pexp_constant PConst_int (1,None)
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (src/codeInliner.ml[71,2661+42]..[71,2661+48])
                                                  Pexp_apply
                                                  expression (src/codeInliner.ml[71,2661+42]..[71,2661+43])
                                                    Pexp_ident "!" (src/codeInliner.ml[71,2661+42]..[71,2661+43])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/codeInliner.ml[71,2661+43]..[71,2661+48])
                                                        Pexp_ident "usage" (src/codeInliner.ml[71,2661+43]..[71,2661+48])
                                                  ]
                                            ]
                                      ]
                                [
                                  <case>
                                    pattern (src/codeInliner.ml[73,2711+11]..[73,2711+20])
                                      Ppat_construct "Not_found" (src/codeInliner.ml[73,2711+11]..[73,2711+20])
                                      None
                                    expression (src/codeInliner.ml[77,2893+8]..[77,2893+10])
                                      Pexp_construct "()" (src/codeInliner.ml[77,2893+8]..[77,2893+10])
                                      None
                                ]
                  ]
                  expression (src/codeInliner.ml[82,2975+2]..[282,8873+9])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/codeInliner.ml[82,2975+6]..[82,2975+7])
                          Ppat_var "o" (src/codeInliner.ml[82,2975+6]..[82,2975+7])
                        expression (src/codeInliner.ml[83,2985+4]..[88,3139+7])
                          Pexp_object
                          class_structure
                            pattern (src/codeInliner.ml[83,2985+10]..[83,2985+10]) ghost
                              Ppat_any
                            [
                              class_field (src/codeInliner.ml[84,2996+8]..[84,2996+51])
                                Pcf_inherit Fresh
                                  class_expr (src/codeInliner.ml[84,2996+16]..[84,2996+51])
                                    Pcl_constr "Traverse.fold" (src/codeInliner.ml[84,2996+38]..[84,2996+51])
                                    [
                                      core_type (src/codeInliner.ml[84,2996+18]..[84,2996+29])
                                        Ptyp_constr "StringSet.t" (src/codeInliner.ml[84,2996+18]..[84,2996+29])
                                        []
                                      core_type (src/codeInliner.ml[84,2996+31]..[84,2996+35])
                                        Ptyp_constr "unit" (src/codeInliner.ml[84,2996+31]..[84,2996+35])
                                        []
                                    ]
                                  None
                              class_field (src/codeInliner.ml[85,3048+8]..[85,3048+28])
                                Pcf_inherit Fresh
                                  class_expr (src/codeInliner.ml[85,3048+16]..[85,3048+28])
                                    Pcl_apply
                                    class_expr (src/codeInliner.ml[85,3048+16]..[85,3048+22])
                                      Pcl_constr "locals" (src/codeInliner.ml[85,3048+16]..[85,3048+22])
                                      []
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/codeInliner.ml[85,3048+23]..[85,3048+28])
                                          Pexp_ident "table" (src/codeInliner.ml[85,3048+23]..[85,3048+28])
                                    ]
                                  None
                              class_field (src/codeInliner.ml[86,3077+8]..[87,3113+25])
                                Pcf_method Public
                                  "evar" (src/codeInliner.ml[86,3077+16]..[86,3077+20])
                                  Concrete Override
                                  expression (src/codeInliner.ml[86,3077+21]..[87,3113+25]) ghost
                                    Pexp_poly
                                    expression (src/codeInliner.ml[86,3077+21]..[87,3113+25]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (src/codeInliner.ml[86,3077+21]..[86,3077+27])
                                        Ppat_var "locals" (src/codeInliner.ml[86,3077+21]..[86,3077+27])
                                      expression (src/codeInliner.ml[86,3077+28]..[87,3113+25]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/codeInliner.ml[86,3077+28]..[86,3077+30])
                                          Ppat_construct "()" (src/codeInliner.ml[86,3077+28]..[86,3077+30])
                                          None
                                        expression (src/codeInliner.ml[86,3077+31]..[87,3113+25]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (src/codeInliner.ml[86,3077+31]..[86,3077+33])
                                            Ppat_var "id" (src/codeInliner.ml[86,3077+31]..[86,3077+33])
                                          expression (src/codeInliner.ml[87,3113+10]..[87,3113+25])
                                            Pexp_apply
                                            expression (src/codeInliner.ml[87,3113+10]..[87,3113+15])
                                              Pexp_ident "visit" (src/codeInliner.ml[87,3113+10]..[87,3113+15])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/codeInliner.ml[87,3113+16]..[87,3113+22])
                                                  Pexp_ident "locals" (src/codeInliner.ml[87,3113+16]..[87,3113+22])
                                              <arg>
                                              Nolabel
                                                expression (src/codeInliner.ml[87,3113+23]..[87,3113+25])
                                                  Pexp_ident "id" (src/codeInliner.ml[87,3113+23]..[87,3113+25])
                                            ]
                                    None
                            ]
                    ]
                    expression (src/codeInliner.ml[95,3312+2]..[282,8873+9])
                      Pexp_sequence
                      expression (src/codeInliner.ml[95,3312+2]..[98,3426+8])
                        Pexp_apply
                        expression (src/codeInliner.ml[95,3312+2]..[95,3312+11])
                          Pexp_ident "List.iter" (src/codeInliner.ml[95,3312+2]..[95,3312+11])
                        [
                          <arg>
                          Nolabel
                            expression (src/codeInliner.ml[95,3312+12]..[98,3426+3])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/codeInliner.ml[95,3312+17]..[95,3312+51])
                                Ppat_record Closed
                                [
                                  "valpublic" (src/codeInliner.ml[95,3312+19]..[95,3312+28])
                                    pattern (src/codeInliner.ml[95,3312+31]..[95,3312+37])
                                      Ppat_var "public" (src/codeInliner.ml[95,3312+31]..[95,3312+37])
                                  "valpat" (src/codeInliner.ml[95,3312+39]..[95,3312+45])
                                    pattern (src/codeInliner.ml[95,3312+48]..[95,3312+49])
                                      Ppat_var "p" (src/codeInliner.ml[95,3312+48]..[95,3312+49])
                                ]
                              expression (src/codeInliner.ml[96,3367+4]..[97,3386+39])
                                Pexp_ifthenelse
                                expression (src/codeInliner.ml[96,3367+7]..[96,3367+13])
                                  Pexp_ident "public" (src/codeInliner.ml[96,3367+7]..[96,3367+13])
                                expression (src/codeInliner.ml[97,3386+6]..[97,3386+39])
                                  Pexp_apply
                                  expression (src/codeInliner.ml[97,3386+6]..[97,3386+11])
                                    Pexp_ident "visit" (src/codeInliner.ml[97,3386+6]..[97,3386+11])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/codeInliner.ml[97,3386+12]..[97,3386+27])
                                        Pexp_ident "StringSet.empty" (src/codeInliner.ml[97,3386+12]..[97,3386+27])
                                    <arg>
                                    Nolabel
                                      expression (src/codeInliner.ml[97,3386+28]..[97,3386+39])
                                        Pexp_apply
                                        expression (src/codeInliner.ml[97,3386+29]..[97,3386+36])
                                          Pexp_ident "pat2var" (src/codeInliner.ml[97,3386+29]..[97,3386+36])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/codeInliner.ml[97,3386+37]..[97,3386+38])
                                              Pexp_ident "p" (src/codeInliner.ml[97,3386+37]..[97,3386+38])
                                        ]
                                  ]
                                None
                          <arg>
                          Nolabel
                            expression (src/codeInliner.ml[98,3426+4]..[98,3426+8])
                              Pexp_ident "defs" (src/codeInliner.ml[98,3426+4]..[98,3426+8])
                        ]
                      expression (src/codeInliner.ml[99,3436+2]..[282,8873+9])
                        Pexp_sequence
                        expression (src/codeInliner.ml[99,3436+2]..[99,3436+48])
                          Pexp_apply
                          expression (src/codeInliner.ml[99,3436+2]..[99,3436+12])
                            Pexp_ident "Misc.qfold" (src/codeInliner.ml[99,3436+2]..[99,3436+12])
                          [
                            <arg>
                            Nolabel
                              expression (src/codeInliner.ml[99,3436+13]..[99,3436+39])
                                Pexp_apply
                                expression (src/codeInliner.ml[99,3436+14]..[99,3436+22])
                                  Pexp_send "valdef"
                                  expression (src/codeInliner.ml[99,3436+14]..[99,3436+15])
                                    Pexp_ident "o" (src/codeInliner.ml[99,3436+14]..[99,3436+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/codeInliner.ml[99,3436+23]..[99,3436+38])
                                      Pexp_ident "StringSet.empty" (src/codeInliner.ml[99,3436+23]..[99,3436+38])
                                ]
                            <arg>
                            Nolabel
                              expression (src/codeInliner.ml[99,3436+40]..[99,3436+42])
                                Pexp_construct "()" (src/codeInliner.ml[99,3436+40]..[99,3436+42])
                                None
                            <arg>
                            Nolabel
                              expression (src/codeInliner.ml[99,3436+43]..[99,3436+48])
                                Pexp_ident "queue" (src/codeInliner.ml[99,3436+43]..[99,3436+48])
                          ]
                        expression (src/codeInliner.ml[100,3486+2]..[282,8873+9])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/codeInliner.ml[100,3486+6]..[100,3486+11])
                                Ppat_var "usage" (src/codeInliner.ml[100,3486+6]..[100,3486+11])
                              expression (src/codeInliner.ml[100,3486+14]..[100,3486+20])
                                Pexp_apply
                                expression (src/codeInliner.ml[100,3486+14]..[100,3486+15])
                                  Pexp_ident "!" (src/codeInliner.ml[100,3486+14]..[100,3486+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/codeInliner.ml[100,3486+15]..[100,3486+20])
                                      Pexp_ident "usage" (src/codeInliner.ml[100,3486+15]..[100,3486+20])
                                ]
                          ]
                          expression (src/codeInliner.ml[107,3728+2]..[282,8873+9])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/codeInliner.ml[107,3728+6]..[107,3728+11])
                                  Ppat_var "queue" (src/codeInliner.ml[107,3728+6]..[107,3728+11])
                                core_type (src/codeInliner.ml[107,3728+14]..[107,3728+28])
                                  Ptyp_constr "Queue.t" (src/codeInliner.ml[107,3728+21]..[107,3728+28])
                                  [
                                    core_type (src/codeInliner.ml[107,3728+14]..[107,3728+20])
                                      Ptyp_constr "valdef" (src/codeInliner.ml[107,3728+14]..[107,3728+20])
                                      []
                                  ]
                                expression (src/codeInliner.ml[108,3759+4]..[108,3759+18])
                                  Pexp_apply
                                  expression (src/codeInliner.ml[108,3759+4]..[108,3759+16])
                                    Pexp_ident "Queue.create" (src/codeInliner.ml[108,3759+4]..[108,3759+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/codeInliner.ml[108,3759+16]..[108,3759+18])
                                        Pexp_construct "()" (src/codeInliner.ml[108,3759+16]..[108,3759+18])
                                        None
                                  ]
                              <def>
                                pattern (src/codeInliner.ml[109,3778+6]..[109,3778+13])
                                  Ppat_var "emitted" (src/codeInliner.ml[109,3778+6]..[109,3778+13])
                                expression (src/codeInliner.ml[110,3794+4]..[110,3794+23])
                                  Pexp_apply
                                  expression (src/codeInliner.ml[110,3794+4]..[110,3794+7])
                                    Pexp_ident "ref" (src/codeInliner.ml[110,3794+4]..[110,3794+7])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/codeInliner.ml[110,3794+8]..[110,3794+23])
                                        Pexp_ident "StringSet.empty" (src/codeInliner.ml[110,3794+8]..[110,3794+23])
                                  ]
                            ]
                            expression (src/codeInliner.ml[113,3824+2]..[282,8873+9])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/codeInliner.ml[113,3824+6]..[113,3824+13])
                                    Ppat_var "enqueue" (src/codeInliner.ml[113,3824+6]..[113,3824+13])
                                  expression (src/codeInliner.ml[113,3824+14]..[118,3999+7]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/codeInliner.ml[113,3824+14]..[113,3824+17])
                                      Ppat_var "def" (src/codeInliner.ml[113,3824+14]..[113,3824+17])
                                    expression (src/codeInliner.ml[114,3844+4]..[118,3999+7])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/codeInliner.ml[114,3844+8]..[114,3844+10])
                                            Ppat_var "id" (src/codeInliner.ml[114,3844+8]..[114,3844+10])
                                          expression (src/codeInliner.ml[114,3844+13]..[114,3844+31])
                                            Pexp_apply
                                            expression (src/codeInliner.ml[114,3844+13]..[114,3844+20])
                                              Pexp_ident "pat2var" (src/codeInliner.ml[114,3844+13]..[114,3844+20])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/codeInliner.ml[114,3844+21]..[114,3844+31])
                                                  Pexp_field
                                                  expression (src/codeInliner.ml[114,3844+21]..[114,3844+24])
                                                    Pexp_ident "def" (src/codeInliner.ml[114,3844+21]..[114,3844+24])
                                                  "valpat" (src/codeInliner.ml[114,3844+25]..[114,3844+31])
                                            ]
                                      ]
                                      expression (src/codeInliner.ml[115,3879+4]..[118,3999+7])
                                        Pexp_ifthenelse
                                        expression (src/codeInliner.ml[115,3879+7]..[115,3879+38])
                                          Pexp_apply
                                          expression (src/codeInliner.ml[115,3879+7]..[115,3879+10])
                                            Pexp_ident "not" (src/codeInliner.ml[115,3879+7]..[115,3879+10])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/codeInliner.ml[115,3879+11]..[115,3879+38])
                                                Pexp_apply
                                                expression (src/codeInliner.ml[115,3879+12]..[115,3879+25])
                                                  Pexp_ident "StringSet.mem" (src/codeInliner.ml[115,3879+12]..[115,3879+25])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/codeInliner.ml[115,3879+26]..[115,3879+28])
                                                      Pexp_ident "id" (src/codeInliner.ml[115,3879+26]..[115,3879+28])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/codeInliner.ml[115,3879+29]..[115,3879+37])
                                                      Pexp_apply
                                                      expression (src/codeInliner.ml[115,3879+29]..[115,3879+30])
                                                        Pexp_ident "!" (src/codeInliner.ml[115,3879+29]..[115,3879+30])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/codeInliner.ml[115,3879+30]..[115,3879+37])
                                                            Pexp_ident "emitted" (src/codeInliner.ml[115,3879+30]..[115,3879+37])
                                                      ]
                                                ]
                                          ]
                                        expression (src/codeInliner.ml[115,3879+44]..[118,3999+7])
                                          Pexp_sequence
                                          expression (src/codeInliner.ml[116,3929+6]..[116,3929+42])
                                            Pexp_apply
                                            expression (src/codeInliner.ml[116,3929+14]..[116,3929+16])
                                              Pexp_ident ":=" (src/codeInliner.ml[116,3929+14]..[116,3929+16])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/codeInliner.ml[116,3929+6]..[116,3929+13])
                                                  Pexp_ident "emitted" (src/codeInliner.ml[116,3929+6]..[116,3929+13])
                                              <arg>
                                              Nolabel
                                                expression (src/codeInliner.ml[116,3929+17]..[116,3929+42])
                                                  Pexp_apply
                                                  expression (src/codeInliner.ml[116,3929+17]..[116,3929+30])
                                                    Pexp_ident "StringSet.add" (src/codeInliner.ml[116,3929+17]..[116,3929+30])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/codeInliner.ml[116,3929+31]..[116,3929+33])
                                                        Pexp_ident "id" (src/codeInliner.ml[116,3929+31]..[116,3929+33])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/codeInliner.ml[116,3929+34]..[116,3929+42])
                                                        Pexp_apply
                                                        expression (src/codeInliner.ml[116,3929+34]..[116,3929+35])
                                                          Pexp_ident "!" (src/codeInliner.ml[116,3929+34]..[116,3929+35])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/codeInliner.ml[116,3929+35]..[116,3929+42])
                                                              Pexp_ident "emitted" (src/codeInliner.ml[116,3929+35]..[116,3929+42])
                                                        ]
                                                  ]
                                            ]
                                          expression (src/codeInliner.ml[117,3973+6]..[117,3973+25])
                                            Pexp_apply
                                            expression (src/codeInliner.ml[117,3973+6]..[117,3973+15])
                                              Pexp_ident "Queue.add" (src/codeInliner.ml[117,3973+6]..[117,3973+15])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/codeInliner.ml[117,3973+16]..[117,3973+19])
                                                  Pexp_ident "def" (src/codeInliner.ml[117,3973+16]..[117,3973+19])
                                              <arg>
                                              Nolabel
                                                expression (src/codeInliner.ml[117,3973+20]..[117,3973+25])
                                                  Pexp_ident "queue" (src/codeInliner.ml[117,3973+20]..[117,3973+25])
                                            ]
                                        None
                              ]
                              expression (src/codeInliner.ml[124,4154+2]..[282,8873+9])
                                Pexp_let Rec
                                [
                                  <def>
                                    pattern (src/codeInliner.ml[124,4154+10]..[124,4154+23])
                                      Ppat_var "is_simple_arg" (src/codeInliner.ml[124,4154+10]..[124,4154+23])
                                    expression (src/codeInliner.ml[124,4154+26]..[132,4323+13])
                                      Pexp_function
                                      [
                                        <case>
                                          pattern (src/codeInliner.ml[125,4189+6]..[127,4222+31])
                                            Ppat_or
                                            pattern (src/codeInliner.ml[125,4189+6]..[126,4202+19])
                                              Ppat_or
                                              pattern (src/codeInliner.ml[125,4189+6]..[125,4189+12])
                                                Ppat_construct "EVar" (src/codeInliner.ml[125,4189+6]..[125,4189+10])
                                                Some
                                                  []
                                                  pattern (src/codeInliner.ml[125,4189+11]..[125,4189+12])
                                                    Ppat_any
                                              pattern (src/codeInliner.ml[126,4202+6]..[126,4202+19])
                                                Ppat_construct "EData" (src/codeInliner.ml[126,4202+6]..[126,4202+11])
                                                Some
                                                  []
                                                  pattern (src/codeInliner.ml[126,4202+12]..[126,4202+19])
                                                    Ppat_tuple
                                                    [
                                                      pattern (src/codeInliner.ml[126,4202+13]..[126,4202+14])
                                                        Ppat_any
                                                      pattern (src/codeInliner.ml[126,4202+16]..[126,4202+18])
                                                        Ppat_construct "[]" (src/codeInliner.ml[126,4202+16]..[126,4202+18])
                                                        None
                                                    ]
                                            pattern (src/codeInliner.ml[127,4222+6]..[127,4222+31])
                                              Ppat_construct "ERecordAccess" (src/codeInliner.ml[127,4222+6]..[127,4222+19])
                                              Some
                                                []
                                                pattern (src/codeInliner.ml[127,4222+20]..[127,4222+31])
                                                  Ppat_tuple
                                                  [
                                                    pattern (src/codeInliner.ml[127,4222+21]..[127,4222+27])
                                                      Ppat_construct "EVar" (src/codeInliner.ml[127,4222+21]..[127,4222+25])
                                                      Some
                                                        []
                                                        pattern (src/codeInliner.ml[127,4222+26]..[127,4222+27])
                                                          Ppat_any
                                                    pattern (src/codeInliner.ml[127,4222+29]..[127,4222+30])
                                                      Ppat_any
                                                  ]
                                          expression (src/codeInliner.ml[128,4257+8]..[128,4257+12])
                                            Pexp_construct "true" (src/codeInliner.ml[128,4257+8]..[128,4257+12])
                                            None
                                        <case>
                                          pattern (src/codeInliner.ml[129,4270+6]..[129,4270+14])
                                            Ppat_construct "EMagic" (src/codeInliner.ml[129,4270+6]..[129,4270+12])
                                            Some
                                              []
                                              pattern (src/codeInliner.ml[129,4270+13]..[129,4270+14])
                                                Ppat_var "e" (src/codeInliner.ml[129,4270+13]..[129,4270+14])
                                          expression (src/codeInliner.ml[130,4288+8]..[130,4288+23])
                                            Pexp_apply
                                            expression (src/codeInliner.ml[130,4288+8]..[130,4288+21])
                                              Pexp_ident "is_simple_arg" (src/codeInliner.ml[130,4288+8]..[130,4288+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/codeInliner.ml[130,4288+22]..[130,4288+23])
                                                  Pexp_ident "e" (src/codeInliner.ml[130,4288+22]..[130,4288+23])
                                            ]
                                        <case>
                                          pattern (src/codeInliner.ml[131,4312+6]..[131,4312+7])
                                            Ppat_any
                                          expression (src/codeInliner.ml[132,4323+8]..[132,4323+13])
                                            Pexp_construct "false" (src/codeInliner.ml[132,4323+8]..[132,4323+13])
                                            None
                                      ]
                                ]
                                expression (src/codeInliner.ml[135,4343+2]..[282,8873+9])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/codeInliner.ml[135,4343+6]..[135,4343+19])
                                        Ppat_var "is_simple_app" (src/codeInliner.ml[135,4343+6]..[135,4343+19])
                                      expression (src/codeInliner.ml[135,4343+22]..[139,4460+13])
                                        Pexp_function
                                        [
                                          <case>
                                            pattern (src/codeInliner.ml[136,4374+6]..[136,4374+28])
                                              Ppat_construct "EApp" (src/codeInliner.ml[136,4374+6]..[136,4374+10])
                                              Some
                                                []
                                                pattern (src/codeInliner.ml[136,4374+11]..[136,4374+28])
                                                  Ppat_tuple
                                                  [
                                                    pattern (src/codeInliner.ml[136,4374+12]..[136,4374+18])
                                                      Ppat_construct "EVar" (src/codeInliner.ml[136,4374+12]..[136,4374+16])
                                                      Some
                                                        []
                                                        pattern (src/codeInliner.ml[136,4374+17]..[136,4374+18])
                                                          Ppat_any
                                                    pattern (src/codeInliner.ml[136,4374+20]..[136,4374+27])
                                                      Ppat_var "actuals" (src/codeInliner.ml[136,4374+20]..[136,4374+27])
                                                  ]
                                            expression (src/codeInliner.ml[137,4406+8]..[137,4406+42])
                                              Pexp_apply
                                              expression (src/codeInliner.ml[137,4406+8]..[137,4406+20])
                                                Pexp_ident "List.for_all" (src/codeInliner.ml[137,4406+8]..[137,4406+20])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/codeInliner.ml[137,4406+21]..[137,4406+34])
                                                    Pexp_ident "is_simple_arg" (src/codeInliner.ml[137,4406+21]..[137,4406+34])
                                                <arg>
                                                Nolabel
                                                  expression (src/codeInliner.ml[137,4406+35]..[137,4406+42])
                                                    Pexp_ident "actuals" (src/codeInliner.ml[137,4406+35]..[137,4406+42])
                                              ]
                                          <case>
                                            pattern (src/codeInliner.ml[138,4449+6]..[138,4449+7])
                                              Ppat_any
                                            expression (src/codeInliner.ml[139,4460+8]..[139,4460+13])
                                              Pexp_construct "false" (src/codeInliner.ml[139,4460+8]..[139,4460+13])
                                              None
                                        ]
                                  ]
                                  expression (src/codeInliner.ml[144,4537+2]..[282,8873+9])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/codeInliner.ml[144,4537+6]..[144,4537+14])
                                          Ppat_var "instance" (src/codeInliner.ml[144,4537+6]..[144,4537+14])
                                        expression (src/codeInliner.ml[145,4554+4]..[169,5209+21])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/codeInliner.ml[145,4554+8]..[145,4554+13])
                                                Ppat_var "count" (src/codeInliner.ml[145,4554+8]..[145,4554+13])
                                              expression (src/codeInliner.ml[145,4554+16]..[145,4554+21])
                                                Pexp_apply
                                                expression (src/codeInliner.ml[145,4554+16]..[145,4554+19])
                                                  Pexp_ident "ref" (src/codeInliner.ml[145,4554+16]..[145,4554+19])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/codeInliner.ml[145,4554+20]..[145,4554+21])
                                                      Pexp_constant PConst_int (0,None)
                                                ]
                                          ]
                                          expression (src/codeInliner.ml[146,4579+4]..[169,5209+21])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/codeInliner.ml[146,4579+8]..[146,4579+13])
                                                  Ppat_var "fresh" (src/codeInliner.ml[146,4579+8]..[146,4579+13])
                                                expression (src/codeInliner.ml[146,4579+14]..[148,4616+43]) ghost
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (src/codeInliner.ml[146,4579+14]..[146,4579+16])
                                                    Ppat_var "tv" (src/codeInliner.ml[146,4579+14]..[146,4579+16])
                                                  expression (src/codeInliner.ml[147,4598+6]..[148,4616+43])
                                                    Pexp_sequence
                                                    expression (src/codeInliner.ml[147,4598+6]..[147,4598+16])
                                                      Pexp_apply
                                                      expression (src/codeInliner.ml[147,4598+6]..[147,4598+10])
                                                        Pexp_ident "incr" (src/codeInliner.ml[147,4598+6]..[147,4598+10])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/codeInliner.ml[147,4598+11]..[147,4598+16])
                                                            Pexp_ident "count" (src/codeInliner.ml[147,4598+11]..[147,4598+16])
                                                      ]
                                                    expression (src/codeInliner.ml[148,4616+6]..[148,4616+43])
                                                      Pexp_tuple
                                                      [
                                                        expression (src/codeInliner.ml[148,4616+6]..[148,4616+8])
                                                          Pexp_ident "tv" (src/codeInliner.ml[148,4616+6]..[148,4616+8])
                                                        expression (src/codeInliner.ml[148,4616+10]..[148,4616+43])
                                                          Pexp_apply
                                                          expression (src/codeInliner.ml[148,4616+10]..[148,4616+24])
                                                            Pexp_ident "Printf.sprintf" (src/codeInliner.ml[148,4616+10]..[148,4616+24])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/codeInliner.ml[148,4616+25]..[148,4616+36])
                                                                Pexp_constant PConst_string("freshtv%d",(src/codeInliner.ml[148,4616+26]..[148,4616+35]),None)
                                                            <arg>
                                                            Nolabel
                                                              expression (src/codeInliner.ml[148,4616+37]..[148,4616+43])
                                                                Pexp_apply
                                                                expression (src/codeInliner.ml[148,4616+37]..[148,4616+38])
                                                                  Pexp_ident "!" (src/codeInliner.ml[148,4616+37]..[148,4616+38])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/codeInliner.ml[148,4616+38]..[148,4616+43])
                                                                      Pexp_ident "count" (src/codeInliner.ml[148,4616+38]..[148,4616+43])
                                                                ]
                                                          ]
                                                      ]
                                            ]
                                            expression (src/codeInliner.ml[150,4667+4]..[169,5209+21])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (src/codeInliner.ml[150,4667+8]..[150,4667+14])
                                                Ppat_var "scheme" (src/codeInliner.ml[150,4667+8]..[150,4667+14])
                                              expression (src/codeInliner.ml[151,4685+6]..[169,5209+21])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (src/codeInliner.ml[151,4685+10]..[151,4685+17])
                                                      Ppat_var "mapping" (src/codeInliner.ml[151,4685+10]..[151,4685+17])
                                                    expression (src/codeInliner.ml[151,4685+20]..[151,4685+53])
                                                      Pexp_apply
                                                      expression (src/codeInliner.ml[151,4685+20]..[151,4685+28])
                                                        Pexp_ident "List.map" (src/codeInliner.ml[151,4685+20]..[151,4685+28])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/codeInliner.ml[151,4685+29]..[151,4685+34])
                                                            Pexp_ident "fresh" (src/codeInliner.ml[151,4685+29]..[151,4685+34])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/codeInliner.ml[151,4685+35]..[151,4685+53])
                                                            Pexp_field
                                                            expression (src/codeInliner.ml[151,4685+35]..[151,4685+41])
                                                              Pexp_ident "scheme" (src/codeInliner.ml[151,4685+35]..[151,4685+41])
                                                            "quantifiers" (src/codeInliner.ml[151,4685+42]..[151,4685+53])
                                                      ]
                                                ]
                                                expression (src/codeInliner.ml[152,4742+6]..[169,5209+21])
                                                  Pexp_let Rec
                                                  [
                                                    <def>
                                                      pattern (src/codeInliner.ml[152,4742+14]..[152,4742+17])
                                                        Ppat_var "sub" (src/codeInliner.ml[152,4742+14]..[152,4742+17])
                                                      expression (src/codeInliner.ml[152,4742+18]..[167,5158+41]) ghost
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (src/codeInliner.ml[152,4742+18]..[152,4742+21])
                                                          Ppat_var "typ" (src/codeInliner.ml[152,4742+18]..[152,4742+21])
                                                        expression (src/codeInliner.ml[153,4766+8]..[167,5158+41])
                                                          Pexp_match
                                                          expression (src/codeInliner.ml[153,4766+14]..[153,4766+17])
                                                            Pexp_ident "typ" (src/codeInliner.ml[153,4766+14]..[153,4766+17])
                                                          [
                                                            <case>
                                                              pattern (src/codeInliner.ml[154,4789+10]..[154,4789+22])
                                                                Ppat_construct "TypTextual" (src/codeInliner.ml[154,4789+10]..[154,4789+20])
                                                                Some
                                                                  []
                                                                  pattern (src/codeInliner.ml[154,4789+21]..[154,4789+22])
                                                                    Ppat_any
                                                              expression (src/codeInliner.ml[155,4815+12]..[155,4815+15])
                                                                Pexp_ident "typ" (src/codeInliner.ml[155,4815+12]..[155,4815+15])
                                                            <case>
                                                              pattern (src/codeInliner.ml[156,4831+10]..[156,4831+18])
                                                                Ppat_construct "TypVar" (src/codeInliner.ml[156,4831+10]..[156,4831+16])
                                                                Some
                                                                  []
                                                                  pattern (src/codeInliner.ml[156,4831+17]..[156,4831+18])
                                                                    Ppat_var "v" (src/codeInliner.ml[156,4831+17]..[156,4831+18])
                                                              expression (src/codeInliner.ml[157,4853+12]..[161,4967+15])
                                                                Pexp_try
                                                                expression (src/codeInliner.ml[158,4875+14]..[158,4875+43])
                                                                  Pexp_construct "TypVar" (src/codeInliner.ml[158,4875+14]..[158,4875+20])
                                                                  Some
                                                                    expression (src/codeInliner.ml[158,4875+21]..[158,4875+43])
                                                                      Pexp_apply
                                                                      expression (src/codeInliner.ml[158,4875+22]..[158,4875+32])
Pexp_ident "List.assoc" (src/codeInliner.ml[158,4875+22]..[158,4875+32])
                                                                      [
<arg>
Nolabel
  expression (src/codeInliner.ml[158,4875+33]..[158,4875+34])
    Pexp_ident "v" (src/codeInliner.ml[158,4875+33]..[158,4875+34])
<arg>
Nolabel
  expression (src/codeInliner.ml[158,4875+35]..[158,4875+42])
    Pexp_ident "mapping" (src/codeInliner.ml[158,4875+35]..[158,4875+42])
                                                                      ]
                                                                [
                                                                  <case>
                                                                    pattern (src/codeInliner.ml[159,4919+17]..[159,4919+26])
                                                                      Ppat_construct "Not_found" (src/codeInliner.ml[159,4919+17]..[159,4919+26])
                                                                      None
                                                                    expression (src/codeInliner.ml[160,4949+14]..[160,4949+17])
                                                                      Pexp_ident "typ" (src/codeInliner.ml[160,4949+14]..[160,4949+17])
                                                                ]
                                                            <case>
                                                              pattern (src/codeInliner.ml[162,4983+10]..[162,4983+26])
                                                                Ppat_construct "TypApp" (src/codeInliner.ml[162,4983+10]..[162,4983+16])
                                                                Some
                                                                  []
                                                                  pattern (src/codeInliner.ml[162,4983+17]..[162,4983+26])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (src/codeInliner.ml[162,4983+18]..[162,4983+19])
Ppat_var "f" (src/codeInliner.ml[162,4983+18]..[162,4983+19])
                                                                      pattern (src/codeInliner.ml[162,4983+21]..[162,4983+25])
Ppat_var "typs" (src/codeInliner.ml[162,4983+21]..[162,4983+25])
                                                                    ]
                                                              expression (src/codeInliner.ml[163,5013+12]..[163,5013+41])
                                                                Pexp_construct "TypApp" (src/codeInliner.ml[163,5013+12]..[163,5013+18])
                                                                Some
                                                                  expression (src/codeInliner.ml[163,5013+19]..[163,5013+41])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (src/codeInliner.ml[163,5013+20]..[163,5013+21])
Pexp_ident "f" (src/codeInliner.ml[163,5013+20]..[163,5013+21])
                                                                      expression (src/codeInliner.ml[163,5013+23]..[163,5013+40])
Pexp_apply
expression (src/codeInliner.ml[163,5013+23]..[163,5013+31])
  Pexp_ident "List.map" (src/codeInliner.ml[163,5013+23]..[163,5013+31])
[
  <arg>
  Nolabel
    expression (src/codeInliner.ml[163,5013+32]..[163,5013+35])
      Pexp_ident "sub" (src/codeInliner.ml[163,5013+32]..[163,5013+35])
  <arg>
  Nolabel
    expression (src/codeInliner.ml[163,5013+36]..[163,5013+40])
      Pexp_ident "typs" (src/codeInliner.ml[163,5013+36]..[163,5013+40])
]
                                                                    ]
                                                            <case>
                                                              pattern (src/codeInliner.ml[164,5055+10]..[164,5055+23])
                                                                Ppat_construct "TypTuple" (src/codeInliner.ml[164,5055+10]..[164,5055+18])
                                                                Some
                                                                  []
                                                                  pattern (src/codeInliner.ml[164,5055+19]..[164,5055+23])
                                                                    Ppat_var "typs" (src/codeInliner.ml[164,5055+19]..[164,5055+23])
                                                              expression (src/codeInliner.ml[165,5082+12]..[165,5082+40])
                                                                Pexp_construct "TypTuple" (src/codeInliner.ml[165,5082+12]..[165,5082+20])
                                                                Some
                                                                  expression (src/codeInliner.ml[165,5082+21]..[165,5082+40])
                                                                    Pexp_apply
                                                                    expression (src/codeInliner.ml[165,5082+22]..[165,5082+30])
                                                                      Pexp_ident "List.map" (src/codeInliner.ml[165,5082+22]..[165,5082+30])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/codeInliner.ml[165,5082+31]..[165,5082+34])
  Pexp_ident "sub" (src/codeInliner.ml[165,5082+31]..[165,5082+34])
                                                                      <arg>
                                                                      Nolabel
expression (src/codeInliner.ml[165,5082+35]..[165,5082+39])
  Pexp_ident "typs" (src/codeInliner.ml[165,5082+35]..[165,5082+39])
                                                                    ]
                                                            <case>
                                                              pattern (src/codeInliner.ml[166,5123+10]..[166,5123+31])
                                                                Ppat_construct "TypArrow" (src/codeInliner.ml[166,5123+10]..[166,5123+18])
                                                                Some
                                                                  []
                                                                  pattern (src/codeInliner.ml[166,5123+19]..[166,5123+31])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (src/codeInliner.ml[166,5123+20]..[166,5123+24])
Ppat_var "typ1" (src/codeInliner.ml[166,5123+20]..[166,5123+24])
                                                                      pattern (src/codeInliner.ml[166,5123+26]..[166,5123+30])
Ppat_var "typ2" (src/codeInliner.ml[166,5123+26]..[166,5123+30])
                                                                    ]
                                                              expression (src/codeInliner.ml[167,5158+12]..[167,5158+41])
                                                                Pexp_construct "TypArrow" (src/codeInliner.ml[167,5158+12]..[167,5158+20])
                                                                Some
                                                                  expression (src/codeInliner.ml[167,5158+21]..[167,5158+41])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (src/codeInliner.ml[167,5158+22]..[167,5158+30])
Pexp_apply
expression (src/codeInliner.ml[167,5158+22]..[167,5158+25])
  Pexp_ident "sub" (src/codeInliner.ml[167,5158+22]..[167,5158+25])
[
  <arg>
  Nolabel
    expression (src/codeInliner.ml[167,5158+26]..[167,5158+30])
      Pexp_ident "typ1" (src/codeInliner.ml[167,5158+26]..[167,5158+30])
]
                                                                      expression (src/codeInliner.ml[167,5158+32]..[167,5158+40])
Pexp_apply
expression (src/codeInliner.ml[167,5158+32]..[167,5158+35])
  Pexp_ident "sub" (src/codeInliner.ml[167,5158+32]..[167,5158+35])
[
  <arg>
  Nolabel
    expression (src/codeInliner.ml[167,5158+36]..[167,5158+40])
      Pexp_ident "typ2" (src/codeInliner.ml[167,5158+36]..[167,5158+40])
]
                                                                    ]
                                                          ]
                                                  ]
                                                  expression (src/codeInliner.ml[169,5209+6]..[169,5209+21])
                                                    Pexp_apply
                                                    expression (src/codeInliner.ml[169,5209+6]..[169,5209+9])
                                                      Pexp_ident "sub" (src/codeInliner.ml[169,5209+6]..[169,5209+9])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/codeInliner.ml[169,5209+10]..[169,5209+21])
                                                          Pexp_field
                                                          expression (src/codeInliner.ml[169,5209+10]..[169,5209+16])
                                                            Pexp_ident "scheme" (src/codeInliner.ml[169,5209+10]..[169,5209+16])
                                                          "body" (src/codeInliner.ml[169,5209+17]..[169,5209+21])
                                                    ]
                                    ]
                                    expression (src/codeInliner.ml[174,5279+2]..[282,8873+9])
                                      Pexp_let Rec
                                      [
                                        <def>
                                          pattern (src/codeInliner.ml[174,5279+10]..[174,5279+18])
                                            Ppat_var "annotate" (src/codeInliner.ml[174,5279+10]..[174,5279+18])
                                          expression (src/codeInliner.ml[174,5279+19]..[183,5627+20]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (src/codeInliner.ml[174,5279+19]..[174,5279+26])
                                              Ppat_var "formals" (src/codeInliner.ml[174,5279+19]..[174,5279+26])
                                            expression (src/codeInliner.ml[174,5279+27]..[183,5627+20]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (src/codeInliner.ml[174,5279+27]..[174,5279+31])
                                                Ppat_var "body" (src/codeInliner.ml[174,5279+27]..[174,5279+31])
                                              expression (src/codeInliner.ml[174,5279+32]..[183,5627+20]) ghost
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (src/codeInliner.ml[174,5279+32]..[174,5279+35])
                                                  Ppat_var "typ" (src/codeInliner.ml[174,5279+32]..[174,5279+35])
                                                expression (src/codeInliner.ml[175,5317+4]..[183,5627+20])
                                                  Pexp_match
                                                  expression (src/codeInliner.ml[175,5317+10]..[175,5317+22])
                                                    Pexp_tuple
                                                    [
                                                      expression (src/codeInliner.ml[175,5317+10]..[175,5317+17])
                                                        Pexp_ident "formals" (src/codeInliner.ml[175,5317+10]..[175,5317+17])
                                                      expression (src/codeInliner.ml[175,5317+19]..[175,5317+22])
                                                        Pexp_ident "typ" (src/codeInliner.ml[175,5317+19]..[175,5317+22])
                                                    ]
                                                  [
                                                    <case>
                                                      pattern (src/codeInliner.ml[176,5345+6]..[176,5345+11])
                                                        Ppat_tuple
                                                        [
                                                          pattern (src/codeInliner.ml[176,5345+6]..[176,5345+8])
                                                            Ppat_construct "[]" (src/codeInliner.ml[176,5345+6]..[176,5345+8])
                                                            None
                                                          pattern (src/codeInliner.ml[176,5345+10]..[176,5345+11])
                                                            Ppat_any
                                                        ]
                                                      expression (src/codeInliner.ml[177,5360+8]..[177,5360+38])
                                                        Pexp_tuple
                                                        [
                                                          expression (src/codeInliner.ml[177,5360+8]..[177,5360+10])
                                                            Pexp_construct "[]" (src/codeInliner.ml[177,5360+8]..[177,5360+10])
                                                            None
                                                          expression (src/codeInliner.ml[177,5360+12]..[177,5360+38])
                                                            Pexp_apply
                                                            expression (src/codeInliner.ml[177,5360+12]..[177,5360+29])
                                                              Pexp_ident "CodeBits.annotate" (src/codeInliner.ml[177,5360+12]..[177,5360+29])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/codeInliner.ml[177,5360+30]..[177,5360+34])
                                                                  Pexp_ident "body" (src/codeInliner.ml[177,5360+30]..[177,5360+34])
                                                              <arg>
                                                              Nolabel
                                                                expression (src/codeInliner.ml[177,5360+35]..[177,5360+38])
                                                                  Pexp_ident "typ" (src/codeInliner.ml[177,5360+35]..[177,5360+38])
                                                            ]
                                                        ]
                                                    <case>
                                                      pattern (src/codeInliner.ml[178,5399+6]..[178,5399+46])
                                                        Ppat_tuple
                                                        [
                                                          pattern (src/codeInliner.ml[178,5399+6]..[178,5399+23])
                                                            Ppat_construct "::" (src/codeInliner.ml[178,5399+13]..[178,5399+15])
                                                            Some
                                                              []
                                                              pattern (src/codeInliner.ml[178,5399+6]..[178,5399+23]) ghost
                                                                Ppat_tuple
                                                                [
                                                                  pattern (src/codeInliner.ml[178,5399+6]..[178,5399+12])
                                                                    Ppat_var "formal" (src/codeInliner.ml[178,5399+6]..[178,5399+12])
                                                                  pattern (src/codeInliner.ml[178,5399+16]..[178,5399+23])
                                                                    Ppat_var "formals" (src/codeInliner.ml[178,5399+16]..[178,5399+23])
                                                                ]
                                                          pattern (src/codeInliner.ml[178,5399+25]..[178,5399+46])
                                                            Ppat_construct "TypArrow" (src/codeInliner.ml[178,5399+25]..[178,5399+33])
                                                            Some
                                                              []
                                                              pattern (src/codeInliner.ml[178,5399+34]..[178,5399+46])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (src/codeInliner.ml[178,5399+35]..[178,5399+39])
                                                                    Ppat_var "targ" (src/codeInliner.ml[178,5399+35]..[178,5399+39])
                                                                  pattern (src/codeInliner.ml[178,5399+41]..[178,5399+45])
                                                                    Ppat_var "tres" (src/codeInliner.ml[178,5399+41]..[178,5399+45])
                                                                ]
                                                        ]
                                                      expression (src/codeInliner.ml[179,5449+8]..[180,5507+46])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (src/codeInliner.ml[179,5449+12]..[179,5449+25])
                                                              Ppat_tuple
                                                              [
                                                                pattern (src/codeInliner.ml[179,5449+12]..[179,5449+19])
                                                                  Ppat_var "formals" (src/codeInliner.ml[179,5449+12]..[179,5449+19])
                                                                pattern (src/codeInliner.ml[179,5449+21]..[179,5449+25])
                                                                  Ppat_var "body" (src/codeInliner.ml[179,5449+21]..[179,5449+25])
                                                              ]
                                                            expression (src/codeInliner.ml[179,5449+28]..[179,5449+54])
                                                              Pexp_apply
                                                              expression (src/codeInliner.ml[179,5449+28]..[179,5449+36])
                                                                Pexp_ident "annotate" (src/codeInliner.ml[179,5449+28]..[179,5449+36])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/codeInliner.ml[179,5449+37]..[179,5449+44])
                                                                    Pexp_ident "formals" (src/codeInliner.ml[179,5449+37]..[179,5449+44])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/codeInliner.ml[179,5449+45]..[179,5449+49])
                                                                    Pexp_ident "body" (src/codeInliner.ml[179,5449+45]..[179,5449+49])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/codeInliner.ml[179,5449+50]..[179,5449+54])
                                                                    Pexp_ident "tres" (src/codeInliner.ml[179,5449+50]..[179,5449+54])
                                                              ]
                                                        ]
                                                        expression (src/codeInliner.ml[180,5507+8]..[180,5507+46])
                                                          Pexp_tuple
                                                          [
                                                            expression (src/codeInliner.ml[180,5507+8]..[180,5507+40])
                                                              Pexp_construct "::" (src/codeInliner.ml[180,5507+30]..[180,5507+32])
                                                              Some
                                                                expression (src/codeInliner.ml[180,5507+8]..[180,5507+40]) ghost
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (src/codeInliner.ml[180,5507+8]..[180,5507+29])
                                                                      Pexp_construct "PAnnot" (src/codeInliner.ml[180,5507+8]..[180,5507+14])
                                                                      Some
expression (src/codeInliner.ml[180,5507+15]..[180,5507+29])
  Pexp_tuple
  [
    expression (src/codeInliner.ml[180,5507+16]..[180,5507+22])
      Pexp_ident "formal" (src/codeInliner.ml[180,5507+16]..[180,5507+22])
    expression (src/codeInliner.ml[180,5507+24]..[180,5507+28])
      Pexp_ident "targ" (src/codeInliner.ml[180,5507+24]..[180,5507+28])
  ]
                                                                    expression (src/codeInliner.ml[180,5507+33]..[180,5507+40])
                                                                      Pexp_ident "formals" (src/codeInliner.ml[180,5507+33]..[180,5507+40])
                                                                  ]
                                                            expression (src/codeInliner.ml[180,5507+42]..[180,5507+46])
                                                              Pexp_ident "body" (src/codeInliner.ml[180,5507+42]..[180,5507+46])
                                                          ]
                                                    <case>
                                                      pattern (src/codeInliner.ml[181,5554+6]..[181,5554+15])
                                                        Ppat_tuple
                                                        [
                                                          pattern (src/codeInliner.ml[181,5554+6]..[181,5554+12])
                                                            Ppat_construct "::" (src/codeInliner.ml[181,5554+8]..[181,5554+10])
                                                            Some
                                                              []
                                                              pattern (src/codeInliner.ml[181,5554+6]..[181,5554+12]) ghost
                                                                Ppat_tuple
                                                                [
                                                                  pattern (src/codeInliner.ml[181,5554+6]..[181,5554+7])
                                                                    Ppat_any
                                                                  pattern (src/codeInliner.ml[181,5554+11]..[181,5554+12])
                                                                    Ppat_any
                                                                ]
                                                          pattern (src/codeInliner.ml[181,5554+14]..[181,5554+15])
                                                            Ppat_any
                                                        ]
                                                      expression (src/codeInliner.ml[183,5627+8]..[183,5627+20])
                                                        Pexp_assert
                                                        expression (src/codeInliner.ml[183,5627+15]..[183,5627+20])
                                                          Pexp_construct "false" (src/codeInliner.ml[183,5627+15]..[183,5627+20])
                                                          None
                                                  ]
                                      ]
                                      expression (src/codeInliner.ml[197,6266+2]..[282,8873+9])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/codeInliner.ml[197,6266+6]..[197,6266+12])
                                              Ppat_var "inline" (src/codeInliner.ml[197,6266+6]..[197,6266+12])
                                            expression (src/codeInliner.ml[197,6266+13]..[207,6579+33]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (src/codeInliner.ml[197,6266+13]..[197,6266+20])
                                                Ppat_var "formals" (src/codeInliner.ml[197,6266+13]..[197,6266+20])
                                              expression (src/codeInliner.ml[197,6266+21]..[207,6579+33]) ghost
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (src/codeInliner.ml[197,6266+21]..[197,6266+28])
                                                  Ppat_var "actuals" (src/codeInliner.ml[197,6266+21]..[197,6266+28])
                                                expression (src/codeInliner.ml[197,6266+29]..[207,6579+33]) ghost
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (src/codeInliner.ml[197,6266+29]..[197,6266+33])
                                                    Ppat_var "body" (src/codeInliner.ml[197,6266+29]..[197,6266+33])
                                                  expression (src/codeInliner.ml[197,6266+34]..[207,6579+33]) ghost
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (src/codeInliner.ml[197,6266+34]..[197,6266+41])
                                                      Ppat_var "oscheme" (src/codeInliner.ml[197,6266+34]..[197,6266+41])
                                                    expression (src/codeInliner.ml[198,6310+4]..[207,6579+33])
                                                      Pexp_sequence
                                                      expression (src/codeInliner.ml[198,6310+4]..[198,6310+54])
                                                        Pexp_assert
                                                        expression (src/codeInliner.ml[198,6310+11]..[198,6310+54])
                                                          Pexp_apply
                                                          expression (src/codeInliner.ml[198,6310+32]..[198,6310+33])
                                                            Pexp_ident "=" (src/codeInliner.ml[198,6310+32]..[198,6310+33])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/codeInliner.ml[198,6310+12]..[198,6310+31])
                                                                Pexp_apply
                                                                expression (src/codeInliner.ml[198,6310+12]..[198,6310+23])
                                                                  Pexp_ident "List.length" (src/codeInliner.ml[198,6310+12]..[198,6310+23])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/codeInliner.ml[198,6310+24]..[198,6310+31])
                                                                      Pexp_ident "actuals" (src/codeInliner.ml[198,6310+24]..[198,6310+31])
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (src/codeInliner.ml[198,6310+34]..[198,6310+53])
                                                                Pexp_apply
                                                                expression (src/codeInliner.ml[198,6310+34]..[198,6310+45])
                                                                  Pexp_ident "List.length" (src/codeInliner.ml[198,6310+34]..[198,6310+45])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/codeInliner.ml[198,6310+46]..[198,6310+53])
                                                                      Pexp_ident "formals" (src/codeInliner.ml[198,6310+46]..[198,6310+53])
                                                                ]
                                                          ]
                                                      expression (src/codeInliner.ml[199,6366+4]..[207,6579+33])
                                                        Pexp_match
                                                        expression (src/codeInliner.ml[199,6366+10]..[199,6366+17])
                                                          Pexp_ident "oscheme" (src/codeInliner.ml[199,6366+10]..[199,6366+17])
                                                        [
                                                          <case>
                                                            pattern (src/codeInliner.ml[200,6389+6]..[200,6389+17])
                                                              Ppat_construct "Some" (src/codeInliner.ml[200,6389+6]..[200,6389+10])
                                                              Some
                                                                []
                                                                pattern (src/codeInliner.ml[200,6389+11]..[200,6389+17])
                                                                  Ppat_var "scheme" (src/codeInliner.ml[200,6389+11]..[200,6389+17])
                                                            <when>
                                                              expression (src/codeInliner.ml[201,6407+11]..[201,6407+50])
                                                                Pexp_apply
                                                                expression (src/codeInliner.ml[201,6407+11]..[201,6407+14])
                                                                  Pexp_ident "not" (src/codeInliner.ml[201,6407+11]..[201,6407+14])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/codeInliner.ml[201,6407+15]..[201,6407+50])
                                                                      Pexp_ident "Front.ocaml_types_have_been_checked" (src/codeInliner.ml[201,6407+15]..[201,6407+50])
                                                                ]
                                                            expression (src/codeInliner.ml[203,6462+8]..[204,6533+33])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (src/codeInliner.ml[203,6462+12]..[203,6462+25])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (src/codeInliner.ml[203,6462+12]..[203,6462+19])
Ppat_var "formals" (src/codeInliner.ml[203,6462+12]..[203,6462+19])
                                                                      pattern (src/codeInliner.ml[203,6462+21]..[203,6462+25])
Ppat_var "body" (src/codeInliner.ml[203,6462+21]..[203,6462+25])
                                                                    ]
                                                                  expression (src/codeInliner.ml[203,6462+28]..[203,6462+67])
                                                                    Pexp_apply
                                                                    expression (src/codeInliner.ml[203,6462+28]..[203,6462+36])
                                                                      Pexp_ident "annotate" (src/codeInliner.ml[203,6462+28]..[203,6462+36])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/codeInliner.ml[203,6462+37]..[203,6462+44])
  Pexp_ident "formals" (src/codeInliner.ml[203,6462+37]..[203,6462+44])
                                                                      <arg>
                                                                      Nolabel
expression (src/codeInliner.ml[203,6462+45]..[203,6462+49])
  Pexp_ident "body" (src/codeInliner.ml[203,6462+45]..[203,6462+49])
                                                                      <arg>
                                                                      Nolabel
expression (src/codeInliner.ml[203,6462+50]..[203,6462+67])
  Pexp_apply
  expression (src/codeInliner.ml[203,6462+51]..[203,6462+59])
    Pexp_ident "instance" (src/codeInliner.ml[203,6462+51]..[203,6462+59])
  [
    <arg>
    Nolabel
      expression (src/codeInliner.ml[203,6462+60]..[203,6462+66])
        Pexp_ident "scheme" (src/codeInliner.ml[203,6462+60]..[203,6462+66])
  ]
                                                                    ]
                                                              ]
                                                              expression (src/codeInliner.ml[204,6533+8]..[204,6533+33])
                                                                Pexp_apply
                                                                expression (src/codeInliner.ml[204,6533+8]..[204,6533+12])
                                                                  Pexp_ident "mlet" (src/codeInliner.ml[204,6533+8]..[204,6533+12])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/codeInliner.ml[204,6533+13]..[204,6533+20])
                                                                      Pexp_ident "formals" (src/codeInliner.ml[204,6533+13]..[204,6533+20])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/codeInliner.ml[204,6533+21]..[204,6533+28])
                                                                      Pexp_ident "actuals" (src/codeInliner.ml[204,6533+21]..[204,6533+28])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/codeInliner.ml[204,6533+29]..[204,6533+33])
                                                                      Pexp_ident "body" (src/codeInliner.ml[204,6533+29]..[204,6533+33])
                                                                ]
                                                          <case>
                                                            pattern (src/codeInliner.ml[206,6568+6]..[206,6568+7])
                                                              Ppat_any
                                                            expression (src/codeInliner.ml[207,6579+8]..[207,6579+33])
                                                              Pexp_apply
                                                              expression (src/codeInliner.ml[207,6579+8]..[207,6579+12])
                                                                Pexp_ident "mlet" (src/codeInliner.ml[207,6579+8]..[207,6579+12])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/codeInliner.ml[207,6579+13]..[207,6579+20])
                                                                    Pexp_ident "formals" (src/codeInliner.ml[207,6579+13]..[207,6579+20])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/codeInliner.ml[207,6579+21]..[207,6579+28])
                                                                    Pexp_ident "actuals" (src/codeInliner.ml[207,6579+21]..[207,6579+28])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/codeInliner.ml[207,6579+29]..[207,6579+33])
                                                                    Pexp_ident "body" (src/codeInliner.ml[207,6579+29]..[207,6579+33])
                                                              ]
                                                        ]
                                        ]
                                        expression (src/codeInliner.ml[214,6829+2]..[282,8873+9])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/codeInliner.ml[214,6829+6]..[214,6829+7])
                                                Ppat_var "o" (src/codeInliner.ml[214,6829+6]..[214,6829+7])
                                              expression (src/codeInliner.ml[215,6839+4]..[259,8386+7])
                                                Pexp_object
                                                class_structure
                                                  pattern (src/codeInliner.ml[215,6839+11]..[215,6839+17])
                                                    Ppat_var "self" (src/codeInliner.ml[215,6839+12]..[215,6839+16])
                                                  [
                                                    class_field (src/codeInliner.ml[216,6857+6]..[216,6857+51])
                                                      Pcf_inherit Fresh
                                                        class_expr (src/codeInliner.ml[216,6857+14]..[216,6857+42])
                                                          Pcl_constr "Traverse.map" (src/codeInliner.ml[216,6857+30]..[216,6857+42])
                                                          [
                                                            core_type (src/codeInliner.ml[216,6857+16]..[216,6857+27])
                                                              Ptyp_constr "StringSet.t" (src/codeInliner.ml[216,6857+16]..[216,6857+27])
                                                              []
                                                          ]
                                                        Some
                                                          "super" (src/codeInliner.ml[216,6857+46]..[216,6857+51])
                                                    class_field (src/codeInliner.ml[217,6909+6]..[217,6909+26])
                                                      Pcf_inherit Fresh
                                                        class_expr (src/codeInliner.ml[217,6909+14]..[217,6909+26])
                                                          Pcl_apply
                                                          class_expr (src/codeInliner.ml[217,6909+14]..[217,6909+20])
                                                            Pcl_constr "locals" (src/codeInliner.ml[217,6909+14]..[217,6909+20])
                                                            []
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/codeInliner.ml[217,6909+21]..[217,6909+26])
                                                                Pexp_ident "table" (src/codeInliner.ml[217,6909+21]..[217,6909+26])
                                                          ]
                                                        None
                                                    class_field (src/codeInliner.ml[218,6936+6]..[257,8345+39])
                                                      Pcf_method Public
                                                        "eapp" (src/codeInliner.ml[218,6936+14]..[218,6936+18])
                                                        Concrete Override
                                                        expression (src/codeInliner.ml[218,6936+19]..[257,8345+39]) ghost
                                                          Pexp_poly
                                                          expression (src/codeInliner.ml[218,6936+19]..[257,8345+39]) ghost
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (src/codeInliner.ml[218,6936+19]..[218,6936+25])
                                                              Ppat_var "locals" (src/codeInliner.ml[218,6936+19]..[218,6936+25])
                                                            expression (src/codeInliner.ml[218,6936+26]..[257,8345+39]) ghost
                                                              Pexp_fun
                                                              Nolabel
                                                              None
                                                              pattern (src/codeInliner.ml[218,6936+26]..[218,6936+27])
                                                                Ppat_var "e" (src/codeInliner.ml[218,6936+26]..[218,6936+27])
                                                              expression (src/codeInliner.ml[218,6936+28]..[257,8345+39]) ghost
                                                                Pexp_fun
                                                                Nolabel
                                                                None
                                                                pattern (src/codeInliner.ml[218,6936+28]..[218,6936+35])
                                                                  Ppat_var "actuals" (src/codeInliner.ml[218,6936+28]..[218,6936+35])
                                                                expression (src/codeInliner.ml[219,6974+8]..[257,8345+39])
                                                                  Pexp_match
                                                                  expression (src/codeInliner.ml[219,6974+14]..[219,6974+15])
                                                                    Pexp_ident "e" (src/codeInliner.ml[219,6974+14]..[219,6974+15])
                                                                  [
                                                                    <case>
                                                                      pattern (src/codeInliner.ml[220,6995+10]..[220,6995+17])
Ppat_construct "EVar" (src/codeInliner.ml[220,6995+10]..[220,6995+14])
Some
  []
  pattern (src/codeInliner.ml[220,6995+15]..[220,6995+17])
    Ppat_var "id" (src/codeInliner.ml[220,6995+15]..[220,6995+17])
                                                                      <when>
expression (src/codeInliner.ml[221,7018+12]..[222,7088+43])
  Pexp_apply
  expression (src/codeInliner.ml[221,7018+35]..[221,7018+37])
    Pexp_ident "&&" (src/codeInliner.ml[221,7018+35]..[221,7018+37])
  [
    <arg>
    Nolabel
      expression (src/codeInliner.ml[221,7018+12]..[221,7018+34])
        Pexp_apply
        expression (src/codeInliner.ml[221,7018+13]..[221,7018+24])
          Pexp_ident "Hashtbl.mem" (src/codeInliner.ml[221,7018+13]..[221,7018+24])
        [
          <arg>
          Nolabel
            expression (src/codeInliner.ml[221,7018+25]..[221,7018+30])
              Pexp_ident "table" (src/codeInliner.ml[221,7018+25]..[221,7018+30])
          <arg>
          Nolabel
            expression (src/codeInliner.ml[221,7018+31]..[221,7018+33])
              Pexp_ident "id" (src/codeInliner.ml[221,7018+31]..[221,7018+33])
        ]
    <arg>
    Nolabel
      expression (src/codeInliner.ml[222,7088+12]..[222,7088+43])
        Pexp_apply
        expression (src/codeInliner.ml[222,7088+13]..[222,7088+16])
          Pexp_ident "not" (src/codeInliner.ml[222,7088+13]..[222,7088+16])
        [
          <arg>
          Nolabel
            expression (src/codeInliner.ml[222,7088+17]..[222,7088+42])
              Pexp_apply
              expression (src/codeInliner.ml[222,7088+18]..[222,7088+31])
                Pexp_ident "StringSet.mem" (src/codeInliner.ml[222,7088+18]..[222,7088+31])
              [
                <arg>
                Nolabel
                  expression (src/codeInliner.ml[222,7088+32]..[222,7088+34])
                    Pexp_ident "id" (src/codeInliner.ml[222,7088+32]..[222,7088+34])
                <arg>
                Nolabel
                  expression (src/codeInliner.ml[222,7088+35]..[222,7088+41])
                    Pexp_ident "locals" (src/codeInliner.ml[222,7088+35]..[222,7088+41])
              ]
        ]
  ]
                                                                      expression (src/codeInliner.ml[225,7185+12]..[253,8232+15])
Pexp_let Nonrec
[
  <def>
    pattern (src/codeInliner.ml[225,7185+16]..[225,7185+22])
      Ppat_tuple
      [
        pattern (src/codeInliner.ml[225,7185+16]..[225,7185+17])
          Ppat_any
        pattern (src/codeInliner.ml[225,7185+19]..[225,7185+22])
          Ppat_var "def" (src/codeInliner.ml[225,7185+19]..[225,7185+22])
      ]
    expression (src/codeInliner.ml[225,7185+25]..[225,7185+46])
      Pexp_apply
      expression (src/codeInliner.ml[225,7185+25]..[225,7185+37])
        Pexp_ident "Hashtbl.find" (src/codeInliner.ml[225,7185+25]..[225,7185+37])
      [
        <arg>
        Nolabel
          expression (src/codeInliner.ml[225,7185+38]..[225,7185+43])
            Pexp_ident "table" (src/codeInliner.ml[225,7185+38]..[225,7185+43])
        <arg>
        Nolabel
          expression (src/codeInliner.ml[225,7185+44]..[225,7185+46])
            Pexp_ident "id" (src/codeInliner.ml[225,7185+44]..[225,7185+46])
      ]
]
expression (src/codeInliner.ml[227,7281+12]..[253,8232+15])
  Pexp_let Nonrec
  [
    <def>
      pattern (src/codeInliner.ml[227,7281+16]..[227,7281+38])
        Ppat_tuple
        [
          pattern (src/codeInliner.ml[227,7281+16]..[227,7281+23])
            Ppat_var "formals" (src/codeInliner.ml[227,7281+16]..[227,7281+23])
          pattern (src/codeInliner.ml[227,7281+25]..[227,7281+29])
            Ppat_var "body" (src/codeInliner.ml[227,7281+25]..[227,7281+29])
          pattern (src/codeInliner.ml[227,7281+31]..[227,7281+38])
            Ppat_var "oscheme" (src/codeInliner.ml[227,7281+31]..[227,7281+38])
        ]
      expression (src/codeInliner.ml[228,7322+14]..[236,7742+30])
        Pexp_match
        expression (src/codeInliner.ml[228,7322+20]..[228,7322+23])
          Pexp_ident "def" (src/codeInliner.ml[228,7322+20]..[228,7322+23])
        [
          <case>
            pattern (src/codeInliner.ml[229,7351+16]..[229,7351+49])
              Ppat_record Closed
              [
                "valval" (src/codeInliner.ml[229,7351+18]..[229,7351+24])
                  pattern (src/codeInliner.ml[229,7351+27]..[229,7351+47])
                    Ppat_construct "EFun" (src/codeInliner.ml[229,7351+27]..[229,7351+31])
                    Some
                      []
                      pattern (src/codeInliner.ml[229,7351+32]..[229,7351+47])
                        Ppat_tuple
                        [
                          pattern (src/codeInliner.ml[229,7351+33]..[229,7351+40])
                            Ppat_var "formals" (src/codeInliner.ml[229,7351+33]..[229,7351+40])
                          pattern (src/codeInliner.ml[229,7351+42]..[229,7351+46])
                            Ppat_var "body" (src/codeInliner.ml[229,7351+42]..[229,7351+46])
                        ]
              ]
            expression (src/codeInliner.ml[230,7404+18]..[230,7404+37])
              Pexp_tuple
              [
                expression (src/codeInliner.ml[230,7404+18]..[230,7404+25])
                  Pexp_ident "formals" (src/codeInliner.ml[230,7404+18]..[230,7404+25])
                expression (src/codeInliner.ml[230,7404+27]..[230,7404+31])
                  Pexp_ident "body" (src/codeInliner.ml[230,7404+27]..[230,7404+31])
                expression (src/codeInliner.ml[230,7404+33]..[230,7404+37])
                  Pexp_construct "None" (src/codeInliner.ml[230,7404+33]..[230,7404+37])
                  None
              ]
          <case>
            pattern (src/codeInliner.ml[231,7442+16]..[231,7442+66])
              Ppat_record Closed
              [
                "valval" (src/codeInliner.ml[231,7442+18]..[231,7442+24])
                  pattern (src/codeInliner.ml[231,7442+27]..[231,7442+64])
                    Ppat_construct "EAnnot" (src/codeInliner.ml[231,7442+27]..[231,7442+33])
                    Some
                      []
                      pattern (src/codeInliner.ml[231,7442+34]..[231,7442+64])
                        Ppat_tuple
                        [
                          pattern (src/codeInliner.ml[231,7442+35]..[231,7442+55])
                            Ppat_construct "EFun" (src/codeInliner.ml[231,7442+35]..[231,7442+39])
                            Some
                              []
                              pattern (src/codeInliner.ml[231,7442+40]..[231,7442+55])
                                Ppat_tuple
                                [
                                  pattern (src/codeInliner.ml[231,7442+41]..[231,7442+48])
                                    Ppat_var "formals" (src/codeInliner.ml[231,7442+41]..[231,7442+48])
                                  pattern (src/codeInliner.ml[231,7442+50]..[231,7442+54])
                                    Ppat_var "body" (src/codeInliner.ml[231,7442+50]..[231,7442+54])
                                ]
                          pattern (src/codeInliner.ml[231,7442+57]..[231,7442+63])
                            Ppat_var "scheme" (src/codeInliner.ml[231,7442+57]..[231,7442+63])
                        ]
              ]
            expression (src/codeInliner.ml[232,7512+18]..[232,7512+44])
              Pexp_tuple
              [
                expression (src/codeInliner.ml[232,7512+18]..[232,7512+25])
                  Pexp_ident "formals" (src/codeInliner.ml[232,7512+18]..[232,7512+25])
                expression (src/codeInliner.ml[232,7512+27]..[232,7512+31])
                  Pexp_ident "body" (src/codeInliner.ml[232,7512+27]..[232,7512+31])
                expression (src/codeInliner.ml[232,7512+33]..[232,7512+44])
                  Pexp_construct "Some" (src/codeInliner.ml[232,7512+33]..[232,7512+37])
                  Some
                    expression (src/codeInliner.ml[232,7512+38]..[232,7512+44])
                      Pexp_ident "scheme" (src/codeInliner.ml[232,7512+38]..[232,7512+44])
              ]
          <case>
            pattern (src/codeInliner.ml[233,7557+16]..[233,7557+30])
              Ppat_record Closed
              [
                "valval" (src/codeInliner.ml[233,7557+18]..[233,7557+24])
                  pattern (src/codeInliner.ml[233,7557+27]..[233,7557+28])
                    Ppat_any
              ]
            expression (src/codeInliner.ml[236,7742+18]..[236,7742+30])
              Pexp_assert
              expression (src/codeInliner.ml[236,7742+25]..[236,7742+30])
                Pexp_construct "false" (src/codeInliner.ml[236,7742+25]..[236,7742+30])
                None
        ]
  ]
  expression (src/codeInliner.ml[239,7789+12]..[253,8232+15])
    Pexp_sequence
    expression (src/codeInliner.ml[239,7789+12]..[239,7789+43])
      Pexp_assert
      expression (src/codeInliner.ml[239,7789+19]..[239,7789+43])
        Pexp_apply
        expression (src/codeInliner.ml[239,7789+20]..[239,7789+33])
          Pexp_ident "StringMap.mem" (src/codeInliner.ml[239,7789+20]..[239,7789+33])
        [
          <arg>
          Nolabel
            expression (src/codeInliner.ml[239,7789+34]..[239,7789+36])
              Pexp_ident "id" (src/codeInliner.ml[239,7789+34]..[239,7789+36])
          <arg>
          Nolabel
            expression (src/codeInliner.ml[239,7789+37]..[239,7789+42])
              Pexp_ident "usage" (src/codeInliner.ml[239,7789+37]..[239,7789+42])
        ]
    expression (src/codeInliner.ml[240,7834+12]..[253,8232+15])
      Pexp_ifthenelse
      expression (src/codeInliner.ml[240,7834+15]..[240,7834+64])
        Pexp_apply
        expression (src/codeInliner.ml[240,7834+43]..[240,7834+45])
          Pexp_ident "||" (src/codeInliner.ml[240,7834+43]..[240,7834+45])
        [
          <arg>
          Nolabel
            expression (src/codeInliner.ml[240,7834+15]..[240,7834+42])
              Pexp_apply
              expression (src/codeInliner.ml[240,7834+39]..[240,7834+40])
                Pexp_ident "=" (src/codeInliner.ml[240,7834+39]..[240,7834+40])
              [
                <arg>
                Nolabel
                  expression (src/codeInliner.ml[240,7834+15]..[240,7834+38])
                    Pexp_apply
                    expression (src/codeInliner.ml[240,7834+15]..[240,7834+29])
                      Pexp_ident "StringMap.find" (src/codeInliner.ml[240,7834+15]..[240,7834+29])
                    [
                      <arg>
                      Nolabel
                        expression (src/codeInliner.ml[240,7834+30]..[240,7834+32])
                          Pexp_ident "id" (src/codeInliner.ml[240,7834+30]..[240,7834+32])
                      <arg>
                      Nolabel
                        expression (src/codeInliner.ml[240,7834+33]..[240,7834+38])
                          Pexp_ident "usage" (src/codeInliner.ml[240,7834+33]..[240,7834+38])
                    ]
                <arg>
                Nolabel
                  expression (src/codeInliner.ml[240,7834+41]..[240,7834+42])
                    Pexp_constant PConst_int (1,None)
              ]
          <arg>
          Nolabel
            expression (src/codeInliner.ml[240,7834+46]..[240,7834+64])
              Pexp_apply
              expression (src/codeInliner.ml[240,7834+46]..[240,7834+59])
                Pexp_ident "is_simple_app" (src/codeInliner.ml[240,7834+46]..[240,7834+59])
              [
                <arg>
                Nolabel
                  expression (src/codeInliner.ml[240,7834+60]..[240,7834+64])
                    Pexp_ident "body" (src/codeInliner.ml[240,7834+60]..[240,7834+64])
              ]
        ]
      expression (src/codeInliner.ml[244,7978+14]..[244,7978+103])
        Pexp_apply
        expression (src/codeInliner.ml[244,7978+14]..[244,7978+20])
          Pexp_ident "inline" (src/codeInliner.ml[244,7978+14]..[244,7978+20])
        [
          <arg>
          Nolabel
            expression (src/codeInliner.ml[244,7978+21]..[244,7978+28])
              Pexp_ident "formals" (src/codeInliner.ml[244,7978+21]..[244,7978+28])
          <arg>
          Nolabel
            expression (src/codeInliner.ml[244,7978+29]..[244,7978+56])
              Pexp_apply
              expression (src/codeInliner.ml[244,7978+30]..[244,7978+40])
                Pexp_send "exprs"
                expression (src/codeInliner.ml[244,7978+30]..[244,7978+34])
                  Pexp_ident "self" (src/codeInliner.ml[244,7978+30]..[244,7978+34])
              [
                <arg>
                Nolabel
                  expression (src/codeInliner.ml[244,7978+41]..[244,7978+47])
                    Pexp_ident "locals" (src/codeInliner.ml[244,7978+41]..[244,7978+47])
                <arg>
                Nolabel
                  expression (src/codeInliner.ml[244,7978+48]..[244,7978+55])
                    Pexp_ident "actuals" (src/codeInliner.ml[244,7978+48]..[244,7978+55])
              ]
          <arg>
          Nolabel
            expression (src/codeInliner.ml[244,7978+57]..[244,7978+95])
              Pexp_construct "EComment" (src/codeInliner.ml[244,7978+58]..[244,7978+66])
              Some
                expression (src/codeInliner.ml[244,7978+67]..[244,7978+94])
                  Pexp_tuple
                  [
                    expression (src/codeInliner.ml[244,7978+68]..[244,7978+70])
                      Pexp_ident "id" (src/codeInliner.ml[244,7978+68]..[244,7978+70])
                    expression (src/codeInliner.ml[244,7978+72]..[244,7978+93])
                      Pexp_apply
                      expression (src/codeInliner.ml[244,7978+72]..[244,7978+81])
                        Pexp_send "expr"
                        expression (src/codeInliner.ml[244,7978+72]..[244,7978+76])
                          Pexp_ident "self" (src/codeInliner.ml[244,7978+72]..[244,7978+76])
                      [
                        <arg>
                        Nolabel
                          expression (src/codeInliner.ml[244,7978+82]..[244,7978+88])
                            Pexp_ident "locals" (src/codeInliner.ml[244,7978+82]..[244,7978+88])
                        <arg>
                        Nolabel
                          expression (src/codeInliner.ml[244,7978+89]..[244,7978+93])
                            Pexp_ident "body" (src/codeInliner.ml[244,7978+89]..[244,7978+93])
                      ]
                  ]
          <arg>
          Nolabel
            expression (src/codeInliner.ml[244,7978+96]..[244,7978+103])
              Pexp_ident "oscheme" (src/codeInliner.ml[244,7978+96]..[244,7978+103])
        ]
      Some
        expression (src/codeInliner.ml[246,8083+17]..[253,8232+15])
          Pexp_sequence
          expression (src/codeInliner.ml[250,8162+14]..[250,8162+25])
            Pexp_apply
            expression (src/codeInliner.ml[250,8162+14]..[250,8162+21])
              Pexp_ident "enqueue" (src/codeInliner.ml[250,8162+14]..[250,8162+21])
            [
              <arg>
              Nolabel
                expression (src/codeInliner.ml[250,8162+22]..[250,8162+25])
                  Pexp_ident "def" (src/codeInliner.ml[250,8162+22]..[250,8162+25])
            ]
          expression (src/codeInliner.ml[251,8189+14]..[251,8189+41])
            Pexp_apply
            expression (src/codeInliner.ml[251,8189+14]..[251,8189+24])
              Pexp_send "eapp"
              expression (src/codeInliner.ml[251,8189+14]..[251,8189+19])
                Pexp_ident "super" (src/codeInliner.ml[251,8189+14]..[251,8189+19])
            [
              <arg>
              Nolabel
                expression (src/codeInliner.ml[251,8189+25]..[251,8189+31])
                  Pexp_ident "locals" (src/codeInliner.ml[251,8189+25]..[251,8189+31])
              <arg>
              Nolabel
                expression (src/codeInliner.ml[251,8189+32]..[251,8189+33])
                  Pexp_ident "e" (src/codeInliner.ml[251,8189+32]..[251,8189+33])
              <arg>
              Nolabel
                expression (src/codeInliner.ml[251,8189+34]..[251,8189+41])
                  Pexp_ident "actuals" (src/codeInliner.ml[251,8189+34]..[251,8189+41])
            ]
                                                                    <case>
                                                                      pattern (src/codeInliner.ml[255,8249+10]..[255,8249+11])
Ppat_any
                                                                      expression (src/codeInliner.ml[257,8345+12]..[257,8345+39])
Pexp_apply
expression (src/codeInliner.ml[257,8345+12]..[257,8345+22])
  Pexp_send "eapp"
  expression (src/codeInliner.ml[257,8345+12]..[257,8345+17])
    Pexp_ident "super" (src/codeInliner.ml[257,8345+12]..[257,8345+17])
[
  <arg>
  Nolabel
    expression (src/codeInliner.ml[257,8345+23]..[257,8345+29])
      Pexp_ident "locals" (src/codeInliner.ml[257,8345+23]..[257,8345+29])
  <arg>
  Nolabel
    expression (src/codeInliner.ml[257,8345+30]..[257,8345+31])
      Pexp_ident "e" (src/codeInliner.ml[257,8345+30]..[257,8345+31])
  <arg>
  Nolabel
    expression (src/codeInliner.ml[257,8345+32]..[257,8345+39])
      Pexp_ident "actuals" (src/codeInliner.ml[257,8345+32]..[257,8345+39])
]
                                                                  ]
                                                          None
                                                  ]
                                          ]
                                          expression (src/codeInliner.ml[265,8485+2]..[282,8873+9])
                                            Pexp_sequence
                                            expression (src/codeInliner.ml[265,8485+2]..[268,8577+8])
                                              Pexp_apply
                                              expression (src/codeInliner.ml[265,8485+2]..[265,8485+11])
                                                Pexp_ident "List.iter" (src/codeInliner.ml[265,8485+2]..[265,8485+11])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/codeInliner.ml[265,8485+12]..[268,8577+3])
                                                    Pexp_function
                                                    [
                                                      <case>
                                                        pattern (src/codeInliner.ml[265,8485+22]..[265,8485+51])
                                                          Ppat_alias "def" (src/codeInliner.ml[265,8485+48]..[265,8485+51])
                                                          pattern (src/codeInliner.ml[265,8485+22]..[265,8485+44])
                                                            Ppat_record Closed
                                                            [
                                                              "valpublic" (src/codeInliner.ml[265,8485+24]..[265,8485+33])
                                                                pattern (src/codeInliner.ml[265,8485+36]..[265,8485+42])
                                                                  Ppat_var "public" (src/codeInliner.ml[265,8485+36]..[265,8485+42])
                                                            ]
                                                        expression (src/codeInliner.ml[266,8540+4]..[267,8559+17])
                                                          Pexp_ifthenelse
                                                          expression (src/codeInliner.ml[266,8540+7]..[266,8540+13])
                                                            Pexp_ident "public" (src/codeInliner.ml[266,8540+7]..[266,8540+13])
                                                          expression (src/codeInliner.ml[267,8559+6]..[267,8559+17])
                                                            Pexp_apply
                                                            expression (src/codeInliner.ml[267,8559+6]..[267,8559+13])
                                                              Pexp_ident "enqueue" (src/codeInliner.ml[267,8559+6]..[267,8559+13])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/codeInliner.ml[267,8559+14]..[267,8559+17])
                                                                  Pexp_ident "def" (src/codeInliner.ml[267,8559+14]..[267,8559+17])
                                                            ]
                                                          None
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (src/codeInliner.ml[268,8577+4]..[268,8577+8])
                                                    Pexp_ident "defs" (src/codeInliner.ml[268,8577+4]..[268,8577+8])
                                              ]
                                            expression (src/codeInliner.ml[270,8588+2]..[282,8873+9])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/codeInliner.ml[270,8588+6]..[270,8588+13])
                                                    Ppat_var "valdefs" (src/codeInliner.ml[270,8588+6]..[270,8588+13])
                                                  expression (src/codeInliner.ml[271,8604+4]..[273,8679+14])
                                                    Pexp_apply
                                                    expression (src/codeInliner.ml[271,8604+4]..[271,8604+14])
                                                      Pexp_ident "Misc.qfold" (src/codeInliner.ml[271,8604+4]..[271,8604+14])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/codeInliner.ml[271,8604+15]..[273,8679+5])
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (src/codeInliner.ml[271,8604+20]..[271,8604+24])
                                                            Ppat_var "defs" (src/codeInliner.ml[271,8604+20]..[271,8604+24])
                                                          expression (src/codeInliner.ml[271,8604+25]..[272,8636+42]) ghost
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (src/codeInliner.ml[271,8604+25]..[271,8604+28])
                                                              Ppat_var "def" (src/codeInliner.ml[271,8604+25]..[271,8604+28])
                                                            expression (src/codeInliner.ml[272,8636+6]..[272,8636+42])
                                                              Pexp_construct "::" (src/codeInliner.ml[272,8636+35]..[272,8636+37])
                                                              Some
                                                                expression (src/codeInliner.ml[272,8636+6]..[272,8636+42]) ghost
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (src/codeInliner.ml[272,8636+6]..[272,8636+34])
                                                                      Pexp_apply
                                                                      expression (src/codeInliner.ml[272,8636+6]..[272,8636+14])
Pexp_send "valdef"
expression (src/codeInliner.ml[272,8636+6]..[272,8636+7])
  Pexp_ident "o" (src/codeInliner.ml[272,8636+6]..[272,8636+7])
                                                                      [
<arg>
Nolabel
  expression (src/codeInliner.ml[272,8636+15]..[272,8636+30])
    Pexp_ident "StringSet.empty" (src/codeInliner.ml[272,8636+15]..[272,8636+30])
<arg>
Nolabel
  expression (src/codeInliner.ml[272,8636+31]..[272,8636+34])
    Pexp_ident "def" (src/codeInliner.ml[272,8636+31]..[272,8636+34])
                                                                      ]
                                                                    expression (src/codeInliner.ml[272,8636+38]..[272,8636+42])
                                                                      Pexp_ident "defs" (src/codeInliner.ml[272,8636+38]..[272,8636+42])
                                                                  ]
                                                      <arg>
                                                      Nolabel
                                                        expression (src/codeInliner.ml[273,8679+6]..[273,8679+8])
                                                          Pexp_construct "[]" (src/codeInliner.ml[273,8679+6]..[273,8679+8])
                                                          None
                                                      <arg>
                                                      Nolabel
                                                        expression (src/codeInliner.ml[273,8679+9]..[273,8679+14])
                                                          Pexp_ident "queue" (src/codeInliner.ml[273,8679+9]..[273,8679+14])
                                                    ]
                                              ]
                                              expression (src/codeInliner.ml[276,8700+2]..[282,8873+9])
                                                Pexp_sequence
                                                expression (src/codeInliner.ml[276,8700+2]..[278,8809+36])
                                                  Pexp_apply
                                                  expression (src/codeInliner.ml[276,8700+2]..[276,8700+12])
                                                    Pexp_ident "Error.logC" (src/codeInliner.ml[276,8700+2]..[276,8700+12])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/codeInliner.ml[276,8700+13]..[276,8700+14])
                                                        Pexp_constant PConst_int (1,None)
                                                    <arg>
                                                    Nolabel
                                                      expression (src/codeInliner.ml[276,8700+15]..[278,8809+36])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (src/codeInliner.ml[276,8700+20]..[276,8700+21])
                                                          Ppat_var "f" (src/codeInliner.ml[276,8700+20]..[276,8700+21])
                                                        expression (src/codeInliner.ml[277,8725+4]..[278,8809+35])
                                                          Pexp_apply
                                                          expression (src/codeInliner.ml[277,8725+4]..[277,8725+18])
                                                            Pexp_ident "Printf.fprintf" (src/codeInliner.ml[277,8725+4]..[277,8725+18])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/codeInliner.ml[277,8725+19]..[277,8725+20])
                                                                Pexp_ident "f" (src/codeInliner.ml[277,8725+19]..[277,8725+20])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/codeInliner.ml[277,8725+21]..[277,8725+83])
                                                                Pexp_constant PConst_string("%d functions before inlining, %d functions after inlining.\n",(src/codeInliner.ml[277,8725+22]..[277,8725+82]),None)
                                                            <arg>
                                                            Nolabel
                                                              expression (src/codeInliner.ml[278,8809+7]..[278,8809+13])
                                                                Pexp_ident "before" (src/codeInliner.ml[278,8809+7]..[278,8809+13])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/codeInliner.ml[278,8809+14]..[278,8809+35])
                                                                Pexp_apply
                                                                expression (src/codeInliner.ml[278,8809+15]..[278,8809+26])
                                                                  Pexp_ident "List.length" (src/codeInliner.ml[278,8809+15]..[278,8809+26])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/codeInliner.ml[278,8809+27]..[278,8809+34])
                                                                      Pexp_ident "valdefs" (src/codeInliner.ml[278,8809+27]..[278,8809+34])
                                                                ]
                                                          ]
                                                  ]
                                                expression (src/codeInliner.ml[280,8848+2]..[282,8873+9])
                                                  Pexp_sequence
                                                  expression (src/codeInliner.ml[280,8848+2]..[280,8848+22])
                                                    Pexp_apply
                                                    expression (src/codeInliner.ml[280,8848+2]..[280,8848+11])
                                                      Pexp_ident "Time.tick" (src/codeInliner.ml[280,8848+2]..[280,8848+11])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/codeInliner.ml[280,8848+12]..[280,8848+22])
                                                          Pexp_constant PConst_string("Inlining",(src/codeInliner.ml[280,8848+13]..[280,8848+21]),None)
                                                    ]
                                                  expression (src/codeInliner.ml[282,8873+2]..[282,8873+9])
                                                    Pexp_ident "valdefs" (src/codeInliner.ml[282,8873+2]..[282,8873+9])
            core_type (src/codeInliner.ml[34,1633+42]..[34,1633+53])
              Ptyp_constr "list" (src/codeInliner.ml[34,1633+49]..[34,1633+53])
              [
                core_type (src/codeInliner.ml[34,1633+42]..[34,1633+48])
                  Ptyp_constr "valdef" (src/codeInliner.ml[34,1633+42]..[34,1633+48])
                  []
              ]
    ]
  structure_item (src/codeInliner.ml[286,8917+0]..[313,9598+49])
    Pstr_value Rec
    [
      <def>
        pattern (src/codeInliner.ml[286,8917+8]..[286,8917+29])
          Ppat_var "inline_structure_item" (src/codeInliner.ml[286,8917+8]..[286,8917+29])
        expression (src/codeInliner.ml[286,8917+30]..[302,9395+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/codeInliner.ml[286,8917+30]..[286,8917+34])
            Ppat_var "item" (src/codeInliner.ml[286,8917+30]..[286,8917+34])
          expression (src/codeInliner.ml[287,8954+2]..[302,9395+10])
            Pexp_match
            expression (src/codeInliner.ml[287,8954+8]..[287,8954+12])
              Pexp_ident "item" (src/codeInliner.ml[287,8954+8]..[287,8954+12])
            [
              <case>
                pattern (src/codeInliner.ml[288,8972+4]..[288,8972+26])
                  Ppat_construct "SIValDefs" (src/codeInliner.ml[288,8972+4]..[288,8972+13])
                  Some
                    []
                    pattern (src/codeInliner.ml[288,8972+14]..[288,8972+26])
                      Ppat_tuple
                      [
                        pattern (src/codeInliner.ml[288,8972+15]..[288,8972+19])
                          Ppat_construct "true" (src/codeInliner.ml[288,8972+15]..[288,8972+19])
                          None
                        pattern (src/codeInliner.ml[288,8972+21]..[288,8972+25])
                          Ppat_var "defs" (src/codeInliner.ml[288,8972+21]..[288,8972+25])
                      ]
                expression (src/codeInliner.ml[290,9058+6]..[290,9058+43])
                  Pexp_construct "SIValDefs" (src/codeInliner.ml[290,9058+6]..[290,9058+15])
                  Some
                    expression (src/codeInliner.ml[290,9058+16]..[290,9058+43])
                      Pexp_tuple
                      [
                        expression (src/codeInliner.ml[290,9058+17]..[290,9058+21])
                          Pexp_construct "true" (src/codeInliner.ml[290,9058+17]..[290,9058+21])
                          None
                        expression (src/codeInliner.ml[290,9058+23]..[290,9058+42])
                          Pexp_apply
                          expression (src/codeInliner.ml[290,9058+23]..[290,9058+37])
                            Pexp_ident "inline_valdefs" (src/codeInliner.ml[290,9058+23]..[290,9058+37])
                          [
                            <arg>
                            Nolabel
                              expression (src/codeInliner.ml[290,9058+38]..[290,9058+42])
                                Pexp_ident "defs" (src/codeInliner.ml[290,9058+38]..[290,9058+42])
                          ]
                      ]
              <case>
                pattern (src/codeInliner.ml[291,9102+4]..[291,9102+25])
                  Ppat_construct "SIFunctor" (src/codeInliner.ml[291,9102+4]..[291,9102+13])
                  Some
                    []
                    pattern (src/codeInliner.ml[291,9102+14]..[291,9102+25])
                      Ppat_tuple
                      [
                        pattern (src/codeInliner.ml[291,9102+15]..[291,9102+21])
                          Ppat_var "params" (src/codeInliner.ml[291,9102+15]..[291,9102+21])
                        pattern (src/codeInliner.ml[291,9102+23]..[291,9102+24])
                          Ppat_var "s" (src/codeInliner.ml[291,9102+23]..[291,9102+24])
                      ]
                expression (src/codeInliner.ml[292,9131+6]..[292,9131+44])
                  Pexp_construct "SIFunctor" (src/codeInliner.ml[292,9131+6]..[292,9131+15])
                  Some
                    expression (src/codeInliner.ml[292,9131+16]..[292,9131+44])
                      Pexp_tuple
                      [
                        expression (src/codeInliner.ml[292,9131+17]..[292,9131+23])
                          Pexp_ident "params" (src/codeInliner.ml[292,9131+17]..[292,9131+23])
                        expression (src/codeInliner.ml[292,9131+25]..[292,9131+43])
                          Pexp_apply
                          expression (src/codeInliner.ml[292,9131+25]..[292,9131+41])
                            Pexp_ident "inline_structure" (src/codeInliner.ml[292,9131+25]..[292,9131+41])
                          [
                            <arg>
                            Nolabel
                              expression (src/codeInliner.ml[292,9131+42]..[292,9131+43])
                                Pexp_ident "s" (src/codeInliner.ml[292,9131+42]..[292,9131+43])
                          ]
                      ]
              <case>
                pattern (src/codeInliner.ml[293,9176+4]..[293,9176+25])
                  Ppat_construct "SIModuleDef" (src/codeInliner.ml[293,9176+4]..[293,9176+15])
                  Some
                    []
                    pattern (src/codeInliner.ml[293,9176+16]..[293,9176+25])
                      Ppat_tuple
                      [
                        pattern (src/codeInliner.ml[293,9176+17]..[293,9176+21])
                          Ppat_var "name" (src/codeInliner.ml[293,9176+17]..[293,9176+21])
                        pattern (src/codeInliner.ml[293,9176+23]..[293,9176+24])
                          Ppat_var "e" (src/codeInliner.ml[293,9176+23]..[293,9176+24])
                      ]
                expression (src/codeInliner.ml[294,9205+6]..[294,9205+42])
                  Pexp_construct "SIModuleDef" (src/codeInliner.ml[294,9205+6]..[294,9205+17])
                  Some
                    expression (src/codeInliner.ml[294,9205+18]..[294,9205+42])
                      Pexp_tuple
                      [
                        expression (src/codeInliner.ml[294,9205+19]..[294,9205+23])
                          Pexp_ident "name" (src/codeInliner.ml[294,9205+19]..[294,9205+23])
                        expression (src/codeInliner.ml[294,9205+25]..[294,9205+41])
                          Pexp_apply
                          expression (src/codeInliner.ml[294,9205+25]..[294,9205+39])
                            Pexp_ident "inline_modexpr" (src/codeInliner.ml[294,9205+25]..[294,9205+39])
                          [
                            <arg>
                            Nolabel
                              expression (src/codeInliner.ml[294,9205+40]..[294,9205+41])
                                Pexp_ident "e" (src/codeInliner.ml[294,9205+40]..[294,9205+41])
                          ]
                      ]
              <case>
                pattern (src/codeInliner.ml[295,9248+4]..[295,9248+15])
                  Ppat_construct "SIInclude" (src/codeInliner.ml[295,9248+4]..[295,9248+13])
                  Some
                    []
                    pattern (src/codeInliner.ml[295,9248+14]..[295,9248+15])
                      Ppat_var "e" (src/codeInliner.ml[295,9248+14]..[295,9248+15])
                expression (src/codeInliner.ml[296,9267+6]..[296,9267+34])
                  Pexp_construct "SIInclude" (src/codeInliner.ml[296,9267+6]..[296,9267+15])
                  Some
                    expression (src/codeInliner.ml[296,9267+16]..[296,9267+34])
                      Pexp_apply
                      expression (src/codeInliner.ml[296,9267+17]..[296,9267+31])
                        Pexp_ident "inline_modexpr" (src/codeInliner.ml[296,9267+17]..[296,9267+31])
                      [
                        <arg>
                        Nolabel
                          expression (src/codeInliner.ml[296,9267+32]..[296,9267+33])
                            Pexp_ident "e" (src/codeInliner.ml[296,9267+32]..[296,9267+33])
                      ]
              <case>
                pattern (src/codeInliner.ml[297,9302+4]..[301,9376+15])
                  Ppat_or
                  pattern (src/codeInliner.ml[297,9302+4]..[300,9360+15])
                    Ppat_or
                    pattern (src/codeInliner.ml[297,9302+4]..[299,9335+24])
                      Ppat_or
                      pattern (src/codeInliner.ml[297,9302+4]..[298,9318+16])
                        Ppat_or
                        pattern (src/codeInliner.ml[297,9302+4]..[297,9302+15])
                          Ppat_construct "SIExcDefs" (src/codeInliner.ml[297,9302+4]..[297,9302+13])
                          Some
                            []
                            pattern (src/codeInliner.ml[297,9302+14]..[297,9302+15])
                              Ppat_any
                        pattern (src/codeInliner.ml[298,9318+4]..[298,9318+16])
                          Ppat_construct "SITypeDefs" (src/codeInliner.ml[298,9318+4]..[298,9318+14])
                          Some
                            []
                            pattern (src/codeInliner.ml[298,9318+15]..[298,9318+16])
                              Ppat_any
                      pattern (src/codeInliner.ml[299,9335+4]..[299,9335+24])
                        Ppat_construct "SIValDefs" (src/codeInliner.ml[299,9335+4]..[299,9335+13])
                        Some
                          []
                          pattern (src/codeInliner.ml[299,9335+14]..[299,9335+24])
                            Ppat_tuple
                            [
                              pattern (src/codeInliner.ml[299,9335+15]..[299,9335+20])
                                Ppat_construct "false" (src/codeInliner.ml[299,9335+15]..[299,9335+20])
                                None
                              pattern (src/codeInliner.ml[299,9335+22]..[299,9335+23])
                                Ppat_any
                            ]
                    pattern (src/codeInliner.ml[300,9360+4]..[300,9360+15])
                      Ppat_construct "SIStretch" (src/codeInliner.ml[300,9360+4]..[300,9360+13])
                      Some
                        []
                        pattern (src/codeInliner.ml[300,9360+14]..[300,9360+15])
                          Ppat_any
                  pattern (src/codeInliner.ml[301,9376+4]..[301,9376+15])
                    Ppat_construct "SIComment" (src/codeInliner.ml[301,9376+4]..[301,9376+13])
                    Some
                      []
                      pattern (src/codeInliner.ml[301,9376+14]..[301,9376+15])
                        Ppat_any
                expression (src/codeInliner.ml[302,9395+6]..[302,9395+10])
                  Pexp_ident "item" (src/codeInliner.ml[302,9395+6]..[302,9395+10])
            ]
      <def>
        pattern (src/codeInliner.ml[304,9407+4]..[304,9407+20])
          Ppat_var "inline_structure" (src/codeInliner.ml[304,9407+4]..[304,9407+20])
        expression (src/codeInliner.ml[304,9407+21]..[305,9432+34]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/codeInliner.ml[304,9407+21]..[304,9407+22])
            Ppat_var "s" (src/codeInliner.ml[304,9407+21]..[304,9407+22])
          expression (src/codeInliner.ml[305,9432+2]..[305,9432+34])
            Pexp_apply
            expression (src/codeInliner.ml[305,9432+2]..[305,9432+10])
              Pexp_ident "List.map" (src/codeInliner.ml[305,9432+2]..[305,9432+10])
            [
              <arg>
              Nolabel
                expression (src/codeInliner.ml[305,9432+11]..[305,9432+32])
                  Pexp_ident "inline_structure_item" (src/codeInliner.ml[305,9432+11]..[305,9432+32])
              <arg>
              Nolabel
                expression (src/codeInliner.ml[305,9432+33]..[305,9432+34])
                  Pexp_ident "s" (src/codeInliner.ml[305,9432+33]..[305,9432+34])
            ]
      <def>
        pattern (src/codeInliner.ml[307,9468+4]..[307,9468+18])
          Ppat_var "inline_modexpr" (src/codeInliner.ml[307,9468+4]..[307,9468+18])
        expression (src/codeInliner.ml[307,9468+21]..[313,9598+49])
          Pexp_function
          [
            <case>
              pattern (src/codeInliner.ml[308,9498+4]..[308,9498+10])
                Ppat_construct "MVar" (src/codeInliner.ml[308,9498+4]..[308,9498+8])
                Some
                  []
                  pattern (src/codeInliner.ml[308,9498+9]..[308,9498+10])
                    Ppat_var "x" (src/codeInliner.ml[308,9498+9]..[308,9498+10])
              expression (src/codeInliner.ml[309,9512+6]..[309,9512+12])
                Pexp_construct "MVar" (src/codeInliner.ml[309,9512+6]..[309,9512+10])
                Some
                  expression (src/codeInliner.ml[309,9512+11]..[309,9512+12])
                    Pexp_ident "x" (src/codeInliner.ml[309,9512+11]..[309,9512+12])
            <case>
              pattern (src/codeInliner.ml[310,9525+4]..[310,9525+13])
                Ppat_construct "MStruct" (src/codeInliner.ml[310,9525+4]..[310,9525+11])
                Some
                  []
                  pattern (src/codeInliner.ml[310,9525+12]..[310,9525+13])
                    Ppat_var "s" (src/codeInliner.ml[310,9525+12]..[310,9525+13])
              expression (src/codeInliner.ml[311,9542+6]..[311,9542+34])
                Pexp_construct "MStruct" (src/codeInliner.ml[311,9542+6]..[311,9542+13])
                Some
                  expression (src/codeInliner.ml[311,9542+14]..[311,9542+34])
                    Pexp_apply
                    expression (src/codeInliner.ml[311,9542+15]..[311,9542+31])
                      Pexp_ident "inline_structure" (src/codeInliner.ml[311,9542+15]..[311,9542+31])
                    [
                      <arg>
                      Nolabel
                        expression (src/codeInliner.ml[311,9542+32]..[311,9542+33])
                          Pexp_ident "s" (src/codeInliner.ml[311,9542+32]..[311,9542+33])
                    ]
            <case>
              pattern (src/codeInliner.ml[312,9577+4]..[312,9577+17])
                Ppat_construct "MApp" (src/codeInliner.ml[312,9577+4]..[312,9577+8])
                Some
                  []
                  pattern (src/codeInliner.ml[312,9577+9]..[312,9577+17])
                    Ppat_tuple
                    [
                      pattern (src/codeInliner.ml[312,9577+10]..[312,9577+12])
                        Ppat_var "e1" (src/codeInliner.ml[312,9577+10]..[312,9577+12])
                      pattern (src/codeInliner.ml[312,9577+14]..[312,9577+16])
                        Ppat_var "e2" (src/codeInliner.ml[312,9577+14]..[312,9577+16])
                    ]
              expression (src/codeInliner.ml[313,9598+6]..[313,9598+49])
                Pexp_construct "MApp" (src/codeInliner.ml[313,9598+6]..[313,9598+10])
                Some
                  expression (src/codeInliner.ml[313,9598+11]..[313,9598+49])
                    Pexp_tuple
                    [
                      expression (src/codeInliner.ml[313,9598+12]..[313,9598+29])
                        Pexp_apply
                        expression (src/codeInliner.ml[313,9598+12]..[313,9598+26])
                          Pexp_ident "inline_modexpr" (src/codeInliner.ml[313,9598+12]..[313,9598+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/codeInliner.ml[313,9598+27]..[313,9598+29])
                              Pexp_ident "e1" (src/codeInliner.ml[313,9598+27]..[313,9598+29])
                        ]
                      expression (src/codeInliner.ml[313,9598+31]..[313,9598+48])
                        Pexp_apply
                        expression (src/codeInliner.ml[313,9598+31]..[313,9598+45])
                          Pexp_ident "inline_modexpr" (src/codeInliner.ml[313,9598+31]..[313,9598+45])
                        [
                          <arg>
                          Nolabel
                            expression (src/codeInliner.ml[313,9598+46]..[313,9598+48])
                              Pexp_ident "e2" (src/codeInliner.ml[313,9598+46]..[313,9598+48])
                        ]
                    ]
          ]
    ]
  structure_item (src/codeInliner.ml[317,9682+0]..[321,9782+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/codeInliner.ml[317,9682+4]..[317,9682+10])
          Ppat_var "inline" (src/codeInliner.ml[317,9682+4]..[317,9682+10])
        expression (src/codeInliner.ml[317,9682+11]..[321,9782+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/codeInliner.ml[317,9682+11]..[317,9682+24])
            Ppat_constraint
            pattern (src/codeInliner.ml[317,9682+12]..[317,9682+13])
              Ppat_var "p" (src/codeInliner.ml[317,9682+12]..[317,9682+13])
            core_type (src/codeInliner.ml[317,9682+16]..[317,9682+23])
              Ptyp_constr "program" (src/codeInliner.ml[317,9682+16]..[317,9682+23])
              []
          expression (src/codeInliner.ml[317,9682+25]..[321,9782+5])
            Pexp_constraint
            expression (src/codeInliner.ml[318,9719+2]..[321,9782+5])
              Pexp_ifthenelse
              expression (src/codeInliner.ml[318,9719+5]..[318,9719+27])
                Pexp_ident "Settings.code_inlining" (src/codeInliner.ml[318,9719+5]..[318,9719+27])
              expression (src/codeInliner.ml[319,9752+4]..[319,9752+22])
                Pexp_apply
                expression (src/codeInliner.ml[319,9752+4]..[319,9752+20])
                  Pexp_ident "inline_structure" (src/codeInliner.ml[319,9752+4]..[319,9752+20])
                [
                  <arg>
                  Nolabel
                    expression (src/codeInliner.ml[319,9752+21]..[319,9752+22])
                      Pexp_ident "p" (src/codeInliner.ml[319,9752+21]..[319,9752+22])
                ]
              Some
                expression (src/codeInliner.ml[321,9782+4]..[321,9782+5])
                  Pexp_ident "p" (src/codeInliner.ml[321,9782+4]..[321,9782+5])
            core_type (src/codeInliner.ml[317,9682+27]..[317,9682+34])
              Ptyp_constr "program" (src/codeInliner.ml[317,9682+27]..[317,9682+34])
              []
    ]
]

open IL
open CodeBits
class locals table =
  object
    method pvar (locals : StringSet.t) (id : string) =
      if Hashtbl.mem table id then StringSet.add id locals else locals
  end
let inline_valdefs (defs : valdef list) =
  (let (before, table) = Traverse.tabulate_defs defs in
   let queue : valdef Queue.t = Queue.create ()
   and usage : int StringMap.t ref = ref StringMap.empty in
   let visit locals id =
     if StringSet.mem id locals
     then ()
     else
       (try
          let (_, def) = Hashtbl.find table id in
          let n =
            try StringMap.find id (!usage)
            with | Not_found -> (Queue.add def queue; 0) in
          usage := (StringMap.add id (n + 1) (!usage))
        with | Not_found -> ()) in
   let o =
     object
       inherit  [StringSet.t,unit] Traverse.fold
       inherit  ((locals) table)
       method! evar locals () id = visit locals id
     end in
   List.iter
     (fun { valpublic = public; valpat = p } ->
        if public then visit StringSet.empty (pat2var p)) defs;
   Misc.qfold (o#valdef StringSet.empty) () queue;
   (let usage = !usage in
    let queue : valdef Queue.t = Queue.create ()
    and emitted = ref StringSet.empty in
    let enqueue def =
      let id = pat2var def.valpat in
      if not (StringSet.mem id (!emitted))
      then (emitted := (StringSet.add id (!emitted)); Queue.add def queue) in
    let rec is_simple_arg =
      function
      | EVar _ | EData (_, []) | ERecordAccess (EVar _, _) -> true
      | EMagic e -> is_simple_arg e
      | _ -> false in
    let is_simple_app =
      function
      | EApp (EVar _, actuals) -> List.for_all is_simple_arg actuals
      | _ -> false in
    let instance =
      let count = ref 0 in
      let fresh tv = incr count; (tv, (Printf.sprintf "freshtv%d" (!count))) in
      fun scheme ->
        let mapping = List.map fresh scheme.quantifiers in
        let rec sub typ =
          match typ with
          | TypTextual _ -> typ
          | TypVar v ->
              (try TypVar (List.assoc v mapping) with | Not_found -> typ)
          | TypApp (f, typs) -> TypApp (f, (List.map sub typs))
          | TypTuple typs -> TypTuple (List.map sub typs)
          | TypArrow (typ1, typ2) -> TypArrow ((sub typ1), (sub typ2)) in
        sub scheme.body in
    let rec annotate formals body typ =
      match (formals, typ) with
      | ([], _) -> ([], (CodeBits.annotate body typ))
      | (formal::formals, TypArrow (targ, tres)) ->
          let (formals, body) = annotate formals body tres in
          (((PAnnot (formal, targ)) :: formals), body)
      | (_::_, _) -> assert false in
    let inline formals actuals body oscheme =
      assert ((List.length actuals) = (List.length formals));
      (match oscheme with
       | Some scheme when not Front.ocaml_types_have_been_checked ->
           let (formals, body) = annotate formals body (instance scheme) in
           mlet formals actuals body
       | _ -> mlet formals actuals body) in
    let o =
      object (self)
        inherit  [StringSet.t] Traverse.map as super
        inherit  ((locals) table)
        method! eapp locals e actuals =
          match e with
          | EVar id when
              (Hashtbl.mem table id) && (not (StringSet.mem id locals)) ->
              let (_, def) = Hashtbl.find table id in
              let (formals, body, oscheme) =
                match def with
                | { valval = EFun (formals, body) } -> (formals, body, None)
                | { valval = EAnnot (EFun (formals, body), scheme) } ->
                    (formals, body, (Some scheme))
                | { valval = _ } -> assert false in
              (assert (StringMap.mem id usage);
               if ((StringMap.find id usage) = 1) || (is_simple_app body)
               then
                 inline formals (self#exprs locals actuals)
                   (EComment (id, (self#expr locals body))) oscheme
               else (enqueue def; super#eapp locals e actuals))
          | _ -> super#eapp locals e actuals
      end in
    List.iter
      (function | { valpublic = public } as def -> if public then enqueue def)
      defs;
    (let valdefs =
       Misc.qfold
         (fun defs -> fun def -> (o#valdef StringSet.empty def) :: defs) []
         queue in
     Error.logC 1
       (fun f ->
          Printf.fprintf f
            "%d functions before inlining, %d functions after inlining.\n"
            before (List.length valdefs));
     Time.tick "Inlining";
     valdefs)) : valdef list)
let rec inline_structure_item item =
  match item with
  | SIValDefs (true, defs) -> SIValDefs (true, (inline_valdefs defs))
  | SIFunctor (params, s) -> SIFunctor (params, (inline_structure s))
  | SIModuleDef (name, e) -> SIModuleDef (name, (inline_modexpr e))
  | SIInclude e -> SIInclude (inline_modexpr e)
  | SIExcDefs _ | SITypeDefs _ | SIValDefs (false, _) | SIStretch _
    | SIComment _ -> item
and inline_structure s = List.map inline_structure_item s
and inline_modexpr =
  function
  | MVar x -> MVar x
  | MStruct s -> MStruct (inline_structure s)
  | MApp (e1, e2) -> MApp ((inline_modexpr e1), (inline_modexpr e2))
let inline (p : program) =
  (if Settings.code_inlining then inline_structure p else p : program)
[
  structure_item (src/codeInliner.ml[14,1001+0]..src/codeInliner.ml[14,1001+7])
    Tstr_open Fresh
    module_expr (src/codeInliner.ml[14,1001+5]..src/codeInliner.ml[14,1001+7])
      Tmod_ident "Dune__exe!.IL"
  structure_item (src/codeInliner.ml[15,1009+0]..src/codeInliner.ml[15,1009+13])
    Tstr_open Fresh
    module_expr (src/codeInliner.ml[15,1009+5]..src/codeInliner.ml[15,1009+13])
      Tmod_ident "Dune__exe!.CodeBits"
  structure_item (src/codeInliner.ml[25,1448+0]..src/codeInliner.ml[30,1600+3])
    Tstr_class
    [
      class_declaration (src/codeInliner.ml[25,1448+0]..src/codeInliner.ml[30,1600+3])
        pci_virt = Concrete
        pci_params =
          []
        pci_name = "locals"
        pci_expr =
          class_expr (src/codeInliner.ml[25,1448+13]..src/codeInliner.ml[30,1600+3])
            Tcl_fun
            Nolabel
            pattern (src/codeInliner.ml[25,1448+13]..src/codeInliner.ml[25,1448+18])
              Tpat_var "table/474"
            class_expr (src/codeInliner.ml[25,1448+21]..src/codeInliner.ml[30,1600+3])
              Tcl_structure
              class_structure
                pattern (_none_[0,0+-1].._none_[0,0+-1]) ghost
                  Tpat_alias "selfpat-*/476"
                  pattern (src/codeInliner.ml[25,1448+27]..src/codeInliner.ml[25,1448+27]) ghost
                    Tpat_any
                [
                  class_field (src/codeInliner.ml[27,1477+2]..src/codeInliner.ml[28,1530+68])
                    Tcf_method "pvar" Public
                      Concrete Fresh
                      expression (src/codeInliner.ml[27,1477+14]..src/codeInliner.ml[28,1530+68]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/codeInliner.ml[25,1448+27]..src/codeInliner.ml[25,1448+27]) ghost
                              Tpat_alias "self-1/481"
                              pattern (src/codeInliner.ml[25,1448+27]..src/codeInliner.ml[25,1448+27]) ghost
                                Tpat_var "self-*/480"
                            expression (src/codeInliner.ml[27,1477+14]..src/codeInliner.ml[28,1530+68]) ghost
                              extra
                                Texp_poly
                                None
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/codeInliner.ml[27,1477+15]..src/codeInliner.ml[27,1477+21])
                                    extra
                                      Tpat_extra_constraint
                                      core_type (src/codeInliner.ml[27,1477+24]..src/codeInliner.ml[27,1477+35])
                                        Ttyp_constr "Dune__exe!.StringSet.t"
                                        []
                                    Tpat_alias "locals/528"
                                    pattern (src/codeInliner.ml[27,1477+15]..src/codeInliner.ml[27,1477+21])
                                      Tpat_any
                                  expression (src/codeInliner.ml[27,1477+37]..src/codeInliner.ml[28,1530+68]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/codeInliner.ml[27,1477+38]..src/codeInliner.ml[27,1477+40])
                                          extra
                                            Tpat_extra_constraint
                                            core_type (src/codeInliner.ml[27,1477+43]..src/codeInliner.ml[27,1477+49])
                                              Ttyp_constr "string/15!"
                                              []
                                          Tpat_alias "id/529"
                                          pattern (src/codeInliner.ml[27,1477+38]..src/codeInliner.ml[27,1477+40])
                                            Tpat_any
                                        expression (src/codeInliner.ml[28,1530+4]..src/codeInliner.ml[28,1530+68])
                                          Texp_ifthenelse
                                          expression (src/codeInliner.ml[28,1530+7]..src/codeInliner.ml[28,1530+27])
                                            Texp_apply
                                            expression (src/codeInliner.ml[28,1530+7]..src/codeInliner.ml[28,1530+18])
                                              Texp_ident "Stdlib!.Hashtbl.mem"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/codeInliner.ml[28,1530+19]..src/codeInliner.ml[28,1530+24])
                                                  Texp_instvar "table/475"
                                              <arg>
                                                Nolabel
                                                expression (src/codeInliner.ml[28,1530+25]..src/codeInliner.ml[28,1530+27])
                                                  Texp_ident "id/529"
                                            ]
                                          expression (src/codeInliner.ml[28,1530+33]..src/codeInliner.ml[28,1530+56])
                                            Texp_apply
                                            expression (src/codeInliner.ml[28,1530+33]..src/codeInliner.ml[28,1530+46])
                                              Texp_ident "Dune__exe!.StringSet.add"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/codeInliner.ml[28,1530+47]..src/codeInliner.ml[28,1530+49])
                                                  Texp_ident "id/529"
                                              <arg>
                                                Nolabel
                                                expression (src/codeInliner.ml[28,1530+50]..src/codeInliner.ml[28,1530+56])
                                                  Texp_ident "locals/528"
                                            ]
                                          Some
                                            expression (src/codeInliner.ml[28,1530+62]..src/codeInliner.ml[28,1530+68])
                                              Texp_ident "locals/528"
                                    ]
                              ]
                        ]
                ]
    ]
  structure_item (src/codeInliner.ml[34,1633+0]..src/codeInliner.ml[282,8873+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/codeInliner.ml[34,1633+4]..src/codeInliner.ml[34,1633+18])
          Tpat_var "inline_valdefs/656"
        expression (src/codeInliner.ml[34,1633+19]..src/codeInliner.ml[282,8873+9]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/codeInliner.ml[34,1633+20]..src/codeInliner.ml[34,1633+24])
                extra
                  Tpat_extra_constraint
                  core_type (src/codeInliner.ml[34,1633+27]..src/codeInliner.ml[34,1633+38])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/codeInliner.ml[34,1633+27]..src/codeInliner.ml[34,1633+33])
                        Ttyp_constr "Dune__exe!.IL.valdef"
                        []
                    ]
                Tpat_alias "defs/658"
                pattern (src/codeInliner.ml[34,1633+20]..src/codeInliner.ml[34,1633+24])
                  Tpat_any
              expression (src/codeInliner.ml[38,1741+2]..src/codeInliner.ml[282,8873+9])
                extra
                  Texp_constraint
                  core_type (src/codeInliner.ml[34,1633+42]..src/codeInliner.ml[34,1633+53])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/codeInliner.ml[34,1633+42]..src/codeInliner.ml[34,1633+48])
                        Ttyp_constr "Dune__exe!.IL.valdef"
                        []
                    ]
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/codeInliner.ml[38,1741+6]..src/codeInliner.ml[38,1741+19])
                      Tpat_tuple
                      [
                        pattern (src/codeInliner.ml[38,1741+6]..src/codeInliner.ml[38,1741+12])
                          Tpat_var "before/659"
                        pattern (src/codeInliner.ml[38,1741+14]..src/codeInliner.ml[38,1741+19])
                          Tpat_var "table/660"
                      ]
                    expression (src/codeInliner.ml[38,1741+22]..src/codeInliner.ml[38,1741+49])
                      Texp_apply
                      expression (src/codeInliner.ml[38,1741+22]..src/codeInliner.ml[38,1741+44])
                        Texp_ident "Dune__exe!.Traverse.tabulate_defs"
                      [
                        <arg>
                          Nolabel
                          expression (src/codeInliner.ml[38,1741+45]..src/codeInliner.ml[38,1741+49])
                            Texp_ident "defs/658"
                      ]
                ]
                expression (src/codeInliner.ml[44,1978+2]..src/codeInliner.ml[282,8873+9])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (src/codeInliner.ml[44,1978+6]..src/codeInliner.ml[44,1978+11])
                        extra
                          Tpat_extra_constraint
                          core_type (src/codeInliner.ml[44,1978+14]..src/codeInliner.ml[44,1978+28])
                            Ttyp_constr "Stdlib!.Queue.t"
                            [
                              core_type (src/codeInliner.ml[44,1978+14]..src/codeInliner.ml[44,1978+20])
                                Ttyp_constr "Dune__exe!.IL.valdef"
                                []
                            ]
                        Tpat_alias "queue/693"
                        pattern (src/codeInliner.ml[44,1978+6]..src/codeInliner.ml[44,1978+11])
                          Tpat_any
                      expression (src/codeInliner.ml[45,2009+4]..src/codeInliner.ml[45,2009+18])
                        extra
                          Texp_constraint
                          core_type (src/codeInliner.ml[44,1978+14]..src/codeInliner.ml[44,1978+28])
                            Ttyp_constr "Stdlib!.Queue.t"
                            [
                              core_type (src/codeInliner.ml[44,1978+14]..src/codeInliner.ml[44,1978+20])
                                Ttyp_constr "Dune__exe!.IL.valdef"
                                []
                            ]
                        Texp_apply
                        expression (src/codeInliner.ml[45,2009+4]..src/codeInliner.ml[45,2009+16])
                          Texp_ident "Stdlib!.Queue.create"
                        [
                          <arg>
                            Nolabel
                            expression (src/codeInliner.ml[45,2009+16]..src/codeInliner.ml[45,2009+18])
                              Texp_construct "()"
                              []
                        ]
                    <def>
                      pattern (src/codeInliner.ml[46,2028+6]..src/codeInliner.ml[46,2028+11])
                        extra
                          Tpat_extra_constraint
                          core_type (src/codeInliner.ml[46,2028+14]..src/codeInliner.ml[46,2028+33])
                            Ttyp_constr "Stdlib!.ref"
                            [
                              core_type (src/codeInliner.ml[46,2028+14]..src/codeInliner.ml[46,2028+29])
                                Ttyp_constr "Dune__exe!.StringMap.t"
                                [
                                  core_type (src/codeInliner.ml[46,2028+14]..src/codeInliner.ml[46,2028+17])
                                    Ttyp_constr "int/1!"
                                    []
                                ]
                            ]
                        Tpat_alias "usage/742"
                        pattern (src/codeInliner.ml[46,2028+6]..src/codeInliner.ml[46,2028+11])
                          Tpat_any
                      expression (src/codeInliner.ml[47,2064+4]..src/codeInliner.ml[47,2064+23])
                        extra
                          Texp_constraint
                          core_type (src/codeInliner.ml[46,2028+14]..src/codeInliner.ml[46,2028+33])
                            Ttyp_constr "Stdlib!.ref"
                            [
                              core_type (src/codeInliner.ml[46,2028+14]..src/codeInliner.ml[46,2028+29])
                                Ttyp_constr "Dune__exe!.StringMap.t"
                                [
                                  core_type (src/codeInliner.ml[46,2028+14]..src/codeInliner.ml[46,2028+17])
                                    Ttyp_constr "int/1!"
                                    []
                                ]
                            ]
                        Texp_apply
                        expression (src/codeInliner.ml[47,2064+4]..src/codeInliner.ml[47,2064+7])
                          Texp_ident "Stdlib!.ref"
                        [
                          <arg>
                            Nolabel
                            expression (src/codeInliner.ml[47,2064+8]..src/codeInliner.ml[47,2064+23])
                              Texp_ident "Dune__exe!.StringMap.empty"
                        ]
                  ]
                  expression (src/codeInliner.ml[52,2153+2]..src/codeInliner.ml[282,8873+9])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/codeInliner.ml[52,2153+6]..src/codeInliner.ml[52,2153+11])
                          Tpat_var "visit/812"
                        expression (src/codeInliner.ml[52,2153+12]..src/codeInliner.ml[77,2893+10]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/codeInliner.ml[52,2153+12]..src/codeInliner.ml[52,2153+18])
                                Tpat_var "locals/814"
                              expression (src/codeInliner.ml[52,2153+19]..src/codeInliner.ml[77,2893+10]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/codeInliner.ml[52,2153+19]..src/codeInliner.ml[52,2153+21])
                                      Tpat_var "id/815"
                                    expression (src/codeInliner.ml[53,2177+4]..src/codeInliner.ml[77,2893+10])
                                      Texp_ifthenelse
                                      expression (src/codeInliner.ml[53,2177+7]..src/codeInliner.ml[53,2177+30])
                                        Texp_apply
                                        expression (src/codeInliner.ml[53,2177+7]..src/codeInliner.ml[53,2177+20])
                                          Texp_ident "Dune__exe!.StringSet.mem"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/codeInliner.ml[53,2177+21]..src/codeInliner.ml[53,2177+23])
                                              Texp_ident "id/815"
                                          <arg>
                                            Nolabel
                                            expression (src/codeInliner.ml[53,2177+24]..src/codeInliner.ml[53,2177+30])
                                              Texp_ident "locals/814"
                                        ]
                                      expression (src/codeInliner.ml[55,2265+6]..src/codeInliner.ml[55,2265+8])
                                        Texp_construct "()"
                                        []
                                      Some
                                        expression (src/codeInliner.ml[57,2283+6]..src/codeInliner.ml[77,2893+10])
                                          Texp_try
                                          expression (src/codeInliner.ml[58,2293+8]..src/codeInliner.ml[71,2661+48])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/codeInliner.ml[58,2293+12]..src/codeInliner.ml[58,2293+18])
                                                  Tpat_tuple
                                                  [
                                                    pattern (src/codeInliner.ml[58,2293+12]..src/codeInliner.ml[58,2293+13])
                                                      Tpat_any
                                                    pattern (src/codeInliner.ml[58,2293+15]..src/codeInliner.ml[58,2293+18])
                                                      Tpat_var "def/816"
                                                  ]
                                                expression (src/codeInliner.ml[58,2293+21]..src/codeInliner.ml[58,2293+42])
                                                  Texp_apply
                                                  expression (src/codeInliner.ml[58,2293+21]..src/codeInliner.ml[58,2293+33])
                                                    Texp_ident "Stdlib!.Hashtbl.find"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/codeInliner.ml[58,2293+34]..src/codeInliner.ml[58,2293+39])
                                                        Texp_ident "table/660"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/codeInliner.ml[58,2293+40]..src/codeInliner.ml[58,2293+42])
                                                        Texp_ident "id/815"
                                                  ]
                                            ]
                                            expression (src/codeInliner.ml[64,2508+8]..src/codeInliner.ml[71,2661+48])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/codeInliner.ml[64,2508+12]..src/codeInliner.ml[64,2508+13])
                                                    Tpat_var "n/817"
                                                  expression (src/codeInliner.ml[65,2524+10]..src/codeInliner.ml[69,2636+13])
                                                    Texp_try
                                                    expression (src/codeInliner.ml[66,2538+12]..src/codeInliner.ml[66,2538+36])
                                                      Texp_apply
                                                      expression (src/codeInliner.ml[66,2538+12]..src/codeInliner.ml[66,2538+26])
                                                        Texp_ident "Dune__exe!.StringMap.find"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/codeInliner.ml[66,2538+27]..src/codeInliner.ml[66,2538+29])
                                                            Texp_ident "id/815"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/codeInliner.ml[66,2538+30]..src/codeInliner.ml[66,2538+36])
                                                            Texp_apply
                                                            expression (src/codeInliner.ml[66,2538+30]..src/codeInliner.ml[66,2538+31])
                                                              Texp_ident "Stdlib!.!"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/codeInliner.ml[66,2538+31]..src/codeInliner.ml[66,2538+36])
                                                                  Texp_ident "usage/742"
                                                            ]
                                                      ]
                                                    [
                                                      <case>
                                                        pattern (src/codeInliner.ml[67,2575+15]..src/codeInliner.ml[67,2575+24])
                                                          Tpat_construct "Not_found"
                                                          []
                                                          None
                                                        expression (src/codeInliner.ml[68,2603+12]..src/codeInliner.ml[69,2636+13])
                                                          Texp_sequence
                                                          expression (src/codeInliner.ml[68,2603+12]..src/codeInliner.ml[68,2603+31])
                                                            Texp_apply
                                                            expression (src/codeInliner.ml[68,2603+12]..src/codeInliner.ml[68,2603+21])
                                                              Texp_ident "Stdlib!.Queue.add"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/codeInliner.ml[68,2603+22]..src/codeInliner.ml[68,2603+25])
                                                                  Texp_ident "def/816"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/codeInliner.ml[68,2603+26]..src/codeInliner.ml[68,2603+31])
                                                                  Texp_ident "queue/693"
                                                            ]
                                                          expression (src/codeInliner.ml[69,2636+12]..src/codeInliner.ml[69,2636+13])
                                                            Texp_constant Const_int 0
                                                    ]
                                              ]
                                              expression (src/codeInliner.ml[71,2661+8]..src/codeInliner.ml[71,2661+48])
                                                Texp_apply
                                                expression (src/codeInliner.ml[71,2661+14]..src/codeInliner.ml[71,2661+16])
                                                  Texp_ident "Stdlib!.:="
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/codeInliner.ml[71,2661+8]..src/codeInliner.ml[71,2661+13])
                                                      Texp_ident "usage/742"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/codeInliner.ml[71,2661+17]..src/codeInliner.ml[71,2661+48])
                                                      Texp_apply
                                                      expression (src/codeInliner.ml[71,2661+17]..src/codeInliner.ml[71,2661+30])
                                                        Texp_ident "Dune__exe!.StringMap.add"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/codeInliner.ml[71,2661+31]..src/codeInliner.ml[71,2661+33])
                                                            Texp_ident "id/815"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/codeInliner.ml[71,2661+34]..src/codeInliner.ml[71,2661+41])
                                                            Texp_apply
                                                            expression (src/codeInliner.ml[71,2661+37]..src/codeInliner.ml[71,2661+38])
                                                              Texp_ident "Stdlib!.+"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/codeInliner.ml[71,2661+35]..src/codeInliner.ml[71,2661+36])
                                                                  Texp_ident "n/817"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/codeInliner.ml[71,2661+39]..src/codeInliner.ml[71,2661+40])
                                                                  Texp_constant Const_int 1
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/codeInliner.ml[71,2661+42]..src/codeInliner.ml[71,2661+48])
                                                            Texp_apply
                                                            expression (src/codeInliner.ml[71,2661+42]..src/codeInliner.ml[71,2661+43])
                                                              Texp_ident "Stdlib!.!"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/codeInliner.ml[71,2661+43]..src/codeInliner.ml[71,2661+48])
                                                                  Texp_ident "usage/742"
                                                            ]
                                                      ]
                                                ]
                                          [
                                            <case>
                                              pattern (src/codeInliner.ml[73,2711+11]..src/codeInliner.ml[73,2711+20])
                                                Tpat_construct "Not_found"
                                                []
                                                None
                                              expression (src/codeInliner.ml[77,2893+8]..src/codeInliner.ml[77,2893+10])
                                                Texp_construct "()"
                                                []
                                          ]
                                ]
                          ]
                    ]
                    expression (src/codeInliner.ml[82,2975+2]..src/codeInliner.ml[282,8873+9])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/codeInliner.ml[82,2975+6]..src/codeInliner.ml[82,2975+7])
                            Tpat_var "o/818"
                          expression (src/codeInliner.ml[83,2985+4]..src/codeInliner.ml[88,3139+7])
                            Texp_object                            class_structure
                              pattern (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                Tpat_alias "selfpat-*/819"
                                pattern (src/codeInliner.ml[83,2985+10]..src/codeInliner.ml[83,2985+10]) ghost
                                  Tpat_any
                              [
                                class_field (src/codeInliner.ml[84,2996+8]..src/codeInliner.ml[84,2996+51])
                                  Tcf_inherit Fresh
                                    class_expr (src/codeInliner.ml[84,2996+16]..src/codeInliner.ml[84,2996+51])
                                      class_expr (src/codeInliner.ml[84,2996+16]..src/codeInliner.ml[84,2996+51])
                                        Tcl_ident "Dune__exe!.Traverse.fold"
                                        [
                                          core_type (src/codeInliner.ml[84,2996+18]..src/codeInliner.ml[84,2996+29])
                                            Ttyp_constr "Dune__exe!.StringSet.t"
                                            []
                                          core_type (src/codeInliner.ml[84,2996+31]..src/codeInliner.ml[84,2996+35])
                                            Ttyp_constr "unit/6!"
                                            []
                                        ]
                                    None
                                class_field (src/codeInliner.ml[85,3048+8]..src/codeInliner.ml[85,3048+28])
                                  Tcf_inherit Fresh
                                    class_expr (src/codeInliner.ml[85,3048+16]..src/codeInliner.ml[85,3048+28])
                                      Tcl_apply
                                      class_expr (src/codeInliner.ml[85,3048+16]..src/codeInliner.ml[85,3048+22])
                                        class_expr (src/codeInliner.ml[85,3048+16]..src/codeInliner.ml[85,3048+22])
                                          Tcl_ident "locals/473"
                                          []
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/codeInliner.ml[85,3048+23]..src/codeInliner.ml[85,3048+28])
                                            Texp_ident "table/660"
                                      ]
                                    None
                                class_field (src/codeInliner.ml[86,3077+8]..src/codeInliner.ml[87,3113+25])
                                  Tcf_method "evar" Public
                                    Concrete Override
                                    expression (src/codeInliner.ml[86,3077+21]..src/codeInliner.ml[87,3113+25]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (src/codeInliner.ml[83,2985+10]..src/codeInliner.ml[83,2985+10]) ghost
                                            Tpat_alias "self-2/903"
                                            pattern (src/codeInliner.ml[83,2985+10]..src/codeInliner.ml[83,2985+10]) ghost
                                              Tpat_var "self-*/902"
                                          expression (src/codeInliner.ml[86,3077+21]..src/codeInliner.ml[87,3113+25]) ghost
                                            extra
                                              Texp_poly
                                              None
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (src/codeInliner.ml[86,3077+21]..src/codeInliner.ml[86,3077+27])
                                                  Tpat_var "locals/904"
                                                expression (src/codeInliner.ml[86,3077+28]..src/codeInliner.ml[87,3113+25]) ghost
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (src/codeInliner.ml[86,3077+28]..src/codeInliner.ml[86,3077+30])
                                                        Tpat_construct "()"
                                                        []
                                                        None
                                                      expression (src/codeInliner.ml[86,3077+31]..src/codeInliner.ml[87,3113+25]) ghost
                                                        Texp_function
                                                        Nolabel
                                                        [
                                                          <case>
                                                            pattern (src/codeInliner.ml[86,3077+31]..src/codeInliner.ml[86,3077+33])
                                                              Tpat_var "id/905"
                                                            expression (src/codeInliner.ml[87,3113+10]..src/codeInliner.ml[87,3113+25])
                                                              Texp_apply
                                                              expression (src/codeInliner.ml[87,3113+10]..src/codeInliner.ml[87,3113+15])
                                                                Texp_ident "visit/812"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/codeInliner.ml[87,3113+16]..src/codeInliner.ml[87,3113+22])
                                                                    Texp_ident "locals/904"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/codeInliner.ml[87,3113+23]..src/codeInliner.ml[87,3113+25])
                                                                    Texp_ident "id/905"
                                                              ]
                                                        ]
                                                  ]
                                            ]
                                      ]
                              ]
                      ]
                      expression (src/codeInliner.ml[95,3312+2]..src/codeInliner.ml[282,8873+9])
                        Texp_sequence
                        expression (src/codeInliner.ml[95,3312+2]..src/codeInliner.ml[98,3426+8])
                          Texp_apply
                          expression (src/codeInliner.ml[95,3312+2]..src/codeInliner.ml[95,3312+11])
                            Texp_ident "Stdlib!.List.iter"
                          [
                            <arg>
                              Nolabel
                              expression (src/codeInliner.ml[95,3312+12]..src/codeInliner.ml[98,3426+3])
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/codeInliner.ml[95,3312+17]..src/codeInliner.ml[95,3312+51])
                                      Tpat_record
                                      [
                                        "valpublic"
                                          pattern (src/codeInliner.ml[95,3312+31]..src/codeInliner.ml[95,3312+37])
                                            Tpat_var "public/973"
                                        "valpat"
                                          pattern (src/codeInliner.ml[95,3312+48]..src/codeInliner.ml[95,3312+49])
                                            Tpat_var "p/974"
                                      ]
                                    expression (src/codeInliner.ml[96,3367+4]..src/codeInliner.ml[97,3386+39])
                                      Texp_ifthenelse
                                      expression (src/codeInliner.ml[96,3367+7]..src/codeInliner.ml[96,3367+13])
                                        Texp_ident "public/973"
                                      expression (src/codeInliner.ml[97,3386+6]..src/codeInliner.ml[97,3386+39])
                                        Texp_apply
                                        expression (src/codeInliner.ml[97,3386+6]..src/codeInliner.ml[97,3386+11])
                                          Texp_ident "visit/812"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/codeInliner.ml[97,3386+12]..src/codeInliner.ml[97,3386+27])
                                              Texp_ident "Dune__exe!.StringSet.empty"
                                          <arg>
                                            Nolabel
                                            expression (src/codeInliner.ml[97,3386+28]..src/codeInliner.ml[97,3386+39])
                                              Texp_apply
                                              expression (src/codeInliner.ml[97,3386+29]..src/codeInliner.ml[97,3386+36])
                                                Texp_ident "Dune__exe!.CodeBits.pat2var"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/codeInliner.ml[97,3386+37]..src/codeInliner.ml[97,3386+38])
                                                    Texp_ident "p/974"
                                              ]
                                        ]
                                      None
                                ]
                            <arg>
                              Nolabel
                              expression (src/codeInliner.ml[98,3426+4]..src/codeInliner.ml[98,3426+8])
                                Texp_ident "defs/658"
                          ]
                        expression (src/codeInliner.ml[99,3436+2]..src/codeInliner.ml[282,8873+9])
                          Texp_sequence
                          expression (src/codeInliner.ml[99,3436+2]..src/codeInliner.ml[99,3436+48])
                            Texp_apply
                            expression (src/codeInliner.ml[99,3436+2]..src/codeInliner.ml[99,3436+12])
                              Texp_ident "Dune__exe!.Misc.qfold"
                            [
                              <arg>
                                Nolabel
                                expression (src/codeInliner.ml[99,3436+13]..src/codeInliner.ml[99,3436+39])
                                  Texp_apply
                                  expression (src/codeInliner.ml[99,3436+14]..src/codeInliner.ml[99,3436+22])
                                    Texp_send "valdef"
                                    expression (src/codeInliner.ml[99,3436+14]..src/codeInliner.ml[99,3436+15])
                                      Texp_ident "o/818"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/codeInliner.ml[99,3436+23]..src/codeInliner.ml[99,3436+38])
                                        Texp_ident "Dune__exe!.StringSet.empty"
                                  ]
                              <arg>
                                Nolabel
                                expression (src/codeInliner.ml[99,3436+40]..src/codeInliner.ml[99,3436+42])
                                  Texp_construct "()"
                                  []
                              <arg>
                                Nolabel
                                expression (src/codeInliner.ml[99,3436+43]..src/codeInliner.ml[99,3436+48])
                                  Texp_ident "queue/693"
                            ]
                          expression (src/codeInliner.ml[100,3486+2]..src/codeInliner.ml[282,8873+9])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/codeInliner.ml[100,3486+6]..src/codeInliner.ml[100,3486+11])
                                  Tpat_var "usage/1039"
                                expression (src/codeInliner.ml[100,3486+14]..src/codeInliner.ml[100,3486+20])
                                  Texp_apply
                                  expression (src/codeInliner.ml[100,3486+14]..src/codeInliner.ml[100,3486+15])
                                    Texp_ident "Stdlib!.!"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/codeInliner.ml[100,3486+15]..src/codeInliner.ml[100,3486+20])
                                        Texp_ident "usage/742"
                                  ]
                            ]
                            expression (src/codeInliner.ml[107,3728+2]..src/codeInliner.ml[282,8873+9])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/codeInliner.ml[107,3728+6]..src/codeInliner.ml[107,3728+11])
                                    extra
                                      Tpat_extra_constraint
                                      core_type (src/codeInliner.ml[107,3728+14]..src/codeInliner.ml[107,3728+28])
                                        Ttyp_constr "Stdlib!.Queue.t"
                                        [
                                          core_type (src/codeInliner.ml[107,3728+14]..src/codeInliner.ml[107,3728+20])
                                            Ttyp_constr "Dune__exe!.IL.valdef"
                                            []
                                        ]
                                    Tpat_alias "queue/1040"
                                    pattern (src/codeInliner.ml[107,3728+6]..src/codeInliner.ml[107,3728+11])
                                      Tpat_any
                                  expression (src/codeInliner.ml[108,3759+4]..src/codeInliner.ml[108,3759+18])
                                    extra
                                      Texp_constraint
                                      core_type (src/codeInliner.ml[107,3728+14]..src/codeInliner.ml[107,3728+28])
                                        Ttyp_constr "Stdlib!.Queue.t"
                                        [
                                          core_type (src/codeInliner.ml[107,3728+14]..src/codeInliner.ml[107,3728+20])
                                            Ttyp_constr "Dune__exe!.IL.valdef"
                                            []
                                        ]
                                    Texp_apply
                                    expression (src/codeInliner.ml[108,3759+4]..src/codeInliner.ml[108,3759+16])
                                      Texp_ident "Stdlib!.Queue.create"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/codeInliner.ml[108,3759+16]..src/codeInliner.ml[108,3759+18])
                                          Texp_construct "()"
                                          []
                                    ]
                                <def>
                                  pattern (src/codeInliner.ml[109,3778+6]..src/codeInliner.ml[109,3778+13])
                                    Tpat_var "emitted/1041"
                                  expression (src/codeInliner.ml[110,3794+4]..src/codeInliner.ml[110,3794+23])
                                    Texp_apply
                                    expression (src/codeInliner.ml[110,3794+4]..src/codeInliner.ml[110,3794+7])
                                      Texp_ident "Stdlib!.ref"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/codeInliner.ml[110,3794+8]..src/codeInliner.ml[110,3794+23])
                                          Texp_ident "Dune__exe!.StringSet.empty"
                                    ]
                              ]
                              expression (src/codeInliner.ml[113,3824+2]..src/codeInliner.ml[282,8873+9])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (src/codeInliner.ml[113,3824+6]..src/codeInliner.ml[113,3824+13])
                                      Tpat_var "enqueue/1042"
                                    expression (src/codeInliner.ml[113,3824+14]..src/codeInliner.ml[118,3999+7]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (src/codeInliner.ml[113,3824+14]..src/codeInliner.ml[113,3824+17])
                                            Tpat_var "def/1044"
                                          expression (src/codeInliner.ml[114,3844+4]..src/codeInliner.ml[118,3999+7])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/codeInliner.ml[114,3844+8]..src/codeInliner.ml[114,3844+10])
                                                  Tpat_var "id/1045"
                                                expression (src/codeInliner.ml[114,3844+13]..src/codeInliner.ml[114,3844+31])
                                                  Texp_apply
                                                  expression (src/codeInliner.ml[114,3844+13]..src/codeInliner.ml[114,3844+20])
                                                    Texp_ident "Dune__exe!.CodeBits.pat2var"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/codeInliner.ml[114,3844+21]..src/codeInliner.ml[114,3844+31])
                                                        Texp_field
                                                        expression (src/codeInliner.ml[114,3844+21]..src/codeInliner.ml[114,3844+24])
                                                          Texp_ident "def/1044"
                                                        "valpat"
                                                  ]
                                            ]
                                            expression (src/codeInliner.ml[115,3879+4]..src/codeInliner.ml[118,3999+7])
                                              Texp_ifthenelse
                                              expression (src/codeInliner.ml[115,3879+7]..src/codeInliner.ml[115,3879+38])
                                                Texp_apply
                                                expression (src/codeInliner.ml[115,3879+7]..src/codeInliner.ml[115,3879+10])
                                                  Texp_ident "Stdlib!.not"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/codeInliner.ml[115,3879+11]..src/codeInliner.ml[115,3879+38])
                                                      Texp_apply
                                                      expression (src/codeInliner.ml[115,3879+12]..src/codeInliner.ml[115,3879+25])
                                                        Texp_ident "Dune__exe!.StringSet.mem"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/codeInliner.ml[115,3879+26]..src/codeInliner.ml[115,3879+28])
                                                            Texp_ident "id/1045"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/codeInliner.ml[115,3879+29]..src/codeInliner.ml[115,3879+37])
                                                            Texp_apply
                                                            expression (src/codeInliner.ml[115,3879+29]..src/codeInliner.ml[115,3879+30])
                                                              Texp_ident "Stdlib!.!"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/codeInliner.ml[115,3879+30]..src/codeInliner.ml[115,3879+37])
                                                                  Texp_ident "emitted/1041"
                                                            ]
                                                      ]
                                                ]
                                              expression (src/codeInliner.ml[115,3879+44]..src/codeInliner.ml[118,3999+7])
                                                Texp_sequence
                                                expression (src/codeInliner.ml[116,3929+6]..src/codeInliner.ml[116,3929+42])
                                                  Texp_apply
                                                  expression (src/codeInliner.ml[116,3929+14]..src/codeInliner.ml[116,3929+16])
                                                    Texp_ident "Stdlib!.:="
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/codeInliner.ml[116,3929+6]..src/codeInliner.ml[116,3929+13])
                                                        Texp_ident "emitted/1041"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/codeInliner.ml[116,3929+17]..src/codeInliner.ml[116,3929+42])
                                                        Texp_apply
                                                        expression (src/codeInliner.ml[116,3929+17]..src/codeInliner.ml[116,3929+30])
                                                          Texp_ident "Dune__exe!.StringSet.add"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/codeInliner.ml[116,3929+31]..src/codeInliner.ml[116,3929+33])
                                                              Texp_ident "id/1045"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/codeInliner.ml[116,3929+34]..src/codeInliner.ml[116,3929+42])
                                                              Texp_apply
                                                              expression (src/codeInliner.ml[116,3929+34]..src/codeInliner.ml[116,3929+35])
                                                                Texp_ident "Stdlib!.!"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/codeInliner.ml[116,3929+35]..src/codeInliner.ml[116,3929+42])
                                                                    Texp_ident "emitted/1041"
                                                              ]
                                                        ]
                                                  ]
                                                expression (src/codeInliner.ml[117,3973+6]..src/codeInliner.ml[117,3973+25])
                                                  Texp_apply
                                                  expression (src/codeInliner.ml[117,3973+6]..src/codeInliner.ml[117,3973+15])
                                                    Texp_ident "Stdlib!.Queue.add"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/codeInliner.ml[117,3973+16]..src/codeInliner.ml[117,3973+19])
                                                        Texp_ident "def/1044"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/codeInliner.ml[117,3973+20]..src/codeInliner.ml[117,3973+25])
                                                        Texp_ident "queue/1040"
                                                  ]
                                              None
                                      ]
                                ]
                                expression (src/codeInliner.ml[124,4154+2]..src/codeInliner.ml[282,8873+9])
                                  Texp_let Rec
                                  [
                                    <def>
                                      pattern (src/codeInliner.ml[124,4154+10]..src/codeInliner.ml[124,4154+23])
                                        Tpat_var "is_simple_arg/1046"
                                      expression (src/codeInliner.ml[124,4154+26]..src/codeInliner.ml[132,4323+13])
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/codeInliner.ml[125,4189+6]..src/codeInliner.ml[127,4222+31])
                                              Tpat_or
                                              pattern (src/codeInliner.ml[125,4189+6]..src/codeInliner.ml[126,4202+19])
                                                Tpat_or
                                                pattern (src/codeInliner.ml[125,4189+6]..src/codeInliner.ml[125,4189+12])
                                                  Tpat_construct "EVar"
                                                  [
                                                    pattern (src/codeInliner.ml[125,4189+11]..src/codeInliner.ml[125,4189+12])
                                                      Tpat_any
                                                  ]
                                                  None
                                                pattern (src/codeInliner.ml[126,4202+6]..src/codeInliner.ml[126,4202+19])
                                                  Tpat_construct "EData"
                                                  [
                                                    pattern (src/codeInliner.ml[126,4202+13]..src/codeInliner.ml[126,4202+14])
                                                      Tpat_any
                                                    pattern (src/codeInliner.ml[126,4202+16]..src/codeInliner.ml[126,4202+18])
                                                      Tpat_construct "[]"
                                                      []
                                                      None
                                                  ]
                                                  None
                                              pattern (src/codeInliner.ml[127,4222+6]..src/codeInliner.ml[127,4222+31])
                                                Tpat_construct "ERecordAccess"
                                                [
                                                  pattern (src/codeInliner.ml[127,4222+21]..src/codeInliner.ml[127,4222+27])
                                                    Tpat_construct "EVar"
                                                    [
                                                      pattern (src/codeInliner.ml[127,4222+26]..src/codeInliner.ml[127,4222+27])
                                                        Tpat_any
                                                    ]
                                                    None
                                                  pattern (src/codeInliner.ml[127,4222+29]..src/codeInliner.ml[127,4222+30])
                                                    Tpat_any
                                                ]
                                                None
                                            expression (src/codeInliner.ml[128,4257+8]..src/codeInliner.ml[128,4257+12])
                                              Texp_construct "true"
                                              []
                                          <case>
                                            pattern (src/codeInliner.ml[129,4270+6]..src/codeInliner.ml[129,4270+14])
                                              Tpat_construct "EMagic"
                                              [
                                                pattern (src/codeInliner.ml[129,4270+13]..src/codeInliner.ml[129,4270+14])
                                                  Tpat_var "e/1047"
                                              ]
                                              None
                                            expression (src/codeInliner.ml[130,4288+8]..src/codeInliner.ml[130,4288+23])
                                              Texp_apply
                                              expression (src/codeInliner.ml[130,4288+8]..src/codeInliner.ml[130,4288+21])
                                                Texp_ident "is_simple_arg/1046"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/codeInliner.ml[130,4288+22]..src/codeInliner.ml[130,4288+23])
                                                    Texp_ident "e/1047"
                                              ]
                                          <case>
                                            pattern (src/codeInliner.ml[131,4312+6]..src/codeInliner.ml[131,4312+7])
                                              Tpat_any
                                            expression (src/codeInliner.ml[132,4323+8]..src/codeInliner.ml[132,4323+13])
                                              Texp_construct "false"
                                              []
                                        ]
                                  ]
                                  expression (src/codeInliner.ml[135,4343+2]..src/codeInliner.ml[282,8873+9])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/codeInliner.ml[135,4343+6]..src/codeInliner.ml[135,4343+19])
                                          Tpat_var "is_simple_app/1049"
                                        expression (src/codeInliner.ml[135,4343+22]..src/codeInliner.ml[139,4460+13])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/codeInliner.ml[136,4374+6]..src/codeInliner.ml[136,4374+28])
                                                Tpat_construct "EApp"
                                                [
                                                  pattern (src/codeInliner.ml[136,4374+12]..src/codeInliner.ml[136,4374+18])
                                                    Tpat_construct "EVar"
                                                    [
                                                      pattern (src/codeInliner.ml[136,4374+17]..src/codeInliner.ml[136,4374+18])
                                                        Tpat_any
                                                    ]
                                                    None
                                                  pattern (src/codeInliner.ml[136,4374+20]..src/codeInliner.ml[136,4374+27])
                                                    Tpat_var "actuals/1051"
                                                ]
                                                None
                                              expression (src/codeInliner.ml[137,4406+8]..src/codeInliner.ml[137,4406+42])
                                                Texp_apply
                                                expression (src/codeInliner.ml[137,4406+8]..src/codeInliner.ml[137,4406+20])
                                                  Texp_ident "Stdlib!.List.for_all"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/codeInliner.ml[137,4406+21]..src/codeInliner.ml[137,4406+34])
                                                      Texp_ident "is_simple_arg/1046"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/codeInliner.ml[137,4406+35]..src/codeInliner.ml[137,4406+42])
                                                      Texp_ident "actuals/1051"
                                                ]
                                            <case>
                                              pattern (src/codeInliner.ml[138,4449+6]..src/codeInliner.ml[138,4449+7])
                                                Tpat_any
                                              expression (src/codeInliner.ml[139,4460+8]..src/codeInliner.ml[139,4460+13])
                                                Texp_construct "false"
                                                []
                                          ]
                                    ]
                                    expression (src/codeInliner.ml[144,4537+2]..src/codeInliner.ml[282,8873+9])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/codeInliner.ml[144,4537+6]..src/codeInliner.ml[144,4537+14])
                                            Tpat_var "instance/1053"
                                          expression (src/codeInliner.ml[145,4554+4]..src/codeInliner.ml[169,5209+21])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/codeInliner.ml[145,4554+8]..src/codeInliner.ml[145,4554+13])
                                                  Tpat_var "count/1054"
                                                expression (src/codeInliner.ml[145,4554+16]..src/codeInliner.ml[145,4554+21])
                                                  Texp_apply
                                                  expression (src/codeInliner.ml[145,4554+16]..src/codeInliner.ml[145,4554+19])
                                                    Texp_ident "Stdlib!.ref"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/codeInliner.ml[145,4554+20]..src/codeInliner.ml[145,4554+21])
                                                        Texp_constant Const_int 0
                                                  ]
                                            ]
                                            expression (src/codeInliner.ml[146,4579+4]..src/codeInliner.ml[169,5209+21])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/codeInliner.ml[146,4579+8]..src/codeInliner.ml[146,4579+13])
                                                    Tpat_var "fresh/1055"
                                                  expression (src/codeInliner.ml[146,4579+14]..src/codeInliner.ml[148,4616+43]) ghost
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (src/codeInliner.ml[146,4579+14]..src/codeInliner.ml[146,4579+16])
                                                          Tpat_var "tv/1057"
                                                        expression (src/codeInliner.ml[147,4598+6]..src/codeInliner.ml[148,4616+43])
                                                          Texp_sequence
                                                          expression (src/codeInliner.ml[147,4598+6]..src/codeInliner.ml[147,4598+16])
                                                            Texp_apply
                                                            expression (src/codeInliner.ml[147,4598+6]..src/codeInliner.ml[147,4598+10])
                                                              Texp_ident "Stdlib!.incr"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/codeInliner.ml[147,4598+11]..src/codeInliner.ml[147,4598+16])
                                                                  Texp_ident "count/1054"
                                                            ]
                                                          expression (src/codeInliner.ml[148,4616+6]..src/codeInliner.ml[148,4616+43])
                                                            Texp_tuple
                                                            [
                                                              expression (src/codeInliner.ml[148,4616+6]..src/codeInliner.ml[148,4616+8])
                                                                Texp_ident "tv/1057"
                                                              expression (src/codeInliner.ml[148,4616+10]..src/codeInliner.ml[148,4616+43])
                                                                Texp_apply
                                                                expression (src/codeInliner.ml[148,4616+10]..src/codeInliner.ml[148,4616+24])
                                                                  Texp_ident "Stdlib!.Printf.sprintf"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/codeInliner.ml[148,4616+25]..src/codeInliner.ml[148,4616+36])
                                                                      Texp_construct "CamlinternalFormatBasics.Format"
                                                                      [
                                                                        expression (src/codeInliner.ml[148,4616+25]..src/codeInliner.ml[148,4616+36]) ghost
                                                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                          [
                                                                            expression (src/codeInliner.ml[148,4616+25]..src/codeInliner.ml[148,4616+36]) ghost
                                                                              Texp_constant Const_string("freshtv",(src/codeInliner.ml[148,4616+25]..src/codeInliner.ml[148,4616+36]) ghost,None)
                                                                            expression (src/codeInliner.ml[148,4616+25]..src/codeInliner.ml[148,4616+36]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.Int"
                                                                              [
                                                                                expression (src/codeInliner.ml[148,4616+25]..src/codeInliner.ml[148,4616+36]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.Int_d"
                                                                                  []
                                                                                expression (src/codeInliner.ml[148,4616+25]..src/codeInliner.ml[148,4616+36]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                  []
                                                                                expression (src/codeInliner.ml[148,4616+25]..src/codeInliner.ml[148,4616+36]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.No_precision"
                                                                                  []
                                                                                expression (src/codeInliner.ml[148,4616+25]..src/codeInliner.ml[148,4616+36]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                  []
                                                                              ]
                                                                          ]
                                                                        expression (src/codeInliner.ml[148,4616+25]..src/codeInliner.ml[148,4616+36]) ghost
                                                                          Texp_constant Const_string("freshtv%d",(src/codeInliner.ml[148,4616+25]..src/codeInliner.ml[148,4616+36]) ghost,None)
                                                                      ]
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/codeInliner.ml[148,4616+37]..src/codeInliner.ml[148,4616+43])
                                                                      Texp_apply
                                                                      expression (src/codeInliner.ml[148,4616+37]..src/codeInliner.ml[148,4616+38])
                                                                        Texp_ident "Stdlib!.!"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/codeInliner.ml[148,4616+38]..src/codeInliner.ml[148,4616+43])
                                                                            Texp_ident "count/1054"
                                                                      ]
                                                                ]
                                                            ]
                                                    ]
                                              ]
                                              expression (src/codeInliner.ml[150,4667+4]..src/codeInliner.ml[169,5209+21])
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (src/codeInliner.ml[150,4667+8]..src/codeInliner.ml[150,4667+14])
                                                      Tpat_var "scheme/1094"
                                                    expression (src/codeInliner.ml[151,4685+6]..src/codeInliner.ml[169,5209+21])
                                                      Texp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (src/codeInliner.ml[151,4685+10]..src/codeInliner.ml[151,4685+17])
                                                            Tpat_var "mapping/1095"
                                                          expression (src/codeInliner.ml[151,4685+20]..src/codeInliner.ml[151,4685+53])
                                                            Texp_apply
                                                            expression (src/codeInliner.ml[151,4685+20]..src/codeInliner.ml[151,4685+28])
                                                              Texp_ident "Stdlib!.List.map"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/codeInliner.ml[151,4685+29]..src/codeInliner.ml[151,4685+34])
                                                                  Texp_ident "fresh/1055"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/codeInliner.ml[151,4685+35]..src/codeInliner.ml[151,4685+53])
                                                                  Texp_field
                                                                  expression (src/codeInliner.ml[151,4685+35]..src/codeInliner.ml[151,4685+41])
                                                                    Texp_ident "scheme/1094"
                                                                  "quantifiers"
                                                            ]
                                                      ]
                                                      expression (src/codeInliner.ml[152,4742+6]..src/codeInliner.ml[169,5209+21])
                                                        Texp_let Rec
                                                        [
                                                          <def>
                                                            pattern (src/codeInliner.ml[152,4742+14]..src/codeInliner.ml[152,4742+17])
                                                              Tpat_var "sub/1096"
                                                            expression (src/codeInliner.ml[152,4742+18]..src/codeInliner.ml[167,5158+41]) ghost
                                                              Texp_function
                                                              Nolabel
                                                              [
                                                                <case>
                                                                  pattern (src/codeInliner.ml[152,4742+18]..src/codeInliner.ml[152,4742+21])
                                                                    Tpat_var "typ/1097"
                                                                  expression (src/codeInliner.ml[153,4766+8]..src/codeInliner.ml[167,5158+41])
                                                                    Texp_match
                                                                    expression (src/codeInliner.ml[153,4766+14]..src/codeInliner.ml[153,4766+17])
                                                                      Texp_ident "typ/1097"
                                                                    [
                                                                      <case>
                                                                        pattern (src/codeInliner.ml[154,4789+10]..src/codeInliner.ml[154,4789+22])
                                                                          Tpat_value
                                                                          pattern (src/codeInliner.ml[154,4789+10]..src/codeInliner.ml[154,4789+22])
                                                                            Tpat_construct "TypTextual"
                                                                            [
                                                                              pattern (src/codeInliner.ml[154,4789+21]..src/codeInliner.ml[154,4789+22])
                                                                                Tpat_any
                                                                            ]
                                                                            None
                                                                        expression (src/codeInliner.ml[155,4815+12]..src/codeInliner.ml[155,4815+15])
                                                                          Texp_ident "typ/1097"
                                                                      <case>
                                                                        pattern (src/codeInliner.ml[156,4831+10]..src/codeInliner.ml[156,4831+18])
                                                                          Tpat_value
                                                                          pattern (src/codeInliner.ml[156,4831+10]..src/codeInliner.ml[156,4831+18])
                                                                            Tpat_construct "TypVar"
                                                                            [
                                                                              pattern (src/codeInliner.ml[156,4831+17]..src/codeInliner.ml[156,4831+18])
                                                                                Tpat_var "v/1098"
                                                                            ]
                                                                            None
                                                                        expression (src/codeInliner.ml[157,4853+12]..src/codeInliner.ml[161,4967+15])
                                                                          Texp_try
                                                                          expression (src/codeInliner.ml[158,4875+14]..src/codeInliner.ml[158,4875+43])
                                                                            Texp_construct "TypVar"
                                                                            [
                                                                              expression (src/codeInliner.ml[158,4875+21]..src/codeInliner.ml[158,4875+43])
                                                                                Texp_apply
                                                                                expression (src/codeInliner.ml[158,4875+22]..src/codeInliner.ml[158,4875+32])
                                                                                  Texp_ident "Stdlib!.List.assoc"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/codeInliner.ml[158,4875+33]..src/codeInliner.ml[158,4875+34])
                                                                                      Texp_ident "v/1098"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/codeInliner.ml[158,4875+35]..src/codeInliner.ml[158,4875+42])
                                                                                      Texp_ident "mapping/1095"
                                                                                ]
                                                                            ]
                                                                          [
                                                                            <case>
                                                                              pattern (src/codeInliner.ml[159,4919+17]..src/codeInliner.ml[159,4919+26])
                                                                                Tpat_construct "Not_found"
                                                                                []
                                                                                None
                                                                              expression (src/codeInliner.ml[160,4949+14]..src/codeInliner.ml[160,4949+17])
                                                                                Texp_ident "typ/1097"
                                                                          ]
                                                                      <case>
                                                                        pattern (src/codeInliner.ml[162,4983+10]..src/codeInliner.ml[162,4983+26])
                                                                          Tpat_value
                                                                          pattern (src/codeInliner.ml[162,4983+10]..src/codeInliner.ml[162,4983+26])
                                                                            Tpat_construct "TypApp"
                                                                            [
                                                                              pattern (src/codeInliner.ml[162,4983+18]..src/codeInliner.ml[162,4983+19])
                                                                                Tpat_var "f/1099"
                                                                              pattern (src/codeInliner.ml[162,4983+21]..src/codeInliner.ml[162,4983+25])
                                                                                Tpat_var "typs/1100"
                                                                            ]
                                                                            None
                                                                        expression (src/codeInliner.ml[163,5013+12]..src/codeInliner.ml[163,5013+41])
                                                                          Texp_construct "TypApp"
                                                                          [
                                                                            expression (src/codeInliner.ml[163,5013+20]..src/codeInliner.ml[163,5013+21])
                                                                              Texp_ident "f/1099"
                                                                            expression (src/codeInliner.ml[163,5013+23]..src/codeInliner.ml[163,5013+40])
                                                                              Texp_apply
                                                                              expression (src/codeInliner.ml[163,5013+23]..src/codeInliner.ml[163,5013+31])
                                                                                Texp_ident "Stdlib!.List.map"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/codeInliner.ml[163,5013+32]..src/codeInliner.ml[163,5013+35])
                                                                                    Texp_ident "sub/1096"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/codeInliner.ml[163,5013+36]..src/codeInliner.ml[163,5013+40])
                                                                                    Texp_ident "typs/1100"
                                                                              ]
                                                                          ]
                                                                      <case>
                                                                        pattern (src/codeInliner.ml[164,5055+10]..src/codeInliner.ml[164,5055+23])
                                                                          Tpat_value
                                                                          pattern (src/codeInliner.ml[164,5055+10]..src/codeInliner.ml[164,5055+23])
                                                                            Tpat_construct "TypTuple"
                                                                            [
                                                                              pattern (src/codeInliner.ml[164,5055+19]..src/codeInliner.ml[164,5055+23])
                                                                                Tpat_var "typs/1101"
                                                                            ]
                                                                            None
                                                                        expression (src/codeInliner.ml[165,5082+12]..src/codeInliner.ml[165,5082+40])
                                                                          Texp_construct "TypTuple"
                                                                          [
                                                                            expression (src/codeInliner.ml[165,5082+21]..src/codeInliner.ml[165,5082+40])
                                                                              Texp_apply
                                                                              expression (src/codeInliner.ml[165,5082+22]..src/codeInliner.ml[165,5082+30])
                                                                                Texp_ident "Stdlib!.List.map"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/codeInliner.ml[165,5082+31]..src/codeInliner.ml[165,5082+34])
                                                                                    Texp_ident "sub/1096"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/codeInliner.ml[165,5082+35]..src/codeInliner.ml[165,5082+39])
                                                                                    Texp_ident "typs/1101"
                                                                              ]
                                                                          ]
                                                                      <case>
                                                                        pattern (src/codeInliner.ml[166,5123+10]..src/codeInliner.ml[166,5123+31])
                                                                          Tpat_value
                                                                          pattern (src/codeInliner.ml[166,5123+10]..src/codeInliner.ml[166,5123+31])
                                                                            Tpat_construct "TypArrow"
                                                                            [
                                                                              pattern (src/codeInliner.ml[166,5123+20]..src/codeInliner.ml[166,5123+24])
                                                                                Tpat_var "typ1/1102"
                                                                              pattern (src/codeInliner.ml[166,5123+26]..src/codeInliner.ml[166,5123+30])
                                                                                Tpat_var "typ2/1103"
                                                                            ]
                                                                            None
                                                                        expression (src/codeInliner.ml[167,5158+12]..src/codeInliner.ml[167,5158+41])
                                                                          Texp_construct "TypArrow"
                                                                          [
                                                                            expression (src/codeInliner.ml[167,5158+22]..src/codeInliner.ml[167,5158+30])
                                                                              Texp_apply
                                                                              expression (src/codeInliner.ml[167,5158+22]..src/codeInliner.ml[167,5158+25])
                                                                                Texp_ident "sub/1096"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/codeInliner.ml[167,5158+26]..src/codeInliner.ml[167,5158+30])
                                                                                    Texp_ident "typ1/1102"
                                                                              ]
                                                                            expression (src/codeInliner.ml[167,5158+32]..src/codeInliner.ml[167,5158+40])
                                                                              Texp_apply
                                                                              expression (src/codeInliner.ml[167,5158+32]..src/codeInliner.ml[167,5158+35])
                                                                                Texp_ident "sub/1096"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/codeInliner.ml[167,5158+36]..src/codeInliner.ml[167,5158+40])
                                                                                    Texp_ident "typ2/1103"
                                                                              ]
                                                                          ]
                                                                    ]
                                                              ]
                                                        ]
                                                        expression (src/codeInliner.ml[169,5209+6]..src/codeInliner.ml[169,5209+21])
                                                          Texp_apply
                                                          expression (src/codeInliner.ml[169,5209+6]..src/codeInliner.ml[169,5209+9])
                                                            Texp_ident "sub/1096"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/codeInliner.ml[169,5209+10]..src/codeInliner.ml[169,5209+21])
                                                                Texp_field
                                                                expression (src/codeInliner.ml[169,5209+10]..src/codeInliner.ml[169,5209+16])
                                                                  Texp_ident "scheme/1094"
                                                                "body"
                                                          ]
                                                ]
                                      ]
                                      expression (src/codeInliner.ml[174,5279+2]..src/codeInliner.ml[282,8873+9])
                                        Texp_let Rec
                                        [
                                          <def>
                                            pattern (src/codeInliner.ml[174,5279+10]..src/codeInliner.ml[174,5279+18])
                                              Tpat_var "annotate/1104"
                                            expression (src/codeInliner.ml[174,5279+19]..src/codeInliner.ml[183,5627+20]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/codeInliner.ml[174,5279+19]..src/codeInliner.ml[174,5279+26])
                                                    Tpat_var "formals/1105"
                                                  expression (src/codeInliner.ml[174,5279+27]..src/codeInliner.ml[183,5627+20]) ghost
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (src/codeInliner.ml[174,5279+27]..src/codeInliner.ml[174,5279+31])
                                                          Tpat_var "body/1106"
                                                        expression (src/codeInliner.ml[174,5279+32]..src/codeInliner.ml[183,5627+20]) ghost
                                                          Texp_function
                                                          Nolabel
                                                          [
                                                            <case>
                                                              pattern (src/codeInliner.ml[174,5279+32]..src/codeInliner.ml[174,5279+35])
                                                                Tpat_var "typ/1107"
                                                              expression (src/codeInliner.ml[175,5317+4]..src/codeInliner.ml[183,5627+20])
                                                                Texp_match
                                                                expression (src/codeInliner.ml[175,5317+10]..src/codeInliner.ml[175,5317+22])
                                                                  Texp_tuple
                                                                  [
                                                                    expression (src/codeInliner.ml[175,5317+10]..src/codeInliner.ml[175,5317+17])
                                                                      Texp_ident "formals/1105"
                                                                    expression (src/codeInliner.ml[175,5317+19]..src/codeInliner.ml[175,5317+22])
                                                                      Texp_ident "typ/1107"
                                                                  ]
                                                                [
                                                                  <case>
                                                                    pattern (src/codeInliner.ml[176,5345+6]..src/codeInliner.ml[176,5345+11])
                                                                      Tpat_value
                                                                      pattern (src/codeInliner.ml[176,5345+6]..src/codeInliner.ml[176,5345+11])
                                                                        Tpat_tuple
                                                                        [
                                                                          pattern (src/codeInliner.ml[176,5345+6]..src/codeInliner.ml[176,5345+8])
                                                                            Tpat_construct "[]"
                                                                            []
                                                                            None
                                                                          pattern (src/codeInliner.ml[176,5345+10]..src/codeInliner.ml[176,5345+11])
                                                                            Tpat_any
                                                                        ]
                                                                    expression (src/codeInliner.ml[177,5360+8]..src/codeInliner.ml[177,5360+38])
                                                                      Texp_tuple
                                                                      [
                                                                        expression (src/codeInliner.ml[177,5360+8]..src/codeInliner.ml[177,5360+10])
                                                                          Texp_construct "[]"
                                                                          []
                                                                        expression (src/codeInliner.ml[177,5360+12]..src/codeInliner.ml[177,5360+38])
                                                                          Texp_apply
                                                                          expression (src/codeInliner.ml[177,5360+12]..src/codeInliner.ml[177,5360+29])
                                                                            Texp_ident "Dune__exe!.CodeBits.annotate"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/codeInliner.ml[177,5360+30]..src/codeInliner.ml[177,5360+34])
                                                                                Texp_ident "body/1106"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/codeInliner.ml[177,5360+35]..src/codeInliner.ml[177,5360+38])
                                                                                Texp_ident "typ/1107"
                                                                          ]
                                                                      ]
                                                                  <case>
                                                                    pattern (src/codeInliner.ml[178,5399+6]..src/codeInliner.ml[178,5399+46])
                                                                      Tpat_value
                                                                      pattern (src/codeInliner.ml[178,5399+6]..src/codeInliner.ml[178,5399+46])
                                                                        Tpat_tuple
                                                                        [
                                                                          pattern (src/codeInliner.ml[178,5399+6]..src/codeInliner.ml[178,5399+23])
                                                                            Tpat_construct "::"
                                                                            [
                                                                              pattern (src/codeInliner.ml[178,5399+6]..src/codeInliner.ml[178,5399+12])
                                                                                Tpat_var "formal/1108"
                                                                              pattern (src/codeInliner.ml[178,5399+16]..src/codeInliner.ml[178,5399+23])
                                                                                Tpat_var "formals/1109"
                                                                            ]
                                                                            None
                                                                          pattern (src/codeInliner.ml[178,5399+25]..src/codeInliner.ml[178,5399+46])
                                                                            Tpat_construct "TypArrow"
                                                                            [
                                                                              pattern (src/codeInliner.ml[178,5399+35]..src/codeInliner.ml[178,5399+39])
                                                                                Tpat_var "targ/1110"
                                                                              pattern (src/codeInliner.ml[178,5399+41]..src/codeInliner.ml[178,5399+45])
                                                                                Tpat_var "tres/1111"
                                                                            ]
                                                                            None
                                                                        ]
                                                                    expression (src/codeInliner.ml[179,5449+8]..src/codeInliner.ml[180,5507+46])
                                                                      Texp_let Nonrec
                                                                      [
                                                                        <def>
                                                                          pattern (src/codeInliner.ml[179,5449+12]..src/codeInliner.ml[179,5449+25])
                                                                            Tpat_tuple
                                                                            [
                                                                              pattern (src/codeInliner.ml[179,5449+12]..src/codeInliner.ml[179,5449+19])
                                                                                Tpat_var "formals/1112"
                                                                              pattern (src/codeInliner.ml[179,5449+21]..src/codeInliner.ml[179,5449+25])
                                                                                Tpat_var "body/1113"
                                                                            ]
                                                                          expression (src/codeInliner.ml[179,5449+28]..src/codeInliner.ml[179,5449+54])
                                                                            Texp_apply
                                                                            expression (src/codeInliner.ml[179,5449+28]..src/codeInliner.ml[179,5449+36])
                                                                              Texp_ident "annotate/1104"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/codeInliner.ml[179,5449+37]..src/codeInliner.ml[179,5449+44])
                                                                                  Texp_ident "formals/1109"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/codeInliner.ml[179,5449+45]..src/codeInliner.ml[179,5449+49])
                                                                                  Texp_ident "body/1106"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/codeInliner.ml[179,5449+50]..src/codeInliner.ml[179,5449+54])
                                                                                  Texp_ident "tres/1111"
                                                                            ]
                                                                      ]
                                                                      expression (src/codeInliner.ml[180,5507+8]..src/codeInliner.ml[180,5507+46])
                                                                        Texp_tuple
                                                                        [
                                                                          expression (src/codeInliner.ml[180,5507+8]..src/codeInliner.ml[180,5507+40])
                                                                            Texp_construct "::"
                                                                            [
                                                                              expression (src/codeInliner.ml[180,5507+8]..src/codeInliner.ml[180,5507+29])
                                                                                Texp_construct "PAnnot"
                                                                                [
                                                                                  expression (src/codeInliner.ml[180,5507+16]..src/codeInliner.ml[180,5507+22])
                                                                                    Texp_ident "formal/1108"
                                                                                  expression (src/codeInliner.ml[180,5507+24]..src/codeInliner.ml[180,5507+28])
                                                                                    Texp_ident "targ/1110"
                                                                                ]
                                                                              expression (src/codeInliner.ml[180,5507+33]..src/codeInliner.ml[180,5507+40])
                                                                                Texp_ident "formals/1112"
                                                                            ]
                                                                          expression (src/codeInliner.ml[180,5507+42]..src/codeInliner.ml[180,5507+46])
                                                                            Texp_ident "body/1113"
                                                                        ]
                                                                  <case>
                                                                    pattern (src/codeInliner.ml[181,5554+6]..src/codeInliner.ml[181,5554+15])
                                                                      Tpat_value
                                                                      pattern (src/codeInliner.ml[181,5554+6]..src/codeInliner.ml[181,5554+15])
                                                                        Tpat_tuple
                                                                        [
                                                                          pattern (src/codeInliner.ml[181,5554+6]..src/codeInliner.ml[181,5554+12])
                                                                            Tpat_construct "::"
                                                                            [
                                                                              pattern (src/codeInliner.ml[181,5554+6]..src/codeInliner.ml[181,5554+7])
                                                                                Tpat_any
                                                                              pattern (src/codeInliner.ml[181,5554+11]..src/codeInliner.ml[181,5554+12])
                                                                                Tpat_any
                                                                            ]
                                                                            None
                                                                          pattern (src/codeInliner.ml[181,5554+14]..src/codeInliner.ml[181,5554+15])
                                                                            Tpat_any
                                                                        ]
                                                                    expression (src/codeInliner.ml[183,5627+8]..src/codeInliner.ml[183,5627+20])
                                                                      Texp_assert                                                                      expression (src/codeInliner.ml[183,5627+15]..src/codeInliner.ml[183,5627+20])
                                                                        Texp_construct "false"
                                                                        []
                                                                ]
                                                          ]
                                                    ]
                                              ]
                                        ]
                                        expression (src/codeInliner.ml[197,6266+2]..src/codeInliner.ml[282,8873+9])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/codeInliner.ml[197,6266+6]..src/codeInliner.ml[197,6266+12])
                                                Tpat_var "inline/1116"
                                              expression (src/codeInliner.ml[197,6266+13]..src/codeInliner.ml[207,6579+33]) ghost
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (src/codeInliner.ml[197,6266+13]..src/codeInliner.ml[197,6266+20])
                                                      Tpat_var "formals/1118"
                                                    expression (src/codeInliner.ml[197,6266+21]..src/codeInliner.ml[207,6579+33]) ghost
                                                      Texp_function
                                                      Nolabel
                                                      [
                                                        <case>
                                                          pattern (src/codeInliner.ml[197,6266+21]..src/codeInliner.ml[197,6266+28])
                                                            Tpat_var "actuals/1119"
                                                          expression (src/codeInliner.ml[197,6266+29]..src/codeInliner.ml[207,6579+33]) ghost
                                                            Texp_function
                                                            Nolabel
                                                            [
                                                              <case>
                                                                pattern (src/codeInliner.ml[197,6266+29]..src/codeInliner.ml[197,6266+33])
                                                                  Tpat_var "body/1120"
                                                                expression (src/codeInliner.ml[197,6266+34]..src/codeInliner.ml[207,6579+33]) ghost
                                                                  Texp_function
                                                                  Nolabel
                                                                  [
                                                                    <case>
                                                                      pattern (src/codeInliner.ml[197,6266+34]..src/codeInliner.ml[197,6266+41])
                                                                        Tpat_var "oscheme/1121"
                                                                      expression (src/codeInliner.ml[198,6310+4]..src/codeInliner.ml[207,6579+33])
                                                                        Texp_sequence
                                                                        expression (src/codeInliner.ml[198,6310+4]..src/codeInliner.ml[198,6310+54])
                                                                          Texp_assert                                                                          expression (src/codeInliner.ml[198,6310+11]..src/codeInliner.ml[198,6310+54])
                                                                            Texp_apply
                                                                            expression (src/codeInliner.ml[198,6310+32]..src/codeInliner.ml[198,6310+33])
                                                                              Texp_ident "Stdlib!.="
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/codeInliner.ml[198,6310+12]..src/codeInliner.ml[198,6310+31])
                                                                                  Texp_apply
                                                                                  expression (src/codeInliner.ml[198,6310+12]..src/codeInliner.ml[198,6310+23])
                                                                                    Texp_ident "Stdlib!.List.length"
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/codeInliner.ml[198,6310+24]..src/codeInliner.ml[198,6310+31])
                                                                                        Texp_ident "actuals/1119"
                                                                                  ]
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/codeInliner.ml[198,6310+34]..src/codeInliner.ml[198,6310+53])
                                                                                  Texp_apply
                                                                                  expression (src/codeInliner.ml[198,6310+34]..src/codeInliner.ml[198,6310+45])
                                                                                    Texp_ident "Stdlib!.List.length"
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/codeInliner.ml[198,6310+46]..src/codeInliner.ml[198,6310+53])
                                                                                        Texp_ident "formals/1118"
                                                                                  ]
                                                                            ]
                                                                        expression (src/codeInliner.ml[199,6366+4]..src/codeInliner.ml[207,6579+33])
                                                                          Texp_match
                                                                          expression (src/codeInliner.ml[199,6366+10]..src/codeInliner.ml[199,6366+17])
                                                                            Texp_ident "oscheme/1121"
                                                                          [
                                                                            <case>
                                                                              pattern (src/codeInliner.ml[200,6389+6]..src/codeInliner.ml[200,6389+17])
                                                                                Tpat_value
                                                                                pattern (src/codeInliner.ml[200,6389+6]..src/codeInliner.ml[200,6389+17])
                                                                                  Tpat_construct "Some"
                                                                                  [
                                                                                    pattern (src/codeInliner.ml[200,6389+11]..src/codeInliner.ml[200,6389+17])
                                                                                      Tpat_var "scheme/1122"
                                                                                  ]
                                                                                  None
                                                                              <when>
                                                                                expression (src/codeInliner.ml[201,6407+11]..src/codeInliner.ml[201,6407+50])
                                                                                  Texp_apply
                                                                                  expression (src/codeInliner.ml[201,6407+11]..src/codeInliner.ml[201,6407+14])
                                                                                    Texp_ident "Stdlib!.not"
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/codeInliner.ml[201,6407+15]..src/codeInliner.ml[201,6407+50])
                                                                                        Texp_ident "Dune__exe!.Front.ocaml_types_have_been_checked"
                                                                                  ]
                                                                              expression (src/codeInliner.ml[203,6462+8]..src/codeInliner.ml[204,6533+33])
                                                                                Texp_let Nonrec
                                                                                [
                                                                                  <def>
                                                                                    pattern (src/codeInliner.ml[203,6462+12]..src/codeInliner.ml[203,6462+25])
                                                                                      Tpat_tuple
                                                                                      [
                                                                                        pattern (src/codeInliner.ml[203,6462+12]..src/codeInliner.ml[203,6462+19])
                                                                                          Tpat_var "formals/1125"
                                                                                        pattern (src/codeInliner.ml[203,6462+21]..src/codeInliner.ml[203,6462+25])
                                                                                          Tpat_var "body/1126"
                                                                                      ]
                                                                                    expression (src/codeInliner.ml[203,6462+28]..src/codeInliner.ml[203,6462+67])
                                                                                      Texp_apply
                                                                                      expression (src/codeInliner.ml[203,6462+28]..src/codeInliner.ml[203,6462+36])
                                                                                        Texp_ident "annotate/1104"
                                                                                      [
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/codeInliner.ml[203,6462+37]..src/codeInliner.ml[203,6462+44])
                                                                                            Texp_ident "formals/1118"
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/codeInliner.ml[203,6462+45]..src/codeInliner.ml[203,6462+49])
                                                                                            Texp_ident "body/1120"
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/codeInliner.ml[203,6462+50]..src/codeInliner.ml[203,6462+67])
                                                                                            Texp_apply
                                                                                            expression (src/codeInliner.ml[203,6462+51]..src/codeInliner.ml[203,6462+59])
                                                                                              Texp_ident "instance/1053"
                                                                                            [
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/codeInliner.ml[203,6462+60]..src/codeInliner.ml[203,6462+66])
                                                                                                  Texp_ident "scheme/1122"
                                                                                            ]
                                                                                      ]
                                                                                ]
                                                                                expression (src/codeInliner.ml[204,6533+8]..src/codeInliner.ml[204,6533+33])
                                                                                  Texp_apply
                                                                                  expression (src/codeInliner.ml[204,6533+8]..src/codeInliner.ml[204,6533+12])
                                                                                    Texp_ident "Dune__exe!.CodeBits.mlet"
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/codeInliner.ml[204,6533+13]..src/codeInliner.ml[204,6533+20])
                                                                                        Texp_ident "formals/1125"
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/codeInliner.ml[204,6533+21]..src/codeInliner.ml[204,6533+28])
                                                                                        Texp_ident "actuals/1119"
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/codeInliner.ml[204,6533+29]..src/codeInliner.ml[204,6533+33])
                                                                                        Texp_ident "body/1126"
                                                                                  ]
                                                                            <case>
                                                                              pattern (src/codeInliner.ml[206,6568+6]..src/codeInliner.ml[206,6568+7])
                                                                                Tpat_value
                                                                                pattern (src/codeInliner.ml[206,6568+6]..src/codeInliner.ml[206,6568+7])
                                                                                  Tpat_any
                                                                              expression (src/codeInliner.ml[207,6579+8]..src/codeInliner.ml[207,6579+33])
                                                                                Texp_apply
                                                                                expression (src/codeInliner.ml[207,6579+8]..src/codeInliner.ml[207,6579+12])
                                                                                  Texp_ident "Dune__exe!.CodeBits.mlet"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/codeInliner.ml[207,6579+13]..src/codeInliner.ml[207,6579+20])
                                                                                      Texp_ident "formals/1118"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/codeInliner.ml[207,6579+21]..src/codeInliner.ml[207,6579+28])
                                                                                      Texp_ident "actuals/1119"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/codeInliner.ml[207,6579+29]..src/codeInliner.ml[207,6579+33])
                                                                                      Texp_ident "body/1120"
                                                                                ]
                                                                          ]
                                                                  ]
                                                            ]
                                                      ]
                                                ]
                                          ]
                                          expression (src/codeInliner.ml[214,6829+2]..src/codeInliner.ml[282,8873+9])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/codeInliner.ml[214,6829+6]..src/codeInliner.ml[214,6829+7])
                                                  Tpat_var "o/1127"
                                                expression (src/codeInliner.ml[215,6839+4]..src/codeInliner.ml[259,8386+7])
                                                  Texp_object                                                  class_structure
                                                    pattern (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                      Tpat_alias "selfpat-*/1129"
                                                      pattern (src/codeInliner.ml[215,6839+11]..src/codeInliner.ml[215,6839+17])
                                                        Tpat_var "self/1128"
                                                    [
                                                      class_field (src/codeInliner.ml[216,6857+6]..src/codeInliner.ml[216,6857+51])
                                                        Tcf_inherit Fresh
                                                          class_expr (src/codeInliner.ml[216,6857+14]..src/codeInliner.ml[216,6857+42])
                                                            class_expr (src/codeInliner.ml[216,6857+14]..src/codeInliner.ml[216,6857+42])
                                                              Tcl_ident "Dune__exe!.Traverse.map"
                                                              [
                                                                core_type (src/codeInliner.ml[216,6857+16]..src/codeInliner.ml[216,6857+27])
                                                                  Ttyp_constr "Dune__exe!.StringSet.t"
                                                                  []
                                                              ]
                                                          Some
                                                            "super"
                                                      class_field (src/codeInliner.ml[217,6909+6]..src/codeInliner.ml[217,6909+26])
                                                        Tcf_inherit Fresh
                                                          class_expr (src/codeInliner.ml[217,6909+14]..src/codeInliner.ml[217,6909+26])
                                                            Tcl_apply
                                                            class_expr (src/codeInliner.ml[217,6909+14]..src/codeInliner.ml[217,6909+20])
                                                              class_expr (src/codeInliner.ml[217,6909+14]..src/codeInliner.ml[217,6909+20])
                                                                Tcl_ident "locals/473"
                                                                []
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/codeInliner.ml[217,6909+21]..src/codeInliner.ml[217,6909+26])
                                                                  Texp_ident "table/660"
                                                            ]
                                                          None
                                                      class_field (src/codeInliner.ml[218,6936+6]..src/codeInliner.ml[257,8345+39])
                                                        Tcf_method "eapp" Public
                                                          Concrete Override
                                                          expression (src/codeInliner.ml[218,6936+19]..src/codeInliner.ml[257,8345+39]) ghost
                                                            Texp_function
                                                            Nolabel
                                                            [
                                                              <case>
                                                                pattern (src/codeInliner.ml[215,6839+11]..src/codeInliner.ml[215,6839+17]) ghost
                                                                  Tpat_alias "self-3/1218"
                                                                  pattern (src/codeInliner.ml[215,6839+11]..src/codeInliner.ml[215,6839+17]) ghost
                                                                    Tpat_var "self-*/1217"
                                                                expression (src/codeInliner.ml[218,6936+19]..src/codeInliner.ml[257,8345+39]) ghost
                                                                  extra
                                                                    Texp_poly
                                                                    None
                                                                  Texp_function
                                                                  Nolabel
                                                                  [
                                                                    <case>
                                                                      pattern (src/codeInliner.ml[218,6936+19]..src/codeInliner.ml[218,6936+25])
                                                                        Tpat_var "locals/1219"
                                                                      expression (src/codeInliner.ml[218,6936+26]..src/codeInliner.ml[257,8345+39]) ghost
                                                                        Texp_function
                                                                        Nolabel
                                                                        [
                                                                          <case>
                                                                            pattern (src/codeInliner.ml[218,6936+26]..src/codeInliner.ml[218,6936+27])
                                                                              Tpat_var "e/1220"
                                                                            expression (src/codeInliner.ml[218,6936+28]..src/codeInliner.ml[257,8345+39]) ghost
                                                                              Texp_function
                                                                              Nolabel
                                                                              [
                                                                                <case>
                                                                                  pattern (src/codeInliner.ml[218,6936+28]..src/codeInliner.ml[218,6936+35])
                                                                                    Tpat_var "actuals/1221"
                                                                                  expression (src/codeInliner.ml[219,6974+8]..src/codeInliner.ml[257,8345+39])
                                                                                    Texp_match
                                                                                    expression (src/codeInliner.ml[219,6974+14]..src/codeInliner.ml[219,6974+15])
                                                                                      Texp_ident "e/1220"
                                                                                    [
                                                                                      <case>
                                                                                        pattern (src/codeInliner.ml[220,6995+10]..src/codeInliner.ml[220,6995+17])
                                                                                          Tpat_value
                                                                                          pattern (src/codeInliner.ml[220,6995+10]..src/codeInliner.ml[220,6995+17])
                                                                                            Tpat_construct "EVar"
                                                                                            [
                                                                                              pattern (src/codeInliner.ml[220,6995+15]..src/codeInliner.ml[220,6995+17])
                                                                                                Tpat_var "id/1222"
                                                                                            ]
                                                                                            None
                                                                                        <when>
                                                                                          expression (src/codeInliner.ml[221,7018+12]..src/codeInliner.ml[222,7088+43])
                                                                                            Texp_apply
                                                                                            expression (src/codeInliner.ml[221,7018+35]..src/codeInliner.ml[221,7018+37])
                                                                                              Texp_ident "Stdlib!.&&"
                                                                                            [
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/codeInliner.ml[221,7018+12]..src/codeInliner.ml[221,7018+34])
                                                                                                  Texp_apply
                                                                                                  expression (src/codeInliner.ml[221,7018+13]..src/codeInliner.ml[221,7018+24])
                                                                                                    Texp_ident "Stdlib!.Hashtbl.mem"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/codeInliner.ml[221,7018+25]..src/codeInliner.ml[221,7018+30])
                                                                                                        Texp_ident "table/660"
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/codeInliner.ml[221,7018+31]..src/codeInliner.ml[221,7018+33])
                                                                                                        Texp_ident "id/1222"
                                                                                                  ]
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/codeInliner.ml[222,7088+12]..src/codeInliner.ml[222,7088+43])
                                                                                                  Texp_apply
                                                                                                  expression (src/codeInliner.ml[222,7088+13]..src/codeInliner.ml[222,7088+16])
                                                                                                    Texp_ident "Stdlib!.not"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/codeInliner.ml[222,7088+17]..src/codeInliner.ml[222,7088+42])
                                                                                                        Texp_apply
                                                                                                        expression (src/codeInliner.ml[222,7088+18]..src/codeInliner.ml[222,7088+31])
                                                                                                          Texp_ident "Dune__exe!.StringSet.mem"
                                                                                                        [
                                                                                                          <arg>
                                                                                                            Nolabel
                                                                                                            expression (src/codeInliner.ml[222,7088+32]..src/codeInliner.ml[222,7088+34])
                                                                                                              Texp_ident "id/1222"
                                                                                                          <arg>
                                                                                                            Nolabel
                                                                                                            expression (src/codeInliner.ml[222,7088+35]..src/codeInliner.ml[222,7088+41])
                                                                                                              Texp_ident "locals/1219"
                                                                                                        ]
                                                                                                  ]
                                                                                            ]
                                                                                        expression (src/codeInliner.ml[225,7185+12]..src/codeInliner.ml[253,8232+15])
                                                                                          Texp_let Nonrec
                                                                                          [
                                                                                            <def>
                                                                                              pattern (src/codeInliner.ml[225,7185+16]..src/codeInliner.ml[225,7185+22])
                                                                                                Tpat_tuple
                                                                                                [
                                                                                                  pattern (src/codeInliner.ml[225,7185+16]..src/codeInliner.ml[225,7185+17])
                                                                                                    Tpat_any
                                                                                                  pattern (src/codeInliner.ml[225,7185+19]..src/codeInliner.ml[225,7185+22])
                                                                                                    Tpat_var "def/1223"
                                                                                                ]
                                                                                              expression (src/codeInliner.ml[225,7185+25]..src/codeInliner.ml[225,7185+46])
                                                                                                Texp_apply
                                                                                                expression (src/codeInliner.ml[225,7185+25]..src/codeInliner.ml[225,7185+37])
                                                                                                  Texp_ident "Stdlib!.Hashtbl.find"
                                                                                                [
                                                                                                  <arg>
                                                                                                    Nolabel
                                                                                                    expression (src/codeInliner.ml[225,7185+38]..src/codeInliner.ml[225,7185+43])
                                                                                                      Texp_ident "table/660"
                                                                                                  <arg>
                                                                                                    Nolabel
                                                                                                    expression (src/codeInliner.ml[225,7185+44]..src/codeInliner.ml[225,7185+46])
                                                                                                      Texp_ident "id/1222"
                                                                                                ]
                                                                                          ]
                                                                                          expression (src/codeInliner.ml[227,7281+12]..src/codeInliner.ml[253,8232+15])
                                                                                            Texp_let Nonrec
                                                                                            [
                                                                                              <def>
                                                                                                pattern (src/codeInliner.ml[227,7281+16]..src/codeInliner.ml[227,7281+38])
                                                                                                  Tpat_tuple
                                                                                                  [
                                                                                                    pattern (src/codeInliner.ml[227,7281+16]..src/codeInliner.ml[227,7281+23])
                                                                                                      Tpat_var "formals/1224"
                                                                                                    pattern (src/codeInliner.ml[227,7281+25]..src/codeInliner.ml[227,7281+29])
                                                                                                      Tpat_var "body/1225"
                                                                                                    pattern (src/codeInliner.ml[227,7281+31]..src/codeInliner.ml[227,7281+38])
                                                                                                      Tpat_var "oscheme/1226"
                                                                                                  ]
                                                                                                expression (src/codeInliner.ml[228,7322+14]..src/codeInliner.ml[236,7742+30])
                                                                                                  Texp_match
                                                                                                  expression (src/codeInliner.ml[228,7322+20]..src/codeInliner.ml[228,7322+23])
                                                                                                    Texp_ident "def/1223"
                                                                                                  [
                                                                                                    <case>
                                                                                                      pattern (src/codeInliner.ml[229,7351+16]..src/codeInliner.ml[229,7351+49])
                                                                                                        Tpat_value
                                                                                                        pattern (src/codeInliner.ml[229,7351+16]..src/codeInliner.ml[229,7351+49])
                                                                                                          Tpat_record
                                                                                                          [
                                                                                                            "valval"
                                                                                                              pattern (src/codeInliner.ml[229,7351+27]..src/codeInliner.ml[229,7351+47])
                                                                                                                Tpat_construct "EFun"
                                                                                                                [
                                                                                                                  pattern (src/codeInliner.ml[229,7351+33]..src/codeInliner.ml[229,7351+40])
                                                                                                                    Tpat_var "formals/1227"
                                                                                                                  pattern (src/codeInliner.ml[229,7351+42]..src/codeInliner.ml[229,7351+46])
                                                                                                                    Tpat_var "body/1228"
                                                                                                                ]
                                                                                                                None
                                                                                                          ]
                                                                                                      expression (src/codeInliner.ml[230,7404+18]..src/codeInliner.ml[230,7404+37])
                                                                                                        Texp_tuple
                                                                                                        [
                                                                                                          expression (src/codeInliner.ml[230,7404+18]..src/codeInliner.ml[230,7404+25])
                                                                                                            Texp_ident "formals/1227"
                                                                                                          expression (src/codeInliner.ml[230,7404+27]..src/codeInliner.ml[230,7404+31])
                                                                                                            Texp_ident "body/1228"
                                                                                                          expression (src/codeInliner.ml[230,7404+33]..src/codeInliner.ml[230,7404+37])
                                                                                                            Texp_construct "None"
                                                                                                            []
                                                                                                        ]
                                                                                                    <case>
                                                                                                      pattern (src/codeInliner.ml[231,7442+16]..src/codeInliner.ml[231,7442+66])
                                                                                                        Tpat_value
                                                                                                        pattern (src/codeInliner.ml[231,7442+16]..src/codeInliner.ml[231,7442+66])
                                                                                                          Tpat_record
                                                                                                          [
                                                                                                            "valval"
                                                                                                              pattern (src/codeInliner.ml[231,7442+27]..src/codeInliner.ml[231,7442+64])
                                                                                                                Tpat_construct "EAnnot"
                                                                                                                [
                                                                                                                  pattern (src/codeInliner.ml[231,7442+35]..src/codeInliner.ml[231,7442+55])
                                                                                                                    Tpat_construct "EFun"
                                                                                                                    [
                                                                                                                      pattern (src/codeInliner.ml[231,7442+41]..src/codeInliner.ml[231,7442+48])
                                                                                                                        Tpat_var "formals/1229"
                                                                                                                      pattern (src/codeInliner.ml[231,7442+50]..src/codeInliner.ml[231,7442+54])
                                                                                                                        Tpat_var "body/1230"
                                                                                                                    ]
                                                                                                                    None
                                                                                                                  pattern (src/codeInliner.ml[231,7442+57]..src/codeInliner.ml[231,7442+63])
                                                                                                                    Tpat_var "scheme/1231"
                                                                                                                ]
                                                                                                                None
                                                                                                          ]
                                                                                                      expression (src/codeInliner.ml[232,7512+18]..src/codeInliner.ml[232,7512+44])
                                                                                                        Texp_tuple
                                                                                                        [
                                                                                                          expression (src/codeInliner.ml[232,7512+18]..src/codeInliner.ml[232,7512+25])
                                                                                                            Texp_ident "formals/1229"
                                                                                                          expression (src/codeInliner.ml[232,7512+27]..src/codeInliner.ml[232,7512+31])
                                                                                                            Texp_ident "body/1230"
                                                                                                          expression (src/codeInliner.ml[232,7512+33]..src/codeInliner.ml[232,7512+44])
                                                                                                            Texp_construct "Some"
                                                                                                            [
                                                                                                              expression (src/codeInliner.ml[232,7512+38]..src/codeInliner.ml[232,7512+44])
                                                                                                                Texp_ident "scheme/1231"
                                                                                                            ]
                                                                                                        ]
                                                                                                    <case>
                                                                                                      pattern (src/codeInliner.ml[233,7557+16]..src/codeInliner.ml[233,7557+30])
                                                                                                        Tpat_value
                                                                                                        pattern (src/codeInliner.ml[233,7557+16]..src/codeInliner.ml[233,7557+30])
                                                                                                          Tpat_record
                                                                                                          [
                                                                                                            "valval"
                                                                                                              pattern (src/codeInliner.ml[233,7557+27]..src/codeInliner.ml[233,7557+28])
                                                                                                                Tpat_any
                                                                                                          ]
                                                                                                      expression (src/codeInliner.ml[236,7742+18]..src/codeInliner.ml[236,7742+30])
                                                                                                        Texp_assert                                                                                                        expression (src/codeInliner.ml[236,7742+25]..src/codeInliner.ml[236,7742+30])
                                                                                                          Texp_construct "false"
                                                                                                          []
                                                                                                  ]
                                                                                            ]
                                                                                            expression (src/codeInliner.ml[239,7789+12]..src/codeInliner.ml[253,8232+15])
                                                                                              Texp_sequence
                                                                                              expression (src/codeInliner.ml[239,7789+12]..src/codeInliner.ml[239,7789+43])
                                                                                                Texp_assert                                                                                                expression (src/codeInliner.ml[239,7789+19]..src/codeInliner.ml[239,7789+43])
                                                                                                  Texp_apply
                                                                                                  expression (src/codeInliner.ml[239,7789+20]..src/codeInliner.ml[239,7789+33])
                                                                                                    Texp_ident "Dune__exe!.StringMap.mem"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/codeInliner.ml[239,7789+34]..src/codeInliner.ml[239,7789+36])
                                                                                                        Texp_ident "id/1222"
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/codeInliner.ml[239,7789+37]..src/codeInliner.ml[239,7789+42])
                                                                                                        Texp_ident "usage/1039"
                                                                                                  ]
                                                                                              expression (src/codeInliner.ml[240,7834+12]..src/codeInliner.ml[253,8232+15])
                                                                                                Texp_ifthenelse
                                                                                                expression (src/codeInliner.ml[240,7834+15]..src/codeInliner.ml[240,7834+64])
                                                                                                  Texp_apply
                                                                                                  expression (src/codeInliner.ml[240,7834+43]..src/codeInliner.ml[240,7834+45])
                                                                                                    Texp_ident "Stdlib!.||"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/codeInliner.ml[240,7834+15]..src/codeInliner.ml[240,7834+42])
                                                                                                        Texp_apply
                                                                                                        expression (src/codeInliner.ml[240,7834+39]..src/codeInliner.ml[240,7834+40])
                                                                                                          Texp_ident "Stdlib!.="
                                                                                                        [
                                                                                                          <arg>
                                                                                                            Nolabel
                                                                                                            expression (src/codeInliner.ml[240,7834+15]..src/codeInliner.ml[240,7834+38])
                                                                                                              Texp_apply
                                                                                                              expression (src/codeInliner.ml[240,7834+15]..src/codeInliner.ml[240,7834+29])
                                                                                                                Texp_ident "Dune__exe!.StringMap.find"
                                                                                                              [
                                                                                                                <arg>
                                                                                                                  Nolabel
                                                                                                                  expression (src/codeInliner.ml[240,7834+30]..src/codeInliner.ml[240,7834+32])
                                                                                                                    Texp_ident "id/1222"
                                                                                                                <arg>
                                                                                                                  Nolabel
                                                                                                                  expression (src/codeInliner.ml[240,7834+33]..src/codeInliner.ml[240,7834+38])
                                                                                                                    Texp_ident "usage/1039"
                                                                                                              ]
                                                                                                          <arg>
                                                                                                            Nolabel
                                                                                                            expression (src/codeInliner.ml[240,7834+41]..src/codeInliner.ml[240,7834+42])
                                                                                                              Texp_constant Const_int 1
                                                                                                        ]
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/codeInliner.ml[240,7834+46]..src/codeInliner.ml[240,7834+64])
                                                                                                        Texp_apply
                                                                                                        expression (src/codeInliner.ml[240,7834+46]..src/codeInliner.ml[240,7834+59])
                                                                                                          Texp_ident "is_simple_app/1049"
                                                                                                        [
                                                                                                          <arg>
                                                                                                            Nolabel
                                                                                                            expression (src/codeInliner.ml[240,7834+60]..src/codeInliner.ml[240,7834+64])
                                                                                                              Texp_ident "body/1225"
                                                                                                        ]
                                                                                                  ]
                                                                                                expression (src/codeInliner.ml[244,7978+14]..src/codeInliner.ml[244,7978+103])
                                                                                                  Texp_apply
                                                                                                  expression (src/codeInliner.ml[244,7978+14]..src/codeInliner.ml[244,7978+20])
                                                                                                    Texp_ident "inline/1116"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/codeInliner.ml[244,7978+21]..src/codeInliner.ml[244,7978+28])
                                                                                                        Texp_ident "formals/1224"
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/codeInliner.ml[244,7978+29]..src/codeInliner.ml[244,7978+56])
                                                                                                        Texp_apply
                                                                                                        expression (src/codeInliner.ml[244,7978+30]..src/codeInliner.ml[244,7978+40])
                                                                                                          Texp_send "exprs/1206"
                                                                                                          expression (src/codeInliner.ml[244,7978+30]..src/codeInliner.ml[244,7978+34])
                                                                                                            Texp_ident "self-3/1218"
                                                                                                        [
                                                                                                          <arg>
                                                                                                            Nolabel
                                                                                                            expression (src/codeInliner.ml[244,7978+41]..src/codeInliner.ml[244,7978+47])
                                                                                                              Texp_ident "locals/1219"
                                                                                                          <arg>
                                                                                                            Nolabel
                                                                                                            expression (src/codeInliner.ml[244,7978+48]..src/codeInliner.ml[244,7978+55])
                                                                                                              Texp_ident "actuals/1221"
                                                                                                        ]
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/codeInliner.ml[244,7978+57]..src/codeInliner.ml[244,7978+95])
                                                                                                        Texp_construct "EComment"
                                                                                                        [
                                                                                                          expression (src/codeInliner.ml[244,7978+68]..src/codeInliner.ml[244,7978+70])
                                                                                                            Texp_ident "id/1222"
                                                                                                          expression (src/codeInliner.ml[244,7978+72]..src/codeInliner.ml[244,7978+93])
                                                                                                            Texp_apply
                                                                                                            expression (src/codeInliner.ml[244,7978+72]..src/codeInliner.ml[244,7978+81])
                                                                                                              Texp_send "expr/1205"
                                                                                                              expression (src/codeInliner.ml[244,7978+72]..src/codeInliner.ml[244,7978+76])
                                                                                                                Texp_ident "self-3/1218"
                                                                                                            [
                                                                                                              <arg>
                                                                                                                Nolabel
                                                                                                                expression (src/codeInliner.ml[244,7978+82]..src/codeInliner.ml[244,7978+88])
                                                                                                                  Texp_ident "locals/1219"
                                                                                                              <arg>
                                                                                                                Nolabel
                                                                                                                expression (src/codeInliner.ml[244,7978+89]..src/codeInliner.ml[244,7978+93])
                                                                                                                  Texp_ident "body/1225"
                                                                                                            ]
                                                                                                        ]
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/codeInliner.ml[244,7978+96]..src/codeInliner.ml[244,7978+103])
                                                                                                        Texp_ident "oscheme/1226"
                                                                                                  ]
                                                                                                Some
                                                                                                  expression (src/codeInliner.ml[246,8083+17]..src/codeInliner.ml[253,8232+15])
                                                                                                    Texp_sequence
                                                                                                    expression (src/codeInliner.ml[250,8162+14]..src/codeInliner.ml[250,8162+25])
                                                                                                      Texp_apply
                                                                                                      expression (src/codeInliner.ml[250,8162+14]..src/codeInliner.ml[250,8162+21])
                                                                                                        Texp_ident "enqueue/1042"
                                                                                                      [
                                                                                                        <arg>
                                                                                                          Nolabel
                                                                                                          expression (src/codeInliner.ml[250,8162+22]..src/codeInliner.ml[250,8162+25])
                                                                                                            Texp_ident "def/1223"
                                                                                                      ]
                                                                                                    expression (src/codeInliner.ml[251,8189+14]..src/codeInliner.ml[251,8189+41])
                                                                                                      Texp_apply
                                                                                                      expression (src/codeInliner.ml[251,8189+14]..src/codeInliner.ml[251,8189+24])
                                                                                                        Texp_send "eapp/1139"
                                                                                                        expression (src/codeInliner.ml[251,8189+14]..src/codeInliner.ml[251,8189+19])
                                                                                                          Texp_ident "super/1216"
                                                                                                      [
                                                                                                        <arg>
                                                                                                          Nolabel
                                                                                                          expression (src/codeInliner.ml[251,8189+25]..src/codeInliner.ml[251,8189+31])
                                                                                                            Texp_ident "locals/1219"
                                                                                                        <arg>
                                                                                                          Nolabel
                                                                                                          expression (src/codeInliner.ml[251,8189+32]..src/codeInliner.ml[251,8189+33])
                                                                                                            Texp_ident "e/1220"
                                                                                                        <arg>
                                                                                                          Nolabel
                                                                                                          expression (src/codeInliner.ml[251,8189+34]..src/codeInliner.ml[251,8189+41])
                                                                                                            Texp_ident "actuals/1221"
                                                                                                      ]
                                                                                      <case>
                                                                                        pattern (src/codeInliner.ml[255,8249+10]..src/codeInliner.ml[255,8249+11])
                                                                                          Tpat_value
                                                                                          pattern (src/codeInliner.ml[255,8249+10]..src/codeInliner.ml[255,8249+11])
                                                                                            Tpat_any
                                                                                        expression (src/codeInliner.ml[257,8345+12]..src/codeInliner.ml[257,8345+39])
                                                                                          Texp_apply
                                                                                          expression (src/codeInliner.ml[257,8345+12]..src/codeInliner.ml[257,8345+22])
                                                                                            Texp_send "eapp/1139"
                                                                                            expression (src/codeInliner.ml[257,8345+12]..src/codeInliner.ml[257,8345+17])
                                                                                              Texp_ident "super/1216"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/codeInliner.ml[257,8345+23]..src/codeInliner.ml[257,8345+29])
                                                                                                Texp_ident "locals/1219"
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/codeInliner.ml[257,8345+30]..src/codeInliner.ml[257,8345+31])
                                                                                                Texp_ident "e/1220"
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/codeInliner.ml[257,8345+32]..src/codeInliner.ml[257,8345+39])
                                                                                                Texp_ident "actuals/1221"
                                                                                          ]
                                                                                    ]
                                                                              ]
                                                                        ]
                                                                  ]
                                                            ]
                                                    ]
                                            ]
                                            expression (src/codeInliner.ml[265,8485+2]..src/codeInliner.ml[282,8873+9])
                                              Texp_sequence
                                              expression (src/codeInliner.ml[265,8485+2]..src/codeInliner.ml[268,8577+8])
                                                Texp_apply
                                                expression (src/codeInliner.ml[265,8485+2]..src/codeInliner.ml[265,8485+11])
                                                  Texp_ident "Stdlib!.List.iter"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/codeInliner.ml[265,8485+12]..src/codeInliner.ml[268,8577+3])
                                                      Texp_function
                                                      Nolabel
                                                      [
                                                        <case>
                                                          pattern (src/codeInliner.ml[265,8485+22]..src/codeInliner.ml[265,8485+51])
                                                            Tpat_alias "def/1233"
                                                            pattern (src/codeInliner.ml[265,8485+22]..src/codeInliner.ml[265,8485+44])
                                                              Tpat_record
                                                              [
                                                                "valpublic"
                                                                  pattern (src/codeInliner.ml[265,8485+36]..src/codeInliner.ml[265,8485+42])
                                                                    Tpat_var "public/1232"
                                                              ]
                                                          expression (src/codeInliner.ml[266,8540+4]..src/codeInliner.ml[267,8559+17])
                                                            Texp_ifthenelse
                                                            expression (src/codeInliner.ml[266,8540+7]..src/codeInliner.ml[266,8540+13])
                                                              Texp_ident "public/1232"
                                                            expression (src/codeInliner.ml[267,8559+6]..src/codeInliner.ml[267,8559+17])
                                                              Texp_apply
                                                              expression (src/codeInliner.ml[267,8559+6]..src/codeInliner.ml[267,8559+13])
                                                                Texp_ident "enqueue/1042"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/codeInliner.ml[267,8559+14]..src/codeInliner.ml[267,8559+17])
                                                                    Texp_ident "def/1233"
                                                              ]
                                                            None
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (src/codeInliner.ml[268,8577+4]..src/codeInliner.ml[268,8577+8])
                                                      Texp_ident "defs/658"
                                                ]
                                              expression (src/codeInliner.ml[270,8588+2]..src/codeInliner.ml[282,8873+9])
                                                Texp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (src/codeInliner.ml[270,8588+6]..src/codeInliner.ml[270,8588+13])
                                                      Tpat_var "valdefs/1234"
                                                    expression (src/codeInliner.ml[271,8604+4]..src/codeInliner.ml[273,8679+14])
                                                      Texp_apply
                                                      expression (src/codeInliner.ml[271,8604+4]..src/codeInliner.ml[271,8604+14])
                                                        Texp_ident "Dune__exe!.Misc.qfold"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/codeInliner.ml[271,8604+15]..src/codeInliner.ml[273,8679+5])
                                                            Texp_function
                                                            Nolabel
                                                            [
                                                              <case>
                                                                pattern (src/codeInliner.ml[271,8604+20]..src/codeInliner.ml[271,8604+24])
                                                                  Tpat_var "defs/1235"
                                                                expression (src/codeInliner.ml[271,8604+25]..src/codeInliner.ml[272,8636+42]) ghost
                                                                  Texp_function
                                                                  Nolabel
                                                                  [
                                                                    <case>
                                                                      pattern (src/codeInliner.ml[271,8604+25]..src/codeInliner.ml[271,8604+28])
                                                                        Tpat_var "def/1236"
                                                                      expression (src/codeInliner.ml[272,8636+6]..src/codeInliner.ml[272,8636+42])
                                                                        Texp_construct "::"
                                                                        [
                                                                          expression (src/codeInliner.ml[272,8636+6]..src/codeInliner.ml[272,8636+34])
                                                                            Texp_apply
                                                                            expression (src/codeInliner.ml[272,8636+6]..src/codeInliner.ml[272,8636+14])
                                                                              Texp_send "valdef"
                                                                              expression (src/codeInliner.ml[272,8636+6]..src/codeInliner.ml[272,8636+7])
                                                                                Texp_ident "o/1127"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/codeInliner.ml[272,8636+15]..src/codeInliner.ml[272,8636+30])
                                                                                  Texp_ident "Dune__exe!.StringSet.empty"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/codeInliner.ml[272,8636+31]..src/codeInliner.ml[272,8636+34])
                                                                                  Texp_ident "def/1236"
                                                                            ]
                                                                          expression (src/codeInliner.ml[272,8636+38]..src/codeInliner.ml[272,8636+42])
                                                                            Texp_ident "defs/1235"
                                                                        ]
                                                                  ]
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/codeInliner.ml[273,8679+6]..src/codeInliner.ml[273,8679+8])
                                                            Texp_construct "[]"
                                                            []
                                                        <arg>
                                                          Nolabel
                                                          expression (src/codeInliner.ml[273,8679+9]..src/codeInliner.ml[273,8679+14])
                                                            Texp_ident "queue/1040"
                                                      ]
                                                ]
                                                expression (src/codeInliner.ml[276,8700+2]..src/codeInliner.ml[282,8873+9])
                                                  Texp_sequence
                                                  expression (src/codeInliner.ml[276,8700+2]..src/codeInliner.ml[278,8809+36])
                                                    Texp_apply
                                                    expression (src/codeInliner.ml[276,8700+2]..src/codeInliner.ml[276,8700+12])
                                                      Texp_ident "Dune__exe!.Error.logC"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/codeInliner.ml[276,8700+13]..src/codeInliner.ml[276,8700+14])
                                                          Texp_constant Const_int 1
                                                      <arg>
                                                        Nolabel
                                                        expression (src/codeInliner.ml[276,8700+15]..src/codeInliner.ml[278,8809+36])
                                                          Texp_function
                                                          Nolabel
                                                          [
                                                            <case>
                                                              pattern (src/codeInliner.ml[276,8700+20]..src/codeInliner.ml[276,8700+21])
                                                                Tpat_var "f/1252"
                                                              expression (src/codeInliner.ml[277,8725+4]..src/codeInliner.ml[278,8809+35])
                                                                Texp_apply
                                                                expression (src/codeInliner.ml[277,8725+4]..src/codeInliner.ml[277,8725+18])
                                                                  Texp_ident "Stdlib!.Printf.fprintf"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/codeInliner.ml[277,8725+19]..src/codeInliner.ml[277,8725+20])
                                                                      Texp_ident "f/1252"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/codeInliner.ml[277,8725+21]..src/codeInliner.ml[277,8725+83])
                                                                      Texp_construct "CamlinternalFormatBasics.Format"
                                                                      [
                                                                        expression (src/codeInliner.ml[277,8725+21]..src/codeInliner.ml[277,8725+83]) ghost
                                                                          Texp_construct "CamlinternalFormatBasics.Int"
                                                                          [
                                                                            expression (src/codeInliner.ml[277,8725+21]..src/codeInliner.ml[277,8725+83]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.Int_d"
                                                                              []
                                                                            expression (src/codeInliner.ml[277,8725+21]..src/codeInliner.ml[277,8725+83]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                              []
                                                                            expression (src/codeInliner.ml[277,8725+21]..src/codeInliner.ml[277,8725+83]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.No_precision"
                                                                              []
                                                                            expression (src/codeInliner.ml[277,8725+21]..src/codeInliner.ml[277,8725+83]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                              [
                                                                                expression (src/codeInliner.ml[277,8725+21]..src/codeInliner.ml[277,8725+83]) ghost
                                                                                  Texp_constant Const_string(" functions before inlining, ",(src/codeInliner.ml[277,8725+21]..src/codeInliner.ml[277,8725+83]) ghost,None)
                                                                                expression (src/codeInliner.ml[277,8725+21]..src/codeInliner.ml[277,8725+83]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.Int"
                                                                                  [
                                                                                    expression (src/codeInliner.ml[277,8725+21]..src/codeInliner.ml[277,8725+83]) ghost
                                                                                      Texp_construct "CamlinternalFormatBasics.Int_d"
                                                                                      []
                                                                                    expression (src/codeInliner.ml[277,8725+21]..src/codeInliner.ml[277,8725+83]) ghost
                                                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                      []
                                                                                    expression (src/codeInliner.ml[277,8725+21]..src/codeInliner.ml[277,8725+83]) ghost
                                                                                      Texp_construct "CamlinternalFormatBasics.No_precision"
                                                                                      []
                                                                                    expression (src/codeInliner.ml[277,8725+21]..src/codeInliner.ml[277,8725+83]) ghost
                                                                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                      [
                                                                                        expression (src/codeInliner.ml[277,8725+21]..src/codeInliner.ml[277,8725+83]) ghost
                                                                                          Texp_constant Const_string(" functions after inlining.\n",(src/codeInliner.ml[277,8725+21]..src/codeInliner.ml[277,8725+83]) ghost,None)
                                                                                        expression (src/codeInliner.ml[277,8725+21]..src/codeInliner.ml[277,8725+83]) ghost
                                                                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                          []
                                                                                      ]
                                                                                  ]
                                                                              ]
                                                                          ]
                                                                        expression (src/codeInliner.ml[277,8725+21]..src/codeInliner.ml[277,8725+83]) ghost
                                                                          Texp_constant Const_string("%d functions before inlining, %d functions after inlining.\n",(src/codeInliner.ml[277,8725+21]..src/codeInliner.ml[277,8725+83]) ghost,None)
                                                                      ]
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/codeInliner.ml[278,8809+7]..src/codeInliner.ml[278,8809+13])
                                                                      Texp_ident "before/659"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/codeInliner.ml[278,8809+14]..src/codeInliner.ml[278,8809+35])
                                                                      Texp_apply
                                                                      expression (src/codeInliner.ml[278,8809+15]..src/codeInliner.ml[278,8809+26])
                                                                        Texp_ident "Stdlib!.List.length"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/codeInliner.ml[278,8809+27]..src/codeInliner.ml[278,8809+34])
                                                                            Texp_ident "valdefs/1234"
                                                                      ]
                                                                ]
                                                          ]
                                                    ]
                                                  expression (src/codeInliner.ml[280,8848+2]..src/codeInliner.ml[282,8873+9])
                                                    Texp_sequence
                                                    expression (src/codeInliner.ml[280,8848+2]..src/codeInliner.ml[280,8848+22])
                                                      Texp_apply
                                                      expression (src/codeInliner.ml[280,8848+2]..src/codeInliner.ml[280,8848+11])
                                                        Texp_ident "Dune__exe!.Time.tick"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/codeInliner.ml[280,8848+12]..src/codeInliner.ml[280,8848+22])
                                                            Texp_constant Const_string("Inlining",(src/codeInliner.ml[280,8848+13]..src/codeInliner.ml[280,8848+21]),None)
                                                      ]
                                                    expression (src/codeInliner.ml[282,8873+2]..src/codeInliner.ml[282,8873+9])
                                                      Texp_ident "valdefs/1234"
          ]
    ]
  structure_item (src/codeInliner.ml[286,8917+0]..src/codeInliner.ml[313,9598+49])
    Tstr_value Rec
    [
      <def>
        pattern (src/codeInliner.ml[286,8917+8]..src/codeInliner.ml[286,8917+29])
          Tpat_var "inline_structure_item/1258"
        expression (src/codeInliner.ml[286,8917+30]..src/codeInliner.ml[302,9395+10]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/codeInliner.ml[286,8917+30]..src/codeInliner.ml[286,8917+34])
                Tpat_var "item/1261"
              expression (src/codeInliner.ml[287,8954+2]..src/codeInliner.ml[302,9395+10])
                Texp_match
                expression (src/codeInliner.ml[287,8954+8]..src/codeInliner.ml[287,8954+12])
                  Texp_ident "item/1261"
                [
                  <case>
                    pattern (src/codeInliner.ml[288,8972+4]..src/codeInliner.ml[288,8972+26])
                      Tpat_value
                      pattern (src/codeInliner.ml[288,8972+4]..src/codeInliner.ml[288,8972+26])
                        Tpat_construct "SIValDefs"
                        [
                          pattern (src/codeInliner.ml[288,8972+15]..src/codeInliner.ml[288,8972+19])
                            Tpat_construct "true"
                            []
                            None
                          pattern (src/codeInliner.ml[288,8972+21]..src/codeInliner.ml[288,8972+25])
                            Tpat_var "defs/1262"
                        ]
                        None
                    expression (src/codeInliner.ml[290,9058+6]..src/codeInliner.ml[290,9058+43])
                      Texp_construct "SIValDefs"
                      [
                        expression (src/codeInliner.ml[290,9058+17]..src/codeInliner.ml[290,9058+21])
                          Texp_construct "true"
                          []
                        expression (src/codeInliner.ml[290,9058+23]..src/codeInliner.ml[290,9058+42])
                          Texp_apply
                          expression (src/codeInliner.ml[290,9058+23]..src/codeInliner.ml[290,9058+37])
                            Texp_ident "inline_valdefs/656"
                          [
                            <arg>
                              Nolabel
                              expression (src/codeInliner.ml[290,9058+38]..src/codeInliner.ml[290,9058+42])
                                Texp_ident "defs/1262"
                          ]
                      ]
                  <case>
                    pattern (src/codeInliner.ml[291,9102+4]..src/codeInliner.ml[291,9102+25])
                      Tpat_value
                      pattern (src/codeInliner.ml[291,9102+4]..src/codeInliner.ml[291,9102+25])
                        Tpat_construct "SIFunctor"
                        [
                          pattern (src/codeInliner.ml[291,9102+15]..src/codeInliner.ml[291,9102+21])
                            Tpat_var "params/1263"
                          pattern (src/codeInliner.ml[291,9102+23]..src/codeInliner.ml[291,9102+24])
                            Tpat_var "s/1264"
                        ]
                        None
                    expression (src/codeInliner.ml[292,9131+6]..src/codeInliner.ml[292,9131+44])
                      Texp_construct "SIFunctor"
                      [
                        expression (src/codeInliner.ml[292,9131+17]..src/codeInliner.ml[292,9131+23])
                          Texp_ident "params/1263"
                        expression (src/codeInliner.ml[292,9131+25]..src/codeInliner.ml[292,9131+43])
                          Texp_apply
                          expression (src/codeInliner.ml[292,9131+25]..src/codeInliner.ml[292,9131+41])
                            Texp_ident "inline_structure/1259"
                          [
                            <arg>
                              Nolabel
                              expression (src/codeInliner.ml[292,9131+42]..src/codeInliner.ml[292,9131+43])
                                Texp_ident "s/1264"
                          ]
                      ]
                  <case>
                    pattern (src/codeInliner.ml[293,9176+4]..src/codeInliner.ml[293,9176+25])
                      Tpat_value
                      pattern (src/codeInliner.ml[293,9176+4]..src/codeInliner.ml[293,9176+25])
                        Tpat_construct "SIModuleDef"
                        [
                          pattern (src/codeInliner.ml[293,9176+17]..src/codeInliner.ml[293,9176+21])
                            Tpat_var "name/1265"
                          pattern (src/codeInliner.ml[293,9176+23]..src/codeInliner.ml[293,9176+24])
                            Tpat_var "e/1266"
                        ]
                        None
                    expression (src/codeInliner.ml[294,9205+6]..src/codeInliner.ml[294,9205+42])
                      Texp_construct "SIModuleDef"
                      [
                        expression (src/codeInliner.ml[294,9205+19]..src/codeInliner.ml[294,9205+23])
                          Texp_ident "name/1265"
                        expression (src/codeInliner.ml[294,9205+25]..src/codeInliner.ml[294,9205+41])
                          Texp_apply
                          expression (src/codeInliner.ml[294,9205+25]..src/codeInliner.ml[294,9205+39])
                            Texp_ident "inline_modexpr/1260"
                          [
                            <arg>
                              Nolabel
                              expression (src/codeInliner.ml[294,9205+40]..src/codeInliner.ml[294,9205+41])
                                Texp_ident "e/1266"
                          ]
                      ]
                  <case>
                    pattern (src/codeInliner.ml[295,9248+4]..src/codeInliner.ml[295,9248+15])
                      Tpat_value
                      pattern (src/codeInliner.ml[295,9248+4]..src/codeInliner.ml[295,9248+15])
                        Tpat_construct "SIInclude"
                        [
                          pattern (src/codeInliner.ml[295,9248+14]..src/codeInliner.ml[295,9248+15])
                            Tpat_var "e/1267"
                        ]
                        None
                    expression (src/codeInliner.ml[296,9267+6]..src/codeInliner.ml[296,9267+34])
                      Texp_construct "SIInclude"
                      [
                        expression (src/codeInliner.ml[296,9267+16]..src/codeInliner.ml[296,9267+34])
                          Texp_apply
                          expression (src/codeInliner.ml[296,9267+17]..src/codeInliner.ml[296,9267+31])
                            Texp_ident "inline_modexpr/1260"
                          [
                            <arg>
                              Nolabel
                              expression (src/codeInliner.ml[296,9267+32]..src/codeInliner.ml[296,9267+33])
                                Texp_ident "e/1267"
                          ]
                      ]
                  <case>
                    pattern (src/codeInliner.ml[297,9302+4]..src/codeInliner.ml[301,9376+15])
                      Tpat_or
                      pattern (src/codeInliner.ml[297,9302+4]..src/codeInliner.ml[300,9360+15])
                        Tpat_or
                        pattern (src/codeInliner.ml[297,9302+4]..src/codeInliner.ml[299,9335+24])
                          Tpat_or
                          pattern (src/codeInliner.ml[297,9302+4]..src/codeInliner.ml[298,9318+16])
                            Tpat_or
                            pattern (src/codeInliner.ml[297,9302+4]..src/codeInliner.ml[297,9302+15])
                              Tpat_value
                              pattern (src/codeInliner.ml[297,9302+4]..src/codeInliner.ml[297,9302+15])
                                Tpat_construct "SIExcDefs"
                                [
                                  pattern (src/codeInliner.ml[297,9302+14]..src/codeInliner.ml[297,9302+15])
                                    Tpat_any
                                ]
                                None
                            pattern (src/codeInliner.ml[298,9318+4]..src/codeInliner.ml[298,9318+16])
                              Tpat_value
                              pattern (src/codeInliner.ml[298,9318+4]..src/codeInliner.ml[298,9318+16])
                                Tpat_construct "SITypeDefs"
                                [
                                  pattern (src/codeInliner.ml[298,9318+15]..src/codeInliner.ml[298,9318+16])
                                    Tpat_any
                                ]
                                None
                          pattern (src/codeInliner.ml[299,9335+4]..src/codeInliner.ml[299,9335+24])
                            Tpat_value
                            pattern (src/codeInliner.ml[299,9335+4]..src/codeInliner.ml[299,9335+24])
                              Tpat_construct "SIValDefs"
                              [
                                pattern (src/codeInliner.ml[299,9335+15]..src/codeInliner.ml[299,9335+20])
                                  Tpat_construct "false"
                                  []
                                  None
                                pattern (src/codeInliner.ml[299,9335+22]..src/codeInliner.ml[299,9335+23])
                                  Tpat_any
                              ]
                              None
                        pattern (src/codeInliner.ml[300,9360+4]..src/codeInliner.ml[300,9360+15])
                          Tpat_value
                          pattern (src/codeInliner.ml[300,9360+4]..src/codeInliner.ml[300,9360+15])
                            Tpat_construct "SIStretch"
                            [
                              pattern (src/codeInliner.ml[300,9360+14]..src/codeInliner.ml[300,9360+15])
                                Tpat_any
                            ]
                            None
                      pattern (src/codeInliner.ml[301,9376+4]..src/codeInliner.ml[301,9376+15])
                        Tpat_value
                        pattern (src/codeInliner.ml[301,9376+4]..src/codeInliner.ml[301,9376+15])
                          Tpat_construct "SIComment"
                          [
                            pattern (src/codeInliner.ml[301,9376+14]..src/codeInliner.ml[301,9376+15])
                              Tpat_any
                          ]
                          None
                    expression (src/codeInliner.ml[302,9395+6]..src/codeInliner.ml[302,9395+10])
                      Texp_ident "item/1261"
                ]
          ]
      <def>
        pattern (src/codeInliner.ml[304,9407+4]..src/codeInliner.ml[304,9407+20])
          Tpat_var "inline_structure/1259"
        expression (src/codeInliner.ml[304,9407+21]..src/codeInliner.ml[305,9432+34]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/codeInliner.ml[304,9407+21]..src/codeInliner.ml[304,9407+22])
                Tpat_var "s/1268"
              expression (src/codeInliner.ml[305,9432+2]..src/codeInliner.ml[305,9432+34])
                Texp_apply
                expression (src/codeInliner.ml[305,9432+2]..src/codeInliner.ml[305,9432+10])
                  Texp_ident "Stdlib!.List.map"
                [
                  <arg>
                    Nolabel
                    expression (src/codeInliner.ml[305,9432+11]..src/codeInliner.ml[305,9432+32])
                      Texp_ident "inline_structure_item/1258"
                  <arg>
                    Nolabel
                    expression (src/codeInliner.ml[305,9432+33]..src/codeInliner.ml[305,9432+34])
                      Texp_ident "s/1268"
                ]
          ]
      <def>
        pattern (src/codeInliner.ml[307,9468+4]..src/codeInliner.ml[307,9468+18])
          Tpat_var "inline_modexpr/1260"
        expression (src/codeInliner.ml[307,9468+21]..src/codeInliner.ml[313,9598+49])
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/codeInliner.ml[308,9498+4]..src/codeInliner.ml[308,9498+10])
                Tpat_construct "MVar"
                [
                  pattern (src/codeInliner.ml[308,9498+9]..src/codeInliner.ml[308,9498+10])
                    Tpat_var "x/1269"
                ]
                None
              expression (src/codeInliner.ml[309,9512+6]..src/codeInliner.ml[309,9512+12])
                Texp_construct "MVar"
                [
                  expression (src/codeInliner.ml[309,9512+11]..src/codeInliner.ml[309,9512+12])
                    Texp_ident "x/1269"
                ]
            <case>
              pattern (src/codeInliner.ml[310,9525+4]..src/codeInliner.ml[310,9525+13])
                Tpat_construct "MStruct"
                [
                  pattern (src/codeInliner.ml[310,9525+12]..src/codeInliner.ml[310,9525+13])
                    Tpat_var "s/1270"
                ]
                None
              expression (src/codeInliner.ml[311,9542+6]..src/codeInliner.ml[311,9542+34])
                Texp_construct "MStruct"
                [
                  expression (src/codeInliner.ml[311,9542+14]..src/codeInliner.ml[311,9542+34])
                    Texp_apply
                    expression (src/codeInliner.ml[311,9542+15]..src/codeInliner.ml[311,9542+31])
                      Texp_ident "inline_structure/1259"
                    [
                      <arg>
                        Nolabel
                        expression (src/codeInliner.ml[311,9542+32]..src/codeInliner.ml[311,9542+33])
                          Texp_ident "s/1270"
                    ]
                ]
            <case>
              pattern (src/codeInliner.ml[312,9577+4]..src/codeInliner.ml[312,9577+17])
                Tpat_construct "MApp"
                [
                  pattern (src/codeInliner.ml[312,9577+10]..src/codeInliner.ml[312,9577+12])
                    Tpat_var "e1/1271"
                  pattern (src/codeInliner.ml[312,9577+14]..src/codeInliner.ml[312,9577+16])
                    Tpat_var "e2/1272"
                ]
                None
              expression (src/codeInliner.ml[313,9598+6]..src/codeInliner.ml[313,9598+49])
                Texp_construct "MApp"
                [
                  expression (src/codeInliner.ml[313,9598+12]..src/codeInliner.ml[313,9598+29])
                    Texp_apply
                    expression (src/codeInliner.ml[313,9598+12]..src/codeInliner.ml[313,9598+26])
                      Texp_ident "inline_modexpr/1260"
                    [
                      <arg>
                        Nolabel
                        expression (src/codeInliner.ml[313,9598+27]..src/codeInliner.ml[313,9598+29])
                          Texp_ident "e1/1271"
                    ]
                  expression (src/codeInliner.ml[313,9598+31]..src/codeInliner.ml[313,9598+48])
                    Texp_apply
                    expression (src/codeInliner.ml[313,9598+31]..src/codeInliner.ml[313,9598+45])
                      Texp_ident "inline_modexpr/1260"
                    [
                      <arg>
                        Nolabel
                        expression (src/codeInliner.ml[313,9598+46]..src/codeInliner.ml[313,9598+48])
                          Texp_ident "e2/1272"
                    ]
                ]
          ]
    ]
  structure_item (src/codeInliner.ml[317,9682+0]..src/codeInliner.ml[321,9782+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/codeInliner.ml[317,9682+4]..src/codeInliner.ml[317,9682+10])
          Tpat_var "inline/1274"
        expression (src/codeInliner.ml[317,9682+11]..src/codeInliner.ml[321,9782+5]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/codeInliner.ml[317,9682+12]..src/codeInliner.ml[317,9682+13])
                extra
                  Tpat_extra_constraint
                  core_type (src/codeInliner.ml[317,9682+16]..src/codeInliner.ml[317,9682+23])
                    Ttyp_constr "Dune__exe!.IL.program"
                    []
                Tpat_alias "p/1276"
                pattern (src/codeInliner.ml[317,9682+12]..src/codeInliner.ml[317,9682+13])
                  Tpat_any
              expression (src/codeInliner.ml[318,9719+2]..src/codeInliner.ml[321,9782+5])
                extra
                  Texp_constraint
                  core_type (src/codeInliner.ml[317,9682+27]..src/codeInliner.ml[317,9682+34])
                    Ttyp_constr "Dune__exe!.IL.program"
                    []
                Texp_ifthenelse
                expression (src/codeInliner.ml[318,9719+5]..src/codeInliner.ml[318,9719+27])
                  Texp_ident "Dune__exe!.Settings.code_inlining"
                expression (src/codeInliner.ml[319,9752+4]..src/codeInliner.ml[319,9752+22])
                  Texp_apply
                  expression (src/codeInliner.ml[319,9752+4]..src/codeInliner.ml[319,9752+20])
                    Texp_ident "inline_structure/1259"
                  [
                    <arg>
                      Nolabel
                      expression (src/codeInliner.ml[319,9752+21]..src/codeInliner.ml[319,9752+22])
                        Texp_ident "p/1276"
                  ]
                Some
                  expression (src/codeInliner.ml[321,9782+4]..src/codeInliner.ml[321,9782+5])
                    Texp_ident "p/1276"
          ]
    ]
]

{<Dune__exe__CodeInliner>
 "inline"[value] -> <Dune__exe__CodeInliner.108>;
 }

(let
  (shared/1962 =a
     [0:
      #"binding" #"bindings" #"branch" #"branches" #"eannot" #"eapp"
      #"earray" #"earrayaccess" #"ecomment" #"edata" #"efun" #"eifthen"
      #"eifthenelse" #"eintconst" #"elet" #"emagic" #"ematch" #"epatcomment"
      #"eraise" #"erecord" #"erecordaccess" #"erecordwrite" #"erepr"
      #"estringconst" #"etextual" #"etry" #"etuple" #"eunit" #"evar" #"expr"
      #"exprs" #"field" #"fields" #"fpat" #"fpats" #"pat" #"pats" #"valdef"
      #"valdefs"]
   shared/1926 =a [0: #"pvar"]
   shared/1972 =a
     [0:
      #"eapp" #"efun" #"elet" #"etry" #"evar" #"expr" #"fpat" #"eraise"
      #"bindings" #"branches" #"pats" #"pvar" #"valdef" #"epatcomment"
      #"erecordwrite" #"emagic" #"ematch" #"valdefs" #"erecord" #"edata"
      #"eifthen" #"erepr" #"eunit" #"exprs" #"etuple" #"binding" #"pat"
      #"fields" #"field" #"eannot" #"fpats" #"earray" #"eifthenelse"
      #"ecomment" #"branch" #"etextual" #"estringconst" #"earrayaccess"
      #"eintconst" #"erecordaccess"]
   shared/1965 =a
     [0:
      #"valdefs" #"valdef" #"pvar" #"pats" #"pat" #"fpats" #"fpat" #"fields"
      #"field" #"exprs" #"expr" #"evar" #"eunit" #"etuple" #"etry"
      #"etextual" #"estringconst" #"erepr" #"erecordwrite" #"erecordaccess"
      #"erecord" #"eraise" #"epatcomment" #"ematch" #"emagic" #"elet"
      #"eintconst" #"eifthenelse" #"eifthen" #"efun" #"edata" #"ecomment"
      #"earrayaccess" #"earray" #"eapp" #"eannot" #"branches" #"branch"
      #"bindings" #"binding"])
  (seq
    (setfield_ptr(root-init) 6 (global Dune__exe__CodeInliner!)
      (caml_make_vect 2 0))
    (letrec
      (locals/473
         (let
           (locals_tables/1866 =o (makemutable 0 0 0 0)
            locals_init/1923 =
              (function class/1870
                (let
                  (table/475 =o
                     (apply (field_imm 2 (global CamlinternalOO!)) class/1870
                       #"")
                   pvar/479 =
                     (apply (field_imm 6 (global CamlinternalOO!)) class/1870
                       #"pvar"))
                  (seq
                    (apply (field_imm 9 (global CamlinternalOO!)) class/1870
                      pvar/479
                      (let
                        (method_pvar/1921 =
                           (function self-1/481 locals/528 id/529
                             (let (self-*/480 =a self-1/481)
                               (if
                                 (apply
                                   (field_imm 8 (global Stdlib__Hashtbl!))
                                   (field_computed self-1/481 table/475)
                                   id/529)
                                 (apply
                                   (field_imm 1
                                     (global Dune__exe__StringSet!))
                                   id/529 locals/528)
                                 locals/528))))
                        method_pvar/1921))
                    (function env/1872 self/1871 table/474
                      (let
                        (self/1873 =
                           (apply (field_imm 23 (global CamlinternalOO!))
                             self/1871 class/1870))
                        (seq
                          (ifused table/475
                            (setfield_ptr_computed self/1873 table/475
                              table/474))
                          self/1873)))))))
           (apply (field_imm 18 (global CamlinternalOO!)) shared/1926
             locals_init/1923)))
      (setfield_ptr(root-init) 1 (global Dune__exe__CodeInliner!) locals/473))
    (let
      (inline_valdefs/656 =
         (let
           (object_tables/1932 =o (makemutable 0 0 0 0)
            object_tables/1997 =o (makemutable 0 0 0 0))
           (function defs/658
             (let
               (*match*/2030 =
                  (apply (field_imm 0 (global Dune__exe__Traverse!))
                    defs/658)
                table/660 =a (field_imm 1 *match*/2030)
                before/659 =a (field_imm 0 *match*/2030)
                queue/693 = (apply (field_imm 1 (global Stdlib__Queue!)) 0)
                usage/742 =
                  (makemutable 0
                    (field_imm 0 (global Dune__exe__StringMap!)))
                visit/812 =
                  (function locals/814 id/815 : int
                    (if
                      (apply (field_imm 29 (global Dune__exe__StringSet!))
                        id/815 locals/814)
                      0
                      (try
                        (let
                          (*match*/2023 =
                             (apply (field_imm 5 (global Stdlib__Hashtbl!))
                               table/660 id/815)
                           def/816 =a (field_imm 1 *match*/2023)
                           *match*/2024 =a (field_imm 0 *match*/2023)
                           n/817 =[int]
                             (try
                               (apply
                                 (field_imm 15
                                   (global Dune__exe__StringMap!))
                                 id/815 (field_mut 0 usage/742))
                              with exn/2019
                               (catch
                                 (if
                                   (== exn/2019
                                     (field_imm 7 (global Stdlib!)))
                                   (seq
                                     (apply
                                       (field_imm 2 (global Stdlib__Queue!))
                                       def/816 queue/693)
                                     0)
                                   (exit 29))
                                with (29) (reraise exn/2019))))
                          (setfield_ptr 0 usage/742
                            (apply
                              (field_imm 1 (global Dune__exe__StringMap!))
                              id/815 (+ n/817 1) (field_mut 0 usage/742))))
                       with exn/2018
                        (catch
                          (if (== exn/2018 (field_imm 7 (global Stdlib!))) 0
                            (exit 28))
                         with (28) (reraise exn/2018)))))
                o/818 =
                  (let (cached/2017 =a object_tables/1997)
                    (seq
                      (if (field_mut 0 cached/2017) 0
                        (let
                          (class/2001 =
                             (apply (field_imm 15 (global CamlinternalOO!))
                               shared/1972)
                           env_init/2014 =
                             (let
                               (env/1998 =o
                                  (apply
                                    (field_imm 2 (global CamlinternalOO!))
                                    class/2001 #"")
                                ids/2011 =
                                  (apply
                                    (field_imm 7 (global CamlinternalOO!))
                                    class/2001 shared/1965)
                                valdefs/901 =o (field_mut 0 ids/2011)
                                valdef/900 =o (field_mut 1 ids/2011)
                                pvar/899 =o (field_mut 2 ids/2011)
                                pats/898 =o (field_mut 3 ids/2011)
                                pat/897 =o (field_mut 4 ids/2011)
                                fpats/896 =o (field_mut 5 ids/2011)
                                fpat/895 =o (field_mut 6 ids/2011)
                                fields/894 =o (field_mut 7 ids/2011)
                                field/893 =o (field_mut 8 ids/2011)
                                exprs/892 =o (field_mut 9 ids/2011)
                                expr/891 =o (field_mut 10 ids/2011)
                                evar/890 =o (field_mut 11 ids/2011)
                                eunit/889 =o (field_mut 12 ids/2011)
                                etuple/888 =o (field_mut 13 ids/2011)
                                etry/887 =o (field_mut 14 ids/2011)
                                etextual/886 =o (field_mut 15 ids/2011)
                                estringconst/885 =o (field_mut 16 ids/2011)
                                erepr/884 =o (field_mut 17 ids/2011)
                                erecordwrite/883 =o (field_mut 18 ids/2011)
                                erecordaccess/882 =o (field_mut 19 ids/2011)
                                erecord/881 =o (field_mut 20 ids/2011)
                                eraise/880 =o (field_mut 21 ids/2011)
                                epatcomment/879 =o (field_mut 22 ids/2011)
                                ematch/878 =o (field_mut 23 ids/2011)
                                emagic/877 =o (field_mut 24 ids/2011)
                                elet/876 =o (field_mut 25 ids/2011)
                                eintconst/875 =o (field_mut 26 ids/2011)
                                eifthenelse/874 =o (field_mut 27 ids/2011)
                                eifthen/873 =o (field_mut 28 ids/2011)
                                efun/872 =o (field_mut 29 ids/2011)
                                edata/871 =o (field_mut 30 ids/2011)
                                ecomment/870 =o (field_mut 31 ids/2011)
                                earrayaccess/869 =o (field_mut 32 ids/2011)
                                earray/868 =o (field_mut 33 ids/2011)
                                eapp/867 =o (field_mut 34 ids/2011)
                                eannot/866 =o (field_mut 35 ids/2011)
                                branches/865 =o (field_mut 36 ids/2011)
                                branch/864 =o (field_mut 37 ids/2011)
                                bindings/863 =o (field_mut 38 ids/2011)
                                binding/862 =o (field_mut 39 ids/2011)
                                inh/2010 =
                                  (apply
                                    (field_imm 17 (global CamlinternalOO!))
                                    class/2001 0 shared/1926 shared/1962
                                    (field_imm 4
                                      (global Dune__exe__Traverse!))
                                    0)
                                obj_init/2006 =o (field_mut 0 inh/2010)
                                binding/822 =o (field_mut 1 inh/2010)
                                bindings/823 =o (field_mut 2 inh/2010)
                                branch/824 =o (field_mut 3 inh/2010)
                                branches/825 =o (field_mut 4 inh/2010)
                                eannot/826 =o (field_mut 5 inh/2010)
                                eapp/827 =o (field_mut 6 inh/2010)
                                earray/828 =o (field_mut 7 inh/2010)
                                earrayaccess/829 =o (field_mut 8 inh/2010)
                                ecomment/830 =o (field_mut 9 inh/2010)
                                edata/831 =o (field_mut 10 inh/2010)
                                efun/832 =o (field_mut 11 inh/2010)
                                eifthen/833 =o (field_mut 12 inh/2010)
                                eifthenelse/834 =o (field_mut 13 inh/2010)
                                eintconst/835 =o (field_mut 14 inh/2010)
                                elet/836 =o (field_mut 15 inh/2010)
                                emagic/837 =o (field_mut 16 inh/2010)
                                ematch/838 =o (field_mut 17 inh/2010)
                                epatcomment/839 =o (field_mut 18 inh/2010)
                                eraise/840 =o (field_mut 19 inh/2010)
                                erecord/841 =o (field_mut 20 inh/2010)
                                erecordaccess/842 =o (field_mut 21 inh/2010)
                                erecordwrite/843 =o (field_mut 22 inh/2010)
                                erepr/844 =o (field_mut 23 inh/2010)
                                estringconst/845 =o (field_mut 24 inh/2010)
                                etextual/846 =o (field_mut 25 inh/2010)
                                etry/847 =o (field_mut 26 inh/2010)
                                etuple/848 =o (field_mut 27 inh/2010)
                                eunit/849 =o (field_mut 28 inh/2010)
                                evar/850 =o (field_mut 29 inh/2010)
                                expr/851 =o (field_mut 30 inh/2010)
                                exprs/852 =o (field_mut 31 inh/2010)
                                field/853 =o (field_mut 32 inh/2010)
                                fields/854 =o (field_mut 33 inh/2010)
                                fpat/855 =o (field_mut 34 inh/2010)
                                fpats/856 =o (field_mut 35 inh/2010)
                                pat/857 =o (field_mut 36 inh/2010)
                                pats/858 =o (field_mut 37 inh/2010)
                                valdef/859 =o (field_mut 38 inh/2010)
                                valdefs/860 =o (field_mut 39 inh/2010)
                                inh/2009 =
                                  (apply
                                    (field_imm 17 (global CamlinternalOO!))
                                    class/2001 0 0 shared/1926
                                    (field_imm 1
                                      (global Dune__exe__CodeInliner!))
                                    0)
                                obj_init/2005 =o (field_mut 0 inh/2009)
                                pvar/861 =o (field_mut 1 inh/2009))
                               (seq
                                 (apply
                                   (field_imm 9 (global CamlinternalOO!))
                                   class/2001 evar/890
                                   (let
                                     (method_evar/2008 =
                                        (function self-2/903 locals/904
                                          param/906[int] id/905
                                          (let
                                            (env/2007 =a
                                               (field_computed self-2/903
                                                 env/1998)
                                             self-*/902 =a self-2/903)
                                            (apply (field_mut 0 env/2007)
                                              locals/904 id/905))))
                                     method_evar/2008))
                                 (function env/2003
                                   (let
                                     (env/1999 =a (field_mut 0 env/2003)
                                      env'/2000 =a (field_mut 0 env/1999)
                                      self/2004 =
                                        (apply
                                          (field_imm 23
                                            (global CamlinternalOO!))
                                          0 class/2001))
                                     (seq
                                       (seq
                                         (apply obj_init/2006
                                           (field_mut 2 env/2003) self/2004)
                                         (apply obj_init/2005
                                           (field_mut 1 env/2003) self/2004
                                           (field_mut 1 env/1999))
                                         (ifused env/1998
                                           (setfield_ptr_computed self/2004
                                             env/1998 env'/2000)))
                                       (apply
                                         (field_imm 25
                                           (global CamlinternalOO!))
                                         0 self/2004 class/2001)))))))
                          (seq
                            (apply (field_imm 16 (global CamlinternalOO!))
                              class/2001)
                            (setfield_ptr 0 cached/2017 env_init/2014))))
                      (let
                        (envs/2016 =o
                           (makeblock 0
                             (makeblock 0 (makeblock 0 visit/812) table/660)
                             (field_mut 3
                               (field_imm 1 (global Dune__exe__CodeInliner!)))
                             (field_mut 3
                               (field_imm 4 (global Dune__exe__Traverse!)))))
                        (apply (field_mut 0 cached/2017) envs/2016)))))
               (seq
                 (apply (field_imm 17 (global Stdlib__List!))
                   (function param/1002 : int
                     (let (public/973 =a (field_int 0 param/1002))
                       (if public/973
                         (let
                           (*match*/1993 =a (field_imm 2 param/1002)
                            p/974 =a (field_imm 1 param/1002))
                           (apply visit/812
                             (field_imm 0 (global Dune__exe__StringSet!))
                             (apply
                               (field_imm 19 (global Dune__exe__CodeBits!))
                               p/974)))
                         0)))
                   defs/658)
                 (apply (field_imm 17 (global Dune__exe__Misc!))
                   (sendcache o/818 -810934908
                     (field_mut 6 (global Dune__exe__CodeInliner!)) 1
                     (field_imm 0 (global Dune__exe__StringSet!)))
                   0 queue/693)
                 (let
                   (usage/1039 = (field_mut 0 usage/742)
                    queue/1040 =
                      (apply (field_imm 1 (global Stdlib__Queue!)) 0)
                    emitted/1041 =
                      (makemutable 0
                        (field_imm 0 (global Dune__exe__StringSet!)))
                    enqueue/1042 =
                      (function def/1044 : int
                        (let
                          (id/1045 =
                             (apply
                               (field_imm 19 (global Dune__exe__CodeBits!))
                               (field_imm 1 def/1044)))
                          (if
                            (not
                              (apply
                                (field_imm 29 (global Dune__exe__StringSet!))
                                id/1045 (field_mut 0 emitted/1041)))
                            (seq
                              (setfield_ptr 0 emitted/1041
                                (apply
                                  (field_imm 1
                                    (global Dune__exe__StringSet!))
                                  id/1045 (field_mut 0 emitted/1041)))
                              (apply (field_imm 2 (global Stdlib__Queue!))
                                def/1044 queue/1040))
                            0))))
                   (letrec
                     (is_simple_arg/1046
                        (function param/1048 : int
                          (catch
                            (catch
                              (switch param/1048
                               case tag 0:
                                (let
                                  (*match*/1986 =a (field_imm 0 param/1048))
                                  (exit 23))
                               case tag 11:
                                (let
                                  (*match*/1988 =a (field_imm 1 param/1048))
                                  (if (isint *match*/1988) (exit 23)
                                    (exit 24)))
                               case tag 14:
                                (let (e/1047 =a (field_imm 0 param/1048))
                                  (apply is_simple_arg/1046 e/1047))
                               case tag 17:
                                (let
                                  (*match*/1989 =a (field_imm 0 param/1048))
                                  (switch *match*/1989
                                   case tag 0:
                                    (let
                                      (*match*/1991 =a
                                         (field_imm 1 param/1048)
                                       *match*/1990 =a
                                         (field_imm 0 *match*/1989))
                                      (exit 23))
                                   default: (exit 24)))
                               default: (exit 24))
                             with (24) 0)
                           with (23) 1)))
                     (let
                       (is_simple_app/1049 =
                          (function param/1052 : int
                            (catch
                              (switch param/1052
                               case tag 2:
                                (let
                                  (*match*/1984 =a (field_imm 0 param/1052))
                                  (switch *match*/1984
                                   case tag 0:
                                    (let
                                      (actuals/1051 =a
                                         (field_imm 1 param/1052)
                                       *match*/1985 =a
                                         (field_imm 0 *match*/1984))
                                      (apply
                                        (field_imm 32 (global Stdlib__List!))
                                        is_simple_arg/1046 actuals/1051))
                                   default: (exit 22)))
                               default: (exit 22))
                             with (22) 0))
                        instance/1053 =
                          (let
                            (count/1054 = (makemutable 0 (int) 0)
                             fresh/1055 =
                               (function tv/1057
                                 (seq (+:=1 count/1054)
                                   (makeblock 0 tv/1057
                                     (apply
                                       (field_imm 3 (global Stdlib__Printf!))
                                       [0:
                                        [11: "freshtv" [4: 0 0 0 0]]
                                        "freshtv%d"]
                                       (field_int 0 count/1054))))))
                            (function scheme/1094
                              (let
                                (mapping/1095 =
                                   (apply
                                     (field_imm 19 (global Stdlib__List!))
                                     fresh/1055 (field_imm 0 scheme/1094)))
                                (letrec
                                  (sub/1096
                                     (function typ/1097
                                       (switch* typ/1097
                                        case tag 0:
                                         (let
                                           (*match*/1983 =a
                                              (field_imm 0 typ/1097))
                                           typ/1097)
                                        case tag 1:
                                         (let
                                           (v/1098 =a (field_imm 0 typ/1097))
                                           (try
                                             (makeblock 1
                                               (apply
                                                 (field_imm 48
                                                   (global Stdlib__List!))
                                                 v/1098 mapping/1095))
                                            with exn/1982
                                             (catch
                                               (if
                                                 (== exn/1982
                                                   (field_imm 7
                                                     (global Stdlib!)))
                                                 typ/1097 (exit 21))
                                              with (21) (reraise exn/1982))))
                                        case tag 2:
                                         (let
                                           (typs/1100 =a
                                              (field_imm 1 typ/1097)
                                            f/1099 =a (field_imm 0 typ/1097))
                                           (makeblock 2 f/1099
                                             (apply
                                               (field_imm 19
                                                 (global Stdlib__List!))
                                               sub/1096 typs/1100)))
                                        case tag 3:
                                         (let
                                           (typs/1101 =a
                                              (field_imm 0 typ/1097))
                                           (makeblock 3
                                             (apply
                                               (field_imm 19
                                                 (global Stdlib__List!))
                                               sub/1096 typs/1101)))
                                        case tag 4:
                                         (let
                                           (typ2/1103 =a
                                              (field_imm 1 typ/1097)
                                            typ1/1102 =a
                                              (field_imm 0 typ/1097))
                                           (makeblock 4
                                             (apply sub/1096 typ1/1102)
                                             (apply sub/1096 typ2/1103))))))
                                  (apply sub/1096 (field_imm 1 scheme/1094)))))))
                       (letrec
                         (annotate/1104
                            (function formals/1105 body/1106 typ/1107
                              (if (isint formals/1105)
                                (makeblock 0 0
                                  (apply
                                    (field_imm 18
                                      (global Dune__exe__CodeBits!))
                                    body/1106 typ/1107))
                                (let
                                  (formal/1108 =a (field_imm 0 formals/1105))
                                  (catch
                                    (switch typ/1107
                                     case tag 4:
                                      (let
                                        (tres/1111 =a (field_imm 1 typ/1107)
                                         targ/1110 =a (field_imm 0 typ/1107)
                                         formals/1109 =a
                                           (field_imm 1 formals/1105)
                                         *match*/1980 =
                                           (apply annotate/1104 formals/1109
                                             body/1106 tres/1111)
                                         body/1113 =a
                                           (field_imm 1 *match*/1980)
                                         formals/1112 =a
                                           (field_imm 0 *match*/1980))
                                        (makeblock 0
                                          (makeblock 0
                                            (makeblock 6 formal/1108
                                              targ/1110)
                                            formals/1112)
                                          body/1113))
                                     default: (exit 20))
                                   with (20)
                                    (let
                                      (*match*/1981 =a
                                         (field_imm 1 formals/1105))
                                      (raise
                                        (makeblock 0
                                          (global Assert_failure/28!)
                                          [0: "src/codeInliner.ml" 183 8]))))))))
                         (let
                           (inline/1116 =
                              (function formals/1118 actuals/1119 body/1120
                                oscheme/1121
                                (seq
                                  (if
                                    (==
                                      (apply
                                        (field_imm 0 (global Stdlib__List!))
                                        actuals/1119)
                                      (apply
                                        (field_imm 0 (global Stdlib__List!))
                                        formals/1118))
                                    0
                                    (raise
                                      (makeblock 0
                                        (global Assert_failure/28!)
                                        [0: "src/codeInliner.ml" 198 4])))
                                  (catch
                                    (if (isint oscheme/1121) (exit 16)
                                      (if
                                        (not
                                          (field_imm 1
                                            (global Dune__exe__Front!)))
                                        (let
                                          (scheme/1122 =a
                                             (field_imm 0 oscheme/1121)
                                           *match*/1976 =
                                             (apply annotate/1104
                                               formals/1118 body/1120
                                               (apply instance/1053
                                                 scheme/1122))
                                           body/1126 =a
                                             (field_imm 1 *match*/1976)
                                           formals/1125 =a
                                             (field_imm 0 *match*/1976))
                                          (apply
                                            (field_imm 21
                                              (global Dune__exe__CodeBits!))
                                            formals/1125 actuals/1119
                                            body/1126))
                                        (exit 16)))
                                   with (16)
                                    (apply
                                      (field_imm 21
                                        (global Dune__exe__CodeBits!))
                                      formals/1118 actuals/1119 body/1120))))
                            o/1127 =
                              (let (cached/1971 =a object_tables/1932)
                                (seq
                                  (if (field_mut 0 cached/1971) 0
                                    (let
                                      (class/1936 =
                                         (apply
                                           (field_imm 15
                                             (global CamlinternalOO!))
                                           shared/1972)
                                       env_init/1968 =
                                         (let
                                           (env/1933 =o
                                              (apply
                                                (field_imm 2
                                                  (global CamlinternalOO!))
                                                class/1936 #"")
                                            ids/1964 =
                                              (apply
                                                (field_imm 7
                                                  (global CamlinternalOO!))
                                                class/1936 shared/1965)
                                            valdefs/1215 =o
                                              (field_mut 0 ids/1964)
                                            valdef/1214 =o
                                              (field_mut 1 ids/1964)
                                            pvar/1213 =o
                                              (field_mut 2 ids/1964)
                                            pats/1212 =o
                                              (field_mut 3 ids/1964)
                                            pat/1211 =o
                                              (field_mut 4 ids/1964)
                                            fpats/1210 =o
                                              (field_mut 5 ids/1964)
                                            fpat/1209 =o
                                              (field_mut 6 ids/1964)
                                            fields/1208 =o
                                              (field_mut 7 ids/1964)
                                            field/1207 =o
                                              (field_mut 8 ids/1964)
                                            exprs/1206 =o
                                              (field_mut 9 ids/1964)
                                            expr/1205 =o
                                              (field_mut 10 ids/1964)
                                            evar/1204 =o
                                              (field_mut 11 ids/1964)
                                            eunit/1203 =o
                                              (field_mut 12 ids/1964)
                                            etuple/1202 =o
                                              (field_mut 13 ids/1964)
                                            etry/1201 =o
                                              (field_mut 14 ids/1964)
                                            etextual/1200 =o
                                              (field_mut 15 ids/1964)
                                            estringconst/1199 =o
                                              (field_mut 16 ids/1964)
                                            erepr/1198 =o
                                              (field_mut 17 ids/1964)
                                            erecordwrite/1197 =o
                                              (field_mut 18 ids/1964)
                                            erecordaccess/1196 =o
                                              (field_mut 19 ids/1964)
                                            erecord/1195 =o
                                              (field_mut 20 ids/1964)
                                            eraise/1194 =o
                                              (field_mut 21 ids/1964)
                                            epatcomment/1193 =o
                                              (field_mut 22 ids/1964)
                                            ematch/1192 =o
                                              (field_mut 23 ids/1964)
                                            emagic/1191 =o
                                              (field_mut 24 ids/1964)
                                            elet/1190 =o
                                              (field_mut 25 ids/1964)
                                            eintconst/1189 =o
                                              (field_mut 26 ids/1964)
                                            eifthenelse/1188 =o
                                              (field_mut 27 ids/1964)
                                            eifthen/1187 =o
                                              (field_mut 28 ids/1964)
                                            efun/1186 =o
                                              (field_mut 29 ids/1964)
                                            edata/1185 =o
                                              (field_mut 30 ids/1964)
                                            ecomment/1184 =o
                                              (field_mut 31 ids/1964)
                                            earrayaccess/1183 =o
                                              (field_mut 32 ids/1964)
                                            earray/1182 =o
                                              (field_mut 33 ids/1964)
                                            eapp/1181 =o
                                              (field_mut 34 ids/1964)
                                            eannot/1180 =o
                                              (field_mut 35 ids/1964)
                                            branches/1179 =o
                                              (field_mut 36 ids/1964)
                                            branch/1178 =o
                                              (field_mut 37 ids/1964)
                                            bindings/1177 =o
                                              (field_mut 38 ids/1964)
                                            binding/1176 =o
                                              (field_mut 39 ids/1964)
                                            inh/1963 =
                                              (apply
                                                (field_imm 17
                                                  (global CamlinternalOO!))
                                                class/1936 0 shared/1926
                                                shared/1962
                                                (field_imm 3
                                                  (global Dune__exe__Traverse!))
                                                0)
                                            obj_init/1941 =o
                                              (field_mut 0 inh/1963)
                                            binding/1134 =o
                                              (field_mut 1 inh/1963)
                                            bindings/1135 =o
                                              (field_mut 2 inh/1963)
                                            branch/1136 =o
                                              (field_mut 3 inh/1963)
                                            branches/1137 =o
                                              (field_mut 4 inh/1963)
                                            eannot/1138 =o
                                              (field_mut 5 inh/1963)
                                            eapp/1139 =o
                                              (field_mut 6 inh/1963)
                                            earray/1140 =o
                                              (field_mut 7 inh/1963)
                                            earrayaccess/1141 =o
                                              (field_mut 8 inh/1963)
                                            ecomment/1142 =o
                                              (field_mut 9 inh/1963)
                                            edata/1143 =o
                                              (field_mut 10 inh/1963)
                                            efun/1144 =o
                                              (field_mut 11 inh/1963)
                                            eifthen/1145 =o
                                              (field_mut 12 inh/1963)
                                            eifthenelse/1146 =o
                                              (field_mut 13 inh/1963)
                                            eintconst/1147 =o
                                              (field_mut 14 inh/1963)
                                            elet/1148 =o
                                              (field_mut 15 inh/1963)
                                            emagic/1149 =o
                                              (field_mut 16 inh/1963)
                                            ematch/1150 =o
                                              (field_mut 17 inh/1963)
                                            epatcomment/1151 =o
                                              (field_mut 18 inh/1963)
                                            eraise/1152 =o
                                              (field_mut 19 inh/1963)
                                            erecord/1153 =o
                                              (field_mut 20 inh/1963)
                                            erecordaccess/1154 =o
                                              (field_mut 21 inh/1963)
                                            erecordwrite/1155 =o
                                              (field_mut 22 inh/1963)
                                            erepr/1156 =o
                                              (field_mut 23 inh/1963)
                                            estringconst/1157 =o
                                              (field_mut 24 inh/1963)
                                            etextual/1158 =o
                                              (field_mut 25 inh/1963)
                                            etry/1159 =o
                                              (field_mut 26 inh/1963)
                                            etuple/1160 =o
                                              (field_mut 27 inh/1963)
                                            eunit/1161 =o
                                              (field_mut 28 inh/1963)
                                            evar/1162 =o
                                              (field_mut 29 inh/1963)
                                            expr/1163 =o
                                              (field_mut 30 inh/1963)
                                            exprs/1164 =o
                                              (field_mut 31 inh/1963)
                                            field/1165 =o
                                              (field_mut 32 inh/1963)
                                            fields/1166 =o
                                              (field_mut 33 inh/1963)
                                            fpat/1167 =o
                                              (field_mut 34 inh/1963)
                                            fpats/1168 =o
                                              (field_mut 35 inh/1963)
                                            pat/1169 =o
                                              (field_mut 36 inh/1963)
                                            pats/1170 =o
                                              (field_mut 37 inh/1963)
                                            valdef/1171 =o
                                              (field_mut 38 inh/1963)
                                            valdefs/1172 =o
                                              (field_mut 39 inh/1963)
                                            inh/1961 =
                                              (apply
                                                (field_imm 17
                                                  (global CamlinternalOO!))
                                                class/1936 0 0 shared/1926
                                                (field_imm 1
                                                  (global Dune__exe__CodeInliner!))
                                                0)
                                            obj_init/1940 =o
                                              (field_mut 0 inh/1961)
                                            pvar/1175 =o
                                              (field_mut 1 inh/1961))
                                           (seq
                                             (apply
                                               (field_imm 9
                                                 (global CamlinternalOO!))
                                               class/1936 eapp/1181
                                               (let
                                                 (method_eapp/1960 =
                                                    (function self-3/1218
                                                      locals/1219 e/1220
                                                      actuals/1221
                                                      (let
                                                        (env/1959 =a
                                                           (field_computed
                                                             self-3/1218
                                                             env/1933)
                                                         self-*/1217 =a
                                                           self-3/1218)
                                                        (catch
                                                          (switch e/1220
                                                           case tag 0:
                                                            (let
                                                              (id/1222 =a
                                                                 (field_imm 0
                                                                   e/1220))
                                                              (if
                                                                (&&
                                                                  (apply
                                                                    (field_imm 8
                                                                    (global Stdlib__Hashtbl!))
                                                                    (field_mut 0
                                                                    env/1959)
                                                                    id/1222)
                                                                  (not
                                                                    (apply
                                                                    (field_imm 29
                                                                    (global Dune__exe__StringSet!))
                                                                    id/1222
                                                                    locals/1219)))
                                                                (let
                                                                  (*match*/1957 =
                                                                    (apply
                                                                    (field_imm 5
                                                                    (global Stdlib__Hashtbl!))
                                                                    (field_mut 0
                                                                    env/1959)
                                                                    id/1222)
                                                                   def/1223 =a
                                                                    (field_imm 1
                                                                    *match*/1957)
                                                                   *match*/1958 =a
                                                                    (field_imm 0
                                                                    *match*/1957))
                                                                  (catch
                                                                    (let
                                                                    (*match*/1942 =a
                                                                    (field_int 0
                                                                    def/1223))
                                                                    (catch
                                                                    (let
                                                                    (*match*/1944 =a
                                                                    (field_imm 2
                                                                    def/1223)
                                                                    *match*/1943 =a
                                                                    (field_imm 1
                                                                    def/1223))
                                                                    (switch *match*/1944
                                                                    case tag 1:
                                                                    (let
                                                                    (body/1228 =a
                                                                    (field_imm 1
                                                                    *match*/1944)
                                                                    formals/1227 =a
                                                                    (field_imm 0
                                                                    *match*/1944)
                                                                    oscheme/1950 =
                                                                    0
                                                                    body/1949 =a
                                                                    body/1228
                                                                    formals/1948 =a
                                                                    formals/1227)
                                                                    (exit 2
                                                                    formals/1948
                                                                    body/1949
                                                                    oscheme/1950))
                                                                    case tag 13:
                                                                    (let
                                                                    (*match*/1945 =a
                                                                    (field_imm 0
                                                                    *match*/1944))
                                                                    (switch *match*/1945
                                                                    case tag 1:
                                                                    (let
                                                                    (scheme/1231 =a
                                                                    (field_imm 1
                                                                    *match*/1944)
                                                                    body/1230 =a
                                                                    (field_imm 1
                                                                    *match*/1945)
                                                                    formals/1229 =a
                                                                    (field_imm 0
                                                                    *match*/1945)
                                                                    oscheme/1953 =
                                                                    (makeblock 0
                                                                    scheme/1231)
                                                                    body/1952 =a
                                                                    body/1230
                                                                    formals/1951 =a
                                                                    formals/1229)
                                                                    (exit 2
                                                                    formals/1951
                                                                    body/1952
                                                                    oscheme/1953))
                                                                    default:
                                                                    (exit 1)))
                                                                    default:
                                                                    (exit 1)))
                                                                    with (1)
                                                                    (let
                                                                    (*match*/1947 =a
                                                                    (field_imm 2
                                                                    def/1223)
                                                                    *match*/1946 =a
                                                                    (field_imm 1
                                                                    def/1223))
                                                                    (raise
                                                                    (makeblock 0
                                                                    (global Assert_failure/28!)
                                                                    [0:
                                                                    "src/codeInliner.ml"
                                                                    236 18])))))
                                                                   with (2 formals/1224 body/1225 oscheme/1226)
                                                                    (seq
                                                                    (if
                                                                    (apply
                                                                    (field_imm 29
                                                                    (global Dune__exe__StringMap!))
                                                                    id/1222
                                                                    (field_mut 1
                                                                    env/1959))
                                                                    0
                                                                    (raise
                                                                    (makeblock 0
                                                                    (global Assert_failure/28!)
                                                                    [0:
                                                                    "src/codeInliner.ml"
                                                                    239 12])))
                                                                    (if
                                                                    (||
                                                                    (==
                                                                    (apply
                                                                    (field_imm 15
                                                                    (global Dune__exe__StringMap!))
                                                                    id/1222
                                                                    (field_mut 1
                                                                    env/1959))
                                                                    1)
                                                                    (apply
                                                                    (field_mut 3
                                                                    env/1959)
                                                                    body/1225))
                                                                    (apply
                                                                    (field_mut 4
                                                                    env/1959)
                                                                    formals/1224
                                                                    (sendself
                                                                    self-3/1218
                                                                    exprs/1206
                                                                    locals/1219
                                                                    actuals/1221)
                                                                    (makeblock 20
                                                                    id/1222
                                                                    (sendself
                                                                    self-3/1218
                                                                    expr/1205
                                                                    locals/1219
                                                                    body/1225))
                                                                    oscheme/1226)
                                                                    (seq
                                                                    (apply
                                                                    (field_mut 2
                                                                    env/1959)
                                                                    def/1223)
                                                                    (apply
                                                                    eapp/1139
                                                                    self-3/1218
                                                                    locals/1219
                                                                    e/1220
                                                                    actuals/1221))))))
                                                                (exit 12)))
                                                           default: (exit 12))
                                                         with (12)
                                                          (apply eapp/1139
                                                            self-3/1218
                                                            locals/1219
                                                            e/1220
                                                            actuals/1221)))))
                                                 method_eapp/1960))
                                             (function env/1938
                                               (let
                                                 (env/1934 =a
                                                    (field_mut 0 env/1938)
                                                  env'/1935 =a
                                                    (field_mut 0 env/1934)
                                                  self/1939 =
                                                    (apply
                                                      (field_imm 23
                                                        (global CamlinternalOO!))
                                                      0 class/1936))
                                                 (seq
                                                   (seq
                                                     (apply obj_init/1941
                                                       (field_mut 2 env/1938)
                                                       self/1939)
                                                     (apply obj_init/1940
                                                       (field_mut 1 env/1938)
                                                       self/1939
                                                       (field_mut 1 env/1934))
                                                     (ifused env/1933
                                                       (setfield_ptr_computed
                                                         self/1939 env/1933
                                                         env'/1935)))
                                                   (apply
                                                     (field_imm 25
                                                       (global CamlinternalOO!))
                                                     0 self/1939 class/1936)))))))
                                      (seq
                                        (apply
                                          (field_imm 16
                                            (global CamlinternalOO!))
                                          class/1936)
                                        (setfield_ptr 0 cached/1971
                                          env_init/1968))))
                                  (let
                                    (envs/1970 =o
                                       (makeblock 0
                                         (makeblock 0
                                           (makeblock 0 table/660 usage/1039
                                             enqueue/1042 is_simple_app/1049
                                             inline/1116)
                                           table/660)
                                         (field_mut 3
                                           (field_imm 1
                                             (global Dune__exe__CodeInliner!)))
                                         (field_mut 3
                                           (field_imm 3
                                             (global Dune__exe__Traverse!)))))
                                    (apply (field_mut 0 cached/1971)
                                      envs/1970)))))
                           (seq
                             (apply (field_imm 17 (global Stdlib__List!))
                               (function def/1233 : int
                                 (let (public/1232 =a (field_int 0 def/1233))
                                   (if public/1232
                                     (let
                                       (*match*/1928 =a
                                          (field_imm 2 def/1233)
                                        *match*/1927 =a
                                          (field_imm 1 def/1233))
                                       (apply enqueue/1042 def/1233))
                                     0)))
                               defs/658)
                             (let
                               (valdefs/1234 =
                                  (apply
                                    (field_imm 17 (global Dune__exe__Misc!))
                                    (function defs/1235 def/1236
                                      (makeblock 0
                                        (sendcache o/1127 -810934908
                                          (field_mut 6
                                            (global Dune__exe__CodeInliner!))
                                          0
                                          (field_imm 0
                                            (global Dune__exe__StringSet!))
                                          def/1236)
                                        defs/1235))
                                    0 queue/1040))
                               (seq
                                 (apply
                                   (field_imm 4 (global Dune__exe__Error!)) 1
                                   (function f/1252 : int
                                     (apply
                                       (field_imm 0 (global Stdlib__Printf!))
                                       f/1252
                                       [0:
                                        [4:
                                         0 0 0
                                         [11:
                                          " functions before inlining, "
                                          [4:
                                           0 0 0
                                           [11:
                                            " functions after inlining.\n" 0]]]]
                                        "%d functions before inlining, %d functions after inlining.\n"]
                                       before/659
                                       (apply
                                         (field_imm 0 (global Stdlib__List!))
                                         valdefs/1234))))
                                 (apply
                                   (field_imm 0 (global Dune__exe__Time!))
                                   "Inlining")
                                 valdefs/1234)))))))))))))
      (setfield_ptr(root-init) 2 (global Dune__exe__CodeInliner!)
        inline_valdefs/656))
    (letrec
      (inline_structure_item/1258
         (function item/1261
           (catch
             (switch item/1261
              case tag 0:
               (let
                 (s/1264 =a (field_imm 1 item/1261)
                  params/1263 =a (field_imm 0 item/1261))
                 (makeblock 0 params/1263
                   (apply inline_structure/1259 s/1264)))
              case tag 3:
               (let (*match*/2033 =a (field_imm 0 item/1261))
                 (if *match*/2033
                   (let (defs/1262 =a (field_imm 1 item/1261))
                     (makeblock 3 (int,*) 1
                       (apply (field_imm 2 (global Dune__exe__CodeInliner!))
                         defs/1262)))
                   (let (*match*/2034 =a (field_imm 1 item/1261)) (exit 42))))
              case tag 5:
               (let
                 (e/1266 =a (field_imm 1 item/1261)
                  name/1265 =a (field_imm 0 item/1261))
                 (makeblock 5 name/1265 (apply inline_modexpr/1260 e/1266)))
              case tag 6:
               (let (e/1267 =a (field_imm 0 item/1261))
                 (makeblock 6 (apply inline_modexpr/1260 e/1267)))
              default: (exit 42))
            with (42) item/1261))
        inline_structure/1259
          (function s/1268
            (apply (field_imm 19 (global Stdlib__List!))
              inline_structure_item/1258 s/1268))
        inline_modexpr/1260
          (function param/1273
            (switch* param/1273
             case tag 0:
              (let (x/1269 =a (field_imm 0 param/1273)) (makeblock 0 x/1269))
             case tag 1:
              (let (s/1270 =a (field_imm 0 param/1273))
                (makeblock 1 (apply inline_structure/1259 s/1270)))
             case tag 2:
              (let
                (e2/1272 =a (field_imm 1 param/1273)
                 e1/1271 =a (field_imm 0 param/1273))
                (makeblock 2 (apply inline_modexpr/1260 e1/1271)
                  (apply inline_modexpr/1260 e2/1272))))))
      (seq
        (setfield_ptr(root-init) 3 (global Dune__exe__CodeInliner!)
          inline_structure_item/1258)
        (setfield_ptr(root-init) 4 (global Dune__exe__CodeInliner!)
          inline_structure/1259)
        (setfield_ptr(root-init) 5 (global Dune__exe__CodeInliner!)
          inline_modexpr/1260)))
    (let
      (inline/1274 =
         (function p/1276
           (if (field_imm 14 (global Dune__exe__Settings!))
             (apply (field_imm 4 (global Dune__exe__CodeInliner!)) p/1276)
             p/1276)))
      (setfield_ptr(root-init) 0 (global Dune__exe__CodeInliner!)
        inline/1274))
    0))
(let
  (shared/1962 =a
     [0:
      #"binding" #"bindings" #"branch" #"branches" #"eannot" #"eapp"
      #"earray" #"earrayaccess" #"ecomment" #"edata" #"efun" #"eifthen"
      #"eifthenelse" #"eintconst" #"elet" #"emagic" #"ematch" #"epatcomment"
      #"eraise" #"erecord" #"erecordaccess" #"erecordwrite" #"erepr"
      #"estringconst" #"etextual" #"etry" #"etuple" #"eunit" #"evar" #"expr"
      #"exprs" #"field" #"fields" #"fpat" #"fpats" #"pat" #"pats" #"valdef"
      #"valdefs"]
   shared/1926 =a [0: #"pvar"]
   shared/1972 =a
     [0:
      #"eapp" #"efun" #"elet" #"etry" #"evar" #"expr" #"fpat" #"eraise"
      #"bindings" #"branches" #"pats" #"pvar" #"valdef" #"epatcomment"
      #"erecordwrite" #"emagic" #"ematch" #"valdefs" #"erecord" #"edata"
      #"eifthen" #"erepr" #"eunit" #"exprs" #"etuple" #"binding" #"pat"
      #"fields" #"field" #"eannot" #"fpats" #"earray" #"eifthenelse"
      #"ecomment" #"branch" #"etextual" #"estringconst" #"earrayaccess"
      #"eintconst" #"erecordaccess"]
   shared/1965 =a
     [0:
      #"valdefs" #"valdef" #"pvar" #"pats" #"pat" #"fpats" #"fpat" #"fields"
      #"field" #"exprs" #"expr" #"evar" #"eunit" #"etuple" #"etry"
      #"etextual" #"estringconst" #"erepr" #"erecordwrite" #"erecordaccess"
      #"erecord" #"eraise" #"epatcomment" #"ematch" #"emagic" #"elet"
      #"eintconst" #"eifthenelse" #"eifthen" #"efun" #"edata" #"ecomment"
      #"earrayaccess" #"earray" #"eapp" #"eannot" #"branches" #"branch"
      #"bindings" #"binding"])
  (seq
    (setfield_ptr(root-init) 6 (global Dune__exe__CodeInliner!)
      (caml_make_vect 2 0))
    (letrec
      (locals/473
         (let
           (locals_init/1923 =
              (function class/1870
                (let
                  (table/475 =o
                     (apply (field_imm 2 (global CamlinternalOO!)) class/1870
                       #"")
                   pvar/479 =
                     (apply (field_imm 6 (global CamlinternalOO!)) class/1870
                       #"pvar"))
                  (seq
                    (apply (field_imm 9 (global CamlinternalOO!)) class/1870
                      pvar/479
                      (function self-1/481 locals/528 id/529
                        (if
                          (apply (field_imm 8 (global Stdlib__Hashtbl!))
                            (field_computed self-1/481 table/475) id/529)
                          (apply (field_imm 1 (global Dune__exe__StringSet!))
                            id/529 locals/528)
                          locals/528)))
                    (function env/1872 self/1871 table/474
                      (let
                        (self/1873 =
                           (apply (field_imm 23 (global CamlinternalOO!))
                             self/1871 class/1870))
                        (seq
                          (setfield_ptr_computed self/1873 table/475
                            table/474)
                          self/1873)))))))
           (apply (field_imm 18 (global CamlinternalOO!)) shared/1926
             locals_init/1923)))
      (setfield_ptr(root-init) 1 (global Dune__exe__CodeInliner!) locals/473))
    (let
      (inline_valdefs/656 =
         (let
           (object_tables/1932 =o (makemutable 0 0 0 0)
            object_tables/1997 =o (makemutable 0 0 0 0))
           (function defs/658
             (let
               (*match*/2030 =
                  (apply (field_imm 0 (global Dune__exe__Traverse!))
                    defs/658)
                table/660 =a (field_imm 1 *match*/2030)
                before/659 =a (field_imm 0 *match*/2030)
                queue/693 = (apply (field_imm 1 (global Stdlib__Queue!)) 0)
                usage/742 =
                  (makemutable 0
                    (field_imm 0 (global Dune__exe__StringMap!)))
                visit/812 =
                  (function locals/814 id/815 : int
                    (if
                      (apply (field_imm 29 (global Dune__exe__StringSet!))
                        id/815 locals/814)
                      0
                      (try
                        (let
                          (*match*/2023 =
                             (apply (field_imm 5 (global Stdlib__Hashtbl!))
                               table/660 id/815)
                           n/817 =[int]
                             (try
                               (apply
                                 (field_imm 15
                                   (global Dune__exe__StringMap!))
                                 id/815 (field_mut 0 usage/742))
                              with exn/2019
                               (if
                                 (== exn/2019 (field_imm 7 (global Stdlib!)))
                                 (seq
                                   (apply
                                     (field_imm 2 (global Stdlib__Queue!))
                                     (field_imm 1 *match*/2023) queue/693)
                                   0)
                                 (reraise exn/2019))))
                          (setfield_ptr 0 usage/742
                            (apply
                              (field_imm 1 (global Dune__exe__StringMap!))
                              id/815 (+ n/817 1) (field_mut 0 usage/742))))
                       with exn/2018
                        (if (== exn/2018 (field_imm 7 (global Stdlib!))) 0
                          (reraise exn/2018)))))
                o/818 =
                  (seq
                    (if (field_mut 0 object_tables/1997) 0
                      (let
                        (class/2001 =
                           (apply (field_imm 15 (global CamlinternalOO!))
                             shared/1972)
                         env_init/2014 =
                           (let
                             (env/1998 =o
                                (apply (field_imm 2 (global CamlinternalOO!))
                                  class/2001 #"")
                              ids/2011 =
                                (apply (field_imm 7 (global CamlinternalOO!))
                                  class/2001 shared/1965)
                              evar/890 =o (field_mut 11 ids/2011)
                              inh/2010 =
                                (apply
                                  (field_imm 17 (global CamlinternalOO!))
                                  class/2001 0 shared/1926 shared/1962
                                  (field_imm 4 (global Dune__exe__Traverse!))
                                  0)
                              obj_init/2006 =o (field_mut 0 inh/2010)
                              inh/2009 =
                                (apply
                                  (field_imm 17 (global CamlinternalOO!))
                                  class/2001 0 0 shared/1926
                                  (field_imm 1
                                    (global Dune__exe__CodeInliner!))
                                  0)
                              obj_init/2005 =o (field_mut 0 inh/2009))
                             (seq
                               (apply (field_imm 9 (global CamlinternalOO!))
                                 class/2001 evar/890
                                 (function self-2/903 locals/904
                                   param/906[int] id/905
                                   (apply
                                     (field_mut 0
                                       (field_computed self-2/903 env/1998))
                                     locals/904 id/905)))
                               (function env/2003
                                 (let
                                   (env/1999 =a (field_mut 0 env/2003)
                                    self/2004 =
                                      (apply
                                        (field_imm 23
                                          (global CamlinternalOO!))
                                        0 class/2001))
                                   (seq
                                     (seq
                                       (apply obj_init/2006
                                         (field_mut 2 env/2003) self/2004)
                                       (apply obj_init/2005
                                         (field_mut 1 env/2003) self/2004
                                         (field_mut 1 env/1999))
                                       (setfield_ptr_computed self/2004
                                         env/1998 (field_mut 0 env/1999)))
                                     (apply
                                       (field_imm 25
                                         (global CamlinternalOO!))
                                       0 self/2004 class/2001)))))))
                        (seq
                          (apply (field_imm 16 (global CamlinternalOO!))
                            class/2001)
                          (setfield_ptr 0 object_tables/1997 env_init/2014))))
                    (let
                      (envs/2016 =o
                         (makeblock 0
                           (makeblock 0 (makeblock 0 visit/812) table/660)
                           (field_mut 3
                             (field_imm 1 (global Dune__exe__CodeInliner!)))
                           (field_mut 3
                             (field_imm 4 (global Dune__exe__Traverse!)))))
                      (apply (field_mut 0 object_tables/1997) envs/2016))))
               (seq
                 (apply (field_imm 17 (global Stdlib__List!))
                   (function param/1002 : int
                     (if (field_int 0 param/1002)
                       (apply visit/812
                         (field_imm 0 (global Dune__exe__StringSet!))
                         (apply (field_imm 19 (global Dune__exe__CodeBits!))
                           (field_imm 1 param/1002)))
                       0))
                   defs/658)
                 (apply (field_imm 17 (global Dune__exe__Misc!))
                   (sendcache o/818 -810934908
                     (field_mut 6 (global Dune__exe__CodeInliner!)) 1
                     (field_imm 0 (global Dune__exe__StringSet!)))
                   0 queue/693)
                 (let
                   (usage/1039 = (field_mut 0 usage/742)
                    queue/1040 =
                      (apply (field_imm 1 (global Stdlib__Queue!)) 0)
                    emitted/1041 =
                      (makemutable 0
                        (field_imm 0 (global Dune__exe__StringSet!)))
                    enqueue/1042 =
                      (function def/1044 : int
                        (let
                          (id/1045 =
                             (apply
                               (field_imm 19 (global Dune__exe__CodeBits!))
                               (field_imm 1 def/1044)))
                          (if
                            (not
                              (apply
                                (field_imm 29 (global Dune__exe__StringSet!))
                                id/1045 (field_mut 0 emitted/1041)))
                            (seq
                              (setfield_ptr 0 emitted/1041
                                (apply
                                  (field_imm 1
                                    (global Dune__exe__StringSet!))
                                  id/1045 (field_mut 0 emitted/1041)))
                              (apply (field_imm 2 (global Stdlib__Queue!))
                                def/1044 queue/1040))
                            0))))
                   (letrec
                     (is_simple_arg/1046
                        (function param/1048 : int
                          (catch
                            (catch
                              (switch param/1048
                               case tag 0: (exit 23)
                               case tag 11:
                                (if (isint (field_imm 1 param/1048))
                                  (exit 23) (exit 24))
                               case tag 14:
                                (apply is_simple_arg/1046
                                  (field_imm 0 param/1048))
                               case tag 17:
                                (switch (field_imm 0 param/1048)
                                 case tag 0: (exit 23)
                                 default: (exit 24))
                               default: (exit 24))
                             with (24) 0)
                           with (23) 1)))
                     (let
                       (is_simple_app/1049 =
                          (function param/1052 : int
                            (catch
                              (switch param/1052
                               case tag 2:
                                (switch (field_imm 0 param/1052)
                                 case tag 0:
                                  (apply
                                    (field_imm 32 (global Stdlib__List!))
                                    is_simple_arg/1046
                                    (field_imm 1 param/1052))
                                 default: (exit 22))
                               default: (exit 22))
                             with (22) 0))
                        instance/1053 =
                          (let
                            (count/1054 = (makemutable 0 (int) 0)
                             fresh/1055 =
                               (function tv/1057
                                 (seq (+:=1 count/1054)
                                   (makeblock 0 tv/1057
                                     (apply
                                       (field_imm 3 (global Stdlib__Printf!))
                                       [0:
                                        [11: "freshtv" [4: 0 0 0 0]]
                                        "freshtv%d"]
                                       (field_int 0 count/1054))))))
                            (function scheme/1094
                              (let
                                (mapping/1095 =
                                   (apply
                                     (field_imm 19 (global Stdlib__List!))
                                     fresh/1055 (field_imm 0 scheme/1094)))
                                (letrec
                                  (sub/1096
                                     (function typ/1097
                                       (switch* typ/1097
                                        case tag 0: typ/1097
                                        case tag 1:
                                         (try
                                           (makeblock 1
                                             (apply
                                               (field_imm 48
                                                 (global Stdlib__List!))
                                               (field_imm 0 typ/1097)
                                               mapping/1095))
                                          with exn/1982
                                           (if
                                             (== exn/1982
                                               (field_imm 7 (global Stdlib!)))
                                             typ/1097 (reraise exn/1982)))
                                        case tag 2:
                                         (makeblock 2 (field_imm 0 typ/1097)
                                           (apply
                                             (field_imm 19
                                               (global Stdlib__List!))
                                             sub/1096 (field_imm 1 typ/1097)))
                                        case tag 3:
                                         (makeblock 3
                                           (apply
                                             (field_imm 19
                                               (global Stdlib__List!))
                                             sub/1096 (field_imm 0 typ/1097)))
                                        case tag 4:
                                         (makeblock 4
                                           (apply sub/1096
                                             (field_imm 0 typ/1097))
                                           (apply sub/1096
                                             (field_imm 1 typ/1097))))))
                                  (apply sub/1096 (field_imm 1 scheme/1094)))))))
                       (letrec
                         (annotate/1104
                            (function formals/1105 body/1106 typ/1107
                              (if (isint formals/1105)
                                (makeblock 0 0
                                  (apply
                                    (field_imm 18
                                      (global Dune__exe__CodeBits!))
                                    body/1106 typ/1107))
                                (switch typ/1107
                                 case tag 4:
                                  (let
                                    (*match*/1980 =
                                       (apply annotate/1104
                                         (field_imm 1 formals/1105) body/1106
                                         (field_imm 1 typ/1107)))
                                    (makeblock 0
                                      (makeblock 0
                                        (makeblock 6
                                          (field_imm 0 formals/1105)
                                          (field_imm 0 typ/1107))
                                        (field_imm 0 *match*/1980))
                                      (field_imm 1 *match*/1980)))
                                 default:
                                  (raise
                                    (makeblock 0 (global Assert_failure/28!)
                                      [0: "src/codeInliner.ml" 183 8]))))))
                         (let
                           (inline/1116 =
                              (function formals/1118 actuals/1119 body/1120
                                oscheme/1121
                                (seq
                                  (if
                                    (==
                                      (apply
                                        (field_imm 0 (global Stdlib__List!))
                                        actuals/1119)
                                      (apply
                                        (field_imm 0 (global Stdlib__List!))
                                        formals/1118))
                                    0
                                    (raise
                                      (makeblock 0
                                        (global Assert_failure/28!)
                                        [0: "src/codeInliner.ml" 198 4])))
                                  (catch
                                    (if (isint oscheme/1121) (exit 16)
                                      (if
                                        (not
                                          (field_imm 1
                                            (global Dune__exe__Front!)))
                                        (let
                                          (*match*/1976 =
                                             (apply annotate/1104
                                               formals/1118 body/1120
                                               (apply instance/1053
                                                 (field_imm 0 oscheme/1121))))
                                          (apply
                                            (field_imm 21
                                              (global Dune__exe__CodeBits!))
                                            (field_imm 0 *match*/1976)
                                            actuals/1119
                                            (field_imm 1 *match*/1976)))
                                        (exit 16)))
                                   with (16)
                                    (apply
                                      (field_imm 21
                                        (global Dune__exe__CodeBits!))
                                      formals/1118 actuals/1119 body/1120))))
                            o/1127 =
                              (seq
                                (if (field_mut 0 object_tables/1932) 0
                                  (let
                                    (class/1936 =
                                       (apply
                                         (field_imm 15
                                           (global CamlinternalOO!))
                                         shared/1972)
                                     env_init/1968 =
                                       (let
                                         (env/1933 =o
                                            (apply
                                              (field_imm 2
                                                (global CamlinternalOO!))
                                              class/1936 #"")
                                          ids/1964 =
                                            (apply
                                              (field_imm 7
                                                (global CamlinternalOO!))
                                              class/1936 shared/1965)
                                          exprs/1206 =o
                                            (field_mut 9 ids/1964)
                                          expr/1205 =o
                                            (field_mut 10 ids/1964)
                                          eapp/1181 =o
                                            (field_mut 34 ids/1964)
                                          inh/1963 =
                                            (apply
                                              (field_imm 17
                                                (global CamlinternalOO!))
                                              class/1936 0 shared/1926
                                              shared/1962
                                              (field_imm 3
                                                (global Dune__exe__Traverse!))
                                              0)
                                          obj_init/1941 =o
                                            (field_mut 0 inh/1963)
                                          eapp/1139 =o (field_mut 6 inh/1963)
                                          inh/1961 =
                                            (apply
                                              (field_imm 17
                                                (global CamlinternalOO!))
                                              class/1936 0 0 shared/1926
                                              (field_imm 1
                                                (global Dune__exe__CodeInliner!))
                                              0)
                                          obj_init/1940 =o
                                            (field_mut 0 inh/1961))
                                         (seq
                                           (apply
                                             (field_imm 9
                                               (global CamlinternalOO!))
                                             class/1936 eapp/1181
                                             (function self-3/1218
                                               locals/1219 e/1220
                                               actuals/1221
                                               (let
                                                 (env/1959 =a
                                                    (field_computed
                                                      self-3/1218 env/1933))
                                                 (catch
                                                   (switch e/1220
                                                    case tag 0:
                                                     (let
                                                       (id/1222 =a
                                                          (field_imm 0
                                                            e/1220))
                                                       (if
                                                         (&&
                                                           (apply
                                                             (field_imm 8
                                                               (global Stdlib__Hashtbl!))
                                                             (field_mut 0
                                                               env/1959)
                                                             id/1222)
                                                           (not
                                                             (apply
                                                               (field_imm 29
                                                                 (global Dune__exe__StringSet!))
                                                               id/1222
                                                               locals/1219)))
                                                         (let
                                                           (*match*/1957 =
                                                              (apply
                                                                (field_imm 5
                                                                  (global Stdlib__Hashtbl!))
                                                                (field_mut 0
                                                                  env/1959)
                                                                id/1222)
                                                            def/1223 =a
                                                              (field_imm 1
                                                                *match*/1957))
                                                           (catch
                                                             (catch
                                                               (let
                                                                 (*match*/1944 =a
                                                                    (field_imm 2
                                                                    def/1223))
                                                                 (switch *match*/1944
                                                                  case tag 1:
                                                                   (let
                                                                    (oscheme/1950 =
                                                                    0)
                                                                    (exit 2
                                                                    (field_imm 0
                                                                    *match*/1944)
                                                                    (field_imm 1
                                                                    *match*/1944)
                                                                    oscheme/1950))
                                                                  case tag 13:
                                                                   (let
                                                                    (*match*/1945 =a
                                                                    (field_imm 0
                                                                    *match*/1944))
                                                                    (switch *match*/1945
                                                                    case tag 1:
                                                                    (let
                                                                    (oscheme/1953 =
                                                                    (makeblock 0
                                                                    (field_imm 1
                                                                    *match*/1944)))
                                                                    (exit 2
                                                                    (field_imm 0
                                                                    *match*/1945)
                                                                    (field_imm 1
                                                                    *match*/1945)
                                                                    oscheme/1953))
                                                                    default:
                                                                    (exit 1)))
                                                                  default:
                                                                   (exit 1)))
                                                              with (1)
                                                               (raise
                                                                 (makeblock 0
                                                                   (global Assert_failure/28!)
                                                                   [0:
                                                                    "src/codeInliner.ml"
                                                                    236 18])))
                                                            with (2 formals/1224 body/1225 oscheme/1226)
                                                             (seq
                                                               (if
                                                                 (apply
                                                                   (field_imm 29
                                                                    (global Dune__exe__StringMap!))
                                                                   id/1222
                                                                   (field_mut 1
                                                                    env/1959))
                                                                 0
                                                                 (raise
                                                                   (makeblock 0
                                                                    (global Assert_failure/28!)
                                                                    [0:
                                                                    "src/codeInliner.ml"
                                                                    239 12])))
                                                               (if
                                                                 (||
                                                                   (==
                                                                    (apply
                                                                    (field_imm 15
                                                                    (global Dune__exe__StringMap!))
                                                                    id/1222
                                                                    (field_mut 1
                                                                    env/1959))
                                                                    1)
                                                                   (apply
                                                                    (field_mut 3
                                                                    env/1959)
                                                                    body/1225))
                                                                 (apply
                                                                   (field_mut 4
                                                                    env/1959)
                                                                   formals/1224
                                                                   (sendself
                                                                    self-3/1218
                                                                    exprs/1206
                                                                    locals/1219
                                                                    actuals/1221)
                                                                   (makeblock 20
                                                                    id/1222
                                                                    (sendself
                                                                    self-3/1218
                                                                    expr/1205
                                                                    locals/1219
                                                                    body/1225))
                                                                   oscheme/1226)
                                                                 (seq
                                                                   (apply
                                                                    (field_mut 2
                                                                    env/1959)
                                                                    def/1223)
                                                                   (apply
                                                                    eapp/1139
                                                                    self-3/1218
                                                                    locals/1219
                                                                    e/1220
                                                                    actuals/1221))))))
                                                         (exit 12)))
                                                    default: (exit 12))
                                                  with (12)
                                                   (apply eapp/1139
                                                     self-3/1218 locals/1219
                                                     e/1220 actuals/1221)))))
                                           (function env/1938
                                             (let
                                               (env/1934 =a
                                                  (field_mut 0 env/1938)
                                                self/1939 =
                                                  (apply
                                                    (field_imm 23
                                                      (global CamlinternalOO!))
                                                    0 class/1936))
                                               (seq
                                                 (seq
                                                   (apply obj_init/1941
                                                     (field_mut 2 env/1938)
                                                     self/1939)
                                                   (apply obj_init/1940
                                                     (field_mut 1 env/1938)
                                                     self/1939
                                                     (field_mut 1 env/1934))
                                                   (setfield_ptr_computed
                                                     self/1939 env/1933
                                                     (field_mut 0 env/1934)))
                                                 (apply
                                                   (field_imm 25
                                                     (global CamlinternalOO!))
                                                   0 self/1939 class/1936)))))))
                                    (seq
                                      (apply
                                        (field_imm 16
                                          (global CamlinternalOO!))
                                        class/1936)
                                      (setfield_ptr 0 object_tables/1932
                                        env_init/1968))))
                                (let
                                  (envs/1970 =o
                                     (makeblock 0
                                       (makeblock 0
                                         (makeblock 0 table/660 usage/1039
                                           enqueue/1042 is_simple_app/1049
                                           inline/1116)
                                         table/660)
                                       (field_mut 3
                                         (field_imm 1
                                           (global Dune__exe__CodeInliner!)))
                                       (field_mut 3
                                         (field_imm 3
                                           (global Dune__exe__Traverse!)))))
                                  (apply (field_mut 0 object_tables/1932)
                                    envs/1970))))
                           (seq
                             (apply (field_imm 17 (global Stdlib__List!))
                               (function def/1233 : int
                                 (if (field_int 0 def/1233)
                                   (apply enqueue/1042 def/1233) 0))
                               defs/658)
                             (let
                               (valdefs/1234 =
                                  (apply
                                    (field_imm 17 (global Dune__exe__Misc!))
                                    (function defs/1235 def/1236
                                      (makeblock 0
                                        (sendcache o/1127 -810934908
                                          (field_mut 6
                                            (global Dune__exe__CodeInliner!))
                                          0
                                          (field_imm 0
                                            (global Dune__exe__StringSet!))
                                          def/1236)
                                        defs/1235))
                                    0 queue/1040))
                               (seq
                                 (apply
                                   (field_imm 4 (global Dune__exe__Error!)) 1
                                   (function f/1252 : int
                                     (apply
                                       (field_imm 0 (global Stdlib__Printf!))
                                       f/1252
                                       [0:
                                        [4:
                                         0 0 0
                                         [11:
                                          " functions before inlining, "
                                          [4:
                                           0 0 0
                                           [11:
                                            " functions after inlining.\n" 0]]]]
                                        "%d functions before inlining, %d functions after inlining.\n"]
                                       before/659
                                       (apply
                                         (field_imm 0 (global Stdlib__List!))
                                         valdefs/1234))))
                                 (apply
                                   (field_imm 0 (global Dune__exe__Time!))
                                   "Inlining")
                                 valdefs/1234)))))))))))))
      (setfield_ptr(root-init) 2 (global Dune__exe__CodeInliner!)
        inline_valdefs/656))
    (letrec
      (inline_structure_item/1258
         (function item/1261
           (catch
             (switch item/1261
              case tag 0:
               (makeblock 0 (field_imm 0 item/1261)
                 (apply inline_structure/1259 (field_imm 1 item/1261)))
              case tag 3:
               (if (field_imm 0 item/1261)
                 (makeblock 3 (int,*) 1
                   (apply (field_imm 2 (global Dune__exe__CodeInliner!))
                     (field_imm 1 item/1261)))
                 (exit 42))
              case tag 5:
               (makeblock 5 (field_imm 0 item/1261)
                 (apply inline_modexpr/1260 (field_imm 1 item/1261)))
              case tag 6:
               (makeblock 6
                 (apply inline_modexpr/1260 (field_imm 0 item/1261)))
              default: (exit 42))
            with (42) item/1261))
        inline_structure/1259
          (function s/1268
            (apply (field_imm 19 (global Stdlib__List!))
              inline_structure_item/1258 s/1268))
        inline_modexpr/1260
          (function param/1273
            (switch* param/1273
             case tag 0: (makeblock 0 (field_imm 0 param/1273))
             case tag 1:
              (makeblock 1
                (apply inline_structure/1259 (field_imm 0 param/1273)))
             case tag 2:
              (makeblock 2
                (apply inline_modexpr/1260 (field_imm 0 param/1273))
                (apply inline_modexpr/1260 (field_imm 1 param/1273))))))
      (seq
        (setfield_ptr(root-init) 3 (global Dune__exe__CodeInliner!)
          inline_structure_item/1258)
        (setfield_ptr(root-init) 4 (global Dune__exe__CodeInliner!)
          inline_structure/1259)
        (setfield_ptr(root-init) 5 (global Dune__exe__CodeInliner!)
          inline_modexpr/1260)))
    (let
      (inline/1274 =
         (function p/1276
           (if (field_imm 14 (global Dune__exe__Settings!))
             (apply (field_imm 4 (global Dune__exe__CodeInliner!)) p/1276)
             p/1276)))
      (setfield_ptr(root-init) 0 (global Dune__exe__CodeInliner!)
        inline/1274))
    0))
