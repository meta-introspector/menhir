[
  structure_item (src/PPrint.ml[23,1449+0]..[23,1449+23])
    Pstr_include    module_expr (src/PPrint.ml[23,1449+8]..[23,1449+23])
      Pmod_ident "Vendored_pprint" (src/PPrint.ml[23,1449+8]..[23,1449+23])
]

include Vendored_pprint
[
  structure_item (src/PPrint.ml[23,1449+0]..src/PPrint.ml[23,1449+23])
    Tstr_include    module_expr (src/PPrint.ml[23,1449+8]..src/PPrint.ml[23,1449+23])
      Tmod_ident "Vendored_pprint!"
]

{<Dune__exe__PPrint>
 "!^"[value] -> CU Vendored_pprint . "!^"[value];
 "OCaml"[module] -> CU Vendored_pprint . "OCaml"[module];
 "ToBuffer"[module] -> CU Vendored_pprint . "ToBuffer"[module];
 "ToChannel"[module] -> CU Vendored_pprint . "ToChannel"[module];
 "ToFormatter"[module] -> CU Vendored_pprint . "ToFormatter"[module];
 "^//^"[value] -> CU Vendored_pprint . "^//^"[value];
 "^/^"[value] -> CU Vendored_pprint . "^/^"[value];
 "^^"[value] -> CU Vendored_pprint . "^^"[value];
 "align"[value] -> CU Vendored_pprint . "align"[value];
 "ampersand"[value] -> CU Vendored_pprint . "ampersand"[value];
 "angles"[value] -> CU Vendored_pprint . "angles"[value];
 "arbitrary_string"[value] -> CU Vendored_pprint . "arbitrary_string"[value];
 "at"[value] -> CU Vendored_pprint . "at"[value];
 "backslash"[value] -> CU Vendored_pprint . "backslash"[value];
 "bang"[value] -> CU Vendored_pprint . "bang"[value];
 "bar"[value] -> CU Vendored_pprint . "bar"[value];
 "blank"[value] -> CU Vendored_pprint . "blank"[value];
 "bquote"[value] -> CU Vendored_pprint . "bquote"[value];
 "bquotes"[value] -> CU Vendored_pprint . "bquotes"[value];
 "braces"[value] -> CU Vendored_pprint . "braces"[value];
 "brackets"[value] -> CU Vendored_pprint . "brackets"[value];
 "break"[value] -> CU Vendored_pprint . "break"[value];
 "caret"[value] -> CU Vendored_pprint . "caret"[value];
 "char"[value] -> CU Vendored_pprint . "char"[value];
 "colon"[value] -> CU Vendored_pprint . "colon"[value];
 "comma"[value] -> CU Vendored_pprint . "comma"[value];
 "compact"[value] -> CU Vendored_pprint . "compact"[value];
 "concat"[value] -> CU Vendored_pprint . "concat"[value];
 "concat_map"[value] -> CU Vendored_pprint . "concat_map"[value];
 "custom"[value] -> CU Vendored_pprint . "custom"[value];
 "custom"[type] -> CU Vendored_pprint . "custom"[type];
 "custom"[class type] -> CU Vendored_pprint . "custom"[class type];
 "document"[type] -> CU Vendored_pprint . "document"[type];
 "dollar"[value] -> CU Vendored_pprint . "dollar"[value];
 "dot"[value] -> CU Vendored_pprint . "dot"[value];
 "dquote"[value] -> CU Vendored_pprint . "dquote"[value];
 "dquotes"[value] -> CU Vendored_pprint . "dquotes"[value];
 "empty"[value] -> CU Vendored_pprint . "empty"[value];
 "enclose"[value] -> CU Vendored_pprint . "enclose"[value];
 "equals"[value] -> CU Vendored_pprint . "equals"[value];
 "fancystring"[value] -> CU Vendored_pprint . "fancystring"[value];
 "fancysubstring"[value] -> CU Vendored_pprint . "fancysubstring"[value];
 "flow"[value] -> CU Vendored_pprint . "flow"[value];
 "flow_map"[value] -> CU Vendored_pprint . "flow_map"[value];
 "group"[value] -> CU Vendored_pprint . "group"[value];
 "hang"[value] -> CU Vendored_pprint . "hang"[value];
 "hardline"[value] -> CU Vendored_pprint . "hardline"[value];
 "ifflat"[value] -> CU Vendored_pprint . "ifflat"[value];
 "infinity"[value] -> CU Vendored_pprint . "infinity"[value];
 "infix"[value] -> CU Vendored_pprint . "infix"[value];
 "jump"[value] -> CU Vendored_pprint . "jump"[value];
 "langle"[value] -> CU Vendored_pprint . "langle"[value];
 "lbrace"[value] -> CU Vendored_pprint . "lbrace"[value];
 "lbracket"[value] -> CU Vendored_pprint . "lbracket"[value];
 "lines"[value] -> CU Vendored_pprint . "lines"[value];
 "lparen"[value] -> CU Vendored_pprint . "lparen"[value];
 "minus"[value] -> CU Vendored_pprint . "minus"[value];
 "nest"[value] -> CU Vendored_pprint . "nest"[value];
 "optional"[value] -> CU Vendored_pprint . "optional"[value];
 "output"[type] -> CU Vendored_pprint . "output"[type];
 "output"[class type] -> CU Vendored_pprint . "output"[class type];
 "parens"[value] -> CU Vendored_pprint . "parens"[value];
 "percent"[value] -> CU Vendored_pprint . "percent"[value];
 "plus"[value] -> CU Vendored_pprint . "plus"[value];
 "point"[type] -> CU Vendored_pprint . "point"[type];
 "precede"[value] -> CU Vendored_pprint . "precede"[value];
 "prefix"[value] -> CU Vendored_pprint . "prefix"[value];
 "pretty"[value] -> CU Vendored_pprint . "pretty"[value];
 "qmark"[value] -> CU Vendored_pprint . "qmark"[value];
 "range"[value] -> CU Vendored_pprint . "range"[value];
 "range"[type] -> CU Vendored_pprint . "range"[type];
 "rangle"[value] -> CU Vendored_pprint . "rangle"[value];
 "rbrace"[value] -> CU Vendored_pprint . "rbrace"[value];
 "rbracket"[value] -> CU Vendored_pprint . "rbracket"[value];
 "repeat"[value] -> CU Vendored_pprint . "repeat"[value];
 "requirement"[value] -> CU Vendored_pprint . "requirement"[value];
 "requirement"[type] -> CU Vendored_pprint . "requirement"[type];
 "rparen"[value] -> CU Vendored_pprint . "rparen"[value];
 "semi"[value] -> CU Vendored_pprint . "semi"[value];
 "separate"[value] -> CU Vendored_pprint . "separate"[value];
 "separate2"[value] -> CU Vendored_pprint . "separate2"[value];
 "separate_map"[value] -> CU Vendored_pprint . "separate_map"[value];
 "sharp"[value] -> CU Vendored_pprint . "sharp"[value];
 "slash"[value] -> CU Vendored_pprint . "slash"[value];
 "soft_surround"[value] -> CU Vendored_pprint . "soft_surround"[value];
 "space"[value] -> CU Vendored_pprint . "space"[value];
 "split"[value] -> CU Vendored_pprint . "split"[value];
 "squote"[value] -> CU Vendored_pprint . "squote"[value];
 "squotes"[value] -> CU Vendored_pprint . "squotes"[value];
 "star"[value] -> CU Vendored_pprint . "star"[value];
 "state"[type] -> CU Vendored_pprint . "state"[type];
 "string"[value] -> CU Vendored_pprint . "string"[value];
 "substring"[value] -> CU Vendored_pprint . "substring"[value];
 "surround"[value] -> CU Vendored_pprint . "surround"[value];
 "surround_separate"[value] ->
   CU Vendored_pprint . "surround_separate"[value];
 "surround_separate_map"[value] ->
   CU Vendored_pprint . "surround_separate_map"[value];
 "terminate"[value] -> CU Vendored_pprint . "terminate"[value];
 "tilde"[value] -> CU Vendored_pprint . "tilde"[value];
 "twice"[value] -> CU Vendored_pprint . "twice"[value];
 "underscore"[value] -> CU Vendored_pprint . "underscore"[value];
 "url"[value] -> CU Vendored_pprint . "url"[value];
 "utf8format"[value] -> CU Vendored_pprint . "utf8format"[value];
 "utf8string"[value] -> CU Vendored_pprint . "utf8string"[value];
 "words"[value] -> CU Vendored_pprint . "words"[value];
 }

(setglobal Dune__exe__PPrint!
  (let
    (include/765 =a (global Vendored_pprint!)
     empty/501 =a (field_mut 0 include/765)
     char/502 =a (field_mut 1 include/765)
     string/503 =a (field_mut 2 include/765)
     substring/504 =a (field_mut 3 include/765)
     fancystring/505 =a (field_mut 4 include/765)
     fancysubstring/506 =a (field_mut 5 include/765)
     utf8string/507 =a (field_mut 6 include/765)
     utf8format/508 =a (field_mut 7 include/765)
     hardline/509 =a (field_mut 8 include/765)
     blank/510 =a (field_mut 9 include/765)
     break/511 =a (field_mut 10 include/765)
     ^^/512 =a (field_mut 11 include/765)
     nest/513 =a (field_mut 12 include/765)
     group/514 =a (field_mut 13 include/765)
     ifflat/515 =a (field_mut 14 include/765)
     align/516 =a (field_mut 15 include/765)
     range/519 =a (field_mut 16 include/765)
     ToChannel/520 =a (field_mut 17 include/765)
     ToBuffer/521 =a (field_mut 18 include/765)
     ToFormatter/522 =a (field_mut 19 include/765)
     infinity/524 =a (field_mut 20 include/765)
     custom/530 =a (field_mut 21 include/765)
     requirement/531 =a (field_mut 22 include/765)
     pretty/532 =a (field_mut 23 include/765)
     compact/533 =a (field_mut 24 include/765)
     lparen/534 =a (field_mut 25 include/765)
     rparen/535 =a (field_mut 26 include/765)
     langle/536 =a (field_mut 27 include/765)
     rangle/537 =a (field_mut 28 include/765)
     lbrace/538 =a (field_mut 29 include/765)
     rbrace/539 =a (field_mut 30 include/765)
     lbracket/540 =a (field_mut 31 include/765)
     rbracket/541 =a (field_mut 32 include/765)
     squote/542 =a (field_mut 33 include/765)
     dquote/543 =a (field_mut 34 include/765)
     bquote/544 =a (field_mut 35 include/765)
     semi/545 =a (field_mut 36 include/765)
     colon/546 =a (field_mut 37 include/765)
     comma/547 =a (field_mut 38 include/765)
     space/548 =a (field_mut 39 include/765)
     dot/549 =a (field_mut 40 include/765)
     sharp/550 =a (field_mut 41 include/765)
     slash/551 =a (field_mut 42 include/765)
     backslash/552 =a (field_mut 43 include/765)
     equals/553 =a (field_mut 44 include/765)
     qmark/554 =a (field_mut 45 include/765)
     tilde/555 =a (field_mut 46 include/765)
     at/556 =a (field_mut 47 include/765)
     percent/557 =a (field_mut 48 include/765)
     dollar/558 =a (field_mut 49 include/765)
     caret/559 =a (field_mut 50 include/765)
     ampersand/560 =a (field_mut 51 include/765)
     star/561 =a (field_mut 52 include/765)
     plus/562 =a (field_mut 53 include/765)
     minus/563 =a (field_mut 54 include/765)
     underscore/564 =a (field_mut 55 include/765)
     bang/565 =a (field_mut 56 include/765)
     bar/566 =a (field_mut 57 include/765)
     precede/567 =a (field_mut 58 include/765)
     terminate/568 =a (field_mut 59 include/765)
     enclose/569 =a (field_mut 60 include/765)
     squotes/570 =a (field_mut 61 include/765)
     dquotes/571 =a (field_mut 62 include/765)
     bquotes/572 =a (field_mut 63 include/765)
     braces/573 =a (field_mut 64 include/765)
     parens/574 =a (field_mut 65 include/765)
     angles/575 =a (field_mut 66 include/765)
     brackets/576 =a (field_mut 67 include/765)
     twice/577 =a (field_mut 68 include/765)
     repeat/578 =a (field_mut 69 include/765)
     concat/579 =a (field_mut 70 include/765)
     separate/580 =a (field_mut 71 include/765)
     concat_map/581 =a (field_mut 72 include/765)
     separate_map/582 =a (field_mut 73 include/765)
     separate2/583 =a (field_mut 74 include/765)
     optional/584 =a (field_mut 75 include/765)
     lines/585 =a (field_mut 76 include/765)
     arbitrary_string/586 =a (field_mut 77 include/765)
     words/587 =a (field_mut 78 include/765)
     split/588 =a (field_mut 79 include/765)
     flow/589 =a (field_mut 80 include/765)
     flow_map/590 =a (field_mut 81 include/765)
     url/591 =a (field_mut 82 include/765)
     hang/592 =a (field_mut 83 include/765)
     prefix/593 =a (field_mut 84 include/765)
     jump/594 =a (field_mut 85 include/765)
     infix/595 =a (field_mut 86 include/765)
     surround/596 =a (field_mut 87 include/765)
     soft_surround/597 =a (field_mut 88 include/765)
     surround_separate/598 =a (field_mut 89 include/765)
     surround_separate_map/599 =a (field_mut 90 include/765)
     !^/600 =a (field_mut 91 include/765)
     ^/^/601 =a (field_mut 92 include/765)
     ^//^/602 =a (field_mut 93 include/765))
    (pseudo <unknown location>
      (makeblock 0 empty/501 char/502 string/503 substring/504
        fancystring/505 fancysubstring/506 utf8string/507 utf8format/508
        hardline/509 blank/510 break/511 ^^/512 nest/513 group/514 ifflat/515
        align/516 range/519 ToChannel/520 ToBuffer/521 ToFormatter/522
        infinity/524 custom/530 requirement/531 pretty/532 compact/533
        lparen/534 rparen/535 langle/536 rangle/537 lbrace/538 rbrace/539
        lbracket/540 rbracket/541 squote/542 dquote/543 bquote/544 semi/545
        colon/546 comma/547 space/548 dot/549 sharp/550 slash/551
        backslash/552 equals/553 qmark/554 tilde/555 at/556 percent/557
        dollar/558 caret/559 ampersand/560 star/561 plus/562 minus/563
        underscore/564 bang/565 bar/566 precede/567 terminate/568 enclose/569
        squotes/570 dquotes/571 bquotes/572 braces/573 parens/574 angles/575
        brackets/576 twice/577 repeat/578 concat/579 separate/580
        concat_map/581 separate_map/582 separate2/583 optional/584 lines/585
        arbitrary_string/586 words/587 split/588 flow/589 flow_map/590
        url/591 hang/592 prefix/593 jump/594 infix/595 surround/596
        soft_surround/597 surround_separate/598 surround_separate_map/599
        !^/600 ^/^/601 ^//^/602))))
(setglobal Dune__exe__PPrint!
  (let
    (include/765 =a (global Vendored_pprint!)
     empty/501 =a (field_mut 0 include/765)
     char/502 =a (field_mut 1 include/765)
     string/503 =a (field_mut 2 include/765)
     substring/504 =a (field_mut 3 include/765)
     fancystring/505 =a (field_mut 4 include/765)
     fancysubstring/506 =a (field_mut 5 include/765)
     utf8string/507 =a (field_mut 6 include/765)
     utf8format/508 =a (field_mut 7 include/765)
     hardline/509 =a (field_mut 8 include/765)
     blank/510 =a (field_mut 9 include/765)
     break/511 =a (field_mut 10 include/765)
     ^^/512 =a (field_mut 11 include/765)
     nest/513 =a (field_mut 12 include/765)
     group/514 =a (field_mut 13 include/765)
     ifflat/515 =a (field_mut 14 include/765)
     align/516 =a (field_mut 15 include/765)
     range/519 =a (field_mut 16 include/765)
     ToChannel/520 =a (field_mut 17 include/765)
     ToBuffer/521 =a (field_mut 18 include/765)
     ToFormatter/522 =a (field_mut 19 include/765)
     infinity/524 =a (field_mut 20 include/765)
     custom/530 =a (field_mut 21 include/765)
     requirement/531 =a (field_mut 22 include/765)
     pretty/532 =a (field_mut 23 include/765)
     compact/533 =a (field_mut 24 include/765)
     lparen/534 =a (field_mut 25 include/765)
     rparen/535 =a (field_mut 26 include/765)
     langle/536 =a (field_mut 27 include/765)
     rangle/537 =a (field_mut 28 include/765)
     lbrace/538 =a (field_mut 29 include/765)
     rbrace/539 =a (field_mut 30 include/765)
     lbracket/540 =a (field_mut 31 include/765)
     rbracket/541 =a (field_mut 32 include/765)
     squote/542 =a (field_mut 33 include/765)
     dquote/543 =a (field_mut 34 include/765)
     bquote/544 =a (field_mut 35 include/765)
     semi/545 =a (field_mut 36 include/765)
     colon/546 =a (field_mut 37 include/765)
     comma/547 =a (field_mut 38 include/765)
     space/548 =a (field_mut 39 include/765)
     dot/549 =a (field_mut 40 include/765)
     sharp/550 =a (field_mut 41 include/765)
     slash/551 =a (field_mut 42 include/765)
     backslash/552 =a (field_mut 43 include/765)
     equals/553 =a (field_mut 44 include/765)
     qmark/554 =a (field_mut 45 include/765)
     tilde/555 =a (field_mut 46 include/765)
     at/556 =a (field_mut 47 include/765)
     percent/557 =a (field_mut 48 include/765)
     dollar/558 =a (field_mut 49 include/765)
     caret/559 =a (field_mut 50 include/765)
     ampersand/560 =a (field_mut 51 include/765)
     star/561 =a (field_mut 52 include/765)
     plus/562 =a (field_mut 53 include/765)
     minus/563 =a (field_mut 54 include/765)
     underscore/564 =a (field_mut 55 include/765)
     bang/565 =a (field_mut 56 include/765)
     bar/566 =a (field_mut 57 include/765)
     precede/567 =a (field_mut 58 include/765)
     terminate/568 =a (field_mut 59 include/765)
     enclose/569 =a (field_mut 60 include/765)
     squotes/570 =a (field_mut 61 include/765)
     dquotes/571 =a (field_mut 62 include/765)
     bquotes/572 =a (field_mut 63 include/765)
     braces/573 =a (field_mut 64 include/765)
     parens/574 =a (field_mut 65 include/765)
     angles/575 =a (field_mut 66 include/765)
     brackets/576 =a (field_mut 67 include/765)
     twice/577 =a (field_mut 68 include/765)
     repeat/578 =a (field_mut 69 include/765)
     concat/579 =a (field_mut 70 include/765)
     separate/580 =a (field_mut 71 include/765)
     concat_map/581 =a (field_mut 72 include/765)
     separate_map/582 =a (field_mut 73 include/765)
     separate2/583 =a (field_mut 74 include/765)
     optional/584 =a (field_mut 75 include/765)
     lines/585 =a (field_mut 76 include/765)
     arbitrary_string/586 =a (field_mut 77 include/765)
     words/587 =a (field_mut 78 include/765)
     split/588 =a (field_mut 79 include/765)
     flow/589 =a (field_mut 80 include/765)
     flow_map/590 =a (field_mut 81 include/765)
     url/591 =a (field_mut 82 include/765)
     hang/592 =a (field_mut 83 include/765)
     prefix/593 =a (field_mut 84 include/765)
     jump/594 =a (field_mut 85 include/765)
     infix/595 =a (field_mut 86 include/765)
     surround/596 =a (field_mut 87 include/765)
     soft_surround/597 =a (field_mut 88 include/765)
     surround_separate/598 =a (field_mut 89 include/765)
     surround_separate_map/599 =a (field_mut 90 include/765)
     !^/600 =a (field_mut 91 include/765)
     ^/^/601 =a (field_mut 92 include/765)
     ^//^/602 =a (field_mut 93 include/765))
    (pseudo <unknown location>
      (makeblock 0 empty/501 char/502 string/503 substring/504
        fancystring/505 fancysubstring/506 utf8string/507 utf8format/508
        hardline/509 blank/510 break/511 ^^/512 nest/513 group/514 ifflat/515
        align/516 range/519 ToChannel/520 ToBuffer/521 ToFormatter/522
        infinity/524 custom/530 requirement/531 pretty/532 compact/533
        lparen/534 rparen/535 langle/536 rangle/537 lbrace/538 rbrace/539
        lbracket/540 rbracket/541 squote/542 dquote/543 bquote/544 semi/545
        colon/546 comma/547 space/548 dot/549 sharp/550 slash/551
        backslash/552 equals/553 qmark/554 tilde/555 at/556 percent/557
        dollar/558 caret/559 ampersand/560 star/561 plus/562 minus/563
        underscore/564 bang/565 bar/566 precede/567 terminate/568 enclose/569
        squotes/570 dquotes/571 bquotes/572 braces/573 parens/574 angles/575
        brackets/576 twice/577 repeat/578 concat/579 separate/580
        concat_map/581 separate_map/582 separate2/583 optional/584 lines/585
        arbitrary_string/586 words/587 split/588 flow/589 flow_map/590
        url/591 hang/592 prefix/593 jump/594 infix/595 surround/596
        soft_surround/597 surround_separate/598 surround_separate_map/599
        !^/600 ^/^/601 ^//^/602))))
