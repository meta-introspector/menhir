[
  structure_item (src/action.ml[14,996+0]..[14,996+12])
    Pstr_open Fresh
    module_expr (src/action.ml[14,996+5]..[14,996+12])
      Pmod_ident "Keyword" (src/action.ml[14,996+5]..[14,996+12])
  structure_item (src/action.ml[16,1010+0]..[35,1674+1])
    Pstr_type Rec
    [
      type_declaration "t" (src/action.ml[16,1010+5]..[16,1010+6]) (src/action.ml[16,1010+0]..[35,1674+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (src/action.ml[19,1065+2]..[19,1065+16])
                Immutable
                "expr" (src/action.ml[19,1065+2]..[19,1065+6])                core_type (src/action.ml[19,1065+8]..[19,1065+15])
                  Ptyp_constr "IL.expr" (src/action.ml[19,1065+8]..[19,1065+15])
                  []
              (src/action.ml[24,1303+2]..[24,1303+17])
                Immutable
                "standard" (src/action.ml[24,1303+2]..[24,1303+10])                core_type (src/action.ml[24,1303+12]..[24,1303+16])
                  Ptyp_constr "bool" (src/action.ml[24,1303+12]..[24,1303+16])
                  []
              (src/action.ml[28,1441+2]..[28,1441+23])
                Immutable
                "semvars" (src/action.ml[28,1441+2]..[28,1441+9])                core_type (src/action.ml[28,1441+11]..[28,1441+22])
                  Ptyp_constr "StringSet.t" (src/action.ml[28,1441+11]..[28,1441+22])
                  []
              (src/action.ml[33,1645+2]..[33,1645+27])
                Immutable
                "keywords" (src/action.ml[33,1645+2]..[33,1645+10])                core_type (src/action.ml[33,1645+14]..[33,1645+26])
                  Ptyp_constr "KeywordSet.t" (src/action.ml[33,1645+14]..[33,1645+26])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/action.ml[41,1780+0]..[47,1992+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[41,1780+4]..[41,1780+16])
          Ppat_var "from_stretch" (src/action.ml[41,1780+4]..[41,1780+16])
        expression (src/action.ml[41,1780+17]..[47,1992+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[41,1780+17]..[41,1780+19])
            Ppat_var "xs" (src/action.ml[41,1780+17]..[41,1780+19])
          expression (src/action.ml[41,1780+20]..[47,1992+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/action.ml[41,1780+20]..[41,1780+21])
              Ppat_var "s" (src/action.ml[41,1780+20]..[41,1780+21])
            expression (src/action.ml[42,1804+2]..[47,1992+3])
              Pexp_record
              [
                "expr" (src/action.ml[43,1808+4]..[43,1808+8])
                  expression (src/action.ml[43,1808+16]..[43,1808+29])
                    Pexp_construct "IL.ETextual" (src/action.ml[43,1808+16]..[43,1808+27])
                    Some
                      expression (src/action.ml[43,1808+28]..[43,1808+29])
                        Pexp_ident "s" (src/action.ml[43,1808+28]..[43,1808+29])
                "standard" (src/action.ml[44,1839+4]..[44,1839+12])
                  expression (src/action.ml[44,1839+16]..[44,1839+69])
                    Pexp_apply
                    expression (src/action.ml[44,1839+43]..[44,1839+44])
                      Pexp_ident "=" (src/action.ml[44,1839+43]..[44,1839+44])
                    [
                      <arg>
                      Nolabel
                        expression (src/action.ml[44,1839+16]..[44,1839+42])
                          Pexp_field
                          expression (src/action.ml[44,1839+16]..[44,1839+17])
                            Pexp_ident "s" (src/action.ml[44,1839+16]..[44,1839+17])
                          "Stretch.stretch_filename" (src/action.ml[44,1839+18]..[44,1839+42])
                      <arg>
                      Nolabel
                        expression (src/action.ml[44,1839+45]..[44,1839+69])
                          Pexp_ident "Settings.stdlib_filename" (src/action.ml[44,1839+45]..[44,1839+69])
                    ]
                "semvars" (src/action.ml[45,1910+4]..[45,1910+11])
                  expression (src/action.ml[45,1910+16]..[45,1910+18])
                    Pexp_ident "xs" (src/action.ml[45,1910+16]..[45,1910+18])
                "keywords" (src/action.ml[46,1930+4]..[46,1930+12])
                  expression (src/action.ml[46,1930+16]..[46,1930+61])
                    Pexp_apply
                    expression (src/action.ml[46,1930+16]..[46,1930+34])
                      Pexp_ident "KeywordSet.of_list" (src/action.ml[46,1930+16]..[46,1930+34])
                    [
                      <arg>
                      Nolabel
                        expression (src/action.ml[46,1930+35]..[46,1930+61])
                          Pexp_field
                          expression (src/action.ml[46,1930+35]..[46,1930+36])
                            Pexp_ident "s" (src/action.ml[46,1930+35]..[46,1930+36])
                          "Stretch.stretch_keywords" (src/action.ml[46,1930+37]..[46,1930+61])
                    ]
              ]
              None
    ]
  structure_item (src/action.ml[49,1997+0]..[78,2806+37])
    Pstr_value Rec
    [
      <def>
        pattern (src/action.ml[49,1997+8]..[49,1997+20])
          Ppat_var "from_il_expr" (src/action.ml[49,1997+8]..[49,1997+20])
        expression (src/action.ml[49,1997+21]..[55,2123+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[49,1997+21]..[49,1997+22])
            Ppat_var "e" (src/action.ml[49,1997+21]..[49,1997+22])
          expression (src/action.ml[50,2022+2]..[55,2123+3])
            Pexp_record
            [
              "expr" (src/action.ml[51,2026+4]..[51,2026+8])
                expression (src/action.ml[51,2026+16]..[51,2026+17])
                  Pexp_ident "e" (src/action.ml[51,2026+16]..[51,2026+17])
              "standard" (src/action.ml[52,2045+4]..[52,2045+12])
                expression (src/action.ml[52,2045+16]..[52,2045+20])
                  Pexp_construct "true" (src/action.ml[52,2045+16]..[52,2045+20])
                  None
              "semvars" (src/action.ml[53,2067+4]..[53,2067+11])
                expression (src/action.ml[53,2067+16]..[53,2067+20])
                  Pexp_apply
                  expression (src/action.ml[53,2067+16]..[53,2067+18])
                    Pexp_ident "fv" (src/action.ml[53,2067+16]..[53,2067+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/action.ml[53,2067+19]..[53,2067+20])
                        Pexp_ident "e" (src/action.ml[53,2067+19]..[53,2067+20])
                  ]
              "keywords" (src/action.ml[54,2089+4]..[54,2089+12])
                expression (src/action.ml[54,2089+16]..[54,2089+32])
                  Pexp_ident "KeywordSet.empty" (src/action.ml[54,2089+16]..[54,2089+32])
            ]
            None
      <def>
        pattern (src/action.ml[60,2228+4]..[60,2228+6])
          Ppat_var "fv" (src/action.ml[60,2228+4]..[60,2228+6])
        expression (src/action.ml[60,2228+7]..[61,2239+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[60,2228+7]..[60,2228+8])
            Ppat_var "e" (src/action.ml[60,2228+7]..[60,2228+8])
          expression (src/action.ml[61,2239+2]..[61,2239+26])
            Pexp_apply
            expression (src/action.ml[61,2239+2]..[61,2239+8])
              Pexp_ident "fv_aux" (src/action.ml[61,2239+2]..[61,2239+8])
            [
              <arg>
              Nolabel
                expression (src/action.ml[61,2239+9]..[61,2239+24])
                  Pexp_ident "StringSet.empty" (src/action.ml[61,2239+9]..[61,2239+24])
              <arg>
              Nolabel
                expression (src/action.ml[61,2239+25]..[61,2239+26])
                  Pexp_ident "e" (src/action.ml[61,2239+25]..[61,2239+26])
            ]
      <def>
        pattern (src/action.ml[63,2267+4]..[63,2267+10])
          Ppat_var "fv_aux" (src/action.ml[63,2267+4]..[63,2267+10])
        expression (src/action.ml[63,2267+11]..[78,2806+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[63,2267+11]..[63,2267+15])
            Ppat_var "accu" (src/action.ml[63,2267+11]..[63,2267+15])
          expression (src/action.ml[63,2267+16]..[78,2806+37]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/action.ml[63,2267+16]..[63,2267+17])
              Ppat_var "e" (src/action.ml[63,2267+16]..[63,2267+17])
            expression (src/action.ml[64,2287+2]..[78,2806+37])
              Pexp_open Fresh
              module_expr (src/action.ml[64,2287+2]..[64,2287+4])
                Pmod_ident "IL" (src/action.ml[64,2287+2]..[64,2287+4])
              expression (src/action.ml[64,2287+6]..[78,2806+18])
                Pexp_match
                expression (src/action.ml[64,2287+12]..[64,2287+13])
                  Pexp_ident "e" (src/action.ml[64,2287+12]..[64,2287+13])
                [
                  <case>
                    pattern (src/action.ml[65,2306+4]..[65,2306+10])
                      Ppat_construct "EVar" (src/action.ml[65,2306+4]..[65,2306+8])
                      Some
                        []
                        pattern (src/action.ml[65,2306+9]..[65,2306+10])
                          Ppat_var "x" (src/action.ml[65,2306+9]..[65,2306+10])
                    expression (src/action.ml[66,2320+6]..[66,2320+26])
                      Pexp_apply
                      expression (src/action.ml[66,2320+6]..[66,2320+19])
                        Pexp_ident "StringSet.add" (src/action.ml[66,2320+6]..[66,2320+19])
                      [
                        <arg>
                        Nolabel
                          expression (src/action.ml[66,2320+20]..[66,2320+21])
                            Pexp_ident "x" (src/action.ml[66,2320+20]..[66,2320+21])
                        <arg>
                        Nolabel
                          expression (src/action.ml[66,2320+22]..[66,2320+26])
                            Pexp_ident "accu" (src/action.ml[66,2320+22]..[66,2320+26])
                      ]
                  <case>
                    pattern (src/action.ml[67,2347+4]..[67,2347+14])
                      Ppat_construct "ETextual" (src/action.ml[67,2347+4]..[67,2347+12])
                      Some
                        []
                        pattern (src/action.ml[67,2347+13]..[67,2347+14])
                          Ppat_any
                    expression (src/action.ml[72,2670+6]..[72,2670+10])
                      Pexp_ident "accu" (src/action.ml[72,2670+6]..[72,2670+10])
                  <case>
                    pattern (src/action.ml[73,2681+4]..[73,2681+13])
                      Ppat_construct "ETuple" (src/action.ml[73,2681+4]..[73,2681+10])
                      Some
                        []
                        pattern (src/action.ml[73,2681+11]..[73,2681+13])
                          Ppat_var "es" (src/action.ml[73,2681+11]..[73,2681+13])
                    expression (src/action.ml[74,2698+6]..[74,2698+35])
                      Pexp_apply
                      expression (src/action.ml[74,2698+6]..[74,2698+20])
                        Pexp_ident "List.fold_left" (src/action.ml[74,2698+6]..[74,2698+20])
                      [
                        <arg>
                        Nolabel
                          expression (src/action.ml[74,2698+21]..[74,2698+27])
                            Pexp_ident "fv_aux" (src/action.ml[74,2698+21]..[74,2698+27])
                        <arg>
                        Nolabel
                          expression (src/action.ml[74,2698+28]..[74,2698+32])
                            Pexp_ident "accu" (src/action.ml[74,2698+28]..[74,2698+32])
                        <arg>
                        Nolabel
                          expression (src/action.ml[74,2698+33]..[74,2698+35])
                            Pexp_ident "es" (src/action.ml[74,2698+33]..[74,2698+35])
                      ]
                  <case>
                    pattern (src/action.ml[75,2734+4]..[75,2734+16])
                      Ppat_construct "EApp" (src/action.ml[75,2734+4]..[75,2734+8])
                      Some
                        []
                        pattern (src/action.ml[75,2734+9]..[75,2734+16])
                          Ppat_tuple
                          [
                            pattern (src/action.ml[75,2734+10]..[75,2734+11])
                              Ppat_var "e" (src/action.ml[75,2734+10]..[75,2734+11])
                            pattern (src/action.ml[75,2734+13]..[75,2734+15])
                              Ppat_var "es" (src/action.ml[75,2734+13]..[75,2734+15])
                          ]
                    expression (src/action.ml[76,2754+6]..[76,2754+42])
                      Pexp_apply
                      expression (src/action.ml[76,2754+6]..[76,2754+20])
                        Pexp_ident "List.fold_left" (src/action.ml[76,2754+6]..[76,2754+20])
                      [
                        <arg>
                        Nolabel
                          expression (src/action.ml[76,2754+21]..[76,2754+27])
                            Pexp_ident "fv_aux" (src/action.ml[76,2754+21]..[76,2754+27])
                        <arg>
                        Nolabel
                          expression (src/action.ml[76,2754+28]..[76,2754+32])
                            Pexp_ident "accu" (src/action.ml[76,2754+28]..[76,2754+32])
                        <arg>
                        Nolabel
                          expression (src/action.ml[76,2754+33]..[76,2754+42])
                            Pexp_construct "::" (src/action.ml[76,2754+36]..[76,2754+38])
                            Some
                              expression (src/action.ml[76,2754+34]..[76,2754+41]) ghost
                                Pexp_tuple
                                [
                                  expression (src/action.ml[76,2754+34]..[76,2754+35])
                                    Pexp_ident "e" (src/action.ml[76,2754+34]..[76,2754+35])
                                  expression (src/action.ml[76,2754+39]..[76,2754+41])
                                    Pexp_ident "es" (src/action.ml[76,2754+39]..[76,2754+41])
                                ]
                      ]
                  <case>
                    pattern (src/action.ml[77,2797+4]..[77,2797+5])
                      Ppat_any
                    expression (src/action.ml[78,2806+6]..[78,2806+18])
                      Pexp_assert
                      expression (src/action.ml[78,2806+13]..[78,2806+18])
                        Pexp_construct "false" (src/action.ml[78,2806+13]..[78,2806+18])
                        None
                ]
    ]
  structure_item (src/action.ml[84,2963+0]..[94,3521+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[84,2963+4]..[84,2963+11])
          Ppat_var "compose" (src/action.ml[84,2963+4]..[84,2963+11])
        expression (src/action.ml[84,2963+12]..[94,3521+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[84,2963+12]..[84,2963+13])
            Ppat_var "x" (src/action.ml[84,2963+12]..[84,2963+13])
          expression (src/action.ml[84,2963+14]..[94,3521+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/action.ml[84,2963+14]..[84,2963+16])
              Ppat_var "a1" (src/action.ml[84,2963+14]..[84,2963+16])
            expression (src/action.ml[84,2963+17]..[94,3521+3]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/action.ml[84,2963+17]..[84,2963+19])
                Ppat_var "a2" (src/action.ml[84,2963+17]..[84,2963+19])
              expression (src/action.ml[89,3274+2]..[94,3521+3])
                Pexp_record
                [
                  "expr" (src/action.ml[90,3278+4]..[90,3278+8])
                    expression (src/action.ml[90,3278+16]..[90,3278+63])
                      Pexp_apply
                      expression (src/action.ml[90,3278+16]..[90,3278+29])
                        Pexp_ident "CodeBits.blet" (src/action.ml[90,3278+16]..[90,3278+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/action.ml[90,3278+30]..[90,3278+63])
                            Pexp_tuple
                            [
                              expression (src/action.ml[90,3278+31]..[90,3278+53])
                                Pexp_construct "::" (src/action.ml[90,3278+33]..[90,3278+53]) ghost
                                Some
                                  expression (src/action.ml[90,3278+33]..[90,3278+53]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/action.ml[90,3278+33]..[90,3278+51])
                                        Pexp_tuple
                                        [
                                          expression (src/action.ml[90,3278+33]..[90,3278+42])
                                            Pexp_construct "IL.PVar" (src/action.ml[90,3278+33]..[90,3278+40])
                                            Some
                                              expression (src/action.ml[90,3278+41]..[90,3278+42])
                                                Pexp_ident "x" (src/action.ml[90,3278+41]..[90,3278+42])
                                          expression (src/action.ml[90,3278+44]..[90,3278+51])
                                            Pexp_field
                                            expression (src/action.ml[90,3278+44]..[90,3278+46])
                                              Pexp_ident "a1" (src/action.ml[90,3278+44]..[90,3278+46])
                                            "expr" (src/action.ml[90,3278+47]..[90,3278+51])
                                        ]
                                      expression (src/action.ml[90,3278+52]..[90,3278+53]) ghost
                                        Pexp_construct "[]" (src/action.ml[90,3278+52]..[90,3278+53]) ghost
                                        None
                                    ]
                              expression (src/action.ml[90,3278+55]..[90,3278+62])
                                Pexp_field
                                expression (src/action.ml[90,3278+55]..[90,3278+57])
                                  Pexp_ident "a2" (src/action.ml[90,3278+55]..[90,3278+57])
                                "expr" (src/action.ml[90,3278+58]..[90,3278+62])
                            ]
                      ]
                  "semvars" (src/action.ml[91,3343+4]..[91,3343+11])
                    expression (src/action.ml[91,3343+16]..[91,3343+74])
                      Pexp_apply
                      expression (src/action.ml[91,3343+16]..[91,3343+31])
                        Pexp_ident "StringSet.union" (src/action.ml[91,3343+16]..[91,3343+31])
                      [
                        <arg>
                        Nolabel
                          expression (src/action.ml[91,3343+32]..[91,3343+42])
                            Pexp_field
                            expression (src/action.ml[91,3343+32]..[91,3343+34])
                              Pexp_ident "a1" (src/action.ml[91,3343+32]..[91,3343+34])
                            "semvars" (src/action.ml[91,3343+35]..[91,3343+42])
                        <arg>
                        Nolabel
                          expression (src/action.ml[91,3343+43]..[91,3343+74])
                            Pexp_apply
                            expression (src/action.ml[91,3343+44]..[91,3343+60])
                              Pexp_ident "StringSet.remove" (src/action.ml[91,3343+44]..[91,3343+60])
                            [
                              <arg>
                              Nolabel
                                expression (src/action.ml[91,3343+61]..[91,3343+62])
                                  Pexp_ident "x" (src/action.ml[91,3343+61]..[91,3343+62])
                              <arg>
                              Nolabel
                                expression (src/action.ml[91,3343+63]..[91,3343+73])
                                  Pexp_field
                                  expression (src/action.ml[91,3343+63]..[91,3343+65])
                                    Pexp_ident "a2" (src/action.ml[91,3343+63]..[91,3343+65])
                                  "semvars" (src/action.ml[91,3343+66]..[91,3343+73])
                            ]
                      ]
                  "keywords" (src/action.ml[92,3419+4]..[92,3419+12])
                    expression (src/action.ml[92,3419+16]..[92,3419+56])
                      Pexp_apply
                      expression (src/action.ml[92,3419+16]..[92,3419+32])
                        Pexp_ident "KeywordSet.union" (src/action.ml[92,3419+16]..[92,3419+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/action.ml[92,3419+33]..[92,3419+44])
                            Pexp_field
                            expression (src/action.ml[92,3419+33]..[92,3419+35])
                              Pexp_ident "a1" (src/action.ml[92,3419+33]..[92,3419+35])
                            "keywords" (src/action.ml[92,3419+36]..[92,3419+44])
                        <arg>
                        Nolabel
                          expression (src/action.ml[92,3419+45]..[92,3419+56])
                            Pexp_field
                            expression (src/action.ml[92,3419+45]..[92,3419+47])
                              Pexp_ident "a2" (src/action.ml[92,3419+45]..[92,3419+47])
                            "keywords" (src/action.ml[92,3419+48]..[92,3419+56])
                      ]
                  "standard" (src/action.ml[93,3477+4]..[93,3477+12])
                    expression (src/action.ml[93,3477+16]..[93,3477+42])
                      Pexp_apply
                      expression (src/action.ml[93,3477+28]..[93,3477+30])
                        Pexp_ident "&&" (src/action.ml[93,3477+28]..[93,3477+30])
                      [
                        <arg>
                        Nolabel
                          expression (src/action.ml[93,3477+16]..[93,3477+27])
                            Pexp_field
                            expression (src/action.ml[93,3477+16]..[93,3477+18])
                              Pexp_ident "a1" (src/action.ml[93,3477+16]..[93,3477+18])
                            "standard" (src/action.ml[93,3477+19]..[93,3477+27])
                        <arg>
                        Nolabel
                          expression (src/action.ml[93,3477+31]..[93,3477+42])
                            Pexp_field
                            expression (src/action.ml[93,3477+31]..[93,3477+33])
                              Pexp_ident "a2" (src/action.ml[93,3477+31]..[93,3477+33])
                            "standard" (src/action.ml[93,3477+34]..[93,3477+42])
                      ]
                ]
                None
    ]
  structure_item (src/action.ml[98,3560+0]..[122,4116+37])
    Pstr_value Rec
    [
      <def>
        pattern (src/action.ml[98,3560+8]..[98,3560+12])
          Ppat_var "bind" (src/action.ml[98,3560+8]..[98,3560+12])
        expression (src/action.ml[98,3560+13]..[104,3766+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[98,3560+13]..[98,3560+14])
            Ppat_var "p" (src/action.ml[98,3560+13]..[98,3560+14])
          expression (src/action.ml[98,3560+15]..[104,3766+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/action.ml[98,3560+15]..[98,3560+16])
              Ppat_var "x" (src/action.ml[98,3560+15]..[98,3560+16])
            expression (src/action.ml[98,3560+17]..[104,3766+3]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/action.ml[98,3560+17]..[98,3560+18])
                Ppat_var "a" (src/action.ml[98,3560+17]..[98,3560+18])
              expression (src/action.ml[99,3581+2]..[104,3766+3])
                Pexp_record
                [
                  "expr" (src/action.ml[100,3585+4]..[100,3585+8])
                    expression (src/action.ml[100,3585+16]..[100,3585+56])
                      Pexp_apply
                      expression (src/action.ml[100,3585+16]..[100,3585+29])
                        Pexp_ident "CodeBits.blet" (src/action.ml[100,3585+16]..[100,3585+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/action.ml[100,3585+30]..[100,3585+56])
                            Pexp_tuple
                            [
                              expression (src/action.ml[100,3585+31]..[100,3585+47])
                                Pexp_construct "::" (src/action.ml[100,3585+33]..[100,3585+47]) ghost
                                Some
                                  expression (src/action.ml[100,3585+33]..[100,3585+47]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/action.ml[100,3585+33]..[100,3585+45])
                                        Pexp_tuple
                                        [
                                          expression (src/action.ml[100,3585+33]..[100,3585+34])
                                            Pexp_ident "p" (src/action.ml[100,3585+33]..[100,3585+34])
                                          expression (src/action.ml[100,3585+36]..[100,3585+45])
                                            Pexp_construct "IL.EVar" (src/action.ml[100,3585+36]..[100,3585+43])
                                            Some
                                              expression (src/action.ml[100,3585+44]..[100,3585+45])
                                                Pexp_ident "x" (src/action.ml[100,3585+44]..[100,3585+45])
                                        ]
                                      expression (src/action.ml[100,3585+46]..[100,3585+47]) ghost
                                        Pexp_construct "[]" (src/action.ml[100,3585+46]..[100,3585+47]) ghost
                                        None
                                    ]
                              expression (src/action.ml[100,3585+49]..[100,3585+55])
                                Pexp_field
                                expression (src/action.ml[100,3585+49]..[100,3585+50])
                                  Pexp_ident "a" (src/action.ml[100,3585+49]..[100,3585+50])
                                "expr" (src/action.ml[100,3585+51]..[100,3585+55])
                            ]
                      ]
                  "semvars" (src/action.ml[101,3643+4]..[101,3643+11])
                    expression (src/action.ml[101,3643+16]..[101,3643+65])
                      Pexp_apply
                      expression (src/action.ml[101,3643+16]..[101,3643+29])
                        Pexp_ident "StringSet.add" (src/action.ml[101,3643+16]..[101,3643+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/action.ml[101,3643+30]..[101,3643+31])
                            Pexp_ident "x" (src/action.ml[101,3643+30]..[101,3643+31])
                        <arg>
                        Nolabel
                          expression (src/action.ml[101,3643+32]..[101,3643+65])
                            Pexp_apply
                            expression (src/action.ml[101,3643+33]..[101,3643+47])
                              Pexp_ident "StringSet.diff" (src/action.ml[101,3643+33]..[101,3643+47])
                            [
                              <arg>
                              Nolabel
                                expression (src/action.ml[101,3643+48]..[101,3643+57])
                                  Pexp_field
                                  expression (src/action.ml[101,3643+48]..[101,3643+49])
                                    Pexp_ident "a" (src/action.ml[101,3643+48]..[101,3643+49])
                                  "semvars" (src/action.ml[101,3643+50]..[101,3643+57])
                              <arg>
                              Nolabel
                                expression (src/action.ml[101,3643+58]..[101,3643+64])
                                  Pexp_apply
                                  expression (src/action.ml[101,3643+59]..[101,3643+61])
                                    Pexp_ident "bv" (src/action.ml[101,3643+59]..[101,3643+61])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/action.ml[101,3643+62]..[101,3643+63])
                                        Pexp_ident "p" (src/action.ml[101,3643+62]..[101,3643+63])
                                  ]
                            ]
                      ]
                  "keywords" (src/action.ml[102,3710+4]..[102,3710+12])
                    expression (src/action.ml[102,3710+16]..[102,3710+26])
                      Pexp_field
                      expression (src/action.ml[102,3710+16]..[102,3710+17])
                        Pexp_ident "a" (src/action.ml[102,3710+16]..[102,3710+17])
                      "keywords" (src/action.ml[102,3710+18]..[102,3710+26])
                  "standard" (src/action.ml[103,3738+4]..[103,3738+12])
                    expression (src/action.ml[103,3738+16]..[103,3738+26])
                      Pexp_field
                      expression (src/action.ml[103,3738+16]..[103,3738+17])
                        Pexp_ident "a" (src/action.ml[103,3738+16]..[103,3738+17])
                      "standard" (src/action.ml[103,3738+18]..[103,3738+26])
                ]
                None
      <def>
        pattern (src/action.ml[109,3897+4]..[109,3897+6])
          Ppat_var "bv" (src/action.ml[109,3897+4]..[109,3897+6])
        expression (src/action.ml[109,3897+7]..[110,3908+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[109,3897+7]..[109,3897+8])
            Ppat_var "p" (src/action.ml[109,3897+7]..[109,3897+8])
          expression (src/action.ml[110,3908+2]..[110,3908+26])
            Pexp_apply
            expression (src/action.ml[110,3908+2]..[110,3908+8])
              Pexp_ident "bv_aux" (src/action.ml[110,3908+2]..[110,3908+8])
            [
              <arg>
              Nolabel
                expression (src/action.ml[110,3908+9]..[110,3908+24])
                  Pexp_ident "StringSet.empty" (src/action.ml[110,3908+9]..[110,3908+24])
              <arg>
              Nolabel
                expression (src/action.ml[110,3908+25]..[110,3908+26])
                  Pexp_ident "p" (src/action.ml[110,3908+25]..[110,3908+26])
            ]
      <def>
        pattern (src/action.ml[112,3936+4]..[112,3936+10])
          Ppat_var "bv_aux" (src/action.ml[112,3936+4]..[112,3936+10])
        expression (src/action.ml[112,3936+11]..[122,4116+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[112,3936+11]..[112,3936+15])
            Ppat_var "accu" (src/action.ml[112,3936+11]..[112,3936+15])
          expression (src/action.ml[112,3936+16]..[122,4116+37]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/action.ml[112,3936+16]..[112,3936+17])
              Ppat_var "p" (src/action.ml[112,3936+16]..[112,3936+17])
            expression (src/action.ml[113,3956+2]..[122,4116+37])
              Pexp_open Fresh
              module_expr (src/action.ml[113,3956+2]..[113,3956+4])
                Pmod_ident "IL" (src/action.ml[113,3956+2]..[113,3956+4])
              expression (src/action.ml[113,3956+6]..[122,4116+18])
                Pexp_match
                expression (src/action.ml[113,3956+12]..[113,3956+13])
                  Pexp_ident "p" (src/action.ml[113,3956+12]..[113,3956+13])
                [
                  <case>
                    pattern (src/action.ml[114,3975+4]..[115,3989+9])
                      Ppat_or
                      pattern (src/action.ml[114,3975+4]..[114,3975+13])
                        Ppat_construct "PWildcard" (src/action.ml[114,3975+4]..[114,3975+13])
                        None
                      pattern (src/action.ml[115,3989+4]..[115,3989+9])
                        Ppat_construct "PUnit" (src/action.ml[115,3989+4]..[115,3989+9])
                        None
                    expression (src/action.ml[116,4002+6]..[116,4002+10])
                      Pexp_ident "accu" (src/action.ml[116,4002+6]..[116,4002+10])
                  <case>
                    pattern (src/action.ml[117,4013+4]..[117,4013+10])
                      Ppat_construct "PVar" (src/action.ml[117,4013+4]..[117,4013+8])
                      Some
                        []
                        pattern (src/action.ml[117,4013+9]..[117,4013+10])
                          Ppat_var "x" (src/action.ml[117,4013+9]..[117,4013+10])
                    expression (src/action.ml[118,4027+6]..[118,4027+26])
                      Pexp_apply
                      expression (src/action.ml[118,4027+6]..[118,4027+19])
                        Pexp_ident "StringSet.add" (src/action.ml[118,4027+6]..[118,4027+19])
                      [
                        <arg>
                        Nolabel
                          expression (src/action.ml[118,4027+20]..[118,4027+21])
                            Pexp_ident "x" (src/action.ml[118,4027+20]..[118,4027+21])
                        <arg>
                        Nolabel
                          expression (src/action.ml[118,4027+22]..[118,4027+26])
                            Pexp_ident "accu" (src/action.ml[118,4027+22]..[118,4027+26])
                      ]
                  <case>
                    pattern (src/action.ml[119,4054+4]..[119,4054+13])
                      Ppat_construct "PTuple" (src/action.ml[119,4054+4]..[119,4054+10])
                      Some
                        []
                        pattern (src/action.ml[119,4054+11]..[119,4054+13])
                          Ppat_var "ps" (src/action.ml[119,4054+11]..[119,4054+13])
                    expression (src/action.ml[120,4071+6]..[120,4071+35])
                      Pexp_apply
                      expression (src/action.ml[120,4071+6]..[120,4071+20])
                        Pexp_ident "List.fold_left" (src/action.ml[120,4071+6]..[120,4071+20])
                      [
                        <arg>
                        Nolabel
                          expression (src/action.ml[120,4071+21]..[120,4071+27])
                            Pexp_ident "bv_aux" (src/action.ml[120,4071+21]..[120,4071+27])
                        <arg>
                        Nolabel
                          expression (src/action.ml[120,4071+28]..[120,4071+32])
                            Pexp_ident "accu" (src/action.ml[120,4071+28]..[120,4071+32])
                        <arg>
                        Nolabel
                          expression (src/action.ml[120,4071+33]..[120,4071+35])
                            Pexp_ident "ps" (src/action.ml[120,4071+33]..[120,4071+35])
                      ]
                  <case>
                    pattern (src/action.ml[121,4107+4]..[121,4107+5])
                      Ppat_any
                    expression (src/action.ml[122,4116+6]..[122,4116+18])
                      Pexp_assert
                      expression (src/action.ml[122,4116+13]..[122,4116+18])
                        Pexp_construct "false" (src/action.ml[122,4116+13]..[122,4116+18])
                        None
                ]
    ]
  structure_item (src/action.ml[128,4255+0]..[129,4279+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[128,4255+4]..[128,4255+14])
          Ppat_var "to_il_expr" (src/action.ml[128,4255+4]..[128,4255+14])
        expression (src/action.ml[128,4255+15]..[129,4279+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[128,4255+15]..[128,4255+21])
            Ppat_var "action" (src/action.ml[128,4255+15]..[128,4255+21])
          expression (src/action.ml[129,4279+2]..[129,4279+13])
            Pexp_field
            expression (src/action.ml[129,4279+2]..[129,4279+8])
              Pexp_ident "action" (src/action.ml[129,4279+2]..[129,4279+8])
            "expr" (src/action.ml[129,4279+9]..[129,4279+13])
    ]
  structure_item (src/action.ml[131,4294+0]..[132,4319+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[131,4294+4]..[131,4294+15])
          Ppat_var "is_standard" (src/action.ml[131,4294+4]..[131,4294+15])
        expression (src/action.ml[131,4294+16]..[132,4319+17]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[131,4294+16]..[131,4294+22])
            Ppat_var "action" (src/action.ml[131,4294+16]..[131,4294+22])
          expression (src/action.ml[132,4319+2]..[132,4319+17])
            Pexp_field
            expression (src/action.ml[132,4319+2]..[132,4319+8])
              Pexp_ident "action" (src/action.ml[132,4319+2]..[132,4319+8])
            "standard" (src/action.ml[132,4319+9]..[132,4319+17])
    ]
  structure_item (src/action.ml[134,4338+0]..[135,4359+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[134,4338+4]..[134,4338+11])
          Ppat_var "semvars" (src/action.ml[134,4338+4]..[134,4338+11])
        expression (src/action.ml[134,4338+12]..[135,4359+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[134,4338+12]..[134,4338+18])
            Ppat_var "action" (src/action.ml[134,4338+12]..[134,4338+18])
          expression (src/action.ml[135,4359+2]..[135,4359+16])
            Pexp_field
            expression (src/action.ml[135,4359+2]..[135,4359+8])
              Pexp_ident "action" (src/action.ml[135,4359+2]..[135,4359+8])
            "semvars" (src/action.ml[135,4359+9]..[135,4359+16])
    ]
  structure_item (src/action.ml[137,4377+0]..[138,4399+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[137,4377+4]..[137,4377+12])
          Ppat_var "keywords" (src/action.ml[137,4377+4]..[137,4377+12])
        expression (src/action.ml[137,4377+13]..[138,4399+17]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[137,4377+13]..[137,4377+19])
            Ppat_var "action" (src/action.ml[137,4377+13]..[137,4377+19])
          expression (src/action.ml[138,4399+2]..[138,4399+17])
            Pexp_field
            expression (src/action.ml[138,4399+2]..[138,4399+8])
              Pexp_ident "action" (src/action.ml[138,4399+2]..[138,4399+8])
            "keywords" (src/action.ml[138,4399+9]..[138,4399+17])
    ]
  structure_item (src/action.ml[140,4418+0]..[141,4447+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[140,4418+4]..[140,4418+19])
          Ppat_var "has_syntaxerror" (src/action.ml[140,4418+4]..[140,4418+19])
        expression (src/action.ml[140,4418+20]..[141,4447+44]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[140,4418+20]..[140,4418+26])
            Ppat_var "action" (src/action.ml[140,4418+20]..[140,4418+26])
          expression (src/action.ml[141,4447+2]..[141,4447+44])
            Pexp_apply
            expression (src/action.ml[141,4447+2]..[141,4447+16])
              Pexp_ident "KeywordSet.mem" (src/action.ml[141,4447+2]..[141,4447+16])
            [
              <arg>
              Nolabel
                expression (src/action.ml[141,4447+17]..[141,4447+28])
                  Pexp_construct "SyntaxError" (src/action.ml[141,4447+17]..[141,4447+28])
                  None
              <arg>
              Nolabel
                expression (src/action.ml[141,4447+29]..[141,4447+44])
                  Pexp_field
                  expression (src/action.ml[141,4447+29]..[141,4447+35])
                    Pexp_ident "action" (src/action.ml[141,4447+29]..[141,4447+35])
                  "keywords" (src/action.ml[141,4447+36]..[141,4447+44])
            ]
    ]
  structure_item (src/action.ml[143,4493+0]..[144,4520+78])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[143,4493+4]..[143,4493+17])
          Ppat_var "has_beforeend" (src/action.ml[143,4493+4]..[143,4493+17])
        expression (src/action.ml[143,4493+18]..[144,4520+78]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[143,4493+18]..[143,4493+24])
            Ppat_var "action" (src/action.ml[143,4493+18]..[143,4493+24])
          expression (src/action.ml[144,4520+2]..[144,4520+78])
            Pexp_apply
            expression (src/action.ml[144,4520+2]..[144,4520+16])
              Pexp_ident "KeywordSet.mem" (src/action.ml[144,4520+2]..[144,4520+16])
            [
              <arg>
              Nolabel
                expression (src/action.ml[144,4520+17]..[144,4520+62])
                  Pexp_construct "Position" (src/action.ml[144,4520+18]..[144,4520+26])
                  Some
                    expression (src/action.ml[144,4520+27]..[144,4520+61])
                      Pexp_tuple
                      [
                        expression (src/action.ml[144,4520+28]..[144,4520+34])
                          Pexp_construct "Before" (src/action.ml[144,4520+28]..[144,4520+34])
                          None
                        expression (src/action.ml[144,4520+36]..[144,4520+44])
                          Pexp_construct "WhereEnd" (src/action.ml[144,4520+36]..[144,4520+44])
                          None
                        expression (src/action.ml[144,4520+46]..[144,4520+60])
                          Pexp_construct "FlavorPosition" (src/action.ml[144,4520+46]..[144,4520+60])
                          None
                      ]
              <arg>
              Nolabel
                expression (src/action.ml[144,4520+63]..[144,4520+78])
                  Pexp_field
                  expression (src/action.ml[144,4520+63]..[144,4520+69])
                    Pexp_ident "action" (src/action.ml[144,4520+63]..[144,4520+69])
                  "keywords" (src/action.ml[144,4520+70]..[144,4520+78])
            ]
    ]
  structure_item (src/action.ml[146,4600+0]..[154,4814+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[146,4600+4]..[146,4600+11])
          Ppat_var "posvars" (src/action.ml[146,4600+4]..[146,4600+11])
        expression (src/action.ml[146,4600+12]..[154,4814+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[146,4600+12]..[146,4600+18])
            Ppat_var "action" (src/action.ml[146,4600+12]..[146,4600+18])
          expression (src/action.ml[147,4621+2]..[154,4814+37])
            Pexp_apply
            expression (src/action.ml[147,4621+2]..[147,4621+17])
              Pexp_ident "KeywordSet.fold" (src/action.ml[147,4621+2]..[147,4621+17])
            [
              <arg>
              Nolabel
                expression (src/action.ml[147,4621+18]..[154,4814+3])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/action.ml[147,4621+23]..[147,4621+30])
                    Ppat_var "keyword" (src/action.ml[147,4621+23]..[147,4621+30])
                  expression (src/action.ml[147,4621+31]..[153,4785+28]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/action.ml[147,4621+31]..[147,4621+35])
                      Ppat_var "accu" (src/action.ml[147,4621+31]..[147,4621+35])
                    expression (src/action.ml[148,4660+4]..[153,4785+28])
                      Pexp_match
                      expression (src/action.ml[148,4660+10]..[148,4660+17])
                        Pexp_ident "keyword" (src/action.ml[148,4660+10]..[148,4660+17])
                      [
                        <case>
                          pattern (src/action.ml[149,4683+6]..[149,4683+17])
                            Ppat_construct "SyntaxError" (src/action.ml[149,4683+6]..[149,4683+17])
                            None
                          expression (src/action.ml[150,4704+8]..[150,4704+12])
                            Pexp_ident "accu" (src/action.ml[150,4704+8]..[150,4704+12])
                        <case>
                          pattern (src/action.ml[151,4717+6]..[151,4717+24])
                            Ppat_construct "Position" (src/action.ml[151,4717+6]..[151,4717+14])
                            Some
                              []
                              pattern (src/action.ml[151,4717+15]..[151,4717+24])
                                Ppat_tuple
                                [
                                  pattern (src/action.ml[151,4717+16]..[151,4717+17])
                                    Ppat_var "s" (src/action.ml[151,4717+16]..[151,4717+17])
                                  pattern (src/action.ml[151,4717+19]..[151,4717+20])
                                    Ppat_var "w" (src/action.ml[151,4717+19]..[151,4717+20])
                                  pattern (src/action.ml[151,4717+22]..[151,4717+23])
                                    Ppat_var "f" (src/action.ml[151,4717+22]..[151,4717+23])
                                ]
                          expression (src/action.ml[152,4745+8]..[153,4785+28])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/action.ml[152,4745+12]..[152,4745+13])
                                  Ppat_var "x" (src/action.ml[152,4745+12]..[152,4745+13])
                                expression (src/action.ml[152,4745+16]..[152,4745+36])
                                  Pexp_apply
                                  expression (src/action.ml[152,4745+16]..[152,4745+30])
                                    Pexp_ident "Keyword.posvar" (src/action.ml[152,4745+16]..[152,4745+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/action.ml[152,4745+31]..[152,4745+32])
                                        Pexp_ident "s" (src/action.ml[152,4745+31]..[152,4745+32])
                                    <arg>
                                    Nolabel
                                      expression (src/action.ml[152,4745+33]..[152,4745+34])
                                        Pexp_ident "w" (src/action.ml[152,4745+33]..[152,4745+34])
                                    <arg>
                                    Nolabel
                                      expression (src/action.ml[152,4745+35]..[152,4745+36])
                                        Pexp_ident "f" (src/action.ml[152,4745+35]..[152,4745+36])
                                  ]
                            ]
                            expression (src/action.ml[153,4785+8]..[153,4785+28])
                              Pexp_apply
                              expression (src/action.ml[153,4785+8]..[153,4785+21])
                                Pexp_ident "StringSet.add" (src/action.ml[153,4785+8]..[153,4785+21])
                              [
                                <arg>
                                Nolabel
                                  expression (src/action.ml[153,4785+22]..[153,4785+23])
                                    Pexp_ident "x" (src/action.ml[153,4785+22]..[153,4785+23])
                                <arg>
                                Nolabel
                                  expression (src/action.ml[153,4785+24]..[153,4785+28])
                                    Pexp_ident "accu" (src/action.ml[153,4785+24]..[153,4785+28])
                              ]
                      ]
              <arg>
              Nolabel
                expression (src/action.ml[154,4814+4]..[154,4814+21])
                  Pexp_apply
                  expression (src/action.ml[154,4814+5]..[154,4814+13])
                    Pexp_ident "keywords" (src/action.ml[154,4814+5]..[154,4814+13])
                  [
                    <arg>
                    Nolabel
                      expression (src/action.ml[154,4814+14]..[154,4814+20])
                        Pexp_ident "action" (src/action.ml[154,4814+14]..[154,4814+20])
                  ]
              <arg>
              Nolabel
                expression (src/action.ml[154,4814+22]..[154,4814+37])
                  Pexp_ident "StringSet.empty" (src/action.ml[154,4814+22]..[154,4814+37])
            ]
    ]
  structure_item (src/action.ml[156,4853+0]..[157,4871+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[156,4853+4]..[156,4853+8])
          Ppat_var "vars" (src/action.ml[156,4853+4]..[156,4853+8])
        expression (src/action.ml[156,4853+9]..[157,4871+51]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[156,4853+9]..[156,4853+15])
            Ppat_var "action" (src/action.ml[156,4853+9]..[156,4853+15])
          expression (src/action.ml[157,4871+2]..[157,4871+51])
            Pexp_apply
            expression (src/action.ml[157,4871+2]..[157,4871+17])
              Pexp_ident "StringSet.union" (src/action.ml[157,4871+2]..[157,4871+17])
            [
              <arg>
              Nolabel
                expression (src/action.ml[157,4871+18]..[157,4871+34])
                  Pexp_apply
                  expression (src/action.ml[157,4871+19]..[157,4871+26])
                    Pexp_ident "semvars" (src/action.ml[157,4871+19]..[157,4871+26])
                  [
                    <arg>
                    Nolabel
                      expression (src/action.ml[157,4871+27]..[157,4871+33])
                        Pexp_ident "action" (src/action.ml[157,4871+27]..[157,4871+33])
                  ]
              <arg>
              Nolabel
                expression (src/action.ml[157,4871+35]..[157,4871+51])
                  Pexp_apply
                  expression (src/action.ml[157,4871+36]..[157,4871+43])
                    Pexp_ident "posvars" (src/action.ml[157,4871+36]..[157,4871+43])
                  [
                    <arg>
                    Nolabel
                      expression (src/action.ml[157,4871+44]..[157,4871+50])
                        Pexp_ident "action" (src/action.ml[157,4871+44]..[157,4871+50])
                  ]
            ]
    ]
  structure_item (src/action.ml[163,5060+0]..[171,5354+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[163,5060+4]..[163,5060+10])
          Ppat_var "define" (src/action.ml[163,5060+4]..[163,5060+10])
        expression (src/action.ml[163,5060+11]..[171,5354+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[163,5060+11]..[163,5060+18])
            Ppat_var "keyword" (src/action.ml[163,5060+11]..[163,5060+18])
          expression (src/action.ml[163,5060+19]..[171,5354+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/action.ml[163,5060+19]..[163,5060+27])
              Ppat_var "keywords" (src/action.ml[163,5060+19]..[163,5060+27])
            expression (src/action.ml[163,5060+28]..[171,5354+3]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/action.ml[163,5060+28]..[163,5060+29])
                Ppat_var "f" (src/action.ml[163,5060+28]..[163,5060+29])
              expression (src/action.ml[163,5060+30]..[171,5354+3]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/action.ml[163,5060+30]..[163,5060+36])
                  Ppat_var "action" (src/action.ml[163,5060+30]..[163,5060+36])
                expression (src/action.ml[164,5099+2]..[171,5354+3])
                  Pexp_sequence
                  expression (src/action.ml[164,5099+2]..[164,5099+49])
                    Pexp_assert
                    expression (src/action.ml[164,5099+9]..[164,5099+49])
                      Pexp_apply
                      expression (src/action.ml[164,5099+10]..[164,5099+24])
                        Pexp_ident "KeywordSet.mem" (src/action.ml[164,5099+10]..[164,5099+24])
                      [
                        <arg>
                        Nolabel
                          expression (src/action.ml[164,5099+25]..[164,5099+32])
                            Pexp_ident "keyword" (src/action.ml[164,5099+25]..[164,5099+32])
                        <arg>
                        Nolabel
                          expression (src/action.ml[164,5099+33]..[164,5099+48])
                            Pexp_field
                            expression (src/action.ml[164,5099+33]..[164,5099+39])
                              Pexp_ident "action" (src/action.ml[164,5099+33]..[164,5099+39])
                            "keywords" (src/action.ml[164,5099+40]..[164,5099+48])
                      ]
                  expression (src/action.ml[165,5150+2]..[171,5354+3])
                    Pexp_record
                    [
                      "expr" (src/action.ml[166,5154+4]..[166,5154+8])
                        expression (src/action.ml[166,5154+16]..[166,5154+29])
                          Pexp_apply
                          expression (src/action.ml[166,5154+16]..[166,5154+17])
                            Pexp_ident "f" (src/action.ml[166,5154+16]..[166,5154+17])
                          [
                            <arg>
                            Nolabel
                              expression (src/action.ml[166,5154+18]..[166,5154+29])
                                Pexp_field
                                expression (src/action.ml[166,5154+18]..[166,5154+24])
                                  Pexp_ident "action" (src/action.ml[166,5154+18]..[166,5154+24])
                                "expr" (src/action.ml[166,5154+25]..[166,5154+29])
                          ]
                      "standard" (src/action.ml[167,5185+4]..[167,5185+12])
                        expression (src/action.ml[167,5185+16]..[167,5185+31])
                          Pexp_field
                          expression (src/action.ml[167,5185+16]..[167,5185+22])
                            Pexp_ident "action" (src/action.ml[167,5185+16]..[167,5185+22])
                          "standard" (src/action.ml[167,5185+23]..[167,5185+31])
                      "semvars" (src/action.ml[168,5218+4]..[168,5218+11])
                        expression (src/action.ml[168,5218+16]..[168,5218+30])
                          Pexp_field
                          expression (src/action.ml[168,5218+16]..[168,5218+22])
                            Pexp_ident "action" (src/action.ml[168,5218+16]..[168,5218+22])
                          "semvars" (src/action.ml[168,5218+23]..[168,5218+30])
                      "keywords" (src/action.ml[169,5250+4]..[169,5250+12])
                        expression (src/action.ml[169,5250+16]..[170,5283+70])
                          Pexp_apply
                          expression (src/action.ml[169,5250+16]..[169,5250+32])
                            Pexp_ident "KeywordSet.union" (src/action.ml[169,5250+16]..[169,5250+32])
                          [
                            <arg>
                            Nolabel
                              expression (src/action.ml[170,5283+18]..[170,5283+26])
                                Pexp_ident "keywords" (src/action.ml[170,5283+18]..[170,5283+26])
                            <arg>
                            Nolabel
                              expression (src/action.ml[170,5283+27]..[170,5283+70])
                                Pexp_apply
                                expression (src/action.ml[170,5283+28]..[170,5283+45])
                                  Pexp_ident "KeywordSet.remove" (src/action.ml[170,5283+28]..[170,5283+45])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/action.ml[170,5283+46]..[170,5283+53])
                                      Pexp_ident "keyword" (src/action.ml[170,5283+46]..[170,5283+53])
                                  <arg>
                                  Nolabel
                                    expression (src/action.ml[170,5283+54]..[170,5283+69])
                                      Pexp_field
                                      expression (src/action.ml[170,5283+54]..[170,5283+60])
                                        Pexp_ident "action" (src/action.ml[170,5283+54]..[170,5283+60])
                                      "keywords" (src/action.ml[170,5283+61]..[170,5283+69])
                                ]
                          ]
                    ]
                    None
    ]
  structure_item (src/action.ml[182,5832+0]..[186,5921+3])
    Pstr_type Rec
    [
      type_declaration "subst" (src/action.ml[182,5832+5]..[182,5832+10]) (src/action.ml[182,5832+0]..[186,5921+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (src/action.ml[184,5849+4]..[184,5849+35])
                Immutable
                "semvar" (src/action.ml[184,5849+4]..[184,5849+10])                core_type (src/action.ml[184,5849+12]..[184,5849+34])
                  Ptyp_constr "list" (src/action.ml[184,5849+30]..[184,5849+34])
                  [
                    core_type (src/action.ml[184,5849+13]..[184,5849+28])
                      Ptyp_tuple
                      [
                        core_type (src/action.ml[184,5849+13]..[184,5849+19])
                          Ptyp_constr "string" (src/action.ml[184,5849+13]..[184,5849+19])
                          []
                        core_type (src/action.ml[184,5849+22]..[184,5849+28])
                          Ptyp_constr "string" (src/action.ml[184,5849+22]..[184,5849+28])
                          []
                      ]
                  ]
              (src/action.ml[185,5885+4]..[185,5885+35])
                Immutable
                "posvar" (src/action.ml[185,5885+4]..[185,5885+10])                core_type (src/action.ml[185,5885+12]..[185,5885+34])
                  Ptyp_constr "list" (src/action.ml[185,5885+30]..[185,5885+34])
                  [
                    core_type (src/action.ml[185,5885+13]..[185,5885+28])
                      Ptyp_tuple
                      [
                        core_type (src/action.ml[185,5885+13]..[185,5885+19])
                          Ptyp_constr "string" (src/action.ml[185,5885+13]..[185,5885+19])
                          []
                        core_type (src/action.ml[185,5885+22]..[185,5885+28])
                          Ptyp_constr "string" (src/action.ml[185,5885+22]..[185,5885+28])
                          []
                      ]
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/action.ml[188,5926+0]..[189,5938+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[188,5926+4]..[188,5926+9])
          Ppat_var "empty" (src/action.ml[188,5926+4]..[188,5926+9])
        expression (src/action.ml[189,5938+2]..[189,5938+30])
          Pexp_record
          [
            "semvar" (src/action.ml[189,5938+4]..[189,5938+10])
              expression (src/action.ml[189,5938+13]..[189,5938+15])
                Pexp_construct "[]" (src/action.ml[189,5938+13]..[189,5938+15])
                None
            "posvar" (src/action.ml[189,5938+17]..[189,5938+23])
              expression (src/action.ml[189,5938+26]..[189,5938+28])
                Pexp_construct "[]" (src/action.ml[189,5938+26]..[189,5938+28])
                None
          ]
          None
    ]
  structure_item (src/action.ml[191,5970+0]..[193,6031+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[191,5970+4]..[191,5970+11])
          Ppat_var "extend1" (src/action.ml[191,5970+4]..[191,5970+11])
        expression (src/action.ml[191,5970+12]..[193,6031+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[191,5970+12]..[191,5970+13])
            Ppat_var "x" (src/action.ml[191,5970+12]..[191,5970+13])
          expression (src/action.ml[191,5970+14]..[193,6031+39]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/action.ml[191,5970+14]..[191,5970+15])
              Ppat_var "y" (src/action.ml[191,5970+14]..[191,5970+15])
            expression (src/action.ml[191,5970+16]..[193,6031+39]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/action.ml[191,5970+16]..[191,5970+19])
                Ppat_var "var" (src/action.ml[191,5970+16]..[191,5970+19])
              expression (src/action.ml[192,5992+2]..[193,6031+39])
                Pexp_sequence
                expression (src/action.ml[192,5992+2]..[192,5992+37])
                  Pexp_assert
                  expression (src/action.ml[192,5992+9]..[192,5992+37])
                    Pexp_apply
                    expression (src/action.ml[192,5992+10]..[192,5992+13])
                      Pexp_ident "not" (src/action.ml[192,5992+10]..[192,5992+13])
                    [
                      <arg>
                      Nolabel
                        expression (src/action.ml[192,5992+14]..[192,5992+36])
                          Pexp_apply
                          expression (src/action.ml[192,5992+15]..[192,5992+29])
                            Pexp_ident "List.mem_assoc" (src/action.ml[192,5992+15]..[192,5992+29])
                          [
                            <arg>
                            Nolabel
                              expression (src/action.ml[192,5992+30]..[192,5992+31])
                                Pexp_ident "x" (src/action.ml[192,5992+30]..[192,5992+31])
                            <arg>
                            Nolabel
                              expression (src/action.ml[192,5992+32]..[192,5992+35])
                                Pexp_ident "var" (src/action.ml[192,5992+32]..[192,5992+35])
                          ]
                    ]
                expression (src/action.ml[193,6031+2]..[193,6031+39])
                  Pexp_ifthenelse
                  expression (src/action.ml[193,6031+5]..[193,6031+11])
                    Pexp_apply
                    expression (src/action.ml[193,6031+7]..[193,6031+9])
                      Pexp_ident "<>" (src/action.ml[193,6031+7]..[193,6031+9])
                    [
                      <arg>
                      Nolabel
                        expression (src/action.ml[193,6031+5]..[193,6031+6])
                          Pexp_ident "x" (src/action.ml[193,6031+5]..[193,6031+6])
                      <arg>
                      Nolabel
                        expression (src/action.ml[193,6031+10]..[193,6031+11])
                          Pexp_ident "y" (src/action.ml[193,6031+10]..[193,6031+11])
                    ]
                  expression (src/action.ml[193,6031+17]..[193,6031+30])
                    Pexp_construct "::" (src/action.ml[193,6031+24]..[193,6031+26])
                    Some
                      expression (src/action.ml[193,6031+17]..[193,6031+30]) ghost
                        Pexp_tuple
                        [
                          expression (src/action.ml[193,6031+17]..[193,6031+23])
                            Pexp_tuple
                            [
                              expression (src/action.ml[193,6031+18]..[193,6031+19])
                                Pexp_ident "x" (src/action.ml[193,6031+18]..[193,6031+19])
                              expression (src/action.ml[193,6031+21]..[193,6031+22])
                                Pexp_ident "y" (src/action.ml[193,6031+21]..[193,6031+22])
                            ]
                          expression (src/action.ml[193,6031+27]..[193,6031+30])
                            Pexp_ident "var" (src/action.ml[193,6031+27]..[193,6031+30])
                        ]
                  Some
                    expression (src/action.ml[193,6031+36]..[193,6031+39])
                      Pexp_ident "var" (src/action.ml[193,6031+36]..[193,6031+39])
    ]
  structure_item (src/action.ml[195,6072+0]..[196,6115+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[195,6072+4]..[195,6072+17])
          Ppat_var "extend_semvar" (src/action.ml[195,6072+4]..[195,6072+17])
        expression (src/action.ml[195,6072+18]..[196,6115+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[195,6072+18]..[195,6072+19])
            Ppat_var "x" (src/action.ml[195,6072+18]..[195,6072+19])
          expression (src/action.ml[195,6072+20]..[196,6115+41]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/action.ml[195,6072+20]..[195,6072+21])
              Ppat_var "y" (src/action.ml[195,6072+20]..[195,6072+21])
            expression (src/action.ml[195,6072+22]..[196,6115+41]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/action.ml[195,6072+22]..[195,6072+40])
                Ppat_record Closed
                [
                  "semvar" (src/action.ml[195,6072+24]..[195,6072+30]) ghost
                    pattern (src/action.ml[195,6072+24]..[195,6072+30])
                      Ppat_var "semvar" (src/action.ml[195,6072+24]..[195,6072+30])
                  "posvar" (src/action.ml[195,6072+32]..[195,6072+38]) ghost
                    pattern (src/action.ml[195,6072+32]..[195,6072+38])
                      Ppat_var "posvar" (src/action.ml[195,6072+32]..[195,6072+38])
                ]
              expression (src/action.ml[196,6115+2]..[196,6115+41])
                Pexp_record
                [
                  "semvar" (src/action.ml[196,6115+4]..[196,6115+10])
                    expression (src/action.ml[196,6115+13]..[196,6115+31])
                      Pexp_apply
                      expression (src/action.ml[196,6115+13]..[196,6115+20])
                        Pexp_ident "extend1" (src/action.ml[196,6115+13]..[196,6115+20])
                      [
                        <arg>
                        Nolabel
                          expression (src/action.ml[196,6115+21]..[196,6115+22])
                            Pexp_ident "x" (src/action.ml[196,6115+21]..[196,6115+22])
                        <arg>
                        Nolabel
                          expression (src/action.ml[196,6115+23]..[196,6115+24])
                            Pexp_ident "y" (src/action.ml[196,6115+23]..[196,6115+24])
                        <arg>
                        Nolabel
                          expression (src/action.ml[196,6115+25]..[196,6115+31])
                            Pexp_ident "semvar" (src/action.ml[196,6115+25]..[196,6115+31])
                      ]
                  "posvar" (src/action.ml[196,6115+33]..[196,6115+39]) ghost
                    expression (src/action.ml[196,6115+33]..[196,6115+39])
                      Pexp_ident "posvar" (src/action.ml[196,6115+33]..[196,6115+39])
                ]
                None
    ]
  structure_item (src/action.ml[198,6158+0]..[199,6201+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[198,6158+4]..[198,6158+17])
          Ppat_var "extend_posvar" (src/action.ml[198,6158+4]..[198,6158+17])
        expression (src/action.ml[198,6158+18]..[199,6201+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[198,6158+18]..[198,6158+19])
            Ppat_var "x" (src/action.ml[198,6158+18]..[198,6158+19])
          expression (src/action.ml[198,6158+20]..[199,6201+41]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/action.ml[198,6158+20]..[198,6158+21])
              Ppat_var "y" (src/action.ml[198,6158+20]..[198,6158+21])
            expression (src/action.ml[198,6158+22]..[199,6201+41]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/action.ml[198,6158+22]..[198,6158+40])
                Ppat_record Closed
                [
                  "semvar" (src/action.ml[198,6158+24]..[198,6158+30]) ghost
                    pattern (src/action.ml[198,6158+24]..[198,6158+30])
                      Ppat_var "semvar" (src/action.ml[198,6158+24]..[198,6158+30])
                  "posvar" (src/action.ml[198,6158+32]..[198,6158+38]) ghost
                    pattern (src/action.ml[198,6158+32]..[198,6158+38])
                      Ppat_var "posvar" (src/action.ml[198,6158+32]..[198,6158+38])
                ]
              expression (src/action.ml[199,6201+2]..[199,6201+41])
                Pexp_record
                [
                  "semvar" (src/action.ml[199,6201+4]..[199,6201+10]) ghost
                    expression (src/action.ml[199,6201+4]..[199,6201+10])
                      Pexp_ident "semvar" (src/action.ml[199,6201+4]..[199,6201+10])
                  "posvar" (src/action.ml[199,6201+12]..[199,6201+18])
                    expression (src/action.ml[199,6201+21]..[199,6201+39])
                      Pexp_apply
                      expression (src/action.ml[199,6201+21]..[199,6201+28])
                        Pexp_ident "extend1" (src/action.ml[199,6201+21]..[199,6201+28])
                      [
                        <arg>
                        Nolabel
                          expression (src/action.ml[199,6201+29]..[199,6201+30])
                            Pexp_ident "x" (src/action.ml[199,6201+29]..[199,6201+30])
                        <arg>
                        Nolabel
                          expression (src/action.ml[199,6201+31]..[199,6201+32])
                            Pexp_ident "y" (src/action.ml[199,6201+31]..[199,6201+32])
                        <arg>
                        Nolabel
                          expression (src/action.ml[199,6201+33]..[199,6201+39])
                            Pexp_ident "posvar" (src/action.ml[199,6201+33]..[199,6201+39])
                      ]
                ]
                None
    ]
  structure_item (src/action.ml[201,6244+0]..[201,6244+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[201,6244+4]..[201,6244+10])
          Ppat_var "extend" (src/action.ml[201,6244+4]..[201,6244+10])
        expression (src/action.ml[201,6244+13]..[201,6244+26])
          Pexp_ident "extend_semvar" (src/action.ml[201,6244+13]..[201,6244+26])
    ]
  structure_item (src/action.ml[203,6272+0]..[204,6291+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[203,6272+4]..[203,6272+10])
          Ppat_var "apply1" (src/action.ml[203,6272+4]..[203,6272+10])
        expression (src/action.ml[203,6272+11]..[204,6291+42]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[203,6272+11]..[203,6272+14])
            Ppat_var "var" (src/action.ml[203,6272+11]..[203,6272+14])
          expression (src/action.ml[203,6272+15]..[204,6291+42]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/action.ml[203,6272+15]..[203,6272+16])
              Ppat_var "x" (src/action.ml[203,6272+15]..[203,6272+16])
            expression (src/action.ml[204,6291+2]..[204,6291+42])
              Pexp_try
              expression (src/action.ml[204,6291+6]..[204,6291+22])
                Pexp_apply
                expression (src/action.ml[204,6291+6]..[204,6291+16])
                  Pexp_ident "List.assoc" (src/action.ml[204,6291+6]..[204,6291+16])
                [
                  <arg>
                  Nolabel
                    expression (src/action.ml[204,6291+17]..[204,6291+18])
                      Pexp_ident "x" (src/action.ml[204,6291+17]..[204,6291+18])
                  <arg>
                  Nolabel
                    expression (src/action.ml[204,6291+19]..[204,6291+22])
                      Pexp_ident "var" (src/action.ml[204,6291+19]..[204,6291+22])
                ]
              [
                <case>
                  pattern (src/action.ml[204,6291+28]..[204,6291+37])
                    Ppat_construct "Not_found" (src/action.ml[204,6291+28]..[204,6291+37])
                    None
                  expression (src/action.ml[204,6291+41]..[204,6291+42])
                    Pexp_ident "x" (src/action.ml[204,6291+41]..[204,6291+42])
              ]
    ]
  structure_item (src/action.ml[206,6335+0]..[207,6360+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[206,6335+4]..[206,6335+16])
          Ppat_var "apply_semvar" (src/action.ml[206,6335+4]..[206,6335+16])
        expression (src/action.ml[206,6335+17]..[207,6360+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[206,6335+17]..[206,6335+20])
            Ppat_var "phi" (src/action.ml[206,6335+17]..[206,6335+20])
          expression (src/action.ml[206,6335+21]..[207,6360+21]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/action.ml[206,6335+21]..[206,6335+22])
              Ppat_var "x" (src/action.ml[206,6335+21]..[206,6335+22])
            expression (src/action.ml[207,6360+2]..[207,6360+21])
              Pexp_apply
              expression (src/action.ml[207,6360+2]..[207,6360+8])
                Pexp_ident "apply1" (src/action.ml[207,6360+2]..[207,6360+8])
              [
                <arg>
                Nolabel
                  expression (src/action.ml[207,6360+9]..[207,6360+19])
                    Pexp_field
                    expression (src/action.ml[207,6360+9]..[207,6360+12])
                      Pexp_ident "phi" (src/action.ml[207,6360+9]..[207,6360+12])
                    "semvar" (src/action.ml[207,6360+13]..[207,6360+19])
                <arg>
                Nolabel
                  expression (src/action.ml[207,6360+20]..[207,6360+21])
                    Pexp_ident "x" (src/action.ml[207,6360+20]..[207,6360+21])
              ]
    ]
  structure_item (src/action.ml[209,6383+0]..[215,6493+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[209,6383+4]..[209,6383+17])
          Ppat_var "apply_subject" (src/action.ml[209,6383+4]..[209,6383+17])
        expression (src/action.ml[209,6383+18]..[215,6493+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[209,6383+18]..[209,6383+21])
            Ppat_var "phi" (src/action.ml[209,6383+18]..[209,6383+21])
          expression (src/action.ml[209,6383+22]..[215,6493+37]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/action.ml[209,6383+22]..[209,6383+29])
              Ppat_var "subject" (src/action.ml[209,6383+22]..[209,6383+29])
            expression (src/action.ml[210,6415+2]..[215,6493+37])
              Pexp_match
              expression (src/action.ml[210,6415+8]..[210,6415+15])
                Pexp_ident "subject" (src/action.ml[210,6415+8]..[210,6415+15])
              [
                <case>
                  pattern (src/action.ml[211,6436+4]..[212,6447+8])
                    Ppat_or
                    pattern (src/action.ml[211,6436+4]..[211,6436+10])
                      Ppat_construct "Before" (src/action.ml[211,6436+4]..[211,6436+10])
                      None
                    pattern (src/action.ml[212,6447+4]..[212,6447+8])
                      Ppat_construct "Left" (src/action.ml[212,6447+4]..[212,6447+8])
                      None
                  expression (src/action.ml[213,6459+6]..[213,6459+13])
                    Pexp_ident "subject" (src/action.ml[213,6459+6]..[213,6459+13])
                <case>
                  pattern (src/action.ml[214,6473+4]..[214,6473+16])
                    Ppat_construct "RightNamed" (src/action.ml[214,6473+4]..[214,6473+14])
                    Some
                      []
                      pattern (src/action.ml[214,6473+15]..[214,6473+16])
                        Ppat_var "x" (src/action.ml[214,6473+15]..[214,6473+16])
                  expression (src/action.ml[215,6493+6]..[215,6493+37])
                    Pexp_construct "RightNamed" (src/action.ml[215,6493+6]..[215,6493+16])
                    Some
                      expression (src/action.ml[215,6493+17]..[215,6493+37])
                        Pexp_apply
                        expression (src/action.ml[215,6493+18]..[215,6493+30])
                          Pexp_ident "apply_semvar" (src/action.ml[215,6493+18]..[215,6493+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/action.ml[215,6493+31]..[215,6493+34])
                              Pexp_ident "phi" (src/action.ml[215,6493+31]..[215,6493+34])
                          <arg>
                          Nolabel
                            expression (src/action.ml[215,6493+35]..[215,6493+36])
                              Pexp_ident "x" (src/action.ml[215,6493+35]..[215,6493+36])
                        ]
              ]
    ]
  structure_item (src/action.ml[217,6532+0]..[218,6551+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[217,6532+4]..[217,6532+12])
          Ppat_var "bindings" (src/action.ml[217,6532+4]..[217,6532+12])
        expression (src/action.ml[217,6532+13]..[218,6551+25]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[217,6532+13]..[217,6532+16])
            Ppat_var "phi" (src/action.ml[217,6532+13]..[217,6532+16])
          expression (src/action.ml[218,6551+2]..[218,6551+25])
            Pexp_apply
            expression (src/action.ml[218,6551+13]..[218,6551+14])
              Pexp_ident "@" (src/action.ml[218,6551+13]..[218,6551+14])
            [
              <arg>
              Nolabel
                expression (src/action.ml[218,6551+2]..[218,6551+12])
                  Pexp_field
                  expression (src/action.ml[218,6551+2]..[218,6551+5])
                    Pexp_ident "phi" (src/action.ml[218,6551+2]..[218,6551+5])
                  "posvar" (src/action.ml[218,6551+6]..[218,6551+12])
              <arg>
              Nolabel
                expression (src/action.ml[218,6551+15]..[218,6551+25])
                  Pexp_field
                  expression (src/action.ml[218,6551+15]..[218,6551+18])
                    Pexp_ident "phi" (src/action.ml[218,6551+15]..[218,6551+18])
                  "semvar" (src/action.ml[218,6551+19]..[218,6551+25])
            ]
    ]
  structure_item (src/action.ml[220,6578+0]..[221,6601+53])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[220,6578+4]..[220,6578+13])
          Ppat_var "restrict1" (src/action.ml[220,6578+4]..[220,6578+13])
        expression (src/action.ml[220,6578+14]..[221,6601+53]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[220,6578+14]..[220,6578+16])
            Ppat_var "xs" (src/action.ml[220,6578+14]..[220,6578+16])
          expression (src/action.ml[220,6578+17]..[221,6601+53]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/action.ml[220,6578+17]..[220,6578+20])
              Ppat_var "var" (src/action.ml[220,6578+17]..[220,6578+20])
            expression (src/action.ml[221,6601+2]..[221,6601+53])
              Pexp_apply
              expression (src/action.ml[221,6601+2]..[221,6601+13])
                Pexp_ident "List.filter" (src/action.ml[221,6601+2]..[221,6601+13])
              [
                <arg>
                Nolabel
                  expression (src/action.ml[221,6601+14]..[221,6601+49])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/action.ml[221,6601+19]..[221,6601+26])
                      Ppat_tuple
                      [
                        pattern (src/action.ml[221,6601+20]..[221,6601+21])
                          Ppat_var "x" (src/action.ml[221,6601+20]..[221,6601+21])
                        pattern (src/action.ml[221,6601+23]..[221,6601+25])
                          Ppat_var "_y" (src/action.ml[221,6601+23]..[221,6601+25])
                      ]
                    expression (src/action.ml[221,6601+30]..[221,6601+48])
                      Pexp_apply
                      expression (src/action.ml[221,6601+30]..[221,6601+43])
                        Pexp_ident "StringSet.mem" (src/action.ml[221,6601+30]..[221,6601+43])
                      [
                        <arg>
                        Nolabel
                          expression (src/action.ml[221,6601+44]..[221,6601+45])
                            Pexp_ident "x" (src/action.ml[221,6601+44]..[221,6601+45])
                        <arg>
                        Nolabel
                          expression (src/action.ml[221,6601+46]..[221,6601+48])
                            Pexp_ident "xs" (src/action.ml[221,6601+46]..[221,6601+48])
                      ]
                <arg>
                Nolabel
                  expression (src/action.ml[221,6601+50]..[221,6601+53])
                    Pexp_ident "var" (src/action.ml[221,6601+50]..[221,6601+53])
              ]
    ]
  structure_item (src/action.ml[223,6656+0]..[224,6700+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[223,6656+4]..[223,6656+19])
          Ppat_var "restrict_semvar" (src/action.ml[223,6656+4]..[223,6656+19])
        expression (src/action.ml[223,6656+20]..[224,6700+42]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[223,6656+20]..[223,6656+22])
            Ppat_var "xs" (src/action.ml[223,6656+20]..[223,6656+22])
          expression (src/action.ml[223,6656+23]..[224,6700+42]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/action.ml[223,6656+23]..[223,6656+41])
              Ppat_record Closed
              [
                "semvar" (src/action.ml[223,6656+25]..[223,6656+31]) ghost
                  pattern (src/action.ml[223,6656+25]..[223,6656+31])
                    Ppat_var "semvar" (src/action.ml[223,6656+25]..[223,6656+31])
                "posvar" (src/action.ml[223,6656+33]..[223,6656+39]) ghost
                  pattern (src/action.ml[223,6656+33]..[223,6656+39])
                    Ppat_var "posvar" (src/action.ml[223,6656+33]..[223,6656+39])
              ]
            expression (src/action.ml[224,6700+2]..[224,6700+42])
              Pexp_record
              [
                "semvar" (src/action.ml[224,6700+4]..[224,6700+10])
                  expression (src/action.ml[224,6700+13]..[224,6700+32])
                    Pexp_apply
                    expression (src/action.ml[224,6700+13]..[224,6700+22])
                      Pexp_ident "restrict1" (src/action.ml[224,6700+13]..[224,6700+22])
                    [
                      <arg>
                      Nolabel
                        expression (src/action.ml[224,6700+23]..[224,6700+25])
                          Pexp_ident "xs" (src/action.ml[224,6700+23]..[224,6700+25])
                      <arg>
                      Nolabel
                        expression (src/action.ml[224,6700+26]..[224,6700+32])
                          Pexp_ident "semvar" (src/action.ml[224,6700+26]..[224,6700+32])
                    ]
                "posvar" (src/action.ml[224,6700+34]..[224,6700+40]) ghost
                  expression (src/action.ml[224,6700+34]..[224,6700+40])
                    Pexp_ident "posvar" (src/action.ml[224,6700+34]..[224,6700+40])
              ]
              None
    ]
  structure_item (src/action.ml[234,7146+0]..[251,7659+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[234,7146+4]..[234,7146+18])
          Ppat_var "rename_keyword" (src/action.ml[234,7146+4]..[234,7146+18])
        expression (src/action.ml[234,7146+19]..[251,7659+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[234,7146+19]..[234,7146+20])
            Ppat_var "f" (src/action.ml[234,7146+19]..[234,7146+20])
          expression (src/action.ml[234,7146+21]..[251,7659+41]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/action.ml[234,7146+21]..[234,7146+38])
              Ppat_constraint
              pattern (src/action.ml[234,7146+22]..[234,7146+25])
                Ppat_var "phi" (src/action.ml[234,7146+22]..[234,7146+25])
              core_type (src/action.ml[234,7146+28]..[234,7146+37])
                Ptyp_constr "ref" (src/action.ml[234,7146+34]..[234,7146+37])
                [
                  core_type (src/action.ml[234,7146+28]..[234,7146+33])
                    Ptyp_constr "subst" (src/action.ml[234,7146+28]..[234,7146+33])
                    []
                ]
            expression (src/action.ml[234,7146+39]..[251,7659+41]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/action.ml[234,7146+39]..[234,7146+46])
                Ppat_var "keyword" (src/action.ml[234,7146+39]..[234,7146+46])
              expression (src/action.ml[234,7146+47]..[251,7659+41])
                Pexp_constraint
                expression (src/action.ml[235,7205+2]..[251,7659+41])
                  Pexp_match
                  expression (src/action.ml[235,7205+8]..[235,7205+15])
                    Pexp_ident "keyword" (src/action.ml[235,7205+8]..[235,7205+15])
                  [
                    <case>
                      pattern (src/action.ml[236,7226+4]..[236,7226+15])
                        Ppat_construct "SyntaxError" (src/action.ml[236,7226+4]..[236,7226+15])
                        None
                      expression (src/action.ml[237,7245+6]..[237,7245+17])
                        Pexp_construct "SyntaxError" (src/action.ml[237,7245+6]..[237,7245+17])
                        None
                    <case>
                      pattern (src/action.ml[238,7263+4]..[238,7263+37])
                        Ppat_construct "Position" (src/action.ml[238,7263+4]..[238,7263+12])
                        Some
                          []
                          pattern (src/action.ml[238,7263+13]..[238,7263+37])
                            Ppat_tuple
                            [
                              pattern (src/action.ml[238,7263+14]..[238,7263+21])
                                Ppat_var "subject" (src/action.ml[238,7263+14]..[238,7263+21])
                              pattern (src/action.ml[238,7263+23]..[238,7263+28])
                                Ppat_var "where" (src/action.ml[238,7263+23]..[238,7263+28])
                              pattern (src/action.ml[238,7263+30]..[238,7263+36])
                                Ppat_var "flavor" (src/action.ml[238,7263+30]..[238,7263+36])
                            ]
                      expression (src/action.ml[239,7304+6]..[251,7659+41])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/action.ml[239,7304+10]..[239,7304+26])
                              Ppat_tuple
                              [
                                pattern (src/action.ml[239,7304+10]..[239,7304+18])
                                  Ppat_var "subject'" (src/action.ml[239,7304+10]..[239,7304+18])
                                pattern (src/action.ml[239,7304+20]..[239,7304+26])
                                  Ppat_var "where'" (src/action.ml[239,7304+20]..[239,7304+26])
                              ]
                            expression (src/action.ml[240,7333+8]..[244,7455+45])
                              Pexp_match
                              expression (src/action.ml[240,7333+14]..[240,7333+32])
                                Pexp_apply
                                expression (src/action.ml[240,7333+14]..[240,7333+15])
                                  Pexp_ident "f" (src/action.ml[240,7333+14]..[240,7333+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/action.ml[240,7333+16]..[240,7333+32])
                                      Pexp_tuple
                                      [
                                        expression (src/action.ml[240,7333+17]..[240,7333+24])
                                          Pexp_ident "subject" (src/action.ml[240,7333+17]..[240,7333+24])
                                        expression (src/action.ml[240,7333+26]..[240,7333+31])
                                          Pexp_ident "where" (src/action.ml[240,7333+26]..[240,7333+31])
                                      ]
                                ]
                              [
                                <case>
                                  pattern (src/action.ml[241,7371+10]..[241,7371+33])
                                    Ppat_construct "Some" (src/action.ml[241,7371+10]..[241,7371+14])
                                    Some
                                      []
                                      pattern (src/action.ml[241,7371+15]..[241,7371+33])
                                        Ppat_tuple
                                        [
                                          pattern (src/action.ml[241,7371+16]..[241,7371+24])
                                            Ppat_var "subject'" (src/action.ml[241,7371+16]..[241,7371+24])
                                          pattern (src/action.ml[241,7371+26]..[241,7371+32])
                                            Ppat_var "where'" (src/action.ml[241,7371+26]..[241,7371+32])
                                        ]
                                  expression (src/action.ml[242,7408+12]..[242,7408+28])
                                    Pexp_tuple
                                    [
                                      expression (src/action.ml[242,7408+12]..[242,7408+20])
                                        Pexp_ident "subject'" (src/action.ml[242,7408+12]..[242,7408+20])
                                      expression (src/action.ml[242,7408+22]..[242,7408+28])
                                        Pexp_ident "where'" (src/action.ml[242,7408+22]..[242,7408+28])
                                    ]
                                <case>
                                  pattern (src/action.ml[243,7437+10]..[243,7437+14])
                                    Ppat_construct "None" (src/action.ml[243,7437+10]..[243,7437+14])
                                    None
                                  expression (src/action.ml[244,7455+12]..[244,7455+45])
                                    Pexp_tuple
                                    [
                                      expression (src/action.ml[244,7455+12]..[244,7455+38])
                                        Pexp_apply
                                        expression (src/action.ml[244,7455+12]..[244,7455+25])
                                          Pexp_ident "apply_subject" (src/action.ml[244,7455+12]..[244,7455+25])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/action.ml[244,7455+26]..[244,7455+30])
                                              Pexp_apply
                                              expression (src/action.ml[244,7455+26]..[244,7455+27])
                                                Pexp_ident "!" (src/action.ml[244,7455+26]..[244,7455+27])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/action.ml[244,7455+27]..[244,7455+30])
                                                    Pexp_ident "phi" (src/action.ml[244,7455+27]..[244,7455+30])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (src/action.ml[244,7455+31]..[244,7455+38])
                                              Pexp_ident "subject" (src/action.ml[244,7455+31]..[244,7455+38])
                                        ]
                                      expression (src/action.ml[244,7455+40]..[244,7455+45])
                                        Pexp_ident "where" (src/action.ml[244,7455+40]..[244,7455+45])
                                    ]
                              ]
                        ]
                        expression (src/action.ml[246,7510+6]..[251,7659+41])
                          Pexp_sequence
                          expression (src/action.ml[246,7510+6]..[250,7643+14])
                            Pexp_apply
                            expression (src/action.ml[246,7510+10]..[246,7510+12])
                              Pexp_ident ":=" (src/action.ml[246,7510+10]..[246,7510+12])
                            [
                              <arg>
                              Nolabel
                                expression (src/action.ml[246,7510+6]..[246,7510+9])
                                  Pexp_ident "phi" (src/action.ml[246,7510+6]..[246,7510+9])
                              <arg>
                              Nolabel
                                expression (src/action.ml[247,7523+8]..[250,7643+14])
                                  Pexp_apply
                                  expression (src/action.ml[247,7523+8]..[247,7523+21])
                                    Pexp_ident "extend_posvar" (src/action.ml[247,7523+8]..[247,7523+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/action.ml[248,7545+10]..[248,7545+47])
                                        Pexp_apply
                                        expression (src/action.ml[248,7545+11]..[248,7545+25])
                                          Pexp_ident "Keyword.posvar" (src/action.ml[248,7545+11]..[248,7545+25])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/action.ml[248,7545+26]..[248,7545+33])
                                              Pexp_ident "subject" (src/action.ml[248,7545+26]..[248,7545+33])
                                          <arg>
                                          Nolabel
                                            expression (src/action.ml[248,7545+34]..[248,7545+39])
                                              Pexp_ident "where" (src/action.ml[248,7545+34]..[248,7545+39])
                                          <arg>
                                          Nolabel
                                            expression (src/action.ml[248,7545+40]..[248,7545+46])
                                              Pexp_ident "flavor" (src/action.ml[248,7545+40]..[248,7545+46])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/action.ml[249,7593+10]..[249,7593+49])
                                        Pexp_apply
                                        expression (src/action.ml[249,7593+11]..[249,7593+25])
                                          Pexp_ident "Keyword.posvar" (src/action.ml[249,7593+11]..[249,7593+25])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/action.ml[249,7593+26]..[249,7593+34])
                                              Pexp_ident "subject'" (src/action.ml[249,7593+26]..[249,7593+34])
                                          <arg>
                                          Nolabel
                                            expression (src/action.ml[249,7593+35]..[249,7593+41])
                                              Pexp_ident "where'" (src/action.ml[249,7593+35]..[249,7593+41])
                                          <arg>
                                          Nolabel
                                            expression (src/action.ml[249,7593+42]..[249,7593+48])
                                              Pexp_ident "flavor" (src/action.ml[249,7593+42]..[249,7593+48])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/action.ml[250,7643+10]..[250,7643+14])
                                        Pexp_apply
                                        expression (src/action.ml[250,7643+10]..[250,7643+11])
                                          Pexp_ident "!" (src/action.ml[250,7643+10]..[250,7643+11])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/action.ml[250,7643+11]..[250,7643+14])
                                              Pexp_ident "phi" (src/action.ml[250,7643+11]..[250,7643+14])
                                        ]
                                  ]
                            ]
                          expression (src/action.ml[251,7659+6]..[251,7659+41])
                            Pexp_construct "Position" (src/action.ml[251,7659+6]..[251,7659+14])
                            Some
                              expression (src/action.ml[251,7659+15]..[251,7659+41])
                                Pexp_tuple
                                [
                                  expression (src/action.ml[251,7659+16]..[251,7659+24])
                                    Pexp_ident "subject'" (src/action.ml[251,7659+16]..[251,7659+24])
                                  expression (src/action.ml[251,7659+26]..[251,7659+32])
                                    Pexp_ident "where'" (src/action.ml[251,7659+26]..[251,7659+32])
                                  expression (src/action.ml[251,7659+34]..[251,7659+40])
                                    Pexp_ident "flavor" (src/action.ml[251,7659+34]..[251,7659+40])
                                ]
                  ]
                core_type (src/action.ml[234,7146+49]..[234,7146+56])
                  Ptyp_constr "keyword" (src/action.ml[234,7146+49]..[234,7146+56])
                  []
    ]
  structure_item (src/action.ml[253,7702+0]..[280,8806+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[253,7702+4]..[253,7702+10])
          Ppat_var "rename" (src/action.ml[253,7702+4]..[253,7702+10])
        expression (src/action.ml[253,7702+11]..[280,8806+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/action.ml[253,7702+11]..[253,7702+12])
            Ppat_var "f" (src/action.ml[253,7702+11]..[253,7702+12])
          expression (src/action.ml[253,7702+13]..[280,8806+39]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/action.ml[253,7702+13]..[253,7702+16])
              Ppat_var "phi" (src/action.ml[253,7702+13]..[253,7702+16])
            expression (src/action.ml[253,7702+17]..[280,8806+39]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/action.ml[253,7702+17]..[253,7702+18])
                Ppat_var "a" (src/action.ml[253,7702+17]..[253,7702+18])
              expression (src/action.ml[256,7777+2]..[280,8806+39])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/action.ml[256,7777+6]..[256,7777+14])
                      Ppat_var "keywords" (src/action.ml[256,7777+6]..[256,7777+14])
                    expression (src/action.ml[256,7777+17]..[256,7777+27])
                      Pexp_field
                      expression (src/action.ml[256,7777+17]..[256,7777+18])
                        Pexp_ident "a" (src/action.ml[256,7777+17]..[256,7777+18])
                      "keywords" (src/action.ml[256,7777+19]..[256,7777+27])
                ]
                expression (src/action.ml[257,7808+2]..[280,8806+39])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/action.ml[257,7808+6]..[257,7808+9])
                        Ppat_var "phi" (src/action.ml[257,7808+6]..[257,7808+9])
                      expression (src/action.ml[257,7808+12]..[257,7808+19])
                        Pexp_apply
                        expression (src/action.ml[257,7808+12]..[257,7808+15])
                          Pexp_ident "ref" (src/action.ml[257,7808+12]..[257,7808+15])
                        [
                          <arg>
                          Nolabel
                            expression (src/action.ml[257,7808+16]..[257,7808+19])
                              Pexp_ident "phi" (src/action.ml[257,7808+16]..[257,7808+19])
                        ]
                  ]
                  expression (src/action.ml[258,7831+2]..[280,8806+39])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/action.ml[258,7831+6]..[258,7831+14])
                          Ppat_var "keywords" (src/action.ml[258,7831+6]..[258,7831+14])
                        expression (src/action.ml[258,7831+17]..[258,7831+63])
                          Pexp_apply
                          expression (src/action.ml[258,7831+17]..[258,7831+31])
                            Pexp_ident "KeywordSet.map" (src/action.ml[258,7831+17]..[258,7831+31])
                          [
                            <arg>
                            Nolabel
                              expression (src/action.ml[258,7831+32]..[258,7831+54])
                                Pexp_apply
                                expression (src/action.ml[258,7831+33]..[258,7831+47])
                                  Pexp_ident "rename_keyword" (src/action.ml[258,7831+33]..[258,7831+47])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/action.ml[258,7831+48]..[258,7831+49])
                                      Pexp_ident "f" (src/action.ml[258,7831+48]..[258,7831+49])
                                  <arg>
                                  Nolabel
                                    expression (src/action.ml[258,7831+50]..[258,7831+53])
                                      Pexp_ident "phi" (src/action.ml[258,7831+50]..[258,7831+53])
                                ]
                            <arg>
                            Nolabel
                              expression (src/action.ml[258,7831+55]..[258,7831+63])
                                Pexp_ident "keywords" (src/action.ml[258,7831+55]..[258,7831+63])
                          ]
                    ]
                    expression (src/action.ml[259,7898+2]..[280,8806+39])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/action.ml[259,7898+6]..[259,7898+9])
                            Ppat_var "phi" (src/action.ml[259,7898+6]..[259,7898+9])
                          expression (src/action.ml[259,7898+12]..[259,7898+16])
                            Pexp_apply
                            expression (src/action.ml[259,7898+12]..[259,7898+13])
                              Pexp_ident "!" (src/action.ml[259,7898+12]..[259,7898+13])
                            [
                              <arg>
                              Nolabel
                                expression (src/action.ml[259,7898+13]..[259,7898+16])
                                  Pexp_ident "phi" (src/action.ml[259,7898+13]..[259,7898+16])
                            ]
                      ]
                      expression (src/action.ml[261,7919+2]..[280,8806+39])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/action.ml[261,7919+6]..[261,7919+14])
                              Ppat_var "standard" (src/action.ml[261,7919+6]..[261,7919+14])
                            expression (src/action.ml[261,7919+17]..[261,7919+27])
                              Pexp_field
                              expression (src/action.ml[261,7919+17]..[261,7919+18])
                                Pexp_ident "a" (src/action.ml[261,7919+17]..[261,7919+18])
                              "standard" (src/action.ml[261,7919+19]..[261,7919+27])
                        ]
                        expression (src/action.ml[268,8242+2]..[280,8806+39])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/action.ml[268,8242+6]..[268,8242+9])
                                Ppat_var "phi" (src/action.ml[268,8242+6]..[268,8242+9])
                              expression (src/action.ml[268,8242+12]..[268,8242+41])
                                Pexp_apply
                                expression (src/action.ml[268,8242+12]..[268,8242+27])
                                  Pexp_ident "restrict_semvar" (src/action.ml[268,8242+12]..[268,8242+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/action.ml[268,8242+28]..[268,8242+37])
                                      Pexp_field
                                      expression (src/action.ml[268,8242+28]..[268,8242+29])
                                        Pexp_ident "a" (src/action.ml[268,8242+28]..[268,8242+29])
                                      "semvars" (src/action.ml[268,8242+30]..[268,8242+37])
                                  <arg>
                                  Nolabel
                                    expression (src/action.ml[268,8242+38]..[268,8242+41])
                                      Pexp_ident "phi" (src/action.ml[268,8242+38]..[268,8242+41])
                                ]
                          ]
                          expression (src/action.ml[271,8345+2]..[280,8806+39])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/action.ml[271,8345+6]..[271,8345+13])
                                  Ppat_var "semvars" (src/action.ml[271,8345+6]..[271,8345+13])
                                expression (src/action.ml[271,8345+16]..[271,8345+58])
                                  Pexp_apply
                                  expression (src/action.ml[271,8345+16]..[271,8345+29])
                                    Pexp_ident "StringSet.map" (src/action.ml[271,8345+16]..[271,8345+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/action.ml[271,8345+30]..[271,8345+48])
                                        Pexp_apply
                                        expression (src/action.ml[271,8345+31]..[271,8345+43])
                                          Pexp_ident "apply_semvar" (src/action.ml[271,8345+31]..[271,8345+43])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/action.ml[271,8345+44]..[271,8345+47])
                                              Pexp_ident "phi" (src/action.ml[271,8345+44]..[271,8345+47])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/action.ml[271,8345+49]..[271,8345+58])
                                        Pexp_field
                                        expression (src/action.ml[271,8345+49]..[271,8345+50])
                                          Pexp_ident "a" (src/action.ml[271,8345+49]..[271,8345+50])
                                        "semvars" (src/action.ml[271,8345+51]..[271,8345+58])
                                  ]
                            ]
                            expression (src/action.ml[277,8682+2]..[280,8806+39])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/action.ml[277,8682+6]..[277,8682+9])
                                    Ppat_var "phi" (src/action.ml[277,8682+6]..[277,8682+9])
                                  expression (src/action.ml[277,8682+12]..[277,8682+72])
                                    Pexp_apply
                                    expression (src/action.ml[277,8682+12]..[277,8682+20])
                                      Pexp_ident "List.map" (src/action.ml[277,8682+12]..[277,8682+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/action.ml[277,8682+21]..[277,8682+57])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (src/action.ml[277,8682+26]..[277,8682+32])
                                            Ppat_tuple
                                            [
                                              pattern (src/action.ml[277,8682+27]..[277,8682+28])
                                                Ppat_var "x" (src/action.ml[277,8682+27]..[277,8682+28])
                                              pattern (src/action.ml[277,8682+30]..[277,8682+31])
                                                Ppat_var "y" (src/action.ml[277,8682+30]..[277,8682+31])
                                            ]
                                          expression (src/action.ml[277,8682+36]..[277,8682+56])
                                            Pexp_tuple
                                            [
                                              expression (src/action.ml[277,8682+36]..[277,8682+45])
                                                Pexp_construct "IL.PVar" (src/action.ml[277,8682+36]..[277,8682+43])
                                                Some
                                                  expression (src/action.ml[277,8682+44]..[277,8682+45])
                                                    Pexp_ident "x" (src/action.ml[277,8682+44]..[277,8682+45])
                                              expression (src/action.ml[277,8682+47]..[277,8682+56])
                                                Pexp_construct "IL.EVar" (src/action.ml[277,8682+47]..[277,8682+54])
                                                Some
                                                  expression (src/action.ml[277,8682+55]..[277,8682+56])
                                                    Pexp_ident "y" (src/action.ml[277,8682+55]..[277,8682+56])
                                            ]
                                      <arg>
                                      Nolabel
                                        expression (src/action.ml[277,8682+58]..[277,8682+72])
                                          Pexp_apply
                                          expression (src/action.ml[277,8682+59]..[277,8682+67])
                                            Pexp_ident "bindings" (src/action.ml[277,8682+59]..[277,8682+67])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/action.ml[277,8682+68]..[277,8682+71])
                                                Pexp_ident "phi" (src/action.ml[277,8682+68]..[277,8682+71])
                                          ]
                                    ]
                              ]
                              expression (src/action.ml[278,8758+2]..[280,8806+39])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/action.ml[278,8758+6]..[278,8758+10])
                                      Ppat_var "expr" (src/action.ml[278,8758+6]..[278,8758+10])
                                    expression (src/action.ml[278,8758+13]..[278,8758+43])
                                      Pexp_apply
                                      expression (src/action.ml[278,8758+13]..[278,8758+29])
                                        Pexp_ident "CodeBits.eletand" (src/action.ml[278,8758+13]..[278,8758+29])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/action.ml[278,8758+30]..[278,8758+43])
                                            Pexp_tuple
                                            [
                                              expression (src/action.ml[278,8758+31]..[278,8758+34])
                                                Pexp_ident "phi" (src/action.ml[278,8758+31]..[278,8758+34])
                                              expression (src/action.ml[278,8758+36]..[278,8758+42])
                                                Pexp_field
                                                expression (src/action.ml[278,8758+36]..[278,8758+37])
                                                  Pexp_ident "a" (src/action.ml[278,8758+36]..[278,8758+37])
                                                "expr" (src/action.ml[278,8758+38]..[278,8758+42])
                                            ]
                                      ]
                                ]
                                expression (src/action.ml[280,8806+2]..[280,8806+39])
                                  Pexp_record
                                  [
                                    "expr" (src/action.ml[280,8806+4]..[280,8806+8]) ghost
                                      expression (src/action.ml[280,8806+4]..[280,8806+8])
                                        Pexp_ident "expr" (src/action.ml[280,8806+4]..[280,8806+8])
                                    "standard" (src/action.ml[280,8806+10]..[280,8806+18]) ghost
                                      expression (src/action.ml[280,8806+10]..[280,8806+18])
                                        Pexp_ident "standard" (src/action.ml[280,8806+10]..[280,8806+18])
                                    "semvars" (src/action.ml[280,8806+20]..[280,8806+27]) ghost
                                      expression (src/action.ml[280,8806+20]..[280,8806+27])
                                        Pexp_ident "semvars" (src/action.ml[280,8806+20]..[280,8806+27])
                                    "keywords" (src/action.ml[280,8806+29]..[280,8806+37]) ghost
                                      expression (src/action.ml[280,8806+29]..[280,8806+37])
                                        Pexp_ident "keywords" (src/action.ml[280,8806+29]..[280,8806+37])
                                  ]
                                  None
    ]
]

open Keyword
type t =
  {
  expr: IL.expr ;
  standard: bool ;
  semvars: StringSet.t ;
  keywords: KeywordSet.t }
let from_stretch xs s =
  {
    expr = (IL.ETextual s);
    standard = (s.Stretch.stretch_filename = Settings.stdlib_filename);
    semvars = xs;
    keywords = (KeywordSet.of_list s.Stretch.stretch_keywords)
  }
let rec from_il_expr e =
  { expr = e; standard = true; semvars = (fv e); keywords = KeywordSet.empty
  }
and fv e = fv_aux StringSet.empty e
and fv_aux accu e =
  let open IL in
    match e with
    | EVar x -> StringSet.add x accu
    | ETextual _ -> accu
    | ETuple es -> List.fold_left fv_aux accu es
    | EApp (e, es) -> List.fold_left fv_aux accu (e :: es)
    | _ -> assert false
let compose x a1 a2 =
  {
    expr = (CodeBits.blet ([((IL.PVar x), (a1.expr))], (a2.expr)));
    semvars = (StringSet.union a1.semvars (StringSet.remove x a2.semvars));
    keywords = (KeywordSet.union a1.keywords a2.keywords);
    standard = (a1.standard && a2.standard)
  }
let rec bind p x a =
  {
    expr = (CodeBits.blet ([(p, (IL.EVar x))], (a.expr)));
    semvars = (StringSet.add x (StringSet.diff a.semvars (bv p)));
    keywords = (a.keywords);
    standard = (a.standard)
  }
and bv p = bv_aux StringSet.empty p
and bv_aux accu p =
  let open IL in
    match p with
    | PWildcard | PUnit -> accu
    | PVar x -> StringSet.add x accu
    | PTuple ps -> List.fold_left bv_aux accu ps
    | _ -> assert false
let to_il_expr action = action.expr
let is_standard action = action.standard
let semvars action = action.semvars
let keywords action = action.keywords
let has_syntaxerror action = KeywordSet.mem SyntaxError action.keywords
let has_beforeend action =
  KeywordSet.mem (Position (Before, WhereEnd, FlavorPosition))
    action.keywords
let posvars action =
  KeywordSet.fold
    (fun keyword ->
       fun accu ->
         match keyword with
         | SyntaxError -> accu
         | Position (s, w, f) ->
             let x = Keyword.posvar s w f in StringSet.add x accu)
    (keywords action) StringSet.empty
let vars action = StringSet.union (semvars action) (posvars action)
let define keyword keywords f action =
  assert (KeywordSet.mem keyword action.keywords);
  {
    expr = (f action.expr);
    standard = (action.standard);
    semvars = (action.semvars);
    keywords =
      (KeywordSet.union keywords (KeywordSet.remove keyword action.keywords))
  }
type subst =
  {
  semvar: (string * string) list ;
  posvar: (string * string) list }
let empty = { semvar = []; posvar = [] }
let extend1 x y var =
  assert (not (List.mem_assoc x var)); if x <> y then (x, y) :: var else var
let extend_semvar x y { semvar; posvar } =
  { semvar = (extend1 x y semvar); posvar }
let extend_posvar x y { semvar; posvar } =
  { semvar; posvar = (extend1 x y posvar) }
let extend = extend_semvar
let apply1 var x = try List.assoc x var with | Not_found -> x
let apply_semvar phi x = apply1 phi.semvar x
let apply_subject phi subject =
  match subject with
  | Before | Left -> subject
  | RightNamed x -> RightNamed (apply_semvar phi x)
let bindings phi = phi.posvar @ phi.semvar
let restrict1 xs var = List.filter (fun (x, _y) -> StringSet.mem x xs) var
let restrict_semvar xs { semvar; posvar } =
  { semvar = (restrict1 xs semvar); posvar }
let rename_keyword f (phi : subst ref) keyword =
  (match keyword with
   | SyntaxError -> SyntaxError
   | Position (subject, where, flavor) ->
       let (subject', where') =
         match f (subject, where) with
         | Some (subject', where') -> (subject', where')
         | None -> ((apply_subject (!phi) subject), where) in
       (phi :=
          (extend_posvar (Keyword.posvar subject where flavor)
             (Keyword.posvar subject' where' flavor) (!phi));
        Position (subject', where', flavor)) : keyword)
let rename f phi a =
  let keywords = a.keywords in
  let phi = ref phi in
  let keywords = KeywordSet.map (rename_keyword f phi) keywords in
  let phi = !phi in
  let standard = a.standard in
  let phi = restrict_semvar a.semvars phi in
  let semvars = StringSet.map (apply_semvar phi) a.semvars in
  let phi =
    List.map (fun (x, y) -> ((IL.PVar x), (IL.EVar y))) (bindings phi) in
  let expr = CodeBits.eletand (phi, (a.expr)) in
  { expr; standard; semvars; keywords }
[
  structure_item (src/action.ml[14,996+0]..src/action.ml[14,996+12])
    Tstr_open Fresh
    module_expr (src/action.ml[14,996+5]..src/action.ml[14,996+12])
      Tmod_ident "MenhirSdk!.Keyword"
  structure_item (src/action.ml[16,1010+0]..src/action.ml[35,1674+1])
    Tstr_type Rec
    [
      type_declaration t/402 (src/action.ml[16,1010+0]..src/action.ml[35,1674+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (src/action.ml[19,1065+2]..src/action.ml[19,1065+16])
                Immutable
                expr/430                core_type (src/action.ml[19,1065+8]..src/action.ml[19,1065+15])
                  Ttyp_poly
                  core_type (src/action.ml[19,1065+8]..src/action.ml[19,1065+15])
                    Ttyp_constr "Dune__exe!.IL.expr"
                    []
              (src/action.ml[24,1303+2]..src/action.ml[24,1303+17])
                Immutable
                standard/431                core_type (src/action.ml[24,1303+12]..src/action.ml[24,1303+16])
                  Ttyp_poly
                  core_type (src/action.ml[24,1303+12]..src/action.ml[24,1303+16])
                    Ttyp_constr "bool/5!"
                    []
              (src/action.ml[28,1441+2]..src/action.ml[28,1441+23])
                Immutable
                semvars/478                core_type (src/action.ml[28,1441+11]..src/action.ml[28,1441+22])
                  Ttyp_poly
                  core_type (src/action.ml[28,1441+11]..src/action.ml[28,1441+22])
                    Ttyp_constr "Dune__exe!.StringSet.t"
                    []
              (src/action.ml[33,1645+2]..src/action.ml[33,1645+27])
                Immutable
                keywords/530                core_type (src/action.ml[33,1645+14]..src/action.ml[33,1645+26])
                  Ttyp_poly
                  core_type (src/action.ml[33,1645+14]..src/action.ml[33,1645+26])
                    Ttyp_constr "MenhirSdk!.Keyword.KeywordSet.t"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/action.ml[41,1780+0]..src/action.ml[47,1992+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[41,1780+4]..src/action.ml[41,1780+16])
          Tpat_var "from_stretch/649"
        expression (src/action.ml[41,1780+17]..src/action.ml[47,1992+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[41,1780+17]..src/action.ml[41,1780+19])
                Tpat_var "xs/651"
              expression (src/action.ml[41,1780+20]..src/action.ml[47,1992+3]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/action.ml[41,1780+20]..src/action.ml[41,1780+21])
                      Tpat_var "s/652"
                    expression (src/action.ml[42,1804+2]..src/action.ml[47,1992+3])
                      Texp_record
                        fields =
                          [
                            "expr"
                              expression (src/action.ml[43,1808+16]..src/action.ml[43,1808+29])
                                Texp_construct "IL.ETextual"
                                [
                                  expression (src/action.ml[43,1808+28]..src/action.ml[43,1808+29])
                                    Texp_ident "s/652"
                                ]
                            "standard"
                              expression (src/action.ml[44,1839+16]..src/action.ml[44,1839+69])
                                Texp_apply
                                expression (src/action.ml[44,1839+43]..src/action.ml[44,1839+44])
                                  Texp_ident "Stdlib!.="
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/action.ml[44,1839+16]..src/action.ml[44,1839+42])
                                      Texp_field
                                      expression (src/action.ml[44,1839+16]..src/action.ml[44,1839+17])
                                        Texp_ident "s/652"
                                      "Stretch.stretch_filename"
                                  <arg>
                                    Nolabel
                                    expression (src/action.ml[44,1839+45]..src/action.ml[44,1839+69])
                                      Texp_ident "Dune__exe!.Settings.stdlib_filename"
                                ]
                            "semvars"
                              expression (src/action.ml[45,1910+16]..src/action.ml[45,1910+18])
                                Texp_ident "xs/651"
                            "keywords"
                              expression (src/action.ml[46,1930+16]..src/action.ml[46,1930+61])
                                Texp_apply
                                expression (src/action.ml[46,1930+16]..src/action.ml[46,1930+34])
                                  Texp_ident "MenhirSdk!.Keyword.KeywordSet.of_list"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/action.ml[46,1930+35]..src/action.ml[46,1930+61])
                                      Texp_field
                                      expression (src/action.ml[46,1930+35]..src/action.ml[46,1930+36])
                                        Texp_ident "s/652"
                                      "Stretch.stretch_keywords"
                                ]
                          ]
                        representation =
                          Record_regular
                        extended_expression =
                          None
                ]
          ]
    ]
  structure_item (src/action.ml[49,1997+0]..src/action.ml[78,2806+37])
    Tstr_value Rec
    [
      <def>
        pattern (src/action.ml[49,1997+8]..src/action.ml[49,1997+20])
          Tpat_var "from_il_expr/717"
        expression (src/action.ml[49,1997+21]..src/action.ml[55,2123+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[49,1997+21]..src/action.ml[49,1997+22])
                Tpat_var "e/720"
              expression (src/action.ml[50,2022+2]..src/action.ml[55,2123+3])
                Texp_record
                  fields =
                    [
                      "expr"
                        expression (src/action.ml[51,2026+16]..src/action.ml[51,2026+17])
                          Texp_ident "e/720"
                      "standard"
                        expression (src/action.ml[52,2045+16]..src/action.ml[52,2045+20])
                          Texp_construct "true"
                          []
                      "semvars"
                        expression (src/action.ml[53,2067+16]..src/action.ml[53,2067+20])
                          Texp_apply
                          expression (src/action.ml[53,2067+16]..src/action.ml[53,2067+18])
                            Texp_ident "fv/718"
                          [
                            <arg>
                              Nolabel
                              expression (src/action.ml[53,2067+19]..src/action.ml[53,2067+20])
                                Texp_ident "e/720"
                          ]
                      "keywords"
                        expression (src/action.ml[54,2089+16]..src/action.ml[54,2089+32])
                          Texp_ident "MenhirSdk!.Keyword.KeywordSet.empty"
                    ]
                  representation =
                    Record_regular
                  extended_expression =
                    None
          ]
      <def>
        pattern (src/action.ml[60,2228+4]..src/action.ml[60,2228+6])
          Tpat_var "fv/718"
        expression (src/action.ml[60,2228+7]..src/action.ml[61,2239+26]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[60,2228+7]..src/action.ml[60,2228+8])
                Tpat_var "e/721"
              expression (src/action.ml[61,2239+2]..src/action.ml[61,2239+26])
                Texp_apply
                expression (src/action.ml[61,2239+2]..src/action.ml[61,2239+8])
                  Texp_ident "fv_aux/719"
                [
                  <arg>
                    Nolabel
                    expression (src/action.ml[61,2239+9]..src/action.ml[61,2239+24])
                      Texp_ident "Dune__exe!.StringSet.empty"
                  <arg>
                    Nolabel
                    expression (src/action.ml[61,2239+25]..src/action.ml[61,2239+26])
                      Texp_ident "e/721"
                ]
          ]
      <def>
        pattern (src/action.ml[63,2267+4]..src/action.ml[63,2267+10])
          Tpat_var "fv_aux/719"
        expression (src/action.ml[63,2267+11]..src/action.ml[78,2806+37]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[63,2267+11]..src/action.ml[63,2267+15])
                Tpat_var "accu/722"
              expression (src/action.ml[63,2267+16]..src/action.ml[78,2806+37]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/action.ml[63,2267+16]..src/action.ml[63,2267+17])
                      Tpat_var "e/723"
                    expression (src/action.ml[64,2287+2]..src/action.ml[78,2806+37])
                      Texp_open Fresh
                      module_expr (src/action.ml[64,2287+2]..src/action.ml[64,2287+4])
                        Tmod_ident "Dune__exe!.IL"
                      expression (src/action.ml[64,2287+6]..src/action.ml[78,2806+18])
                        Texp_match
                        expression (src/action.ml[64,2287+12]..src/action.ml[64,2287+13])
                          Texp_ident "e/723"
                        [
                          <case>
                            pattern (src/action.ml[65,2306+4]..src/action.ml[65,2306+10])
                              Tpat_value
                              pattern (src/action.ml[65,2306+4]..src/action.ml[65,2306+10])
                                Tpat_construct "EVar"
                                [
                                  pattern (src/action.ml[65,2306+9]..src/action.ml[65,2306+10])
                                    Tpat_var "x/724"
                                ]
                                None
                            expression (src/action.ml[66,2320+6]..src/action.ml[66,2320+26])
                              Texp_apply
                              expression (src/action.ml[66,2320+6]..src/action.ml[66,2320+19])
                                Texp_ident "Dune__exe!.StringSet.add"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/action.ml[66,2320+20]..src/action.ml[66,2320+21])
                                    Texp_ident "x/724"
                                <arg>
                                  Nolabel
                                  expression (src/action.ml[66,2320+22]..src/action.ml[66,2320+26])
                                    Texp_ident "accu/722"
                              ]
                          <case>
                            pattern (src/action.ml[67,2347+4]..src/action.ml[67,2347+14])
                              Tpat_value
                              pattern (src/action.ml[67,2347+4]..src/action.ml[67,2347+14])
                                Tpat_construct "ETextual"
                                [
                                  pattern (src/action.ml[67,2347+13]..src/action.ml[67,2347+14])
                                    Tpat_any
                                ]
                                None
                            expression (src/action.ml[72,2670+6]..src/action.ml[72,2670+10])
                              Texp_ident "accu/722"
                          <case>
                            pattern (src/action.ml[73,2681+4]..src/action.ml[73,2681+13])
                              Tpat_value
                              pattern (src/action.ml[73,2681+4]..src/action.ml[73,2681+13])
                                Tpat_construct "ETuple"
                                [
                                  pattern (src/action.ml[73,2681+11]..src/action.ml[73,2681+13])
                                    Tpat_var "es/725"
                                ]
                                None
                            expression (src/action.ml[74,2698+6]..src/action.ml[74,2698+35])
                              Texp_apply
                              expression (src/action.ml[74,2698+6]..src/action.ml[74,2698+20])
                                Texp_ident "Stdlib!.List.fold_left"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/action.ml[74,2698+21]..src/action.ml[74,2698+27])
                                    Texp_ident "fv_aux/719"
                                <arg>
                                  Nolabel
                                  expression (src/action.ml[74,2698+28]..src/action.ml[74,2698+32])
                                    Texp_ident "accu/722"
                                <arg>
                                  Nolabel
                                  expression (src/action.ml[74,2698+33]..src/action.ml[74,2698+35])
                                    Texp_ident "es/725"
                              ]
                          <case>
                            pattern (src/action.ml[75,2734+4]..src/action.ml[75,2734+16])
                              Tpat_value
                              pattern (src/action.ml[75,2734+4]..src/action.ml[75,2734+16])
                                Tpat_construct "EApp"
                                [
                                  pattern (src/action.ml[75,2734+10]..src/action.ml[75,2734+11])
                                    Tpat_var "e/726"
                                  pattern (src/action.ml[75,2734+13]..src/action.ml[75,2734+15])
                                    Tpat_var "es/727"
                                ]
                                None
                            expression (src/action.ml[76,2754+6]..src/action.ml[76,2754+42])
                              Texp_apply
                              expression (src/action.ml[76,2754+6]..src/action.ml[76,2754+20])
                                Texp_ident "Stdlib!.List.fold_left"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/action.ml[76,2754+21]..src/action.ml[76,2754+27])
                                    Texp_ident "fv_aux/719"
                                <arg>
                                  Nolabel
                                  expression (src/action.ml[76,2754+28]..src/action.ml[76,2754+32])
                                    Texp_ident "accu/722"
                                <arg>
                                  Nolabel
                                  expression (src/action.ml[76,2754+33]..src/action.ml[76,2754+42])
                                    Texp_construct "::"
                                    [
                                      expression (src/action.ml[76,2754+34]..src/action.ml[76,2754+35])
                                        Texp_ident "e/726"
                                      expression (src/action.ml[76,2754+39]..src/action.ml[76,2754+41])
                                        Texp_ident "es/727"
                                    ]
                              ]
                          <case>
                            pattern (src/action.ml[77,2797+4]..src/action.ml[77,2797+5])
                              Tpat_value
                              pattern (src/action.ml[77,2797+4]..src/action.ml[77,2797+5])
                                Tpat_any
                            expression (src/action.ml[78,2806+6]..src/action.ml[78,2806+18])
                              Texp_assert                              expression (src/action.ml[78,2806+13]..src/action.ml[78,2806+18])
                                Texp_construct "false"
                                []
                        ]
                ]
          ]
    ]
  structure_item (src/action.ml[84,2963+0]..src/action.ml[94,3521+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[84,2963+4]..src/action.ml[84,2963+11])
          Tpat_var "compose/794"
        expression (src/action.ml[84,2963+12]..src/action.ml[94,3521+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[84,2963+12]..src/action.ml[84,2963+13])
                Tpat_var "x/796"
              expression (src/action.ml[84,2963+14]..src/action.ml[94,3521+3]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/action.ml[84,2963+14]..src/action.ml[84,2963+16])
                      Tpat_var "a1/797"
                    expression (src/action.ml[84,2963+17]..src/action.ml[94,3521+3]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/action.ml[84,2963+17]..src/action.ml[84,2963+19])
                            Tpat_var "a2/798"
                          expression (src/action.ml[89,3274+2]..src/action.ml[94,3521+3])
                            Texp_record
                              fields =
                                [
                                  "expr"
                                    expression (src/action.ml[90,3278+16]..src/action.ml[90,3278+63])
                                      Texp_apply
                                      expression (src/action.ml[90,3278+16]..src/action.ml[90,3278+29])
                                        Texp_ident "Dune__exe!.CodeBits.blet"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/action.ml[90,3278+30]..src/action.ml[90,3278+63])
                                            Texp_tuple
                                            [
                                              expression (src/action.ml[90,3278+31]..src/action.ml[90,3278+53])
                                                Texp_construct "::"
                                                [
                                                  expression (src/action.ml[90,3278+33]..src/action.ml[90,3278+51])
                                                    Texp_tuple
                                                    [
                                                      expression (src/action.ml[90,3278+33]..src/action.ml[90,3278+42])
                                                        Texp_construct "IL.PVar"
                                                        [
                                                          expression (src/action.ml[90,3278+41]..src/action.ml[90,3278+42])
                                                            Texp_ident "x/796"
                                                        ]
                                                      expression (src/action.ml[90,3278+44]..src/action.ml[90,3278+51])
                                                        Texp_field
                                                        expression (src/action.ml[90,3278+44]..src/action.ml[90,3278+46])
                                                          Texp_ident "a1/797"
                                                        "expr"
                                                    ]
                                                  expression (src/action.ml[90,3278+52]..src/action.ml[90,3278+53]) ghost
                                                    Texp_construct "[]"
                                                    []
                                                ]
                                              expression (src/action.ml[90,3278+55]..src/action.ml[90,3278+62])
                                                Texp_field
                                                expression (src/action.ml[90,3278+55]..src/action.ml[90,3278+57])
                                                  Texp_ident "a2/798"
                                                "expr"
                                            ]
                                      ]
                                  "standard"
                                    expression (src/action.ml[93,3477+16]..src/action.ml[93,3477+42])
                                      Texp_apply
                                      expression (src/action.ml[93,3477+28]..src/action.ml[93,3477+30])
                                        Texp_ident "Stdlib!.&&"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/action.ml[93,3477+16]..src/action.ml[93,3477+27])
                                            Texp_field
                                            expression (src/action.ml[93,3477+16]..src/action.ml[93,3477+18])
                                              Texp_ident "a1/797"
                                            "standard"
                                        <arg>
                                          Nolabel
                                          expression (src/action.ml[93,3477+31]..src/action.ml[93,3477+42])
                                            Texp_field
                                            expression (src/action.ml[93,3477+31]..src/action.ml[93,3477+33])
                                              Texp_ident "a2/798"
                                            "standard"
                                      ]
                                  "semvars"
                                    expression (src/action.ml[91,3343+16]..src/action.ml[91,3343+74])
                                      Texp_apply
                                      expression (src/action.ml[91,3343+16]..src/action.ml[91,3343+31])
                                        Texp_ident "Dune__exe!.StringSet.union"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/action.ml[91,3343+32]..src/action.ml[91,3343+42])
                                            Texp_field
                                            expression (src/action.ml[91,3343+32]..src/action.ml[91,3343+34])
                                              Texp_ident "a1/797"
                                            "semvars"
                                        <arg>
                                          Nolabel
                                          expression (src/action.ml[91,3343+43]..src/action.ml[91,3343+74])
                                            Texp_apply
                                            expression (src/action.ml[91,3343+44]..src/action.ml[91,3343+60])
                                              Texp_ident "Dune__exe!.StringSet.remove"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/action.ml[91,3343+61]..src/action.ml[91,3343+62])
                                                  Texp_ident "x/796"
                                              <arg>
                                                Nolabel
                                                expression (src/action.ml[91,3343+63]..src/action.ml[91,3343+73])
                                                  Texp_field
                                                  expression (src/action.ml[91,3343+63]..src/action.ml[91,3343+65])
                                                    Texp_ident "a2/798"
                                                  "semvars"
                                            ]
                                      ]
                                  "keywords"
                                    expression (src/action.ml[92,3419+16]..src/action.ml[92,3419+56])
                                      Texp_apply
                                      expression (src/action.ml[92,3419+16]..src/action.ml[92,3419+32])
                                        Texp_ident "MenhirSdk!.Keyword.KeywordSet.union"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/action.ml[92,3419+33]..src/action.ml[92,3419+44])
                                            Texp_field
                                            expression (src/action.ml[92,3419+33]..src/action.ml[92,3419+35])
                                              Texp_ident "a1/797"
                                            "keywords"
                                        <arg>
                                          Nolabel
                                          expression (src/action.ml[92,3419+45]..src/action.ml[92,3419+56])
                                            Texp_field
                                            expression (src/action.ml[92,3419+45]..src/action.ml[92,3419+47])
                                              Texp_ident "a2/798"
                                            "keywords"
                                      ]
                                ]
                              representation =
                                Record_regular
                              extended_expression =
                                None
                      ]
                ]
          ]
    ]
  structure_item (src/action.ml[98,3560+0]..src/action.ml[122,4116+37])
    Tstr_value Rec
    [
      <def>
        pattern (src/action.ml[98,3560+8]..src/action.ml[98,3560+12])
          Tpat_var "bind/846"
        expression (src/action.ml[98,3560+13]..src/action.ml[104,3766+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[98,3560+13]..src/action.ml[98,3560+14])
                Tpat_var "p/849"
              expression (src/action.ml[98,3560+15]..src/action.ml[104,3766+3]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/action.ml[98,3560+15]..src/action.ml[98,3560+16])
                      Tpat_var "x/850"
                    expression (src/action.ml[98,3560+17]..src/action.ml[104,3766+3]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/action.ml[98,3560+17]..src/action.ml[98,3560+18])
                            Tpat_var "a/851"
                          expression (src/action.ml[99,3581+2]..src/action.ml[104,3766+3])
                            Texp_record
                              fields =
                                [
                                  "expr"
                                    expression (src/action.ml[100,3585+16]..src/action.ml[100,3585+56])
                                      Texp_apply
                                      expression (src/action.ml[100,3585+16]..src/action.ml[100,3585+29])
                                        Texp_ident "Dune__exe!.CodeBits.blet"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/action.ml[100,3585+30]..src/action.ml[100,3585+56])
                                            Texp_tuple
                                            [
                                              expression (src/action.ml[100,3585+31]..src/action.ml[100,3585+47])
                                                Texp_construct "::"
                                                [
                                                  expression (src/action.ml[100,3585+33]..src/action.ml[100,3585+45])
                                                    Texp_tuple
                                                    [
                                                      expression (src/action.ml[100,3585+33]..src/action.ml[100,3585+34])
                                                        Texp_ident "p/849"
                                                      expression (src/action.ml[100,3585+36]..src/action.ml[100,3585+45])
                                                        Texp_construct "IL.EVar"
                                                        [
                                                          expression (src/action.ml[100,3585+44]..src/action.ml[100,3585+45])
                                                            Texp_ident "x/850"
                                                        ]
                                                    ]
                                                  expression (src/action.ml[100,3585+46]..src/action.ml[100,3585+47]) ghost
                                                    Texp_construct "[]"
                                                    []
                                                ]
                                              expression (src/action.ml[100,3585+49]..src/action.ml[100,3585+55])
                                                Texp_field
                                                expression (src/action.ml[100,3585+49]..src/action.ml[100,3585+50])
                                                  Texp_ident "a/851"
                                                "expr"
                                            ]
                                      ]
                                  "standard"
                                    expression (src/action.ml[103,3738+16]..src/action.ml[103,3738+26])
                                      Texp_field
                                      expression (src/action.ml[103,3738+16]..src/action.ml[103,3738+17])
                                        Texp_ident "a/851"
                                      "standard"
                                  "semvars"
                                    expression (src/action.ml[101,3643+16]..src/action.ml[101,3643+65])
                                      Texp_apply
                                      expression (src/action.ml[101,3643+16]..src/action.ml[101,3643+29])
                                        Texp_ident "Dune__exe!.StringSet.add"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/action.ml[101,3643+30]..src/action.ml[101,3643+31])
                                            Texp_ident "x/850"
                                        <arg>
                                          Nolabel
                                          expression (src/action.ml[101,3643+32]..src/action.ml[101,3643+65])
                                            Texp_apply
                                            expression (src/action.ml[101,3643+33]..src/action.ml[101,3643+47])
                                              Texp_ident "Dune__exe!.StringSet.diff"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/action.ml[101,3643+48]..src/action.ml[101,3643+57])
                                                  Texp_field
                                                  expression (src/action.ml[101,3643+48]..src/action.ml[101,3643+49])
                                                    Texp_ident "a/851"
                                                  "semvars"
                                              <arg>
                                                Nolabel
                                                expression (src/action.ml[101,3643+58]..src/action.ml[101,3643+64])
                                                  Texp_apply
                                                  expression (src/action.ml[101,3643+59]..src/action.ml[101,3643+61])
                                                    Texp_ident "bv/847"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/action.ml[101,3643+62]..src/action.ml[101,3643+63])
                                                        Texp_ident "p/849"
                                                  ]
                                            ]
                                      ]
                                  "keywords"
                                    expression (src/action.ml[102,3710+16]..src/action.ml[102,3710+26])
                                      Texp_field
                                      expression (src/action.ml[102,3710+16]..src/action.ml[102,3710+17])
                                        Texp_ident "a/851"
                                      "keywords"
                                ]
                              representation =
                                Record_regular
                              extended_expression =
                                None
                      ]
                ]
          ]
      <def>
        pattern (src/action.ml[109,3897+4]..src/action.ml[109,3897+6])
          Tpat_var "bv/847"
        expression (src/action.ml[109,3897+7]..src/action.ml[110,3908+26]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[109,3897+7]..src/action.ml[109,3897+8])
                Tpat_var "p/852"
              expression (src/action.ml[110,3908+2]..src/action.ml[110,3908+26])
                Texp_apply
                expression (src/action.ml[110,3908+2]..src/action.ml[110,3908+8])
                  Texp_ident "bv_aux/848"
                [
                  <arg>
                    Nolabel
                    expression (src/action.ml[110,3908+9]..src/action.ml[110,3908+24])
                      Texp_ident "Dune__exe!.StringSet.empty"
                  <arg>
                    Nolabel
                    expression (src/action.ml[110,3908+25]..src/action.ml[110,3908+26])
                      Texp_ident "p/852"
                ]
          ]
      <def>
        pattern (src/action.ml[112,3936+4]..src/action.ml[112,3936+10])
          Tpat_var "bv_aux/848"
        expression (src/action.ml[112,3936+11]..src/action.ml[122,4116+37]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[112,3936+11]..src/action.ml[112,3936+15])
                Tpat_var "accu/853"
              expression (src/action.ml[112,3936+16]..src/action.ml[122,4116+37]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/action.ml[112,3936+16]..src/action.ml[112,3936+17])
                      Tpat_var "p/854"
                    expression (src/action.ml[113,3956+2]..src/action.ml[122,4116+37])
                      Texp_open Fresh
                      module_expr (src/action.ml[113,3956+2]..src/action.ml[113,3956+4])
                        Tmod_ident "Dune__exe!.IL"
                      expression (src/action.ml[113,3956+6]..src/action.ml[122,4116+18])
                        Texp_match
                        expression (src/action.ml[113,3956+12]..src/action.ml[113,3956+13])
                          Texp_ident "p/854"
                        [
                          <case>
                            pattern (src/action.ml[114,3975+4]..src/action.ml[115,3989+9])
                              Tpat_or
                              pattern (src/action.ml[114,3975+4]..src/action.ml[114,3975+13])
                                Tpat_value
                                pattern (src/action.ml[114,3975+4]..src/action.ml[114,3975+13])
                                  Tpat_construct "PWildcard"
                                  []
                                  None
                              pattern (src/action.ml[115,3989+4]..src/action.ml[115,3989+9])
                                Tpat_value
                                pattern (src/action.ml[115,3989+4]..src/action.ml[115,3989+9])
                                  Tpat_construct "PUnit"
                                  []
                                  None
                            expression (src/action.ml[116,4002+6]..src/action.ml[116,4002+10])
                              Texp_ident "accu/853"
                          <case>
                            pattern (src/action.ml[117,4013+4]..src/action.ml[117,4013+10])
                              Tpat_value
                              pattern (src/action.ml[117,4013+4]..src/action.ml[117,4013+10])
                                Tpat_construct "PVar"
                                [
                                  pattern (src/action.ml[117,4013+9]..src/action.ml[117,4013+10])
                                    Tpat_var "x/855"
                                ]
                                None
                            expression (src/action.ml[118,4027+6]..src/action.ml[118,4027+26])
                              Texp_apply
                              expression (src/action.ml[118,4027+6]..src/action.ml[118,4027+19])
                                Texp_ident "Dune__exe!.StringSet.add"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/action.ml[118,4027+20]..src/action.ml[118,4027+21])
                                    Texp_ident "x/855"
                                <arg>
                                  Nolabel
                                  expression (src/action.ml[118,4027+22]..src/action.ml[118,4027+26])
                                    Texp_ident "accu/853"
                              ]
                          <case>
                            pattern (src/action.ml[119,4054+4]..src/action.ml[119,4054+13])
                              Tpat_value
                              pattern (src/action.ml[119,4054+4]..src/action.ml[119,4054+13])
                                Tpat_construct "PTuple"
                                [
                                  pattern (src/action.ml[119,4054+11]..src/action.ml[119,4054+13])
                                    Tpat_var "ps/856"
                                ]
                                None
                            expression (src/action.ml[120,4071+6]..src/action.ml[120,4071+35])
                              Texp_apply
                              expression (src/action.ml[120,4071+6]..src/action.ml[120,4071+20])
                                Texp_ident "Stdlib!.List.fold_left"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/action.ml[120,4071+21]..src/action.ml[120,4071+27])
                                    Texp_ident "bv_aux/848"
                                <arg>
                                  Nolabel
                                  expression (src/action.ml[120,4071+28]..src/action.ml[120,4071+32])
                                    Texp_ident "accu/853"
                                <arg>
                                  Nolabel
                                  expression (src/action.ml[120,4071+33]..src/action.ml[120,4071+35])
                                    Texp_ident "ps/856"
                              ]
                          <case>
                            pattern (src/action.ml[121,4107+4]..src/action.ml[121,4107+5])
                              Tpat_value
                              pattern (src/action.ml[121,4107+4]..src/action.ml[121,4107+5])
                                Tpat_any
                            expression (src/action.ml[122,4116+6]..src/action.ml[122,4116+18])
                              Texp_assert                              expression (src/action.ml[122,4116+13]..src/action.ml[122,4116+18])
                                Texp_construct "false"
                                []
                        ]
                ]
          ]
    ]
  structure_item (src/action.ml[128,4255+0]..src/action.ml[129,4279+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[128,4255+4]..src/action.ml[128,4255+14])
          Tpat_var "to_il_expr/927"
        expression (src/action.ml[128,4255+15]..src/action.ml[129,4279+13]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[128,4255+15]..src/action.ml[128,4255+21])
                Tpat_var "action/929"
              expression (src/action.ml[129,4279+2]..src/action.ml[129,4279+13])
                Texp_field
                expression (src/action.ml[129,4279+2]..src/action.ml[129,4279+8])
                  Texp_ident "action/929"
                "expr"
          ]
    ]
  structure_item (src/action.ml[131,4294+0]..src/action.ml[132,4319+17])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[131,4294+4]..src/action.ml[131,4294+15])
          Tpat_var "is_standard/930"
        expression (src/action.ml[131,4294+16]..src/action.ml[132,4319+17]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[131,4294+16]..src/action.ml[131,4294+22])
                Tpat_var "action/932"
              expression (src/action.ml[132,4319+2]..src/action.ml[132,4319+17])
                Texp_field
                expression (src/action.ml[132,4319+2]..src/action.ml[132,4319+8])
                  Texp_ident "action/932"
                "standard"
          ]
    ]
  structure_item (src/action.ml[134,4338+0]..src/action.ml[135,4359+16])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[134,4338+4]..src/action.ml[134,4338+11])
          Tpat_var "semvars/933"
        expression (src/action.ml[134,4338+12]..src/action.ml[135,4359+16]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[134,4338+12]..src/action.ml[134,4338+18])
                Tpat_var "action/935"
              expression (src/action.ml[135,4359+2]..src/action.ml[135,4359+16])
                Texp_field
                expression (src/action.ml[135,4359+2]..src/action.ml[135,4359+8])
                  Texp_ident "action/935"
                "semvars"
          ]
    ]
  structure_item (src/action.ml[137,4377+0]..src/action.ml[138,4399+17])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[137,4377+4]..src/action.ml[137,4377+12])
          Tpat_var "keywords/936"
        expression (src/action.ml[137,4377+13]..src/action.ml[138,4399+17]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[137,4377+13]..src/action.ml[137,4377+19])
                Tpat_var "action/938"
              expression (src/action.ml[138,4399+2]..src/action.ml[138,4399+17])
                Texp_field
                expression (src/action.ml[138,4399+2]..src/action.ml[138,4399+8])
                  Texp_ident "action/938"
                "keywords"
          ]
    ]
  structure_item (src/action.ml[140,4418+0]..src/action.ml[141,4447+44])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[140,4418+4]..src/action.ml[140,4418+19])
          Tpat_var "has_syntaxerror/939"
        expression (src/action.ml[140,4418+20]..src/action.ml[141,4447+44]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[140,4418+20]..src/action.ml[140,4418+26])
                Tpat_var "action/941"
              expression (src/action.ml[141,4447+2]..src/action.ml[141,4447+44])
                Texp_apply
                expression (src/action.ml[141,4447+2]..src/action.ml[141,4447+16])
                  Texp_ident "MenhirSdk!.Keyword.KeywordSet.mem"
                [
                  <arg>
                    Nolabel
                    expression (src/action.ml[141,4447+17]..src/action.ml[141,4447+28])
                      Texp_construct "SyntaxError"
                      []
                  <arg>
                    Nolabel
                    expression (src/action.ml[141,4447+29]..src/action.ml[141,4447+44])
                      Texp_field
                      expression (src/action.ml[141,4447+29]..src/action.ml[141,4447+35])
                        Texp_ident "action/941"
                      "keywords"
                ]
          ]
    ]
  structure_item (src/action.ml[143,4493+0]..src/action.ml[144,4520+78])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[143,4493+4]..src/action.ml[143,4493+17])
          Tpat_var "has_beforeend/942"
        expression (src/action.ml[143,4493+18]..src/action.ml[144,4520+78]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[143,4493+18]..src/action.ml[143,4493+24])
                Tpat_var "action/944"
              expression (src/action.ml[144,4520+2]..src/action.ml[144,4520+78])
                Texp_apply
                expression (src/action.ml[144,4520+2]..src/action.ml[144,4520+16])
                  Texp_ident "MenhirSdk!.Keyword.KeywordSet.mem"
                [
                  <arg>
                    Nolabel
                    expression (src/action.ml[144,4520+17]..src/action.ml[144,4520+62])
                      Texp_construct "Position"
                      [
                        expression (src/action.ml[144,4520+28]..src/action.ml[144,4520+34])
                          Texp_construct "Before"
                          []
                        expression (src/action.ml[144,4520+36]..src/action.ml[144,4520+44])
                          Texp_construct "WhereEnd"
                          []
                        expression (src/action.ml[144,4520+46]..src/action.ml[144,4520+60])
                          Texp_construct "FlavorPosition"
                          []
                      ]
                  <arg>
                    Nolabel
                    expression (src/action.ml[144,4520+63]..src/action.ml[144,4520+78])
                      Texp_field
                      expression (src/action.ml[144,4520+63]..src/action.ml[144,4520+69])
                        Texp_ident "action/944"
                      "keywords"
                ]
          ]
    ]
  structure_item (src/action.ml[146,4600+0]..src/action.ml[154,4814+37])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[146,4600+4]..src/action.ml[146,4600+11])
          Tpat_var "posvars/945"
        expression (src/action.ml[146,4600+12]..src/action.ml[154,4814+37]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[146,4600+12]..src/action.ml[146,4600+18])
                Tpat_var "action/947"
              expression (src/action.ml[147,4621+2]..src/action.ml[154,4814+37])
                Texp_apply
                expression (src/action.ml[147,4621+2]..src/action.ml[147,4621+17])
                  Texp_ident "MenhirSdk!.Keyword.KeywordSet.fold"
                [
                  <arg>
                    Nolabel
                    expression (src/action.ml[147,4621+18]..src/action.ml[154,4814+3])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/action.ml[147,4621+23]..src/action.ml[147,4621+30])
                            Tpat_var "keyword/948"
                          expression (src/action.ml[147,4621+31]..src/action.ml[153,4785+28]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/action.ml[147,4621+31]..src/action.ml[147,4621+35])
                                  Tpat_var "accu/949"
                                expression (src/action.ml[148,4660+4]..src/action.ml[153,4785+28])
                                  Texp_match
                                  expression (src/action.ml[148,4660+10]..src/action.ml[148,4660+17])
                                    Texp_ident "keyword/948"
                                  [
                                    <case>
                                      pattern (src/action.ml[149,4683+6]..src/action.ml[149,4683+17])
                                        Tpat_value
                                        pattern (src/action.ml[149,4683+6]..src/action.ml[149,4683+17])
                                          Tpat_construct "SyntaxError"
                                          []
                                          None
                                      expression (src/action.ml[150,4704+8]..src/action.ml[150,4704+12])
                                        Texp_ident "accu/949"
                                    <case>
                                      pattern (src/action.ml[151,4717+6]..src/action.ml[151,4717+24])
                                        Tpat_value
                                        pattern (src/action.ml[151,4717+6]..src/action.ml[151,4717+24])
                                          Tpat_construct "Position"
                                          [
                                            pattern (src/action.ml[151,4717+16]..src/action.ml[151,4717+17])
                                              Tpat_var "s/950"
                                            pattern (src/action.ml[151,4717+19]..src/action.ml[151,4717+20])
                                              Tpat_var "w/951"
                                            pattern (src/action.ml[151,4717+22]..src/action.ml[151,4717+23])
                                              Tpat_var "f/952"
                                          ]
                                          None
                                      expression (src/action.ml[152,4745+8]..src/action.ml[153,4785+28])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/action.ml[152,4745+12]..src/action.ml[152,4745+13])
                                              Tpat_var "x/953"
                                            expression (src/action.ml[152,4745+16]..src/action.ml[152,4745+36])
                                              Texp_apply
                                              expression (src/action.ml[152,4745+16]..src/action.ml[152,4745+30])
                                                Texp_ident "MenhirSdk!.Keyword.posvar"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/action.ml[152,4745+31]..src/action.ml[152,4745+32])
                                                    Texp_ident "s/950"
                                                <arg>
                                                  Nolabel
                                                  expression (src/action.ml[152,4745+33]..src/action.ml[152,4745+34])
                                                    Texp_ident "w/951"
                                                <arg>
                                                  Nolabel
                                                  expression (src/action.ml[152,4745+35]..src/action.ml[152,4745+36])
                                                    Texp_ident "f/952"
                                              ]
                                        ]
                                        expression (src/action.ml[153,4785+8]..src/action.ml[153,4785+28])
                                          Texp_apply
                                          expression (src/action.ml[153,4785+8]..src/action.ml[153,4785+21])
                                            Texp_ident "Dune__exe!.StringSet.add"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/action.ml[153,4785+22]..src/action.ml[153,4785+23])
                                                Texp_ident "x/953"
                                            <arg>
                                              Nolabel
                                              expression (src/action.ml[153,4785+24]..src/action.ml[153,4785+28])
                                                Texp_ident "accu/949"
                                          ]
                                  ]
                            ]
                      ]
                  <arg>
                    Nolabel
                    expression (src/action.ml[154,4814+4]..src/action.ml[154,4814+21])
                      Texp_apply
                      expression (src/action.ml[154,4814+5]..src/action.ml[154,4814+13])
                        Texp_ident "keywords/936"
                      [
                        <arg>
                          Nolabel
                          expression (src/action.ml[154,4814+14]..src/action.ml[154,4814+20])
                            Texp_ident "action/947"
                      ]
                  <arg>
                    Nolabel
                    expression (src/action.ml[154,4814+22]..src/action.ml[154,4814+37])
                      Texp_ident "Dune__exe!.StringSet.empty"
                ]
          ]
    ]
  structure_item (src/action.ml[156,4853+0]..src/action.ml[157,4871+51])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[156,4853+4]..src/action.ml[156,4853+8])
          Tpat_var "vars/954"
        expression (src/action.ml[156,4853+9]..src/action.ml[157,4871+51]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[156,4853+9]..src/action.ml[156,4853+15])
                Tpat_var "action/956"
              expression (src/action.ml[157,4871+2]..src/action.ml[157,4871+51])
                Texp_apply
                expression (src/action.ml[157,4871+2]..src/action.ml[157,4871+17])
                  Texp_ident "Dune__exe!.StringSet.union"
                [
                  <arg>
                    Nolabel
                    expression (src/action.ml[157,4871+18]..src/action.ml[157,4871+34])
                      Texp_apply
                      expression (src/action.ml[157,4871+19]..src/action.ml[157,4871+26])
                        Texp_ident "semvars/933"
                      [
                        <arg>
                          Nolabel
                          expression (src/action.ml[157,4871+27]..src/action.ml[157,4871+33])
                            Texp_ident "action/956"
                      ]
                  <arg>
                    Nolabel
                    expression (src/action.ml[157,4871+35]..src/action.ml[157,4871+51])
                      Texp_apply
                      expression (src/action.ml[157,4871+36]..src/action.ml[157,4871+43])
                        Texp_ident "posvars/945"
                      [
                        <arg>
                          Nolabel
                          expression (src/action.ml[157,4871+44]..src/action.ml[157,4871+50])
                            Texp_ident "action/956"
                      ]
                ]
          ]
    ]
  structure_item (src/action.ml[163,5060+0]..src/action.ml[171,5354+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[163,5060+4]..src/action.ml[163,5060+10])
          Tpat_var "define/957"
        expression (src/action.ml[163,5060+11]..src/action.ml[171,5354+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[163,5060+11]..src/action.ml[163,5060+18])
                Tpat_var "keyword/959"
              expression (src/action.ml[163,5060+19]..src/action.ml[171,5354+3]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/action.ml[163,5060+19]..src/action.ml[163,5060+27])
                      Tpat_var "keywords/960"
                    expression (src/action.ml[163,5060+28]..src/action.ml[171,5354+3]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/action.ml[163,5060+28]..src/action.ml[163,5060+29])
                            Tpat_var "f/961"
                          expression (src/action.ml[163,5060+30]..src/action.ml[171,5354+3]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/action.ml[163,5060+30]..src/action.ml[163,5060+36])
                                  Tpat_var "action/962"
                                expression (src/action.ml[164,5099+2]..src/action.ml[171,5354+3])
                                  Texp_sequence
                                  expression (src/action.ml[164,5099+2]..src/action.ml[164,5099+49])
                                    Texp_assert                                    expression (src/action.ml[164,5099+9]..src/action.ml[164,5099+49])
                                      Texp_apply
                                      expression (src/action.ml[164,5099+10]..src/action.ml[164,5099+24])
                                        Texp_ident "MenhirSdk!.Keyword.KeywordSet.mem"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/action.ml[164,5099+25]..src/action.ml[164,5099+32])
                                            Texp_ident "keyword/959"
                                        <arg>
                                          Nolabel
                                          expression (src/action.ml[164,5099+33]..src/action.ml[164,5099+48])
                                            Texp_field
                                            expression (src/action.ml[164,5099+33]..src/action.ml[164,5099+39])
                                              Texp_ident "action/962"
                                            "keywords"
                                      ]
                                  expression (src/action.ml[165,5150+2]..src/action.ml[171,5354+3])
                                    Texp_record
                                      fields =
                                        [
                                          "expr"
                                            expression (src/action.ml[166,5154+16]..src/action.ml[166,5154+29])
                                              Texp_apply
                                              expression (src/action.ml[166,5154+16]..src/action.ml[166,5154+17])
                                                Texp_ident "f/961"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/action.ml[166,5154+18]..src/action.ml[166,5154+29])
                                                    Texp_field
                                                    expression (src/action.ml[166,5154+18]..src/action.ml[166,5154+24])
                                                      Texp_ident "action/962"
                                                    "expr"
                                              ]
                                          "standard"
                                            expression (src/action.ml[167,5185+16]..src/action.ml[167,5185+31])
                                              Texp_field
                                              expression (src/action.ml[167,5185+16]..src/action.ml[167,5185+22])
                                                Texp_ident "action/962"
                                              "standard"
                                          "semvars"
                                            expression (src/action.ml[168,5218+16]..src/action.ml[168,5218+30])
                                              Texp_field
                                              expression (src/action.ml[168,5218+16]..src/action.ml[168,5218+22])
                                                Texp_ident "action/962"
                                              "semvars"
                                          "keywords"
                                            expression (src/action.ml[169,5250+16]..src/action.ml[170,5283+70])
                                              Texp_apply
                                              expression (src/action.ml[169,5250+16]..src/action.ml[169,5250+32])
                                                Texp_ident "MenhirSdk!.Keyword.KeywordSet.union"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/action.ml[170,5283+18]..src/action.ml[170,5283+26])
                                                    Texp_ident "keywords/960"
                                                <arg>
                                                  Nolabel
                                                  expression (src/action.ml[170,5283+27]..src/action.ml[170,5283+70])
                                                    Texp_apply
                                                    expression (src/action.ml[170,5283+28]..src/action.ml[170,5283+45])
                                                      Texp_ident "MenhirSdk!.Keyword.KeywordSet.remove"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/action.ml[170,5283+46]..src/action.ml[170,5283+53])
                                                          Texp_ident "keyword/959"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/action.ml[170,5283+54]..src/action.ml[170,5283+69])
                                                          Texp_field
                                                          expression (src/action.ml[170,5283+54]..src/action.ml[170,5283+60])
                                                            Texp_ident "action/962"
                                                          "keywords"
                                                    ]
                                              ]
                                        ]
                                      representation =
                                        Record_regular
                                      extended_expression =
                                        None
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/action.ml[182,5832+0]..src/action.ml[186,5921+3])
    Tstr_type Rec
    [
      type_declaration subst/963 (src/action.ml[182,5832+0]..src/action.ml[186,5921+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (src/action.ml[184,5849+4]..src/action.ml[184,5849+35])
                Immutable
                semvar/964                core_type (src/action.ml[184,5849+12]..src/action.ml[184,5849+34])
                  Ttyp_poly
                  core_type (src/action.ml[184,5849+12]..src/action.ml[184,5849+34])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/action.ml[184,5849+13]..src/action.ml[184,5849+28])
                        Ttyp_tuple
                        [
                          core_type (src/action.ml[184,5849+13]..src/action.ml[184,5849+19])
                            Ttyp_constr "string/15!"
                            []
                          core_type (src/action.ml[184,5849+22]..src/action.ml[184,5849+28])
                            Ttyp_constr "string/15!"
                            []
                        ]
                    ]
              (src/action.ml[185,5885+4]..src/action.ml[185,5885+35])
                Immutable
                posvar/965                core_type (src/action.ml[185,5885+12]..src/action.ml[185,5885+34])
                  Ttyp_poly
                  core_type (src/action.ml[185,5885+12]..src/action.ml[185,5885+34])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/action.ml[185,5885+13]..src/action.ml[185,5885+28])
                        Ttyp_tuple
                        [
                          core_type (src/action.ml[185,5885+13]..src/action.ml[185,5885+19])
                            Ttyp_constr "string/15!"
                            []
                          core_type (src/action.ml[185,5885+22]..src/action.ml[185,5885+28])
                            Ttyp_constr "string/15!"
                            []
                        ]
                    ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/action.ml[188,5926+0]..src/action.ml[189,5938+30])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[188,5926+4]..src/action.ml[188,5926+9])
          Tpat_var "empty/966"
        expression (src/action.ml[189,5938+2]..src/action.ml[189,5938+30])
          Texp_record
            fields =
              [
                "semvar"
                  expression (src/action.ml[189,5938+13]..src/action.ml[189,5938+15])
                    Texp_construct "[]"
                    []
                "posvar"
                  expression (src/action.ml[189,5938+26]..src/action.ml[189,5938+28])
                    Texp_construct "[]"
                    []
              ]
            representation =
              Record_regular
            extended_expression =
              None
    ]
  structure_item (src/action.ml[191,5970+0]..src/action.ml[193,6031+39])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[191,5970+4]..src/action.ml[191,5970+11])
          Tpat_var "extend1/967"
        expression (src/action.ml[191,5970+12]..src/action.ml[193,6031+39]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[191,5970+12]..src/action.ml[191,5970+13])
                Tpat_var "x/969"
              expression (src/action.ml[191,5970+14]..src/action.ml[193,6031+39]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/action.ml[191,5970+14]..src/action.ml[191,5970+15])
                      Tpat_var "y/970"
                    expression (src/action.ml[191,5970+16]..src/action.ml[193,6031+39]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/action.ml[191,5970+16]..src/action.ml[191,5970+19])
                            Tpat_var "var/971"
                          expression (src/action.ml[192,5992+2]..src/action.ml[193,6031+39])
                            Texp_sequence
                            expression (src/action.ml[192,5992+2]..src/action.ml[192,5992+37])
                              Texp_assert                              expression (src/action.ml[192,5992+9]..src/action.ml[192,5992+37])
                                Texp_apply
                                expression (src/action.ml[192,5992+10]..src/action.ml[192,5992+13])
                                  Texp_ident "Stdlib!.not"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/action.ml[192,5992+14]..src/action.ml[192,5992+36])
                                      Texp_apply
                                      expression (src/action.ml[192,5992+15]..src/action.ml[192,5992+29])
                                        Texp_ident "Stdlib!.List.mem_assoc"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/action.ml[192,5992+30]..src/action.ml[192,5992+31])
                                            Texp_ident "x/969"
                                        <arg>
                                          Nolabel
                                          expression (src/action.ml[192,5992+32]..src/action.ml[192,5992+35])
                                            Texp_ident "var/971"
                                      ]
                                ]
                            expression (src/action.ml[193,6031+2]..src/action.ml[193,6031+39])
                              Texp_ifthenelse
                              expression (src/action.ml[193,6031+5]..src/action.ml[193,6031+11])
                                Texp_apply
                                expression (src/action.ml[193,6031+7]..src/action.ml[193,6031+9])
                                  Texp_ident "Stdlib!.<>"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/action.ml[193,6031+5]..src/action.ml[193,6031+6])
                                      Texp_ident "x/969"
                                  <arg>
                                    Nolabel
                                    expression (src/action.ml[193,6031+10]..src/action.ml[193,6031+11])
                                      Texp_ident "y/970"
                                ]
                              expression (src/action.ml[193,6031+17]..src/action.ml[193,6031+30])
                                Texp_construct "::"
                                [
                                  expression (src/action.ml[193,6031+17]..src/action.ml[193,6031+23])
                                    Texp_tuple
                                    [
                                      expression (src/action.ml[193,6031+18]..src/action.ml[193,6031+19])
                                        Texp_ident "x/969"
                                      expression (src/action.ml[193,6031+21]..src/action.ml[193,6031+22])
                                        Texp_ident "y/970"
                                    ]
                                  expression (src/action.ml[193,6031+27]..src/action.ml[193,6031+30])
                                    Texp_ident "var/971"
                                ]
                              Some
                                expression (src/action.ml[193,6031+36]..src/action.ml[193,6031+39])
                                  Texp_ident "var/971"
                      ]
                ]
          ]
    ]
  structure_item (src/action.ml[195,6072+0]..src/action.ml[196,6115+41])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[195,6072+4]..src/action.ml[195,6072+17])
          Tpat_var "extend_semvar/972"
        expression (src/action.ml[195,6072+18]..src/action.ml[196,6115+41]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[195,6072+18]..src/action.ml[195,6072+19])
                Tpat_var "x/974"
              expression (src/action.ml[195,6072+20]..src/action.ml[196,6115+41]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/action.ml[195,6072+20]..src/action.ml[195,6072+21])
                      Tpat_var "y/975"
                    expression (src/action.ml[195,6072+22]..src/action.ml[196,6115+41]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/action.ml[195,6072+22]..src/action.ml[195,6072+40])
                            Tpat_record
                            [
                              "semvar"
                                pattern (src/action.ml[195,6072+24]..src/action.ml[195,6072+30])
                                  Tpat_var "semvar/976"
                              "posvar"
                                pattern (src/action.ml[195,6072+32]..src/action.ml[195,6072+38])
                                  Tpat_var "posvar/977"
                            ]
                          expression (src/action.ml[196,6115+2]..src/action.ml[196,6115+41])
                            Texp_record
                              fields =
                                [
                                  "semvar"
                                    expression (src/action.ml[196,6115+13]..src/action.ml[196,6115+31])
                                      Texp_apply
                                      expression (src/action.ml[196,6115+13]..src/action.ml[196,6115+20])
                                        Texp_ident "extend1/967"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/action.ml[196,6115+21]..src/action.ml[196,6115+22])
                                            Texp_ident "x/974"
                                        <arg>
                                          Nolabel
                                          expression (src/action.ml[196,6115+23]..src/action.ml[196,6115+24])
                                            Texp_ident "y/975"
                                        <arg>
                                          Nolabel
                                          expression (src/action.ml[196,6115+25]..src/action.ml[196,6115+31])
                                            Texp_ident "semvar/976"
                                      ]
                                  "posvar"
                                    expression (src/action.ml[196,6115+33]..src/action.ml[196,6115+39])
                                      Texp_ident "posvar/977"
                                ]
                              representation =
                                Record_regular
                              extended_expression =
                                None
                      ]
                ]
          ]
    ]
  structure_item (src/action.ml[198,6158+0]..src/action.ml[199,6201+41])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[198,6158+4]..src/action.ml[198,6158+17])
          Tpat_var "extend_posvar/979"
        expression (src/action.ml[198,6158+18]..src/action.ml[199,6201+41]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[198,6158+18]..src/action.ml[198,6158+19])
                Tpat_var "x/981"
              expression (src/action.ml[198,6158+20]..src/action.ml[199,6201+41]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/action.ml[198,6158+20]..src/action.ml[198,6158+21])
                      Tpat_var "y/982"
                    expression (src/action.ml[198,6158+22]..src/action.ml[199,6201+41]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/action.ml[198,6158+22]..src/action.ml[198,6158+40])
                            Tpat_record
                            [
                              "semvar"
                                pattern (src/action.ml[198,6158+24]..src/action.ml[198,6158+30])
                                  Tpat_var "semvar/983"
                              "posvar"
                                pattern (src/action.ml[198,6158+32]..src/action.ml[198,6158+38])
                                  Tpat_var "posvar/984"
                            ]
                          expression (src/action.ml[199,6201+2]..src/action.ml[199,6201+41])
                            Texp_record
                              fields =
                                [
                                  "semvar"
                                    expression (src/action.ml[199,6201+4]..src/action.ml[199,6201+10])
                                      Texp_ident "semvar/983"
                                  "posvar"
                                    expression (src/action.ml[199,6201+21]..src/action.ml[199,6201+39])
                                      Texp_apply
                                      expression (src/action.ml[199,6201+21]..src/action.ml[199,6201+28])
                                        Texp_ident "extend1/967"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/action.ml[199,6201+29]..src/action.ml[199,6201+30])
                                            Texp_ident "x/981"
                                        <arg>
                                          Nolabel
                                          expression (src/action.ml[199,6201+31]..src/action.ml[199,6201+32])
                                            Texp_ident "y/982"
                                        <arg>
                                          Nolabel
                                          expression (src/action.ml[199,6201+33]..src/action.ml[199,6201+39])
                                            Texp_ident "posvar/984"
                                      ]
                                ]
                              representation =
                                Record_regular
                              extended_expression =
                                None
                      ]
                ]
          ]
    ]
  structure_item (src/action.ml[201,6244+0]..src/action.ml[201,6244+26])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[201,6244+4]..src/action.ml[201,6244+10])
          Tpat_var "extend/986"
        expression (src/action.ml[201,6244+13]..src/action.ml[201,6244+26])
          Texp_ident "extend_semvar/972"
    ]
  structure_item (src/action.ml[203,6272+0]..src/action.ml[204,6291+42])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[203,6272+4]..src/action.ml[203,6272+10])
          Tpat_var "apply1/987"
        expression (src/action.ml[203,6272+11]..src/action.ml[204,6291+42]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[203,6272+11]..src/action.ml[203,6272+14])
                Tpat_var "var/989"
              expression (src/action.ml[203,6272+15]..src/action.ml[204,6291+42]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/action.ml[203,6272+15]..src/action.ml[203,6272+16])
                      Tpat_var "x/990"
                    expression (src/action.ml[204,6291+2]..src/action.ml[204,6291+42])
                      Texp_try
                      expression (src/action.ml[204,6291+6]..src/action.ml[204,6291+22])
                        Texp_apply
                        expression (src/action.ml[204,6291+6]..src/action.ml[204,6291+16])
                          Texp_ident "Stdlib!.List.assoc"
                        [
                          <arg>
                            Nolabel
                            expression (src/action.ml[204,6291+17]..src/action.ml[204,6291+18])
                              Texp_ident "x/990"
                          <arg>
                            Nolabel
                            expression (src/action.ml[204,6291+19]..src/action.ml[204,6291+22])
                              Texp_ident "var/989"
                        ]
                      [
                        <case>
                          pattern (src/action.ml[204,6291+28]..src/action.ml[204,6291+37])
                            Tpat_construct "Not_found"
                            []
                            None
                          expression (src/action.ml[204,6291+41]..src/action.ml[204,6291+42])
                            Texp_ident "x/990"
                      ]
                ]
          ]
    ]
  structure_item (src/action.ml[206,6335+0]..src/action.ml[207,6360+21])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[206,6335+4]..src/action.ml[206,6335+16])
          Tpat_var "apply_semvar/991"
        expression (src/action.ml[206,6335+17]..src/action.ml[207,6360+21]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[206,6335+17]..src/action.ml[206,6335+20])
                Tpat_var "phi/993"
              expression (src/action.ml[206,6335+21]..src/action.ml[207,6360+21]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/action.ml[206,6335+21]..src/action.ml[206,6335+22])
                      Tpat_var "x/994"
                    expression (src/action.ml[207,6360+2]..src/action.ml[207,6360+21])
                      Texp_apply
                      expression (src/action.ml[207,6360+2]..src/action.ml[207,6360+8])
                        Texp_ident "apply1/987"
                      [
                        <arg>
                          Nolabel
                          expression (src/action.ml[207,6360+9]..src/action.ml[207,6360+19])
                            Texp_field
                            expression (src/action.ml[207,6360+9]..src/action.ml[207,6360+12])
                              Texp_ident "phi/993"
                            "semvar"
                        <arg>
                          Nolabel
                          expression (src/action.ml[207,6360+20]..src/action.ml[207,6360+21])
                            Texp_ident "x/994"
                      ]
                ]
          ]
    ]
  structure_item (src/action.ml[209,6383+0]..src/action.ml[215,6493+37])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[209,6383+4]..src/action.ml[209,6383+17])
          Tpat_var "apply_subject/995"
        expression (src/action.ml[209,6383+18]..src/action.ml[215,6493+37]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[209,6383+18]..src/action.ml[209,6383+21])
                Tpat_var "phi/997"
              expression (src/action.ml[209,6383+22]..src/action.ml[215,6493+37]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/action.ml[209,6383+22]..src/action.ml[209,6383+29])
                      Tpat_var "subject/998"
                    expression (src/action.ml[210,6415+2]..src/action.ml[215,6493+37])
                      Texp_match
                      expression (src/action.ml[210,6415+8]..src/action.ml[210,6415+15])
                        Texp_ident "subject/998"
                      [
                        <case>
                          pattern (src/action.ml[211,6436+4]..src/action.ml[212,6447+8])
                            Tpat_or
                            pattern (src/action.ml[211,6436+4]..src/action.ml[211,6436+10])
                              Tpat_value
                              pattern (src/action.ml[211,6436+4]..src/action.ml[211,6436+10])
                                Tpat_construct "Before"
                                []
                                None
                            pattern (src/action.ml[212,6447+4]..src/action.ml[212,6447+8])
                              Tpat_value
                              pattern (src/action.ml[212,6447+4]..src/action.ml[212,6447+8])
                                Tpat_construct "Left"
                                []
                                None
                          expression (src/action.ml[213,6459+6]..src/action.ml[213,6459+13])
                            Texp_ident "subject/998"
                        <case>
                          pattern (src/action.ml[214,6473+4]..src/action.ml[214,6473+16])
                            Tpat_value
                            pattern (src/action.ml[214,6473+4]..src/action.ml[214,6473+16])
                              Tpat_construct "RightNamed"
                              [
                                pattern (src/action.ml[214,6473+15]..src/action.ml[214,6473+16])
                                  Tpat_var "x/999"
                              ]
                              None
                          expression (src/action.ml[215,6493+6]..src/action.ml[215,6493+37])
                            Texp_construct "RightNamed"
                            [
                              expression (src/action.ml[215,6493+17]..src/action.ml[215,6493+37])
                                Texp_apply
                                expression (src/action.ml[215,6493+18]..src/action.ml[215,6493+30])
                                  Texp_ident "apply_semvar/991"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/action.ml[215,6493+31]..src/action.ml[215,6493+34])
                                      Texp_ident "phi/997"
                                  <arg>
                                    Nolabel
                                    expression (src/action.ml[215,6493+35]..src/action.ml[215,6493+36])
                                      Texp_ident "x/999"
                                ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/action.ml[217,6532+0]..src/action.ml[218,6551+25])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[217,6532+4]..src/action.ml[217,6532+12])
          Tpat_var "bindings/1000"
        expression (src/action.ml[217,6532+13]..src/action.ml[218,6551+25]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[217,6532+13]..src/action.ml[217,6532+16])
                Tpat_var "phi/1002"
              expression (src/action.ml[218,6551+2]..src/action.ml[218,6551+25])
                Texp_apply
                expression (src/action.ml[218,6551+13]..src/action.ml[218,6551+14])
                  Texp_ident "Stdlib!.@"
                [
                  <arg>
                    Nolabel
                    expression (src/action.ml[218,6551+2]..src/action.ml[218,6551+12])
                      Texp_field
                      expression (src/action.ml[218,6551+2]..src/action.ml[218,6551+5])
                        Texp_ident "phi/1002"
                      "posvar"
                  <arg>
                    Nolabel
                    expression (src/action.ml[218,6551+15]..src/action.ml[218,6551+25])
                      Texp_field
                      expression (src/action.ml[218,6551+15]..src/action.ml[218,6551+18])
                        Texp_ident "phi/1002"
                      "semvar"
                ]
          ]
    ]
  structure_item (src/action.ml[220,6578+0]..src/action.ml[221,6601+53])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[220,6578+4]..src/action.ml[220,6578+13])
          Tpat_var "restrict1/1003"
        expression (src/action.ml[220,6578+14]..src/action.ml[221,6601+53]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[220,6578+14]..src/action.ml[220,6578+16])
                Tpat_var "xs/1005"
              expression (src/action.ml[220,6578+17]..src/action.ml[221,6601+53]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/action.ml[220,6578+17]..src/action.ml[220,6578+20])
                      Tpat_var "var/1006"
                    expression (src/action.ml[221,6601+2]..src/action.ml[221,6601+53])
                      Texp_apply
                      expression (src/action.ml[221,6601+2]..src/action.ml[221,6601+13])
                        Texp_ident "Stdlib!.List.filter"
                      [
                        <arg>
                          Nolabel
                          expression (src/action.ml[221,6601+14]..src/action.ml[221,6601+49])
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/action.ml[221,6601+19]..src/action.ml[221,6601+26])
                                  Tpat_tuple
                                  [
                                    pattern (src/action.ml[221,6601+20]..src/action.ml[221,6601+21])
                                      Tpat_var "x/1007"
                                    pattern (src/action.ml[221,6601+23]..src/action.ml[221,6601+25])
                                      Tpat_var "_y/1008"
                                  ]
                                expression (src/action.ml[221,6601+30]..src/action.ml[221,6601+48])
                                  Texp_apply
                                  expression (src/action.ml[221,6601+30]..src/action.ml[221,6601+43])
                                    Texp_ident "Dune__exe!.StringSet.mem"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/action.ml[221,6601+44]..src/action.ml[221,6601+45])
                                        Texp_ident "x/1007"
                                    <arg>
                                      Nolabel
                                      expression (src/action.ml[221,6601+46]..src/action.ml[221,6601+48])
                                        Texp_ident "xs/1005"
                                  ]
                            ]
                        <arg>
                          Nolabel
                          expression (src/action.ml[221,6601+50]..src/action.ml[221,6601+53])
                            Texp_ident "var/1006"
                      ]
                ]
          ]
    ]
  structure_item (src/action.ml[223,6656+0]..src/action.ml[224,6700+42])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[223,6656+4]..src/action.ml[223,6656+19])
          Tpat_var "restrict_semvar/1010"
        expression (src/action.ml[223,6656+20]..src/action.ml[224,6700+42]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[223,6656+20]..src/action.ml[223,6656+22])
                Tpat_var "xs/1012"
              expression (src/action.ml[223,6656+23]..src/action.ml[224,6700+42]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/action.ml[223,6656+23]..src/action.ml[223,6656+41])
                      Tpat_record
                      [
                        "semvar"
                          pattern (src/action.ml[223,6656+25]..src/action.ml[223,6656+31])
                            Tpat_var "semvar/1013"
                        "posvar"
                          pattern (src/action.ml[223,6656+33]..src/action.ml[223,6656+39])
                            Tpat_var "posvar/1014"
                      ]
                    expression (src/action.ml[224,6700+2]..src/action.ml[224,6700+42])
                      Texp_record
                        fields =
                          [
                            "semvar"
                              expression (src/action.ml[224,6700+13]..src/action.ml[224,6700+32])
                                Texp_apply
                                expression (src/action.ml[224,6700+13]..src/action.ml[224,6700+22])
                                  Texp_ident "restrict1/1003"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/action.ml[224,6700+23]..src/action.ml[224,6700+25])
                                      Texp_ident "xs/1012"
                                  <arg>
                                    Nolabel
                                    expression (src/action.ml[224,6700+26]..src/action.ml[224,6700+32])
                                      Texp_ident "semvar/1013"
                                ]
                            "posvar"
                              expression (src/action.ml[224,6700+34]..src/action.ml[224,6700+40])
                                Texp_ident "posvar/1014"
                          ]
                        representation =
                          Record_regular
                        extended_expression =
                          None
                ]
          ]
    ]
  structure_item (src/action.ml[234,7146+0]..src/action.ml[251,7659+41])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[234,7146+4]..src/action.ml[234,7146+18])
          Tpat_var "rename_keyword/1016"
        expression (src/action.ml[234,7146+19]..src/action.ml[251,7659+41]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[234,7146+19]..src/action.ml[234,7146+20])
                Tpat_var "f/1018"
              expression (src/action.ml[234,7146+21]..src/action.ml[251,7659+41]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/action.ml[234,7146+22]..src/action.ml[234,7146+25])
                      extra
                        Tpat_extra_constraint
                        core_type (src/action.ml[234,7146+28]..src/action.ml[234,7146+37])
                          Ttyp_constr "Stdlib!.ref"
                          [
                            core_type (src/action.ml[234,7146+28]..src/action.ml[234,7146+33])
                              Ttyp_constr "subst/963"
                              []
                          ]
                      Tpat_alias "phi/1019"
                      pattern (src/action.ml[234,7146+22]..src/action.ml[234,7146+25])
                        Tpat_any
                    expression (src/action.ml[234,7146+39]..src/action.ml[251,7659+41]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/action.ml[234,7146+39]..src/action.ml[234,7146+46])
                            Tpat_var "keyword/1020"
                          expression (src/action.ml[235,7205+2]..src/action.ml[251,7659+41])
                            extra
                              Texp_constraint
                              core_type (src/action.ml[234,7146+49]..src/action.ml[234,7146+56])
                                Ttyp_constr "MenhirSdk!.Keyword.keyword"
                                []
                            Texp_match
                            expression (src/action.ml[235,7205+8]..src/action.ml[235,7205+15])
                              Texp_ident "keyword/1020"
                            [
                              <case>
                                pattern (src/action.ml[236,7226+4]..src/action.ml[236,7226+15])
                                  Tpat_value
                                  pattern (src/action.ml[236,7226+4]..src/action.ml[236,7226+15])
                                    Tpat_construct "SyntaxError"
                                    []
                                    None
                                expression (src/action.ml[237,7245+6]..src/action.ml[237,7245+17])
                                  Texp_construct "SyntaxError"
                                  []
                              <case>
                                pattern (src/action.ml[238,7263+4]..src/action.ml[238,7263+37])
                                  Tpat_value
                                  pattern (src/action.ml[238,7263+4]..src/action.ml[238,7263+37])
                                    Tpat_construct "Position"
                                    [
                                      pattern (src/action.ml[238,7263+14]..src/action.ml[238,7263+21])
                                        Tpat_var "subject/1021"
                                      pattern (src/action.ml[238,7263+23]..src/action.ml[238,7263+28])
                                        Tpat_var "where/1022"
                                      pattern (src/action.ml[238,7263+30]..src/action.ml[238,7263+36])
                                        Tpat_var "flavor/1023"
                                    ]
                                    None
                                expression (src/action.ml[239,7304+6]..src/action.ml[251,7659+41])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/action.ml[239,7304+10]..src/action.ml[239,7304+26])
                                        Tpat_tuple
                                        [
                                          pattern (src/action.ml[239,7304+10]..src/action.ml[239,7304+18])
                                            Tpat_var "subject'/1024"
                                          pattern (src/action.ml[239,7304+20]..src/action.ml[239,7304+26])
                                            Tpat_var "where'/1025"
                                        ]
                                      expression (src/action.ml[240,7333+8]..src/action.ml[244,7455+45])
                                        Texp_match
                                        expression (src/action.ml[240,7333+14]..src/action.ml[240,7333+32])
                                          Texp_apply
                                          expression (src/action.ml[240,7333+14]..src/action.ml[240,7333+15])
                                            Texp_ident "f/1018"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/action.ml[240,7333+16]..src/action.ml[240,7333+32])
                                                Texp_tuple
                                                [
                                                  expression (src/action.ml[240,7333+17]..src/action.ml[240,7333+24])
                                                    Texp_ident "subject/1021"
                                                  expression (src/action.ml[240,7333+26]..src/action.ml[240,7333+31])
                                                    Texp_ident "where/1022"
                                                ]
                                          ]
                                        [
                                          <case>
                                            pattern (src/action.ml[241,7371+10]..src/action.ml[241,7371+33])
                                              Tpat_value
                                              pattern (src/action.ml[241,7371+10]..src/action.ml[241,7371+33])
                                                Tpat_construct "Some"
                                                [
                                                  pattern (src/action.ml[241,7371+15]..src/action.ml[241,7371+33])
                                                    Tpat_tuple
                                                    [
                                                      pattern (src/action.ml[241,7371+16]..src/action.ml[241,7371+24])
                                                        Tpat_var "subject'/1026"
                                                      pattern (src/action.ml[241,7371+26]..src/action.ml[241,7371+32])
                                                        Tpat_var "where'/1027"
                                                    ]
                                                ]
                                                None
                                            expression (src/action.ml[242,7408+12]..src/action.ml[242,7408+28])
                                              Texp_tuple
                                              [
                                                expression (src/action.ml[242,7408+12]..src/action.ml[242,7408+20])
                                                  Texp_ident "subject'/1026"
                                                expression (src/action.ml[242,7408+22]..src/action.ml[242,7408+28])
                                                  Texp_ident "where'/1027"
                                              ]
                                          <case>
                                            pattern (src/action.ml[243,7437+10]..src/action.ml[243,7437+14])
                                              Tpat_value
                                              pattern (src/action.ml[243,7437+10]..src/action.ml[243,7437+14])
                                                Tpat_construct "None"
                                                []
                                                None
                                            expression (src/action.ml[244,7455+12]..src/action.ml[244,7455+45])
                                              Texp_tuple
                                              [
                                                expression (src/action.ml[244,7455+12]..src/action.ml[244,7455+38])
                                                  Texp_apply
                                                  expression (src/action.ml[244,7455+12]..src/action.ml[244,7455+25])
                                                    Texp_ident "apply_subject/995"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/action.ml[244,7455+26]..src/action.ml[244,7455+30])
                                                        Texp_apply
                                                        expression (src/action.ml[244,7455+26]..src/action.ml[244,7455+27])
                                                          Texp_ident "Stdlib!.!"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/action.ml[244,7455+27]..src/action.ml[244,7455+30])
                                                              Texp_ident "phi/1019"
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (src/action.ml[244,7455+31]..src/action.ml[244,7455+38])
                                                        Texp_ident "subject/1021"
                                                  ]
                                                expression (src/action.ml[244,7455+40]..src/action.ml[244,7455+45])
                                                  Texp_ident "where/1022"
                                              ]
                                        ]
                                  ]
                                  expression (src/action.ml[246,7510+6]..src/action.ml[251,7659+41])
                                    Texp_sequence
                                    expression (src/action.ml[246,7510+6]..src/action.ml[250,7643+14])
                                      Texp_apply
                                      expression (src/action.ml[246,7510+10]..src/action.ml[246,7510+12])
                                        Texp_ident "Stdlib!.:="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/action.ml[246,7510+6]..src/action.ml[246,7510+9])
                                            Texp_ident "phi/1019"
                                        <arg>
                                          Nolabel
                                          expression (src/action.ml[247,7523+8]..src/action.ml[250,7643+14])
                                            Texp_apply
                                            expression (src/action.ml[247,7523+8]..src/action.ml[247,7523+21])
                                              Texp_ident "extend_posvar/979"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/action.ml[248,7545+10]..src/action.ml[248,7545+47])
                                                  Texp_apply
                                                  expression (src/action.ml[248,7545+11]..src/action.ml[248,7545+25])
                                                    Texp_ident "MenhirSdk!.Keyword.posvar"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/action.ml[248,7545+26]..src/action.ml[248,7545+33])
                                                        Texp_ident "subject/1021"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/action.ml[248,7545+34]..src/action.ml[248,7545+39])
                                                        Texp_ident "where/1022"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/action.ml[248,7545+40]..src/action.ml[248,7545+46])
                                                        Texp_ident "flavor/1023"
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (src/action.ml[249,7593+10]..src/action.ml[249,7593+49])
                                                  Texp_apply
                                                  expression (src/action.ml[249,7593+11]..src/action.ml[249,7593+25])
                                                    Texp_ident "MenhirSdk!.Keyword.posvar"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/action.ml[249,7593+26]..src/action.ml[249,7593+34])
                                                        Texp_ident "subject'/1024"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/action.ml[249,7593+35]..src/action.ml[249,7593+41])
                                                        Texp_ident "where'/1025"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/action.ml[249,7593+42]..src/action.ml[249,7593+48])
                                                        Texp_ident "flavor/1023"
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (src/action.ml[250,7643+10]..src/action.ml[250,7643+14])
                                                  Texp_apply
                                                  expression (src/action.ml[250,7643+10]..src/action.ml[250,7643+11])
                                                    Texp_ident "Stdlib!.!"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/action.ml[250,7643+11]..src/action.ml[250,7643+14])
                                                        Texp_ident "phi/1019"
                                                  ]
                                            ]
                                      ]
                                    expression (src/action.ml[251,7659+6]..src/action.ml[251,7659+41])
                                      Texp_construct "Position"
                                      [
                                        expression (src/action.ml[251,7659+16]..src/action.ml[251,7659+24])
                                          Texp_ident "subject'/1024"
                                        expression (src/action.ml[251,7659+26]..src/action.ml[251,7659+32])
                                          Texp_ident "where'/1025"
                                        expression (src/action.ml[251,7659+34]..src/action.ml[251,7659+40])
                                          Texp_ident "flavor/1023"
                                      ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/action.ml[253,7702+0]..src/action.ml[280,8806+39])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/action.ml[253,7702+4]..src/action.ml[253,7702+10])
          Tpat_var "rename/1028"
        expression (src/action.ml[253,7702+11]..src/action.ml[280,8806+39]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/action.ml[253,7702+11]..src/action.ml[253,7702+12])
                Tpat_var "f/1030"
              expression (src/action.ml[253,7702+13]..src/action.ml[280,8806+39]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/action.ml[253,7702+13]..src/action.ml[253,7702+16])
                      Tpat_var "phi/1031"
                    expression (src/action.ml[253,7702+17]..src/action.ml[280,8806+39]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/action.ml[253,7702+17]..src/action.ml[253,7702+18])
                            Tpat_var "a/1032"
                          expression (src/action.ml[256,7777+2]..src/action.ml[280,8806+39])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/action.ml[256,7777+6]..src/action.ml[256,7777+14])
                                  Tpat_var "keywords/1033"
                                expression (src/action.ml[256,7777+17]..src/action.ml[256,7777+27])
                                  Texp_field
                                  expression (src/action.ml[256,7777+17]..src/action.ml[256,7777+18])
                                    Texp_ident "a/1032"
                                  "keywords"
                            ]
                            expression (src/action.ml[257,7808+2]..src/action.ml[280,8806+39])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/action.ml[257,7808+6]..src/action.ml[257,7808+9])
                                    Tpat_var "phi/1034"
                                  expression (src/action.ml[257,7808+12]..src/action.ml[257,7808+19])
                                    Texp_apply
                                    expression (src/action.ml[257,7808+12]..src/action.ml[257,7808+15])
                                      Texp_ident "Stdlib!.ref"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/action.ml[257,7808+16]..src/action.ml[257,7808+19])
                                          Texp_ident "phi/1031"
                                    ]
                              ]
                              expression (src/action.ml[258,7831+2]..src/action.ml[280,8806+39])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (src/action.ml[258,7831+6]..src/action.ml[258,7831+14])
                                      Tpat_var "keywords/1035"
                                    expression (src/action.ml[258,7831+17]..src/action.ml[258,7831+63])
                                      Texp_apply
                                      expression (src/action.ml[258,7831+17]..src/action.ml[258,7831+31])
                                        Texp_ident "MenhirSdk!.Keyword.KeywordSet.map"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/action.ml[258,7831+32]..src/action.ml[258,7831+54])
                                            Texp_apply
                                            expression (src/action.ml[258,7831+33]..src/action.ml[258,7831+47])
                                              Texp_ident "rename_keyword/1016"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/action.ml[258,7831+48]..src/action.ml[258,7831+49])
                                                  Texp_ident "f/1030"
                                              <arg>
                                                Nolabel
                                                expression (src/action.ml[258,7831+50]..src/action.ml[258,7831+53])
                                                  Texp_ident "phi/1034"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/action.ml[258,7831+55]..src/action.ml[258,7831+63])
                                            Texp_ident "keywords/1033"
                                      ]
                                ]
                                expression (src/action.ml[259,7898+2]..src/action.ml[280,8806+39])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/action.ml[259,7898+6]..src/action.ml[259,7898+9])
                                        Tpat_var "phi/1036"
                                      expression (src/action.ml[259,7898+12]..src/action.ml[259,7898+16])
                                        Texp_apply
                                        expression (src/action.ml[259,7898+12]..src/action.ml[259,7898+13])
                                          Texp_ident "Stdlib!.!"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/action.ml[259,7898+13]..src/action.ml[259,7898+16])
                                              Texp_ident "phi/1034"
                                        ]
                                  ]
                                  expression (src/action.ml[261,7919+2]..src/action.ml[280,8806+39])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/action.ml[261,7919+6]..src/action.ml[261,7919+14])
                                          Tpat_var "standard/1037"
                                        expression (src/action.ml[261,7919+17]..src/action.ml[261,7919+27])
                                          Texp_field
                                          expression (src/action.ml[261,7919+17]..src/action.ml[261,7919+18])
                                            Texp_ident "a/1032"
                                          "standard"
                                    ]
                                    expression (src/action.ml[268,8242+2]..src/action.ml[280,8806+39])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/action.ml[268,8242+6]..src/action.ml[268,8242+9])
                                            Tpat_var "phi/1038"
                                          expression (src/action.ml[268,8242+12]..src/action.ml[268,8242+41])
                                            Texp_apply
                                            expression (src/action.ml[268,8242+12]..src/action.ml[268,8242+27])
                                              Texp_ident "restrict_semvar/1010"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/action.ml[268,8242+28]..src/action.ml[268,8242+37])
                                                  Texp_field
                                                  expression (src/action.ml[268,8242+28]..src/action.ml[268,8242+29])
                                                    Texp_ident "a/1032"
                                                  "semvars"
                                              <arg>
                                                Nolabel
                                                expression (src/action.ml[268,8242+38]..src/action.ml[268,8242+41])
                                                  Texp_ident "phi/1036"
                                            ]
                                      ]
                                      expression (src/action.ml[271,8345+2]..src/action.ml[280,8806+39])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/action.ml[271,8345+6]..src/action.ml[271,8345+13])
                                              Tpat_var "semvars/1039"
                                            expression (src/action.ml[271,8345+16]..src/action.ml[271,8345+58])
                                              Texp_apply
                                              expression (src/action.ml[271,8345+16]..src/action.ml[271,8345+29])
                                                Texp_ident "Dune__exe!.StringSet.map"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/action.ml[271,8345+30]..src/action.ml[271,8345+48])
                                                    Texp_apply
                                                    expression (src/action.ml[271,8345+31]..src/action.ml[271,8345+43])
                                                      Texp_ident "apply_semvar/991"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/action.ml[271,8345+44]..src/action.ml[271,8345+47])
                                                          Texp_ident "phi/1038"
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (src/action.ml[271,8345+49]..src/action.ml[271,8345+58])
                                                    Texp_field
                                                    expression (src/action.ml[271,8345+49]..src/action.ml[271,8345+50])
                                                      Texp_ident "a/1032"
                                                    "semvars"
                                              ]
                                        ]
                                        expression (src/action.ml[277,8682+2]..src/action.ml[280,8806+39])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/action.ml[277,8682+6]..src/action.ml[277,8682+9])
                                                Tpat_var "phi/1040"
                                              expression (src/action.ml[277,8682+12]..src/action.ml[277,8682+72])
                                                Texp_apply
                                                expression (src/action.ml[277,8682+12]..src/action.ml[277,8682+20])
                                                  Texp_ident "Stdlib!.List.map"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/action.ml[277,8682+21]..src/action.ml[277,8682+57])
                                                      Texp_function
                                                      Nolabel
                                                      [
                                                        <case>
                                                          pattern (src/action.ml[277,8682+26]..src/action.ml[277,8682+32])
                                                            Tpat_tuple
                                                            [
                                                              pattern (src/action.ml[277,8682+27]..src/action.ml[277,8682+28])
                                                                Tpat_var "x/1041"
                                                              pattern (src/action.ml[277,8682+30]..src/action.ml[277,8682+31])
                                                                Tpat_var "y/1042"
                                                            ]
                                                          expression (src/action.ml[277,8682+36]..src/action.ml[277,8682+56])
                                                            Texp_tuple
                                                            [
                                                              expression (src/action.ml[277,8682+36]..src/action.ml[277,8682+45])
                                                                Texp_construct "IL.PVar"
                                                                [
                                                                  expression (src/action.ml[277,8682+44]..src/action.ml[277,8682+45])
                                                                    Texp_ident "x/1041"
                                                                ]
                                                              expression (src/action.ml[277,8682+47]..src/action.ml[277,8682+56])
                                                                Texp_construct "IL.EVar"
                                                                [
                                                                  expression (src/action.ml[277,8682+55]..src/action.ml[277,8682+56])
                                                                    Texp_ident "y/1042"
                                                                ]
                                                            ]
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (src/action.ml[277,8682+58]..src/action.ml[277,8682+72])
                                                      Texp_apply
                                                      expression (src/action.ml[277,8682+59]..src/action.ml[277,8682+67])
                                                        Texp_ident "bindings/1000"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/action.ml[277,8682+68]..src/action.ml[277,8682+71])
                                                            Texp_ident "phi/1038"
                                                      ]
                                                ]
                                          ]
                                          expression (src/action.ml[278,8758+2]..src/action.ml[280,8806+39])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/action.ml[278,8758+6]..src/action.ml[278,8758+10])
                                                  Tpat_var "expr/1044"
                                                expression (src/action.ml[278,8758+13]..src/action.ml[278,8758+43])
                                                  Texp_apply
                                                  expression (src/action.ml[278,8758+13]..src/action.ml[278,8758+29])
                                                    Texp_ident "Dune__exe!.CodeBits.eletand"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/action.ml[278,8758+30]..src/action.ml[278,8758+43])
                                                        Texp_tuple
                                                        [
                                                          expression (src/action.ml[278,8758+31]..src/action.ml[278,8758+34])
                                                            Texp_ident "phi/1040"
                                                          expression (src/action.ml[278,8758+36]..src/action.ml[278,8758+42])
                                                            Texp_field
                                                            expression (src/action.ml[278,8758+36]..src/action.ml[278,8758+37])
                                                              Texp_ident "a/1032"
                                                            "expr"
                                                        ]
                                                  ]
                                            ]
                                            expression (src/action.ml[280,8806+2]..src/action.ml[280,8806+39])
                                              Texp_record
                                                fields =
                                                  [
                                                    "expr"
                                                      expression (src/action.ml[280,8806+4]..src/action.ml[280,8806+8])
                                                        Texp_ident "expr/1044"
                                                    "standard"
                                                      expression (src/action.ml[280,8806+10]..src/action.ml[280,8806+18])
                                                        Texp_ident "standard/1037"
                                                    "semvars"
                                                      expression (src/action.ml[280,8806+20]..src/action.ml[280,8806+27])
                                                        Texp_ident "semvars/1039"
                                                    "keywords"
                                                      expression (src/action.ml[280,8806+29]..src/action.ml[280,8806+37])
                                                        Texp_ident "keywords/1035"
                                                  ]
                                                representation =
                                                  Record_regular
                                                extended_expression =
                                                  None
                      ]
                ]
          ]
    ]
]

{<Dune__exe__Action>
 "bind"[value] -> <Dune__exe__Action.23>;
 "compose"[value] -> <Dune__exe__Action.19>;
 "define"[value] -> <Dune__exe__Action.56>;
 "empty"[value] -> <Dune__exe__Action.64>;
 "extend"[value] -> <Dune__exe__Action.79>;
 "from_il_expr"[value] -> <Dune__exe__Action.8>;
 "from_stretch"[value] -> <Dune__exe__Action.5>;
 "has_beforeend"[value] -> <Dune__exe__Action.44>;
 "has_syntaxerror"[value] -> <Dune__exe__Action.42>;
 "is_standard"[value] -> <Dune__exe__Action.36>;
 "keywords"[value] -> <Dune__exe__Action.40>;
 "posvars"[value] -> <Dune__exe__Action.46>;
 "rename"[value] -> <Dune__exe__Action.112>;
 "semvars"[value] -> <Dune__exe__Action.38>;
 "subst"[type] -> <Dune__exe__Action.61>;
 "t"[type] -> <Dune__exe__Action.0>;
 "to_il_expr"[value] -> <Dune__exe__Action.34>;
 "vars"[value] -> <Dune__exe__Action.54>;
 }

(seq
  (let
    (from_stretch/649 =
       (function xs/651 s/652
         (makeblock 0 (*,int,*,*) (makeblock 19 s/652)
           (caml_string_equal (field_imm 0 s/652)
             (field_imm 25 (global Dune__exe__Settings!)))
           xs/651
           (apply (field_imm 36 (field_imm 1 (global MenhirSdk__Keyword!)))
             (field_imm 5 s/652)))))
    (setfield_ptr(root-init) 0 (global Dune__exe__Action!) from_stretch/649))
  (letrec
    (from_il_expr/717
       (function e/720
         (makeblock 0 (*,int,*,*) e/720 1 (apply fv/718 e/720)
           (field_imm 0 (field_imm 1 (global MenhirSdk__Keyword!)))))
      fv/718
        (function e/721
          (apply fv_aux/719 (field_imm 0 (global Dune__exe__StringSet!))
            e/721))
      fv_aux/719
        (function accu/722 e/723
          (catch
            (switch e/723
             case tag 0:
              (let (x/724 =a (field_imm 0 e/723))
                (apply (field_imm 1 (global Dune__exe__StringSet!)) x/724
                  accu/722))
             case tag 2:
              (let
                (es/727 =a (field_imm 1 e/723) e/726 =a (field_imm 0 e/723))
                (apply (field_imm 25 (global Stdlib__List!)) fv_aux/719
                  accu/722 (makeblock 0 e/726 es/727)))
             case tag 12:
              (let (es/725 =a (field_imm 0 e/723))
                (apply (field_imm 25 (global Stdlib__List!)) fv_aux/719
                  accu/722 es/725))
             case tag 19:
              (let (*match*/2610 =a (field_imm 0 e/723)) accu/722)
             default: (exit 1))
           with (1)
            (raise
              (makeblock 0 (global Assert_failure/28!)
                [0: "src/action.ml" 78 6])))))
    (seq
      (setfield_ptr(root-init) 1 (global Dune__exe__Action!)
        from_il_expr/717)
      (setfield_ptr(root-init) 16 (global Dune__exe__Action!) fv/718)
      (setfield_ptr(root-init) 17 (global Dune__exe__Action!) fv_aux/719)))
  (let
    (compose/794 =
       (function x/796 a1/797 a2/798
         (makeblock 0 (*,int,*,*)
           (apply (field_imm 20 (global Dune__exe__CodeBits!))
             (makeblock 0
               (makeblock 0
                 (makeblock 0 (makeblock 0 x/796) (field_imm 0 a1/797)) 0)
               (field_imm 0 a2/798)))
           (&& (field_int 1 a1/797) (field_int 1 a2/798))
           (apply (field_imm 4 (global Dune__exe__StringSet!))
             (field_imm 2 a1/797)
             (apply (field_imm 3 (global Dune__exe__StringSet!)) x/796
               (field_imm 2 a2/798)))
           (apply (field_imm 4 (field_imm 1 (global MenhirSdk__Keyword!)))
             (field_imm 3 a1/797) (field_imm 3 a2/798)))))
    (setfield_ptr(root-init) 2 (global Dune__exe__Action!) compose/794))
  (letrec
    (bind/846
       (function p/849 x/850 a/851
         (makeblock 0 (*,int,*,*)
           (apply (field_imm 20 (global Dune__exe__CodeBits!))
             (makeblock 0
               (makeblock 0 (makeblock 0 p/849 (makeblock 0 x/850)) 0)
               (field_imm 0 a/851)))
           (field_int 1 a/851)
           (apply (field_imm 1 (global Dune__exe__StringSet!)) x/850
             (apply (field_imm 7 (global Dune__exe__StringSet!))
               (field_imm 2 a/851) (apply bv/847 p/849)))
           (field_imm 3 a/851)))
      bv/847
        (function p/852
          (apply bv_aux/848 (field_imm 0 (global Dune__exe__StringSet!))
            p/852))
      bv_aux/848
        (function accu/853 p/854
          (catch
            (catch
              (switch p/854
               case int 0: (exit 2)
               case int 1: (exit 2)
               case tag 0:
                (let (x/855 =a (field_imm 0 p/854))
                  (apply (field_imm 1 (global Dune__exe__StringSet!)) x/855
                    accu/853))
               case tag 3:
                (let (ps/856 =a (field_imm 0 p/854))
                  (apply (field_imm 25 (global Stdlib__List!)) bv_aux/848
                    accu/853 ps/856))
               default: (exit 3))
             with (3)
              (raise
                (makeblock 0 (global Assert_failure/28!)
                  [0: "src/action.ml" 122 6])))
           with (2) accu/853)))
    (seq (setfield_ptr(root-init) 3 (global Dune__exe__Action!) bind/846)
      (setfield_ptr(root-init) 18 (global Dune__exe__Action!) bv/847)
      (setfield_ptr(root-init) 19 (global Dune__exe__Action!) bv_aux/848)))
  (let (to_il_expr/927 = (function action/929 (field_imm 0 action/929)))
    (setfield_ptr(root-init) 4 (global Dune__exe__Action!) to_il_expr/927))
  (let
    (is_standard/930 = (function action/932 : int (field_int 1 action/932)))
    (setfield_ptr(root-init) 5 (global Dune__exe__Action!) is_standard/930))
  (let (semvars/933 = (function action/935 (field_imm 2 action/935)))
    (setfield_ptr(root-init) 6 (global Dune__exe__Action!) semvars/933))
  (let (keywords/936 = (function action/938 (field_imm 3 action/938)))
    (setfield_ptr(root-init) 7 (global Dune__exe__Action!) keywords/936))
  (let
    (has_syntaxerror/939 =
       (function action/941 : int
         (apply (field_imm 29 (field_imm 1 (global MenhirSdk__Keyword!))) 0
           (field_imm 3 action/941))))
    (setfield_ptr(root-init) 8 (global Dune__exe__Action!)
      has_syntaxerror/939))
  (let
    (has_beforeend/942 =
       (function action/944 : int
         (apply (field_imm 29 (field_imm 1 (global MenhirSdk__Keyword!)))
           [0: 0 2 1] (field_imm 3 action/944))))
    (setfield_ptr(root-init) 9 (global Dune__exe__Action!) has_beforeend/942))
  (let
    (posvars/945 =
       (function action/947
         (apply (field_imm 23 (field_imm 1 (global MenhirSdk__Keyword!)))
           (function keyword/948 accu/949
             (if (isint keyword/948) accu/949
               (let
                 (f/952 =a (field_imm 2 keyword/948)
                  w/951 =a (field_imm 1 keyword/948)
                  s/950 =a (field_imm 0 keyword/948)
                  x/953 =
                    (apply (field_imm 0 (global MenhirSdk__Keyword!)) s/950
                      w/951 f/952))
                 (apply (field_imm 1 (global Dune__exe__StringSet!)) x/953
                   accu/949))))
           (apply (field_imm 7 (global Dune__exe__Action!)) action/947)
           (field_imm 0 (global Dune__exe__StringSet!)))))
    (setfield_ptr(root-init) 10 (global Dune__exe__Action!) posvars/945))
  (let
    (vars/954 =
       (function action/956
         (apply (field_imm 4 (global Dune__exe__StringSet!))
           (apply (field_imm 6 (global Dune__exe__Action!)) action/956)
           (apply (field_imm 10 (global Dune__exe__Action!)) action/956))))
    (setfield_ptr(root-init) 11 (global Dune__exe__Action!) vars/954))
  (let
    (define/957 =
       (function keyword/959 keywords/960 f/961 action/962
         (seq
           (if
             (apply (field_imm 29 (field_imm 1 (global MenhirSdk__Keyword!)))
               keyword/959 (field_imm 3 action/962))
             0
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "src/action.ml" 164 2])))
           (makeblock 0 (*,int,*,*) (apply f/961 (field_imm 0 action/962))
             (field_int 1 action/962) (field_imm 2 action/962)
             (apply (field_imm 4 (field_imm 1 (global MenhirSdk__Keyword!)))
               keywords/960
               (apply
                 (field_imm 3 (field_imm 1 (global MenhirSdk__Keyword!)))
                 keyword/959 (field_imm 3 action/962)))))))
    (setfield_ptr(root-init) 12 (global Dune__exe__Action!) define/957))
  (let (empty/966 = [0: 0 0])
    (setfield_ptr(root-init) 13 (global Dune__exe__Action!) empty/966))
  (let
    (extend1/967 =
       (function x/969 y/970 var/971
         (seq
           (if
             (not
               (apply (field_imm 52 (global Stdlib__List!)) x/969 var/971))
             0
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "src/action.ml" 192 2])))
           (if (caml_notequal x/969 y/970)
             (makeblock 0 (makeblock 0 x/969 y/970) var/971) var/971))))
    (setfield_ptr(root-init) 20 (global Dune__exe__Action!) extend1/967))
  (let
    (extend_semvar/972 =
       (function x/974 y/975 param/978
         (let
           (posvar/977 =a (field_imm 1 param/978)
            semvar/976 =a (field_imm 0 param/978))
           (makeblock 0
             (apply (field_imm 20 (global Dune__exe__Action!)) x/974 y/975
               semvar/976)
             posvar/977))))
    (setfield_ptr(root-init) 21 (global Dune__exe__Action!)
      extend_semvar/972))
  (let
    (extend_posvar/979 =
       (function x/981 y/982 param/985
         (let
           (posvar/984 =a (field_imm 1 param/985)
            semvar/983 =a (field_imm 0 param/985))
           (makeblock 0 semvar/983
             (apply (field_imm 20 (global Dune__exe__Action!)) x/981 y/982
               posvar/984)))))
    (setfield_ptr(root-init) 22 (global Dune__exe__Action!)
      extend_posvar/979))
  (let (extend/986 = (field_imm 21 (global Dune__exe__Action!)))
    (setfield_ptr(root-init) 14 (global Dune__exe__Action!) extend/986))
  (let
    (apply1/987 =
       (function var/989 x/990
         (try (apply (field_imm 48 (global Stdlib__List!)) x/990 var/989)
          with exn/2617
           (catch
             (if (== exn/2617 (field_imm 7 (global Stdlib!))) x/990 (exit 4))
            with (4) (reraise exn/2617)))))
    (setfield_ptr(root-init) 23 (global Dune__exe__Action!) apply1/987))
  (let
    (apply_semvar/991 =
       (function phi/993 x/994
         (apply (field_imm 23 (global Dune__exe__Action!))
           (field_imm 0 phi/993) x/994)))
    (setfield_ptr(root-init) 24 (global Dune__exe__Action!) apply_semvar/991))
  (let
    (apply_subject/995 =
       (function phi/997 subject/998
         (catch
           (if (isint subject/998) (exit 5)
             (let (x/999 =a (field_imm 0 subject/998))
               (makeblock 0
                 (apply (field_imm 24 (global Dune__exe__Action!)) phi/997
                   x/999))))
          with (5) subject/998)))
    (setfield_ptr(root-init) 25 (global Dune__exe__Action!)
      apply_subject/995))
  (let
    (bindings/1000 =
       (function phi/1002
         (apply (field_imm 36 (global Stdlib!)) (field_imm 1 phi/1002)
           (field_imm 0 phi/1002))))
    (setfield_ptr(root-init) 26 (global Dune__exe__Action!) bindings/1000))
  (let
    (restrict1/1003 =
       (function xs/1005 var/1006
         (apply (field_imm 43 (global Stdlib__List!))
           (function (param/2618, param/2619) : int
             (let (_y/1008 =a param/2619 x/1007 =a param/2618)
               (apply (field_imm 29 (global Dune__exe__StringSet!)) x/1007
                 xs/1005)))
           var/1006)))
    (setfield_ptr(root-init) 27 (global Dune__exe__Action!) restrict1/1003))
  (let
    (restrict_semvar/1010 =
       (function xs/1012 param/1015
         (let
           (posvar/1014 =a (field_imm 1 param/1015)
            semvar/1013 =a (field_imm 0 param/1015))
           (makeblock 0
             (apply (field_imm 27 (global Dune__exe__Action!)) xs/1012
               semvar/1013)
             posvar/1014))))
    (setfield_ptr(root-init) 28 (global Dune__exe__Action!)
      restrict_semvar/1010))
  (let
    (rename_keyword/1016 =
       (function f/1018 phi/1019 keyword/1020
         (if (isint keyword/1020) 0
           (let
             (flavor/1023 =a (field_imm 2 keyword/1020)
              where/1022 =a (field_imm 1 keyword/1020)
              subject/1021 =a (field_imm 0 keyword/1020))
             (catch
               (let
                 (*match*/2621 =
                    (apply f/1018
                      (makeblock 0 (*,int) subject/1021 where/1022)))
                 (if (isint *match*/2621)
                   (let
                     (where'/2626 =a where/1022
                      subject'/2625 =
                        (apply (field_imm 25 (global Dune__exe__Action!))
                          (field_mut 0 phi/1019) subject/1021))
                     (exit 6 subject'/2625 where'/2626))
                   (let
                     (*match*/2622 =a (field_imm 0 *match*/2621)
                      where'/1027 =a (field_imm 1 *match*/2622)
                      subject'/1026 =a (field_imm 0 *match*/2622)
                      where'/2624 =a where'/1027
                      subject'/2623 =a subject'/1026)
                     (exit 6 subject'/2623 where'/2624))))
              with (6 subject'/1024 where'/1025[int])
               (seq
                 (setfield_ptr 0 phi/1019
                   (apply (field_imm 22 (global Dune__exe__Action!))
                     (apply (field_imm 0 (global MenhirSdk__Keyword!))
                       subject/1021 where/1022 flavor/1023)
                     (apply (field_imm 0 (global MenhirSdk__Keyword!))
                       subject'/1024 where'/1025 flavor/1023)
                     (field_mut 0 phi/1019)))
                 (makeblock 0 (*,int,int) subject'/1024 where'/1025
                   flavor/1023)))))))
    (setfield_ptr(root-init) 29 (global Dune__exe__Action!)
      rename_keyword/1016))
  (let
    (rename/1028 =
       (function f/1030 phi/1031 a/1032
         (let
           (keywords/1033 = (field_imm 3 a/1032)
            phi/1034 = (makemutable 0 phi/1031)
            keywords/1035 =
              (apply
                (field_imm 42 (field_imm 1 (global MenhirSdk__Keyword!)))
                (apply (field_imm 29 (global Dune__exe__Action!)) f/1030
                  phi/1034)
                keywords/1033)
            phi/1036 = (field_mut 0 phi/1034)
            standard/1037 =[int] (field_int 1 a/1032)
            phi/1038 =
              (apply (field_imm 28 (global Dune__exe__Action!))
                (field_imm 2 a/1032) phi/1036)
            semvars/1039 =
              (apply (field_imm 42 (global Dune__exe__StringSet!))
                (apply (field_imm 24 (global Dune__exe__Action!)) phi/1038)
                (field_imm 2 a/1032))
            phi/1040 =
              (apply (field_imm 19 (global Stdlib__List!))
                (function (param/2628, param/2629)
                  (let (y/1042 =a param/2629 x/1041 =a param/2628)
                    (makeblock 0 (makeblock 0 x/1041) (makeblock 0 y/1042))))
                (apply (field_imm 26 (global Dune__exe__Action!)) phi/1038))
            expr/1044 =
              (apply (field_imm 22 (global Dune__exe__CodeBits!))
                (makeblock 0 phi/1040 (field_imm 0 a/1032))))
           (makeblock 0 (*,int,*,*) expr/1044 standard/1037 semvars/1039
             keywords/1035))))
    (setfield_ptr(root-init) 15 (global Dune__exe__Action!) rename/1028))
  0)
(seq
  (let
    (from_stretch/649 =
       (function xs/651 s/652
         (makeblock 0 (*,int,*,*) (makeblock 19 s/652)
           (caml_string_equal (field_imm 0 s/652)
             (field_imm 25 (global Dune__exe__Settings!)))
           xs/651
           (apply (field_imm 36 (field_imm 1 (global MenhirSdk__Keyword!)))
             (field_imm 5 s/652)))))
    (setfield_ptr(root-init) 0 (global Dune__exe__Action!) from_stretch/649))
  (letrec
    (from_il_expr/717
       (function e/720
         (makeblock 0 (*,int,*,*) e/720 1 (apply fv/718 e/720)
           (field_imm 0 (field_imm 1 (global MenhirSdk__Keyword!)))))
      fv/718
        (function e/721
          (apply fv_aux/719 (field_imm 0 (global Dune__exe__StringSet!))
            e/721))
      fv_aux/719
        (function accu/722 e/723
          (catch
            (switch e/723
             case tag 0:
              (apply (field_imm 1 (global Dune__exe__StringSet!))
                (field_imm 0 e/723) accu/722)
             case tag 2:
              (apply (field_imm 25 (global Stdlib__List!)) fv_aux/719
                accu/722
                (makeblock 0 (field_imm 0 e/723) (field_imm 1 e/723)))
             case tag 12:
              (apply (field_imm 25 (global Stdlib__List!)) fv_aux/719
                accu/722 (field_imm 0 e/723))
             case tag 19: accu/722
             default: (exit 1))
           with (1)
            (raise
              (makeblock 0 (global Assert_failure/28!)
                [0: "src/action.ml" 78 6])))))
    (seq
      (setfield_ptr(root-init) 1 (global Dune__exe__Action!)
        from_il_expr/717)
      (setfield_ptr(root-init) 16 (global Dune__exe__Action!) fv/718)
      (setfield_ptr(root-init) 17 (global Dune__exe__Action!) fv_aux/719)))
  (let
    (compose/794 =
       (function x/796 a1/797 a2/798
         (makeblock 0 (*,int,*,*)
           (apply (field_imm 20 (global Dune__exe__CodeBits!))
             (makeblock 0
               (makeblock 0
                 (makeblock 0 (makeblock 0 x/796) (field_imm 0 a1/797)) 0)
               (field_imm 0 a2/798)))
           (&& (field_int 1 a1/797) (field_int 1 a2/798))
           (apply (field_imm 4 (global Dune__exe__StringSet!))
             (field_imm 2 a1/797)
             (apply (field_imm 3 (global Dune__exe__StringSet!)) x/796
               (field_imm 2 a2/798)))
           (apply (field_imm 4 (field_imm 1 (global MenhirSdk__Keyword!)))
             (field_imm 3 a1/797) (field_imm 3 a2/798)))))
    (setfield_ptr(root-init) 2 (global Dune__exe__Action!) compose/794))
  (letrec
    (bind/846
       (function p/849 x/850 a/851
         (makeblock 0 (*,int,*,*)
           (apply (field_imm 20 (global Dune__exe__CodeBits!))
             (makeblock 0
               (makeblock 0 (makeblock 0 p/849 (makeblock 0 x/850)) 0)
               (field_imm 0 a/851)))
           (field_int 1 a/851)
           (apply (field_imm 1 (global Dune__exe__StringSet!)) x/850
             (apply (field_imm 7 (global Dune__exe__StringSet!))
               (field_imm 2 a/851) (apply bv/847 p/849)))
           (field_imm 3 a/851)))
      bv/847
        (function p/852
          (apply bv_aux/848 (field_imm 0 (global Dune__exe__StringSet!))
            p/852))
      bv_aux/848
        (function accu/853 p/854
          (catch
            (switch p/854
             case int 0: (exit 2)
             case int 1: (exit 2)
             case tag 0:
              (apply (field_imm 1 (global Dune__exe__StringSet!))
                (field_imm 0 p/854) accu/853)
             case tag 3:
              (apply (field_imm 25 (global Stdlib__List!)) bv_aux/848
                accu/853 (field_imm 0 p/854))
             default:
              (raise
                (makeblock 0 (global Assert_failure/28!)
                  [0: "src/action.ml" 122 6])))
           with (2) accu/853)))
    (seq (setfield_ptr(root-init) 3 (global Dune__exe__Action!) bind/846)
      (setfield_ptr(root-init) 18 (global Dune__exe__Action!) bv/847)
      (setfield_ptr(root-init) 19 (global Dune__exe__Action!) bv_aux/848)))
  (let (to_il_expr/927 = (function action/929 (field_imm 0 action/929)))
    (setfield_ptr(root-init) 4 (global Dune__exe__Action!) to_il_expr/927))
  (let
    (is_standard/930 = (function action/932 : int (field_int 1 action/932)))
    (setfield_ptr(root-init) 5 (global Dune__exe__Action!) is_standard/930))
  (let (semvars/933 = (function action/935 (field_imm 2 action/935)))
    (setfield_ptr(root-init) 6 (global Dune__exe__Action!) semvars/933))
  (let (keywords/936 = (function action/938 (field_imm 3 action/938)))
    (setfield_ptr(root-init) 7 (global Dune__exe__Action!) keywords/936))
  (let
    (has_syntaxerror/939 =
       (function action/941 : int
         (apply (field_imm 29 (field_imm 1 (global MenhirSdk__Keyword!))) 0
           (field_imm 3 action/941))))
    (setfield_ptr(root-init) 8 (global Dune__exe__Action!)
      has_syntaxerror/939))
  (let
    (has_beforeend/942 =
       (function action/944 : int
         (apply (field_imm 29 (field_imm 1 (global MenhirSdk__Keyword!)))
           [0: 0 2 1] (field_imm 3 action/944))))
    (setfield_ptr(root-init) 9 (global Dune__exe__Action!) has_beforeend/942))
  (let
    (posvars/945 =
       (function action/947
         (apply (field_imm 23 (field_imm 1 (global MenhirSdk__Keyword!)))
           (function keyword/948 accu/949
             (if (isint keyword/948) accu/949
               (let
                 (x/953 =
                    (apply (field_imm 0 (global MenhirSdk__Keyword!))
                      (field_imm 0 keyword/948) (field_imm 1 keyword/948)
                      (field_imm 2 keyword/948)))
                 (apply (field_imm 1 (global Dune__exe__StringSet!)) x/953
                   accu/949))))
           (apply (field_imm 7 (global Dune__exe__Action!)) action/947)
           (field_imm 0 (global Dune__exe__StringSet!)))))
    (setfield_ptr(root-init) 10 (global Dune__exe__Action!) posvars/945))
  (let
    (vars/954 =
       (function action/956
         (apply (field_imm 4 (global Dune__exe__StringSet!))
           (apply (field_imm 6 (global Dune__exe__Action!)) action/956)
           (apply (field_imm 10 (global Dune__exe__Action!)) action/956))))
    (setfield_ptr(root-init) 11 (global Dune__exe__Action!) vars/954))
  (let
    (define/957 =
       (function keyword/959 keywords/960 f/961 action/962
         (seq
           (if
             (apply (field_imm 29 (field_imm 1 (global MenhirSdk__Keyword!)))
               keyword/959 (field_imm 3 action/962))
             0
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "src/action.ml" 164 2])))
           (makeblock 0 (*,int,*,*) (apply f/961 (field_imm 0 action/962))
             (field_int 1 action/962) (field_imm 2 action/962)
             (apply (field_imm 4 (field_imm 1 (global MenhirSdk__Keyword!)))
               keywords/960
               (apply
                 (field_imm 3 (field_imm 1 (global MenhirSdk__Keyword!)))
                 keyword/959 (field_imm 3 action/962)))))))
    (setfield_ptr(root-init) 12 (global Dune__exe__Action!) define/957))
  (let (empty/966 = [0: 0 0])
    (setfield_ptr(root-init) 13 (global Dune__exe__Action!) empty/966))
  (let
    (extend1/967 =
       (function x/969 y/970 var/971
         (seq
           (if
             (not
               (apply (field_imm 52 (global Stdlib__List!)) x/969 var/971))
             0
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "src/action.ml" 192 2])))
           (if (caml_notequal x/969 y/970)
             (makeblock 0 (makeblock 0 x/969 y/970) var/971) var/971))))
    (setfield_ptr(root-init) 20 (global Dune__exe__Action!) extend1/967))
  (let
    (extend_semvar/972 =
       (function x/974 y/975 param/978
         (makeblock 0
           (apply (field_imm 20 (global Dune__exe__Action!)) x/974 y/975
             (field_imm 0 param/978))
           (field_imm 1 param/978))))
    (setfield_ptr(root-init) 21 (global Dune__exe__Action!)
      extend_semvar/972))
  (let
    (extend_posvar/979 =
       (function x/981 y/982 param/985
         (makeblock 0 (field_imm 0 param/985)
           (apply (field_imm 20 (global Dune__exe__Action!)) x/981 y/982
             (field_imm 1 param/985)))))
    (setfield_ptr(root-init) 22 (global Dune__exe__Action!)
      extend_posvar/979))
  (let (extend/986 = (field_imm 21 (global Dune__exe__Action!)))
    (setfield_ptr(root-init) 14 (global Dune__exe__Action!) extend/986))
  (let
    (apply1/987 =
       (function var/989 x/990
         (try (apply (field_imm 48 (global Stdlib__List!)) x/990 var/989)
          with exn/2617
           (if (== exn/2617 (field_imm 7 (global Stdlib!))) x/990
             (reraise exn/2617)))))
    (setfield_ptr(root-init) 23 (global Dune__exe__Action!) apply1/987))
  (let
    (apply_semvar/991 =
       (function phi/993 x/994
         (apply (field_imm 23 (global Dune__exe__Action!))
           (field_imm 0 phi/993) x/994)))
    (setfield_ptr(root-init) 24 (global Dune__exe__Action!) apply_semvar/991))
  (let
    (apply_subject/995 =
       (function phi/997 subject/998
         (if (isint subject/998) subject/998
           (makeblock 0
             (apply (field_imm 24 (global Dune__exe__Action!)) phi/997
               (field_imm 0 subject/998))))))
    (setfield_ptr(root-init) 25 (global Dune__exe__Action!)
      apply_subject/995))
  (let
    (bindings/1000 =
       (function phi/1002
         (apply (field_imm 36 (global Stdlib!)) (field_imm 1 phi/1002)
           (field_imm 0 phi/1002))))
    (setfield_ptr(root-init) 26 (global Dune__exe__Action!) bindings/1000))
  (let
    (restrict1/1003 =
       (function xs/1005 var/1006
         (apply (field_imm 43 (global Stdlib__List!))
           (function (param/2618, param/2619) : int
             (apply (field_imm 29 (global Dune__exe__StringSet!)) param/2618
               xs/1005))
           var/1006)))
    (setfield_ptr(root-init) 27 (global Dune__exe__Action!) restrict1/1003))
  (let
    (restrict_semvar/1010 =
       (function xs/1012 param/1015
         (makeblock 0
           (apply (field_imm 27 (global Dune__exe__Action!)) xs/1012
             (field_imm 0 param/1015))
           (field_imm 1 param/1015))))
    (setfield_ptr(root-init) 28 (global Dune__exe__Action!)
      restrict_semvar/1010))
  (let
    (rename_keyword/1016 =
       (function f/1018 phi/1019 keyword/1020
         (if (isint keyword/1020) 0
           (let
             (flavor/1023 =a (field_imm 2 keyword/1020)
              where/1022 =a (field_imm 1 keyword/1020)
              subject/1021 =a (field_imm 0 keyword/1020))
             (catch
               (let
                 (*match*/2621 =
                    (apply f/1018
                      (makeblock 0 (*,int) subject/1021 where/1022)))
                 (if (isint *match*/2621)
                   (let
                     (subject'/2625 =
                        (apply (field_imm 25 (global Dune__exe__Action!))
                          (field_mut 0 phi/1019) subject/1021))
                     (exit 6 subject'/2625 where/1022))
                   (let (*match*/2622 =a (field_imm 0 *match*/2621))
                     (exit 6 (field_imm 0 *match*/2622)
                       (field_imm 1 *match*/2622)))))
              with (6 subject'/1024 where'/1025[int])
               (seq
                 (setfield_ptr 0 phi/1019
                   (apply (field_imm 22 (global Dune__exe__Action!))
                     (apply (field_imm 0 (global MenhirSdk__Keyword!))
                       subject/1021 where/1022 flavor/1023)
                     (apply (field_imm 0 (global MenhirSdk__Keyword!))
                       subject'/1024 where'/1025 flavor/1023)
                     (field_mut 0 phi/1019)))
                 (makeblock 0 (*,int,int) subject'/1024 where'/1025
                   flavor/1023)))))))
    (setfield_ptr(root-init) 29 (global Dune__exe__Action!)
      rename_keyword/1016))
  (let
    (rename/1028 =
       (function f/1030 phi/1031 a/1032
         (let
           (keywords/1033 = (field_imm 3 a/1032)
            phi/1034 = (makemutable 0 phi/1031)
            keywords/1035 =
              (apply
                (field_imm 42 (field_imm 1 (global MenhirSdk__Keyword!)))
                (apply (field_imm 29 (global Dune__exe__Action!)) f/1030
                  phi/1034)
                keywords/1033)
            phi/1036 = (field_mut 0 phi/1034)
            standard/1037 =[int] (field_int 1 a/1032)
            phi/1038 =
              (apply (field_imm 28 (global Dune__exe__Action!))
                (field_imm 2 a/1032) phi/1036)
            semvars/1039 =
              (apply (field_imm 42 (global Dune__exe__StringSet!))
                (apply (field_imm 24 (global Dune__exe__Action!)) phi/1038)
                (field_imm 2 a/1032))
            phi/1040 =
              (apply (field_imm 19 (global Stdlib__List!))
                (function (param/2628, param/2629)
                  (makeblock 0 (makeblock 0 param/2628)
                    (makeblock 0 param/2629)))
                (apply (field_imm 26 (global Dune__exe__Action!)) phi/1038))
            expr/1044 =
              (apply (field_imm 22 (global Dune__exe__CodeBits!))
                (makeblock 0 phi/1040 (field_imm 0 a/1032))))
           (makeblock 0 (*,int,*,*) expr/1044 standard/1037 semvars/1039
             keywords/1035))))
    (setfield_ptr(root-init) 15 (global Dune__exe__Action!) rename/1028))
  0)
