[
  structure_item (src/lr1.ml[14,993+0]..[14,993+12])
    Pstr_open Fresh
    module_expr (src/lr1.ml[14,993+5]..[14,993+12])
      Pmod_ident "Grammar" (src/lr1.ml[14,993+5]..[14,993+12])
  structure_item (src/lr1.ml[15,1006+0]..[15,1006+12])
    Pstr_open Fresh
    module_expr (src/lr1.ml[15,1006+5]..[15,1006+12])
      Pmod_ident "LR1Sigs" (src/lr1.ml[15,1006+5]..[15,1006+12])
  structure_item (src/lr1.ml[21,1137+0]..[22,1146+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[21,1137+4]..[21,1137+6])
          Ppat_construct "()" (src/lr1.ml[21,1137+4]..[21,1137+6])
          None
        expression (src/lr1.ml[22,1146+2]..[22,1146+13])
          Pexp_apply
          expression (src/lr1.ml[22,1146+2]..[22,1146+11])
            Pexp_ident "Slr.check" (src/lr1.ml[22,1146+2]..[22,1146+11])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[22,1146+11]..[22,1146+13])
                Pexp_construct "()" (src/lr1.ml[22,1146+11]..[22,1146+13])
                None
          ]
    ]
  structure_item (src/lr1.ml[28,1318+0]..[30,1378+3])
    Pstr_modtype "ALGORITHM" (src/lr1.ml[28,1318+12]..[28,1318+21])
      module_type (src/lr1.ml[28,1318+24]..[30,1378+3])
        Pmty_signature
        [
          signature_item (src/lr1.ml[29,1346+2]..[29,1346+31])
            Psig_module "Run" (src/lr1.ml[29,1346+9]..[29,1346+12])
            module_type (src/lr1.ml[29,1346+13]..[29,1346+31])
              Pmty_functor ()
              module_type (src/lr1.ml[29,1346+18]..[29,1346+31])
                Pmty_ident "LR1_AUTOMATON" (src/lr1.ml[29,1346+18]..[29,1346+31])
        ]
  structure_item (src/lr1.ml[32,1383+0]..[46,1730+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[32,1383+4]..[32,1383+14])
          Ppat_tuple
          [
            pattern (src/lr1.ml[32,1383+4]..[32,1383+8])
              Ppat_var "algo" (src/lr1.ml[32,1383+4]..[32,1383+8])
            pattern (src/lr1.ml[32,1383+10]..[32,1383+14])
              Ppat_var "mode" (src/lr1.ml[32,1383+10]..[32,1383+14])
          ]
        expression (src/lr1.ml[33,1400+2]..[46,1730+3])
          Pexp_open Fresh
          module_expr (src/lr1.ml[33,1400+2]..[33,1400+10])
            Pmod_ident "Settings" (src/lr1.ml[33,1400+2]..[33,1400+10])
          expression (src/lr1.ml[33,1400+12]..[45,1717+12])
            Pexp_match
            expression (src/lr1.ml[33,1400+18]..[33,1400+35])
              Pexp_ident "construction_mode" (src/lr1.ml[33,1400+18]..[33,1400+35])
            [
              <case>
                pattern (src/lr1.ml[34,1441+4]..[34,1441+17])
                  Ppat_construct "ModeCanonical" (src/lr1.ml[34,1441+4]..[34,1441+17])
                  None
                expression (src/lr1.ml[35,1462+6]..[36,1503+17])
                  Pexp_tuple
                  [
                    expression (src/lr1.ml[35,1462+6]..[35,1462+39])
                      Pexp_constraint
                      expression (src/lr1.ml[35,1462+6]..[35,1462+39]) ghost
                        Pexp_pack
                        module_expr (src/lr1.ml[35,1462+14]..[35,1462+26])
                          Pmod_ident "LR1Canonical" (src/lr1.ml[35,1462+14]..[35,1462+26])
                      core_type (src/lr1.ml[35,1462+29]..[35,1462+38])
                        Ptyp_package "ALGORITHM" (src/lr1.ml[35,1462+29]..[35,1462+38])
                        []
                    expression (src/lr1.ml[36,1503+6]..[36,1503+17])
                      Pexp_constant PConst_string("canonical",(src/lr1.ml[36,1503+7]..[36,1503+16]),None)
                  ]
              <case>
                pattern (src/lr1.ml[37,1521+4]..[37,1521+21])
                  Ppat_construct "ModeInclusionOnly" (src/lr1.ml[37,1521+4]..[37,1521+21])
                  None
                expression (src/lr1.ml[38,1546+6]..[39,1583+16])
                  Pexp_tuple
                  [
                    expression (src/lr1.ml[38,1546+6]..[38,1546+35])
                      Pexp_constraint
                      expression (src/lr1.ml[38,1546+6]..[38,1546+35]) ghost
                        Pexp_pack
                        module_expr (src/lr1.ml[38,1546+14]..[38,1546+22])
                          Pmod_ident "LR1Pager" (src/lr1.ml[38,1546+14]..[38,1546+22])
                      core_type (src/lr1.ml[38,1546+25]..[38,1546+34])
                        Ptyp_package "ALGORITHM" (src/lr1.ml[38,1546+25]..[38,1546+34])
                        []
                    expression (src/lr1.ml[39,1583+6]..[39,1583+16])
                      Pexp_constant PConst_string("no-pager",(src/lr1.ml[39,1583+7]..[39,1583+15]),None)
                  ]
              <case>
                pattern (src/lr1.ml[40,1600+4]..[40,1600+13])
                  Ppat_construct "ModePager" (src/lr1.ml[40,1600+4]..[40,1600+13])
                  None
                expression (src/lr1.ml[41,1617+6]..[42,1654+13])
                  Pexp_tuple
                  [
                    expression (src/lr1.ml[41,1617+6]..[41,1617+35])
                      Pexp_constraint
                      expression (src/lr1.ml[41,1617+6]..[41,1617+35]) ghost
                        Pexp_pack
                        module_expr (src/lr1.ml[41,1617+14]..[41,1617+22])
                          Pmod_ident "LR1Pager" (src/lr1.ml[41,1617+14]..[41,1617+22])
                      core_type (src/lr1.ml[41,1617+25]..[41,1617+34])
                        Ptyp_package "ALGORITHM" (src/lr1.ml[41,1617+25]..[41,1617+34])
                        []
                    expression (src/lr1.ml[42,1654+6]..[42,1654+13])
                      Pexp_constant PConst_string("pager",(src/lr1.ml[42,1654+7]..[42,1654+12]),None)
                  ]
              <case>
                pattern (src/lr1.ml[43,1668+4]..[43,1668+12])
                  Ppat_construct "ModeLALR" (src/lr1.ml[43,1668+4]..[43,1668+12])
                  None
                expression (src/lr1.ml[44,1684+6]..[45,1717+12])
                  Pexp_tuple
                  [
                    expression (src/lr1.ml[44,1684+6]..[44,1684+31])
                      Pexp_constraint
                      expression (src/lr1.ml[44,1684+6]..[44,1684+31]) ghost
                        Pexp_pack
                        module_expr (src/lr1.ml[44,1684+14]..[44,1684+18])
                          Pmod_ident "LALR" (src/lr1.ml[44,1684+14]..[44,1684+18])
                      core_type (src/lr1.ml[44,1684+21]..[44,1684+30])
                        Ptyp_package "ALGORITHM" (src/lr1.ml[44,1684+21]..[44,1684+30])
                        []
                    expression (src/lr1.ml[45,1717+6]..[45,1717+12])
                      Pexp_constant PConst_string("lalr",(src/lr1.ml[45,1717+7]..[45,1717+11]),None)
                  ]
            ]
    ]
  structure_item (src/lr1.ml[48,1735+0]..[49,1754+24])
    Pstr_module
    "Algorithm" (src/lr1.ml[48,1735+7]..[48,1735+16])
      module_expr (src/lr1.ml[49,1754+2]..[49,1754+24])
        Pmod_unpack
        expression (src/lr1.ml[49,1754+7]..[49,1754+23]) ghost
          Pexp_constraint
          expression (src/lr1.ml[49,1754+7]..[49,1754+11])
            Pexp_ident "algo" (src/lr1.ml[49,1754+7]..[49,1754+11])
          core_type (src/lr1.ml[49,1754+14]..[49,1754+23])
            Ptyp_package "ALGORITHM" (src/lr1.ml[49,1754+14]..[49,1754+23])
            []
  structure_item (src/lr1.ml[51,1780+0]..[56,1885+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[51,1780+4]..[51,1780+6])
          Ppat_construct "()" (src/lr1.ml[51,1780+4]..[51,1780+6])
          None
        expression (src/lr1.ml[52,1789+2]..[56,1885+3])
          Pexp_apply
          expression (src/lr1.ml[52,1789+2]..[52,1789+12])
            Pexp_ident "Error.logA" (src/lr1.ml[52,1789+2]..[52,1789+12])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[52,1789+13]..[52,1789+14])
                Pexp_constant PConst_int (1,None)
            <arg>
            Nolabel
              expression (src/lr1.ml[52,1789+15]..[56,1885+3])
                Pexp_fun
                Nolabel
                None
                pattern (src/lr1.ml[52,1789+20]..[52,1789+21])
                  Ppat_var "f" (src/lr1.ml[52,1789+20]..[52,1789+21])
                expression (src/lr1.ml[53,1814+4]..[55,1874+10])
                  Pexp_apply
                  expression (src/lr1.ml[53,1814+4]..[53,1814+18])
                    Pexp_ident "Printf.fprintf" (src/lr1.ml[53,1814+4]..[53,1814+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[53,1814+19]..[53,1814+20])
                        Pexp_ident "f" (src/lr1.ml[53,1814+19]..[53,1814+20])
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[54,1835+6]..[54,1835+38])
                        Pexp_constant PConst_string("The construction mode is %s.\n",(src/lr1.ml[54,1835+7]..[54,1835+37]),None)
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[55,1874+6]..[55,1874+10])
                        Pexp_ident "mode" (src/lr1.ml[55,1874+6]..[55,1874+10])
                  ]
          ]
    ]
  structure_item (src/lr1.ml[62,2011+0]..[63,2024+17])
    Pstr_module
    "Raw" (src/lr1.ml[62,2011+7]..[62,2011+10])
      module_expr (src/lr1.ml[63,2024+2]..[63,2024+17])
        Pmod_apply_unit
        module_expr (src/lr1.ml[63,2024+2]..[63,2024+15])
          Pmod_ident "Algorithm.Run" (src/lr1.ml[63,2024+2]..[63,2024+15])
  structure_item (src/lr1.ml[65,2043+0]..[68,2149+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[65,2043+4]..[65,2043+6])
          Ppat_construct "()" (src/lr1.ml[65,2043+4]..[65,2043+6])
          None
        expression (src/lr1.ml[66,2052+2]..[68,2149+3])
          Pexp_apply
          expression (src/lr1.ml[66,2052+2]..[66,2052+12])
            Pexp_ident "Error.logA" (src/lr1.ml[66,2052+2]..[66,2052+12])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[66,2052+13]..[66,2052+14])
                Pexp_constant PConst_int (1,None)
            <arg>
            Nolabel
              expression (src/lr1.ml[66,2052+15]..[68,2149+3])
                Pexp_fun
                Nolabel
                None
                pattern (src/lr1.ml[66,2052+20]..[66,2052+21])
                  Ppat_var "f" (src/lr1.ml[66,2052+20]..[66,2052+21])
                expression (src/lr1.ml[67,2077+4]..[67,2077+71])
                  Pexp_apply
                  expression (src/lr1.ml[67,2077+4]..[67,2077+18])
                    Pexp_ident "Printf.fprintf" (src/lr1.ml[67,2077+4]..[67,2077+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[67,2077+19]..[67,2077+20])
                        Pexp_ident "f" (src/lr1.ml[67,2077+19]..[67,2077+20])
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[67,2077+21]..[67,2077+65])
                        Pexp_constant PConst_string("Built an LR(1) automaton with %d states.\n",(src/lr1.ml[67,2077+22]..[67,2077+64]),None)
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[67,2077+66]..[67,2077+71])
                        Pexp_ident "Raw.n" (src/lr1.ml[67,2077+66]..[67,2077+71])
                  ]
          ]
    ]
  structure_item (src/lr1.ml[80,2643+0]..[81,2655+5])
    Pstr_type Rec
    [
      type_declaration "node" (src/lr1.ml[80,2643+5]..[80,2643+9]) (src/lr1.ml[80,2643+0]..[81,2655+5])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/lr1.ml[81,2655+2]..[81,2655+5])
              Ptyp_constr "int" (src/lr1.ml[81,2655+2]..[81,2655+5])
              []
    ]
  structure_item (src/lr1.ml[90,2920+0]..[97,3126+3])
    Pstr_module
    "M" (src/lr1.ml[90,2920+7]..[90,2920+8])
      module_expr (src/lr1.ml[90,2920+11]..[97,3126+3])
        Pmod_structure
        [
          structure_item (src/lr1.ml[91,2938+2]..[92,2966+26])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/lr1.ml[91,2938+6]..[91,2938+12])
                  Ppat_var "marked" (src/lr1.ml[91,2938+6]..[91,2938+12])
                core_type (src/lr1.ml[91,2938+15]..[91,2938+25])
                  Ptyp_constr "array" (src/lr1.ml[91,2938+20]..[91,2938+25])
                  [
                    core_type (src/lr1.ml[91,2938+15]..[91,2938+19])
                      Ptyp_constr "bool" (src/lr1.ml[91,2938+15]..[91,2938+19])
                      []
                  ]
                expression (src/lr1.ml[92,2966+4]..[92,2966+26])
                  Pexp_apply
                  expression (src/lr1.ml[92,2966+4]..[92,2966+14])
                    Pexp_ident "Array.make" (src/lr1.ml[92,2966+4]..[92,2966+14])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[92,2966+15]..[92,2966+20])
                        Pexp_ident "Raw.n" (src/lr1.ml[92,2966+15]..[92,2966+20])
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[92,2966+21]..[92,2966+26])
                        Pexp_construct "false" (src/lr1.ml[92,2966+21]..[92,2966+26])
                        None
                  ]
            ]
          structure_item (src/lr1.ml[93,2993+2]..[94,3024+36])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/lr1.ml[93,2993+6]..[93,2993+10])
                  Ppat_var "mark" (src/lr1.ml[93,2993+6]..[93,2993+10])
                expression (src/lr1.ml[93,2993+11]..[94,3024+36]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/lr1.ml[93,2993+11]..[93,2993+28])
                    Ppat_constraint
                    pattern (src/lr1.ml[93,2993+12]..[93,2993+16])
                      Ppat_var "node" (src/lr1.ml[93,2993+12]..[93,2993+16])
                    core_type (src/lr1.ml[93,2993+19]..[93,2993+27])
                      Ptyp_constr "Raw.node" (src/lr1.ml[93,2993+19]..[93,2993+27])
                      []
                  expression (src/lr1.ml[94,3024+4]..[94,3024+36])
                    Pexp_apply
                    expression (src/lr1.ml[94,3024+4]..[94,3024+36]) ghost
                      Pexp_ident "Array.set" (src/lr1.ml[94,3024+4]..[94,3024+36]) ghost
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[94,3024+4]..[94,3024+10])
                          Pexp_ident "marked" (src/lr1.ml[94,3024+4]..[94,3024+10])
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[94,3024+12]..[94,3024+27])
                          Pexp_apply
                          expression (src/lr1.ml[94,3024+12]..[94,3024+22])
                            Pexp_ident "Raw.number" (src/lr1.ml[94,3024+12]..[94,3024+22])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[94,3024+23]..[94,3024+27])
                                Pexp_ident "node" (src/lr1.ml[94,3024+23]..[94,3024+27])
                          ]
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[94,3024+32]..[94,3024+36])
                          Pexp_construct "true" (src/lr1.ml[94,3024+32]..[94,3024+36])
                          None
                    ]
            ]
          structure_item (src/lr1.ml[95,3061+2]..[96,3097+28])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/lr1.ml[95,3061+6]..[95,3061+15])
                  Ppat_var "is_marked" (src/lr1.ml[95,3061+6]..[95,3061+15])
                expression (src/lr1.ml[95,3061+16]..[96,3097+28]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/lr1.ml[95,3061+16]..[95,3061+33])
                    Ppat_constraint
                    pattern (src/lr1.ml[95,3061+17]..[95,3061+21])
                      Ppat_var "node" (src/lr1.ml[95,3061+17]..[95,3061+21])
                    core_type (src/lr1.ml[95,3061+24]..[95,3061+32])
                      Ptyp_constr "Raw.node" (src/lr1.ml[95,3061+24]..[95,3061+32])
                      []
                  expression (src/lr1.ml[96,3097+4]..[96,3097+28])
                    Pexp_apply
                    expression (src/lr1.ml[96,3097+4]..[96,3097+28]) ghost
                      Pexp_ident "Array.get" (src/lr1.ml[96,3097+4]..[96,3097+28]) ghost
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[96,3097+4]..[96,3097+10])
                          Pexp_ident "marked" (src/lr1.ml[96,3097+4]..[96,3097+10])
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[96,3097+12]..[96,3097+27])
                          Pexp_apply
                          expression (src/lr1.ml[96,3097+12]..[96,3097+22])
                            Pexp_ident "Raw.number" (src/lr1.ml[96,3097+12]..[96,3097+22])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[96,3097+23]..[96,3097+27])
                                Pexp_ident "node" (src/lr1.ml[96,3097+23]..[96,3097+27])
                          ]
                    ]
            ]
        ]
  structure_item (src/lr1.ml[102,3247+0]..[103,3265+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[102,3247+4]..[102,3247+15])
          Ppat_var "unreachable" (src/lr1.ml[102,3247+4]..[102,3247+15])
        expression (src/lr1.ml[103,3265+2]..[103,3265+4])
          Pexp_constant PConst_int (-1,None)
    ]
  structure_item (src/lr1.ml[105,3271+0]..[106,3298+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[105,3271+4]..[105,3271+11])
          Ppat_var "_number" (src/lr1.ml[105,3271+4]..[105,3271+11])
        core_type (src/lr1.ml[105,3271+14]..[105,3271+24])
          Ptyp_constr "array" (src/lr1.ml[105,3271+19]..[105,3271+24])
          [
            core_type (src/lr1.ml[105,3271+14]..[105,3271+18])
              Ptyp_constr "node" (src/lr1.ml[105,3271+14]..[105,3271+18])
              []
          ]
        expression (src/lr1.ml[106,3298+2]..[106,3298+30])
          Pexp_apply
          expression (src/lr1.ml[106,3298+2]..[106,3298+12])
            Pexp_ident "Array.make" (src/lr1.ml[106,3298+2]..[106,3298+12])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[106,3298+13]..[106,3298+18])
                Pexp_ident "Raw.n" (src/lr1.ml[106,3298+13]..[106,3298+18])
            <arg>
            Nolabel
              expression (src/lr1.ml[106,3298+19]..[106,3298+30])
                Pexp_ident "unreachable" (src/lr1.ml[106,3298+19]..[106,3298+30])
          ]
    ]
  structure_item (src/lr1.ml[108,3330+0]..[109,3375+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[108,3330+4]..[108,3330+13])
          Ppat_var "transport" (src/lr1.ml[108,3330+4]..[108,3330+13])
        expression (src/lr1.ml[108,3330+14]..[109,3375+31]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[108,3330+14]..[108,3330+35])
            Ppat_constraint
            pattern (src/lr1.ml[108,3330+15]..[108,3330+23])
              Ppat_var "raw_node" (src/lr1.ml[108,3330+15]..[108,3330+23])
            core_type (src/lr1.ml[108,3330+26]..[108,3330+34])
              Ptyp_constr "Raw.node" (src/lr1.ml[108,3330+26]..[108,3330+34])
              []
          expression (src/lr1.ml[108,3330+36]..[109,3375+31])
            Pexp_constraint
            expression (src/lr1.ml[109,3375+2]..[109,3375+31])
              Pexp_apply
              expression (src/lr1.ml[109,3375+2]..[109,3375+31]) ghost
                Pexp_ident "Array.get" (src/lr1.ml[109,3375+2]..[109,3375+31]) ghost
              [
                <arg>
                Nolabel
                  expression (src/lr1.ml[109,3375+2]..[109,3375+9])
                    Pexp_ident "_number" (src/lr1.ml[109,3375+2]..[109,3375+9])
                <arg>
                Nolabel
                  expression (src/lr1.ml[109,3375+11]..[109,3375+30])
                    Pexp_apply
                    expression (src/lr1.ml[109,3375+11]..[109,3375+21])
                      Pexp_ident "Raw.number" (src/lr1.ml[109,3375+11]..[109,3375+21])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[109,3375+22]..[109,3375+30])
                          Pexp_ident "raw_node" (src/lr1.ml[109,3375+22]..[109,3375+30])
                    ]
              ]
            core_type (src/lr1.ml[108,3330+38]..[108,3330+42])
              Ptyp_constr "node" (src/lr1.ml[108,3330+38]..[108,3330+42])
              []
    ]
  structure_item (src/lr1.ml[115,3604+0]..[118,3713+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[115,3604+4]..[115,3604+15])
          Ppat_var "transitions" (src/lr1.ml[115,3604+4]..[115,3604+15])
        core_type (src/lr1.ml[115,3604+18]..[115,3604+44])
          Ptyp_constr "array" (src/lr1.ml[115,3604+39]..[115,3604+44])
          [
            core_type (src/lr1.ml[115,3604+18]..[115,3604+38])
              Ptyp_constr "SymbolMap.t" (src/lr1.ml[115,3604+27]..[115,3604+38])
              [
                core_type (src/lr1.ml[115,3604+18]..[115,3604+26])
                  Ptyp_constr "Raw.node" (src/lr1.ml[115,3604+18]..[115,3604+26])
                  []
              ]
          ]
        expression (src/lr1.ml[116,3651+2]..[118,3713+3])
          Pexp_apply
          expression (src/lr1.ml[116,3651+2]..[116,3651+12])
            Pexp_ident "Array.init" (src/lr1.ml[116,3651+2]..[116,3651+12])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[116,3651+13]..[116,3651+18])
                Pexp_ident "Raw.n" (src/lr1.ml[116,3651+13]..[116,3651+18])
            <arg>
            Nolabel
              expression (src/lr1.ml[116,3651+19]..[118,3713+3])
                Pexp_fun
                Nolabel
                None
                pattern (src/lr1.ml[116,3651+24]..[116,3651+25])
                  Ppat_var "i" (src/lr1.ml[116,3651+24]..[116,3651+25])
                expression (src/lr1.ml[117,3680+4]..[117,3680+32])
                  Pexp_apply
                  expression (src/lr1.ml[117,3680+4]..[117,3680+19])
                    Pexp_ident "Raw.transitions" (src/lr1.ml[117,3680+4]..[117,3680+19])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[117,3680+20]..[117,3680+32])
                        Pexp_apply
                        expression (src/lr1.ml[117,3680+21]..[117,3680+29])
                          Pexp_ident "Raw.node" (src/lr1.ml[117,3680+21]..[117,3680+29])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[117,3680+30]..[117,3680+31])
                              Pexp_ident "i" (src/lr1.ml[117,3680+30]..[117,3680+31])
                        ]
                  ]
          ]
    ]
  structure_item (src/lr1.ml[123,3866+0]..[124,3903+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[123,3866+4]..[123,3866+16])
          Ppat_var "predecessors" (src/lr1.ml[123,3866+4]..[123,3866+16])
        core_type (src/lr1.ml[123,3866+19]..[123,3866+34])
          Ptyp_constr "array" (src/lr1.ml[123,3866+29]..[123,3866+34])
          [
            core_type (src/lr1.ml[123,3866+19]..[123,3866+28])
              Ptyp_constr "list" (src/lr1.ml[123,3866+24]..[123,3866+28])
              [
                core_type (src/lr1.ml[123,3866+19]..[123,3866+23])
                  Ptyp_constr "node" (src/lr1.ml[123,3866+19]..[123,3866+23])
                  []
              ]
          ]
        expression (src/lr1.ml[124,3903+2]..[124,3903+21])
          Pexp_apply
          expression (src/lr1.ml[124,3903+2]..[124,3903+12])
            Pexp_ident "Array.make" (src/lr1.ml[124,3903+2]..[124,3903+12])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[124,3903+13]..[124,3903+18])
                Pexp_ident "Raw.n" (src/lr1.ml[124,3903+13]..[124,3903+18])
            <arg>
            Nolabel
              expression (src/lr1.ml[124,3903+19]..[124,3903+21])
                Pexp_construct "[]" (src/lr1.ml[124,3903+19]..[124,3903+21])
                None
          ]
    ]
  structure_item (src/lr1.ml[128,3981+0]..[129,4021+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[128,3981+4]..[128,3981+14])
          Ppat_var "reductions" (src/lr1.ml[128,3981+4]..[128,3981+14])
        core_type (src/lr1.ml[128,3981+17]..[128,3981+37])
          Ptyp_constr "array" (src/lr1.ml[128,3981+32]..[128,3981+37])
          [
            core_type (src/lr1.ml[128,3981+17]..[128,3981+31])
              Ptyp_constr "Lr0.reductions" (src/lr1.ml[128,3981+17]..[128,3981+31])
              []
          ]
        expression (src/lr1.ml[129,4021+2]..[129,4021+36])
          Pexp_apply
          expression (src/lr1.ml[129,4021+2]..[129,4021+12])
            Pexp_ident "Array.make" (src/lr1.ml[129,4021+2]..[129,4021+12])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[129,4021+13]..[129,4021+18])
                Pexp_ident "Raw.n" (src/lr1.ml[129,4021+13]..[129,4021+18])
            <arg>
            Nolabel
              expression (src/lr1.ml[129,4021+19]..[129,4021+36])
                Pexp_ident "TerminalMap.empty" (src/lr1.ml[129,4021+19]..[129,4021+36])
          ]
    ]
  structure_item (src/lr1.ml[135,4239+0]..[136,4284+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[135,4239+4]..[135,4239+20])
          Ppat_var "_conflict_tokens" (src/lr1.ml[135,4239+4]..[135,4239+20])
        core_type (src/lr1.ml[135,4239+23]..[135,4239+42])
          Ptyp_constr "array" (src/lr1.ml[135,4239+37]..[135,4239+42])
          [
            core_type (src/lr1.ml[135,4239+23]..[135,4239+36])
              Ptyp_constr "TerminalSet.t" (src/lr1.ml[135,4239+23]..[135,4239+36])
              []
          ]
        expression (src/lr1.ml[136,4284+2]..[136,4284+36])
          Pexp_apply
          expression (src/lr1.ml[136,4284+2]..[136,4284+12])
            Pexp_ident "Array.make" (src/lr1.ml[136,4284+2]..[136,4284+12])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[136,4284+13]..[136,4284+18])
                Pexp_ident "Raw.n" (src/lr1.ml[136,4284+13]..[136,4284+18])
            <arg>
            Nolabel
              expression (src/lr1.ml[136,4284+19]..[136,4284+36])
                Pexp_ident "TerminalSet.empty" (src/lr1.ml[136,4284+19]..[136,4284+36])
          ]
    ]
  structure_item (src/lr1.ml[140,4386+0]..[141,4465+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[140,4386+4]..[140,4386+21])
          Ppat_var "_has_eos_conflict" (src/lr1.ml[140,4386+4]..[140,4386+21])
        core_type (src/lr1.ml[140,4386+24]..[140,4386+76])
          Ptyp_constr "array" (src/lr1.ml[140,4386+71]..[140,4386+76])
          [
            core_type (src/lr1.ml[140,4386+24]..[140,4386+70])
              Ptyp_constr "option" (src/lr1.ml[140,4386+64]..[140,4386+70])
              [
                core_type (src/lr1.ml[140,4386+25]..[140,4386+62])
                  Ptyp_tuple
                  [
                    core_type (src/lr1.ml[140,4386+25]..[140,4386+46])
                      Ptyp_constr "list" (src/lr1.ml[140,4386+42]..[140,4386+46])
                      [
                        core_type (src/lr1.ml[140,4386+25]..[140,4386+41])
                          Ptyp_constr "Production.index" (src/lr1.ml[140,4386+25]..[140,4386+41])
                          []
                      ]
                    core_type (src/lr1.ml[140,4386+49]..[140,4386+62])
                      Ptyp_constr "TerminalSet.t" (src/lr1.ml[140,4386+49]..[140,4386+62])
                      []
                  ]
              ]
          ]
        expression (src/lr1.ml[141,4465+2]..[141,4465+23])
          Pexp_apply
          expression (src/lr1.ml[141,4465+2]..[141,4465+12])
            Pexp_ident "Array.make" (src/lr1.ml[141,4465+2]..[141,4465+12])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[141,4465+13]..[141,4465+18])
                Pexp_ident "Raw.n" (src/lr1.ml[141,4465+13]..[141,4465+18])
            <arg>
            Nolabel
              expression (src/lr1.ml[141,4465+19]..[141,4465+23])
                Pexp_construct "None" (src/lr1.ml[141,4465+19]..[141,4465+23])
                None
          ]
    ]
  structure_item (src/lr1.ml[147,4697+0]..[148,4741+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[147,4697+4]..[147,4697+28])
          Ppat_var "forbid_default_reduction" (src/lr1.ml[147,4697+4]..[147,4697+28])
        core_type (src/lr1.ml[147,4697+31]..[147,4697+41])
          Ptyp_constr "array" (src/lr1.ml[147,4697+36]..[147,4697+41])
          [
            core_type (src/lr1.ml[147,4697+31]..[147,4697+35])
              Ptyp_constr "bool" (src/lr1.ml[147,4697+31]..[147,4697+35])
              []
          ]
        expression (src/lr1.ml[148,4741+2]..[148,4741+24])
          Pexp_apply
          expression (src/lr1.ml[148,4741+2]..[148,4741+12])
            Pexp_ident "Array.make" (src/lr1.ml[148,4741+2]..[148,4741+12])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[148,4741+13]..[148,4741+18])
                Pexp_ident "Raw.n" (src/lr1.ml[148,4741+13]..[148,4741+18])
            <arg>
            Nolabel
              expression (src/lr1.ml[148,4741+19]..[148,4741+24])
                Pexp_construct "false" (src/lr1.ml[148,4741+19]..[148,4741+24])
                None
          ]
    ]
  structure_item (src/lr1.ml[152,4806+0]..[153,4814+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[152,4806+4]..[152,4806+5])
          Ppat_var "n" (src/lr1.ml[152,4806+4]..[152,4806+5])
        expression (src/lr1.ml[153,4814+2]..[153,4814+7])
          Pexp_apply
          expression (src/lr1.ml[153,4814+2]..[153,4814+5])
            Pexp_ident "ref" (src/lr1.ml[153,4814+2]..[153,4814+5])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[153,4814+6]..[153,4814+7])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (src/lr1.ml[157,4862+0]..[158,4899+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[157,4862+4]..[157,4862+18])
          Ppat_var "conflict_nodes" (src/lr1.ml[157,4862+4]..[157,4862+18])
        core_type (src/lr1.ml[157,4862+21]..[157,4862+34])
          Ptyp_constr "ref" (src/lr1.ml[157,4862+31]..[157,4862+34])
          [
            core_type (src/lr1.ml[157,4862+21]..[157,4862+30])
              Ptyp_constr "list" (src/lr1.ml[157,4862+26]..[157,4862+30])
              [
                core_type (src/lr1.ml[157,4862+21]..[157,4862+25])
                  Ptyp_constr "node" (src/lr1.ml[157,4862+21]..[157,4862+25])
                  []
              ]
          ]
        expression (src/lr1.ml[158,4899+2]..[158,4899+8])
          Pexp_apply
          expression (src/lr1.ml[158,4899+2]..[158,4899+5])
            Pexp_ident "ref" (src/lr1.ml[158,4899+2]..[158,4899+5])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[158,4899+6]..[158,4899+8])
                Pexp_construct "[]" (src/lr1.ml[158,4899+6]..[158,4899+8])
                None
          ]
    ]
  structure_item (src/lr1.ml[162,4979+0]..[163,4998+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[162,4979+4]..[162,4979+16])
          Ppat_var "shift_reduce" (src/lr1.ml[162,4979+4]..[162,4979+16])
        expression (src/lr1.ml[163,4998+2]..[163,4998+7])
          Pexp_apply
          expression (src/lr1.ml[163,4998+2]..[163,4998+5])
            Pexp_ident "ref" (src/lr1.ml[163,4998+2]..[163,4998+5])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[163,4998+6]..[163,4998+7])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (src/lr1.ml[165,5007+0]..[166,5027+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[165,5007+4]..[165,5007+17])
          Ppat_var "reduce_reduce" (src/lr1.ml[165,5007+4]..[165,5007+17])
        expression (src/lr1.ml[166,5027+2]..[166,5027+7])
          Pexp_apply
          expression (src/lr1.ml[166,5027+2]..[166,5027+5])
            Pexp_ident "ref" (src/lr1.ml[166,5027+2]..[166,5027+5])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[166,5027+6]..[166,5027+7])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (src/lr1.ml[171,5115+0]..[172,5137+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[171,5115+4]..[171,5115+19])
          Ppat_var "silently_solved" (src/lr1.ml[171,5115+4]..[171,5115+19])
        expression (src/lr1.ml[172,5137+2]..[172,5137+7])
          Pexp_apply
          expression (src/lr1.ml[172,5137+2]..[172,5137+5])
            Pexp_ident "ref" (src/lr1.ml[172,5137+2]..[172,5137+5])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[172,5137+6]..[172,5137+7])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (src/lr1.ml[182,5463+0]..[190,5730+3])
    Pstr_module
    "RawForwardEdges" (src/lr1.ml[182,5463+7]..[182,5463+22])
      module_expr (src/lr1.ml[182,5463+25]..[190,5730+3])
        Pmod_structure
        [
          structure_item (src/lr1.ml[183,5495+2]..[183,5495+22])
            Pstr_type Rec
            [
              type_declaration "node" (src/lr1.ml[183,5495+7]..[183,5495+11]) (src/lr1.ml[183,5495+2]..[183,5495+22])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/lr1.ml[183,5495+14]..[183,5495+22])
                      Ptyp_constr "Raw.node" (src/lr1.ml[183,5495+14]..[183,5495+22])
                      []
            ]
          structure_item (src/lr1.ml[184,5518+2]..[184,5518+23])
            Pstr_type Rec
            [
              type_declaration "label" (src/lr1.ml[184,5518+7]..[184,5518+12]) (src/lr1.ml[184,5518+2]..[184,5518+23])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/lr1.ml[184,5518+15]..[184,5518+23])
                      Ptyp_constr "Symbol.t" (src/lr1.ml[184,5518+15]..[184,5518+23])
                      []
            ]
          structure_item (src/lr1.ml[185,5542+2]..[187,5610+36])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/lr1.ml[185,5542+6]..[185,5542+27])
                  Ppat_var "foreach_outgoing_edge" (src/lr1.ml[185,5542+6]..[185,5542+27])
                expression (src/lr1.ml[185,5542+28]..[187,5610+36]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/lr1.ml[185,5542+28]..[185,5542+32])
                    Ppat_var "node" (src/lr1.ml[185,5542+28]..[185,5542+32])
                  expression (src/lr1.ml[185,5542+33]..[187,5610+36]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/lr1.ml[185,5542+33]..[185,5542+34])
                      Ppat_var "f" (src/lr1.ml[185,5542+33]..[185,5542+34])
                    expression (src/lr1.ml[186,5579+4]..[187,5610+36])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/lr1.ml[186,5579+8]..[186,5579+9])
                            Ppat_var "i" (src/lr1.ml[186,5579+8]..[186,5579+9])
                          expression (src/lr1.ml[186,5579+12]..[186,5579+27])
                            Pexp_apply
                            expression (src/lr1.ml[186,5579+12]..[186,5579+22])
                              Pexp_ident "Raw.number" (src/lr1.ml[186,5579+12]..[186,5579+22])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[186,5579+23]..[186,5579+27])
                                  Pexp_ident "node" (src/lr1.ml[186,5579+23]..[186,5579+27])
                            ]
                      ]
                      expression (src/lr1.ml[187,5610+4]..[187,5610+36])
                        Pexp_apply
                        expression (src/lr1.ml[187,5610+4]..[187,5610+18])
                          Pexp_ident "SymbolMap.iter" (src/lr1.ml[187,5610+4]..[187,5610+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[187,5610+19]..[187,5610+20])
                              Pexp_ident "f" (src/lr1.ml[187,5610+19]..[187,5610+20])
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[187,5610+21]..[187,5610+36])
                              Pexp_apply
                              expression (src/lr1.ml[187,5610+21]..[187,5610+36]) ghost
                                Pexp_ident "Array.get" (src/lr1.ml[187,5610+21]..[187,5610+36]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[187,5610+21]..[187,5610+32])
                                    Pexp_ident "transitions" (src/lr1.ml[187,5610+21]..[187,5610+32])
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[187,5610+34]..[187,5610+35])
                                    Pexp_ident "i" (src/lr1.ml[187,5610+34]..[187,5610+35])
                              ]
                        ]
            ]
          structure_item (src/lr1.ml[188,5647+2]..[189,5670+59])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/lr1.ml[188,5647+6]..[188,5647+18])
                  Ppat_var "foreach_root" (src/lr1.ml[188,5647+6]..[188,5647+18])
                expression (src/lr1.ml[188,5647+19]..[189,5670+59]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/lr1.ml[188,5647+19]..[188,5647+20])
                    Ppat_var "f" (src/lr1.ml[188,5647+19]..[188,5647+20])
                  expression (src/lr1.ml[189,5670+4]..[189,5670+59])
                    Pexp_apply
                    expression (src/lr1.ml[189,5670+4]..[189,5670+22])
                      Pexp_ident "ProductionMap.iter" (src/lr1.ml[189,5670+4]..[189,5670+22])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[189,5670+23]..[189,5670+49])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/lr1.ml[189,5670+28]..[189,5670+33])
                            Ppat_var "_prod" (src/lr1.ml[189,5670+28]..[189,5670+33])
                          expression (src/lr1.ml[189,5670+34]..[189,5670+48]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/lr1.ml[189,5670+34]..[189,5670+38])
                              Ppat_var "node" (src/lr1.ml[189,5670+34]..[189,5670+38])
                            expression (src/lr1.ml[189,5670+42]..[189,5670+48])
                              Pexp_apply
                              expression (src/lr1.ml[189,5670+42]..[189,5670+43])
                                Pexp_ident "f" (src/lr1.ml[189,5670+42]..[189,5670+43])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[189,5670+44]..[189,5670+48])
                                    Pexp_ident "node" (src/lr1.ml[189,5670+44]..[189,5670+48])
                              ]
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[189,5670+50]..[189,5670+59])
                          Pexp_ident "Raw.entry" (src/lr1.ml[189,5670+50]..[189,5670+59])
                    ]
            ]
        ]
  structure_item (src/lr1.ml[198,5971+0]..[365,11520+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[198,5971+4]..[198,5971+12])
          Ppat_var "discover" (src/lr1.ml[198,5971+4]..[198,5971+12])
        expression (src/lr1.ml[198,5971+13]..[365,11520+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[198,5971+13]..[198,5971+34])
            Ppat_constraint
            pattern (src/lr1.ml[198,5971+14]..[198,5971+22])
              Ppat_var "raw_node" (src/lr1.ml[198,5971+14]..[198,5971+22])
            core_type (src/lr1.ml[198,5971+25]..[198,5971+33])
              Ptyp_constr "Raw.node" (src/lr1.ml[198,5971+25]..[198,5971+33])
              []
          expression (src/lr1.ml[199,6008+2]..[365,11520+5])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/lr1.ml[199,6008+6]..[199,6008+7])
                  Ppat_var "i" (src/lr1.ml[199,6008+6]..[199,6008+7])
                expression (src/lr1.ml[199,6008+10]..[199,6008+29])
                  Pexp_apply
                  expression (src/lr1.ml[199,6008+10]..[199,6008+20])
                    Pexp_ident "Raw.number" (src/lr1.ml[199,6008+10]..[199,6008+20])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[199,6008+21]..[199,6008+29])
                        Pexp_ident "raw_node" (src/lr1.ml[199,6008+21]..[199,6008+29])
                  ]
              <def>
                pattern (src/lr1.ml[200,6038+6]..[200,6038+11])
                  Ppat_var "state" (src/lr1.ml[200,6038+6]..[200,6038+11])
                expression (src/lr1.ml[200,6038+14]..[200,6038+32])
                  Pexp_apply
                  expression (src/lr1.ml[200,6038+14]..[200,6038+23])
                    Pexp_ident "Raw.state" (src/lr1.ml[200,6038+14]..[200,6038+23])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[200,6038+24]..[200,6038+32])
                        Pexp_ident "raw_node" (src/lr1.ml[200,6038+24]..[200,6038+32])
                  ]
            ]
            expression (src/lr1.ml[204,6102+2]..[365,11520+5])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/lr1.ml[204,6102+6]..[204,6102+10])
                    Ppat_var "node" (src/lr1.ml[204,6102+6]..[204,6102+10])
                  core_type (src/lr1.ml[204,6102+13]..[204,6102+17])
                    Ptyp_constr "node" (src/lr1.ml[204,6102+13]..[204,6102+17])
                    []
                  expression (src/lr1.ml[204,6102+20]..[204,6102+40])
                    Pexp_apply
                    expression (src/lr1.ml[204,6102+20]..[204,6102+38])
                      Pexp_ident "Misc.postincrement" (src/lr1.ml[204,6102+20]..[204,6102+38])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[204,6102+39]..[204,6102+40])
                          Pexp_ident "n" (src/lr1.ml[204,6102+39]..[204,6102+40])
                    ]
              ]
              expression (src/lr1.ml[205,6146+2]..[365,11520+5])
                Pexp_sequence
                expression (src/lr1.ml[205,6146+2]..[205,6146+21])
                  Pexp_apply
                  expression (src/lr1.ml[205,6146+2]..[205,6146+21]) ghost
                    Pexp_ident "Array.set" (src/lr1.ml[205,6146+2]..[205,6146+21]) ghost
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[205,6146+2]..[205,6146+9])
                        Pexp_ident "_number" (src/lr1.ml[205,6146+2]..[205,6146+9])
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[205,6146+11]..[205,6146+12])
                        Pexp_ident "i" (src/lr1.ml[205,6146+11]..[205,6146+12])
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[205,6146+17]..[205,6146+21])
                        Pexp_ident "node" (src/lr1.ml[205,6146+17]..[205,6146+21])
                  ]
                expression (src/lr1.ml[213,6520+2]..[365,11520+5])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/lr1.ml[213,6520+6]..[213,6520+22])
                        Ppat_var "has_shift_reduce" (src/lr1.ml[213,6520+6]..[213,6520+22])
                      expression (src/lr1.ml[213,6520+25]..[213,6520+34])
                        Pexp_apply
                        expression (src/lr1.ml[213,6520+25]..[213,6520+28])
                          Pexp_ident "ref" (src/lr1.ml[213,6520+25]..[213,6520+28])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[213,6520+29]..[213,6520+34])
                              Pexp_construct "false" (src/lr1.ml[213,6520+29]..[213,6520+34])
                              None
                        ]
                    <def>
                      pattern (src/lr1.ml[214,6555+6]..[214,6555+23])
                        Ppat_var "has_reduce_reduce" (src/lr1.ml[214,6555+6]..[214,6555+23])
                      expression (src/lr1.ml[214,6555+26]..[214,6555+35])
                        Pexp_apply
                        expression (src/lr1.ml[214,6555+26]..[214,6555+29])
                          Pexp_ident "ref" (src/lr1.ml[214,6555+26]..[214,6555+29])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[214,6555+30]..[214,6555+35])
                              Pexp_construct "false" (src/lr1.ml[214,6555+30]..[214,6555+35])
                              None
                        ]
                  ]
                  expression (src/lr1.ml[216,6595+2]..[365,11520+5])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/lr1.ml[216,6595+6]..[216,6595+23])
                          Ppat_var "foreach_reduction" (src/lr1.ml[216,6595+6]..[216,6595+23])
                        expression (src/lr1.ml[216,6595+24]..[217,6623+69]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/lr1.ml[216,6595+24]..[216,6595+25])
                            Ppat_var "f" (src/lr1.ml[216,6595+24]..[216,6595+25])
                          expression (src/lr1.ml[217,6623+4]..[217,6623+69])
                            Pexp_apply
                            expression (src/lr1.ml[217,6623+4]..[217,6623+20])
                              Pexp_ident "TerminalMap.fold" (src/lr1.ml[217,6623+4]..[217,6623+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[217,6623+21]..[217,6623+22])
                                  Pexp_ident "f" (src/lr1.ml[217,6623+21]..[217,6623+22])
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[217,6623+23]..[217,6623+51])
                                  Pexp_apply
                                  expression (src/lr1.ml[217,6623+24]..[217,6623+44])
                                    Pexp_ident "Lr0.reductions_table" (src/lr1.ml[217,6623+24]..[217,6623+44])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[217,6623+45]..[217,6623+50])
                                        Pexp_ident "state" (src/lr1.ml[217,6623+45]..[217,6623+50])
                                  ]
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[217,6623+52]..[217,6623+69])
                                  Pexp_ident "TerminalMap.empty" (src/lr1.ml[217,6623+52]..[217,6623+69])
                            ]
                    ]
                    expression (src/lr1.ml[220,6699+2]..[365,11520+5])
                      Pexp_sequence
                      expression (src/lr1.ml[220,6699+2]..[333,10455+5])
                        Pexp_apply
                        expression (src/lr1.ml[220,6699+2]..[333,10455+5]) ghost
                          Pexp_ident "Array.set" (src/lr1.ml[220,6699+2]..[333,10455+5]) ghost
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[220,6699+2]..[220,6699+12])
                              Pexp_ident "reductions" (src/lr1.ml[220,6699+2]..[220,6699+12])
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[220,6699+14]..[220,6699+15])
                              Pexp_ident "i" (src/lr1.ml[220,6699+14]..[220,6699+15])
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[220,6699+20]..[333,10455+5])
                              Pexp_apply
                              expression (src/lr1.ml[220,6699+20]..[220,6699+37])
                                Pexp_ident "foreach_reduction" (src/lr1.ml[220,6699+20]..[220,6699+37])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[220,6699+38]..[333,10455+5])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/lr1.ml[220,6699+48]..[220,6699+51])
                                      Ppat_var "tok" (src/lr1.ml[220,6699+48]..[220,6699+51])
                                    expression (src/lr1.ml[220,6699+52]..[331,10446+7]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (src/lr1.ml[220,6699+52]..[220,6699+57])
                                        Ppat_var "prods" (src/lr1.ml[220,6699+52]..[220,6699+57])
                                      expression (src/lr1.ml[220,6699+58]..[331,10446+7]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/lr1.ml[220,6699+58]..[220,6699+68])
                                          Ppat_var "reductions" (src/lr1.ml[220,6699+58]..[220,6699+68])
                                        expression (src/lr1.ml[221,6771+4]..[331,10446+7])
                                          Pexp_sequence
                                          expression (src/lr1.ml[221,6771+4]..[221,6771+24])
                                            Pexp_assert
                                            expression (src/lr1.ml[221,6771+11]..[221,6771+24])
                                              Pexp_apply
                                              expression (src/lr1.ml[221,6771+18]..[221,6771+20])
                                                Pexp_ident "<>" (src/lr1.ml[221,6771+18]..[221,6771+20])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/lr1.ml[221,6771+12]..[221,6771+17])
                                                    Pexp_ident "prods" (src/lr1.ml[221,6771+12]..[221,6771+17])
                                                <arg>
                                                Nolabel
                                                  expression (src/lr1.ml[221,6771+21]..[221,6771+23])
                                                    Pexp_construct "[]" (src/lr1.ml[221,6771+21]..[221,6771+23])
                                                    None
                                              ]
                                          expression (src/lr1.ml[222,6797+4]..[331,10446+7])
                                            Pexp_ifthenelse
                                            expression (src/lr1.ml[222,6797+7]..[222,6797+51])
                                              Pexp_apply
                                              expression (src/lr1.ml[222,6797+7]..[222,6797+20])
                                                Pexp_ident "SymbolMap.mem" (src/lr1.ml[222,6797+7]..[222,6797+20])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/lr1.ml[222,6797+21]..[222,6797+35])
                                                    Pexp_construct "Symbol.T" (src/lr1.ml[222,6797+22]..[222,6797+30])
                                                    Some
                                                      expression (src/lr1.ml[222,6797+31]..[222,6797+34])
                                                        Pexp_ident "tok" (src/lr1.ml[222,6797+31]..[222,6797+34])
                                                <arg>
                                                Nolabel
                                                  expression (src/lr1.ml[222,6797+36]..[222,6797+51])
                                                    Pexp_apply
                                                    expression (src/lr1.ml[222,6797+36]..[222,6797+51]) ghost
                                                      Pexp_ident "Array.get" (src/lr1.ml[222,6797+36]..[222,6797+51]) ghost
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/lr1.ml[222,6797+36]..[222,6797+47])
                                                          Pexp_ident "transitions" (src/lr1.ml[222,6797+36]..[222,6797+47])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/lr1.ml[222,6797+49]..[222,6797+50])
                                                          Pexp_ident "i" (src/lr1.ml[222,6797+49]..[222,6797+50])
                                                    ]
                                              ]
                                            expression (src/lr1.ml[222,6797+57]..[317,10000+7])
                                              Pexp_sequence
                                              expression (src/lr1.ml[227,6982+6]..[227,6982+54])
                                                Pexp_assert
                                                expression (src/lr1.ml[227,6982+13]..[227,6982+54])
                                                  Pexp_apply
                                                  expression (src/lr1.ml[227,6982+14]..[227,6982+17])
                                                    Pexp_ident "not" (src/lr1.ml[227,6982+14]..[227,6982+17])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/lr1.ml[227,6982+18]..[227,6982+53])
                                                        Pexp_apply
                                                        expression (src/lr1.ml[227,6982+19]..[227,6982+33])
                                                          Pexp_ident "Terminal.equal" (src/lr1.ml[227,6982+19]..[227,6982+33])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/lr1.ml[227,6982+34]..[227,6982+37])
                                                              Pexp_ident "tok" (src/lr1.ml[227,6982+34]..[227,6982+37])
                                                          <arg>
                                                          Nolabel
                                                            expression (src/lr1.ml[227,6982+38]..[227,6982+52])
                                                              Pexp_ident "Terminal.sharp" (src/lr1.ml[227,6982+38]..[227,6982+52])
                                                        ]
                                                  ]
                                              expression (src/lr1.ml[228,7038+6]..[315,9989+9])
                                                Pexp_ifthenelse
                                                expression (src/lr1.ml[228,7038+9]..[228,7038+30])
                                                  Pexp_apply
                                                  expression (src/lr1.ml[228,7038+27]..[228,7038+28])
                                                    Pexp_ident "=" (src/lr1.ml[228,7038+27]..[228,7038+28])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/lr1.ml[228,7038+9]..[228,7038+26])
                                                        Pexp_apply
                                                        expression (src/lr1.ml[228,7038+9]..[228,7038+20])
                                                          Pexp_ident "List.length" (src/lr1.ml[228,7038+9]..[228,7038+20])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/lr1.ml[228,7038+21]..[228,7038+26])
                                                              Pexp_ident "prods" (src/lr1.ml[228,7038+21]..[228,7038+26])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (src/lr1.ml[228,7038+29]..[228,7038+30])
                                                        Pexp_constant PConst_int (1,None)
                                                  ]
                                                expression (src/lr1.ml[228,7038+36]..[272,8583+9])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (src/lr1.ml[229,7080+12]..[229,7080+16])
                                                        Ppat_var "prod" (src/lr1.ml[229,7080+12]..[229,7080+16])
                                                      expression (src/lr1.ml[229,7080+19]..[229,7080+32])
                                                        Pexp_apply
                                                        expression (src/lr1.ml[229,7080+19]..[229,7080+26])
                                                          Pexp_ident "List.hd" (src/lr1.ml[229,7080+19]..[229,7080+26])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/lr1.ml[229,7080+27]..[229,7080+32])
                                                              Pexp_ident "prods" (src/lr1.ml[229,7080+27]..[229,7080+32])
                                                        ]
                                                  ]
                                                  expression (src/lr1.ml[234,7263+8]..[270,8533+48])
                                                    Pexp_match
                                                    expression (src/lr1.ml[234,7263+14]..[234,7263+46])
                                                      Pexp_apply
                                                      expression (src/lr1.ml[234,7263+14]..[234,7263+37])
                                                        Pexp_ident "Precedence.shift_reduce" (src/lr1.ml[234,7263+14]..[234,7263+37])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/lr1.ml[234,7263+38]..[234,7263+41])
                                                            Pexp_ident "tok" (src/lr1.ml[234,7263+38]..[234,7263+41])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/lr1.ml[234,7263+42]..[234,7263+46])
                                                            Pexp_ident "prod" (src/lr1.ml[234,7263+42]..[234,7263+46])
                                                      ]
                                                    [
                                                      <case>
                                                        pattern (src/lr1.ml[236,7316+10]..[236,7316+32])
                                                          Ppat_construct "Precedence.ChooseShift" (src/lr1.ml[236,7316+10]..[236,7316+32])
                                                          None
                                                        expression (src/lr1.ml[240,7400+12]..[241,7434+22])
                                                          Pexp_sequence
                                                          expression (src/lr1.ml[240,7400+12]..[240,7400+32])
                                                            Pexp_apply
                                                            expression (src/lr1.ml[240,7400+12]..[240,7400+16])
                                                              Pexp_ident "incr" (src/lr1.ml[240,7400+12]..[240,7400+16])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/lr1.ml[240,7400+17]..[240,7400+32])
                                                                  Pexp_ident "silently_solved" (src/lr1.ml[240,7400+17]..[240,7400+32])
                                                            ]
                                                          expression (src/lr1.ml[241,7434+12]..[241,7434+22])
                                                            Pexp_ident "reductions" (src/lr1.ml[241,7434+12]..[241,7434+22])
                                                      <case>
                                                        pattern (src/lr1.ml[243,7458+10]..[243,7458+33])
                                                          Ppat_construct "Precedence.ChooseReduce" (src/lr1.ml[243,7458+10]..[243,7458+33])
                                                          None
                                                        expression (src/lr1.ml[250,7789+12]..[252,7903+48])
                                                          Pexp_sequence
                                                          expression (src/lr1.ml[250,7789+12]..[250,7789+32])
                                                            Pexp_apply
                                                            expression (src/lr1.ml[250,7789+12]..[250,7789+16])
                                                              Pexp_ident "incr" (src/lr1.ml[250,7789+12]..[250,7789+16])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/lr1.ml[250,7789+17]..[250,7789+32])
                                                                  Pexp_ident "silently_solved" (src/lr1.ml[250,7789+17]..[250,7789+32])
                                                            ]
                                                          expression (src/lr1.ml[251,7823+12]..[252,7903+48])
                                                            Pexp_sequence
                                                            expression (src/lr1.ml[251,7823+12]..[251,7823+78])
                                                              Pexp_apply
                                                              expression (src/lr1.ml[251,7823+12]..[251,7823+78]) ghost
                                                                Pexp_ident "Array.set" (src/lr1.ml[251,7823+12]..[251,7823+78]) ghost
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/lr1.ml[251,7823+12]..[251,7823+23])
                                                                    Pexp_ident "transitions" (src/lr1.ml[251,7823+12]..[251,7823+23])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/lr1.ml[251,7823+25]..[251,7823+26])
                                                                    Pexp_ident "i" (src/lr1.ml[251,7823+25]..[251,7823+26])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/lr1.ml[251,7823+31]..[251,7823+78])
                                                                    Pexp_apply
                                                                    expression (src/lr1.ml[251,7823+31]..[251,7823+47])
                                                                      Pexp_ident "SymbolMap.remove" (src/lr1.ml[251,7823+31]..[251,7823+47])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/lr1.ml[251,7823+48]..[251,7823+62])
  Pexp_construct "Symbol.T" (src/lr1.ml[251,7823+49]..[251,7823+57])
  Some
    expression (src/lr1.ml[251,7823+58]..[251,7823+61])
      Pexp_ident "tok" (src/lr1.ml[251,7823+58]..[251,7823+61])
                                                                      <arg>
                                                                      Nolabel
expression (src/lr1.ml[251,7823+63]..[251,7823+78])
  Pexp_apply
  expression (src/lr1.ml[251,7823+63]..[251,7823+78]) ghost
    Pexp_ident "Array.get" (src/lr1.ml[251,7823+63]..[251,7823+78]) ghost
  [
    <arg>
    Nolabel
      expression (src/lr1.ml[251,7823+63]..[251,7823+74])
        Pexp_ident "transitions" (src/lr1.ml[251,7823+63]..[251,7823+74])
    <arg>
    Nolabel
      expression (src/lr1.ml[251,7823+76]..[251,7823+77])
        Pexp_ident "i" (src/lr1.ml[251,7823+76]..[251,7823+77])
  ]
                                                                    ]
                                                              ]
                                                            expression (src/lr1.ml[252,7903+12]..[252,7903+48])
                                                              Pexp_apply
                                                              expression (src/lr1.ml[252,7903+12]..[252,7903+27])
                                                                Pexp_ident "TerminalMap.add" (src/lr1.ml[252,7903+12]..[252,7903+27])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/lr1.ml[252,7903+28]..[252,7903+31])
                                                                    Pexp_ident "tok" (src/lr1.ml[252,7903+28]..[252,7903+31])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/lr1.ml[252,7903+32]..[252,7903+37])
                                                                    Pexp_ident "prods" (src/lr1.ml[252,7903+32]..[252,7903+37])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/lr1.ml[252,7903+38]..[252,7903+48])
                                                                    Pexp_ident "reductions" (src/lr1.ml[252,7903+38]..[252,7903+48])
                                                              ]
                                                      <case>
                                                        pattern (src/lr1.ml[254,7953+10]..[254,7953+34])
                                                          Ppat_construct "Precedence.ChooseNeither" (src/lr1.ml[254,7953+10]..[254,7953+34])
                                                          None
                                                        expression (src/lr1.ml[258,8069+12]..[261,8233+22])
                                                          Pexp_sequence
                                                          expression (src/lr1.ml[258,8069+12]..[258,8069+32])
                                                            Pexp_apply
                                                            expression (src/lr1.ml[258,8069+12]..[258,8069+16])
                                                              Pexp_ident "incr" (src/lr1.ml[258,8069+12]..[258,8069+16])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/lr1.ml[258,8069+17]..[258,8069+32])
                                                                  Pexp_ident "silently_solved" (src/lr1.ml[258,8069+17]..[258,8069+32])
                                                            ]
                                                          expression (src/lr1.ml[259,8103+12]..[261,8233+22])
                                                            Pexp_sequence
                                                            expression (src/lr1.ml[259,8103+12]..[259,8103+78])
                                                              Pexp_apply
                                                              expression (src/lr1.ml[259,8103+12]..[259,8103+78]) ghost
                                                                Pexp_ident "Array.set" (src/lr1.ml[259,8103+12]..[259,8103+78]) ghost
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/lr1.ml[259,8103+12]..[259,8103+23])
                                                                    Pexp_ident "transitions" (src/lr1.ml[259,8103+12]..[259,8103+23])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/lr1.ml[259,8103+25]..[259,8103+26])
                                                                    Pexp_ident "i" (src/lr1.ml[259,8103+25]..[259,8103+26])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/lr1.ml[259,8103+31]..[259,8103+78])
                                                                    Pexp_apply
                                                                    expression (src/lr1.ml[259,8103+31]..[259,8103+47])
                                                                      Pexp_ident "SymbolMap.remove" (src/lr1.ml[259,8103+31]..[259,8103+47])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/lr1.ml[259,8103+48]..[259,8103+62])
  Pexp_construct "Symbol.T" (src/lr1.ml[259,8103+49]..[259,8103+57])
  Some
    expression (src/lr1.ml[259,8103+58]..[259,8103+61])
      Pexp_ident "tok" (src/lr1.ml[259,8103+58]..[259,8103+61])
                                                                      <arg>
                                                                      Nolabel
expression (src/lr1.ml[259,8103+63]..[259,8103+78])
  Pexp_apply
  expression (src/lr1.ml[259,8103+63]..[259,8103+78]) ghost
    Pexp_ident "Array.get" (src/lr1.ml[259,8103+63]..[259,8103+78]) ghost
  [
    <arg>
    Nolabel
      expression (src/lr1.ml[259,8103+63]..[259,8103+74])
        Pexp_ident "transitions" (src/lr1.ml[259,8103+63]..[259,8103+74])
    <arg>
    Nolabel
      expression (src/lr1.ml[259,8103+76]..[259,8103+77])
        Pexp_ident "i" (src/lr1.ml[259,8103+76]..[259,8103+77])
  ]
                                                                    ]
                                                              ]
                                                            expression (src/lr1.ml[260,8183+12]..[261,8233+22])
                                                              Pexp_sequence
                                                              expression (src/lr1.ml[260,8183+12]..[260,8183+48])
                                                                Pexp_apply
                                                                expression (src/lr1.ml[260,8183+12]..[260,8183+48]) ghost
                                                                  Pexp_ident "Array.set" (src/lr1.ml[260,8183+12]..[260,8183+48]) ghost
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr1.ml[260,8183+12]..[260,8183+36])
                                                                      Pexp_ident "forbid_default_reduction" (src/lr1.ml[260,8183+12]..[260,8183+36])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr1.ml[260,8183+38]..[260,8183+39])
                                                                      Pexp_ident "i" (src/lr1.ml[260,8183+38]..[260,8183+39])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr1.ml[260,8183+44]..[260,8183+48])
                                                                      Pexp_construct "true" (src/lr1.ml[260,8183+44]..[260,8183+48])
                                                                      None
                                                                ]
                                                              expression (src/lr1.ml[261,8233+12]..[261,8233+22])
                                                                Pexp_ident "reductions" (src/lr1.ml[261,8233+12]..[261,8233+22])
                                                      <case>
                                                        pattern (src/lr1.ml[263,8257+10]..[263,8257+29])
                                                          Ppat_construct "Precedence.DontKnow" (src/lr1.ml[263,8257+10]..[263,8257+29])
                                                          None
                                                        expression (src/lr1.ml[268,8409+12]..[270,8533+48])
                                                          Pexp_sequence
                                                          expression (src/lr1.ml[268,8409+12]..[268,8409+84])
                                                            Pexp_apply
                                                            expression (src/lr1.ml[268,8409+12]..[268,8409+84]) ghost
                                                              Pexp_ident "Array.set" (src/lr1.ml[268,8409+12]..[268,8409+84]) ghost
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/lr1.ml[268,8409+12]..[268,8409+28])
                                                                  Pexp_ident "_conflict_tokens" (src/lr1.ml[268,8409+12]..[268,8409+28])
                                                              <arg>
                                                              Nolabel
                                                                expression (src/lr1.ml[268,8409+30]..[268,8409+31])
                                                                  Pexp_ident "i" (src/lr1.ml[268,8409+30]..[268,8409+31])
                                                              <arg>
                                                              Nolabel
                                                                expression (src/lr1.ml[268,8409+36]..[268,8409+84])
                                                                  Pexp_apply
                                                                  expression (src/lr1.ml[268,8409+36]..[268,8409+59])
                                                                    Pexp_ident "Grammar.TerminalSet.add" (src/lr1.ml[268,8409+36]..[268,8409+59])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/lr1.ml[268,8409+60]..[268,8409+63])
Pexp_ident "tok" (src/lr1.ml[268,8409+60]..[268,8409+63])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/lr1.ml[268,8409+64]..[268,8409+84])
Pexp_apply
expression (src/lr1.ml[268,8409+64]..[268,8409+84]) ghost
  Pexp_ident "Array.get" (src/lr1.ml[268,8409+64]..[268,8409+84]) ghost
[
  <arg>
  Nolabel
    expression (src/lr1.ml[268,8409+64]..[268,8409+80])
      Pexp_ident "_conflict_tokens" (src/lr1.ml[268,8409+64]..[268,8409+80])
  <arg>
  Nolabel
    expression (src/lr1.ml[268,8409+82]..[268,8409+83])
      Pexp_ident "i" (src/lr1.ml[268,8409+82]..[268,8409+83])
]
                                                                  ]
                                                            ]
                                                          expression (src/lr1.ml[269,8495+12]..[270,8533+48])
                                                            Pexp_sequence
                                                            expression (src/lr1.ml[269,8495+12]..[269,8495+36])
                                                              Pexp_apply
                                                              expression (src/lr1.ml[269,8495+29]..[269,8495+31])
                                                                Pexp_ident ":=" (src/lr1.ml[269,8495+29]..[269,8495+31])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/lr1.ml[269,8495+12]..[269,8495+28])
                                                                    Pexp_ident "has_shift_reduce" (src/lr1.ml[269,8495+12]..[269,8495+28])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/lr1.ml[269,8495+32]..[269,8495+36])
                                                                    Pexp_construct "true" (src/lr1.ml[269,8495+32]..[269,8495+36])
                                                                    None
                                                              ]
                                                            expression (src/lr1.ml[270,8533+12]..[270,8533+48])
                                                              Pexp_apply
                                                              expression (src/lr1.ml[270,8533+12]..[270,8533+27])
                                                                Pexp_ident "TerminalMap.add" (src/lr1.ml[270,8533+12]..[270,8533+27])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/lr1.ml[270,8533+28]..[270,8533+31])
                                                                    Pexp_ident "tok" (src/lr1.ml[270,8533+28]..[270,8533+31])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/lr1.ml[270,8533+32]..[270,8533+37])
                                                                    Pexp_ident "prods" (src/lr1.ml[270,8533+32]..[270,8533+37])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/lr1.ml[270,8533+38]..[270,8533+48])
                                                                    Pexp_ident "reductions" (src/lr1.ml[270,8533+38]..[270,8533+48])
                                                              ]
                                                    ]
                                                Some
                                                  expression (src/lr1.ml[273,8593+11]..[315,9989+9])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (src/lr1.ml[281,8965+12]..[281,8965+19])
                                                          Ppat_var "choices" (src/lr1.ml[281,8965+12]..[281,8965+19])
                                                        expression (src/lr1.ml[281,8965+22]..[281,8965+66])
                                                          Pexp_apply
                                                          expression (src/lr1.ml[281,8965+22]..[281,8965+30])
                                                            Pexp_ident "List.map" (src/lr1.ml[281,8965+22]..[281,8965+30])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/lr1.ml[281,8965+31]..[281,8965+60])
                                                                Pexp_apply
                                                                expression (src/lr1.ml[281,8965+32]..[281,8965+55])
                                                                  Pexp_ident "Precedence.shift_reduce" (src/lr1.ml[281,8965+32]..[281,8965+55])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr1.ml[281,8965+56]..[281,8965+59])
                                                                      Pexp_ident "tok" (src/lr1.ml[281,8965+56]..[281,8965+59])
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (src/lr1.ml[281,8965+61]..[281,8965+66])
                                                                Pexp_ident "prods" (src/lr1.ml[281,8965+61]..[281,8965+66])
                                                          ]
                                                    ]
                                                    expression (src/lr1.ml[283,9036+8]..[313,9976+11])
                                                      Pexp_ifthenelse
                                                      expression (src/lr1.ml[283,9036+11]..[287,9169+17])
                                                        Pexp_apply
                                                        expression (src/lr1.ml[283,9036+11]..[283,9036+23])
                                                          Pexp_ident "List.for_all" (src/lr1.ml[283,9036+11]..[283,9036+23])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/lr1.ml[283,9036+24]..[287,9169+9])
                                                              Pexp_fun
                                                              Nolabel
                                                              None
                                                              pattern (src/lr1.ml[283,9036+29]..[283,9036+35])
                                                                Ppat_var "choice" (src/lr1.ml[283,9036+29]..[283,9036+35])
                                                              expression (src/lr1.ml[284,9075+10]..[286,9146+22])
                                                                Pexp_match
                                                                expression (src/lr1.ml[284,9075+16]..[284,9075+22])
                                                                  Pexp_ident "choice" (src/lr1.ml[284,9075+16]..[284,9075+22])
                                                                [
                                                                  <case>
                                                                    pattern (src/lr1.ml[285,9103+12]..[285,9103+34])
                                                                      Ppat_construct "Precedence.ChooseShift" (src/lr1.ml[285,9103+12]..[285,9103+34])
                                                                      None
                                                                    expression (src/lr1.ml[285,9103+38]..[285,9103+42])
                                                                      Pexp_construct "true" (src/lr1.ml[285,9103+38]..[285,9103+42])
                                                                      None
                                                                  <case>
                                                                    pattern (src/lr1.ml[286,9146+12]..[286,9146+13])
                                                                      Ppat_any
                                                                    expression (src/lr1.ml[286,9146+17]..[286,9146+22])
                                                                      Pexp_construct "false" (src/lr1.ml[286,9146+17]..[286,9146+22])
                                                                      None
                                                                ]
                                                          <arg>
                                                          Nolabel
                                                            expression (src/lr1.ml[287,9169+10]..[287,9169+17])
                                                              Pexp_ident "choices" (src/lr1.ml[287,9169+10]..[287,9169+17])
                                                        ]
                                                      expression (src/lr1.ml[287,9169+23]..[294,9333+11])
                                                        Pexp_sequence
                                                        expression (src/lr1.ml[291,9244+10]..[291,9244+65])
                                                          Pexp_apply
                                                          expression (src/lr1.ml[291,9244+26]..[291,9244+28])
                                                            Pexp_ident ":=" (src/lr1.ml[291,9244+26]..[291,9244+28])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/lr1.ml[291,9244+10]..[291,9244+25])
                                                                Pexp_ident "silently_solved" (src/lr1.ml[291,9244+10]..[291,9244+25])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/lr1.ml[291,9244+29]..[291,9244+65])
                                                                Pexp_apply
                                                                expression (src/lr1.ml[291,9244+46]..[291,9244+47])
                                                                  Pexp_ident "+" (src/lr1.ml[291,9244+46]..[291,9244+47])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr1.ml[291,9244+29]..[291,9244+45])
                                                                      Pexp_apply
                                                                      expression (src/lr1.ml[291,9244+29]..[291,9244+30])
Pexp_ident "!" (src/lr1.ml[291,9244+29]..[291,9244+30])
                                                                      [
<arg>
Nolabel
  expression (src/lr1.ml[291,9244+30]..[291,9244+45])
    Pexp_ident "silently_solved" (src/lr1.ml[291,9244+30]..[291,9244+45])
                                                                      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr1.ml[291,9244+48]..[291,9244+65])
                                                                      Pexp_apply
                                                                      expression (src/lr1.ml[291,9244+48]..[291,9244+59])
Pexp_ident "List.length" (src/lr1.ml[291,9244+48]..[291,9244+59])
                                                                      [
<arg>
Nolabel
  expression (src/lr1.ml[291,9244+60]..[291,9244+65])
    Pexp_ident "prods" (src/lr1.ml[291,9244+60]..[291,9244+65])
                                                                      ]
                                                                ]
                                                          ]
                                                        expression (src/lr1.ml[292,9311+10]..[292,9311+20])
                                                          Pexp_ident "reductions" (src/lr1.ml[292,9311+10]..[292,9311+20])
                                                      Some
                                                        expression (src/lr1.ml[295,9345+13]..[313,9976+11])
                                                          Pexp_ifthenelse
                                                          expression (src/lr1.ml[295,9345+16]..[295,9345+67])
                                                            Pexp_apply
                                                            expression (src/lr1.ml[295,9345+16]..[295,9345+28])
                                                              Pexp_ident "List.for_all" (src/lr1.ml[295,9345+16]..[295,9345+28])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/lr1.ml[295,9345+29]..[295,9345+59])
                                                                  Pexp_apply
                                                                  expression (src/lr1.ml[295,9345+30]..[295,9345+33])
                                                                    Pexp_ident "=" (src/lr1.ml[295,9345+30]..[295,9345+33])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/lr1.ml[295,9345+34]..[295,9345+58])
Pexp_construct "Precedence.ChooseNeither" (src/lr1.ml[295,9345+34]..[295,9345+58])
None
                                                                  ]
                                                              <arg>
                                                              Nolabel
                                                                expression (src/lr1.ml[295,9345+60]..[295,9345+67])
                                                                  Pexp_ident "choices" (src/lr1.ml[295,9345+60]..[295,9345+67])
                                                            ]
                                                          expression (src/lr1.ml[295,9345+73]..[303,9662+11])
                                                            Pexp_sequence
                                                            expression (src/lr1.ml[299,9495+10]..[299,9495+65])
                                                              Pexp_apply
                                                              expression (src/lr1.ml[299,9495+26]..[299,9495+28])
                                                                Pexp_ident ":=" (src/lr1.ml[299,9495+26]..[299,9495+28])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/lr1.ml[299,9495+10]..[299,9495+25])
                                                                    Pexp_ident "silently_solved" (src/lr1.ml[299,9495+10]..[299,9495+25])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/lr1.ml[299,9495+29]..[299,9495+65])
                                                                    Pexp_apply
                                                                    expression (src/lr1.ml[299,9495+46]..[299,9495+47])
                                                                      Pexp_ident "+" (src/lr1.ml[299,9495+46]..[299,9495+47])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/lr1.ml[299,9495+29]..[299,9495+45])
  Pexp_apply
  expression (src/lr1.ml[299,9495+29]..[299,9495+30])
    Pexp_ident "!" (src/lr1.ml[299,9495+29]..[299,9495+30])
  [
    <arg>
    Nolabel
      expression (src/lr1.ml[299,9495+30]..[299,9495+45])
        Pexp_ident "silently_solved" (src/lr1.ml[299,9495+30]..[299,9495+45])
  ]
                                                                      <arg>
                                                                      Nolabel
expression (src/lr1.ml[299,9495+48]..[299,9495+65])
  Pexp_apply
  expression (src/lr1.ml[299,9495+48]..[299,9495+59])
    Pexp_ident "List.length" (src/lr1.ml[299,9495+48]..[299,9495+59])
  [
    <arg>
    Nolabel
      expression (src/lr1.ml[299,9495+60]..[299,9495+65])
        Pexp_ident "prods" (src/lr1.ml[299,9495+60]..[299,9495+65])
  ]
                                                                    ]
                                                              ]
                                                            expression (src/lr1.ml[300,9562+10]..[301,9640+20])
                                                              Pexp_sequence
                                                              expression (src/lr1.ml[300,9562+10]..[300,9562+76])
                                                                Pexp_apply
                                                                expression (src/lr1.ml[300,9562+10]..[300,9562+76]) ghost
                                                                  Pexp_ident "Array.set" (src/lr1.ml[300,9562+10]..[300,9562+76]) ghost
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr1.ml[300,9562+10]..[300,9562+21])
                                                                      Pexp_ident "transitions" (src/lr1.ml[300,9562+10]..[300,9562+21])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr1.ml[300,9562+23]..[300,9562+24])
                                                                      Pexp_ident "i" (src/lr1.ml[300,9562+23]..[300,9562+24])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr1.ml[300,9562+29]..[300,9562+76])
                                                                      Pexp_apply
                                                                      expression (src/lr1.ml[300,9562+29]..[300,9562+45])
Pexp_ident "SymbolMap.remove" (src/lr1.ml[300,9562+29]..[300,9562+45])
                                                                      [
<arg>
Nolabel
  expression (src/lr1.ml[300,9562+46]..[300,9562+60])
    Pexp_construct "Symbol.T" (src/lr1.ml[300,9562+47]..[300,9562+55])
    Some
      expression (src/lr1.ml[300,9562+56]..[300,9562+59])
        Pexp_ident "tok" (src/lr1.ml[300,9562+56]..[300,9562+59])
<arg>
Nolabel
  expression (src/lr1.ml[300,9562+61]..[300,9562+76])
    Pexp_apply
    expression (src/lr1.ml[300,9562+61]..[300,9562+76]) ghost
      Pexp_ident "Array.get" (src/lr1.ml[300,9562+61]..[300,9562+76]) ghost
    [
      <arg>
      Nolabel
        expression (src/lr1.ml[300,9562+61]..[300,9562+72])
          Pexp_ident "transitions" (src/lr1.ml[300,9562+61]..[300,9562+72])
      <arg>
      Nolabel
        expression (src/lr1.ml[300,9562+74]..[300,9562+75])
          Pexp_ident "i" (src/lr1.ml[300,9562+74]..[300,9562+75])
    ]
                                                                      ]
                                                                ]
                                                              expression (src/lr1.ml[301,9640+10]..[301,9640+20])
                                                                Pexp_ident "reductions" (src/lr1.ml[301,9640+10]..[301,9640+20])
                                                          Some
                                                            expression (src/lr1.ml[304,9674+13]..[313,9976+11])
                                                              Pexp_sequence
                                                              expression (src/lr1.ml[308,9771+10]..[308,9771+82])
                                                                Pexp_apply
                                                                expression (src/lr1.ml[308,9771+10]..[308,9771+82]) ghost
                                                                  Pexp_ident "Array.set" (src/lr1.ml[308,9771+10]..[308,9771+82]) ghost
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr1.ml[308,9771+10]..[308,9771+26])
                                                                      Pexp_ident "_conflict_tokens" (src/lr1.ml[308,9771+10]..[308,9771+26])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr1.ml[308,9771+28]..[308,9771+29])
                                                                      Pexp_ident "i" (src/lr1.ml[308,9771+28]..[308,9771+29])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr1.ml[308,9771+34]..[308,9771+82])
                                                                      Pexp_apply
                                                                      expression (src/lr1.ml[308,9771+34]..[308,9771+57])
Pexp_ident "Grammar.TerminalSet.add" (src/lr1.ml[308,9771+34]..[308,9771+57])
                                                                      [
<arg>
Nolabel
  expression (src/lr1.ml[308,9771+58]..[308,9771+61])
    Pexp_ident "tok" (src/lr1.ml[308,9771+58]..[308,9771+61])
<arg>
Nolabel
  expression (src/lr1.ml[308,9771+62]..[308,9771+82])
    Pexp_apply
    expression (src/lr1.ml[308,9771+62]..[308,9771+82]) ghost
      Pexp_ident "Array.get" (src/lr1.ml[308,9771+62]..[308,9771+82]) ghost
    [
      <arg>
      Nolabel
        expression (src/lr1.ml[308,9771+62]..[308,9771+78])
          Pexp_ident "_conflict_tokens" (src/lr1.ml[308,9771+62]..[308,9771+78])
      <arg>
      Nolabel
        expression (src/lr1.ml[308,9771+80]..[308,9771+81])
          Pexp_ident "i" (src/lr1.ml[308,9771+80]..[308,9771+81])
    ]
                                                                      ]
                                                                ]
                                                              expression (src/lr1.ml[309,9855+10]..[311,9928+46])
                                                                Pexp_sequence
                                                                expression (src/lr1.ml[309,9855+10]..[309,9855+34])
                                                                  Pexp_apply
                                                                  expression (src/lr1.ml[309,9855+27]..[309,9855+29])
                                                                    Pexp_ident ":=" (src/lr1.ml[309,9855+27]..[309,9855+29])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/lr1.ml[309,9855+10]..[309,9855+26])
Pexp_ident "has_shift_reduce" (src/lr1.ml[309,9855+10]..[309,9855+26])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/lr1.ml[309,9855+30]..[309,9855+34])
Pexp_construct "true" (src/lr1.ml[309,9855+30]..[309,9855+34])
None
                                                                  ]
                                                                expression (src/lr1.ml[310,9891+10]..[311,9928+46])
                                                                  Pexp_sequence
                                                                  expression (src/lr1.ml[310,9891+10]..[310,9891+35])
                                                                    Pexp_apply
                                                                    expression (src/lr1.ml[310,9891+28]..[310,9891+30])
                                                                      Pexp_ident ":=" (src/lr1.ml[310,9891+28]..[310,9891+30])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/lr1.ml[310,9891+10]..[310,9891+27])
  Pexp_ident "has_reduce_reduce" (src/lr1.ml[310,9891+10]..[310,9891+27])
                                                                      <arg>
                                                                      Nolabel
expression (src/lr1.ml[310,9891+31]..[310,9891+35])
  Pexp_construct "true" (src/lr1.ml[310,9891+31]..[310,9891+35])
  None
                                                                    ]
                                                                  expression (src/lr1.ml[311,9928+10]..[311,9928+46])
                                                                    Pexp_apply
                                                                    expression (src/lr1.ml[311,9928+10]..[311,9928+25])
                                                                      Pexp_ident "TerminalMap.add" (src/lr1.ml[311,9928+10]..[311,9928+25])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/lr1.ml[311,9928+26]..[311,9928+29])
  Pexp_ident "tok" (src/lr1.ml[311,9928+26]..[311,9928+29])
                                                                      <arg>
                                                                      Nolabel
expression (src/lr1.ml[311,9928+30]..[311,9928+35])
  Pexp_ident "prods" (src/lr1.ml[311,9928+30]..[311,9928+35])
                                                                      <arg>
                                                                      Nolabel
expression (src/lr1.ml[311,9928+36]..[311,9928+46])
  Pexp_ident "reductions" (src/lr1.ml[311,9928+36]..[311,9928+46])
                                                                    ]
                                            Some
                                              expression (src/lr1.ml[318,10008+9]..[331,10446+7])
                                                Pexp_sequence
                                                expression (src/lr1.ml[322,10093+6]..[327,10390+9])
                                                  Pexp_ifthenelse
                                                  expression (src/lr1.ml[322,10093+9]..[322,10093+31])
                                                    Pexp_apply
                                                    expression (src/lr1.ml[322,10093+27]..[322,10093+29])
                                                      Pexp_ident ">=" (src/lr1.ml[322,10093+27]..[322,10093+29])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/lr1.ml[322,10093+9]..[322,10093+26])
                                                          Pexp_apply
                                                          expression (src/lr1.ml[322,10093+9]..[322,10093+20])
                                                            Pexp_ident "List.length" (src/lr1.ml[322,10093+9]..[322,10093+20])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/lr1.ml[322,10093+21]..[322,10093+26])
                                                                Pexp_ident "prods" (src/lr1.ml[322,10093+21]..[322,10093+26])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (src/lr1.ml[322,10093+30]..[322,10093+31])
                                                          Pexp_constant PConst_int (2,None)
                                                    ]
                                                  expression (src/lr1.ml[322,10093+37]..[327,10390+9])
                                                    Pexp_sequence
                                                    expression (src/lr1.ml[325,10274+8]..[325,10274+80])
                                                      Pexp_apply
                                                      expression (src/lr1.ml[325,10274+8]..[325,10274+80]) ghost
                                                        Pexp_ident "Array.set" (src/lr1.ml[325,10274+8]..[325,10274+80]) ghost
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/lr1.ml[325,10274+8]..[325,10274+24])
                                                            Pexp_ident "_conflict_tokens" (src/lr1.ml[325,10274+8]..[325,10274+24])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/lr1.ml[325,10274+26]..[325,10274+27])
                                                            Pexp_ident "i" (src/lr1.ml[325,10274+26]..[325,10274+27])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/lr1.ml[325,10274+32]..[325,10274+80])
                                                            Pexp_apply
                                                            expression (src/lr1.ml[325,10274+32]..[325,10274+55])
                                                              Pexp_ident "Grammar.TerminalSet.add" (src/lr1.ml[325,10274+32]..[325,10274+55])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/lr1.ml[325,10274+56]..[325,10274+59])
                                                                  Pexp_ident "tok" (src/lr1.ml[325,10274+56]..[325,10274+59])
                                                              <arg>
                                                              Nolabel
                                                                expression (src/lr1.ml[325,10274+60]..[325,10274+80])
                                                                  Pexp_apply
                                                                  expression (src/lr1.ml[325,10274+60]..[325,10274+80]) ghost
                                                                    Pexp_ident "Array.get" (src/lr1.ml[325,10274+60]..[325,10274+80]) ghost
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/lr1.ml[325,10274+60]..[325,10274+76])
Pexp_ident "_conflict_tokens" (src/lr1.ml[325,10274+60]..[325,10274+76])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/lr1.ml[325,10274+78]..[325,10274+79])
Pexp_ident "i" (src/lr1.ml[325,10274+78]..[325,10274+79])
                                                                  ]
                                                            ]
                                                      ]
                                                    expression (src/lr1.ml[326,10356+8]..[326,10356+33])
                                                      Pexp_apply
                                                      expression (src/lr1.ml[326,10356+26]..[326,10356+28])
                                                        Pexp_ident ":=" (src/lr1.ml[326,10356+26]..[326,10356+28])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/lr1.ml[326,10356+8]..[326,10356+25])
                                                            Pexp_ident "has_reduce_reduce" (src/lr1.ml[326,10356+8]..[326,10356+25])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/lr1.ml[326,10356+29]..[326,10356+33])
                                                            Pexp_construct "true" (src/lr1.ml[326,10356+29]..[326,10356+33])
                                                            None
                                                      ]
                                                  None
                                                expression (src/lr1.ml[329,10402+6]..[329,10402+42])
                                                  Pexp_apply
                                                  expression (src/lr1.ml[329,10402+6]..[329,10402+21])
                                                    Pexp_ident "TerminalMap.add" (src/lr1.ml[329,10402+6]..[329,10402+21])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/lr1.ml[329,10402+22]..[329,10402+25])
                                                        Pexp_ident "tok" (src/lr1.ml[329,10402+22]..[329,10402+25])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/lr1.ml[329,10402+26]..[329,10402+31])
                                                        Pexp_ident "prods" (src/lr1.ml[329,10402+26]..[329,10402+31])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/lr1.ml[329,10402+32]..[329,10402+42])
                                                        Pexp_ident "reductions" (src/lr1.ml[329,10402+32]..[329,10402+42])
                                                  ]
                              ]
                        ]
                      expression (src/lr1.ml[339,10641+2]..[365,11520+5])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/lr1.ml[339,10641+6]..[339,10641+17])
                              Ppat_var "transitions" (src/lr1.ml[339,10641+6]..[339,10641+17])
                            expression (src/lr1.ml[339,10641+20]..[339,10641+35])
                              Pexp_apply
                              expression (src/lr1.ml[339,10641+20]..[339,10641+35]) ghost
                                Pexp_ident "Array.get" (src/lr1.ml[339,10641+20]..[339,10641+35]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[339,10641+20]..[339,10641+31])
                                    Pexp_ident "transitions" (src/lr1.ml[339,10641+20]..[339,10641+31])
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[339,10641+33]..[339,10641+34])
                                    Pexp_ident "i" (src/lr1.ml[339,10641+33]..[339,10641+34])
                              ]
                          <def>
                            pattern (src/lr1.ml[340,10677+6]..[340,10677+16])
                              Ppat_var "reductions" (src/lr1.ml[340,10677+6]..[340,10677+16])
                            expression (src/lr1.ml[340,10677+19]..[340,10677+33])
                              Pexp_apply
                              expression (src/lr1.ml[340,10677+19]..[340,10677+33]) ghost
                                Pexp_ident "Array.get" (src/lr1.ml[340,10677+19]..[340,10677+33]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[340,10677+19]..[340,10677+29])
                                    Pexp_ident "reductions" (src/lr1.ml[340,10677+19]..[340,10677+29])
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[340,10677+31]..[340,10677+32])
                                    Pexp_ident "i" (src/lr1.ml[340,10677+31]..[340,10677+32])
                              ]
                        ]
                        expression (src/lr1.ml[342,10715+2]..[365,11520+5])
                          Pexp_sequence
                          expression (src/lr1.ml[342,10715+2]..[355,11246+5])
                            Pexp_ifthenelse
                            expression (src/lr1.ml[342,10715+5]..[342,10715+48])
                              Pexp_apply
                              expression (src/lr1.ml[342,10715+5]..[342,10715+25])
                                Pexp_ident "Lr0.has_eos_conflict" (src/lr1.ml[342,10715+5]..[342,10715+25])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[342,10715+26]..[342,10715+37])
                                    Pexp_ident "transitions" (src/lr1.ml[342,10715+26]..[342,10715+37])
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[342,10715+38]..[342,10715+48])
                                    Pexp_ident "reductions" (src/lr1.ml[342,10715+38]..[342,10715+48])
                              ]
                            expression (src/lr1.ml[342,10715+54]..[355,11246+5])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/lr1.ml[344,10833+10]..[344,10833+27])
                                    Ppat_tuple
                                    [
                                      pattern (src/lr1.ml[344,10833+10]..[344,10833+15])
                                        Ppat_var "prods" (src/lr1.ml[344,10833+10]..[344,10833+15])
                                      pattern (src/lr1.ml[344,10833+17]..[344,10833+27])
                                        Ppat_var "reductions" (src/lr1.ml[344,10833+17]..[344,10833+27])
                                    ]
                                  expression (src/lr1.ml[345,10863+8]..[345,10863+63])
                                    Pexp_apply
                                    expression (src/lr1.ml[345,10863+8]..[345,10863+37])
                                      Pexp_ident "TerminalMap.lookup_and_remove" (src/lr1.ml[345,10863+8]..[345,10863+37])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr1.ml[345,10863+38]..[345,10863+52])
                                          Pexp_ident "Terminal.sharp" (src/lr1.ml[345,10863+38]..[345,10863+52])
                                      <arg>
                                      Nolabel
                                        expression (src/lr1.ml[345,10863+53]..[345,10863+63])
                                          Pexp_ident "reductions" (src/lr1.ml[345,10863+53]..[345,10863+63])
                                    ]
                              ]
                              expression (src/lr1.ml[348,11020+4]..[354,11198+47])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/lr1.ml[348,11020+8]..[348,11020+12])
                                      Ppat_var "toks" (src/lr1.ml[348,11020+8]..[348,11020+12])
                                    expression (src/lr1.ml[349,11035+6]..[351,11103+41])
                                      Pexp_apply
                                      expression (src/lr1.ml[349,11035+6]..[349,11035+23])
                                        Pexp_ident "TerminalSet.union" (src/lr1.ml[349,11035+6]..[349,11035+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr1.ml[350,11059+8]..[350,11059+43])
                                            Pexp_apply
                                            expression (src/lr1.ml[350,11059+9]..[350,11059+30])
                                              Pexp_ident "Lr0.transition_tokens" (src/lr1.ml[350,11059+9]..[350,11059+30])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/lr1.ml[350,11059+31]..[350,11059+42])
                                                  Pexp_ident "transitions" (src/lr1.ml[350,11059+31]..[350,11059+42])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (src/lr1.ml[351,11103+8]..[351,11103+41])
                                            Pexp_apply
                                            expression (src/lr1.ml[351,11103+9]..[351,11103+29])
                                              Pexp_ident "Lr0.reduction_tokens" (src/lr1.ml[351,11103+9]..[351,11103+29])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/lr1.ml[351,11103+30]..[351,11103+40])
                                                  Pexp_ident "reductions" (src/lr1.ml[351,11103+30]..[351,11103+40])
                                            ]
                                      ]
                                ]
                                expression (src/lr1.ml[354,11198+4]..[354,11198+47])
                                  Pexp_apply
                                  expression (src/lr1.ml[354,11198+4]..[354,11198+47]) ghost
                                    Pexp_ident "Array.set" (src/lr1.ml[354,11198+4]..[354,11198+47]) ghost
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[354,11198+4]..[354,11198+21])
                                        Pexp_ident "_has_eos_conflict" (src/lr1.ml[354,11198+4]..[354,11198+21])
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[354,11198+23]..[354,11198+24])
                                        Pexp_ident "i" (src/lr1.ml[354,11198+23]..[354,11198+24])
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[354,11198+29]..[354,11198+47])
                                        Pexp_construct "Some" (src/lr1.ml[354,11198+29]..[354,11198+33])
                                        Some
                                          expression (src/lr1.ml[354,11198+34]..[354,11198+47])
                                            Pexp_tuple
                                            [
                                              expression (src/lr1.ml[354,11198+35]..[354,11198+40])
                                                Pexp_ident "prods" (src/lr1.ml[354,11198+35]..[354,11198+40])
                                              expression (src/lr1.ml[354,11198+42]..[354,11198+46])
                                                Pexp_ident "toks" (src/lr1.ml[354,11198+42]..[354,11198+46])
                                            ]
                                  ]
                            None
                          expression (src/lr1.ml[359,11298+2]..[365,11520+5])
                            Pexp_ifthenelse
                            expression (src/lr1.ml[359,11298+5]..[359,11298+52])
                              Pexp_apply
                              expression (src/lr1.ml[359,11298+5]..[359,11298+8])
                                Pexp_ident "not" (src/lr1.ml[359,11298+5]..[359,11298+8])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[359,11298+9]..[359,11298+52])
                                    Pexp_apply
                                    expression (src/lr1.ml[359,11298+10]..[359,11298+30])
                                      Pexp_ident "TerminalSet.is_empty" (src/lr1.ml[359,11298+10]..[359,11298+30])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr1.ml[359,11298+31]..[359,11298+51])
                                          Pexp_apply
                                          expression (src/lr1.ml[359,11298+31]..[359,11298+51]) ghost
                                            Pexp_ident "Array.get" (src/lr1.ml[359,11298+31]..[359,11298+51]) ghost
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/lr1.ml[359,11298+31]..[359,11298+47])
                                                Pexp_ident "_conflict_tokens" (src/lr1.ml[359,11298+31]..[359,11298+47])
                                            <arg>
                                            Nolabel
                                              expression (src/lr1.ml[359,11298+49]..[359,11298+50])
                                                Pexp_ident "i" (src/lr1.ml[359,11298+49]..[359,11298+50])
                                          ]
                                    ]
                              ]
                            expression (src/lr1.ml[359,11298+58]..[365,11520+5])
                              Pexp_sequence
                              expression (src/lr1.ml[360,11362+4]..[360,11362+45])
                                Pexp_apply
                                expression (src/lr1.ml[360,11362+19]..[360,11362+21])
                                  Pexp_ident ":=" (src/lr1.ml[360,11362+19]..[360,11362+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[360,11362+4]..[360,11362+18])
                                      Pexp_ident "conflict_nodes" (src/lr1.ml[360,11362+4]..[360,11362+18])
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[360,11362+22]..[360,11362+45])
                                      Pexp_construct "::" (src/lr1.ml[360,11362+27]..[360,11362+29])
                                      Some
                                        expression (src/lr1.ml[360,11362+22]..[360,11362+45]) ghost
                                          Pexp_tuple
                                          [
                                            expression (src/lr1.ml[360,11362+22]..[360,11362+26])
                                              Pexp_ident "node" (src/lr1.ml[360,11362+22]..[360,11362+26])
                                            expression (src/lr1.ml[360,11362+30]..[360,11362+45])
                                              Pexp_apply
                                              expression (src/lr1.ml[360,11362+30]..[360,11362+31])
                                                Pexp_ident "!" (src/lr1.ml[360,11362+30]..[360,11362+31])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/lr1.ml[360,11362+31]..[360,11362+45])
                                                    Pexp_ident "conflict_nodes" (src/lr1.ml[360,11362+31]..[360,11362+45])
                                              ]
                                          ]
                                ]
                              expression (src/lr1.ml[361,11409+4]..[364,11495+24])
                                Pexp_sequence
                                expression (src/lr1.ml[361,11409+4]..[362,11439+23])
                                  Pexp_ifthenelse
                                  expression (src/lr1.ml[361,11409+7]..[361,11409+24])
                                    Pexp_apply
                                    expression (src/lr1.ml[361,11409+7]..[361,11409+8])
                                      Pexp_ident "!" (src/lr1.ml[361,11409+7]..[361,11409+8])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr1.ml[361,11409+8]..[361,11409+24])
                                          Pexp_ident "has_shift_reduce" (src/lr1.ml[361,11409+8]..[361,11409+24])
                                    ]
                                  expression (src/lr1.ml[362,11439+6]..[362,11439+23])
                                    Pexp_apply
                                    expression (src/lr1.ml[362,11439+6]..[362,11439+10])
                                      Pexp_ident "incr" (src/lr1.ml[362,11439+6]..[362,11439+10])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr1.ml[362,11439+11]..[362,11439+23])
                                          Pexp_ident "shift_reduce" (src/lr1.ml[362,11439+11]..[362,11439+23])
                                    ]
                                  None
                                expression (src/lr1.ml[363,11464+4]..[364,11495+24])
                                  Pexp_ifthenelse
                                  expression (src/lr1.ml[363,11464+7]..[363,11464+25])
                                    Pexp_apply
                                    expression (src/lr1.ml[363,11464+7]..[363,11464+8])
                                      Pexp_ident "!" (src/lr1.ml[363,11464+7]..[363,11464+8])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr1.ml[363,11464+8]..[363,11464+25])
                                          Pexp_ident "has_reduce_reduce" (src/lr1.ml[363,11464+8]..[363,11464+25])
                                    ]
                                  expression (src/lr1.ml[364,11495+6]..[364,11495+24])
                                    Pexp_apply
                                    expression (src/lr1.ml[364,11495+6]..[364,11495+10])
                                      Pexp_ident "incr" (src/lr1.ml[364,11495+6]..[364,11495+10])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr1.ml[364,11495+11]..[364,11495+24])
                                          Pexp_ident "reduce_reduce" (src/lr1.ml[364,11495+11]..[364,11495+24])
                                    ]
                                  None
                            None
    ]
  structure_item (src/lr1.ml[373,11741+0]..[377,11983+58])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[373,11741+4]..[373,11741+12])
          Ppat_var "traverse" (src/lr1.ml[373,11741+4]..[373,11741+12])
        expression (src/lr1.ml[373,11741+13]..[377,11983+58]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[373,11741+13]..[373,11741+32])
            Ppat_constraint
            pattern (src/lr1.ml[373,11741+14]..[373,11741+20])
              Ppat_var "source" (src/lr1.ml[373,11741+14]..[373,11741+20])
            core_type (src/lr1.ml[373,11741+23]..[373,11741+31])
              Ptyp_constr "Raw.node" (src/lr1.ml[373,11741+23]..[373,11741+31])
              []
          expression (src/lr1.ml[373,11741+33]..[377,11983+58]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/lr1.ml[373,11741+33]..[373,11741+40])
              Ppat_var "_symbol" (src/lr1.ml[373,11741+33]..[373,11741+40])
            expression (src/lr1.ml[373,11741+41]..[377,11983+58]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/lr1.ml[373,11741+41]..[373,11741+60])
                Ppat_constraint
                pattern (src/lr1.ml[373,11741+42]..[373,11741+48])
                  Ppat_var "target" (src/lr1.ml[373,11741+42]..[373,11741+48])
                core_type (src/lr1.ml[373,11741+51]..[373,11741+59])
                  Ptyp_constr "Raw.node" (src/lr1.ml[373,11741+51]..[373,11741+59])
                  []
              expression (src/lr1.ml[376,11952+2]..[377,11983+58])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/lr1.ml[376,11952+6]..[376,11952+7])
                      Ppat_var "j" (src/lr1.ml[376,11952+6]..[376,11952+7])
                    expression (src/lr1.ml[376,11952+10]..[376,11952+27])
                      Pexp_apply
                      expression (src/lr1.ml[376,11952+10]..[376,11952+20])
                        Pexp_ident "Raw.number" (src/lr1.ml[376,11952+10]..[376,11952+20])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[376,11952+21]..[376,11952+27])
                            Pexp_ident "target" (src/lr1.ml[376,11952+21]..[376,11952+27])
                      ]
                ]
                expression (src/lr1.ml[377,11983+2]..[377,11983+58])
                  Pexp_apply
                  expression (src/lr1.ml[377,11983+2]..[377,11983+58]) ghost
                    Pexp_ident "Array.set" (src/lr1.ml[377,11983+2]..[377,11983+58]) ghost
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[377,11983+2]..[377,11983+14])
                        Pexp_ident "predecessors" (src/lr1.ml[377,11983+2]..[377,11983+14])
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[377,11983+16]..[377,11983+17])
                        Pexp_ident "j" (src/lr1.ml[377,11983+16]..[377,11983+17])
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[377,11983+22]..[377,11983+58])
                        Pexp_construct "::" (src/lr1.ml[377,11983+39]..[377,11983+41])
                        Some
                          expression (src/lr1.ml[377,11983+22]..[377,11983+58]) ghost
                            Pexp_tuple
                            [
                              expression (src/lr1.ml[377,11983+22]..[377,11983+38])
                                Pexp_apply
                                expression (src/lr1.ml[377,11983+22]..[377,11983+31])
                                  Pexp_ident "transport" (src/lr1.ml[377,11983+22]..[377,11983+31])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[377,11983+32]..[377,11983+38])
                                      Pexp_ident "source" (src/lr1.ml[377,11983+32]..[377,11983+38])
                                ]
                              expression (src/lr1.ml[377,11983+42]..[377,11983+58])
                                Pexp_apply
                                expression (src/lr1.ml[377,11983+42]..[377,11983+58]) ghost
                                  Pexp_ident "Array.get" (src/lr1.ml[377,11983+42]..[377,11983+58]) ghost
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[377,11983+42]..[377,11983+54])
                                      Pexp_ident "predecessors" (src/lr1.ml[377,11983+42]..[377,11983+54])
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[377,11983+56]..[377,11983+57])
                                      Pexp_ident "j" (src/lr1.ml[377,11983+56]..[377,11983+57])
                                ]
                            ]
                  ]
    ]
  structure_item (src/lr1.ml[383,12188+0]..[389,12337+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[383,12188+4]..[383,12188+6])
          Ppat_construct "()" (src/lr1.ml[383,12188+4]..[383,12188+6])
          None
        expression (src/lr1.ml[384,12197+2]..[389,12337+4])
          Pexp_letmodule "D" (src/lr1.ml[384,12197+13]..[384,12197+14])
          module_expr (src/lr1.ml[384,12197+17]..[387,12277+5])
            Pmod_structure
            [
              structure_item (src/lr1.ml[385,12221+4]..[385,12221+27])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (src/lr1.ml[385,12221+8]..[385,12221+16])
                      Ppat_var "traverse" (src/lr1.ml[385,12221+8]..[385,12221+16])
                    expression (src/lr1.ml[385,12221+19]..[385,12221+27])
                      Pexp_ident "traverse" (src/lr1.ml[385,12221+19]..[385,12221+27])
                ]
              structure_item (src/lr1.ml[386,12249+4]..[386,12249+27])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (src/lr1.ml[386,12249+8]..[386,12249+16])
                      Ppat_var "discover" (src/lr1.ml[386,12249+8]..[386,12249+16])
                    expression (src/lr1.ml[386,12249+19]..[386,12249+27])
                      Pexp_ident "discover" (src/lr1.ml[386,12249+19]..[386,12249+27])
                ]
            ]
          expression (src/lr1.ml[388,12286+2]..[389,12337+4])
            Pexp_letmodule "R" (src/lr1.ml[388,12286+13]..[388,12286+14])
            module_expr (src/lr1.ml[388,12286+17]..[388,12286+47])
              Pmod_apply
              module_expr (src/lr1.ml[388,12286+17]..[388,12286+44])
                Pmod_apply
                module_expr (src/lr1.ml[388,12286+17]..[388,12286+41])
                  Pmod_apply
                  module_expr (src/lr1.ml[388,12286+17]..[388,12286+24])
                    Pmod_ident "DFS.Run" (src/lr1.ml[388,12286+17]..[388,12286+24])
                  module_expr (src/lr1.ml[388,12286+25]..[388,12286+40])
                    Pmod_ident "RawForwardEdges" (src/lr1.ml[388,12286+25]..[388,12286+40])
                module_expr (src/lr1.ml[388,12286+42]..[388,12286+43])
                  Pmod_ident "M" (src/lr1.ml[388,12286+42]..[388,12286+43])
              module_expr (src/lr1.ml[388,12286+45]..[388,12286+46])
                Pmod_ident "D" (src/lr1.ml[388,12286+45]..[388,12286+46])
            expression (src/lr1.ml[389,12337+2]..[389,12337+4])
              Pexp_construct "()" (src/lr1.ml[389,12337+2]..[389,12337+4])
              None
    ]
  structure_item (src/lr1.ml[391,12343+0]..[406,12816+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[391,12343+4]..[391,12343+6])
          Ppat_construct "()" (src/lr1.ml[391,12343+4]..[391,12343+6])
          None
        expression (src/lr1.ml[392,12352+2]..[406,12816+5])
          Pexp_sequence
          expression (src/lr1.ml[392,12352+2]..[400,12653+5])
            Pexp_ifthenelse
            expression (src/lr1.ml[392,12352+5]..[392,12352+25])
              Pexp_apply
              expression (src/lr1.ml[392,12352+22]..[392,12352+23])
                Pexp_ident "=" (src/lr1.ml[392,12352+22]..[392,12352+23])
              [
                <arg>
                Nolabel
                  expression (src/lr1.ml[392,12352+5]..[392,12352+21])
                    Pexp_apply
                    expression (src/lr1.ml[392,12352+5]..[392,12352+6])
                      Pexp_ident "!" (src/lr1.ml[392,12352+5]..[392,12352+6])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[392,12352+6]..[392,12352+21])
                          Pexp_ident "silently_solved" (src/lr1.ml[392,12352+6]..[392,12352+21])
                    ]
                <arg>
                Nolabel
                  expression (src/lr1.ml[392,12352+24]..[392,12352+25])
                    Pexp_constant PConst_int (1,None)
              ]
            expression (src/lr1.ml[393,12383+4]..[395,12484+5])
              Pexp_apply
              expression (src/lr1.ml[393,12383+4]..[393,12383+14])
                Pexp_ident "Error.logA" (src/lr1.ml[393,12383+4]..[393,12383+14])
              [
                <arg>
                Nolabel
                  expression (src/lr1.ml[393,12383+15]..[393,12383+16])
                    Pexp_constant PConst_int (1,None)
                <arg>
                Nolabel
                  expression (src/lr1.ml[393,12383+17]..[395,12484+5])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/lr1.ml[393,12383+22]..[393,12383+23])
                      Ppat_var "f" (src/lr1.ml[393,12383+22]..[393,12383+23])
                    expression (src/lr1.ml[394,12410+6]..[394,12410+73])
                      Pexp_apply
                      expression (src/lr1.ml[394,12410+6]..[394,12410+20])
                        Pexp_ident "Printf.fprintf" (src/lr1.ml[394,12410+6]..[394,12410+20])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[394,12410+21]..[394,12410+22])
                            Pexp_ident "f" (src/lr1.ml[394,12410+21]..[394,12410+22])
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[394,12410+23]..[394,12410+73])
                            Pexp_constant PConst_string("One shift/reduce conflict was silently solved.\n",(src/lr1.ml[394,12410+24]..[394,12410+72]),None)
                      ]
              ]
            Some
              expression (src/lr1.ml[396,12490+7]..[400,12653+5])
                Pexp_ifthenelse
                expression (src/lr1.ml[396,12490+10]..[396,12490+30])
                  Pexp_apply
                  expression (src/lr1.ml[396,12490+27]..[396,12490+28])
                    Pexp_ident ">" (src/lr1.ml[396,12490+27]..[396,12490+28])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[396,12490+10]..[396,12490+26])
                        Pexp_apply
                        expression (src/lr1.ml[396,12490+10]..[396,12490+11])
                          Pexp_ident "!" (src/lr1.ml[396,12490+10]..[396,12490+11])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[396,12490+11]..[396,12490+26])
                              Pexp_ident "silently_solved" (src/lr1.ml[396,12490+11]..[396,12490+26])
                        ]
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[396,12490+29]..[396,12490+30])
                        Pexp_constant PConst_int (1,None)
                  ]
                expression (src/lr1.ml[397,12526+4]..[400,12653+5])
                  Pexp_apply
                  expression (src/lr1.ml[397,12526+4]..[397,12526+14])
                    Pexp_ident "Error.logA" (src/lr1.ml[397,12526+4]..[397,12526+14])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[397,12526+15]..[397,12526+16])
                        Pexp_constant PConst_int (1,None)
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[397,12526+17]..[400,12653+5])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/lr1.ml[397,12526+22]..[397,12526+23])
                          Ppat_var "f" (src/lr1.ml[397,12526+22]..[397,12526+23])
                        expression (src/lr1.ml[398,12553+6]..[399,12628+24])
                          Pexp_apply
                          expression (src/lr1.ml[398,12553+6]..[398,12553+20])
                            Pexp_ident "Printf.fprintf" (src/lr1.ml[398,12553+6]..[398,12553+20])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[398,12553+21]..[398,12553+22])
                                Pexp_ident "f" (src/lr1.ml[398,12553+21]..[398,12553+22])
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[398,12553+23]..[398,12553+74])
                                Pexp_constant PConst_string("%d shift/reduce conflicts were silently solved.\n",(src/lr1.ml[398,12553+24]..[398,12553+73]),None)
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[399,12628+8]..[399,12628+24])
                                Pexp_apply
                                expression (src/lr1.ml[399,12628+8]..[399,12628+9])
                                  Pexp_ident "!" (src/lr1.ml[399,12628+8]..[399,12628+9])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[399,12628+9]..[399,12628+24])
                                      Pexp_ident "silently_solved" (src/lr1.ml[399,12628+9]..[399,12628+24])
                                ]
                          ]
                  ]
                None
          expression (src/lr1.ml[401,12660+2]..[406,12816+5])
            Pexp_ifthenelse
            expression (src/lr1.ml[401,12660+5]..[401,12660+15])
              Pexp_apply
              expression (src/lr1.ml[401,12660+8]..[401,12660+9])
                Pexp_ident "<" (src/lr1.ml[401,12660+8]..[401,12660+9])
              [
                <arg>
                Nolabel
                  expression (src/lr1.ml[401,12660+5]..[401,12660+7])
                    Pexp_apply
                    expression (src/lr1.ml[401,12660+5]..[401,12660+6])
                      Pexp_ident "!" (src/lr1.ml[401,12660+5]..[401,12660+6])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[401,12660+6]..[401,12660+7])
                          Pexp_ident "n" (src/lr1.ml[401,12660+6]..[401,12660+7])
                    ]
                <arg>
                Nolabel
                  expression (src/lr1.ml[401,12660+10]..[401,12660+15])
                    Pexp_ident "Raw.n" (src/lr1.ml[401,12660+10]..[401,12660+15])
              ]
            expression (src/lr1.ml[402,12681+4]..[406,12816+5])
              Pexp_apply
              expression (src/lr1.ml[402,12681+4]..[402,12681+14])
                Pexp_ident "Error.logA" (src/lr1.ml[402,12681+4]..[402,12681+14])
              [
                <arg>
                Nolabel
                  expression (src/lr1.ml[402,12681+15]..[402,12681+16])
                    Pexp_constant PConst_int (1,None)
                <arg>
                Nolabel
                  expression (src/lr1.ml[402,12681+17]..[406,12816+5])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/lr1.ml[402,12681+22]..[402,12681+23])
                      Ppat_var "f" (src/lr1.ml[402,12681+22]..[402,12681+23])
                    expression (src/lr1.ml[403,12708+6]..[405,12805+10])
                      Pexp_apply
                      expression (src/lr1.ml[403,12708+6]..[403,12708+20])
                        Pexp_ident "Printf.fprintf" (src/lr1.ml[403,12708+6]..[403,12708+20])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[403,12708+21]..[403,12708+22])
                            Pexp_ident "f" (src/lr1.ml[403,12708+21]..[403,12708+22])
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[404,12731+8]..[404,12731+73])
                            Pexp_constant PConst_string("Only %d states remain after resolving shift/reduce conflicts.\n",(src/lr1.ml[404,12731+9]..[404,12731+72]),None)
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[405,12805+8]..[405,12805+10])
                            Pexp_apply
                            expression (src/lr1.ml[405,12805+8]..[405,12805+9])
                              Pexp_ident "!" (src/lr1.ml[405,12805+8]..[405,12805+9])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[405,12805+9]..[405,12805+10])
                                  Pexp_ident "n" (src/lr1.ml[405,12805+9]..[405,12805+10])
                            ]
                      ]
              ]
            None
    ]
  structure_item (src/lr1.ml[408,12823+0]..[409,12832+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[408,12823+4]..[408,12823+6])
          Ppat_construct "()" (src/lr1.ml[408,12823+4]..[408,12823+6])
          None
        expression (src/lr1.ml[409,12832+2]..[409,12832+23])
          Pexp_apply
          expression (src/lr1.ml[409,12832+2]..[409,12832+21])
            Pexp_ident "Grammar.diagnostics" (src/lr1.ml[409,12832+2]..[409,12832+21])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[409,12832+21]..[409,12832+23])
                Pexp_construct "()" (src/lr1.ml[409,12832+21]..[409,12832+23])
                None
          ]
    ]
  structure_item (src/lr1.ml[418,13225+0]..[419,13233+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[418,13225+4]..[418,13225+5])
          Ppat_var "n" (src/lr1.ml[418,13225+4]..[418,13225+5])
        expression (src/lr1.ml[419,13233+2]..[419,13233+4])
          Pexp_apply
          expression (src/lr1.ml[419,13233+2]..[419,13233+3])
            Pexp_ident "!" (src/lr1.ml[419,13233+2]..[419,13233+3])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[419,13233+3]..[419,13233+4])
                Pexp_ident "n" (src/lr1.ml[419,13233+3]..[419,13233+4])
          ]
    ]
  structure_item (src/lr1.ml[421,13239+0]..[422,13260+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[421,13239+4]..[421,13239+18])
          Ppat_var "conflict_nodes" (src/lr1.ml[421,13239+4]..[421,13239+18])
        expression (src/lr1.ml[422,13260+2]..[422,13260+17])
          Pexp_apply
          expression (src/lr1.ml[422,13260+2]..[422,13260+3])
            Pexp_ident "!" (src/lr1.ml[422,13260+2]..[422,13260+3])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[422,13260+3]..[422,13260+17])
                Pexp_ident "conflict_nodes" (src/lr1.ml[422,13260+3]..[422,13260+17])
          ]
    ]
  structure_item (src/lr1.ml[431,13536+0]..[442,13862+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[431,13536+4]..[431,13536+7])
          Ppat_var "raw" (src/lr1.ml[431,13536+4]..[431,13536+7])
        core_type (src/lr1.ml[431,13536+10]..[431,13536+21])
          Ptyp_arrow
          Nolabel
          core_type (src/lr1.ml[431,13536+10]..[431,13536+14])
            Ptyp_constr "node" (src/lr1.ml[431,13536+10]..[431,13536+14])
            []
          core_type (src/lr1.ml[431,13536+18]..[431,13536+21])
            Ptyp_constr "int" (src/lr1.ml[431,13536+18]..[431,13536+21])
            []
        expression (src/lr1.ml[432,13560+2]..[442,13862+14])
          Pexp_let Nonrec
          [
            <def>
              pattern (src/lr1.ml[432,13560+6]..[432,13560+9])
                Ppat_var "raw" (src/lr1.ml[432,13560+6]..[432,13560+9])
              expression (src/lr1.ml[432,13560+12]..[432,13560+29])
                Pexp_apply
                expression (src/lr1.ml[432,13560+12]..[432,13560+22])
                  Pexp_ident "Array.make" (src/lr1.ml[432,13560+12]..[432,13560+22])
                [
                  <arg>
                  Nolabel
                    expression (src/lr1.ml[432,13560+23]..[432,13560+24])
                      Pexp_ident "n" (src/lr1.ml[432,13560+23]..[432,13560+24])
                  <arg>
                  Nolabel
                    expression (src/lr1.ml[432,13560+25]..[432,13560+29])
                      Pexp_constant PConst_int (-1,None)
                ]
          ]
          expression (src/lr1.ml[433,13605+2]..[442,13862+14])
            Pexp_sequence
            expression (src/lr1.ml[433,13605+2]..[439,13799+11])
              Pexp_apply
              expression (src/lr1.ml[433,13605+2]..[433,13605+13])
                Pexp_ident "Array.iteri" (src/lr1.ml[433,13605+2]..[433,13605+13])
              [
                <arg>
                Nolabel
                  expression (src/lr1.ml[433,13605+14]..[439,13799+3])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/lr1.ml[433,13605+19]..[433,13605+20])
                      Ppat_var "i" (src/lr1.ml[433,13605+19]..[433,13605+20])
                    expression (src/lr1.ml[433,13605+37]..[438,13791+7]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/lr1.ml[433,13605+37]..[433,13605+50])
                        Ppat_constraint
                        pattern (src/lr1.ml[433,13605+38]..[433,13605+42])
                          Ppat_var "node" (src/lr1.ml[433,13605+38]..[433,13605+42])
                        core_type (src/lr1.ml[433,13605+45]..[433,13605+49])
                          Ptyp_constr "node" (src/lr1.ml[433,13605+45]..[433,13605+49])
                          []
                      expression (src/lr1.ml[434,13659+4]..[438,13791+7])
                        Pexp_sequence
                        expression (src/lr1.ml[434,13659+4]..[434,13659+32])
                          Pexp_assert
                          expression (src/lr1.ml[434,13659+11]..[434,13659+32])
                            Pexp_apply
                            expression (src/lr1.ml[434,13659+19]..[434,13659+21])
                              Pexp_ident "&&" (src/lr1.ml[434,13659+19]..[434,13659+21])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[434,13659+12]..[434,13659+18])
                                  Pexp_apply
                                  expression (src/lr1.ml[434,13659+14]..[434,13659+16])
                                    Pexp_ident "<=" (src/lr1.ml[434,13659+14]..[434,13659+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[434,13659+12]..[434,13659+13])
                                        Pexp_constant PConst_int (0,None)
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[434,13659+17]..[434,13659+18])
                                        Pexp_ident "i" (src/lr1.ml[434,13659+17]..[434,13659+18])
                                  ]
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[434,13659+22]..[434,13659+31])
                                  Pexp_apply
                                  expression (src/lr1.ml[434,13659+24]..[434,13659+25])
                                    Pexp_ident "<" (src/lr1.ml[434,13659+24]..[434,13659+25])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[434,13659+22]..[434,13659+23])
                                        Pexp_ident "i" (src/lr1.ml[434,13659+22]..[434,13659+23])
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[434,13659+26]..[434,13659+31])
                                        Pexp_ident "Raw.n" (src/lr1.ml[434,13659+26]..[434,13659+31])
                                  ]
                            ]
                        expression (src/lr1.ml[435,13693+4]..[438,13791+7])
                          Pexp_ifthenelse
                          expression (src/lr1.ml[435,13693+7]..[435,13693+26])
                            Pexp_apply
                            expression (src/lr1.ml[435,13693+12]..[435,13693+14])
                              Pexp_ident "<>" (src/lr1.ml[435,13693+12]..[435,13693+14])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[435,13693+7]..[435,13693+11])
                                  Pexp_ident "node" (src/lr1.ml[435,13693+7]..[435,13693+11])
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[435,13693+15]..[435,13693+26])
                                  Pexp_ident "unreachable" (src/lr1.ml[435,13693+15]..[435,13693+26])
                            ]
                          expression (src/lr1.ml[435,13693+32]..[438,13791+7])
                            Pexp_sequence
                            expression (src/lr1.ml[436,13731+6]..[436,13731+36])
                              Pexp_assert
                              expression (src/lr1.ml[436,13731+13]..[436,13731+36])
                                Pexp_apply
                                expression (src/lr1.ml[436,13731+24]..[436,13731+26])
                                  Pexp_ident "&&" (src/lr1.ml[436,13731+24]..[436,13731+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[436,13731+14]..[436,13731+23])
                                      Pexp_apply
                                      expression (src/lr1.ml[436,13731+16]..[436,13731+18])
                                        Pexp_ident "<=" (src/lr1.ml[436,13731+16]..[436,13731+18])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr1.ml[436,13731+14]..[436,13731+15])
                                            Pexp_constant PConst_int (0,None)
                                        <arg>
                                        Nolabel
                                          expression (src/lr1.ml[436,13731+19]..[436,13731+23])
                                            Pexp_ident "node" (src/lr1.ml[436,13731+19]..[436,13731+23])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[436,13731+27]..[436,13731+35])
                                      Pexp_apply
                                      expression (src/lr1.ml[436,13731+32]..[436,13731+33])
                                        Pexp_ident "<" (src/lr1.ml[436,13731+32]..[436,13731+33])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr1.ml[436,13731+27]..[436,13731+31])
                                            Pexp_ident "node" (src/lr1.ml[436,13731+27]..[436,13731+31])
                                        <arg>
                                        Nolabel
                                          expression (src/lr1.ml[436,13731+34]..[436,13731+35])
                                            Pexp_ident "n" (src/lr1.ml[436,13731+34]..[436,13731+35])
                                      ]
                                ]
                            expression (src/lr1.ml[437,13769+6]..[437,13769+21])
                              Pexp_apply
                              expression (src/lr1.ml[437,13769+6]..[437,13769+21]) ghost
                                Pexp_ident "Array.set" (src/lr1.ml[437,13769+6]..[437,13769+21]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[437,13769+6]..[437,13769+9])
                                    Pexp_ident "raw" (src/lr1.ml[437,13769+6]..[437,13769+9])
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[437,13769+11]..[437,13769+15])
                                    Pexp_ident "node" (src/lr1.ml[437,13769+11]..[437,13769+15])
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[437,13769+20]..[437,13769+21])
                                    Pexp_ident "i" (src/lr1.ml[437,13769+20]..[437,13769+21])
                              ]
                          None
                <arg>
                Nolabel
                  expression (src/lr1.ml[439,13799+4]..[439,13799+11])
                    Pexp_ident "_number" (src/lr1.ml[439,13799+4]..[439,13799+11])
              ]
            expression (src/lr1.ml[440,13812+2]..[442,13862+14])
              Pexp_fun
              Nolabel
              None
              pattern (src/lr1.ml[440,13812+6]..[440,13812+10])
                Ppat_var "node" (src/lr1.ml[440,13812+6]..[440,13812+10])
              expression (src/lr1.ml[441,13826+4]..[442,13862+14])
                Pexp_sequence
                expression (src/lr1.ml[441,13826+4]..[441,13826+34])
                  Pexp_assert
                  expression (src/lr1.ml[441,13826+11]..[441,13826+34])
                    Pexp_apply
                    expression (src/lr1.ml[441,13826+22]..[441,13826+24])
                      Pexp_ident "&&" (src/lr1.ml[441,13826+22]..[441,13826+24])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[441,13826+12]..[441,13826+21])
                          Pexp_apply
                          expression (src/lr1.ml[441,13826+14]..[441,13826+16])
                            Pexp_ident "<=" (src/lr1.ml[441,13826+14]..[441,13826+16])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[441,13826+12]..[441,13826+13])
                                Pexp_constant PConst_int (0,None)
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[441,13826+17]..[441,13826+21])
                                Pexp_ident "node" (src/lr1.ml[441,13826+17]..[441,13826+21])
                          ]
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[441,13826+25]..[441,13826+33])
                          Pexp_apply
                          expression (src/lr1.ml[441,13826+30]..[441,13826+31])
                            Pexp_ident "<" (src/lr1.ml[441,13826+30]..[441,13826+31])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[441,13826+25]..[441,13826+29])
                                Pexp_ident "node" (src/lr1.ml[441,13826+25]..[441,13826+29])
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[441,13826+32]..[441,13826+33])
                                Pexp_ident "n" (src/lr1.ml[441,13826+32]..[441,13826+33])
                          ]
                    ]
                expression (src/lr1.ml[442,13862+4]..[442,13862+14])
                  Pexp_apply
                  expression (src/lr1.ml[442,13862+4]..[442,13862+14]) ghost
                    Pexp_ident "Array.get" (src/lr1.ml[442,13862+4]..[442,13862+14]) ghost
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[442,13862+4]..[442,13862+7])
                        Pexp_ident "raw" (src/lr1.ml[442,13862+4]..[442,13862+7])
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[442,13862+9]..[442,13862+13])
                        Pexp_ident "node" (src/lr1.ml[442,13862+9]..[442,13862+13])
                  ]
    ]
  structure_item (src/lr1.ml[448,14050+0]..[451,14172+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[448,14050+4]..[448,14050+15])
          Ppat_var "transitions" (src/lr1.ml[448,14050+4]..[448,14050+15])
        core_type (src/lr1.ml[448,14050+18]..[448,14050+40])
          Ptyp_constr "array" (src/lr1.ml[448,14050+35]..[448,14050+40])
          [
            core_type (src/lr1.ml[448,14050+18]..[448,14050+34])
              Ptyp_constr "SymbolMap.t" (src/lr1.ml[448,14050+23]..[448,14050+34])
              [
                core_type (src/lr1.ml[448,14050+18]..[448,14050+22])
                  Ptyp_constr "node" (src/lr1.ml[448,14050+18]..[448,14050+22])
                  []
              ]
          ]
        expression (src/lr1.ml[449,14093+2]..[451,14172+3])
          Pexp_apply
          expression (src/lr1.ml[449,14093+2]..[449,14093+12])
            Pexp_ident "Array.init" (src/lr1.ml[449,14093+2]..[449,14093+12])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[449,14093+13]..[449,14093+14])
                Pexp_ident "n" (src/lr1.ml[449,14093+13]..[449,14093+14])
            <arg>
            Nolabel
              expression (src/lr1.ml[449,14093+15]..[451,14172+3])
                Pexp_fun
                Nolabel
                None
                pattern (src/lr1.ml[449,14093+20]..[449,14093+24])
                  Ppat_var "node" (src/lr1.ml[449,14093+20]..[449,14093+24])
                expression (src/lr1.ml[450,14121+4]..[450,14121+50])
                  Pexp_apply
                  expression (src/lr1.ml[450,14121+4]..[450,14121+17])
                    Pexp_ident "SymbolMap.map" (src/lr1.ml[450,14121+4]..[450,14121+17])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[450,14121+18]..[450,14121+27])
                        Pexp_ident "transport" (src/lr1.ml[450,14121+18]..[450,14121+27])
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[450,14121+28]..[450,14121+50])
                        Pexp_apply
                        expression (src/lr1.ml[450,14121+28]..[450,14121+50]) ghost
                          Pexp_ident "Array.get" (src/lr1.ml[450,14121+28]..[450,14121+50]) ghost
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[450,14121+28]..[450,14121+39])
                              Pexp_ident "transitions" (src/lr1.ml[450,14121+28]..[450,14121+39])
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[450,14121+41]..[450,14121+49])
                              Pexp_apply
                              expression (src/lr1.ml[450,14121+41]..[450,14121+44])
                                Pexp_ident "raw" (src/lr1.ml[450,14121+41]..[450,14121+44])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[450,14121+45]..[450,14121+49])
                                    Pexp_ident "node" (src/lr1.ml[450,14121+45]..[450,14121+49])
                              ]
                        ]
                  ]
          ]
    ]
  structure_item (src/lr1.ml[459,14325+0]..[460,14334+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[459,14325+4]..[459,14325+6])
          Ppat_construct "()" (src/lr1.ml[459,14325+4]..[459,14325+6])
          None
        expression (src/lr1.ml[460,14334+2]..[460,14334+49])
          Pexp_apply
          expression (src/lr1.ml[460,14334+2]..[460,14334+11])
            Pexp_ident "Time.tick" (src/lr1.ml[460,14334+2]..[460,14334+11])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[460,14334+12]..[460,14334+49])
                Pexp_constant PConst_string("Construction of the LR(1) automaton",(src/lr1.ml[460,14334+13]..[460,14334+48]),None)
          ]
    ]
  structure_item (src/lr1.ml[466,14485+0]..[467,14503+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[466,14485+4]..[466,14485+10])
          Ppat_var "number" (src/lr1.ml[466,14485+4]..[466,14485+10])
        expression (src/lr1.ml[466,14485+11]..[467,14503+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[466,14485+11]..[466,14485+15])
            Ppat_var "node" (src/lr1.ml[466,14485+11]..[466,14485+15])
          expression (src/lr1.ml[467,14503+2]..[467,14503+6])
            Pexp_ident "node" (src/lr1.ml[467,14503+2]..[467,14503+6])
    ]
  structure_item (src/lr1.ml[469,14511+0]..[470,14528+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[469,14511+4]..[469,14511+9])
          Ppat_var "print" (src/lr1.ml[469,14511+4]..[469,14511+9])
        expression (src/lr1.ml[469,14511+10]..[470,14528+35]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[469,14511+10]..[469,14511+14])
            Ppat_var "node" (src/lr1.ml[469,14511+10]..[469,14511+14])
          expression (src/lr1.ml[470,14528+2]..[470,14528+35])
            Pexp_apply
            expression (src/lr1.ml[470,14528+2]..[470,14528+16])
              Pexp_ident "Printf.sprintf" (src/lr1.ml[470,14528+2]..[470,14528+16])
            [
              <arg>
              Nolabel
                expression (src/lr1.ml[470,14528+17]..[470,14528+21])
                  Pexp_constant PConst_string("%d",(src/lr1.ml[470,14528+18]..[470,14528+20]),None)
              <arg>
              Nolabel
                expression (src/lr1.ml[470,14528+22]..[470,14528+35])
                  Pexp_apply
                  expression (src/lr1.ml[470,14528+23]..[470,14528+29])
                    Pexp_ident "number" (src/lr1.ml[470,14528+23]..[470,14528+29])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[470,14528+30]..[470,14528+34])
                        Pexp_ident "node" (src/lr1.ml[470,14528+30]..[470,14528+34])
                  ]
            ]
    ]
  structure_item (src/lr1.ml[472,14565+0]..[473,14577+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[472,14565+4]..[472,14565+9])
          Ppat_var "entry" (src/lr1.ml[472,14565+4]..[472,14565+9])
        expression (src/lr1.ml[473,14577+2]..[473,14577+39])
          Pexp_apply
          expression (src/lr1.ml[473,14577+2]..[473,14577+19])
            Pexp_ident "ProductionMap.map" (src/lr1.ml[473,14577+2]..[473,14577+19])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[473,14577+20]..[473,14577+29])
                Pexp_ident "transport" (src/lr1.ml[473,14577+20]..[473,14577+29])
            <arg>
            Nolabel
              expression (src/lr1.ml[473,14577+30]..[473,14577+39])
                Pexp_ident "Raw.entry" (src/lr1.ml[473,14577+30]..[473,14577+39])
          ]
    ]
  structure_item (src/lr1.ml[475,14618+0]..[476,14635+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[475,14618+4]..[475,14618+9])
          Ppat_var "state" (src/lr1.ml[475,14618+4]..[475,14618+9])
        expression (src/lr1.ml[475,14618+10]..[476,14635+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[475,14618+10]..[475,14618+14])
            Ppat_var "node" (src/lr1.ml[475,14618+10]..[475,14618+14])
          expression (src/lr1.ml[476,14635+2]..[476,14635+33])
            Pexp_apply
            expression (src/lr1.ml[476,14635+2]..[476,14635+11])
              Pexp_ident "Raw.state" (src/lr1.ml[476,14635+2]..[476,14635+11])
            [
              <arg>
              Nolabel
                expression (src/lr1.ml[476,14635+12]..[476,14635+33])
                  Pexp_apply
                  expression (src/lr1.ml[476,14635+13]..[476,14635+21])
                    Pexp_ident "Raw.node" (src/lr1.ml[476,14635+13]..[476,14635+21])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[476,14635+22]..[476,14635+32])
                        Pexp_apply
                        expression (src/lr1.ml[476,14635+23]..[476,14635+26])
                          Pexp_ident "raw" (src/lr1.ml[476,14635+23]..[476,14635+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[476,14635+27]..[476,14635+31])
                              Pexp_ident "node" (src/lr1.ml[476,14635+27]..[476,14635+31])
                        ]
                  ]
            ]
    ]
  structure_item (src/lr1.ml[478,14670+0]..[480,14727+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[478,14670+4]..[478,14670+15])
          Ppat_var "transitions" (src/lr1.ml[478,14670+4]..[478,14670+15])
        expression (src/lr1.ml[478,14670+16]..[480,14727+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[478,14670+16]..[478,14670+20])
            Ppat_var "node" (src/lr1.ml[478,14670+16]..[478,14670+20])
          expression (src/lr1.ml[479,14693+2]..[480,14727+20])
            Pexp_sequence
            expression (src/lr1.ml[479,14693+2]..[479,14693+32])
              Pexp_assert
              expression (src/lr1.ml[479,14693+9]..[479,14693+32])
                Pexp_apply
                expression (src/lr1.ml[479,14693+20]..[479,14693+22])
                  Pexp_ident "&&" (src/lr1.ml[479,14693+20]..[479,14693+22])
                [
                  <arg>
                  Nolabel
                    expression (src/lr1.ml[479,14693+10]..[479,14693+19])
                      Pexp_apply
                      expression (src/lr1.ml[479,14693+12]..[479,14693+14])
                        Pexp_ident "<=" (src/lr1.ml[479,14693+12]..[479,14693+14])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[479,14693+10]..[479,14693+11])
                            Pexp_constant PConst_int (0,None)
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[479,14693+15]..[479,14693+19])
                            Pexp_ident "node" (src/lr1.ml[479,14693+15]..[479,14693+19])
                      ]
                  <arg>
                  Nolabel
                    expression (src/lr1.ml[479,14693+23]..[479,14693+31])
                      Pexp_apply
                      expression (src/lr1.ml[479,14693+28]..[479,14693+29])
                        Pexp_ident "<" (src/lr1.ml[479,14693+28]..[479,14693+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[479,14693+23]..[479,14693+27])
                            Pexp_ident "node" (src/lr1.ml[479,14693+23]..[479,14693+27])
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[479,14693+30]..[479,14693+31])
                            Pexp_ident "n" (src/lr1.ml[479,14693+30]..[479,14693+31])
                      ]
                ]
            expression (src/lr1.ml[480,14727+2]..[480,14727+20])
              Pexp_apply
              expression (src/lr1.ml[480,14727+2]..[480,14727+20]) ghost
                Pexp_ident "Array.get" (src/lr1.ml[480,14727+2]..[480,14727+20]) ghost
              [
                <arg>
                Nolabel
                  expression (src/lr1.ml[480,14727+2]..[480,14727+13])
                    Pexp_ident "transitions" (src/lr1.ml[480,14727+2]..[480,14727+13])
                <arg>
                Nolabel
                  expression (src/lr1.ml[480,14727+15]..[480,14727+19])
                    Pexp_ident "node" (src/lr1.ml[480,14727+15]..[480,14727+19])
              ]
    ]
  structure_item (src/lr1.ml[482,14749+0]..[483,14781+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[482,14749+4]..[482,14749+18])
          Ppat_var "set_reductions" (src/lr1.ml[482,14749+4]..[482,14749+18])
        expression (src/lr1.ml[482,14749+19]..[483,14781+32]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[482,14749+19]..[482,14749+23])
            Ppat_var "node" (src/lr1.ml[482,14749+19]..[482,14749+23])
          expression (src/lr1.ml[482,14749+24]..[483,14781+32]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/lr1.ml[482,14749+24]..[482,14749+29])
              Ppat_var "table" (src/lr1.ml[482,14749+24]..[482,14749+29])
            expression (src/lr1.ml[483,14781+2]..[483,14781+32])
              Pexp_apply
              expression (src/lr1.ml[483,14781+2]..[483,14781+32]) ghost
                Pexp_ident "Array.set" (src/lr1.ml[483,14781+2]..[483,14781+32]) ghost
              [
                <arg>
                Nolabel
                  expression (src/lr1.ml[483,14781+2]..[483,14781+12])
                    Pexp_ident "reductions" (src/lr1.ml[483,14781+2]..[483,14781+12])
                <arg>
                Nolabel
                  expression (src/lr1.ml[483,14781+14]..[483,14781+22])
                    Pexp_apply
                    expression (src/lr1.ml[483,14781+14]..[483,14781+17])
                      Pexp_ident "raw" (src/lr1.ml[483,14781+14]..[483,14781+17])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[483,14781+18]..[483,14781+22])
                          Pexp_ident "node" (src/lr1.ml[483,14781+18]..[483,14781+22])
                    ]
                <arg>
                Nolabel
                  expression (src/lr1.ml[483,14781+27]..[483,14781+32])
                    Pexp_ident "table" (src/lr1.ml[483,14781+27]..[483,14781+32])
              ]
    ]
  structure_item (src/lr1.ml[485,14815+0]..[486,14837+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[485,14815+4]..[485,14815+14])
          Ppat_var "reductions" (src/lr1.ml[485,14815+4]..[485,14815+14])
        expression (src/lr1.ml[485,14815+15]..[486,14837+23]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[485,14815+15]..[485,14815+19])
            Ppat_var "node" (src/lr1.ml[485,14815+15]..[485,14815+19])
          expression (src/lr1.ml[486,14837+2]..[486,14837+23])
            Pexp_apply
            expression (src/lr1.ml[486,14837+2]..[486,14837+23]) ghost
              Pexp_ident "Array.get" (src/lr1.ml[486,14837+2]..[486,14837+23]) ghost
            [
              <arg>
              Nolabel
                expression (src/lr1.ml[486,14837+2]..[486,14837+12])
                  Pexp_ident "reductions" (src/lr1.ml[486,14837+2]..[486,14837+12])
              <arg>
              Nolabel
                expression (src/lr1.ml[486,14837+14]..[486,14837+22])
                  Pexp_apply
                  expression (src/lr1.ml[486,14837+14]..[486,14837+17])
                    Pexp_ident "raw" (src/lr1.ml[486,14837+14]..[486,14837+17])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[486,14837+18]..[486,14837+22])
                        Pexp_ident "node" (src/lr1.ml[486,14837+18]..[486,14837+22])
                  ]
            ]
    ]
  structure_item (src/lr1.ml[488,14862+0]..[489,14886+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[488,14862+4]..[488,14862+16])
          Ppat_var "predecessors" (src/lr1.ml[488,14862+4]..[488,14862+16])
        expression (src/lr1.ml[488,14862+17]..[489,14886+25]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[488,14862+17]..[488,14862+21])
            Ppat_var "node" (src/lr1.ml[488,14862+17]..[488,14862+21])
          expression (src/lr1.ml[489,14886+2]..[489,14886+25])
            Pexp_apply
            expression (src/lr1.ml[489,14886+2]..[489,14886+25]) ghost
              Pexp_ident "Array.get" (src/lr1.ml[489,14886+2]..[489,14886+25]) ghost
            [
              <arg>
              Nolabel
                expression (src/lr1.ml[489,14886+2]..[489,14886+14])
                  Pexp_ident "predecessors" (src/lr1.ml[489,14886+2]..[489,14886+14])
              <arg>
              Nolabel
                expression (src/lr1.ml[489,14886+16]..[489,14886+24])
                  Pexp_apply
                  expression (src/lr1.ml[489,14886+16]..[489,14886+19])
                    Pexp_ident "raw" (src/lr1.ml[489,14886+16]..[489,14886+19])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[489,14886+20]..[489,14886+24])
                        Pexp_ident "node" (src/lr1.ml[489,14886+20]..[489,14886+24])
                  ]
            ]
    ]
  structure_item (src/lr1.ml[491,14913+0]..[492,14940+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[491,14913+4]..[491,14913+19])
          Ppat_var "conflict_tokens" (src/lr1.ml[491,14913+4]..[491,14913+19])
        expression (src/lr1.ml[491,14913+20]..[492,14940+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[491,14913+20]..[491,14913+24])
            Ppat_var "node" (src/lr1.ml[491,14913+20]..[491,14913+24])
          expression (src/lr1.ml[492,14940+2]..[492,14940+29])
            Pexp_apply
            expression (src/lr1.ml[492,14940+2]..[492,14940+29]) ghost
              Pexp_ident "Array.get" (src/lr1.ml[492,14940+2]..[492,14940+29]) ghost
            [
              <arg>
              Nolabel
                expression (src/lr1.ml[492,14940+2]..[492,14940+18])
                  Pexp_ident "_conflict_tokens" (src/lr1.ml[492,14940+2]..[492,14940+18])
              <arg>
              Nolabel
                expression (src/lr1.ml[492,14940+20]..[492,14940+28])
                  Pexp_apply
                  expression (src/lr1.ml[492,14940+20]..[492,14940+23])
                    Pexp_ident "raw" (src/lr1.ml[492,14940+20]..[492,14940+23])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[492,14940+24]..[492,14940+28])
                        Pexp_ident "node" (src/lr1.ml[492,14940+24]..[492,14940+28])
                  ]
            ]
    ]
  structure_item (src/lr1.ml[494,14971+0]..[497,15048+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[494,14971+4]..[494,14971+13])
          Ppat_var "conflicts" (src/lr1.ml[494,14971+4]..[494,14971+13])
        expression (src/lr1.ml[494,14971+14]..[497,15048+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[494,14971+14]..[494,14971+15])
            Ppat_var "f" (src/lr1.ml[494,14971+14]..[494,14971+15])
          expression (src/lr1.ml[495,14989+2]..[497,15048+18])
            Pexp_apply
            expression (src/lr1.ml[495,14989+2]..[495,14989+11])
              Pexp_ident "List.iter" (src/lr1.ml[495,14989+2]..[495,14989+11])
            [
              <arg>
              Nolabel
                expression (src/lr1.ml[495,14989+12]..[497,15048+3])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/lr1.ml[495,14989+17]..[495,14989+21])
                    Ppat_var "node" (src/lr1.ml[495,14989+17]..[495,14989+21])
                  expression (src/lr1.ml[496,15014+4]..[496,15014+33])
                    Pexp_apply
                    expression (src/lr1.ml[496,15014+4]..[496,15014+5])
                      Pexp_ident "f" (src/lr1.ml[496,15014+4]..[496,15014+5])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[496,15014+6]..[496,15014+28])
                          Pexp_apply
                          expression (src/lr1.ml[496,15014+7]..[496,15014+22])
                            Pexp_ident "conflict_tokens" (src/lr1.ml[496,15014+7]..[496,15014+22])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[496,15014+23]..[496,15014+27])
                                Pexp_ident "node" (src/lr1.ml[496,15014+23]..[496,15014+27])
                          ]
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[496,15014+29]..[496,15014+33])
                          Pexp_ident "node" (src/lr1.ml[496,15014+29]..[496,15014+33])
                    ]
              <arg>
              Nolabel
                expression (src/lr1.ml[497,15048+4]..[497,15048+18])
                  Pexp_ident "conflict_nodes" (src/lr1.ml[497,15048+4]..[497,15048+18])
            ]
    ]
  structure_item (src/lr1.ml[499,15068+0]..[500,15104+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[499,15068+4]..[499,15068+28])
          Ppat_var "forbid_default_reduction" (src/lr1.ml[499,15068+4]..[499,15068+28])
        expression (src/lr1.ml[499,15068+29]..[500,15104+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[499,15068+29]..[499,15068+33])
            Ppat_var "node" (src/lr1.ml[499,15068+29]..[499,15068+33])
          expression (src/lr1.ml[500,15104+2]..[500,15104+37])
            Pexp_apply
            expression (src/lr1.ml[500,15104+2]..[500,15104+37]) ghost
              Pexp_ident "Array.get" (src/lr1.ml[500,15104+2]..[500,15104+37]) ghost
            [
              <arg>
              Nolabel
                expression (src/lr1.ml[500,15104+2]..[500,15104+26])
                  Pexp_ident "forbid_default_reduction" (src/lr1.ml[500,15104+2]..[500,15104+26])
              <arg>
              Nolabel
                expression (src/lr1.ml[500,15104+28]..[500,15104+36])
                  Pexp_apply
                  expression (src/lr1.ml[500,15104+28]..[500,15104+31])
                    Pexp_ident "raw" (src/lr1.ml[500,15104+28]..[500,15104+31])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[500,15104+32]..[500,15104+36])
                        Pexp_ident "node" (src/lr1.ml[500,15104+32]..[500,15104+36])
                  ]
            ]
    ]
  structure_item (src/lr1.ml[502,15143+0]..[503,15171+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[502,15143+4]..[502,15143+20])
          Ppat_var "has_eos_conflict" (src/lr1.ml[502,15143+4]..[502,15143+20])
        expression (src/lr1.ml[502,15143+21]..[503,15171+30]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[502,15143+21]..[502,15143+25])
            Ppat_var "node" (src/lr1.ml[502,15143+21]..[502,15143+25])
          expression (src/lr1.ml[503,15171+2]..[503,15171+30])
            Pexp_apply
            expression (src/lr1.ml[503,15171+2]..[503,15171+30]) ghost
              Pexp_ident "Array.get" (src/lr1.ml[503,15171+2]..[503,15171+30]) ghost
            [
              <arg>
              Nolabel
                expression (src/lr1.ml[503,15171+2]..[503,15171+19])
                  Pexp_ident "_has_eos_conflict" (src/lr1.ml[503,15171+2]..[503,15171+19])
              <arg>
              Nolabel
                expression (src/lr1.ml[503,15171+21]..[503,15171+29])
                  Pexp_apply
                  expression (src/lr1.ml[503,15171+21]..[503,15171+24])
                    Pexp_ident "raw" (src/lr1.ml[503,15171+21]..[503,15171+24])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[503,15171+25]..[503,15171+29])
                        Pexp_ident "node" (src/lr1.ml[503,15171+25]..[503,15171+29])
                  ]
            ]
    ]
  structure_item (src/lr1.ml[510,15436+0]..[511,15463+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[510,15436+4]..[510,15436+19])
          Ppat_var "incoming_symbol" (src/lr1.ml[510,15436+4]..[510,15436+19])
        expression (src/lr1.ml[510,15436+20]..[511,15463+45]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[510,15436+20]..[510,15436+24])
            Ppat_var "node" (src/lr1.ml[510,15436+20]..[510,15436+24])
          expression (src/lr1.ml[511,15463+2]..[511,15463+45])
            Pexp_apply
            expression (src/lr1.ml[511,15463+2]..[511,15463+21])
              Pexp_ident "Lr0.incoming_symbol" (src/lr1.ml[511,15463+2]..[511,15463+21])
            [
              <arg>
              Nolabel
                expression (src/lr1.ml[511,15463+22]..[511,15463+45])
                  Pexp_apply
                  expression (src/lr1.ml[511,15463+23]..[511,15463+31])
                    Pexp_ident "Lr0.core" (src/lr1.ml[511,15463+23]..[511,15463+31])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[511,15463+32]..[511,15463+44])
                        Pexp_apply
                        expression (src/lr1.ml[511,15463+33]..[511,15463+38])
                          Pexp_ident "state" (src/lr1.ml[511,15463+33]..[511,15463+38])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[511,15463+39]..[511,15463+43])
                              Pexp_ident "node" (src/lr1.ml[511,15463+39]..[511,15463+43])
                        ]
                  ]
            ]
    ]
  structure_item (src/lr1.ml[513,15510+0]..[518,15601+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[513,15510+4]..[513,15510+12])
          Ppat_var "is_start" (src/lr1.ml[513,15510+4]..[513,15510+12])
        expression (src/lr1.ml[513,15510+13]..[518,15601+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[513,15510+13]..[513,15510+17])
            Ppat_var "node" (src/lr1.ml[513,15510+13]..[513,15510+17])
          expression (src/lr1.ml[514,15530+2]..[518,15601+11])
            Pexp_match
            expression (src/lr1.ml[514,15530+8]..[514,15530+28])
              Pexp_apply
              expression (src/lr1.ml[514,15530+8]..[514,15530+23])
                Pexp_ident "incoming_symbol" (src/lr1.ml[514,15530+8]..[514,15530+23])
              [
                <arg>
                Nolabel
                  expression (src/lr1.ml[514,15530+24]..[514,15530+28])
                    Pexp_ident "node" (src/lr1.ml[514,15530+24]..[514,15530+28])
              ]
            [
              <case>
                pattern (src/lr1.ml[515,15564+4]..[515,15564+8])
                  Ppat_construct "None" (src/lr1.ml[515,15564+4]..[515,15564+8])
                  None
                expression (src/lr1.ml[516,15576+6]..[516,15576+10])
                  Pexp_construct "true" (src/lr1.ml[516,15576+6]..[516,15576+10])
                  None
              <case>
                pattern (src/lr1.ml[517,15587+4]..[517,15587+10])
                  Ppat_construct "Some" (src/lr1.ml[517,15587+4]..[517,15587+8])
                  Some
                    []
                    pattern (src/lr1.ml[517,15587+9]..[517,15587+10])
                      Ppat_any
                expression (src/lr1.ml[518,15601+6]..[518,15601+11])
                  Pexp_construct "false" (src/lr1.ml[518,15601+6]..[518,15601+11])
                  None
            ]
    ]
  structure_item (src/lr1.ml[524,15716+0]..[529,15872+3])
    Pstr_module
    "ForwardEdges" (src/lr1.ml[524,15716+7]..[524,15716+19])
      module_expr (src/lr1.ml[524,15716+22]..[529,15872+3])
        Pmod_structure
        [
          structure_item (src/lr1.ml[525,15745+2]..[525,15745+25])
            Pstr_type Nonrec
            [
              type_declaration "node" (src/lr1.ml[525,15745+14]..[525,15745+18]) (src/lr1.ml[525,15745+2]..[525,15745+25])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/lr1.ml[525,15745+21]..[525,15745+25])
                      Ptyp_constr "node" (src/lr1.ml[525,15745+21]..[525,15745+25])
                      []
            ]
          structure_item (src/lr1.ml[526,15771+2]..[526,15771+23])
            Pstr_type Rec
            [
              type_declaration "label" (src/lr1.ml[526,15771+7]..[526,15771+12]) (src/lr1.ml[526,15771+2]..[526,15771+23])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/lr1.ml[526,15771+15]..[526,15771+23])
                      Ptyp_constr "Symbol.t" (src/lr1.ml[526,15771+15]..[526,15771+23])
                      []
            ]
          structure_item (src/lr1.ml[527,15795+2]..[528,15832+39])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/lr1.ml[527,15795+6]..[527,15795+27])
                  Ppat_var "foreach_outgoing_edge" (src/lr1.ml[527,15795+6]..[527,15795+27])
                expression (src/lr1.ml[527,15795+28]..[528,15832+39]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/lr1.ml[527,15795+28]..[527,15795+32])
                    Ppat_var "node" (src/lr1.ml[527,15795+28]..[527,15795+32])
                  expression (src/lr1.ml[527,15795+33]..[528,15832+39]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/lr1.ml[527,15795+33]..[527,15795+34])
                      Ppat_var "f" (src/lr1.ml[527,15795+33]..[527,15795+34])
                    expression (src/lr1.ml[528,15832+4]..[528,15832+39])
                      Pexp_apply
                      expression (src/lr1.ml[528,15832+4]..[528,15832+18])
                        Pexp_ident "SymbolMap.iter" (src/lr1.ml[528,15832+4]..[528,15832+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[528,15832+19]..[528,15832+20])
                            Pexp_ident "f" (src/lr1.ml[528,15832+19]..[528,15832+20])
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[528,15832+21]..[528,15832+39])
                            Pexp_apply
                            expression (src/lr1.ml[528,15832+22]..[528,15832+33])
                              Pexp_ident "transitions" (src/lr1.ml[528,15832+22]..[528,15832+33])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[528,15832+34]..[528,15832+38])
                                  Pexp_ident "node" (src/lr1.ml[528,15832+34]..[528,15832+38])
                            ]
                      ]
            ]
        ]
  structure_item (src/lr1.ml[531,15877+0]..[536,16102+3])
    Pstr_module
    "BackwardEdges" (src/lr1.ml[531,15877+7]..[531,15877+20])
      module_expr (src/lr1.ml[531,15877+23]..[536,16102+3])
        Pmod_structure
        [
          structure_item (src/lr1.ml[532,15907+2]..[532,15907+25])
            Pstr_type Nonrec
            [
              type_declaration "node" (src/lr1.ml[532,15907+14]..[532,15907+18]) (src/lr1.ml[532,15907+2]..[532,15907+25])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/lr1.ml[532,15907+21]..[532,15907+25])
                      Ptyp_constr "node" (src/lr1.ml[532,15907+21]..[532,15907+25])
                      []
            ]
          structure_item (src/lr1.ml[533,15933+2]..[533,15933+19])
            Pstr_type Rec
            [
              type_declaration "label" (src/lr1.ml[533,15933+7]..[533,15933+12]) (src/lr1.ml[533,15933+2]..[533,15933+19])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/lr1.ml[533,15933+15]..[533,15933+19])
                      Ptyp_constr "unit" (src/lr1.ml[533,15933+15]..[533,15933+19])
                      []
            ]
          structure_item (src/lr1.ml[534,16007+2]..[535,16044+57])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/lr1.ml[534,16007+6]..[534,16007+27])
                  Ppat_var "foreach_outgoing_edge" (src/lr1.ml[534,16007+6]..[534,16007+27])
                expression (src/lr1.ml[534,16007+28]..[535,16044+57]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/lr1.ml[534,16007+28]..[534,16007+32])
                    Ppat_var "node" (src/lr1.ml[534,16007+28]..[534,16007+32])
                  expression (src/lr1.ml[534,16007+33]..[535,16044+57]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/lr1.ml[534,16007+33]..[534,16007+34])
                      Ppat_var "f" (src/lr1.ml[534,16007+33]..[534,16007+34])
                    expression (src/lr1.ml[535,16044+4]..[535,16044+57])
                      Pexp_apply
                      expression (src/lr1.ml[535,16044+4]..[535,16044+13])
                        Pexp_ident "List.iter" (src/lr1.ml[535,16044+4]..[535,16044+13])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[535,16044+14]..[535,16044+37])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/lr1.ml[535,16044+19]..[535,16044+23])
                              Ppat_var "node" (src/lr1.ml[535,16044+19]..[535,16044+23])
                            expression (src/lr1.ml[535,16044+27]..[535,16044+36])
                              Pexp_apply
                              expression (src/lr1.ml[535,16044+27]..[535,16044+28])
                                Pexp_ident "f" (src/lr1.ml[535,16044+27]..[535,16044+28])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[535,16044+29]..[535,16044+31])
                                    Pexp_construct "()" (src/lr1.ml[535,16044+29]..[535,16044+31])
                                    None
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[535,16044+32]..[535,16044+36])
                                    Pexp_ident "node" (src/lr1.ml[535,16044+32]..[535,16044+36])
                              ]
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[535,16044+38]..[535,16044+57])
                            Pexp_apply
                            expression (src/lr1.ml[535,16044+39]..[535,16044+51])
                              Pexp_ident "predecessors" (src/lr1.ml[535,16044+39]..[535,16044+51])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[535,16044+52]..[535,16044+56])
                                  Pexp_ident "node" (src/lr1.ml[535,16044+52]..[535,16044+56])
                            ]
                      ]
            ]
        ]
  structure_item (src/lr1.ml[547,16500+0]..[554,16737+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[547,16500+4]..[547,16500+20])
          Ppat_var "is_start_or_exit" (src/lr1.ml[547,16500+4]..[547,16500+20])
        expression (src/lr1.ml[547,16500+21]..[554,16737+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[547,16500+21]..[547,16500+25])
            Ppat_var "node" (src/lr1.ml[547,16500+21]..[547,16500+25])
          expression (src/lr1.ml[548,16528+2]..[554,16737+8])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/lr1.ml[548,16528+6]..[548,16528+11])
                  Ppat_var "items" (src/lr1.ml[548,16528+6]..[548,16528+11])
                expression (src/lr1.ml[548,16528+14]..[548,16528+47])
                  Pexp_apply
                  expression (src/lr1.ml[548,16528+14]..[548,16528+23])
                    Pexp_ident "Lr0.items" (src/lr1.ml[548,16528+14]..[548,16528+23])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[548,16528+24]..[548,16528+47])
                        Pexp_apply
                        expression (src/lr1.ml[548,16528+25]..[548,16528+33])
                          Pexp_ident "Lr0.core" (src/lr1.ml[548,16528+25]..[548,16528+33])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[548,16528+34]..[548,16528+46])
                              Pexp_apply
                              expression (src/lr1.ml[548,16528+35]..[548,16528+40])
                                Pexp_ident "state" (src/lr1.ml[548,16528+35]..[548,16528+40])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[548,16528+41]..[548,16528+45])
                                    Pexp_ident "node" (src/lr1.ml[548,16528+41]..[548,16528+45])
                              ]
                        ]
                  ]
            ]
            expression (src/lr1.ml[549,16579+2]..[554,16737+8])
              Pexp_ifthenelse
              expression (src/lr1.ml[549,16579+5]..[549,16579+32])
                Pexp_apply
                expression (src/lr1.ml[549,16579+29]..[549,16579+30])
                  Pexp_ident "=" (src/lr1.ml[549,16579+29]..[549,16579+30])
                [
                  <arg>
                  Nolabel
                    expression (src/lr1.ml[549,16579+5]..[549,16579+28])
                      Pexp_apply
                      expression (src/lr1.ml[549,16579+5]..[549,16579+22])
                        Pexp_ident "Item.Set.cardinal" (src/lr1.ml[549,16579+5]..[549,16579+22])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[549,16579+23]..[549,16579+28])
                            Pexp_ident "items" (src/lr1.ml[549,16579+23]..[549,16579+28])
                      ]
                  <arg>
                  Nolabel
                    expression (src/lr1.ml[549,16579+31]..[549,16579+32])
                      Pexp_constant PConst_int (1,None)
                ]
              expression (src/lr1.ml[550,16617+4]..[552,16701+28])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/lr1.ml[550,16617+8]..[550,16617+12])
                      Ppat_var "item" (src/lr1.ml[550,16617+8]..[550,16617+12])
                    expression (src/lr1.ml[550,16617+15]..[550,16617+36])
                      Pexp_apply
                      expression (src/lr1.ml[550,16617+15]..[550,16617+30])
                        Pexp_ident "Item.Set.choose" (src/lr1.ml[550,16617+15]..[550,16617+30])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[550,16617+31]..[550,16617+36])
                            Pexp_ident "items" (src/lr1.ml[550,16617+31]..[550,16617+36])
                      ]
                ]
                expression (src/lr1.ml[551,16657+4]..[552,16701+28])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/lr1.ml[551,16657+8]..[551,16657+24])
                        Ppat_tuple
                        [
                          pattern (src/lr1.ml[551,16657+8]..[551,16657+12])
                            Ppat_var "prod" (src/lr1.ml[551,16657+8]..[551,16657+12])
                          pattern (src/lr1.ml[551,16657+14]..[551,16657+15])
                            Ppat_any
                          pattern (src/lr1.ml[551,16657+17]..[551,16657+18])
                            Ppat_any
                          pattern (src/lr1.ml[551,16657+20]..[551,16657+21])
                            Ppat_any
                          pattern (src/lr1.ml[551,16657+23]..[551,16657+24])
                            Ppat_any
                        ]
                      expression (src/lr1.ml[551,16657+27]..[551,16657+40])
                        Pexp_apply
                        expression (src/lr1.ml[551,16657+27]..[551,16657+35])
                          Pexp_ident "Item.def" (src/lr1.ml[551,16657+27]..[551,16657+35])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[551,16657+36]..[551,16657+40])
                              Pexp_ident "item" (src/lr1.ml[551,16657+36]..[551,16657+40])
                        ]
                  ]
                  expression (src/lr1.ml[552,16701+4]..[552,16701+28])
                    Pexp_apply
                    expression (src/lr1.ml[552,16701+4]..[552,16701+23])
                      Pexp_ident "Production.classify" (src/lr1.ml[552,16701+4]..[552,16701+23])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[552,16701+24]..[552,16701+28])
                          Pexp_ident "prod" (src/lr1.ml[552,16701+24]..[552,16701+28])
                    ]
              Some
                expression (src/lr1.ml[554,16737+4]..[554,16737+8])
                  Pexp_construct "None" (src/lr1.ml[554,16737+4]..[554,16737+8])
                  None
    ]
  structure_item (src/lr1.ml[560,16862+0]..[565,16965+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[560,16862+4]..[560,16862+8])
          Ppat_var "fold" (src/lr1.ml[560,16862+4]..[560,16862+8])
        expression (src/lr1.ml[560,16862+9]..[565,16965+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[560,16862+9]..[560,16862+10])
            Ppat_var "f" (src/lr1.ml[560,16862+9]..[560,16862+10])
          expression (src/lr1.ml[560,16862+11]..[565,16965+7]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/lr1.ml[560,16862+11]..[560,16862+15])
              Ppat_var "accu" (src/lr1.ml[560,16862+11]..[560,16862+15])
            expression (src/lr1.ml[561,16880+2]..[565,16965+7])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/lr1.ml[561,16880+6]..[561,16880+10])
                    Ppat_var "accu" (src/lr1.ml[561,16880+6]..[561,16880+10])
                  expression (src/lr1.ml[561,16880+13]..[561,16880+21])
                    Pexp_apply
                    expression (src/lr1.ml[561,16880+13]..[561,16880+16])
                      Pexp_ident "ref" (src/lr1.ml[561,16880+13]..[561,16880+16])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[561,16880+17]..[561,16880+21])
                          Pexp_ident "accu" (src/lr1.ml[561,16880+17]..[561,16880+21])
                    ]
              ]
              expression (src/lr1.ml[562,16905+2]..[565,16965+7])
                Pexp_sequence
                expression (src/lr1.ml[562,16905+2]..[564,16957+6])
                  Pexp_for Up
                  pattern (src/lr1.ml[562,16905+6]..[562,16905+10])
                    Ppat_var "node" (src/lr1.ml[562,16905+6]..[562,16905+10])
                  expression (src/lr1.ml[562,16905+13]..[562,16905+14])
                    Pexp_constant PConst_int (0,None)
                  expression (src/lr1.ml[562,16905+18]..[562,16905+23])
                    Pexp_apply
                    expression (src/lr1.ml[562,16905+20]..[562,16905+21])
                      Pexp_ident "-" (src/lr1.ml[562,16905+20]..[562,16905+21])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[562,16905+18]..[562,16905+19])
                          Pexp_ident "n" (src/lr1.ml[562,16905+18]..[562,16905+19])
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[562,16905+22]..[562,16905+23])
                          Pexp_constant PConst_int (1,None)
                    ]
                  expression (src/lr1.ml[563,16932+4]..[563,16932+24])
                    Pexp_apply
                    expression (src/lr1.ml[563,16932+9]..[563,16932+11])
                      Pexp_ident ":=" (src/lr1.ml[563,16932+9]..[563,16932+11])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[563,16932+4]..[563,16932+8])
                          Pexp_ident "accu" (src/lr1.ml[563,16932+4]..[563,16932+8])
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[563,16932+12]..[563,16932+24])
                          Pexp_apply
                          expression (src/lr1.ml[563,16932+12]..[563,16932+13])
                            Pexp_ident "f" (src/lr1.ml[563,16932+12]..[563,16932+13])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[563,16932+14]..[563,16932+19])
                                Pexp_apply
                                expression (src/lr1.ml[563,16932+14]..[563,16932+15])
                                  Pexp_ident "!" (src/lr1.ml[563,16932+14]..[563,16932+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[563,16932+15]..[563,16932+19])
                                      Pexp_ident "accu" (src/lr1.ml[563,16932+15]..[563,16932+19])
                                ]
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[563,16932+20]..[563,16932+24])
                                Pexp_ident "node" (src/lr1.ml[563,16932+20]..[563,16932+24])
                          ]
                    ]
                expression (src/lr1.ml[565,16965+2]..[565,16965+7])
                  Pexp_apply
                  expression (src/lr1.ml[565,16965+2]..[565,16965+3])
                    Pexp_ident "!" (src/lr1.ml[565,16965+2]..[565,16965+3])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[565,16965+3]..[565,16965+7])
                        Pexp_ident "accu" (src/lr1.ml[565,16965+3]..[565,16965+7])
                  ]
    ]
  structure_item (src/lr1.ml[567,16974+0]..[570,17025+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[567,16974+4]..[567,16974+8])
          Ppat_var "iter" (src/lr1.ml[567,16974+4]..[567,16974+8])
        expression (src/lr1.ml[567,16974+9]..[570,17025+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[567,16974+9]..[567,16974+10])
            Ppat_var "f" (src/lr1.ml[567,16974+9]..[567,16974+10])
          expression (src/lr1.ml[568,16987+2]..[570,17025+6])
            Pexp_for Up
            pattern (src/lr1.ml[568,16987+6]..[568,16987+10])
              Ppat_var "node" (src/lr1.ml[568,16987+6]..[568,16987+10])
            expression (src/lr1.ml[568,16987+13]..[568,16987+14])
              Pexp_constant PConst_int (0,None)
            expression (src/lr1.ml[568,16987+18]..[568,16987+23])
              Pexp_apply
              expression (src/lr1.ml[568,16987+20]..[568,16987+21])
                Pexp_ident "-" (src/lr1.ml[568,16987+20]..[568,16987+21])
              [
                <arg>
                Nolabel
                  expression (src/lr1.ml[568,16987+18]..[568,16987+19])
                    Pexp_ident "n" (src/lr1.ml[568,16987+18]..[568,16987+19])
                <arg>
                Nolabel
                  expression (src/lr1.ml[568,16987+22]..[568,16987+23])
                    Pexp_constant PConst_int (1,None)
              ]
            expression (src/lr1.ml[569,17014+4]..[569,17014+10])
              Pexp_apply
              expression (src/lr1.ml[569,17014+4]..[569,17014+5])
                Pexp_ident "f" (src/lr1.ml[569,17014+4]..[569,17014+5])
              [
                <arg>
                Nolabel
                  expression (src/lr1.ml[569,17014+6]..[569,17014+10])
                    Pexp_ident "node" (src/lr1.ml[569,17014+6]..[569,17014+10])
              ]
    ]
  structure_item (src/lr1.ml[572,17033+0]..[577,17115+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[572,17033+4]..[572,17033+7])
          Ppat_var "map" (src/lr1.ml[572,17033+4]..[572,17033+7])
        expression (src/lr1.ml[572,17033+8]..[577,17115+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[572,17033+8]..[572,17033+9])
            Ppat_var "f" (src/lr1.ml[572,17033+8]..[572,17033+9])
          expression (src/lr1.ml[573,17045+2]..[577,17115+3])
            Pexp_apply
            expression (src/lr1.ml[573,17045+2]..[573,17045+10])
              Pexp_ident "List.rev" (src/lr1.ml[573,17045+2]..[573,17045+10])
            [
              <arg>
              Nolabel
                expression (src/lr1.ml[573,17045+11]..[577,17115+3])
                  Pexp_apply
                  expression (src/lr1.ml[574,17058+4]..[574,17058+8])
                    Pexp_ident "fold" (src/lr1.ml[574,17058+4]..[574,17058+8])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[574,17058+9]..[576,17106+5])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/lr1.ml[574,17058+14]..[574,17058+18])
                          Ppat_var "accu" (src/lr1.ml[574,17058+14]..[574,17058+18])
                        expression (src/lr1.ml[574,17058+19]..[575,17085+20]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/lr1.ml[574,17058+19]..[574,17058+23])
                            Ppat_var "node" (src/lr1.ml[574,17058+19]..[574,17058+23])
                          expression (src/lr1.ml[575,17085+6]..[575,17085+20])
                            Pexp_construct "::" (src/lr1.ml[575,17085+13]..[575,17085+15])
                            Some
                              expression (src/lr1.ml[575,17085+6]..[575,17085+20]) ghost
                                Pexp_tuple
                                [
                                  expression (src/lr1.ml[575,17085+6]..[575,17085+12])
                                    Pexp_apply
                                    expression (src/lr1.ml[575,17085+6]..[575,17085+7])
                                      Pexp_ident "f" (src/lr1.ml[575,17085+6]..[575,17085+7])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr1.ml[575,17085+8]..[575,17085+12])
                                          Pexp_ident "node" (src/lr1.ml[575,17085+8]..[575,17085+12])
                                    ]
                                  expression (src/lr1.ml[575,17085+16]..[575,17085+20])
                                    Pexp_ident "accu" (src/lr1.ml[575,17085+16]..[575,17085+20])
                                ]
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[576,17106+6]..[576,17106+8])
                        Pexp_construct "[]" (src/lr1.ml[576,17106+6]..[576,17106+8])
                        None
                  ]
            ]
    ]
  structure_item (src/lr1.ml[579,17120+0]..[584,17242+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[579,17120+4]..[579,17120+9])
          Ppat_var "foldx" (src/lr1.ml[579,17120+4]..[579,17120+9])
        expression (src/lr1.ml[579,17120+10]..[584,17242+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[579,17120+10]..[579,17120+11])
            Ppat_var "f" (src/lr1.ml[579,17120+10]..[579,17120+11])
          expression (src/lr1.ml[580,17134+2]..[584,17242+3])
            Pexp_apply
            expression (src/lr1.ml[580,17134+2]..[580,17134+6])
              Pexp_ident "fold" (src/lr1.ml[580,17134+2]..[580,17134+6])
            [
              <arg>
              Nolabel
                expression (src/lr1.ml[580,17134+7]..[584,17242+3])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/lr1.ml[580,17134+12]..[580,17134+16])
                    Ppat_var "accu" (src/lr1.ml[580,17134+12]..[580,17134+16])
                  expression (src/lr1.ml[580,17134+17]..[583,17214+27]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/lr1.ml[580,17134+17]..[580,17134+21])
                      Ppat_var "node" (src/lr1.ml[580,17134+17]..[580,17134+21])
                    expression (src/lr1.ml[581,17159+4]..[583,17214+27])
                      Pexp_match
                      expression (src/lr1.ml[581,17159+10]..[581,17159+30])
                        Pexp_apply
                        expression (src/lr1.ml[581,17159+10]..[581,17159+25])
                          Pexp_ident "incoming_symbol" (src/lr1.ml[581,17159+10]..[581,17159+25])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[581,17159+26]..[581,17159+30])
                              Pexp_ident "node" (src/lr1.ml[581,17159+26]..[581,17159+30])
                        ]
                      [
                        <case>
                          pattern (src/lr1.ml[582,17195+6]..[582,17195+10])
                            Ppat_construct "None" (src/lr1.ml[582,17195+6]..[582,17195+10])
                            None
                          expression (src/lr1.ml[582,17195+14]..[582,17195+18])
                            Pexp_ident "accu" (src/lr1.ml[582,17195+14]..[582,17195+18])
                        <case>
                          pattern (src/lr1.ml[583,17214+6]..[583,17214+12])
                            Ppat_construct "Some" (src/lr1.ml[583,17214+6]..[583,17214+10])
                            Some
                              []
                              pattern (src/lr1.ml[583,17214+11]..[583,17214+12])
                                Ppat_any
                          expression (src/lr1.ml[583,17214+16]..[583,17214+27])
                            Pexp_apply
                            expression (src/lr1.ml[583,17214+16]..[583,17214+17])
                              Pexp_ident "f" (src/lr1.ml[583,17214+16]..[583,17214+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[583,17214+18]..[583,17214+22])
                                  Pexp_ident "accu" (src/lr1.ml[583,17214+18]..[583,17214+22])
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[583,17214+23]..[583,17214+27])
                                  Pexp_ident "node" (src/lr1.ml[583,17214+23]..[583,17214+27])
                            ]
                      ]
            ]
    ]
  structure_item (src/lr1.ml[586,17247+0]..[591,17357+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[586,17247+4]..[586,17247+9])
          Ppat_var "iterx" (src/lr1.ml[586,17247+4]..[586,17247+9])
        expression (src/lr1.ml[586,17247+10]..[591,17357+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[586,17247+10]..[586,17247+11])
            Ppat_var "f" (src/lr1.ml[586,17247+10]..[586,17247+11])
          expression (src/lr1.ml[587,17261+2]..[591,17357+3])
            Pexp_apply
            expression (src/lr1.ml[587,17261+2]..[587,17261+6])
              Pexp_ident "iter" (src/lr1.ml[587,17261+2]..[587,17261+6])
            [
              <arg>
              Nolabel
                expression (src/lr1.ml[587,17261+7]..[591,17357+3])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/lr1.ml[587,17261+12]..[587,17261+16])
                    Ppat_var "node" (src/lr1.ml[587,17261+12]..[587,17261+16])
                  expression (src/lr1.ml[588,17281+4]..[590,17334+22])
                    Pexp_match
                    expression (src/lr1.ml[588,17281+10]..[588,17281+30])
                      Pexp_apply
                      expression (src/lr1.ml[588,17281+10]..[588,17281+25])
                        Pexp_ident "incoming_symbol" (src/lr1.ml[588,17281+10]..[588,17281+25])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[588,17281+26]..[588,17281+30])
                            Pexp_ident "node" (src/lr1.ml[588,17281+26]..[588,17281+30])
                      ]
                    [
                      <case>
                        pattern (src/lr1.ml[589,17317+6]..[589,17317+10])
                          Ppat_construct "None" (src/lr1.ml[589,17317+6]..[589,17317+10])
                          None
                        expression (src/lr1.ml[589,17317+14]..[589,17317+16])
                          Pexp_construct "()" (src/lr1.ml[589,17317+14]..[589,17317+16])
                          None
                      <case>
                        pattern (src/lr1.ml[590,17334+6]..[590,17334+12])
                          Ppat_construct "Some" (src/lr1.ml[590,17334+6]..[590,17334+10])
                          Some
                            []
                            pattern (src/lr1.ml[590,17334+11]..[590,17334+12])
                              Ppat_any
                        expression (src/lr1.ml[590,17334+16]..[590,17334+22])
                          Pexp_apply
                          expression (src/lr1.ml[590,17334+16]..[590,17334+17])
                            Pexp_ident "f" (src/lr1.ml[590,17334+16]..[590,17334+17])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[590,17334+18]..[590,17334+22])
                                Pexp_ident "node" (src/lr1.ml[590,17334+18]..[590,17334+22])
                          ]
                    ]
            ]
    ]
  structure_item (src/lr1.ml[593,17362+0]..[594,17394+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[593,17362+4]..[593,17362+12])
          Ppat_var "tabulate" (src/lr1.ml[593,17362+4]..[593,17362+12])
        expression (src/lr1.ml[593,17362+13]..[594,17394+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[593,17362+13]..[593,17362+29])
            Ppat_constraint
            pattern (src/lr1.ml[593,17362+14]..[593,17362+15])
              Ppat_var "f" (src/lr1.ml[593,17362+14]..[593,17362+15])
            core_type (src/lr1.ml[593,17362+18]..[593,17362+28])
              Ptyp_arrow
              Nolabel
              core_type (src/lr1.ml[593,17362+18]..[593,17362+22])
                Ptyp_constr "node" (src/lr1.ml[593,17362+18]..[593,17362+22])
                []
              core_type (src/lr1.ml[593,17362+26]..[593,17362+28])
                Ptyp_var a
          expression (src/lr1.ml[594,17394+2]..[594,17394+19])
            Pexp_apply
            expression (src/lr1.ml[594,17394+2]..[594,17394+15])
              Pexp_ident "Misc.tabulate" (src/lr1.ml[594,17394+2]..[594,17394+15])
            [
              <arg>
              Nolabel
                expression (src/lr1.ml[594,17394+16]..[594,17394+17])
                  Pexp_ident "n" (src/lr1.ml[594,17394+16]..[594,17394+17])
              <arg>
              Nolabel
                expression (src/lr1.ml[594,17394+18]..[594,17394+19])
                  Pexp_ident "f" (src/lr1.ml[594,17394+18]..[594,17394+19])
            ]
    ]
  structure_item (src/lr1.ml[596,17415+0]..[597,17443+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[596,17415+4]..[596,17415+7])
          Ppat_var "sum" (src/lr1.ml[596,17415+4]..[596,17415+7])
        expression (src/lr1.ml[596,17415+8]..[597,17443+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[596,17415+8]..[596,17415+25])
            Ppat_constraint
            pattern (src/lr1.ml[596,17415+9]..[596,17415+10])
              Ppat_var "f" (src/lr1.ml[596,17415+9]..[596,17415+10])
            core_type (src/lr1.ml[596,17415+13]..[596,17415+24])
              Ptyp_arrow
              Nolabel
              core_type (src/lr1.ml[596,17415+13]..[596,17415+17])
                Ptyp_constr "node" (src/lr1.ml[596,17415+13]..[596,17415+17])
                []
              core_type (src/lr1.ml[596,17415+21]..[596,17415+24])
                Ptyp_constr "int" (src/lr1.ml[596,17415+21]..[596,17415+24])
                []
          expression (src/lr1.ml[597,17443+2]..[597,17443+14])
            Pexp_apply
            expression (src/lr1.ml[597,17443+2]..[597,17443+10])
              Pexp_ident "Misc.sum" (src/lr1.ml[597,17443+2]..[597,17443+10])
            [
              <arg>
              Nolabel
                expression (src/lr1.ml[597,17443+11]..[597,17443+12])
                  Pexp_ident "n" (src/lr1.ml[597,17443+11]..[597,17443+12])
              <arg>
              Nolabel
                expression (src/lr1.ml[597,17443+13]..[597,17443+14])
                  Pexp_ident "f" (src/lr1.ml[597,17443+13]..[597,17443+14])
            ]
    ]
  structure_item (src/lr1.ml[604,17638+0]..[605,17664+54])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[604,17638+4]..[604,17638+10])
          Ppat_var "lookup" (src/lr1.ml[604,17638+4]..[604,17638+10])
        expression (src/lr1.ml[604,17638+11]..[605,17664+54]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[604,17638+11]..[604,17638+17])
            Ppat_var "symbol" (src/lr1.ml[604,17638+11]..[604,17638+17])
          expression (src/lr1.ml[604,17638+18]..[605,17664+54]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/lr1.ml[604,17638+18]..[604,17638+23])
              Ppat_var "index" (src/lr1.ml[604,17638+18]..[604,17638+23])
            expression (src/lr1.ml[605,17664+2]..[605,17664+54])
              Pexp_try
              expression (src/lr1.ml[605,17664+6]..[605,17664+33])
                Pexp_apply
                expression (src/lr1.ml[605,17664+6]..[605,17664+20])
                  Pexp_ident "SymbolMap.find" (src/lr1.ml[605,17664+6]..[605,17664+20])
                [
                  <arg>
                  Nolabel
                    expression (src/lr1.ml[605,17664+21]..[605,17664+27])
                      Pexp_ident "symbol" (src/lr1.ml[605,17664+21]..[605,17664+27])
                  <arg>
                  Nolabel
                    expression (src/lr1.ml[605,17664+28]..[605,17664+33])
                      Pexp_ident "index" (src/lr1.ml[605,17664+28]..[605,17664+33])
                ]
              [
                <case>
                  pattern (src/lr1.ml[605,17664+39]..[605,17664+48])
                    Ppat_construct "Not_found" (src/lr1.ml[605,17664+39]..[605,17664+48])
                    None
                  expression (src/lr1.ml[605,17664+52]..[605,17664+54])
                    Pexp_construct "[]" (src/lr1.ml[605,17664+52]..[605,17664+54])
                    None
              ]
    ]
  structure_item (src/lr1.ml[607,17720+0]..[614,17932+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[607,17720+4]..[607,17720+9])
          Ppat_var "index" (src/lr1.ml[607,17720+4]..[607,17720+9])
        core_type (src/lr1.ml[607,17720+12]..[607,17720+33])
          Ptyp_constr "SymbolMap.t" (src/lr1.ml[607,17720+22]..[607,17720+33])
          [
            core_type (src/lr1.ml[607,17720+12]..[607,17720+21])
              Ptyp_constr "list" (src/lr1.ml[607,17720+17]..[607,17720+21])
              [
                core_type (src/lr1.ml[607,17720+12]..[607,17720+16])
                  Ptyp_constr "node" (src/lr1.ml[607,17720+12]..[607,17720+16])
                  []
              ]
          ]
        expression (src/lr1.ml[608,17756+2]..[614,17932+19])
          Pexp_apply
          expression (src/lr1.ml[608,17756+2]..[608,17756+6])
            Pexp_ident "fold" (src/lr1.ml[608,17756+2]..[608,17756+6])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[608,17756+7]..[614,17932+3])
                Pexp_fun
                Nolabel
                None
                pattern (src/lr1.ml[608,17756+12]..[608,17756+17])
                  Ppat_var "index" (src/lr1.ml[608,17756+12]..[608,17756+17])
                expression (src/lr1.ml[608,17756+18]..[613,17867+64]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/lr1.ml[608,17756+18]..[608,17756+22])
                    Ppat_var "node" (src/lr1.ml[608,17756+18]..[608,17756+22])
                  expression (src/lr1.ml[609,17782+4]..[613,17867+64])
                    Pexp_match
                    expression (src/lr1.ml[609,17782+10]..[609,17782+30])
                      Pexp_apply
                      expression (src/lr1.ml[609,17782+10]..[609,17782+25])
                        Pexp_ident "incoming_symbol" (src/lr1.ml[609,17782+10]..[609,17782+25])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[609,17782+26]..[609,17782+30])
                            Pexp_ident "node" (src/lr1.ml[609,17782+26]..[609,17782+30])
                      ]
                    [
                      <case>
                        pattern (src/lr1.ml[610,17818+6]..[610,17818+10])
                          Ppat_construct "None" (src/lr1.ml[610,17818+6]..[610,17818+10])
                          None
                        expression (src/lr1.ml[611,17832+8]..[611,17832+13])
                          Pexp_ident "index" (src/lr1.ml[611,17832+8]..[611,17832+13])
                      <case>
                        pattern (src/lr1.ml[612,17846+6]..[612,17846+17])
                          Ppat_construct "Some" (src/lr1.ml[612,17846+6]..[612,17846+10])
                          Some
                            []
                            pattern (src/lr1.ml[612,17846+11]..[612,17846+17])
                              Ppat_var "symbol" (src/lr1.ml[612,17846+11]..[612,17846+17])
                        expression (src/lr1.ml[613,17867+8]..[613,17867+64])
                          Pexp_apply
                          expression (src/lr1.ml[613,17867+8]..[613,17867+21])
                            Pexp_ident "SymbolMap.add" (src/lr1.ml[613,17867+8]..[613,17867+21])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[613,17867+22]..[613,17867+28])
                                Pexp_ident "symbol" (src/lr1.ml[613,17867+22]..[613,17867+28])
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[613,17867+29]..[613,17867+58])
                                Pexp_construct "::" (src/lr1.ml[613,17867+35]..[613,17867+37])
                                Some
                                  expression (src/lr1.ml[613,17867+30]..[613,17867+57]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/lr1.ml[613,17867+30]..[613,17867+34])
                                        Pexp_ident "node" (src/lr1.ml[613,17867+30]..[613,17867+34])
                                      expression (src/lr1.ml[613,17867+38]..[613,17867+57])
                                        Pexp_apply
                                        expression (src/lr1.ml[613,17867+38]..[613,17867+44])
                                          Pexp_ident "lookup" (src/lr1.ml[613,17867+38]..[613,17867+44])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/lr1.ml[613,17867+45]..[613,17867+51])
                                              Pexp_ident "symbol" (src/lr1.ml[613,17867+45]..[613,17867+51])
                                          <arg>
                                          Nolabel
                                            expression (src/lr1.ml[613,17867+52]..[613,17867+57])
                                              Pexp_ident "index" (src/lr1.ml[613,17867+52]..[613,17867+57])
                                        ]
                                    ]
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[613,17867+59]..[613,17867+64])
                                Pexp_ident "index" (src/lr1.ml[613,17867+59]..[613,17867+64])
                          ]
                    ]
            <arg>
            Nolabel
              expression (src/lr1.ml[614,17932+4]..[614,17932+19])
                Pexp_ident "SymbolMap.empty" (src/lr1.ml[614,17932+4]..[614,17932+19])
          ]
    ]
  structure_item (src/lr1.ml[619,18111+0]..[624,18319+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[619,18111+4]..[619,18111+11])
          Ppat_var "targets" (src/lr1.ml[619,18111+4]..[619,18111+11])
        expression (src/lr1.ml[619,18111+12]..[624,18319+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[619,18111+12]..[619,18111+13])
            Ppat_var "f" (src/lr1.ml[619,18111+12]..[619,18111+13])
          expression (src/lr1.ml[619,18111+14]..[624,18319+16]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/lr1.ml[619,18111+14]..[619,18111+18])
              Ppat_var "accu" (src/lr1.ml[619,18111+14]..[619,18111+18])
            expression (src/lr1.ml[619,18111+19]..[624,18319+16]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/lr1.ml[619,18111+19]..[619,18111+25])
                Ppat_var "symbol" (src/lr1.ml[619,18111+19]..[619,18111+25])
              expression (src/lr1.ml[621,18203+2]..[624,18319+16])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/lr1.ml[621,18203+6]..[621,18203+13])
                      Ppat_var "targets" (src/lr1.ml[621,18203+6]..[621,18203+13])
                    expression (src/lr1.ml[621,18203+16]..[621,18203+35])
                      Pexp_apply
                      expression (src/lr1.ml[621,18203+16]..[621,18203+22])
                        Pexp_ident "lookup" (src/lr1.ml[621,18203+16]..[621,18203+22])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[621,18203+23]..[621,18203+29])
                            Pexp_ident "symbol" (src/lr1.ml[621,18203+23]..[621,18203+29])
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[621,18203+30]..[621,18203+35])
                            Pexp_ident "index" (src/lr1.ml[621,18203+30]..[621,18203+35])
                      ]
                ]
                expression (src/lr1.ml[622,18242+2]..[624,18319+16])
                  Pexp_apply
                  expression (src/lr1.ml[622,18242+2]..[622,18242+16])
                    Pexp_ident "List.fold_left" (src/lr1.ml[622,18242+2]..[622,18242+16])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[622,18242+17]..[624,18319+3])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/lr1.ml[622,18242+22]..[622,18242+26])
                          Ppat_var "accu" (src/lr1.ml[622,18242+22]..[622,18242+26])
                        expression (src/lr1.ml[622,18242+27]..[623,18279+39]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/lr1.ml[622,18242+27]..[622,18242+33])
                            Ppat_var "target" (src/lr1.ml[622,18242+27]..[622,18242+33])
                          expression (src/lr1.ml[623,18279+4]..[623,18279+39])
                            Pexp_apply
                            expression (src/lr1.ml[623,18279+4]..[623,18279+5])
                              Pexp_ident "f" (src/lr1.ml[623,18279+4]..[623,18279+5])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[623,18279+6]..[623,18279+10])
                                  Pexp_ident "accu" (src/lr1.ml[623,18279+6]..[623,18279+10])
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[623,18279+11]..[623,18279+32])
                                  Pexp_apply
                                  expression (src/lr1.ml[623,18279+12]..[623,18279+24])
                                    Pexp_ident "predecessors" (src/lr1.ml[623,18279+12]..[623,18279+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[623,18279+25]..[623,18279+31])
                                        Pexp_ident "target" (src/lr1.ml[623,18279+25]..[623,18279+31])
                                  ]
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[623,18279+33]..[623,18279+39])
                                  Pexp_ident "target" (src/lr1.ml[623,18279+33]..[623,18279+39])
                            ]
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[624,18319+4]..[624,18319+8])
                        Pexp_ident "accu" (src/lr1.ml[624,18319+4]..[624,18319+8])
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[624,18319+9]..[624,18319+16])
                        Pexp_ident "targets" (src/lr1.ml[624,18319+9]..[624,18319+16])
                  ]
    ]
  structure_item (src/lr1.ml[630,18489+0]..[635,18681+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[630,18489+4]..[630,18489+14])
          Ppat_var "start2item" (src/lr1.ml[630,18489+4]..[630,18489+14])
        expression (src/lr1.ml[630,18489+15]..[635,18681+23]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[630,18489+15]..[630,18489+19])
            Ppat_var "node" (src/lr1.ml[630,18489+15]..[630,18489+19])
          expression (src/lr1.ml[631,18511+2]..[635,18681+23])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/lr1.ml[631,18511+6]..[631,18511+11])
                  Ppat_var "state" (src/lr1.ml[631,18511+6]..[631,18511+11])
                core_type (src/lr1.ml[631,18511+14]..[631,18511+26])
                  Ptyp_constr "Lr0.lr1state" (src/lr1.ml[631,18511+14]..[631,18511+26])
                  []
                expression (src/lr1.ml[631,18511+29]..[631,18511+39])
                  Pexp_apply
                  expression (src/lr1.ml[631,18511+29]..[631,18511+34])
                    Pexp_ident "state" (src/lr1.ml[631,18511+29]..[631,18511+34])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[631,18511+35]..[631,18511+39])
                        Pexp_ident "node" (src/lr1.ml[631,18511+35]..[631,18511+39])
                  ]
            ]
            expression (src/lr1.ml[632,18554+2]..[635,18681+23])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/lr1.ml[632,18554+6]..[632,18554+10])
                    Ppat_var "core" (src/lr1.ml[632,18554+6]..[632,18554+10])
                  core_type (src/lr1.ml[632,18554+13]..[632,18554+21])
                    Ptyp_constr "Lr0.node" (src/lr1.ml[632,18554+13]..[632,18554+21])
                    []
                  expression (src/lr1.ml[632,18554+24]..[632,18554+38])
                    Pexp_apply
                    expression (src/lr1.ml[632,18554+24]..[632,18554+32])
                      Pexp_ident "Lr0.core" (src/lr1.ml[632,18554+24]..[632,18554+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[632,18554+33]..[632,18554+38])
                          Pexp_ident "state" (src/lr1.ml[632,18554+33]..[632,18554+38])
                    ]
              ]
              expression (src/lr1.ml[633,18596+2]..[635,18681+23])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/lr1.ml[633,18596+6]..[633,18596+11])
                      Ppat_var "items" (src/lr1.ml[633,18596+6]..[633,18596+11])
                    core_type (src/lr1.ml[633,18596+14]..[633,18596+24])
                      Ptyp_constr "Item.Set.t" (src/lr1.ml[633,18596+14]..[633,18596+24])
                      []
                    expression (src/lr1.ml[633,18596+27]..[633,18596+41])
                      Pexp_apply
                      expression (src/lr1.ml[633,18596+27]..[633,18596+36])
                        Pexp_ident "Lr0.items" (src/lr1.ml[633,18596+27]..[633,18596+36])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[633,18596+37]..[633,18596+41])
                            Pexp_ident "core" (src/lr1.ml[633,18596+37]..[633,18596+41])
                      ]
                ]
                expression (src/lr1.ml[634,18641+2]..[635,18681+23])
                  Pexp_sequence
                  expression (src/lr1.ml[634,18641+2]..[634,18641+38])
                    Pexp_assert
                    expression (src/lr1.ml[634,18641+9]..[634,18641+38])
                      Pexp_apply
                      expression (src/lr1.ml[634,18641+34]..[634,18641+35])
                        Pexp_ident "=" (src/lr1.ml[634,18641+34]..[634,18641+35])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[634,18641+10]..[634,18641+33])
                            Pexp_apply
                            expression (src/lr1.ml[634,18641+10]..[634,18641+27])
                              Pexp_ident "Item.Set.cardinal" (src/lr1.ml[634,18641+10]..[634,18641+27])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[634,18641+28]..[634,18641+33])
                                  Pexp_ident "items" (src/lr1.ml[634,18641+28]..[634,18641+33])
                            ]
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[634,18641+36]..[634,18641+37])
                            Pexp_constant PConst_int (1,None)
                      ]
                  expression (src/lr1.ml[635,18681+2]..[635,18681+23])
                    Pexp_apply
                    expression (src/lr1.ml[635,18681+2]..[635,18681+17])
                      Pexp_ident "Item.Set.choose" (src/lr1.ml[635,18681+2]..[635,18681+17])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[635,18681+18]..[635,18681+23])
                          Pexp_ident "items" (src/lr1.ml[635,18681+18]..[635,18681+23])
                    ]
    ]
  structure_item (src/lr1.ml[643,19082+0]..[650,19308+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[643,19082+4]..[643,19082+17])
          Ppat_var "has_beforeend" (src/lr1.ml[643,19082+4]..[643,19082+17])
        expression (src/lr1.ml[643,19082+18]..[650,19308+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[643,19082+18]..[643,19082+22])
            Ppat_var "node" (src/lr1.ml[643,19082+18]..[643,19082+22])
          expression (src/lr1.ml[644,19107+2]..[650,19308+27])
            Pexp_apply
            expression (src/lr1.ml[644,19107+2]..[644,19107+18])
              Pexp_ident "TerminalMap.fold" (src/lr1.ml[644,19107+2]..[644,19107+18])
            [
              <arg>
              Nolabel
                expression (src/lr1.ml[644,19107+19]..[650,19308+3])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/lr1.ml[644,19107+24]..[644,19107+25])
                    Ppat_any
                  expression (src/lr1.ml[644,19107+26]..[649,19276+31]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/lr1.ml[644,19107+26]..[644,19107+31])
                      Ppat_var "prods" (src/lr1.ml[644,19107+26]..[644,19107+31])
                    expression (src/lr1.ml[644,19107+32]..[649,19276+31]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/lr1.ml[644,19107+32]..[644,19107+36])
                        Ppat_var "accu" (src/lr1.ml[644,19107+32]..[644,19107+36])
                      expression (src/lr1.ml[645,19147+4]..[649,19276+31])
                        Pexp_apply
                        expression (src/lr1.ml[645,19147+9]..[645,19147+11])
                          Pexp_ident "||" (src/lr1.ml[645,19147+9]..[645,19147+11])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[645,19147+4]..[645,19147+8])
                              Pexp_ident "accu" (src/lr1.ml[645,19147+4]..[645,19147+8])
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[646,19159+4]..[649,19276+31])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/lr1.ml[646,19159+8]..[646,19159+12])
                                    Ppat_var "prod" (src/lr1.ml[646,19159+8]..[646,19159+12])
                                  expression (src/lr1.ml[646,19159+15]..[646,19159+32])
                                    Pexp_apply
                                    expression (src/lr1.ml[646,19159+15]..[646,19159+26])
                                      Pexp_ident "Misc.single" (src/lr1.ml[646,19159+15]..[646,19159+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr1.ml[646,19159+27]..[646,19159+32])
                                          Pexp_ident "prods" (src/lr1.ml[646,19159+27]..[646,19159+32])
                                    ]
                              ]
                              expression (src/lr1.ml[647,19195+4]..[649,19276+31])
                                Pexp_apply
                                expression (src/lr1.ml[647,19195+35]..[647,19195+37])
                                  Pexp_ident "&&" (src/lr1.ml[647,19195+35]..[647,19195+37])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[647,19195+4]..[647,19195+34])
                                      Pexp_apply
                                      expression (src/lr1.ml[647,19195+4]..[647,19195+7])
                                        Pexp_ident "not" (src/lr1.ml[647,19195+4]..[647,19195+7])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr1.ml[647,19195+8]..[647,19195+34])
                                            Pexp_apply
                                            expression (src/lr1.ml[647,19195+9]..[647,19195+28])
                                              Pexp_ident "Production.is_start" (src/lr1.ml[647,19195+9]..[647,19195+28])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/lr1.ml[647,19195+29]..[647,19195+33])
                                                  Pexp_ident "prod" (src/lr1.ml[647,19195+29]..[647,19195+33])
                                            ]
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[648,19233+4]..[649,19276+31])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/lr1.ml[648,19233+8]..[648,19233+14])
                                            Ppat_var "action" (src/lr1.ml[648,19233+8]..[648,19233+14])
                                          expression (src/lr1.ml[648,19233+17]..[648,19233+39])
                                            Pexp_apply
                                            expression (src/lr1.ml[648,19233+17]..[648,19233+34])
                                              Pexp_ident "Production.action" (src/lr1.ml[648,19233+17]..[648,19233+34])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/lr1.ml[648,19233+35]..[648,19233+39])
                                                  Pexp_ident "prod" (src/lr1.ml[648,19233+35]..[648,19233+39])
                                            ]
                                      ]
                                      expression (src/lr1.ml[649,19276+4]..[649,19276+31])
                                        Pexp_apply
                                        expression (src/lr1.ml[649,19276+4]..[649,19276+24])
                                          Pexp_ident "Action.has_beforeend" (src/lr1.ml[649,19276+4]..[649,19276+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/lr1.ml[649,19276+25]..[649,19276+31])
                                              Pexp_ident "action" (src/lr1.ml[649,19276+25]..[649,19276+31])
                                        ]
                                ]
                        ]
              <arg>
              Nolabel
                expression (src/lr1.ml[650,19308+4]..[650,19308+21])
                  Pexp_apply
                  expression (src/lr1.ml[650,19308+5]..[650,19308+15])
                    Pexp_ident "reductions" (src/lr1.ml[650,19308+5]..[650,19308+15])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[650,19308+16]..[650,19308+20])
                        Pexp_ident "node" (src/lr1.ml[650,19308+16]..[650,19308+20])
                  ]
              <arg>
              Nolabel
                expression (src/lr1.ml[650,19308+22]..[650,19308+27])
                  Pexp_construct "false" (src/lr1.ml[650,19308+22]..[650,19308+27])
                  None
            ]
    ]
  structure_item (src/lr1.ml[664,20029+0]..[697,20889+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[664,20029+4]..[664,20029+21])
          Ppat_var "acceptable_tokens" (src/lr1.ml[664,20029+4]..[664,20029+21])
        expression (src/lr1.ml[664,20029+22]..[697,20889+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[664,20029+22]..[664,20029+32])
            Ppat_constraint
            pattern (src/lr1.ml[664,20029+23]..[664,20029+24])
              Ppat_var "s" (src/lr1.ml[664,20029+23]..[664,20029+24])
            core_type (src/lr1.ml[664,20029+27]..[664,20029+31])
              Ptyp_constr "node" (src/lr1.ml[664,20029+27]..[664,20029+31])
              []
          expression (src/lr1.ml[669,20219+2]..[697,20889+9])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/lr1.ml[669,20219+6]..[669,20219+17])
                  Ppat_var "transitions" (src/lr1.ml[669,20219+6]..[669,20219+17])
                expression (src/lr1.ml[670,20239+4]..[670,20239+62])
                  Pexp_apply
                  expression (src/lr1.ml[670,20239+4]..[670,20239+20])
                    Pexp_ident "SymbolMap.remove" (src/lr1.ml[670,20239+4]..[670,20239+20])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[670,20239+21]..[670,20239+46])
                        Pexp_construct "Symbol.T" (src/lr1.ml[670,20239+22]..[670,20239+30])
                        Some
                          expression (src/lr1.ml[670,20239+31]..[670,20239+45])
                            Pexp_ident "Terminal.error" (src/lr1.ml[670,20239+31]..[670,20239+45])
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[670,20239+47]..[670,20239+62])
                        Pexp_apply
                        expression (src/lr1.ml[670,20239+48]..[670,20239+59])
                          Pexp_ident "transitions" (src/lr1.ml[670,20239+48]..[670,20239+59])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[670,20239+60]..[670,20239+61])
                              Pexp_ident "s" (src/lr1.ml[670,20239+60]..[670,20239+61])
                        ]
                  ]
              <def>
                pattern (src/lr1.ml[671,20302+6]..[671,20302+16])
                  Ppat_var "reductions" (src/lr1.ml[671,20302+6]..[671,20302+16])
                expression (src/lr1.ml[672,20321+4]..[672,20321+52])
                  Pexp_apply
                  expression (src/lr1.ml[672,20321+4]..[672,20321+22])
                    Pexp_ident "TerminalMap.remove" (src/lr1.ml[672,20321+4]..[672,20321+22])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[672,20321+23]..[672,20321+37])
                        Pexp_ident "Terminal.error" (src/lr1.ml[672,20321+23]..[672,20321+37])
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[672,20321+38]..[672,20321+52])
                        Pexp_apply
                        expression (src/lr1.ml[672,20321+39]..[672,20321+49])
                          Pexp_ident "reductions" (src/lr1.ml[672,20321+39]..[672,20321+49])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[672,20321+50]..[672,20321+51])
                              Pexp_ident "s" (src/lr1.ml[672,20321+50]..[672,20321+51])
                        ]
                  ]
            ]
            expression (src/lr1.ml[677,20444+2]..[697,20889+9])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/lr1.ml[677,20444+6]..[677,20444+13])
                    Ppat_var "covered" (src/lr1.ml[677,20444+6]..[677,20444+13])
                  expression (src/lr1.ml[678,20460+4]..[684,20630+35])
                    Pexp_apply
                    expression (src/lr1.ml[678,20460+4]..[678,20460+18])
                      Pexp_ident "SymbolMap.fold" (src/lr1.ml[678,20460+4]..[678,20460+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[678,20460+19]..[684,20630+5])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/lr1.ml[678,20460+24]..[678,20460+30])
                            Ppat_var "symbol" (src/lr1.ml[678,20460+24]..[678,20460+30])
                          expression (src/lr1.ml[678,20460+31]..[683,20612+17]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/lr1.ml[678,20460+31]..[678,20460+32])
                              Ppat_any
                            expression (src/lr1.ml[678,20460+33]..[683,20612+17]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/lr1.ml[678,20460+33]..[678,20460+40])
                                Ppat_var "covered" (src/lr1.ml[678,20460+33]..[678,20460+40])
                              expression (src/lr1.ml[679,20504+6]..[683,20612+17])
                                Pexp_match
                                expression (src/lr1.ml[679,20504+12]..[679,20504+18])
                                  Pexp_ident "symbol" (src/lr1.ml[679,20504+12]..[679,20504+18])
                                [
                                  <case>
                                    pattern (src/lr1.ml[680,20528+8]..[680,20528+20])
                                      Ppat_construct "Symbol.T" (src/lr1.ml[680,20528+8]..[680,20528+16])
                                      Some
                                        []
                                        pattern (src/lr1.ml[680,20528+17]..[680,20528+20])
                                          Ppat_var "tok" (src/lr1.ml[680,20528+17]..[680,20528+20])
                                    expression (src/lr1.ml[681,20552+10]..[681,20552+37])
                                      Pexp_apply
                                      expression (src/lr1.ml[681,20552+10]..[681,20552+25])
                                        Pexp_ident "TerminalSet.add" (src/lr1.ml[681,20552+10]..[681,20552+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr1.ml[681,20552+26]..[681,20552+29])
                                            Pexp_ident "tok" (src/lr1.ml[681,20552+26]..[681,20552+29])
                                        <arg>
                                        Nolabel
                                          expression (src/lr1.ml[681,20552+30]..[681,20552+37])
                                            Pexp_ident "covered" (src/lr1.ml[681,20552+30]..[681,20552+37])
                                      ]
                                  <case>
                                    pattern (src/lr1.ml[682,20590+8]..[682,20590+18])
                                      Ppat_construct "Symbol.N" (src/lr1.ml[682,20590+8]..[682,20590+16])
                                      Some
                                        []
                                        pattern (src/lr1.ml[682,20590+17]..[682,20590+18])
                                          Ppat_any
                                    expression (src/lr1.ml[683,20612+10]..[683,20612+17])
                                      Pexp_ident "covered" (src/lr1.ml[683,20612+10]..[683,20612+17])
                                ]
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[684,20630+6]..[684,20630+17])
                          Pexp_ident "transitions" (src/lr1.ml[684,20630+6]..[684,20630+17])
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[684,20630+18]..[684,20630+35])
                          Pexp_ident "TerminalSet.empty" (src/lr1.ml[684,20630+18]..[684,20630+35])
                    ]
              ]
              expression (src/lr1.ml[689,20726+2]..[697,20889+9])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/lr1.ml[689,20726+6]..[689,20726+13])
                      Ppat_var "covered" (src/lr1.ml[689,20726+6]..[689,20726+13])
                    expression (src/lr1.ml[690,20742+4]..[692,20825+37])
                      Pexp_apply
                      expression (src/lr1.ml[690,20742+4]..[690,20742+22])
                        Pexp_ident "ProductionMap.fold" (src/lr1.ml[690,20742+4]..[690,20742+22])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[690,20742+23]..[692,20825+5])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/lr1.ml[690,20742+28]..[690,20742+29])
                              Ppat_any
                            expression (src/lr1.ml[690,20742+30]..[691,20788+36]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/lr1.ml[690,20742+30]..[690,20742+34])
                                Ppat_var "toks" (src/lr1.ml[690,20742+30]..[690,20742+34])
                              expression (src/lr1.ml[690,20742+35]..[691,20788+36]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/lr1.ml[690,20742+35]..[690,20742+42])
                                  Ppat_var "covered" (src/lr1.ml[690,20742+35]..[690,20742+42])
                                expression (src/lr1.ml[691,20788+6]..[691,20788+36])
                                  Pexp_apply
                                  expression (src/lr1.ml[691,20788+6]..[691,20788+23])
                                    Pexp_ident "TerminalSet.union" (src/lr1.ml[691,20788+6]..[691,20788+23])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[691,20788+24]..[691,20788+28])
                                        Pexp_ident "toks" (src/lr1.ml[691,20788+24]..[691,20788+28])
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[691,20788+29]..[691,20788+36])
                                        Pexp_ident "covered" (src/lr1.ml[691,20788+29]..[691,20788+36])
                                  ]
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[692,20825+6]..[692,20825+29])
                            Pexp_apply
                            expression (src/lr1.ml[692,20825+7]..[692,20825+17])
                              Pexp_ident "Lr0.invert" (src/lr1.ml[692,20825+7]..[692,20825+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[692,20825+18]..[692,20825+28])
                                  Pexp_ident "reductions" (src/lr1.ml[692,20825+18]..[692,20825+28])
                            ]
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[692,20825+30]..[692,20825+37])
                            Pexp_ident "covered" (src/lr1.ml[692,20825+30]..[692,20825+37])
                      ]
                ]
                expression (src/lr1.ml[697,20889+2]..[697,20889+9])
                  Pexp_ident "covered" (src/lr1.ml[697,20889+2]..[697,20889+9])
    ]
  structure_item (src/lr1.ml[704,21035+0]..[714,21469+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[704,21035+4]..[704,21035+6])
          Ppat_construct "()" (src/lr1.ml[704,21035+4]..[704,21035+6])
          None
        expression (src/lr1.ml[705,21044+2]..[714,21469+20])
          Pexp_sequence
          expression (src/lr1.ml[705,21044+2]..[709,21244+19])
            Pexp_ifthenelse
            expression (src/lr1.ml[705,21044+5]..[705,21044+22])
              Pexp_apply
              expression (src/lr1.ml[705,21044+19]..[705,21044+20])
                Pexp_ident "=" (src/lr1.ml[705,21044+19]..[705,21044+20])
              [
                <arg>
                Nolabel
                  expression (src/lr1.ml[705,21044+5]..[705,21044+18])
                    Pexp_apply
                    expression (src/lr1.ml[705,21044+5]..[705,21044+6])
                      Pexp_ident "!" (src/lr1.ml[705,21044+5]..[705,21044+6])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[705,21044+6]..[705,21044+18])
                          Pexp_ident "shift_reduce" (src/lr1.ml[705,21044+6]..[705,21044+18])
                    ]
                <arg>
                Nolabel
                  expression (src/lr1.ml[705,21044+21]..[705,21044+22])
                    Pexp_constant PConst_int (1,None)
              ]
            expression (src/lr1.ml[706,21072+4]..[706,21072+68])
              Pexp_apply
              expression (src/lr1.ml[706,21072+4]..[706,21072+25])
                Pexp_ident "Error.grammar_warning" (src/lr1.ml[706,21072+4]..[706,21072+25])
              [
                <arg>
                Nolabel
                  expression (src/lr1.ml[706,21072+26]..[706,21072+28])
                    Pexp_construct "[]" (src/lr1.ml[706,21072+26]..[706,21072+28])
                    None
                <arg>
                Nolabel
                  expression (src/lr1.ml[706,21072+29]..[706,21072+68])
                    Pexp_constant PConst_string("one state has shift/reduce conflicts.",(src/lr1.ml[706,21072+30]..[706,21072+67]),None)
              ]
            Some
              expression (src/lr1.ml[707,21141+7]..[709,21244+19])
                Pexp_ifthenelse
                expression (src/lr1.ml[707,21141+10]..[707,21141+27])
                  Pexp_apply
                  expression (src/lr1.ml[707,21141+24]..[707,21141+25])
                    Pexp_ident ">" (src/lr1.ml[707,21141+24]..[707,21141+25])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[707,21141+10]..[707,21141+23])
                        Pexp_apply
                        expression (src/lr1.ml[707,21141+10]..[707,21141+11])
                          Pexp_ident "!" (src/lr1.ml[707,21141+10]..[707,21141+11])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[707,21141+11]..[707,21141+23])
                              Pexp_ident "shift_reduce" (src/lr1.ml[707,21141+11]..[707,21141+23])
                        ]
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[707,21141+26]..[707,21141+27])
                        Pexp_constant PConst_int (1,None)
                  ]
                expression (src/lr1.ml[708,21174+4]..[709,21244+19])
                  Pexp_apply
                  expression (src/lr1.ml[708,21174+4]..[708,21174+25])
                    Pexp_ident "Error.grammar_warning" (src/lr1.ml[708,21174+4]..[708,21174+25])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[708,21174+26]..[708,21174+28])
                        Pexp_construct "[]" (src/lr1.ml[708,21174+26]..[708,21174+28])
                        None
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[708,21174+29]..[708,21174+69])
                        Pexp_constant PConst_string("%d states have shift/reduce conflicts.",(src/lr1.ml[708,21174+30]..[708,21174+68]),None)
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[709,21244+6]..[709,21244+19])
                        Pexp_apply
                        expression (src/lr1.ml[709,21244+6]..[709,21244+7])
                          Pexp_ident "!" (src/lr1.ml[709,21244+6]..[709,21244+7])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[709,21244+7]..[709,21244+19])
                              Pexp_ident "shift_reduce" (src/lr1.ml[709,21244+7]..[709,21244+19])
                        ]
                  ]
                None
          expression (src/lr1.ml[710,21265+2]..[714,21469+20])
            Pexp_ifthenelse
            expression (src/lr1.ml[710,21265+5]..[710,21265+23])
              Pexp_apply
              expression (src/lr1.ml[710,21265+20]..[710,21265+21])
                Pexp_ident "=" (src/lr1.ml[710,21265+20]..[710,21265+21])
              [
                <arg>
                Nolabel
                  expression (src/lr1.ml[710,21265+5]..[710,21265+19])
                    Pexp_apply
                    expression (src/lr1.ml[710,21265+5]..[710,21265+6])
                      Pexp_ident "!" (src/lr1.ml[710,21265+5]..[710,21265+6])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[710,21265+6]..[710,21265+19])
                          Pexp_ident "reduce_reduce" (src/lr1.ml[710,21265+6]..[710,21265+19])
                    ]
                <arg>
                Nolabel
                  expression (src/lr1.ml[710,21265+22]..[710,21265+23])
                    Pexp_constant PConst_int (1,None)
              ]
            expression (src/lr1.ml[711,21294+4]..[711,21294+69])
              Pexp_apply
              expression (src/lr1.ml[711,21294+4]..[711,21294+25])
                Pexp_ident "Error.grammar_warning" (src/lr1.ml[711,21294+4]..[711,21294+25])
              [
                <arg>
                Nolabel
                  expression (src/lr1.ml[711,21294+26]..[711,21294+28])
                    Pexp_construct "[]" (src/lr1.ml[711,21294+26]..[711,21294+28])
                    None
                <arg>
                Nolabel
                  expression (src/lr1.ml[711,21294+29]..[711,21294+69])
                    Pexp_constant PConst_string("one state has reduce/reduce conflicts.",(src/lr1.ml[711,21294+30]..[711,21294+68]),None)
              ]
            Some
              expression (src/lr1.ml[712,21364+7]..[714,21469+20])
                Pexp_ifthenelse
                expression (src/lr1.ml[712,21364+10]..[712,21364+28])
                  Pexp_apply
                  expression (src/lr1.ml[712,21364+25]..[712,21364+26])
                    Pexp_ident ">" (src/lr1.ml[712,21364+25]..[712,21364+26])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[712,21364+10]..[712,21364+24])
                        Pexp_apply
                        expression (src/lr1.ml[712,21364+10]..[712,21364+11])
                          Pexp_ident "!" (src/lr1.ml[712,21364+10]..[712,21364+11])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[712,21364+11]..[712,21364+24])
                              Pexp_ident "reduce_reduce" (src/lr1.ml[712,21364+11]..[712,21364+24])
                        ]
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[712,21364+27]..[712,21364+28])
                        Pexp_constant PConst_int (1,None)
                  ]
                expression (src/lr1.ml[713,21398+4]..[714,21469+20])
                  Pexp_apply
                  expression (src/lr1.ml[713,21398+4]..[713,21398+25])
                    Pexp_ident "Error.grammar_warning" (src/lr1.ml[713,21398+4]..[713,21398+25])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[713,21398+26]..[713,21398+28])
                        Pexp_construct "[]" (src/lr1.ml[713,21398+26]..[713,21398+28])
                        None
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[713,21398+29]..[713,21398+70])
                        Pexp_constant PConst_string("%d states have reduce/reduce conflicts.",(src/lr1.ml[713,21398+30]..[713,21398+69]),None)
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[714,21469+6]..[714,21469+20])
                        Pexp_apply
                        expression (src/lr1.ml[714,21469+6]..[714,21469+7])
                          Pexp_ident "!" (src/lr1.ml[714,21469+6]..[714,21469+7])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[714,21469+7]..[714,21469+20])
                              Pexp_ident "reduce_reduce" (src/lr1.ml[714,21469+7]..[714,21469+20])
                        ]
                  ]
                None
    ]
  structure_item (src/lr1.ml[720,21628+0]..[723,21685+3])
    Pstr_module
    "Node" (src/lr1.ml[720,21628+7]..[720,21628+11])
      module_expr (src/lr1.ml[720,21628+14]..[723,21685+3])
        Pmod_structure
        [
          structure_item (src/lr1.ml[721,21649+2]..[721,21649+15])
            Pstr_type Rec
            [
              type_declaration "t" (src/lr1.ml[721,21649+7]..[721,21649+8]) (src/lr1.ml[721,21649+2]..[721,21649+15])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/lr1.ml[721,21649+11]..[721,21649+15])
                      Ptyp_constr "node" (src/lr1.ml[721,21649+11]..[721,21649+15])
                      []
            ]
          structure_item (src/lr1.ml[722,21665+2]..[722,21665+19])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/lr1.ml[722,21665+6]..[722,21665+13])
                  Ppat_var "compare" (src/lr1.ml[722,21665+6]..[722,21665+13])
                expression (src/lr1.ml[722,21665+16]..[722,21665+19])
                  Pexp_ident "-" (src/lr1.ml[722,21665+16]..[722,21665+19])
            ]
        ]
  structure_item (src/lr1.ml[725,21690+0]..[742,22111+3])
    Pstr_module
    "NodeSet" (src/lr1.ml[725,21690+7]..[725,21690+14])
      module_expr (src/lr1.ml[725,21690+17]..[742,22111+3])
        Pmod_structure
        [
          structure_item (src/lr1.ml[727,21715+2]..[727,21715+24])
            Pstr_include            module_expr (src/lr1.ml[727,21715+10]..[727,21715+24])
              Pmod_apply
              module_expr (src/lr1.ml[727,21715+10]..[727,21715+18])
                Pmod_ident "Set.Make" (src/lr1.ml[727,21715+10]..[727,21715+18])
              module_expr (src/lr1.ml[727,21715+19]..[727,21715+23])
                Pmod_ident "Node" (src/lr1.ml[727,21715+19]..[727,21715+23])
          structure_item (src/lr1.ml[734,21922+2]..[735,21945+44])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/lr1.ml[734,21922+6]..[734,21922+14])
                  Ppat_var "leq_join" (src/lr1.ml[734,21922+6]..[734,21922+14])
                expression (src/lr1.ml[734,21922+15]..[735,21945+44]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/lr1.ml[734,21922+15]..[734,21922+17])
                    Ppat_var "s1" (src/lr1.ml[734,21922+15]..[734,21922+17])
                  expression (src/lr1.ml[734,21922+18]..[735,21945+44]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/lr1.ml[734,21922+18]..[734,21922+20])
                      Ppat_var "s2" (src/lr1.ml[734,21922+18]..[734,21922+20])
                    expression (src/lr1.ml[735,21945+4]..[735,21945+44])
                      Pexp_ifthenelse
                      expression (src/lr1.ml[735,21945+7]..[735,21945+19])
                        Pexp_apply
                        expression (src/lr1.ml[735,21945+7]..[735,21945+13])
                          Pexp_ident "subset" (src/lr1.ml[735,21945+7]..[735,21945+13])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[735,21945+14]..[735,21945+16])
                              Pexp_ident "s1" (src/lr1.ml[735,21945+14]..[735,21945+16])
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[735,21945+17]..[735,21945+19])
                              Pexp_ident "s2" (src/lr1.ml[735,21945+17]..[735,21945+19])
                        ]
                      expression (src/lr1.ml[735,21945+25]..[735,21945+27])
                        Pexp_ident "s2" (src/lr1.ml[735,21945+25]..[735,21945+27])
                      Some
                        expression (src/lr1.ml[735,21945+33]..[735,21945+44])
                          Pexp_apply
                          expression (src/lr1.ml[735,21945+33]..[735,21945+38])
                            Pexp_ident "union" (src/lr1.ml[735,21945+33]..[735,21945+38])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[735,21945+39]..[735,21945+41])
                                Pexp_ident "s1" (src/lr1.ml[735,21945+39]..[735,21945+41])
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[735,21945+42]..[735,21945+44])
                                Pexp_ident "s2" (src/lr1.ml[735,21945+42]..[735,21945+44])
                          ]
            ]
          structure_item (src/lr1.ml[737,21991+2]..[740,22104+5])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/lr1.ml[737,21991+6]..[737,21991+11])
                  Ppat_var "print" (src/lr1.ml[737,21991+6]..[737,21991+11])
                expression (src/lr1.ml[737,21991+12]..[740,22104+5]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/lr1.ml[737,21991+12]..[737,21991+13])
                    Ppat_var "s" (src/lr1.ml[737,21991+12]..[737,21991+13])
                  expression (src/lr1.ml[738,22007+4]..[740,22104+5])
                    Pexp_apply
                    expression (src/lr1.ml[738,22007+4]..[738,22007+18])
                      Pexp_ident "Printf.sprintf" (src/lr1.ml[738,22007+4]..[738,22007+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[738,22007+19]..[738,22007+27])
                          Pexp_constant PConst_string("{ %s }",(src/lr1.ml[738,22007+20]..[738,22007+26]),None)
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[738,22007+28]..[740,22104+5])
                          Pexp_apply
                          expression (src/lr1.ml[739,22037+6]..[739,22037+35])
                            Pexp_ident "Misc.separated_iter_to_string" (src/lr1.ml[739,22037+6]..[739,22037+35])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[739,22037+36]..[739,22037+41])
                                Pexp_ident "print" (src/lr1.ml[739,22037+36]..[739,22037+41])
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[739,22037+42]..[739,22037+46])
                                Pexp_constant PConst_string(", ",(src/lr1.ml[739,22037+43]..[739,22037+45]),None)
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[739,22037+47]..[739,22037+66])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/lr1.ml[739,22037+52]..[739,22037+53])
                                  Ppat_var "f" (src/lr1.ml[739,22037+52]..[739,22037+53])
                                expression (src/lr1.ml[739,22037+57]..[739,22037+65])
                                  Pexp_apply
                                  expression (src/lr1.ml[739,22037+57]..[739,22037+61])
                                    Pexp_ident "iter" (src/lr1.ml[739,22037+57]..[739,22037+61])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[739,22037+62]..[739,22037+63])
                                        Pexp_ident "f" (src/lr1.ml[739,22037+62]..[739,22037+63])
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[739,22037+64]..[739,22037+65])
                                        Pexp_ident "s" (src/lr1.ml[739,22037+64]..[739,22037+65])
                                  ]
                          ]
                    ]
            ]
        ]
  structure_item (src/lr1.ml[744,22116+0]..[745,22133+16])
    Pstr_module
    "NodeMap" (src/lr1.ml[744,22116+7]..[744,22116+14])
      module_expr (src/lr1.ml[745,22133+2]..[745,22133+16])
        Pmod_apply
        module_expr (src/lr1.ml[745,22133+2]..[745,22133+10])
          Pmod_ident "Map.Make" (src/lr1.ml[745,22133+2]..[745,22133+10])
        module_expr (src/lr1.ml[745,22133+11]..[745,22133+15])
          Pmod_ident "Node" (src/lr1.ml[745,22133+11]..[745,22133+15])
  structure_item (src/lr1.ml[747,22151+0]..[748,22178+55])
    Pstr_module
    "ImperativeNodeMap" (src/lr1.ml[747,22151+7]..[747,22151+24])
      module_expr (src/lr1.ml[748,22178+2]..[748,22178+55])
        Pmod_apply
        module_expr (src/lr1.ml[748,22178+2]..[748,22178+33])
          Pmod_ident "Fix.Glue.ArraysAsImperativeMaps" (src/lr1.ml[748,22178+2]..[748,22178+33])
        module_expr (src/lr1.ml[748,22178+34]..[748,22178+54])
          Pmod_structure
          [
            structure_item (src/lr1.ml[748,22178+41]..[748,22178+50])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/lr1.ml[748,22178+45]..[748,22178+46])
                    Ppat_var "n" (src/lr1.ml[748,22178+45]..[748,22178+46])
                  expression (src/lr1.ml[748,22178+49]..[748,22178+50])
                    Pexp_ident "n" (src/lr1.ml[748,22178+49]..[748,22178+50])
              ]
          ]
  structure_item (src/lr1.ml[750,22235+0]..[753,22376+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[750,22235+4]..[750,22235+15])
          Ppat_var "all_sources" (src/lr1.ml[750,22235+4]..[750,22235+15])
        expression (src/lr1.ml[750,22235+16]..[753,22376+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[750,22235+16]..[750,22235+22])
            Ppat_var "symbol" (src/lr1.ml[750,22235+16]..[750,22235+22])
          expression (src/lr1.ml[751,22260+2]..[753,22376+24])
            Pexp_apply
            expression (src/lr1.ml[751,22260+2]..[751,22260+9])
              Pexp_ident "targets" (src/lr1.ml[751,22260+2]..[751,22260+9])
            [
              <arg>
              Nolabel
                expression (src/lr1.ml[751,22260+10]..[753,22376+3])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/lr1.ml[751,22260+15]..[751,22260+19])
                    Ppat_var "accu" (src/lr1.ml[751,22260+15]..[751,22260+19])
                  expression (src/lr1.ml[751,22260+20]..[752,22299+76]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/lr1.ml[751,22260+20]..[751,22260+27])
                      Ppat_var "sources" (src/lr1.ml[751,22260+20]..[751,22260+27])
                    expression (src/lr1.ml[751,22260+28]..[752,22299+76]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/lr1.ml[751,22260+28]..[751,22260+35])
                        Ppat_var "_target" (src/lr1.ml[751,22260+28]..[751,22260+35])
                      expression (src/lr1.ml[752,22299+4]..[752,22299+76])
                        Pexp_apply
                        expression (src/lr1.ml[752,22299+4]..[752,22299+18])
                          Pexp_ident "List.fold_left" (src/lr1.ml[752,22299+4]..[752,22299+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[752,22299+19]..[752,22299+63])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/lr1.ml[752,22299+24]..[752,22299+28])
                                Ppat_var "accu" (src/lr1.ml[752,22299+24]..[752,22299+28])
                              expression (src/lr1.ml[752,22299+29]..[752,22299+62]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/lr1.ml[752,22299+29]..[752,22299+35])
                                  Ppat_var "source" (src/lr1.ml[752,22299+29]..[752,22299+35])
                                expression (src/lr1.ml[752,22299+39]..[752,22299+62])
                                  Pexp_apply
                                  expression (src/lr1.ml[752,22299+39]..[752,22299+50])
                                    Pexp_ident "NodeSet.add" (src/lr1.ml[752,22299+39]..[752,22299+50])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[752,22299+51]..[752,22299+57])
                                        Pexp_ident "source" (src/lr1.ml[752,22299+51]..[752,22299+57])
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[752,22299+58]..[752,22299+62])
                                        Pexp_ident "accu" (src/lr1.ml[752,22299+58]..[752,22299+62])
                                  ]
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[752,22299+64]..[752,22299+68])
                              Pexp_ident "accu" (src/lr1.ml[752,22299+64]..[752,22299+68])
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[752,22299+69]..[752,22299+76])
                              Pexp_ident "sources" (src/lr1.ml[752,22299+69]..[752,22299+76])
                        ]
              <arg>
              Nolabel
                expression (src/lr1.ml[753,22376+4]..[753,22376+17])
                  Pexp_ident "NodeSet.empty" (src/lr1.ml[753,22376+4]..[753,22376+17])
              <arg>
              Nolabel
                expression (src/lr1.ml[753,22376+18]..[753,22376+24])
                  Pexp_ident "symbol" (src/lr1.ml[753,22376+18]..[753,22376+24])
            ]
    ]
  structure_item (src/lr1.ml[755,22402+0]..[758,22494+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[755,22402+4]..[755,22402+15])
          Ppat_var "all_targets" (src/lr1.ml[755,22402+4]..[755,22402+15])
        expression (src/lr1.ml[755,22402+16]..[758,22494+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[755,22402+16]..[755,22402+22])
            Ppat_var "symbol" (src/lr1.ml[755,22402+16]..[755,22402+22])
          expression (src/lr1.ml[756,22427+2]..[758,22494+24])
            Pexp_apply
            expression (src/lr1.ml[756,22427+2]..[756,22427+9])
              Pexp_ident "targets" (src/lr1.ml[756,22427+2]..[756,22427+9])
            [
              <arg>
              Nolabel
                expression (src/lr1.ml[756,22427+10]..[758,22494+3])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/lr1.ml[756,22427+15]..[756,22427+19])
                    Ppat_var "accu" (src/lr1.ml[756,22427+15]..[756,22427+19])
                  expression (src/lr1.ml[756,22427+20]..[757,22466+27]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/lr1.ml[756,22427+20]..[756,22427+28])
                      Ppat_var "_sources" (src/lr1.ml[756,22427+20]..[756,22427+28])
                    expression (src/lr1.ml[756,22427+29]..[757,22466+27]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/lr1.ml[756,22427+29]..[756,22427+35])
                        Ppat_var "target" (src/lr1.ml[756,22427+29]..[756,22427+35])
                      expression (src/lr1.ml[757,22466+4]..[757,22466+27])
                        Pexp_apply
                        expression (src/lr1.ml[757,22466+4]..[757,22466+15])
                          Pexp_ident "NodeSet.add" (src/lr1.ml[757,22466+4]..[757,22466+15])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[757,22466+16]..[757,22466+22])
                              Pexp_ident "target" (src/lr1.ml[757,22466+16]..[757,22466+22])
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[757,22466+23]..[757,22466+27])
                              Pexp_ident "accu" (src/lr1.ml[757,22466+23]..[757,22466+27])
                        ]
              <arg>
              Nolabel
                expression (src/lr1.ml[758,22494+4]..[758,22494+17])
                  Pexp_ident "NodeSet.empty" (src/lr1.ml[758,22494+4]..[758,22494+17])
              <arg>
              Nolabel
                expression (src/lr1.ml[758,22494+18]..[758,22494+24])
                  Pexp_ident "symbol" (src/lr1.ml[758,22494+18]..[758,22494+24])
            ]
    ]
  structure_item (src/lr1.ml[767,22900+0]..[768,22962+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[767,22900+4]..[767,22900+20])
          Ppat_var "production_where" (src/lr1.ml[767,22900+4]..[767,22900+20])
        core_type (src/lr1.ml[767,22900+23]..[767,22900+59])
          Ptyp_constr "ref" (src/lr1.ml[767,22900+56]..[767,22900+59])
          [
            core_type (src/lr1.ml[767,22900+23]..[767,22900+55])
              Ptyp_constr "option" (src/lr1.ml[767,22900+49]..[767,22900+55])
              [
                core_type (src/lr1.ml[767,22900+23]..[767,22900+48])
                  Ptyp_constr "ProductionMap.t" (src/lr1.ml[767,22900+33]..[767,22900+48])
                  [
                    core_type (src/lr1.ml[767,22900+23]..[767,22900+32])
                      Ptyp_constr "NodeSet.t" (src/lr1.ml[767,22900+23]..[767,22900+32])
                      []
                  ]
              ]
          ]
        expression (src/lr1.ml[768,22962+2]..[768,22962+10])
          Pexp_apply
          expression (src/lr1.ml[768,22962+2]..[768,22962+5])
            Pexp_ident "ref" (src/lr1.ml[768,22962+2]..[768,22962+5])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[768,22962+6]..[768,22962+10])
                Pexp_construct "None" (src/lr1.ml[768,22962+6]..[768,22962+10])
                None
          ]
    ]
  structure_item (src/lr1.ml[770,22974+0]..[784,23411+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[770,22974+4]..[770,22974+31])
          Ppat_var "initialize_production_where" (src/lr1.ml[770,22974+4]..[770,22974+31])
        expression (src/lr1.ml[770,22974+32]..[784,23411+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[770,22974+32]..[770,22974+34])
            Ppat_construct "()" (src/lr1.ml[770,22974+32]..[770,22974+34])
            None
          expression (src/lr1.ml[771,23011+2]..[784,23411+3])
            Pexp_apply
            expression (src/lr1.ml[771,23011+19]..[771,23011+21])
              Pexp_ident ":=" (src/lr1.ml[771,23011+19]..[771,23011+21])
            [
              <arg>
              Nolabel
                expression (src/lr1.ml[771,23011+2]..[771,23011+18])
                  Pexp_ident "production_where" (src/lr1.ml[771,23011+2]..[771,23011+18])
              <arg>
              Nolabel
                expression (src/lr1.ml[771,23011+22]..[784,23411+3])
                  Pexp_construct "Some" (src/lr1.ml[771,23011+22]..[771,23011+26])
                  Some
                    expression (src/lr1.ml[771,23011+27]..[784,23411+3])
                      Pexp_apply
                      expression (src/lr1.ml[772,23040+4]..[772,23040+8])
                        Pexp_ident "fold" (src/lr1.ml[772,23040+4]..[772,23040+8])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[772,23040+9]..[783,23385+5])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/lr1.ml[772,23040+14]..[772,23040+18])
                              Ppat_var "accu" (src/lr1.ml[772,23040+14]..[772,23040+18])
                            expression (src/lr1.ml[772,23040+19]..[782,23354+30]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/lr1.ml[772,23040+19]..[772,23040+23])
                                Ppat_var "node" (src/lr1.ml[772,23040+19]..[772,23040+23])
                              expression (src/lr1.ml[773,23067+6]..[782,23354+30])
                                Pexp_apply
                                expression (src/lr1.ml[773,23067+6]..[773,23067+22])
                                  Pexp_ident "TerminalMap.fold" (src/lr1.ml[773,23067+6]..[773,23067+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[773,23067+23]..[782,23354+7])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (src/lr1.ml[773,23067+28]..[773,23067+29])
                                        Ppat_any
                                      expression (src/lr1.ml[773,23067+30]..[781,23293+60]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/lr1.ml[773,23067+30]..[773,23067+35])
                                          Ppat_var "prods" (src/lr1.ml[773,23067+30]..[773,23067+35])
                                        expression (src/lr1.ml[773,23067+36]..[781,23293+60]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (src/lr1.ml[773,23067+36]..[773,23067+40])
                                            Ppat_var "accu" (src/lr1.ml[773,23067+36]..[773,23067+40])
                                          expression (src/lr1.ml[774,23111+8]..[781,23293+60])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/lr1.ml[774,23111+12]..[774,23111+16])
                                                  Ppat_var "prod" (src/lr1.ml[774,23111+12]..[774,23111+16])
                                                expression (src/lr1.ml[774,23111+19]..[774,23111+36])
                                                  Pexp_apply
                                                  expression (src/lr1.ml[774,23111+19]..[774,23111+30])
                                                    Pexp_ident "Misc.single" (src/lr1.ml[774,23111+19]..[774,23111+30])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/lr1.ml[774,23111+31]..[774,23111+36])
                                                        Pexp_ident "prods" (src/lr1.ml[774,23111+31]..[774,23111+36])
                                                  ]
                                            ]
                                            expression (src/lr1.ml[775,23151+8]..[781,23293+60])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/lr1.ml[775,23151+12]..[775,23151+17])
                                                    Ppat_var "nodes" (src/lr1.ml[775,23151+12]..[775,23151+17])
                                                  expression (src/lr1.ml[776,23171+10]..[779,23256+25])
                                                    Pexp_try
                                                    expression (src/lr1.ml[777,23185+12]..[777,23185+42])
                                                      Pexp_apply
                                                      expression (src/lr1.ml[777,23185+12]..[777,23185+32])
                                                        Pexp_ident "ProductionMap.lookup" (src/lr1.ml[777,23185+12]..[777,23185+32])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/lr1.ml[777,23185+33]..[777,23185+37])
                                                            Pexp_ident "prod" (src/lr1.ml[777,23185+33]..[777,23185+37])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/lr1.ml[777,23185+38]..[777,23185+42])
                                                            Pexp_ident "accu" (src/lr1.ml[777,23185+38]..[777,23185+42])
                                                      ]
                                                    [
                                                      <case>
                                                        pattern (src/lr1.ml[778,23228+15]..[778,23228+24])
                                                          Ppat_construct "Not_found" (src/lr1.ml[778,23228+15]..[778,23228+24])
                                                          None
                                                        expression (src/lr1.ml[779,23256+12]..[779,23256+25])
                                                          Pexp_ident "NodeSet.empty" (src/lr1.ml[779,23256+12]..[779,23256+25])
                                                    ]
                                              ]
                                              expression (src/lr1.ml[781,23293+8]..[781,23293+60])
                                                Pexp_apply
                                                expression (src/lr1.ml[781,23293+8]..[781,23293+25])
                                                  Pexp_ident "ProductionMap.add" (src/lr1.ml[781,23293+8]..[781,23293+25])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/lr1.ml[781,23293+26]..[781,23293+30])
                                                      Pexp_ident "prod" (src/lr1.ml[781,23293+26]..[781,23293+30])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/lr1.ml[781,23293+31]..[781,23293+55])
                                                      Pexp_apply
                                                      expression (src/lr1.ml[781,23293+32]..[781,23293+43])
                                                        Pexp_ident "NodeSet.add" (src/lr1.ml[781,23293+32]..[781,23293+43])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/lr1.ml[781,23293+44]..[781,23293+48])
                                                            Pexp_ident "node" (src/lr1.ml[781,23293+44]..[781,23293+48])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/lr1.ml[781,23293+49]..[781,23293+54])
                                                            Pexp_ident "nodes" (src/lr1.ml[781,23293+49]..[781,23293+54])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (src/lr1.ml[781,23293+56]..[781,23293+60])
                                                      Pexp_ident "accu" (src/lr1.ml[781,23293+56]..[781,23293+60])
                                                ]
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[782,23354+8]..[782,23354+25])
                                      Pexp_apply
                                      expression (src/lr1.ml[782,23354+9]..[782,23354+19])
                                        Pexp_ident "reductions" (src/lr1.ml[782,23354+9]..[782,23354+19])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr1.ml[782,23354+20]..[782,23354+24])
                                            Pexp_ident "node" (src/lr1.ml[782,23354+20]..[782,23354+24])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[782,23354+26]..[782,23354+30])
                                      Pexp_ident "accu" (src/lr1.ml[782,23354+26]..[782,23354+30])
                                ]
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[783,23385+6]..[783,23385+25])
                            Pexp_ident "ProductionMap.empty" (src/lr1.ml[783,23385+6]..[783,23385+25])
                      ]
            ]
    ]
  structure_item (src/lr1.ml[786,23416+0]..[799,23919+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[786,23416+4]..[786,23416+20])
          Ppat_var "production_where" (src/lr1.ml[786,23416+4]..[786,23416+20])
        expression (src/lr1.ml[786,23416+21]..[799,23919+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[786,23416+21]..[786,23416+46])
            Ppat_constraint
            pattern (src/lr1.ml[786,23416+22]..[786,23416+26])
              Ppat_var "prod" (src/lr1.ml[786,23416+22]..[786,23416+26])
            core_type (src/lr1.ml[786,23416+29]..[786,23416+45])
              Ptyp_constr "Production.index" (src/lr1.ml[786,23416+29]..[786,23416+45])
              []
          expression (src/lr1.ml[786,23416+47]..[799,23919+21])
            Pexp_constraint
            expression (src/lr1.ml[787,23477+2]..[799,23919+21])
              Pexp_match
              expression (src/lr1.ml[787,23477+8]..[787,23477+25])
                Pexp_apply
                expression (src/lr1.ml[787,23477+8]..[787,23477+9])
                  Pexp_ident "!" (src/lr1.ml[787,23477+8]..[787,23477+9])
                [
                  <arg>
                  Nolabel
                    expression (src/lr1.ml[787,23477+9]..[787,23477+25])
                      Pexp_ident "production_where" (src/lr1.ml[787,23477+9]..[787,23477+25])
                ]
              [
                <case>
                  pattern (src/lr1.ml[788,23508+4]..[788,23508+8])
                    Ppat_construct "None" (src/lr1.ml[788,23508+4]..[788,23508+8])
                    None
                  expression (src/lr1.ml[790,23597+6]..[790,23597+18])
                    Pexp_assert
                    expression (src/lr1.ml[790,23597+13]..[790,23597+18])
                      Pexp_construct "false" (src/lr1.ml[790,23597+13]..[790,23597+18])
                      None
                <case>
                  pattern (src/lr1.ml[791,23616+4]..[791,23616+25])
                    Ppat_construct "Some" (src/lr1.ml[791,23616+4]..[791,23616+8])
                    Some
                      []
                      pattern (src/lr1.ml[791,23616+9]..[791,23616+25])
                        Ppat_var "production_where" (src/lr1.ml[791,23616+9]..[791,23616+25])
                  expression (src/lr1.ml[792,23645+6]..[799,23919+21])
                    Pexp_try
                    expression (src/lr1.ml[794,23714+8]..[796,23827+13])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/lr1.ml[794,23714+12]..[794,23714+17])
                            Ppat_var "nodes" (src/lr1.ml[794,23714+12]..[794,23714+17])
                          expression (src/lr1.ml[794,23714+20]..[794,23714+62])
                            Pexp_apply
                            expression (src/lr1.ml[794,23714+20]..[794,23714+40])
                              Pexp_ident "ProductionMap.lookup" (src/lr1.ml[794,23714+20]..[794,23714+40])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[794,23714+41]..[794,23714+45])
                                  Pexp_ident "prod" (src/lr1.ml[794,23714+41]..[794,23714+45])
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[794,23714+46]..[794,23714+62])
                                  Pexp_ident "production_where" (src/lr1.ml[794,23714+46]..[794,23714+62])
                            ]
                      ]
                      expression (src/lr1.ml[795,23780+8]..[796,23827+13])
                        Pexp_sequence
                        expression (src/lr1.ml[795,23780+8]..[795,23780+45])
                          Pexp_assert
                          expression (src/lr1.ml[795,23780+15]..[795,23780+45])
                            Pexp_apply
                            expression (src/lr1.ml[795,23780+16]..[795,23780+19])
                              Pexp_ident "not" (src/lr1.ml[795,23780+16]..[795,23780+19])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[795,23780+20]..[795,23780+44])
                                  Pexp_apply
                                  expression (src/lr1.ml[795,23780+21]..[795,23780+37])
                                    Pexp_ident "NodeSet.is_empty" (src/lr1.ml[795,23780+21]..[795,23780+37])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[795,23780+38]..[795,23780+43])
                                        Pexp_ident "nodes" (src/lr1.ml[795,23780+38]..[795,23780+43])
                                  ]
                            ]
                        expression (src/lr1.ml[796,23827+8]..[796,23827+13])
                          Pexp_ident "nodes" (src/lr1.ml[796,23827+8]..[796,23827+13])
                    [
                      <case>
                        pattern (src/lr1.ml[797,23841+11]..[797,23841+20])
                          Ppat_construct "Not_found" (src/lr1.ml[797,23841+11]..[797,23841+20])
                          None
                        expression (src/lr1.ml[799,23919+8]..[799,23919+21])
                          Pexp_ident "NodeSet.empty" (src/lr1.ml[799,23919+8]..[799,23919+21])
                    ]
              ]
            core_type (src/lr1.ml[786,23416+49]..[786,23416+58])
              Ptyp_constr "NodeSet.t" (src/lr1.ml[786,23416+49]..[786,23416+58])
              []
    ]
  structure_item (src/lr1.ml[811,24517+0]..[830,25208+73])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[811,24517+4]..[811,24517+40])
          Ppat_var "warn_about_productions_never_reduced" (src/lr1.ml[811,24517+4]..[811,24517+40])
        expression (src/lr1.ml[811,24517+41]..[830,25208+73]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[811,24517+41]..[811,24517+43])
            Ppat_construct "()" (src/lr1.ml[811,24517+41]..[811,24517+43])
            None
          expression (src/lr1.ml[812,24563+2]..[830,25208+73])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/lr1.ml[812,24563+6]..[812,24563+11])
                  Ppat_var "count" (src/lr1.ml[812,24563+6]..[812,24563+11])
                expression (src/lr1.ml[812,24563+14]..[812,24563+19])
                  Pexp_apply
                  expression (src/lr1.ml[812,24563+14]..[812,24563+17])
                    Pexp_ident "ref" (src/lr1.ml[812,24563+14]..[812,24563+17])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[812,24563+18]..[812,24563+19])
                        Pexp_constant PConst_int (0,None)
                  ]
            ]
            expression (src/lr1.ml[813,24586+2]..[830,25208+73])
              Pexp_sequence
              expression (src/lr1.ml[813,24586+2]..[826,25076+3])
                Pexp_apply
                expression (src/lr1.ml[813,24586+2]..[813,24586+17])
                  Pexp_ident "Production.iter" (src/lr1.ml[813,24586+2]..[813,24586+17])
                [
                  <arg>
                  Nolabel
                    expression (src/lr1.ml[813,24586+18]..[826,25076+3])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/lr1.ml[813,24586+23]..[813,24586+27])
                        Ppat_var "prod" (src/lr1.ml[813,24586+23]..[813,24586+27])
                      expression (src/lr1.ml[814,24617+4]..[825,25006+69])
                        Pexp_ifthenelse
                        expression (src/lr1.ml[814,24617+7]..[814,24617+47])
                          Pexp_apply
                          expression (src/lr1.ml[814,24617+7]..[814,24617+23])
                            Pexp_ident "NodeSet.is_empty" (src/lr1.ml[814,24617+7]..[814,24617+23])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[814,24617+24]..[814,24617+47])
                                Pexp_apply
                                expression (src/lr1.ml[814,24617+25]..[814,24617+41])
                                  Pexp_ident "production_where" (src/lr1.ml[814,24617+25]..[814,24617+41])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[814,24617+42]..[814,24617+46])
                                      Pexp_ident "prod" (src/lr1.ml[814,24617+42]..[814,24617+46])
                                ]
                          ]
                        expression (src/lr1.ml[815,24670+6]..[825,25006+69])
                          Pexp_match
                          expression (src/lr1.ml[815,24670+12]..[815,24670+36])
                            Pexp_apply
                            expression (src/lr1.ml[815,24670+12]..[815,24670+31])
                              Pexp_ident "Production.classify" (src/lr1.ml[815,24670+12]..[815,24670+31])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[815,24670+32]..[815,24670+36])
                                  Pexp_ident "prod" (src/lr1.ml[815,24670+32]..[815,24670+36])
                            ]
                          [
                            <case>
                              pattern (src/lr1.ml[816,24712+8]..[816,24712+15])
                                Ppat_construct "Some" (src/lr1.ml[816,24712+8]..[816,24712+12])
                                Some
                                  []
                                  pattern (src/lr1.ml[816,24712+13]..[816,24712+15])
                                    Ppat_var "nt" (src/lr1.ml[816,24712+13]..[816,24712+15])
                              expression (src/lr1.ml[817,24731+10]..[820,24824+71])
                                Pexp_sequence
                                expression (src/lr1.ml[817,24731+10]..[817,24731+20])
                                  Pexp_apply
                                  expression (src/lr1.ml[817,24731+10]..[817,24731+14])
                                    Pexp_ident "incr" (src/lr1.ml[817,24731+10]..[817,24731+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[817,24731+15]..[817,24731+20])
                                        Pexp_ident "count" (src/lr1.ml[817,24731+15]..[817,24731+20])
                                  ]
                                expression (src/lr1.ml[818,24753+10]..[820,24824+71])
                                  Pexp_apply
                                  expression (src/lr1.ml[818,24753+10]..[818,24753+31])
                                    Pexp_ident "Error.grammar_warning" (src/lr1.ml[818,24753+10]..[818,24753+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[819,24785+12]..[819,24785+38])
                                        Pexp_apply
                                        expression (src/lr1.ml[819,24785+13]..[819,24785+34])
                                          Pexp_ident "Nonterminal.positions" (src/lr1.ml[819,24785+13]..[819,24785+34])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/lr1.ml[819,24785+35]..[819,24785+37])
                                              Pexp_ident "nt" (src/lr1.ml[819,24785+35]..[819,24785+37])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[820,24824+12]..[820,24824+42])
                                        Pexp_constant PConst_string("symbol %s is never accepted.",(src/lr1.ml[820,24824+13]..[820,24824+41]),None)
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[820,24824+43]..[820,24824+71])
                                        Pexp_apply
                                        expression (src/lr1.ml[820,24824+44]..[820,24824+61])
                                          Pexp_ident "Nonterminal.print" (src/lr1.ml[820,24824+44]..[820,24824+61])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/lr1.ml[820,24824+62]..[820,24824+67])
                                              Pexp_construct "false" (src/lr1.ml[820,24824+62]..[820,24824+67])
                                              None
                                          <arg>
                                          Nolabel
                                            expression (src/lr1.ml[820,24824+68]..[820,24824+70])
                                              Pexp_ident "nt" (src/lr1.ml[820,24824+68]..[820,24824+70])
                                        ]
                                  ]
                            <case>
                              pattern (src/lr1.ml[821,24896+8]..[821,24896+12])
                                Ppat_construct "None" (src/lr1.ml[821,24896+8]..[821,24896+12])
                                None
                              expression (src/lr1.ml[822,24912+10]..[825,25006+69])
                                Pexp_sequence
                                expression (src/lr1.ml[822,24912+10]..[822,24912+20])
                                  Pexp_apply
                                  expression (src/lr1.ml[822,24912+10]..[822,24912+14])
                                    Pexp_ident "incr" (src/lr1.ml[822,24912+10]..[822,24912+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[822,24912+15]..[822,24912+20])
                                        Pexp_ident "count" (src/lr1.ml[822,24912+15]..[822,24912+20])
                                  ]
                                expression (src/lr1.ml[823,24934+10]..[825,25006+69])
                                  Pexp_apply
                                  expression (src/lr1.ml[823,24934+10]..[823,24934+31])
                                    Pexp_ident "Error.grammar_warning" (src/lr1.ml[823,24934+10]..[823,24934+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[824,24966+12]..[824,24966+39])
                                        Pexp_apply
                                        expression (src/lr1.ml[824,24966+13]..[824,24966+33])
                                          Pexp_ident "Production.positions" (src/lr1.ml[824,24966+13]..[824,24966+33])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/lr1.ml[824,24966+34]..[824,24966+38])
                                              Pexp_ident "prod" (src/lr1.ml[824,24966+34]..[824,24966+38])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[825,25006+12]..[825,25006+45])
                                        Pexp_constant PConst_string("production %s is never reduced.",(src/lr1.ml[825,25006+13]..[825,25006+44]),None)
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[825,25006+46]..[825,25006+69])
                                        Pexp_apply
                                        expression (src/lr1.ml[825,25006+47]..[825,25006+63])
                                          Pexp_ident "Production.print" (src/lr1.ml[825,25006+47]..[825,25006+63])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/lr1.ml[825,25006+64]..[825,25006+68])
                                              Pexp_ident "prod" (src/lr1.ml[825,25006+64]..[825,25006+68])
                                        ]
                                  ]
                          ]
                        None
                ]
              expression (src/lr1.ml[827,25081+2]..[830,25208+73])
                Pexp_ifthenelse
                expression (src/lr1.ml[827,25081+5]..[827,25081+15])
                  Pexp_apply
                  expression (src/lr1.ml[827,25081+12]..[827,25081+13])
                    Pexp_ident ">" (src/lr1.ml[827,25081+12]..[827,25081+13])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[827,25081+5]..[827,25081+11])
                        Pexp_apply
                        expression (src/lr1.ml[827,25081+5]..[827,25081+6])
                          Pexp_ident "!" (src/lr1.ml[827,25081+5]..[827,25081+6])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[827,25081+6]..[827,25081+11])
                              Pexp_ident "count" (src/lr1.ml[827,25081+6]..[827,25081+11])
                        ]
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[827,25081+14]..[827,25081+15])
                        Pexp_constant PConst_int (0,None)
                  ]
                expression (src/lr1.ml[828,25102+4]..[830,25208+73])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/lr1.ml[828,25102+8]..[828,25102+23])
                        Ppat_tuple
                        [
                          pattern (src/lr1.ml[828,25102+8]..[828,25102+19])
                            Ppat_var "plural_mark" (src/lr1.ml[828,25102+8]..[828,25102+19])
                          pattern (src/lr1.ml[828,25102+21]..[828,25102+23])
                            Ppat_var "be" (src/lr1.ml[828,25102+21]..[828,25102+23])
                        ]
                      expression (src/lr1.ml[828,25102+26]..[828,25102+73])
                        Pexp_ifthenelse
                        expression (src/lr1.ml[828,25102+29]..[828,25102+39])
                          Pexp_apply
                          expression (src/lr1.ml[828,25102+36]..[828,25102+37])
                            Pexp_ident ">" (src/lr1.ml[828,25102+36]..[828,25102+37])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[828,25102+29]..[828,25102+35])
                                Pexp_apply
                                expression (src/lr1.ml[828,25102+29]..[828,25102+30])
                                  Pexp_ident "!" (src/lr1.ml[828,25102+29]..[828,25102+30])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[828,25102+30]..[828,25102+35])
                                      Pexp_ident "count" (src/lr1.ml[828,25102+30]..[828,25102+35])
                                ]
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[828,25102+38]..[828,25102+39])
                                Pexp_constant PConst_int (1,None)
                          ]
                        expression (src/lr1.ml[828,25102+45]..[828,25102+57])
                          Pexp_tuple
                          [
                            expression (src/lr1.ml[828,25102+46]..[828,25102+49])
                              Pexp_constant PConst_string("s",(src/lr1.ml[828,25102+47]..[828,25102+48]),None)
                            expression (src/lr1.ml[828,25102+51]..[828,25102+56])
                              Pexp_constant PConst_string("are",(src/lr1.ml[828,25102+52]..[828,25102+55]),None)
                          ]
                        Some
                          expression (src/lr1.ml[828,25102+63]..[828,25102+73])
                            Pexp_tuple
                            [
                              expression (src/lr1.ml[828,25102+64]..[828,25102+66])
                                Pexp_constant PConst_string("",(src/lr1.ml[828,25102+65]..[828,25102+65]),None)
                              expression (src/lr1.ml[828,25102+68]..[828,25102+72])
                                Pexp_constant PConst_string("is",(src/lr1.ml[828,25102+69]..[828,25102+71]),None)
                            ]
                  ]
                  expression (src/lr1.ml[829,25179+4]..[830,25208+73])
                    Pexp_apply
                    expression (src/lr1.ml[829,25179+4]..[829,25179+25])
                      Pexp_ident "Error.grammar_warning" (src/lr1.ml[829,25179+4]..[829,25179+25])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[829,25179+26]..[829,25179+28])
                          Pexp_construct "[]" (src/lr1.ml[829,25179+26]..[829,25179+28])
                          None
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[830,25208+6]..[830,25208+51])
                          Pexp_constant PConst_string("in total, %d production%s %s never reduced.",(src/lr1.ml[830,25208+7]..[830,25208+50]),None)
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[830,25208+52]..[830,25208+58])
                          Pexp_apply
                          expression (src/lr1.ml[830,25208+52]..[830,25208+53])
                            Pexp_ident "!" (src/lr1.ml[830,25208+52]..[830,25208+53])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[830,25208+53]..[830,25208+58])
                                Pexp_ident "count" (src/lr1.ml[830,25208+53]..[830,25208+58])
                          ]
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[830,25208+59]..[830,25208+70])
                          Pexp_ident "plural_mark" (src/lr1.ml[830,25208+59]..[830,25208+70])
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[830,25208+71]..[830,25208+73])
                          Pexp_ident "be" (src/lr1.ml[830,25208+71]..[830,25208+73])
                    ]
                None
    ]
  structure_item (src/lr1.ml[840,25634+0]..[857,26389+16])
    Pstr_value Rec
    [
      <def>
        pattern (src/lr1.ml[840,25634+8]..[840,25634+12])
          Ppat_var "best" (src/lr1.ml[840,25634+8]..[840,25634+12])
        expression (src/lr1.ml[840,25634+13]..[857,26389+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[840,25634+13]..[840,25634+19])
            Ppat_var "choice" (src/lr1.ml[840,25634+13]..[840,25634+19])
          expression (src/lr1.ml[840,25634+22]..[857,26389+16])
            Pexp_function
            [
              <case>
                pattern (src/lr1.ml[841,25665+4]..[841,25665+6])
                  Ppat_construct "[]" (src/lr1.ml[841,25665+4]..[841,25665+6])
                  None
                expression (src/lr1.ml[842,25675+6]..[842,25675+12])
                  Pexp_ident "choice" (src/lr1.ml[842,25675+6]..[842,25675+12])
              <case>
                pattern (src/lr1.ml[843,25688+4]..[843,25688+17])
                  Ppat_construct "::" (src/lr1.ml[843,25688+9]..[843,25688+11])
                  Some
                    []
                    pattern (src/lr1.ml[843,25688+4]..[843,25688+17]) ghost
                      Ppat_tuple
                      [
                        pattern (src/lr1.ml[843,25688+4]..[843,25688+8])
                          Ppat_var "prod" (src/lr1.ml[843,25688+4]..[843,25688+8])
                        pattern (src/lr1.ml[843,25688+12]..[843,25688+17])
                          Ppat_var "prods" (src/lr1.ml[843,25688+12]..[843,25688+17])
                      ]
                expression (src/lr1.ml[844,25709+6]..[857,26389+16])
                  Pexp_match
                  expression (src/lr1.ml[844,25709+12]..[844,25709+48])
                    Pexp_apply
                    expression (src/lr1.ml[844,25709+12]..[844,25709+36])
                      Pexp_ident "Precedence.reduce_reduce" (src/lr1.ml[844,25709+12]..[844,25709+36])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[844,25709+37]..[844,25709+43])
                          Pexp_ident "choice" (src/lr1.ml[844,25709+37]..[844,25709+43])
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[844,25709+44]..[844,25709+48])
                          Pexp_ident "prod" (src/lr1.ml[844,25709+44]..[844,25709+48])
                    ]
                  [
                    <case>
                      pattern (src/lr1.ml[845,25763+8]..[845,25763+19])
                        Ppat_construct "Some" (src/lr1.ml[845,25763+8]..[845,25763+12])
                        Some
                          []
                          pattern (src/lr1.ml[845,25763+13]..[845,25763+19])
                            Ppat_var "choice" (src/lr1.ml[845,25763+13]..[845,25763+19])
                      expression (src/lr1.ml[846,25786+10]..[846,25786+27])
                        Pexp_apply
                        expression (src/lr1.ml[846,25786+10]..[846,25786+14])
                          Pexp_ident "best" (src/lr1.ml[846,25786+10]..[846,25786+14])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[846,25786+15]..[846,25786+21])
                              Pexp_ident "choice" (src/lr1.ml[846,25786+15]..[846,25786+21])
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[846,25786+22]..[846,25786+27])
                              Pexp_ident "prods" (src/lr1.ml[846,25786+22]..[846,25786+27])
                        ]
                    <case>
                      pattern (src/lr1.ml[847,25814+8]..[847,25814+12])
                        Ppat_construct "None" (src/lr1.ml[847,25814+8]..[847,25814+12])
                        None
                      expression (src/lr1.ml[851,26050+10]..[857,26389+16])
                        Pexp_sequence
                        expression (src/lr1.ml[851,26050+10]..[856,26346+41])
                          Pexp_apply
                          expression (src/lr1.ml[851,26050+10]..[851,26050+22])
                            Pexp_ident "Error.signal" (src/lr1.ml[851,26050+10]..[851,26050+22])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[851,26050+23]..[851,26050+46])
                                Pexp_ident "Error.grammatical_error" (src/lr1.ml[851,26050+23]..[851,26050+46])
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[852,26097+12]..[852,26097+69])
                                Pexp_apply
                                expression (src/lr1.ml[852,26097+41]..[852,26097+42])
                                  Pexp_ident "@" (src/lr1.ml[852,26097+41]..[852,26097+42])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[852,26097+13]..[852,26097+40])
                                      Pexp_apply
                                      expression (src/lr1.ml[852,26097+13]..[852,26097+33])
                                        Pexp_ident "Production.positions" (src/lr1.ml[852,26097+13]..[852,26097+33])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr1.ml[852,26097+34]..[852,26097+40])
                                            Pexp_ident "choice" (src/lr1.ml[852,26097+34]..[852,26097+40])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[852,26097+43]..[852,26097+68])
                                      Pexp_apply
                                      expression (src/lr1.ml[852,26097+43]..[852,26097+63])
                                        Pexp_ident "Production.positions" (src/lr1.ml[852,26097+43]..[852,26097+63])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr1.ml[852,26097+64]..[852,26097+68])
                                            Pexp_ident "prod" (src/lr1.ml[852,26097+64]..[852,26097+68])
                                      ]
                                ]
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[853,26167+15]..[854,26238+63])
                                Pexp_constant PConst_string("do not know how to resolve a reduce/reduce conflict\nbetween the following two productions:\n%s\n%s",(src/lr1.ml[853,26167+16]..[854,26238+62]),None)
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[855,26302+18]..[855,26302+43])
                                Pexp_apply
                                expression (src/lr1.ml[855,26302+19]..[855,26302+35])
                                  Pexp_ident "Production.print" (src/lr1.ml[855,26302+19]..[855,26302+35])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[855,26302+36]..[855,26302+42])
                                      Pexp_ident "choice" (src/lr1.ml[855,26302+36]..[855,26302+42])
                                ]
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[856,26346+18]..[856,26346+41])
                                Pexp_apply
                                expression (src/lr1.ml[856,26346+19]..[856,26346+35])
                                  Pexp_ident "Production.print" (src/lr1.ml[856,26346+19]..[856,26346+35])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[856,26346+36]..[856,26346+40])
                                      Pexp_ident "prod" (src/lr1.ml[856,26346+36]..[856,26346+40])
                                ]
                          ]
                        expression (src/lr1.ml[857,26389+10]..[857,26389+16])
                          Pexp_ident "choice" (src/lr1.ml[857,26389+10]..[857,26389+16])
                  ]
            ]
    ]
  structure_item (src/lr1.ml[861,26436+0]..[955,29664+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[861,26436+4]..[861,26436+31])
          Ppat_var "default_conflict_resolution" (src/lr1.ml[861,26436+4]..[861,26436+31])
        expression (src/lr1.ml[861,26436+32]..[955,29664+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[861,26436+32]..[861,26436+34])
            Ppat_construct "()" (src/lr1.ml[861,26436+32]..[861,26436+34])
            None
          expression (src/lr1.ml[863,26474+2]..[955,29664+40])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/lr1.ml[863,26474+6]..[863,26474+18])
                  Ppat_var "shift_reduce" (src/lr1.ml[863,26474+6]..[863,26474+18])
                expression (src/lr1.ml[864,26495+4]..[864,26495+9])
                  Pexp_apply
                  expression (src/lr1.ml[864,26495+4]..[864,26495+7])
                    Pexp_ident "ref" (src/lr1.ml[864,26495+4]..[864,26495+7])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[864,26495+8]..[864,26495+9])
                        Pexp_constant PConst_int (0,None)
                  ]
              <def>
                pattern (src/lr1.ml[865,26505+6]..[865,26505+19])
                  Ppat_var "reduce_reduce" (src/lr1.ml[865,26505+6]..[865,26505+19])
                expression (src/lr1.ml[866,26527+4]..[866,26527+9])
                  Pexp_apply
                  expression (src/lr1.ml[866,26527+4]..[866,26527+7])
                    Pexp_ident "ref" (src/lr1.ml[866,26527+4]..[866,26527+7])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[866,26527+8]..[866,26527+9])
                        Pexp_constant PConst_int (0,None)
                  ]
            ]
            expression (src/lr1.ml[869,26543+2]..[955,29664+40])
              Pexp_sequence
              expression (src/lr1.ml[869,26543+2]..[902,27847+3])
                Pexp_apply
                expression (src/lr1.ml[869,26543+17]..[869,26543+19])
                  Pexp_ident "|>" (src/lr1.ml[869,26543+17]..[869,26543+19])
                [
                  <arg>
                  Nolabel
                    expression (src/lr1.ml[869,26543+2]..[869,26543+16])
                      Pexp_ident "conflict_nodes" (src/lr1.ml[869,26543+2]..[869,26543+16])
                  <arg>
                  Nolabel
                    expression (src/lr1.ml[869,26543+20]..[902,27847+3])
                      Pexp_apply
                      expression (src/lr1.ml[869,26543+20]..[869,26543+29])
                        Pexp_ident "List.iter" (src/lr1.ml[869,26543+20]..[869,26543+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[869,26543+30]..[902,27847+3])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/lr1.ml[869,26543+35]..[869,26543+39])
                              Ppat_var "node" (src/lr1.ml[869,26543+35]..[869,26543+39])
                            expression (src/lr1.ml[870,26586+4]..[901,27841+5])
                              Pexp_sequence
                              expression (src/lr1.ml[870,26586+4]..[870,26586+52])
                                Pexp_apply
                                expression (src/lr1.ml[870,26586+4]..[870,26586+52]) ghost
                                  Pexp_ident "Array.set" (src/lr1.ml[870,26586+4]..[870,26586+52]) ghost
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[870,26586+4]..[870,26586+20])
                                      Pexp_ident "_conflict_tokens" (src/lr1.ml[870,26586+4]..[870,26586+20])
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[870,26586+22]..[870,26586+30])
                                      Pexp_apply
                                      expression (src/lr1.ml[870,26586+22]..[870,26586+25])
                                        Pexp_ident "raw" (src/lr1.ml[870,26586+22]..[870,26586+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr1.ml[870,26586+26]..[870,26586+30])
                                            Pexp_ident "node" (src/lr1.ml[870,26586+26]..[870,26586+30])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[870,26586+35]..[870,26586+52])
                                      Pexp_ident "TerminalSet.empty" (src/lr1.ml[870,26586+35]..[870,26586+52])
                                ]
                              expression (src/lr1.ml[871,26640+4]..[901,27841+5])
                                Pexp_apply
                                expression (src/lr1.ml[871,26640+4]..[871,26640+18])
                                  Pexp_ident "set_reductions" (src/lr1.ml[871,26640+4]..[871,26640+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[871,26640+19]..[871,26640+23])
                                      Pexp_ident "node" (src/lr1.ml[871,26640+19]..[871,26640+23])
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[871,26640+24]..[901,27841+5])
                                      Pexp_apply
                                      expression (src/lr1.ml[872,26666+6]..[872,26666+22])
                                        Pexp_ident "TerminalMap.fold" (src/lr1.ml[872,26666+6]..[872,26666+22])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr1.ml[872,26666+23]..[900,27797+7])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (src/lr1.ml[872,26666+28]..[872,26666+31])
                                              Ppat_var "tok" (src/lr1.ml[872,26666+28]..[872,26666+31])
                                            expression (src/lr1.ml[872,26666+32]..[898,27731+64]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (src/lr1.ml[872,26666+32]..[872,26666+37])
                                                Ppat_var "prods" (src/lr1.ml[872,26666+32]..[872,26666+37])
                                              expression (src/lr1.ml[872,26666+38]..[898,27731+64]) ghost
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (src/lr1.ml[872,26666+38]..[872,26666+48])
                                                  Ppat_var "reductions" (src/lr1.ml[872,26666+38]..[872,26666+48])
                                                expression (src/lr1.ml[874,26719+8]..[898,27731+64])
                                                  Pexp_try
                                                  expression (src/lr1.ml[875,26731+10]..[883,27102+20])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (src/lr1.ml[875,26731+14]..[875,26731+24])
                                                          Ppat_constraint
                                                          pattern (src/lr1.ml[875,26731+15]..[875,26731+16])
                                                            Ppat_any
                                                          core_type (src/lr1.ml[875,26731+19]..[875,26731+23])
                                                            Ptyp_constr "node" (src/lr1.ml[875,26731+19]..[875,26731+23])
                                                            []
                                                        expression (src/lr1.ml[876,26758+12]..[876,26758+60])
                                                          Pexp_apply
                                                          expression (src/lr1.ml[876,26758+12]..[876,26758+26])
                                                            Pexp_ident "SymbolMap.find" (src/lr1.ml[876,26758+12]..[876,26758+26])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/lr1.ml[876,26758+27]..[876,26758+41])
                                                                Pexp_construct "Symbol.T" (src/lr1.ml[876,26758+28]..[876,26758+36])
                                                                Some
                                                                  expression (src/lr1.ml[876,26758+37]..[876,26758+40])
                                                                    Pexp_ident "tok" (src/lr1.ml[876,26758+37]..[876,26758+40])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/lr1.ml[876,26758+42]..[876,26758+60])
                                                                Pexp_apply
                                                                expression (src/lr1.ml[876,26758+43]..[876,26758+54])
                                                                  Pexp_ident "transitions" (src/lr1.ml[876,26758+43]..[876,26758+54])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr1.ml[876,26758+55]..[876,26758+59])
                                                                      Pexp_ident "node" (src/lr1.ml[876,26758+55]..[876,26758+59])
                                                                ]
                                                          ]
                                                    ]
                                                    expression (src/lr1.ml[882,27041+10]..[883,27102+20])
                                                      Pexp_sequence
                                                      expression (src/lr1.ml[882,27041+10]..[882,27041+59])
                                                        Pexp_apply
                                                        expression (src/lr1.ml[882,27041+23]..[882,27041+25])
                                                          Pexp_ident ":=" (src/lr1.ml[882,27041+23]..[882,27041+25])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/lr1.ml[882,27041+10]..[882,27041+22])
                                                              Pexp_ident "shift_reduce" (src/lr1.ml[882,27041+10]..[882,27041+22])
                                                          <arg>
                                                          Nolabel
                                                            expression (src/lr1.ml[882,27041+26]..[882,27041+59])
                                                              Pexp_apply
                                                              expression (src/lr1.ml[882,27041+44]..[882,27041+45])
                                                                Pexp_ident "+" (src/lr1.ml[882,27041+44]..[882,27041+45])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/lr1.ml[882,27041+26]..[882,27041+43])
                                                                    Pexp_apply
                                                                    expression (src/lr1.ml[882,27041+26]..[882,27041+37])
                                                                      Pexp_ident "List.length" (src/lr1.ml[882,27041+26]..[882,27041+37])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/lr1.ml[882,27041+38]..[882,27041+43])
  Pexp_ident "prods" (src/lr1.ml[882,27041+38]..[882,27041+43])
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/lr1.ml[882,27041+46]..[882,27041+59])
                                                                    Pexp_apply
                                                                    expression (src/lr1.ml[882,27041+46]..[882,27041+47])
                                                                      Pexp_ident "!" (src/lr1.ml[882,27041+46]..[882,27041+47])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/lr1.ml[882,27041+47]..[882,27041+59])
  Pexp_ident "shift_reduce" (src/lr1.ml[882,27041+47]..[882,27041+59])
                                                                    ]
                                                              ]
                                                        ]
                                                      expression (src/lr1.ml[883,27102+10]..[883,27102+20])
                                                        Pexp_ident "reductions" (src/lr1.ml[883,27102+10]..[883,27102+20])
                                                  [
                                                    <case>
                                                      pattern (src/lr1.ml[884,27123+13]..[884,27123+22])
                                                        Ppat_construct "Not_found" (src/lr1.ml[884,27123+13]..[884,27123+22])
                                                        None
                                                      expression (src/lr1.ml[887,27260+10]..[898,27731+64])
                                                        Pexp_match
                                                        expression (src/lr1.ml[887,27260+16]..[887,27260+21])
                                                          Pexp_ident "prods" (src/lr1.ml[887,27260+16]..[887,27260+21])
                                                        [
                                                          <case>
                                                            pattern (src/lr1.ml[888,27287+12]..[888,27287+14])
                                                              Ppat_construct "[]" (src/lr1.ml[888,27287+12]..[888,27287+14])
                                                              None
                                                            expression (src/lr1.ml[889,27305+14]..[889,27305+26])
                                                              Pexp_assert
                                                              expression (src/lr1.ml[889,27305+21]..[889,27305+26])
                                                                Pexp_construct "false" (src/lr1.ml[889,27305+21]..[889,27305+26])
                                                                None
                                                          <case>
                                                            pattern (src/lr1.ml[890,27332+12]..[890,27332+17])
                                                              Ppat_construct "::" (src/lr1.ml[890,27332+14]..[890,27332+17]) ghost
                                                              Some
                                                                []
                                                                pattern (src/lr1.ml[890,27332+14]..[890,27332+17]) ghost
                                                                  Ppat_tuple
                                                                  [
                                                                    pattern (src/lr1.ml[890,27332+14]..[890,27332+15])
                                                                      Ppat_any
                                                                    pattern (src/lr1.ml[890,27332+16]..[890,27332+17]) ghost
                                                                      Ppat_construct "[]" (src/lr1.ml[890,27332+16]..[890,27332+17]) ghost
                                                                      None
                                                                  ]
                                                            expression (src/lr1.ml[891,27353+14]..[891,27353+50])
                                                              Pexp_apply
                                                              expression (src/lr1.ml[891,27353+14]..[891,27353+29])
                                                                Pexp_ident "TerminalMap.add" (src/lr1.ml[891,27353+14]..[891,27353+29])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/lr1.ml[891,27353+30]..[891,27353+33])
                                                                    Pexp_ident "tok" (src/lr1.ml[891,27353+30]..[891,27353+33])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/lr1.ml[891,27353+34]..[891,27353+39])
                                                                    Pexp_ident "prods" (src/lr1.ml[891,27353+34]..[891,27353+39])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/lr1.ml[891,27353+40]..[891,27353+50])
                                                                    Pexp_ident "reductions" (src/lr1.ml[891,27353+40]..[891,27353+50])
                                                              ]
                                                          <case>
                                                            pattern (src/lr1.ml[892,27404+12]..[892,27404+39])
                                                              Ppat_construct "::" (src/lr1.ml[892,27404+17]..[892,27404+19])
                                                              Some
                                                                []
                                                                pattern (src/lr1.ml[892,27404+12]..[892,27404+39]) ghost
                                                                  Ppat_tuple
                                                                  [
                                                                    pattern (src/lr1.ml[892,27404+12]..[892,27404+16])
                                                                      Ppat_var "prod" (src/lr1.ml[892,27404+12]..[892,27404+16])
                                                                    pattern (src/lr1.ml[892,27404+20]..[892,27404+39])
                                                                      Ppat_alias "prods" (src/lr1.ml[892,27404+33]..[892,27404+38])
                                                                      pattern (src/lr1.ml[892,27404+21]..[892,27404+29])
Ppat_construct "::" (src/lr1.ml[892,27404+24]..[892,27404+26])
Some
  []
  pattern (src/lr1.ml[892,27404+22]..[892,27404+28]) ghost
    Ppat_tuple
    [
      pattern (src/lr1.ml[892,27404+22]..[892,27404+23])
        Ppat_any
      pattern (src/lr1.ml[892,27404+27]..[892,27404+28])
        Ppat_any
    ]
                                                                  ]
                                                            expression (src/lr1.ml[897,27664+14]..[898,27731+64])
                                                              Pexp_sequence
                                                              expression (src/lr1.ml[897,27664+14]..[897,27664+65])
                                                                Pexp_apply
                                                                expression (src/lr1.ml[897,27664+28]..[897,27664+30])
                                                                  Pexp_ident ":=" (src/lr1.ml[897,27664+28]..[897,27664+30])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr1.ml[897,27664+14]..[897,27664+27])
                                                                      Pexp_ident "reduce_reduce" (src/lr1.ml[897,27664+14]..[897,27664+27])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr1.ml[897,27664+31]..[897,27664+65])
                                                                      Pexp_apply
                                                                      expression (src/lr1.ml[897,27664+49]..[897,27664+50])
Pexp_ident "+" (src/lr1.ml[897,27664+49]..[897,27664+50])
                                                                      [
<arg>
Nolabel
  expression (src/lr1.ml[897,27664+31]..[897,27664+48])
    Pexp_apply
    expression (src/lr1.ml[897,27664+31]..[897,27664+42])
      Pexp_ident "List.length" (src/lr1.ml[897,27664+31]..[897,27664+42])
    [
      <arg>
      Nolabel
        expression (src/lr1.ml[897,27664+43]..[897,27664+48])
          Pexp_ident "prods" (src/lr1.ml[897,27664+43]..[897,27664+48])
    ]
<arg>
Nolabel
  expression (src/lr1.ml[897,27664+51]..[897,27664+65])
    Pexp_apply
    expression (src/lr1.ml[897,27664+51]..[897,27664+52])
      Pexp_ident "!" (src/lr1.ml[897,27664+51]..[897,27664+52])
    [
      <arg>
      Nolabel
        expression (src/lr1.ml[897,27664+52]..[897,27664+65])
          Pexp_ident "reduce_reduce" (src/lr1.ml[897,27664+52]..[897,27664+65])
    ]
                                                                      ]
                                                                ]
                                                              expression (src/lr1.ml[898,27731+14]..[898,27731+64])
                                                                Pexp_apply
                                                                expression (src/lr1.ml[898,27731+14]..[898,27731+29])
                                                                  Pexp_ident "TerminalMap.add" (src/lr1.ml[898,27731+14]..[898,27731+29])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr1.ml[898,27731+30]..[898,27731+33])
                                                                      Pexp_ident "tok" (src/lr1.ml[898,27731+30]..[898,27731+33])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr1.ml[898,27731+34]..[898,27731+53])
                                                                      Pexp_construct "::" (src/lr1.ml[898,27731+36]..[898,27731+53]) ghost
                                                                      Some
expression (src/lr1.ml[898,27731+36]..[898,27731+53]) ghost
  Pexp_tuple
  [
    expression (src/lr1.ml[898,27731+36]..[898,27731+51])
      Pexp_apply
      expression (src/lr1.ml[898,27731+36]..[898,27731+40])
        Pexp_ident "best" (src/lr1.ml[898,27731+36]..[898,27731+40])
      [
        <arg>
        Nolabel
          expression (src/lr1.ml[898,27731+41]..[898,27731+45])
            Pexp_ident "prod" (src/lr1.ml[898,27731+41]..[898,27731+45])
        <arg>
        Nolabel
          expression (src/lr1.ml[898,27731+46]..[898,27731+51])
            Pexp_ident "prods" (src/lr1.ml[898,27731+46]..[898,27731+51])
      ]
    expression (src/lr1.ml[898,27731+52]..[898,27731+53]) ghost
      Pexp_construct "[]" (src/lr1.ml[898,27731+52]..[898,27731+53]) ghost
      None
  ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr1.ml[898,27731+54]..[898,27731+64])
                                                                      Pexp_ident "reductions" (src/lr1.ml[898,27731+54]..[898,27731+64])
                                                                ]
                                                        ]
                                                  ]
                                        <arg>
                                        Nolabel
                                          expression (src/lr1.ml[900,27797+8]..[900,27797+25])
                                            Pexp_apply
                                            expression (src/lr1.ml[900,27797+9]..[900,27797+19])
                                              Pexp_ident "reductions" (src/lr1.ml[900,27797+9]..[900,27797+19])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/lr1.ml[900,27797+20]..[900,27797+24])
                                                  Pexp_ident "node" (src/lr1.ml[900,27797+20]..[900,27797+24])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (src/lr1.ml[900,27797+26]..[900,27797+43])
                                            Pexp_ident "TerminalMap.empty" (src/lr1.ml[900,27797+26]..[900,27797+43])
                                      ]
                                ]
                      ]
                ]
              expression (src/lr1.ml[904,27853+2]..[955,29664+40])
                Pexp_sequence
                expression (src/lr1.ml[904,27853+2]..[908,28065+19])
                  Pexp_ifthenelse
                  expression (src/lr1.ml[904,27853+5]..[904,27853+22])
                    Pexp_apply
                    expression (src/lr1.ml[904,27853+19]..[904,27853+20])
                      Pexp_ident "=" (src/lr1.ml[904,27853+19]..[904,27853+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[904,27853+5]..[904,27853+18])
                          Pexp_apply
                          expression (src/lr1.ml[904,27853+5]..[904,27853+6])
                            Pexp_ident "!" (src/lr1.ml[904,27853+5]..[904,27853+6])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[904,27853+6]..[904,27853+18])
                                Pexp_ident "shift_reduce" (src/lr1.ml[904,27853+6]..[904,27853+18])
                          ]
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[904,27853+21]..[904,27853+22])
                          Pexp_constant PConst_int (1,None)
                    ]
                  expression (src/lr1.ml[905,27881+4]..[905,27881+74])
                    Pexp_apply
                    expression (src/lr1.ml[905,27881+4]..[905,27881+17])
                      Pexp_ident "Error.warning" (src/lr1.ml[905,27881+4]..[905,27881+17])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[905,27881+18]..[905,27881+20])
                          Pexp_construct "[]" (src/lr1.ml[905,27881+18]..[905,27881+20])
                          None
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[905,27881+21]..[905,27881+74])
                          Pexp_constant PConst_string("one shift/reduce conflict was arbitrarily resolved.",(src/lr1.ml[905,27881+22]..[905,27881+73]),None)
                    ]
                  Some
                    expression (src/lr1.ml[906,27956+7]..[908,28065+19])
                      Pexp_ifthenelse
                      expression (src/lr1.ml[906,27956+10]..[906,27956+27])
                        Pexp_apply
                        expression (src/lr1.ml[906,27956+24]..[906,27956+25])
                          Pexp_ident ">" (src/lr1.ml[906,27956+24]..[906,27956+25])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[906,27956+10]..[906,27956+23])
                              Pexp_apply
                              expression (src/lr1.ml[906,27956+10]..[906,27956+11])
                                Pexp_ident "!" (src/lr1.ml[906,27956+10]..[906,27956+11])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[906,27956+11]..[906,27956+23])
                                    Pexp_ident "shift_reduce" (src/lr1.ml[906,27956+11]..[906,27956+23])
                              ]
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[906,27956+26]..[906,27956+27])
                              Pexp_constant PConst_int (1,None)
                        ]
                      expression (src/lr1.ml[907,27989+4]..[908,28065+19])
                        Pexp_apply
                        expression (src/lr1.ml[907,27989+4]..[907,27989+17])
                          Pexp_ident "Error.warning" (src/lr1.ml[907,27989+4]..[907,27989+17])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[907,27989+18]..[907,27989+20])
                              Pexp_construct "[]" (src/lr1.ml[907,27989+18]..[907,27989+20])
                              None
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[907,27989+21]..[907,27989+75])
                              Pexp_constant PConst_string("%d shift/reduce conflicts were arbitrarily resolved.",(src/lr1.ml[907,27989+22]..[907,27989+74]),None)
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[908,28065+6]..[908,28065+19])
                              Pexp_apply
                              expression (src/lr1.ml[908,28065+6]..[908,28065+7])
                                Pexp_ident "!" (src/lr1.ml[908,28065+6]..[908,28065+7])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[908,28065+7]..[908,28065+19])
                                    Pexp_ident "shift_reduce" (src/lr1.ml[908,28065+7]..[908,28065+19])
                              ]
                        ]
                      None
                expression (src/lr1.ml[909,28086+2]..[955,29664+40])
                  Pexp_sequence
                  expression (src/lr1.ml[909,28086+2]..[913,28302+20])
                    Pexp_ifthenelse
                    expression (src/lr1.ml[909,28086+5]..[909,28086+23])
                      Pexp_apply
                      expression (src/lr1.ml[909,28086+20]..[909,28086+21])
                        Pexp_ident "=" (src/lr1.ml[909,28086+20]..[909,28086+21])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[909,28086+5]..[909,28086+19])
                            Pexp_apply
                            expression (src/lr1.ml[909,28086+5]..[909,28086+6])
                              Pexp_ident "!" (src/lr1.ml[909,28086+5]..[909,28086+6])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[909,28086+6]..[909,28086+19])
                                  Pexp_ident "reduce_reduce" (src/lr1.ml[909,28086+6]..[909,28086+19])
                            ]
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[909,28086+22]..[909,28086+23])
                            Pexp_constant PConst_int (1,None)
                      ]
                    expression (src/lr1.ml[910,28115+4]..[910,28115+75])
                      Pexp_apply
                      expression (src/lr1.ml[910,28115+4]..[910,28115+17])
                        Pexp_ident "Error.warning" (src/lr1.ml[910,28115+4]..[910,28115+17])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[910,28115+18]..[910,28115+20])
                            Pexp_construct "[]" (src/lr1.ml[910,28115+18]..[910,28115+20])
                            None
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[910,28115+21]..[910,28115+75])
                            Pexp_constant PConst_string("one reduce/reduce conflict was arbitrarily resolved.",(src/lr1.ml[910,28115+22]..[910,28115+74]),None)
                      ]
                    Some
                      expression (src/lr1.ml[911,28191+7]..[913,28302+20])
                        Pexp_ifthenelse
                        expression (src/lr1.ml[911,28191+10]..[911,28191+28])
                          Pexp_apply
                          expression (src/lr1.ml[911,28191+25]..[911,28191+26])
                            Pexp_ident ">" (src/lr1.ml[911,28191+25]..[911,28191+26])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[911,28191+10]..[911,28191+24])
                                Pexp_apply
                                expression (src/lr1.ml[911,28191+10]..[911,28191+11])
                                  Pexp_ident "!" (src/lr1.ml[911,28191+10]..[911,28191+11])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[911,28191+11]..[911,28191+24])
                                      Pexp_ident "reduce_reduce" (src/lr1.ml[911,28191+11]..[911,28191+24])
                                ]
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[911,28191+27]..[911,28191+28])
                                Pexp_constant PConst_int (1,None)
                          ]
                        expression (src/lr1.ml[912,28225+4]..[913,28302+20])
                          Pexp_apply
                          expression (src/lr1.ml[912,28225+4]..[912,28225+17])
                            Pexp_ident "Error.warning" (src/lr1.ml[912,28225+4]..[912,28225+17])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[912,28225+18]..[912,28225+20])
                                Pexp_construct "[]" (src/lr1.ml[912,28225+18]..[912,28225+20])
                                None
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[912,28225+21]..[912,28225+76])
                                Pexp_constant PConst_string("%d reduce/reduce conflicts were arbitrarily resolved.",(src/lr1.ml[912,28225+22]..[912,28225+75]),None)
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[913,28302+6]..[913,28302+20])
                                Pexp_apply
                                expression (src/lr1.ml[913,28302+6]..[913,28302+7])
                                  Pexp_ident "!" (src/lr1.ml[913,28302+6]..[913,28302+7])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[913,28302+7]..[913,28302+20])
                                      Pexp_ident "reduce_reduce" (src/lr1.ml[913,28302+7]..[913,28302+20])
                                ]
                          ]
                        None
                  expression (src/lr1.ml[923,28729+2]..[955,29664+40])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/lr1.ml[923,28729+6]..[923,28729+19])
                          Ppat_var "eos_conflicts" (src/lr1.ml[923,28729+6]..[923,28729+19])
                        expression (src/lr1.ml[923,28729+22]..[923,28729+27])
                          Pexp_apply
                          expression (src/lr1.ml[923,28729+22]..[923,28729+25])
                            Pexp_ident "ref" (src/lr1.ml[923,28729+22]..[923,28729+25])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[923,28729+26]..[923,28729+27])
                                Pexp_constant PConst_int (0,None)
                          ]
                    ]
                    expression (src/lr1.ml[925,28761+2]..[955,29664+40])
                      Pexp_sequence
                      expression (src/lr1.ml[925,28761+2]..[943,29292+5])
                        Pexp_apply
                        expression (src/lr1.ml[925,28761+2]..[925,28761+6])
                          Pexp_ident "iter" (src/lr1.ml[925,28761+2]..[925,28761+6])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[925,28761+7]..[943,29292+5])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/lr1.ml[925,28761+17]..[925,28761+21])
                                Ppat_var "node" (src/lr1.ml[925,28761+17]..[925,28761+21])
                              expression (src/lr1.ml[926,28786+4]..[942,29284+7])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/lr1.ml[926,28786+8]..[926,28786+19])
                                      Ppat_var "transitions" (src/lr1.ml[926,28786+8]..[926,28786+19])
                                    expression (src/lr1.ml[926,28786+22]..[926,28786+38])
                                      Pexp_apply
                                      expression (src/lr1.ml[926,28786+22]..[926,28786+33])
                                        Pexp_ident "transitions" (src/lr1.ml[926,28786+22]..[926,28786+33])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr1.ml[926,28786+34]..[926,28786+38])
                                            Pexp_ident "node" (src/lr1.ml[926,28786+34]..[926,28786+38])
                                      ]
                                  <def>
                                    pattern (src/lr1.ml[927,28825+8]..[927,28825+18])
                                      Ppat_var "reductions" (src/lr1.ml[927,28825+8]..[927,28825+18])
                                    expression (src/lr1.ml[927,28825+21]..[927,28825+36])
                                      Pexp_apply
                                      expression (src/lr1.ml[927,28825+21]..[927,28825+31])
                                        Pexp_ident "reductions" (src/lr1.ml[927,28825+21]..[927,28825+31])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr1.ml[927,28825+32]..[927,28825+36])
                                            Pexp_ident "node" (src/lr1.ml[927,28825+32]..[927,28825+36])
                                      ]
                                ]
                                expression (src/lr1.ml[929,28866+4]..[942,29284+7])
                                  Pexp_ifthenelse
                                  expression (src/lr1.ml[929,28866+7]..[929,28866+50])
                                    Pexp_apply
                                    expression (src/lr1.ml[929,28866+7]..[929,28866+27])
                                      Pexp_ident "Lr0.has_eos_conflict" (src/lr1.ml[929,28866+7]..[929,28866+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr1.ml[929,28866+28]..[929,28866+39])
                                          Pexp_ident "transitions" (src/lr1.ml[929,28866+28]..[929,28866+39])
                                      <arg>
                                      Nolabel
                                        expression (src/lr1.ml[929,28866+40]..[929,28866+50])
                                          Pexp_ident "reductions" (src/lr1.ml[929,28866+40]..[929,28866+50])
                                    ]
                                  expression (src/lr1.ml[929,28866+56]..[942,29284+7])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/lr1.ml[932,28976+10]..[932,28976+23])
                                          Ppat_tuple
                                          [
                                            pattern (src/lr1.ml[932,28976+10]..[932,28976+11])
                                              Ppat_any
                                            pattern (src/lr1.ml[932,28976+13]..[932,28976+23])
                                              Ppat_var "reductions" (src/lr1.ml[932,28976+13]..[932,28976+23])
                                          ]
                                        expression (src/lr1.ml[933,29002+8]..[933,29002+63])
                                          Pexp_apply
                                          expression (src/lr1.ml[933,29002+8]..[933,29002+37])
                                            Pexp_ident "TerminalMap.lookup_and_remove" (src/lr1.ml[933,29002+8]..[933,29002+37])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/lr1.ml[933,29002+38]..[933,29002+52])
                                                Pexp_ident "Terminal.sharp" (src/lr1.ml[933,29002+38]..[933,29002+52])
                                            <arg>
                                            Nolabel
                                              expression (src/lr1.ml[933,29002+53]..[933,29002+63])
                                                Pexp_ident "reductions" (src/lr1.ml[933,29002+53]..[933,29002+63])
                                          ]
                                    ]
                                    expression (src/lr1.ml[934,29069+6]..[940,29258+24])
                                      Pexp_sequence
                                      expression (src/lr1.ml[934,29069+6]..[934,29069+36])
                                        Pexp_apply
                                        expression (src/lr1.ml[934,29069+6]..[934,29069+20])
                                          Pexp_ident "set_reductions" (src/lr1.ml[934,29069+6]..[934,29069+20])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/lr1.ml[934,29069+21]..[934,29069+25])
                                              Pexp_ident "node" (src/lr1.ml[934,29069+21]..[934,29069+25])
                                          <arg>
                                          Nolabel
                                            expression (src/lr1.ml[934,29069+26]..[934,29069+36])
                                              Pexp_ident "reductions" (src/lr1.ml[934,29069+26]..[934,29069+36])
                                        ]
                                      expression (src/lr1.ml[937,29166+6]..[940,29258+24])
                                        Pexp_sequence
                                        expression (src/lr1.ml[937,29166+6]..[937,29166+42])
                                          Pexp_apply
                                          expression (src/lr1.ml[937,29166+6]..[937,29166+42]) ghost
                                            Pexp_ident "Array.set" (src/lr1.ml[937,29166+6]..[937,29166+42]) ghost
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/lr1.ml[937,29166+6]..[937,29166+23])
                                                Pexp_ident "_has_eos_conflict" (src/lr1.ml[937,29166+6]..[937,29166+23])
                                            <arg>
                                            Nolabel
                                              expression (src/lr1.ml[937,29166+25]..[937,29166+33])
                                                Pexp_apply
                                                expression (src/lr1.ml[937,29166+25]..[937,29166+28])
                                                  Pexp_ident "raw" (src/lr1.ml[937,29166+25]..[937,29166+28])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/lr1.ml[937,29166+29]..[937,29166+33])
                                                      Pexp_ident "node" (src/lr1.ml[937,29166+29]..[937,29166+33])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (src/lr1.ml[937,29166+38]..[937,29166+42])
                                                Pexp_construct "None" (src/lr1.ml[937,29166+38]..[937,29166+42])
                                                None
                                          ]
                                        expression (src/lr1.ml[940,29258+6]..[940,29258+24])
                                          Pexp_apply
                                          expression (src/lr1.ml[940,29258+6]..[940,29258+10])
                                            Pexp_ident "incr" (src/lr1.ml[940,29258+6]..[940,29258+10])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/lr1.ml[940,29258+11]..[940,29258+24])
                                                Pexp_ident "eos_conflicts" (src/lr1.ml[940,29258+11]..[940,29258+24])
                                          ]
                                  None
                        ]
                      expression (src/lr1.ml[945,29300+2]..[955,29664+40])
                        Pexp_sequence
                        expression (src/lr1.ml[945,29300+2]..[951,29550+20])
                          Pexp_ifthenelse
                          expression (src/lr1.ml[945,29300+5]..[945,29300+23])
                            Pexp_apply
                            expression (src/lr1.ml[945,29300+20]..[945,29300+21])
                              Pexp_ident "=" (src/lr1.ml[945,29300+20]..[945,29300+21])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[945,29300+5]..[945,29300+19])
                                  Pexp_apply
                                  expression (src/lr1.ml[945,29300+5]..[945,29300+6])
                                    Pexp_ident "!" (src/lr1.ml[945,29300+5]..[945,29300+6])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[945,29300+6]..[945,29300+19])
                                        Pexp_ident "eos_conflicts" (src/lr1.ml[945,29300+6]..[945,29300+19])
                                  ]
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[945,29300+22]..[945,29300+23])
                                  Pexp_constant PConst_int (1,None)
                            ]
                          expression (src/lr1.ml[946,29329+4]..[947,29358+66])
                            Pexp_apply
                            expression (src/lr1.ml[946,29329+4]..[946,29329+25])
                              Pexp_ident "Error.grammar_warning" (src/lr1.ml[946,29329+4]..[946,29329+25])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[946,29329+26]..[946,29329+28])
                                  Pexp_construct "[]" (src/lr1.ml[946,29329+26]..[946,29329+28])
                                  None
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[947,29358+6]..[947,29358+66])
                                  Pexp_constant PConst_string("one state end-of-stream conflict was arbitrarily resolved.",(src/lr1.ml[947,29358+7]..[947,29358+65]),None)
                            ]
                          Some
                            expression (src/lr1.ml[948,29425+7]..[951,29550+20])
                              Pexp_ifthenelse
                              expression (src/lr1.ml[948,29425+10]..[948,29425+28])
                                Pexp_apply
                                expression (src/lr1.ml[948,29425+25]..[948,29425+26])
                                  Pexp_ident ">" (src/lr1.ml[948,29425+25]..[948,29425+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[948,29425+10]..[948,29425+24])
                                      Pexp_apply
                                      expression (src/lr1.ml[948,29425+10]..[948,29425+11])
                                        Pexp_ident "!" (src/lr1.ml[948,29425+10]..[948,29425+11])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr1.ml[948,29425+11]..[948,29425+24])
                                            Pexp_ident "eos_conflicts" (src/lr1.ml[948,29425+11]..[948,29425+24])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[948,29425+27]..[948,29425+28])
                                      Pexp_constant PConst_int (1,None)
                                ]
                              expression (src/lr1.ml[949,29459+4]..[951,29550+20])
                                Pexp_apply
                                expression (src/lr1.ml[949,29459+4]..[949,29459+25])
                                  Pexp_ident "Error.grammar_warning" (src/lr1.ml[949,29459+4]..[949,29459+25])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[949,29459+26]..[949,29459+28])
                                      Pexp_construct "[]" (src/lr1.ml[949,29459+26]..[949,29459+28])
                                      None
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[950,29488+6]..[950,29488+61])
                                      Pexp_constant PConst_string("%d end-of-stream conflicts were arbitrarily resolved.",(src/lr1.ml[950,29488+7]..[950,29488+60]),None)
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[951,29550+6]..[951,29550+20])
                                      Pexp_apply
                                      expression (src/lr1.ml[951,29550+6]..[951,29550+7])
                                        Pexp_ident "!" (src/lr1.ml[951,29550+6]..[951,29550+7])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr1.ml[951,29550+7]..[951,29550+20])
                                            Pexp_ident "eos_conflicts" (src/lr1.ml[951,29550+7]..[951,29550+20])
                                      ]
                                ]
                              None
                        expression (src/lr1.ml[954,29631+2]..[955,29664+40])
                          Pexp_sequence
                          expression (src/lr1.ml[954,29631+2]..[954,29631+31])
                            Pexp_apply
                            expression (src/lr1.ml[954,29631+2]..[954,29631+29])
                              Pexp_ident "initialize_production_where" (src/lr1.ml[954,29631+2]..[954,29631+29])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[954,29631+29]..[954,29631+31])
                                  Pexp_construct "()" (src/lr1.ml[954,29631+29]..[954,29631+31])
                                  None
                            ]
                          expression (src/lr1.ml[955,29664+2]..[955,29664+40])
                            Pexp_apply
                            expression (src/lr1.ml[955,29664+2]..[955,29664+38])
                              Pexp_ident "warn_about_productions_never_reduced" (src/lr1.ml[955,29664+2]..[955,29664+38])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[955,29664+38]..[955,29664+40])
                                  Pexp_construct "()" (src/lr1.ml[955,29664+38]..[955,29664+40])
                                  None
                            ]
    ]
  structure_item (src/lr1.ml[986,31184+0]..[987,31196+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[986,31184+4]..[986,31184+9])
          Ppat_var "extra" (src/lr1.ml[986,31184+4]..[986,31184+9])
        expression (src/lr1.ml[987,31196+2]..[987,31196+7])
          Pexp_apply
          expression (src/lr1.ml[987,31196+2]..[987,31196+5])
            Pexp_ident "ref" (src/lr1.ml[987,31196+2]..[987,31196+5])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[987,31196+6]..[987,31196+7])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (src/lr1.ml[992,31347+0]..[993,31365+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[992,31347+4]..[992,31347+15])
          Ppat_var "prioritized" (src/lr1.ml[992,31347+4]..[992,31347+15])
        expression (src/lr1.ml[993,31365+2]..[993,31365+8])
          Pexp_apply
          expression (src/lr1.ml[993,31365+2]..[993,31365+5])
            Pexp_ident "ref" (src/lr1.ml[993,31365+2]..[993,31365+5])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[993,31365+6]..[993,31365+8])
                Pexp_construct "[]" (src/lr1.ml[993,31365+6]..[993,31365+8])
                None
          ]
    ]
  structure_item (src/lr1.ml[997,31458+0]..[998,31474+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[997,31458+4]..[997,31458+13])
          Ppat_var "extra_nts" (src/lr1.ml[997,31458+4]..[997,31458+13])
        expression (src/lr1.ml[998,31474+2]..[998,31474+26])
          Pexp_apply
          expression (src/lr1.ml[998,31474+2]..[998,31474+5])
            Pexp_ident "ref" (src/lr1.ml[998,31474+2]..[998,31474+5])
          [
            <arg>
            Nolabel
              expression (src/lr1.ml[998,31474+6]..[998,31474+26])
                Pexp_ident "NonterminalSet.empty" (src/lr1.ml[998,31474+6]..[998,31474+26])
          ]
    ]
  structure_item (src/lr1.ml[1000,31502+0]..[1030,32893+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[1000,31502+4]..[1000,31502+28])
          Ppat_var "extra_reductions_in_node" (src/lr1.ml[1000,31502+4]..[1000,31502+28])
        expression (src/lr1.ml[1000,31502+29]..[1030,32893+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[1000,31502+29]..[1000,31502+33])
            Ppat_var "node" (src/lr1.ml[1000,31502+29]..[1000,31502+33])
          expression (src/lr1.ml[1002,31598+2]..[1030,32893+7])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/lr1.ml[1002,31598+6]..[1002,31598+17])
                  Ppat_var "productions" (src/lr1.ml[1002,31598+6]..[1002,31598+17])
                core_type (src/lr1.ml[1002,31598+20]..[1002,31598+37])
                  Ptyp_constr "ProductionMap.t" (src/lr1.ml[1002,31598+22]..[1002,31598+37])
                  [
                    core_type (src/lr1.ml[1002,31598+20]..[1002,31598+21])
                      Ptyp_any
                  ]
                expression (src/lr1.ml[1002,31598+40]..[1002,31598+68])
                  Pexp_apply
                  expression (src/lr1.ml[1002,31598+40]..[1002,31598+50])
                    Pexp_ident "Lr0.invert" (src/lr1.ml[1002,31598+40]..[1002,31598+50])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[1002,31598+51]..[1002,31598+68])
                        Pexp_apply
                        expression (src/lr1.ml[1002,31598+52]..[1002,31598+62])
                          Pexp_ident "reductions" (src/lr1.ml[1002,31598+52]..[1002,31598+62])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[1002,31598+63]..[1002,31598+67])
                              Pexp_ident "node" (src/lr1.ml[1002,31598+63]..[1002,31598+67])
                        ]
                  ]
            ]
            expression (src/lr1.ml[1003,31670+2]..[1030,32893+7])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/lr1.ml[1003,31670+6]..[1003,31670+11])
                    Ppat_var "prods" (src/lr1.ml[1003,31670+6]..[1003,31670+11])
                  core_type (src/lr1.ml[1003,31670+14]..[1003,31670+35])
                    Ptyp_constr "list" (src/lr1.ml[1003,31670+31]..[1003,31670+35])
                    [
                      core_type (src/lr1.ml[1003,31670+14]..[1003,31670+30])
                        Ptyp_constr "Production.index" (src/lr1.ml[1003,31670+14]..[1003,31670+30])
                        []
                    ]
                  expression (src/lr1.ml[1004,31708+4]..[1004,31708+73])
                    Pexp_apply
                    expression (src/lr1.ml[1004,31708+4]..[1004,31708+22])
                      Pexp_ident "ProductionMap.fold" (src/lr1.ml[1004,31708+4]..[1004,31708+22])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[1004,31708+23]..[1004,31708+58])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/lr1.ml[1004,31708+28]..[1004,31708+32])
                            Ppat_var "prod" (src/lr1.ml[1004,31708+28]..[1004,31708+32])
                          expression (src/lr1.ml[1004,31708+33]..[1004,31708+57]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/lr1.ml[1004,31708+33]..[1004,31708+34])
                              Ppat_any
                            expression (src/lr1.ml[1004,31708+35]..[1004,31708+57]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/lr1.ml[1004,31708+35]..[1004,31708+40])
                                Ppat_var "prods" (src/lr1.ml[1004,31708+35]..[1004,31708+40])
                              expression (src/lr1.ml[1004,31708+44]..[1004,31708+57])
                                Pexp_construct "::" (src/lr1.ml[1004,31708+49]..[1004,31708+51])
                                Some
                                  expression (src/lr1.ml[1004,31708+44]..[1004,31708+57]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/lr1.ml[1004,31708+44]..[1004,31708+48])
                                        Pexp_ident "prod" (src/lr1.ml[1004,31708+44]..[1004,31708+48])
                                      expression (src/lr1.ml[1004,31708+52]..[1004,31708+57])
                                        Pexp_ident "prods" (src/lr1.ml[1004,31708+52]..[1004,31708+57])
                                    ]
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[1004,31708+59]..[1004,31708+70])
                          Pexp_ident "productions" (src/lr1.ml[1004,31708+59]..[1004,31708+70])
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[1004,31708+71]..[1004,31708+73])
                          Pexp_construct "[]" (src/lr1.ml[1004,31708+71]..[1004,31708+73])
                          None
                    ]
              ]
              expression (src/lr1.ml[1007,31864+2]..[1030,32893+7])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/lr1.ml[1007,31864+6]..[1007,31864+11])
                      Ppat_var "prods" (src/lr1.ml[1007,31864+6]..[1007,31864+11])
                    expression (src/lr1.ml[1007,31864+14]..[1007,31864+52])
                      Pexp_apply
                      expression (src/lr1.ml[1007,31864+14]..[1007,31864+25])
                        Pexp_ident "List.filter" (src/lr1.ml[1007,31864+14]..[1007,31864+25])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[1007,31864+26]..[1007,31864+46])
                            Pexp_ident "OnErrorReduce.reduce" (src/lr1.ml[1007,31864+26]..[1007,31864+46])
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[1007,31864+47]..[1007,31864+52])
                            Pexp_ident "prods" (src/lr1.ml[1007,31864+47]..[1007,31864+52])
                      ]
                ]
                expression (src/lr1.ml[1009,31983+2]..[1030,32893+7])
                  Pexp_match
                  expression (src/lr1.ml[1009,31983+8]..[1009,31983+48])
                    Pexp_apply
                    expression (src/lr1.ml[1009,31983+8]..[1009,31983+17])
                      Pexp_ident "Misc.best" (src/lr1.ml[1009,31983+8]..[1009,31983+17])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[1009,31983+18]..[1009,31983+42])
                          Pexp_ident "OnErrorReduce.preferable" (src/lr1.ml[1009,31983+18]..[1009,31983+42])
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[1009,31983+43]..[1009,31983+48])
                          Pexp_ident "prods" (src/lr1.ml[1009,31983+43]..[1009,31983+48])
                    ]
                  [
                    <case>
                      pattern (src/lr1.ml[1010,32037+4]..[1010,32037+8])
                        Ppat_construct "None" (src/lr1.ml[1010,32037+4]..[1010,32037+8])
                        None
                      expression (src/lr1.ml[1013,32175+6]..[1013,32175+8])
                        Pexp_construct "()" (src/lr1.ml[1013,32175+6]..[1013,32175+8])
                        None
                    <case>
                      pattern (src/lr1.ml[1014,32184+4]..[1014,32184+13])
                        Ppat_construct "Some" (src/lr1.ml[1014,32184+4]..[1014,32184+8])
                        Some
                          []
                          pattern (src/lr1.ml[1014,32184+9]..[1014,32184+13])
                            Ppat_var "prod" (src/lr1.ml[1014,32184+9]..[1014,32184+13])
                      expression (src/lr1.ml[1015,32201+6]..[1030,32893+7])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/lr1.ml[1015,32201+10]..[1015,32201+20])
                              Ppat_var "acceptable" (src/lr1.ml[1015,32201+10]..[1015,32201+20])
                            expression (src/lr1.ml[1015,32201+23]..[1015,32201+45])
                              Pexp_apply
                              expression (src/lr1.ml[1015,32201+23]..[1015,32201+40])
                                Pexp_ident "acceptable_tokens" (src/lr1.ml[1015,32201+23]..[1015,32201+40])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[1015,32201+41]..[1015,32201+45])
                                    Pexp_ident "node" (src/lr1.ml[1015,32201+41]..[1015,32201+45])
                              ]
                        ]
                        expression (src/lr1.ml[1019,32457+6]..[1030,32893+7])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/lr1.ml[1019,32457+10]..[1019,32457+19])
                                Ppat_var "triggered" (src/lr1.ml[1019,32457+10]..[1019,32457+19])
                              expression (src/lr1.ml[1019,32457+22]..[1024,32663+7])
                                Pexp_lazy
                                expression (src/lr1.ml[1019,32457+27]..[1024,32663+7])
                                  Pexp_sequence
                                  expression (src/lr1.ml[1020,32486+8]..[1020,32486+18])
                                    Pexp_apply
                                    expression (src/lr1.ml[1020,32486+8]..[1020,32486+12])
                                      Pexp_ident "incr" (src/lr1.ml[1020,32486+8]..[1020,32486+12])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr1.ml[1020,32486+13]..[1020,32486+18])
                                          Pexp_ident "extra" (src/lr1.ml[1020,32486+13]..[1020,32486+18])
                                    ]
                                  expression (src/lr1.ml[1021,32506+8]..[1023,32591+71])
                                    Pexp_sequence
                                    expression (src/lr1.ml[1021,32506+8]..[1022,32544+45])
                                      Pexp_ifthenelse
                                      expression (src/lr1.ml[1021,32506+11]..[1021,32506+32])
                                        Pexp_apply
                                        expression (src/lr1.ml[1021,32506+29]..[1021,32506+30])
                                          Pexp_ident ">" (src/lr1.ml[1021,32506+29]..[1021,32506+30])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/lr1.ml[1021,32506+11]..[1021,32506+28])
                                              Pexp_apply
                                              expression (src/lr1.ml[1021,32506+11]..[1021,32506+22])
                                                Pexp_ident "List.length" (src/lr1.ml[1021,32506+11]..[1021,32506+22])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/lr1.ml[1021,32506+23]..[1021,32506+28])
                                                    Pexp_ident "prods" (src/lr1.ml[1021,32506+23]..[1021,32506+28])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (src/lr1.ml[1021,32506+31]..[1021,32506+32])
                                              Pexp_constant PConst_int (1,None)
                                        ]
                                      expression (src/lr1.ml[1022,32544+10]..[1022,32544+45])
                                        Pexp_apply
                                        expression (src/lr1.ml[1022,32544+22]..[1022,32544+24])
                                          Pexp_ident ":=" (src/lr1.ml[1022,32544+22]..[1022,32544+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/lr1.ml[1022,32544+10]..[1022,32544+21])
                                              Pexp_ident "prioritized" (src/lr1.ml[1022,32544+10]..[1022,32544+21])
                                          <arg>
                                          Nolabel
                                            expression (src/lr1.ml[1022,32544+25]..[1022,32544+45])
                                              Pexp_construct "::" (src/lr1.ml[1022,32544+30]..[1022,32544+32])
                                              Some
                                                expression (src/lr1.ml[1022,32544+25]..[1022,32544+45]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (src/lr1.ml[1022,32544+25]..[1022,32544+29])
                                                      Pexp_ident "node" (src/lr1.ml[1022,32544+25]..[1022,32544+29])
                                                    expression (src/lr1.ml[1022,32544+33]..[1022,32544+45])
                                                      Pexp_apply
                                                      expression (src/lr1.ml[1022,32544+33]..[1022,32544+34])
                                                        Pexp_ident "!" (src/lr1.ml[1022,32544+33]..[1022,32544+34])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/lr1.ml[1022,32544+34]..[1022,32544+45])
                                                            Pexp_ident "prioritized" (src/lr1.ml[1022,32544+34]..[1022,32544+45])
                                                      ]
                                                  ]
                                        ]
                                      None
                                    expression (src/lr1.ml[1023,32591+8]..[1023,32591+71])
                                      Pexp_apply
                                      expression (src/lr1.ml[1023,32591+18]..[1023,32591+20])
                                        Pexp_ident ":=" (src/lr1.ml[1023,32591+18]..[1023,32591+20])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr1.ml[1023,32591+8]..[1023,32591+17])
                                            Pexp_ident "extra_nts" (src/lr1.ml[1023,32591+8]..[1023,32591+17])
                                        <arg>
                                        Nolabel
                                          expression (src/lr1.ml[1023,32591+21]..[1023,32591+71])
                                            Pexp_apply
                                            expression (src/lr1.ml[1023,32591+21]..[1023,32591+39])
                                              Pexp_ident "NonterminalSet.add" (src/lr1.ml[1023,32591+21]..[1023,32591+39])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/lr1.ml[1023,32591+40]..[1023,32591+60])
                                                  Pexp_apply
                                                  expression (src/lr1.ml[1023,32591+41]..[1023,32591+54])
                                                    Pexp_ident "Production.nt" (src/lr1.ml[1023,32591+41]..[1023,32591+54])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/lr1.ml[1023,32591+55]..[1023,32591+59])
                                                        Pexp_ident "prod" (src/lr1.ml[1023,32591+55]..[1023,32591+59])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (src/lr1.ml[1023,32591+61]..[1023,32591+71])
                                                  Pexp_apply
                                                  expression (src/lr1.ml[1023,32591+61]..[1023,32591+62])
                                                    Pexp_ident "!" (src/lr1.ml[1023,32591+61]..[1023,32591+62])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/lr1.ml[1023,32591+62]..[1023,32591+71])
                                                        Pexp_ident "extra_nts" (src/lr1.ml[1023,32591+62]..[1023,32591+71])
                                                  ]
                                            ]
                                      ]
                          ]
                          expression (src/lr1.ml[1025,32674+6]..[1030,32893+7])
                            Pexp_apply
                            expression (src/lr1.ml[1025,32674+6]..[1025,32674+24])
                              Pexp_ident "Terminal.iter_real" (src/lr1.ml[1025,32674+6]..[1025,32674+24])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr1.ml[1025,32674+25]..[1030,32893+7])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/lr1.ml[1025,32674+30]..[1025,32674+33])
                                    Ppat_var "tok" (src/lr1.ml[1025,32674+30]..[1025,32674+33])
                                  expression (src/lr1.ml[1026,32711+8]..[1029,32881+11])
                                    Pexp_ifthenelse
                                    expression (src/lr1.ml[1026,32711+11]..[1026,32711+47])
                                      Pexp_apply
                                      expression (src/lr1.ml[1026,32711+11]..[1026,32711+14])
                                        Pexp_ident "not" (src/lr1.ml[1026,32711+11]..[1026,32711+14])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr1.ml[1026,32711+15]..[1026,32711+47])
                                            Pexp_apply
                                            expression (src/lr1.ml[1026,32711+16]..[1026,32711+31])
                                              Pexp_ident "TerminalSet.mem" (src/lr1.ml[1026,32711+16]..[1026,32711+31])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/lr1.ml[1026,32711+32]..[1026,32711+35])
                                                  Pexp_ident "tok" (src/lr1.ml[1026,32711+32]..[1026,32711+35])
                                              <arg>
                                              Nolabel
                                                expression (src/lr1.ml[1026,32711+36]..[1026,32711+46])
                                                  Pexp_ident "acceptable" (src/lr1.ml[1026,32711+36]..[1026,32711+46])
                                            ]
                                      ]
                                    expression (src/lr1.ml[1026,32711+53]..[1029,32881+11])
                                      Pexp_sequence
                                      expression (src/lr1.ml[1027,32770+10]..[1027,32770+78])
                                        Pexp_apply
                                        expression (src/lr1.ml[1027,32770+10]..[1027,32770+24])
                                          Pexp_ident "set_reductions" (src/lr1.ml[1027,32770+10]..[1027,32770+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/lr1.ml[1027,32770+25]..[1027,32770+29])
                                              Pexp_ident "node" (src/lr1.ml[1027,32770+25]..[1027,32770+29])
                                          <arg>
                                          Nolabel
                                            expression (src/lr1.ml[1027,32770+30]..[1027,32770+78])
                                              Pexp_apply
                                              expression (src/lr1.ml[1027,32770+31]..[1027,32770+46])
                                                Pexp_ident "TerminalMap.add" (src/lr1.ml[1027,32770+31]..[1027,32770+46])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/lr1.ml[1027,32770+47]..[1027,32770+50])
                                                    Pexp_ident "tok" (src/lr1.ml[1027,32770+47]..[1027,32770+50])
                                                <arg>
                                                Nolabel
                                                  expression (src/lr1.ml[1027,32770+51]..[1027,32770+59])
                                                    Pexp_construct "::" (src/lr1.ml[1027,32770+53]..[1027,32770+59]) ghost
                                                    Some
                                                      expression (src/lr1.ml[1027,32770+53]..[1027,32770+59]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (src/lr1.ml[1027,32770+53]..[1027,32770+57])
                                                            Pexp_ident "prod" (src/lr1.ml[1027,32770+53]..[1027,32770+57])
                                                          expression (src/lr1.ml[1027,32770+58]..[1027,32770+59]) ghost
                                                            Pexp_construct "[]" (src/lr1.ml[1027,32770+58]..[1027,32770+59]) ghost
                                                            None
                                                        ]
                                                <arg>
                                                Nolabel
                                                  expression (src/lr1.ml[1027,32770+60]..[1027,32770+77])
                                                    Pexp_apply
                                                    expression (src/lr1.ml[1027,32770+61]..[1027,32770+71])
                                                      Pexp_ident "reductions" (src/lr1.ml[1027,32770+61]..[1027,32770+71])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/lr1.ml[1027,32770+72]..[1027,32770+76])
                                                          Pexp_ident "node" (src/lr1.ml[1027,32770+72]..[1027,32770+76])
                                                    ]
                                              ]
                                        ]
                                      expression (src/lr1.ml[1028,32850+10]..[1028,32850+30])
                                        Pexp_apply
                                        expression (src/lr1.ml[1028,32850+10]..[1028,32850+20])
                                          Pexp_ident "Lazy.force" (src/lr1.ml[1028,32850+10]..[1028,32850+20])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/lr1.ml[1028,32850+21]..[1028,32850+30])
                                              Pexp_ident "triggered" (src/lr1.ml[1028,32850+21]..[1028,32850+30])
                                        ]
                                    None
                            ]
                  ]
    ]
  structure_item (src/lr1.ml[1032,32902+0]..[1060,33939+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[1032,32902+4]..[1032,32902+20])
          Ppat_var "extra_reductions" (src/lr1.ml[1032,32902+4]..[1032,32902+20])
        expression (src/lr1.ml[1032,32902+21]..[1060,33939+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[1032,32902+21]..[1032,32902+23])
            Ppat_construct "()" (src/lr1.ml[1032,32902+21]..[1032,32902+23])
            None
          expression (src/lr1.ml[1034,32956+2]..[1060,33939+3])
            Pexp_sequence
            expression (src/lr1.ml[1034,32956+2]..[1039,33196+3])
              Pexp_apply
              expression (src/lr1.ml[1034,32956+2]..[1034,32956+6])
                Pexp_ident "iter" (src/lr1.ml[1034,32956+2]..[1034,32956+6])
              [
                <arg>
                Nolabel
                  expression (src/lr1.ml[1034,32956+7]..[1039,33196+3])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/lr1.ml[1034,32956+12]..[1034,32956+16])
                      Ppat_var "node" (src/lr1.ml[1034,32956+12]..[1034,32956+16])
                    expression (src/lr1.ml[1037,33112+4]..[1038,33160+35])
                      Pexp_ifthenelse
                      expression (src/lr1.ml[1037,33112+7]..[1037,33112+42])
                        Pexp_apply
                        expression (src/lr1.ml[1037,33112+7]..[1037,33112+10])
                          Pexp_ident "not" (src/lr1.ml[1037,33112+7]..[1037,33112+10])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[1037,33112+11]..[1037,33112+42])
                              Pexp_apply
                              expression (src/lr1.ml[1037,33112+12]..[1037,33112+36])
                                Pexp_ident "forbid_default_reduction" (src/lr1.ml[1037,33112+12]..[1037,33112+36])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[1037,33112+37]..[1037,33112+41])
                                    Pexp_ident "node" (src/lr1.ml[1037,33112+37]..[1037,33112+41])
                              ]
                        ]
                      expression (src/lr1.ml[1038,33160+6]..[1038,33160+35])
                        Pexp_apply
                        expression (src/lr1.ml[1038,33160+6]..[1038,33160+30])
                          Pexp_ident "extra_reductions_in_node" (src/lr1.ml[1038,33160+6]..[1038,33160+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[1038,33160+31]..[1038,33160+35])
                              Pexp_ident "node" (src/lr1.ml[1038,33160+31]..[1038,33160+35])
                        ]
                      None
              ]
            expression (src/lr1.ml[1041,33223+2]..[1060,33939+3])
              Pexp_sequence
              expression (src/lr1.ml[1041,33223+2]..[1053,33659+5])
                Pexp_ifthenelse
                expression (src/lr1.ml[1041,33223+5]..[1041,33223+15])
                  Pexp_apply
                  expression (src/lr1.ml[1041,33223+12]..[1041,33223+13])
                    Pexp_ident ">" (src/lr1.ml[1041,33223+12]..[1041,33223+13])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[1041,33223+5]..[1041,33223+11])
                        Pexp_apply
                        expression (src/lr1.ml[1041,33223+5]..[1041,33223+6])
                          Pexp_ident "!" (src/lr1.ml[1041,33223+5]..[1041,33223+6])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr1.ml[1041,33223+6]..[1041,33223+11])
                              Pexp_ident "extra" (src/lr1.ml[1041,33223+6]..[1041,33223+11])
                        ]
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[1041,33223+14]..[1041,33223+15])
                        Pexp_constant PConst_int (0,None)
                  ]
                expression (src/lr1.ml[1041,33223+21]..[1053,33659+5])
                  Pexp_sequence
                  expression (src/lr1.ml[1042,33250+4]..[1047,33479+5])
                    Pexp_apply
                    expression (src/lr1.ml[1042,33250+4]..[1042,33250+14])
                      Pexp_ident "Error.logA" (src/lr1.ml[1042,33250+4]..[1042,33250+14])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[1042,33250+15]..[1042,33250+16])
                          Pexp_constant PConst_int (1,None)
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[1042,33250+17]..[1047,33479+5])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/lr1.ml[1042,33250+22]..[1042,33250+23])
                            Ppat_var "f" (src/lr1.ml[1042,33250+22]..[1042,33250+23])
                          expression (src/lr1.ml[1043,33277+6]..[1046,33444+34])
                            Pexp_sequence
                            expression (src/lr1.ml[1043,33277+6]..[1044,33355+14])
                              Pexp_apply
                              expression (src/lr1.ml[1043,33277+6]..[1043,33277+20])
                                Pexp_ident "Printf.fprintf" (src/lr1.ml[1043,33277+6]..[1043,33277+20])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[1043,33277+21]..[1043,33277+22])
                                    Pexp_ident "f" (src/lr1.ml[1043,33277+21]..[1043,33277+22])
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[1043,33277+23]..[1043,33277+77])
                                    Pexp_constant PConst_string("Extra reductions on error were added in %d states.\n",(src/lr1.ml[1043,33277+24]..[1043,33277+76]),None)
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[1044,33355+8]..[1044,33355+14])
                                    Pexp_apply
                                    expression (src/lr1.ml[1044,33355+8]..[1044,33355+9])
                                      Pexp_ident "!" (src/lr1.ml[1044,33355+8]..[1044,33355+9])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr1.ml[1044,33355+9]..[1044,33355+14])
                                          Pexp_ident "extra" (src/lr1.ml[1044,33355+9]..[1044,33355+14])
                                    ]
                              ]
                            expression (src/lr1.ml[1045,33371+6]..[1046,33444+34])
                              Pexp_apply
                              expression (src/lr1.ml[1045,33371+6]..[1045,33371+20])
                                Pexp_ident "Printf.fprintf" (src/lr1.ml[1045,33371+6]..[1045,33371+20])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[1045,33371+21]..[1045,33371+22])
                                    Pexp_ident "f" (src/lr1.ml[1045,33371+21]..[1045,33371+22])
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[1045,33371+23]..[1045,33371+72])
                                    Pexp_constant PConst_string("Priority played a role in %d of these states.\n",(src/lr1.ml[1045,33371+24]..[1045,33371+71]),None)
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[1046,33444+8]..[1046,33444+34])
                                    Pexp_apply
                                    expression (src/lr1.ml[1046,33444+9]..[1046,33444+20])
                                      Pexp_ident "List.length" (src/lr1.ml[1046,33444+9]..[1046,33444+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr1.ml[1046,33444+21]..[1046,33444+33])
                                          Pexp_apply
                                          expression (src/lr1.ml[1046,33444+21]..[1046,33444+22])
                                            Pexp_ident "!" (src/lr1.ml[1046,33444+21]..[1046,33444+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/lr1.ml[1046,33444+22]..[1046,33444+33])
                                                Pexp_ident "prioritized" (src/lr1.ml[1046,33444+22]..[1046,33444+33])
                                          ]
                                    ]
                              ]
                    ]
                  expression (src/lr1.ml[1048,33486+4]..[1052,33653+5])
                    Pexp_apply
                    expression (src/lr1.ml[1048,33486+4]..[1048,33486+14])
                      Pexp_ident "Error.logA" (src/lr1.ml[1048,33486+4]..[1048,33486+14])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[1048,33486+15]..[1048,33486+16])
                          Pexp_constant PConst_int (2,None)
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[1048,33486+17]..[1052,33653+5])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/lr1.ml[1048,33486+22]..[1048,33486+23])
                            Ppat_var "f" (src/lr1.ml[1048,33486+22]..[1048,33486+23])
                          expression (src/lr1.ml[1049,33513+6]..[1051,33596+56])
                            Pexp_ifthenelse
                            expression (src/lr1.ml[1049,33513+9]..[1049,33513+27])
                              Pexp_apply
                              expression (src/lr1.ml[1049,33513+22]..[1049,33513+24])
                                Pexp_ident "<>" (src/lr1.ml[1049,33513+22]..[1049,33513+24])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[1049,33513+9]..[1049,33513+21])
                                    Pexp_apply
                                    expression (src/lr1.ml[1049,33513+9]..[1049,33513+10])
                                      Pexp_ident "!" (src/lr1.ml[1049,33513+9]..[1049,33513+10])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr1.ml[1049,33513+10]..[1049,33513+21])
                                          Pexp_ident "prioritized" (src/lr1.ml[1049,33513+10]..[1049,33513+21])
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[1049,33513+25]..[1049,33513+27])
                                    Pexp_construct "[]" (src/lr1.ml[1049,33513+25]..[1049,33513+27])
                                    None
                              ]
                            expression (src/lr1.ml[1050,33546+8]..[1051,33596+56])
                              Pexp_apply
                              expression (src/lr1.ml[1050,33546+8]..[1050,33546+22])
                                Pexp_ident "Printf.fprintf" (src/lr1.ml[1050,33546+8]..[1050,33546+22])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[1050,33546+23]..[1050,33546+24])
                                    Pexp_ident "f" (src/lr1.ml[1050,33546+23]..[1050,33546+24])
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[1050,33546+25]..[1050,33546+49])
                                    Pexp_constant PConst_string("These states are %s.\n",(src/lr1.ml[1050,33546+26]..[1050,33546+48]),None)
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[1051,33596+10]..[1051,33596+56])
                                    Pexp_apply
                                    expression (src/lr1.ml[1051,33596+11]..[1051,33596+24])
                                      Pexp_ident "NodeSet.print" (src/lr1.ml[1051,33596+11]..[1051,33596+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr1.ml[1051,33596+25]..[1051,33596+55])
                                          Pexp_apply
                                          expression (src/lr1.ml[1051,33596+26]..[1051,33596+41])
                                            Pexp_ident "NodeSet.of_list" (src/lr1.ml[1051,33596+26]..[1051,33596+41])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/lr1.ml[1051,33596+42]..[1051,33596+54])
                                                Pexp_apply
                                                expression (src/lr1.ml[1051,33596+42]..[1051,33596+43])
                                                  Pexp_ident "!" (src/lr1.ml[1051,33596+42]..[1051,33596+43])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/lr1.ml[1051,33596+43]..[1051,33596+54])
                                                      Pexp_ident "prioritized" (src/lr1.ml[1051,33596+43]..[1051,33596+54])
                                                ]
                                          ]
                                    ]
                              ]
                            None
                    ]
                None
              expression (src/lr1.ml[1055,33724+2]..[1060,33939+3])
                Pexp_apply
                expression (src/lr1.ml[1055,33724+2]..[1055,33724+20])
                  Pexp_ident "OnErrorReduce.iter" (src/lr1.ml[1055,33724+2]..[1055,33724+20])
                [
                  <arg>
                  Nolabel
                    expression (src/lr1.ml[1055,33724+21]..[1060,33939+3])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/lr1.ml[1055,33724+26]..[1055,33724+28])
                        Ppat_var "nt" (src/lr1.ml[1055,33724+26]..[1055,33724+28])
                      expression (src/lr1.ml[1056,33756+4]..[1059,33902+36])
                        Pexp_ifthenelse
                        expression (src/lr1.ml[1056,33756+7]..[1056,33756+45])
                          Pexp_apply
                          expression (src/lr1.ml[1056,33756+7]..[1056,33756+10])
                            Pexp_ident "not" (src/lr1.ml[1056,33756+7]..[1056,33756+10])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[1056,33756+11]..[1056,33756+45])
                                Pexp_apply
                                expression (src/lr1.ml[1056,33756+12]..[1056,33756+30])
                                  Pexp_ident "NonterminalSet.mem" (src/lr1.ml[1056,33756+12]..[1056,33756+30])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[1056,33756+31]..[1056,33756+33])
                                      Pexp_ident "nt" (src/lr1.ml[1056,33756+31]..[1056,33756+33])
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[1056,33756+34]..[1056,33756+44])
                                      Pexp_apply
                                      expression (src/lr1.ml[1056,33756+34]..[1056,33756+35])
                                        Pexp_ident "!" (src/lr1.ml[1056,33756+34]..[1056,33756+35])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr1.ml[1056,33756+35]..[1056,33756+44])
                                            Pexp_ident "extra_nts" (src/lr1.ml[1056,33756+35]..[1056,33756+44])
                                      ]
                                ]
                          ]
                        expression (src/lr1.ml[1057,33807+6]..[1059,33902+36])
                          Pexp_apply
                          expression (src/lr1.ml[1057,33807+6]..[1057,33807+27])
                            Pexp_ident "Error.grammar_warning" (src/lr1.ml[1057,33807+6]..[1057,33807+27])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[1057,33807+28]..[1057,33807+30])
                                Pexp_construct "[]" (src/lr1.ml[1057,33807+28]..[1057,33807+30])
                                None
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[1058,33838+8]..[1058,33838+63])
                                Pexp_constant PConst_string("the declaration %%on_error_reduce %s is never useful.",(src/lr1.ml[1058,33838+9]..[1058,33838+62]),None)
                            <arg>
                            Nolabel
                              expression (src/lr1.ml[1059,33902+8]..[1059,33902+36])
                                Pexp_apply
                                expression (src/lr1.ml[1059,33902+9]..[1059,33902+26])
                                  Pexp_ident "Nonterminal.print" (src/lr1.ml[1059,33902+9]..[1059,33902+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[1059,33902+27]..[1059,33902+32])
                                      Pexp_construct "false" (src/lr1.ml[1059,33902+27]..[1059,33902+32])
                                      None
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[1059,33902+33]..[1059,33902+35])
                                      Pexp_ident "nt" (src/lr1.ml[1059,33902+33]..[1059,33902+35])
                                ]
                          ]
                        None
                ]
    ]
  structure_item (src/lr1.ml[1065,34105+0]..[1078,34469+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[1065,34105+4]..[1065,34105+14])
          Ppat_var "fold_entry" (src/lr1.ml[1065,34105+4]..[1065,34105+14])
        expression (src/lr1.ml[1065,34105+15]..[1078,34469+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[1065,34105+15]..[1065,34105+16])
            Ppat_var "f" (src/lr1.ml[1065,34105+15]..[1065,34105+16])
          expression (src/lr1.ml[1065,34105+17]..[1078,34469+14]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/lr1.ml[1065,34105+17]..[1065,34105+21])
              Ppat_var "accu" (src/lr1.ml[1065,34105+17]..[1065,34105+21])
            expression (src/lr1.ml[1066,34129+2]..[1078,34469+14])
              Pexp_apply
              expression (src/lr1.ml[1066,34129+2]..[1066,34129+20])
                Pexp_ident "ProductionMap.fold" (src/lr1.ml[1066,34129+2]..[1066,34129+20])
              [
                <arg>
                Nolabel
                  expression (src/lr1.ml[1066,34129+21]..[1078,34469+3])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/lr1.ml[1066,34129+26]..[1066,34129+30])
                      Ppat_var "prod" (src/lr1.ml[1066,34129+26]..[1066,34129+30])
                    expression (src/lr1.ml[1066,34129+31]..[1077,34442+26]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/lr1.ml[1066,34129+31]..[1066,34129+36])
                        Ppat_var "state" (src/lr1.ml[1066,34129+31]..[1066,34129+36])
                      expression (src/lr1.ml[1066,34129+37]..[1077,34442+26]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/lr1.ml[1066,34129+37]..[1066,34129+41])
                          Ppat_var "accu" (src/lr1.ml[1066,34129+37]..[1066,34129+41])
                        expression (src/lr1.ml[1067,34174+4]..[1077,34442+26])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/lr1.ml[1067,34174+8]..[1067,34174+10])
                                Ppat_var "nt" (src/lr1.ml[1067,34174+8]..[1067,34174+10])
                              core_type (src/lr1.ml[1067,34174+13]..[1067,34174+26])
                                Ptyp_constr "Nonterminal.t" (src/lr1.ml[1067,34174+13]..[1067,34174+26])
                                []
                              expression (src/lr1.ml[1068,34203+6]..[1072,34293+22])
                                Pexp_match
                                expression (src/lr1.ml[1068,34203+12]..[1068,34203+36])
                                  Pexp_apply
                                  expression (src/lr1.ml[1068,34203+12]..[1068,34203+31])
                                    Pexp_ident "Production.classify" (src/lr1.ml[1068,34203+12]..[1068,34203+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[1068,34203+32]..[1068,34203+36])
                                        Pexp_ident "prod" (src/lr1.ml[1068,34203+32]..[1068,34203+36])
                                  ]
                                [
                                  <case>
                                    pattern (src/lr1.ml[1069,34245+8]..[1069,34245+15])
                                      Ppat_construct "Some" (src/lr1.ml[1069,34245+8]..[1069,34245+12])
                                      Some
                                        []
                                        pattern (src/lr1.ml[1069,34245+13]..[1069,34245+15])
                                          Ppat_var "nt" (src/lr1.ml[1069,34245+13]..[1069,34245+15])
                                    expression (src/lr1.ml[1070,34264+10]..[1070,34264+12])
                                      Pexp_ident "nt" (src/lr1.ml[1070,34264+10]..[1070,34264+12])
                                  <case>
                                    pattern (src/lr1.ml[1071,34277+8]..[1071,34277+12])
                                      Ppat_construct "None" (src/lr1.ml[1071,34277+8]..[1071,34277+12])
                                      None
                                    expression (src/lr1.ml[1072,34293+10]..[1072,34293+22])
                                      Pexp_assert
                                      expression (src/lr1.ml[1072,34293+17]..[1072,34293+22])
                                        Pexp_construct "false" (src/lr1.ml[1072,34293+17]..[1072,34293+22])
                                        None
                                ]
                          ]
                          expression (src/lr1.ml[1074,34356+4]..[1077,34442+26])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/lr1.ml[1074,34356+8]..[1074,34356+9])
                                  Ppat_var "t" (src/lr1.ml[1074,34356+8]..[1074,34356+9])
                                core_type (src/lr1.ml[1074,34356+12]..[1074,34356+29])
                                  Ptyp_constr "Stretch.ocamltype" (src/lr1.ml[1074,34356+12]..[1074,34356+29])
                                  []
                                expression (src/lr1.ml[1075,34388+6]..[1075,34388+46])
                                  Pexp_apply
                                  expression (src/lr1.ml[1075,34388+6]..[1075,34388+43])
                                    Pexp_ident "Nonterminal.ocamltype_of_start_symbol" (src/lr1.ml[1075,34388+6]..[1075,34388+43])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/lr1.ml[1075,34388+44]..[1075,34388+46])
                                        Pexp_ident "nt" (src/lr1.ml[1075,34388+44]..[1075,34388+46])
                                  ]
                            ]
                            expression (src/lr1.ml[1077,34442+4]..[1077,34442+26])
                              Pexp_apply
                              expression (src/lr1.ml[1077,34442+4]..[1077,34442+5])
                                Pexp_ident "f" (src/lr1.ml[1077,34442+4]..[1077,34442+5])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[1077,34442+6]..[1077,34442+10])
                                    Pexp_ident "prod" (src/lr1.ml[1077,34442+6]..[1077,34442+10])
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[1077,34442+11]..[1077,34442+16])
                                    Pexp_ident "state" (src/lr1.ml[1077,34442+11]..[1077,34442+16])
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[1077,34442+17]..[1077,34442+19])
                                    Pexp_ident "nt" (src/lr1.ml[1077,34442+17]..[1077,34442+19])
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[1077,34442+20]..[1077,34442+21])
                                    Pexp_ident "t" (src/lr1.ml[1077,34442+20]..[1077,34442+21])
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[1077,34442+22]..[1077,34442+26])
                                    Pexp_ident "accu" (src/lr1.ml[1077,34442+22]..[1077,34442+26])
                              ]
                <arg>
                Nolabel
                  expression (src/lr1.ml[1078,34469+4]..[1078,34469+9])
                    Pexp_ident "entry" (src/lr1.ml[1078,34469+4]..[1078,34469+9])
                <arg>
                Nolabel
                  expression (src/lr1.ml[1078,34469+10]..[1078,34469+14])
                    Pexp_ident "accu" (src/lr1.ml[1078,34469+10]..[1078,34469+14])
              ]
    ]
  structure_item (src/lr1.ml[1080,34485+0]..[1085,34654+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[1080,34485+4]..[1080,34485+15])
          Ppat_var "entry_of_nt" (src/lr1.ml[1080,34485+4]..[1080,34485+15])
        expression (src/lr1.ml[1080,34485+16]..[1085,34654+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[1080,34485+16]..[1080,34485+18])
            Ppat_var "nt" (src/lr1.ml[1080,34485+16]..[1080,34485+18])
          expression (src/lr1.ml[1082,34561+2]..[1085,34654+16])
            Pexp_try
            expression (src/lr1.ml[1083,34567+4]..[1083,34567+66])
              Pexp_apply
              expression (src/lr1.ml[1083,34567+4]..[1083,34567+22])
                Pexp_ident "ProductionMap.find" (src/lr1.ml[1083,34567+4]..[1083,34567+22])
              [
                <arg>
                Nolabel
                  expression (src/lr1.ml[1083,34567+23]..[1083,34567+60])
                    Pexp_apply
                    expression (src/lr1.ml[1083,34567+24]..[1083,34567+56])
                      Pexp_ident "Production.startsymbol2startprod" (src/lr1.ml[1083,34567+24]..[1083,34567+56])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr1.ml[1083,34567+57]..[1083,34567+59])
                          Pexp_ident "nt" (src/lr1.ml[1083,34567+57]..[1083,34567+59])
                    ]
                <arg>
                Nolabel
                  expression (src/lr1.ml[1083,34567+61]..[1083,34567+66])
                    Pexp_ident "entry" (src/lr1.ml[1083,34567+61]..[1083,34567+66])
              ]
            [
              <case>
                pattern (src/lr1.ml[1084,34634+7]..[1084,34634+16])
                  Ppat_construct "Not_found" (src/lr1.ml[1084,34634+7]..[1084,34634+16])
                  None
                expression (src/lr1.ml[1085,34654+4]..[1085,34654+16])
                  Pexp_assert
                  expression (src/lr1.ml[1085,34654+11]..[1085,34654+16])
                    Pexp_construct "false" (src/lr1.ml[1085,34654+11]..[1085,34654+16])
                    None
            ]
    ]
  structure_item (src/lr1.ml[1087,34672+0]..[1087,34672+32])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (src/lr1.ml[1087,34672+0]..[1087,34672+32])
          pext_name = "Found"
          pext_kind =
            Pext_decl
              [
                core_type (src/lr1.ml[1087,34672+19]..[1087,34672+32])
                  Ptyp_constr "Nonterminal.t" (src/lr1.ml[1087,34672+19]..[1087,34672+32])
                  []
              ]
              None
  structure_item (src/lr1.ml[1089,34706+0]..[1104,35144+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[1089,34706+4]..[1089,34706+15])
          Ppat_var "nt_of_entry" (src/lr1.ml[1089,34706+4]..[1089,34706+15])
        expression (src/lr1.ml[1089,34706+16]..[1104,35144+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr1.ml[1089,34706+16]..[1089,34706+17])
            Ppat_var "s" (src/lr1.ml[1089,34706+16]..[1089,34706+17])
          expression (src/lr1.ml[1091,34766+2]..[1104,35144+6])
            Pexp_sequence
            expression (src/lr1.ml[1091,34766+2]..[1091,34766+35])
              Pexp_assert
              expression (src/lr1.ml[1091,34766+9]..[1091,34766+35])
                Pexp_apply
                expression (src/lr1.ml[1091,34766+28]..[1091,34766+29])
                  Pexp_ident "=" (src/lr1.ml[1091,34766+28]..[1091,34766+29])
                [
                  <arg>
                  Nolabel
                    expression (src/lr1.ml[1091,34766+10]..[1091,34766+27])
                      Pexp_apply
                      expression (src/lr1.ml[1091,34766+10]..[1091,34766+25])
                        Pexp_ident "incoming_symbol" (src/lr1.ml[1091,34766+10]..[1091,34766+25])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr1.ml[1091,34766+26]..[1091,34766+27])
                            Pexp_ident "s" (src/lr1.ml[1091,34766+26]..[1091,34766+27])
                      ]
                  <arg>
                  Nolabel
                    expression (src/lr1.ml[1091,34766+30]..[1091,34766+34])
                      Pexp_construct "None" (src/lr1.ml[1091,34766+30]..[1091,34766+34])
                      None
                ]
            expression (src/lr1.ml[1092,34803+2]..[1104,35144+6])
              Pexp_try
              expression (src/lr1.ml[1093,34809+4]..[1102,35108+16])
                Pexp_sequence
                expression (src/lr1.ml[1093,34809+4]..[1100,35027+11])
                  Pexp_apply
                  expression (src/lr1.ml[1093,34809+4]..[1093,34809+22])
                    Pexp_ident "ProductionMap.iter" (src/lr1.ml[1093,34809+4]..[1093,34809+22])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[1093,34809+23]..[1100,35027+5])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/lr1.ml[1093,34809+28]..[1093,34809+32])
                          Ppat_var "prod" (src/lr1.ml[1093,34809+28]..[1093,34809+32])
                        expression (src/lr1.ml[1093,34809+33]..[1099,34998+28]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/lr1.ml[1093,34809+33]..[1093,34809+38])
                            Ppat_var "entry" (src/lr1.ml[1093,34809+33]..[1093,34809+38])
                          expression (src/lr1.ml[1094,34851+6]..[1099,34998+28])
                            Pexp_ifthenelse
                            expression (src/lr1.ml[1094,34851+9]..[1094,34851+33])
                              Pexp_apply
                              expression (src/lr1.ml[1094,34851+30]..[1094,34851+31])
                                Pexp_ident "=" (src/lr1.ml[1094,34851+30]..[1094,34851+31])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[1094,34851+9]..[1094,34851+29])
                                    Pexp_apply
                                    expression (src/lr1.ml[1094,34851+9]..[1094,34851+21])
                                      Pexp_ident "Node.compare" (src/lr1.ml[1094,34851+9]..[1094,34851+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr1.ml[1094,34851+22]..[1094,34851+23])
                                          Pexp_ident "s" (src/lr1.ml[1094,34851+22]..[1094,34851+23])
                                      <arg>
                                      Nolabel
                                        expression (src/lr1.ml[1094,34851+24]..[1094,34851+29])
                                          Pexp_ident "entry" (src/lr1.ml[1094,34851+24]..[1094,34851+29])
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/lr1.ml[1094,34851+32]..[1094,34851+33])
                                    Pexp_constant PConst_int (0,None)
                              ]
                            expression (src/lr1.ml[1095,34890+8]..[1099,34998+28])
                              Pexp_match
                              expression (src/lr1.ml[1095,34890+14]..[1095,34890+38])
                                Pexp_apply
                                expression (src/lr1.ml[1095,34890+14]..[1095,34890+33])
                                  Pexp_ident "Production.classify" (src/lr1.ml[1095,34890+14]..[1095,34890+33])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr1.ml[1095,34890+34]..[1095,34890+38])
                                      Pexp_ident "prod" (src/lr1.ml[1095,34890+34]..[1095,34890+38])
                                ]
                              [
                                <case>
                                  pattern (src/lr1.ml[1096,34934+10]..[1096,34934+14])
                                    Ppat_construct "None" (src/lr1.ml[1096,34934+10]..[1096,34934+14])
                                    None
                                  expression (src/lr1.ml[1097,34952+12]..[1097,34952+24])
                                    Pexp_assert
                                    expression (src/lr1.ml[1097,34952+19]..[1097,34952+24])
                                      Pexp_construct "false" (src/lr1.ml[1097,34952+19]..[1097,34952+24])
                                      None
                                <case>
                                  pattern (src/lr1.ml[1098,34977+10]..[1098,34977+17])
                                    Ppat_construct "Some" (src/lr1.ml[1098,34977+10]..[1098,34977+14])
                                    Some
                                      []
                                      pattern (src/lr1.ml[1098,34977+15]..[1098,34977+17])
                                        Ppat_var "nt" (src/lr1.ml[1098,34977+15]..[1098,34977+17])
                                  expression (src/lr1.ml[1099,34998+12]..[1099,34998+28])
                                    Pexp_apply
                                    expression (src/lr1.ml[1099,34998+12]..[1099,34998+17])
                                      Pexp_ident "raise" (src/lr1.ml[1099,34998+12]..[1099,34998+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr1.ml[1099,34998+18]..[1099,34998+28])
                                          Pexp_construct "Found" (src/lr1.ml[1099,34998+19]..[1099,34998+24])
                                          Some
                                            expression (src/lr1.ml[1099,34998+25]..[1099,34998+27])
                                              Pexp_ident "nt" (src/lr1.ml[1099,34998+25]..[1099,34998+27])
                                    ]
                              ]
                            None
                    <arg>
                    Nolabel
                      expression (src/lr1.ml[1100,35027+6]..[1100,35027+11])
                        Pexp_ident "entry" (src/lr1.ml[1100,35027+6]..[1100,35027+11])
                  ]
                expression (src/lr1.ml[1102,35108+4]..[1102,35108+16])
                  Pexp_assert
                  expression (src/lr1.ml[1102,35108+11]..[1102,35108+16])
                    Pexp_construct "false" (src/lr1.ml[1102,35108+11]..[1102,35108+16])
                    None
              [
                <case>
                  pattern (src/lr1.ml[1103,35125+7]..[1103,35125+15])
                    Ppat_construct "Found" (src/lr1.ml[1103,35125+7]..[1103,35125+12])
                    Some
                      []
                      pattern (src/lr1.ml[1103,35125+13]..[1103,35125+15])
                        Ppat_var "nt" (src/lr1.ml[1103,35125+13]..[1103,35125+15])
                  expression (src/lr1.ml[1104,35144+4]..[1104,35144+6])
                    Pexp_ident "nt" (src/lr1.ml[1104,35144+4]..[1104,35144+6])
              ]
    ]
]

open Grammar
open LR1Sigs
let () = Slr.check ()
module type ALGORITHM  = sig module Run : () -> LR1_AUTOMATON end
let (algo, mode) =
  let open Settings in
    match construction_mode with
    | ModeCanonical ->
        (((module LR1Canonical) : (module ALGORITHM)), "canonical")
    | ModeInclusionOnly ->
        (((module LR1Pager) : (module ALGORITHM)), "no-pager")
    | ModePager -> (((module LR1Pager) : (module ALGORITHM)), "pager")
    | ModeLALR -> (((module LALR) : (module ALGORITHM)), "lalr")
module Algorithm = (val (algo : (module ALGORITHM)))
let () =
  Error.logA 1
    (fun f -> Printf.fprintf f "The construction mode is %s.\n" mode)
module Raw = (Algorithm.Run)()
let () =
  Error.logA 1
    (fun f ->
       Printf.fprintf f "Built an LR(1) automaton with %d states.\n" Raw.n)
type node = int
module M =
  struct
    let marked : bool array = Array.make Raw.n false
    let mark (node : Raw.node) = marked.(Raw.number node) <- true
    let is_marked (node : Raw.node) = marked.(Raw.number node)
  end
let unreachable = (-1)
let _number : node array = Array.make Raw.n unreachable
let transport (raw_node : Raw.node) = (_number.(Raw.number raw_node) : node)
let transitions : Raw.node SymbolMap.t array =
  Array.init Raw.n (fun i -> Raw.transitions (Raw.node i))
let predecessors : node list array = Array.make Raw.n []
let reductions : Lr0.reductions array = Array.make Raw.n TerminalMap.empty
let _conflict_tokens : TerminalSet.t array =
  Array.make Raw.n TerminalSet.empty
let _has_eos_conflict : (Production.index list * TerminalSet.t) option array
  = Array.make Raw.n None
let forbid_default_reduction : bool array = Array.make Raw.n false
let n = ref 0
let conflict_nodes : node list ref = ref []
let shift_reduce = ref 0
let reduce_reduce = ref 0
let silently_solved = ref 0
module RawForwardEdges =
  struct
    type node = Raw.node
    type label = Symbol.t
    let foreach_outgoing_edge node f =
      let i = Raw.number node in SymbolMap.iter f (transitions.(i))
    let foreach_root f =
      ProductionMap.iter (fun _prod -> fun node -> f node) Raw.entry
  end
let discover (raw_node : Raw.node) =
  let i = Raw.number raw_node
  and state = Raw.state raw_node in
  let node : node = Misc.postincrement n in
  _number.(i) <- node;
  (let has_shift_reduce = ref false
   and has_reduce_reduce = ref false in
   let foreach_reduction f =
     TerminalMap.fold f (Lr0.reductions_table state) TerminalMap.empty in
   reductions.(i) <-
     (foreach_reduction
        (fun tok ->
           fun prods ->
             fun reductions ->
               assert (prods <> []);
               if SymbolMap.mem (Symbol.T tok) (transitions.(i))
               then
                 (assert (not (Terminal.equal tok Terminal.sharp));
                  if (List.length prods) = 1
                  then
                    (let prod = List.hd prods in
                     match Precedence.shift_reduce tok prod with
                     | Precedence.ChooseShift ->
                         (incr silently_solved; reductions)
                     | Precedence.ChooseReduce ->
                         (incr silently_solved;
                          transitions.(i) <-
                            (SymbolMap.remove (Symbol.T tok)
                               (transitions.(i)));
                          TerminalMap.add tok prods reductions)
                     | Precedence.ChooseNeither ->
                         (incr silently_solved;
                          transitions.(i) <-
                            (SymbolMap.remove (Symbol.T tok)
                               (transitions.(i)));
                          forbid_default_reduction.(i) <- true;
                          reductions)
                     | Precedence.DontKnow ->
                         (_conflict_tokens.(i) <-
                            (Grammar.TerminalSet.add tok
                               (_conflict_tokens.(i)));
                          has_shift_reduce := true;
                          TerminalMap.add tok prods reductions))
                  else
                    (let choices =
                       List.map (Precedence.shift_reduce tok) prods in
                     if
                       List.for_all
                         (fun choice ->
                            match choice with
                            | Precedence.ChooseShift -> true
                            | _ -> false) choices
                     then
                       (silently_solved :=
                          ((!silently_solved) + (List.length prods));
                        reductions)
                     else
                       if List.for_all ((=) Precedence.ChooseNeither) choices
                       then
                         (silently_solved :=
                            ((!silently_solved) + (List.length prods));
                          transitions.(i) <-
                            (SymbolMap.remove (Symbol.T tok)
                               (transitions.(i)));
                          reductions)
                       else
                         (_conflict_tokens.(i) <-
                            (Grammar.TerminalSet.add tok
                               (_conflict_tokens.(i)));
                          has_shift_reduce := true;
                          has_reduce_reduce := true;
                          TerminalMap.add tok prods reductions)))
               else
                 (if (List.length prods) >= 2
                  then
                    (_conflict_tokens.(i) <-
                       (Grammar.TerminalSet.add tok (_conflict_tokens.(i)));
                     has_reduce_reduce := true);
                  TerminalMap.add tok prods reductions)));
   (let transitions = transitions.(i)
    and reductions = reductions.(i) in
    if Lr0.has_eos_conflict transitions reductions
    then
      (let (prods, reductions) =
         TerminalMap.lookup_and_remove Terminal.sharp reductions in
       let toks =
         TerminalSet.union (Lr0.transition_tokens transitions)
           (Lr0.reduction_tokens reductions) in
       _has_eos_conflict.(i) <- (Some (prods, toks)));
    if not (TerminalSet.is_empty (_conflict_tokens.(i)))
    then
      (conflict_nodes := (node :: (!conflict_nodes));
       if !has_shift_reduce then incr shift_reduce;
       if !has_reduce_reduce then incr reduce_reduce)))
let traverse (source : Raw.node) _symbol (target : Raw.node) =
  let j = Raw.number target in
  predecessors.(j) <- ((transport source) :: (predecessors.(j)))
let () =
  let module D = struct let traverse = traverse
                        let discover = discover end in
    let module R = (((DFS.Run)(RawForwardEdges))(M))(D) in ()
let () =
  if (!silently_solved) = 1
  then
    Error.logA 1
      (fun f ->
         Printf.fprintf f "One shift/reduce conflict was silently solved.\n")
  else
    if (!silently_solved) > 1
    then
      Error.logA 1
        (fun f ->
           Printf.fprintf f
             "%d shift/reduce conflicts were silently solved.\n"
             (!silently_solved));
  if (!n) < Raw.n
  then
    Error.logA 1
      (fun f ->
         Printf.fprintf f
           "Only %d states remain after resolving shift/reduce conflicts.\n"
           (!n))
let () = Grammar.diagnostics ()
let n = !n
let conflict_nodes = !conflict_nodes
let raw : node -> int =
  let raw = Array.make n (-1) in
  Array.iteri
    (fun i ->
       fun (node : node) ->
         assert ((0 <= i) && (i < Raw.n));
         if node <> unreachable
         then (assert ((0 <= node) && (node < n)); raw.(node) <- i)) _number;
  (fun node -> assert ((0 <= node) && (node < n)); raw.(node))
let transitions : node SymbolMap.t array =
  Array.init n (fun node -> SymbolMap.map transport (transitions.(raw node)))
let () = Time.tick "Construction of the LR(1) automaton"
let number node = node
let print node = Printf.sprintf "%d" (number node)
let entry = ProductionMap.map transport Raw.entry
let state node = Raw.state (Raw.node (raw node))
let transitions node = assert ((0 <= node) && (node < n)); transitions.(node)
let set_reductions node table = reductions.(raw node) <- table
let reductions node = reductions.(raw node)
let predecessors node = predecessors.(raw node)
let conflict_tokens node = _conflict_tokens.(raw node)
let conflicts f =
  List.iter (fun node -> f (conflict_tokens node) node) conflict_nodes
let forbid_default_reduction node = forbid_default_reduction.(raw node)
let has_eos_conflict node = _has_eos_conflict.(raw node)
let incoming_symbol node = Lr0.incoming_symbol (Lr0.core (state node))
let is_start node =
  match incoming_symbol node with | None -> true | Some _ -> false
module ForwardEdges =
  struct
    type nonrec node = node
    type label = Symbol.t
    let foreach_outgoing_edge node f = SymbolMap.iter f (transitions node)
  end
module BackwardEdges =
  struct
    type nonrec node = node
    type label = unit
    let foreach_outgoing_edge node f =
      List.iter (fun node -> f () node) (predecessors node)
  end
let is_start_or_exit node =
  let items = Lr0.items (Lr0.core (state node)) in
  if (Item.Set.cardinal items) = 1
  then
    let item = Item.Set.choose items in
    let (prod, _, _, _, _) = Item.def item in Production.classify prod
  else None
let fold f accu =
  let accu = ref accu in
  for node = 0 to n - 1 do accu := (f (!accu) node) done; !accu
let iter f = for node = 0 to n - 1 do f node done
let map f = List.rev (fold (fun accu -> fun node -> (f node) :: accu) [])
let foldx f =
  fold
    (fun accu ->
       fun node ->
         match incoming_symbol node with
         | None -> accu
         | Some _ -> f accu node)
let iterx f =
  iter
    (fun node ->
       match incoming_symbol node with | None -> () | Some _ -> f node)
let tabulate (f : node -> 'a) = Misc.tabulate n f
let sum (f : node -> int) = Misc.sum n f
let lookup symbol index =
  try SymbolMap.find symbol index with | Not_found -> []
let index : node list SymbolMap.t =
  fold
    (fun index ->
       fun node ->
         match incoming_symbol node with
         | None -> index
         | Some symbol ->
             SymbolMap.add symbol (node :: (lookup symbol index)) index)
    SymbolMap.empty
let targets f accu symbol =
  let targets = lookup symbol index in
  List.fold_left
    (fun accu -> fun target -> f accu (predecessors target) target) accu
    targets
let start2item node =
  let state : Lr0.lr1state = state node in
  let core : Lr0.node = Lr0.core state in
  let items : Item.Set.t = Lr0.items core in
  assert ((Item.Set.cardinal items) = 1); Item.Set.choose items
let has_beforeend node =
  TerminalMap.fold
    (fun _ ->
       fun prods ->
         fun accu ->
           accu ||
             (let prod = Misc.single prods in
              (not (Production.is_start prod)) &&
                (let action = Production.action prod in
                 Action.has_beforeend action))) (reductions node) false
let acceptable_tokens (s : node) =
  let transitions =
    SymbolMap.remove (Symbol.T Terminal.error) (transitions s)
  and reductions = TerminalMap.remove Terminal.error (reductions s) in
  let covered =
    SymbolMap.fold
      (fun symbol ->
         fun _ ->
           fun covered ->
             match symbol with
             | Symbol.T tok -> TerminalSet.add tok covered
             | Symbol.N _ -> covered) transitions TerminalSet.empty in
  let covered =
    ProductionMap.fold
      (fun _ -> fun toks -> fun covered -> TerminalSet.union toks covered)
      (Lr0.invert reductions) covered in
  covered
let () =
  if (!shift_reduce) = 1
  then Error.grammar_warning [] "one state has shift/reduce conflicts."
  else
    if (!shift_reduce) > 1
    then
      Error.grammar_warning [] "%d states have shift/reduce conflicts."
        (!shift_reduce);
  if (!reduce_reduce) = 1
  then Error.grammar_warning [] "one state has reduce/reduce conflicts."
  else
    if (!reduce_reduce) > 1
    then
      Error.grammar_warning [] "%d states have reduce/reduce conflicts."
        (!reduce_reduce)
module Node = struct type t = node
                     let compare = (-) end
module NodeSet =
  struct
    include (Set.Make)(Node)
    let leq_join s1 s2 = if subset s1 s2 then s2 else union s1 s2
    let print s =
      Printf.sprintf "{ %s }"
        (Misc.separated_iter_to_string print ", " (fun f -> iter f s))
  end
module NodeMap = (Map.Make)(Node)
module ImperativeNodeMap =
  (Fix.Glue.ArraysAsImperativeMaps)(struct let n = n end)
let all_sources symbol =
  targets
    (fun accu ->
       fun sources ->
         fun _target ->
           List.fold_left (fun accu -> fun source -> NodeSet.add source accu)
             accu sources) NodeSet.empty symbol
let all_targets symbol =
  targets (fun accu -> fun _sources -> fun target -> NodeSet.add target accu)
    NodeSet.empty symbol
let production_where : NodeSet.t ProductionMap.t option ref = ref None
let initialize_production_where () =
  production_where :=
    (Some
       (fold
          (fun accu ->
             fun node ->
               TerminalMap.fold
                 (fun _ ->
                    fun prods ->
                      fun accu ->
                        let prod = Misc.single prods in
                        let nodes =
                          try ProductionMap.lookup prod accu
                          with | Not_found -> NodeSet.empty in
                        ProductionMap.add prod (NodeSet.add node nodes) accu)
                 (reductions node) accu) ProductionMap.empty))
let production_where (prod : Production.index) =
  (match !production_where with
   | None -> assert false
   | Some production_where ->
       (try
          let nodes = ProductionMap.lookup prod production_where in
          assert (not (NodeSet.is_empty nodes)); nodes
        with | Not_found -> NodeSet.empty) : NodeSet.t)
let warn_about_productions_never_reduced () =
  let count = ref 0 in
  Production.iter
    (fun prod ->
       if NodeSet.is_empty (production_where prod)
       then
         match Production.classify prod with
         | Some nt ->
             (incr count;
              Error.grammar_warning (Nonterminal.positions nt)
                "symbol %s is never accepted." (Nonterminal.print false nt))
         | None ->
             (incr count;
              Error.grammar_warning (Production.positions prod)
                "production %s is never reduced." (Production.print prod)));
  if (!count) > 0
  then
    (let (plural_mark, be) =
       if (!count) > 1 then ("s", "are") else ("", "is") in
     Error.grammar_warning [] "in total, %d production%s %s never reduced."
       (!count) plural_mark be)
let rec best choice =
  function
  | [] -> choice
  | prod::prods ->
      (match Precedence.reduce_reduce choice prod with
       | Some choice -> best choice prods
       | None ->
           (Error.signal Error.grammatical_error
              ((Production.positions choice) @ (Production.positions prod))
              "do not know how to resolve a reduce/reduce conflict\nbetween the following two productions:\n%s\n%s"
              (Production.print choice) (Production.print prod);
            choice))
let default_conflict_resolution () =
  let shift_reduce = ref 0
  and reduce_reduce = ref 0 in
  conflict_nodes |>
    (List.iter
       (fun node ->
          _conflict_tokens.(raw node) <- TerminalSet.empty;
          set_reductions node
            (TerminalMap.fold
               (fun tok ->
                  fun prods ->
                    fun reductions ->
                      try
                        let (_ : node) =
                          SymbolMap.find (Symbol.T tok) (transitions node) in
                        shift_reduce :=
                          ((List.length prods) + (!shift_reduce));
                        reductions
                      with
                      | Not_found ->
                          (match prods with
                           | [] -> assert false
                           | _::[] -> TerminalMap.add tok prods reductions
                           | prod::(_::_ as prods) ->
                               (reduce_reduce :=
                                  ((List.length prods) + (!reduce_reduce));
                                TerminalMap.add tok [best prod prods]
                                  reductions))) (reductions node)
               TerminalMap.empty)));
  if (!shift_reduce) = 1
  then Error.warning [] "one shift/reduce conflict was arbitrarily resolved."
  else
    if (!shift_reduce) > 1
    then
      Error.warning [] "%d shift/reduce conflicts were arbitrarily resolved."
        (!shift_reduce);
  if (!reduce_reduce) = 1
  then
    Error.warning [] "one reduce/reduce conflict was arbitrarily resolved."
  else
    if (!reduce_reduce) > 1
    then
      Error.warning []
        "%d reduce/reduce conflicts were arbitrarily resolved."
        (!reduce_reduce);
  (let eos_conflicts = ref 0 in
   iter
     (fun node ->
        let transitions = transitions node
        and reductions = reductions node in
        if Lr0.has_eos_conflict transitions reductions
        then
          let (_, reductions) =
            TerminalMap.lookup_and_remove Terminal.sharp reductions in
          (set_reductions node reductions;
           _has_eos_conflict.(raw node) <- None;
           incr eos_conflicts));
   if (!eos_conflicts) = 1
   then
     Error.grammar_warning []
       "one state end-of-stream conflict was arbitrarily resolved."
   else
     if (!eos_conflicts) > 1
     then
       Error.grammar_warning []
         "%d end-of-stream conflicts were arbitrarily resolved."
         (!eos_conflicts);
   initialize_production_where ();
   warn_about_productions_never_reduced ())
let extra = ref 0
let prioritized = ref []
let extra_nts = ref NonterminalSet.empty
let extra_reductions_in_node node =
  let productions : _ ProductionMap.t = Lr0.invert (reductions node) in
  let prods : Production.index list =
    ProductionMap.fold (fun prod -> fun _ -> fun prods -> prod :: prods)
      productions [] in
  let prods = List.filter OnErrorReduce.reduce prods in
  match Misc.best OnErrorReduce.preferable prods with
  | None -> ()
  | Some prod ->
      let acceptable = acceptable_tokens node in
      let triggered =
        lazy
          (incr extra;
           if (List.length prods) > 1
           then prioritized := (node :: (!prioritized));
           extra_nts :=
             (NonterminalSet.add (Production.nt prod) (!extra_nts))) in
      Terminal.iter_real
        (fun tok ->
           if not (TerminalSet.mem tok acceptable)
           then
             (set_reductions node
                (TerminalMap.add tok [prod] (reductions node));
              Lazy.force triggered))
let extra_reductions () =
  iter
    (fun node ->
       if not (forbid_default_reduction node)
       then extra_reductions_in_node node);
  if (!extra) > 0
  then
    (Error.logA 1
       (fun f ->
          Printf.fprintf f
            "Extra reductions on error were added in %d states.\n" (!extra);
          Printf.fprintf f "Priority played a role in %d of these states.\n"
            (List.length (!prioritized)));
     Error.logA 2
       (fun f ->
          if (!prioritized) <> []
          then
            Printf.fprintf f "These states are %s.\n"
              (NodeSet.print (NodeSet.of_list (!prioritized)))));
  OnErrorReduce.iter
    (fun nt ->
       if not (NonterminalSet.mem nt (!extra_nts))
       then
         Error.grammar_warning []
           "the declaration %%on_error_reduce %s is never useful."
           (Nonterminal.print false nt))
let fold_entry f accu =
  ProductionMap.fold
    (fun prod ->
       fun state ->
         fun accu ->
           let nt : Nonterminal.t =
             match Production.classify prod with
             | Some nt -> nt
             | None -> assert false in
           let t : Stretch.ocamltype =
             Nonterminal.ocamltype_of_start_symbol nt in
           f prod state nt t accu) entry accu
let entry_of_nt nt =
  try ProductionMap.find (Production.startsymbol2startprod nt) entry
  with | Not_found -> assert false
exception Found of Nonterminal.t 
let nt_of_entry s =
  assert ((incoming_symbol s) = None);
  (try
     ProductionMap.iter
       (fun prod ->
          fun entry ->
            if (Node.compare s entry) = 0
            then
              match Production.classify prod with
              | None -> assert false
              | Some nt -> raise (Found nt)) entry;
     assert false
   with | Found nt -> nt)
[
  structure_item (src/lr1.ml[14,993+0]..src/lr1.ml[14,993+12])
    Tstr_open Fresh
    module_expr (src/lr1.ml[14,993+5]..src/lr1.ml[14,993+12])
      Tmod_ident "Dune__exe!.Grammar"
  structure_item (src/lr1.ml[15,1006+0]..src/lr1.ml[15,1006+12])
    Tstr_open Fresh
    module_expr (src/lr1.ml[15,1006+5]..src/lr1.ml[15,1006+12])
      Tmod_ident "Dune__exe!.LR1Sigs"
  structure_item (src/lr1.ml[21,1137+0]..src/lr1.ml[22,1146+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[21,1137+4]..src/lr1.ml[21,1137+6])
          Tpat_construct "()"
          []
          None
        expression (src/lr1.ml[22,1146+2]..src/lr1.ml[22,1146+13])
          Texp_apply
          expression (src/lr1.ml[22,1146+2]..src/lr1.ml[22,1146+11])
            Texp_ident "Dune__exe!.Slr.check"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[22,1146+11]..src/lr1.ml[22,1146+13])
                Texp_construct "()"
                []
          ]
    ]
  structure_item (src/lr1.ml[28,1318+0]..src/lr1.ml[30,1378+3])
    Tstr_modtype "ALGORITHM/416"
      module_type (src/lr1.ml[28,1318+24]..src/lr1.ml[30,1378+3])
        Tmty_signature
        [
          signature_item (src/lr1.ml[29,1346+2]..src/lr1.ml[29,1346+31])
            Tsig_module "Run/415"
            module_type (src/lr1.ml[29,1346+13]..src/lr1.ml[29,1346+31])
              Tmty_functor ()
              module_type (src/lr1.ml[29,1346+18]..src/lr1.ml[29,1346+31])
                Tmty_ident "Dune__exe!.LR1Sigs.LR1_AUTOMATON"
        ]
  structure_item (src/lr1.ml[32,1383+0]..src/lr1.ml[46,1730+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[32,1383+4]..src/lr1.ml[32,1383+14])
          Tpat_tuple
          [
            pattern (src/lr1.ml[32,1383+4]..src/lr1.ml[32,1383+8])
              Tpat_var "algo/417"
            pattern (src/lr1.ml[32,1383+10]..src/lr1.ml[32,1383+14])
              Tpat_var "mode/418"
          ]
        expression (src/lr1.ml[33,1400+2]..src/lr1.ml[46,1730+3])
          Texp_open Fresh
          module_expr (src/lr1.ml[33,1400+2]..src/lr1.ml[33,1400+10])
            Tmod_ident "Dune__exe!.Settings"
          expression (src/lr1.ml[33,1400+12]..src/lr1.ml[45,1717+12])
            Texp_match
            expression (src/lr1.ml[33,1400+18]..src/lr1.ml[33,1400+35])
              Texp_ident "Dune__exe!.Settings.construction_mode"
            [
              <case>
                pattern (src/lr1.ml[34,1441+4]..src/lr1.ml[34,1441+17])
                  Tpat_value
                  pattern (src/lr1.ml[34,1441+4]..src/lr1.ml[34,1441+17])
                    Tpat_construct "ModeCanonical"
                    []
                    None
                expression (src/lr1.ml[35,1462+6]..src/lr1.ml[36,1503+17])
                  Texp_tuple
                  [
                    expression (src/lr1.ml[35,1462+6]..src/lr1.ml[35,1462+39]) ghost
                      extra
                        Texp_constraint
                        core_type (src/lr1.ml[35,1462+29]..src/lr1.ml[35,1462+38])
                          Ttyp_package "ALGORITHM/416"
                          []
                      Texp_pack                      module_expr (src/lr1.ml[35,1462+14]..src/lr1.ml[35,1462+26])
                        module_expr (src/lr1.ml[35,1462+14]..src/lr1.ml[35,1462+26])
                          module_expr (src/lr1.ml[35,1462+14]..src/lr1.ml[35,1462+26])
                            Tmod_ident "Dune__exe!.LR1Canonical"
                    expression (src/lr1.ml[36,1503+6]..src/lr1.ml[36,1503+17])
                      Texp_constant Const_string("canonical",(src/lr1.ml[36,1503+7]..src/lr1.ml[36,1503+16]),None)
                  ]
              <case>
                pattern (src/lr1.ml[37,1521+4]..src/lr1.ml[37,1521+21])
                  Tpat_value
                  pattern (src/lr1.ml[37,1521+4]..src/lr1.ml[37,1521+21])
                    Tpat_construct "ModeInclusionOnly"
                    []
                    None
                expression (src/lr1.ml[38,1546+6]..src/lr1.ml[39,1583+16])
                  Texp_tuple
                  [
                    expression (src/lr1.ml[38,1546+6]..src/lr1.ml[38,1546+35]) ghost
                      extra
                        Texp_constraint
                        core_type (src/lr1.ml[38,1546+25]..src/lr1.ml[38,1546+34])
                          Ttyp_package "ALGORITHM/416"
                          []
                      Texp_pack                      module_expr (src/lr1.ml[38,1546+14]..src/lr1.ml[38,1546+22])
                        module_expr (src/lr1.ml[38,1546+14]..src/lr1.ml[38,1546+22])
                          module_expr (src/lr1.ml[38,1546+14]..src/lr1.ml[38,1546+22])
                            Tmod_ident "Dune__exe!.LR1Pager"
                    expression (src/lr1.ml[39,1583+6]..src/lr1.ml[39,1583+16])
                      Texp_constant Const_string("no-pager",(src/lr1.ml[39,1583+7]..src/lr1.ml[39,1583+15]),None)
                  ]
              <case>
                pattern (src/lr1.ml[40,1600+4]..src/lr1.ml[40,1600+13])
                  Tpat_value
                  pattern (src/lr1.ml[40,1600+4]..src/lr1.ml[40,1600+13])
                    Tpat_construct "ModePager"
                    []
                    None
                expression (src/lr1.ml[41,1617+6]..src/lr1.ml[42,1654+13])
                  Texp_tuple
                  [
                    expression (src/lr1.ml[41,1617+6]..src/lr1.ml[41,1617+35]) ghost
                      extra
                        Texp_constraint
                        core_type (src/lr1.ml[41,1617+25]..src/lr1.ml[41,1617+34])
                          Ttyp_package "ALGORITHM/416"
                          []
                      Texp_pack                      module_expr (src/lr1.ml[41,1617+14]..src/lr1.ml[41,1617+22])
                        module_expr (src/lr1.ml[41,1617+14]..src/lr1.ml[41,1617+22])
                          module_expr (src/lr1.ml[41,1617+14]..src/lr1.ml[41,1617+22])
                            Tmod_ident "Dune__exe!.LR1Pager"
                    expression (src/lr1.ml[42,1654+6]..src/lr1.ml[42,1654+13])
                      Texp_constant Const_string("pager",(src/lr1.ml[42,1654+7]..src/lr1.ml[42,1654+12]),None)
                  ]
              <case>
                pattern (src/lr1.ml[43,1668+4]..src/lr1.ml[43,1668+12])
                  Tpat_value
                  pattern (src/lr1.ml[43,1668+4]..src/lr1.ml[43,1668+12])
                    Tpat_construct "ModeLALR"
                    []
                    None
                expression (src/lr1.ml[44,1684+6]..src/lr1.ml[45,1717+12])
                  Texp_tuple
                  [
                    expression (src/lr1.ml[44,1684+6]..src/lr1.ml[44,1684+31]) ghost
                      extra
                        Texp_constraint
                        core_type (src/lr1.ml[44,1684+21]..src/lr1.ml[44,1684+30])
                          Ttyp_package "ALGORITHM/416"
                          []
                      Texp_pack                      module_expr (src/lr1.ml[44,1684+14]..src/lr1.ml[44,1684+18])
                        module_expr (src/lr1.ml[44,1684+14]..src/lr1.ml[44,1684+18])
                          module_expr (src/lr1.ml[44,1684+14]..src/lr1.ml[44,1684+18])
                            Tmod_ident "Dune__exe!.LALR"
                    expression (src/lr1.ml[45,1717+6]..src/lr1.ml[45,1717+12])
                      Texp_constant Const_string("lalr",(src/lr1.ml[45,1717+7]..src/lr1.ml[45,1717+11]),None)
                  ]
            ]
    ]
  structure_item (src/lr1.ml[48,1735+0]..src/lr1.ml[49,1754+24])
    Tstr_module
    Algorithm/580
      module_expr (src/lr1.ml[49,1754+2]..src/lr1.ml[49,1754+24])
        Tmod_unpack
        expression (src/lr1.ml[49,1754+7]..src/lr1.ml[49,1754+11])
          extra
            Texp_constraint
            core_type (src/lr1.ml[49,1754+14]..src/lr1.ml[49,1754+23])
              Ttyp_package "ALGORITHM/416"
              []
          Texp_ident "algo/417"
  structure_item (src/lr1.ml[51,1780+0]..src/lr1.ml[56,1885+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[51,1780+4]..src/lr1.ml[51,1780+6])
          Tpat_construct "()"
          []
          None
        expression (src/lr1.ml[52,1789+2]..src/lr1.ml[56,1885+3])
          Texp_apply
          expression (src/lr1.ml[52,1789+2]..src/lr1.ml[52,1789+12])
            Texp_ident "Dune__exe!.Error.logA"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[52,1789+13]..src/lr1.ml[52,1789+14])
                Texp_constant Const_int 1
            <arg>
              Nolabel
              expression (src/lr1.ml[52,1789+15]..src/lr1.ml[56,1885+3])
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr1.ml[52,1789+20]..src/lr1.ml[52,1789+21])
                      Tpat_var "f/596"
                    expression (src/lr1.ml[53,1814+4]..src/lr1.ml[55,1874+10])
                      Texp_apply
                      expression (src/lr1.ml[53,1814+4]..src/lr1.ml[53,1814+18])
                        Texp_ident "Stdlib!.Printf.fprintf"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[53,1814+19]..src/lr1.ml[53,1814+20])
                            Texp_ident "f/596"
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[54,1835+6]..src/lr1.ml[54,1835+38])
                            Texp_construct "CamlinternalFormatBasics.Format"
                            [
                              expression (src/lr1.ml[54,1835+6]..src/lr1.ml[54,1835+38]) ghost
                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                [
                                  expression (src/lr1.ml[54,1835+6]..src/lr1.ml[54,1835+38]) ghost
                                    Texp_constant Const_string("The construction mode is ",(src/lr1.ml[54,1835+6]..src/lr1.ml[54,1835+38]) ghost,None)
                                  expression (src/lr1.ml[54,1835+6]..src/lr1.ml[54,1835+38]) ghost
                                    Texp_construct "CamlinternalFormatBasics.String"
                                    [
                                      expression (src/lr1.ml[54,1835+6]..src/lr1.ml[54,1835+38]) ghost
                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                        []
                                      expression (src/lr1.ml[54,1835+6]..src/lr1.ml[54,1835+38]) ghost
                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                        [
                                          expression (src/lr1.ml[54,1835+6]..src/lr1.ml[54,1835+38]) ghost
                                            Texp_constant Const_string(".\n",(src/lr1.ml[54,1835+6]..src/lr1.ml[54,1835+38]) ghost,None)
                                          expression (src/lr1.ml[54,1835+6]..src/lr1.ml[54,1835+38]) ghost
                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                            []
                                        ]
                                    ]
                                ]
                              expression (src/lr1.ml[54,1835+6]..src/lr1.ml[54,1835+38]) ghost
                                Texp_constant Const_string("The construction mode is %s.\n",(src/lr1.ml[54,1835+6]..src/lr1.ml[54,1835+38]) ghost,None)
                            ]
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[55,1874+6]..src/lr1.ml[55,1874+10])
                            Texp_ident "mode/418"
                      ]
                ]
          ]
    ]
  structure_item (src/lr1.ml[62,2011+0]..src/lr1.ml[63,2024+17])
    Tstr_module
    Raw/633
      module_expr (src/lr1.ml[63,2024+2]..src/lr1.ml[63,2024+15])
        Tmod_apply_unit
        module_expr (src/lr1.ml[63,2024+2]..src/lr1.ml[63,2024+15])
          Tmod_ident "Algorithm/580.Run"
  structure_item (src/lr1.ml[65,2043+0]..src/lr1.ml[68,2149+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[65,2043+4]..src/lr1.ml[65,2043+6])
          Tpat_construct "()"
          []
          None
        expression (src/lr1.ml[66,2052+2]..src/lr1.ml[68,2149+3])
          Texp_apply
          expression (src/lr1.ml[66,2052+2]..src/lr1.ml[66,2052+12])
            Texp_ident "Dune__exe!.Error.logA"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[66,2052+13]..src/lr1.ml[66,2052+14])
                Texp_constant Const_int 1
            <arg>
              Nolabel
              expression (src/lr1.ml[66,2052+15]..src/lr1.ml[68,2149+3])
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr1.ml[66,2052+20]..src/lr1.ml[66,2052+21])
                      Tpat_var "f/634"
                    expression (src/lr1.ml[67,2077+4]..src/lr1.ml[67,2077+71])
                      Texp_apply
                      expression (src/lr1.ml[67,2077+4]..src/lr1.ml[67,2077+18])
                        Texp_ident "Stdlib!.Printf.fprintf"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[67,2077+19]..src/lr1.ml[67,2077+20])
                            Texp_ident "f/634"
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[67,2077+21]..src/lr1.ml[67,2077+65])
                            Texp_construct "CamlinternalFormatBasics.Format"
                            [
                              expression (src/lr1.ml[67,2077+21]..src/lr1.ml[67,2077+65]) ghost
                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                [
                                  expression (src/lr1.ml[67,2077+21]..src/lr1.ml[67,2077+65]) ghost
                                    Texp_constant Const_string("Built an LR(1) automaton with ",(src/lr1.ml[67,2077+21]..src/lr1.ml[67,2077+65]) ghost,None)
                                  expression (src/lr1.ml[67,2077+21]..src/lr1.ml[67,2077+65]) ghost
                                    Texp_construct "CamlinternalFormatBasics.Int"
                                    [
                                      expression (src/lr1.ml[67,2077+21]..src/lr1.ml[67,2077+65]) ghost
                                        Texp_construct "CamlinternalFormatBasics.Int_d"
                                        []
                                      expression (src/lr1.ml[67,2077+21]..src/lr1.ml[67,2077+65]) ghost
                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                        []
                                      expression (src/lr1.ml[67,2077+21]..src/lr1.ml[67,2077+65]) ghost
                                        Texp_construct "CamlinternalFormatBasics.No_precision"
                                        []
                                      expression (src/lr1.ml[67,2077+21]..src/lr1.ml[67,2077+65]) ghost
                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                        [
                                          expression (src/lr1.ml[67,2077+21]..src/lr1.ml[67,2077+65]) ghost
                                            Texp_constant Const_string(" states.\n",(src/lr1.ml[67,2077+21]..src/lr1.ml[67,2077+65]) ghost,None)
                                          expression (src/lr1.ml[67,2077+21]..src/lr1.ml[67,2077+65]) ghost
                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                            []
                                        ]
                                    ]
                                ]
                              expression (src/lr1.ml[67,2077+21]..src/lr1.ml[67,2077+65]) ghost
                                Texp_constant Const_string("Built an LR(1) automaton with %d states.\n",(src/lr1.ml[67,2077+21]..src/lr1.ml[67,2077+65]) ghost,None)
                            ]
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[67,2077+66]..src/lr1.ml[67,2077+71])
                            Texp_ident "Raw/633.n"
                      ]
                ]
          ]
    ]
  structure_item (src/lr1.ml[80,2643+0]..src/lr1.ml[81,2655+5])
    Tstr_type Rec
    [
      type_declaration node/642 (src/lr1.ml[80,2643+0]..src/lr1.ml[81,2655+5])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/lr1.ml[81,2655+2]..src/lr1.ml[81,2655+5])
              Ttyp_constr "int/1!"
              []
    ]
  structure_item (src/lr1.ml[90,2920+0]..src/lr1.ml[97,3126+3])
    Tstr_module
    M/698
      module_expr (src/lr1.ml[90,2920+11]..src/lr1.ml[97,3126+3])
        Tmod_structure
        [
          structure_item (src/lr1.ml[91,2938+2]..src/lr1.ml[92,2966+26])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/lr1.ml[91,2938+6]..src/lr1.ml[91,2938+12])
                  extra
                    Tpat_extra_constraint
                    core_type (src/lr1.ml[91,2938+15]..src/lr1.ml[91,2938+25])
                      Ttyp_constr "array/8!"
                      [
                        core_type (src/lr1.ml[91,2938+15]..src/lr1.ml[91,2938+19])
                          Ttyp_constr "bool/5!"
                          []
                      ]
                  Tpat_alias "marked/643"
                  pattern (src/lr1.ml[91,2938+6]..src/lr1.ml[91,2938+12])
                    Tpat_any
                expression (src/lr1.ml[92,2966+4]..src/lr1.ml[92,2966+26])
                  extra
                    Texp_constraint
                    core_type (src/lr1.ml[91,2938+15]..src/lr1.ml[91,2938+25])
                      Ttyp_constr "array/8!"
                      [
                        core_type (src/lr1.ml[91,2938+15]..src/lr1.ml[91,2938+19])
                          Ttyp_constr "bool/5!"
                          []
                      ]
                  Texp_apply
                  expression (src/lr1.ml[92,2966+4]..src/lr1.ml[92,2966+14])
                    Texp_ident "Stdlib!.Array.make"
                  [
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[92,2966+15]..src/lr1.ml[92,2966+20])
                        Texp_ident "Raw/633.n"
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[92,2966+21]..src/lr1.ml[92,2966+26])
                        Texp_construct "false"
                        []
                  ]
            ]
          structure_item (src/lr1.ml[93,2993+2]..src/lr1.ml[94,3024+36])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/lr1.ml[93,2993+6]..src/lr1.ml[93,2993+10])
                  Tpat_var "mark/692"
                expression (src/lr1.ml[93,2993+11]..src/lr1.ml[94,3024+36]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/lr1.ml[93,2993+12]..src/lr1.ml[93,2993+16])
                        extra
                          Tpat_extra_constraint
                          core_type (src/lr1.ml[93,2993+19]..src/lr1.ml[93,2993+27])
                            Ttyp_constr "Raw/633.node"
                            []
                        Tpat_alias "node/694"
                        pattern (src/lr1.ml[93,2993+12]..src/lr1.ml[93,2993+16])
                          Tpat_any
                      expression (src/lr1.ml[94,3024+4]..src/lr1.ml[94,3024+36])
                        Texp_apply
                        expression (src/lr1.ml[94,3024+4]..src/lr1.ml[94,3024+36]) ghost
                          Texp_ident "Stdlib!.Array.set"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[94,3024+4]..src/lr1.ml[94,3024+10])
                              Texp_ident "marked/643"
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[94,3024+12]..src/lr1.ml[94,3024+27])
                              Texp_apply
                              expression (src/lr1.ml[94,3024+12]..src/lr1.ml[94,3024+22])
                                Texp_ident "Raw/633.number"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[94,3024+23]..src/lr1.ml[94,3024+27])
                                    Texp_ident "node/694"
                              ]
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[94,3024+32]..src/lr1.ml[94,3024+36])
                              Texp_construct "true"
                              []
                        ]
                  ]
            ]
          structure_item (src/lr1.ml[95,3061+2]..src/lr1.ml[96,3097+28])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/lr1.ml[95,3061+6]..src/lr1.ml[95,3061+15])
                  Tpat_var "is_marked/695"
                expression (src/lr1.ml[95,3061+16]..src/lr1.ml[96,3097+28]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/lr1.ml[95,3061+17]..src/lr1.ml[95,3061+21])
                        extra
                          Tpat_extra_constraint
                          core_type (src/lr1.ml[95,3061+24]..src/lr1.ml[95,3061+32])
                            Ttyp_constr "Raw/633.node"
                            []
                        Tpat_alias "node/697"
                        pattern (src/lr1.ml[95,3061+17]..src/lr1.ml[95,3061+21])
                          Tpat_any
                      expression (src/lr1.ml[96,3097+4]..src/lr1.ml[96,3097+28])
                        Texp_apply
                        expression (src/lr1.ml[96,3097+4]..src/lr1.ml[96,3097+28]) ghost
                          Texp_ident "Stdlib!.Array.get"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[96,3097+4]..src/lr1.ml[96,3097+10])
                              Texp_ident "marked/643"
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[96,3097+12]..src/lr1.ml[96,3097+27])
                              Texp_apply
                              expression (src/lr1.ml[96,3097+12]..src/lr1.ml[96,3097+22])
                                Texp_ident "Raw/633.number"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[96,3097+23]..src/lr1.ml[96,3097+27])
                                    Texp_ident "node/697"
                              ]
                        ]
                  ]
            ]
        ]
  structure_item (src/lr1.ml[102,3247+0]..src/lr1.ml[103,3265+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[102,3247+4]..src/lr1.ml[102,3247+15])
          Tpat_var "unreachable/699"
        expression (src/lr1.ml[103,3265+2]..src/lr1.ml[103,3265+4])
          Texp_constant Const_int -1
    ]
  structure_item (src/lr1.ml[105,3271+0]..src/lr1.ml[106,3298+30])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[105,3271+4]..src/lr1.ml[105,3271+11])
          extra
            Tpat_extra_constraint
            core_type (src/lr1.ml[105,3271+14]..src/lr1.ml[105,3271+24])
              Ttyp_constr "array/8!"
              [
                core_type (src/lr1.ml[105,3271+14]..src/lr1.ml[105,3271+18])
                  Ttyp_constr "node/642"
                  []
              ]
          Tpat_alias "_number/700"
          pattern (src/lr1.ml[105,3271+4]..src/lr1.ml[105,3271+11])
            Tpat_any
        expression (src/lr1.ml[106,3298+2]..src/lr1.ml[106,3298+30])
          extra
            Texp_constraint
            core_type (src/lr1.ml[105,3271+14]..src/lr1.ml[105,3271+24])
              Ttyp_constr "array/8!"
              [
                core_type (src/lr1.ml[105,3271+14]..src/lr1.ml[105,3271+18])
                  Ttyp_constr "node/642"
                  []
              ]
          Texp_apply
          expression (src/lr1.ml[106,3298+2]..src/lr1.ml[106,3298+12])
            Texp_ident "Stdlib!.Array.make"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[106,3298+13]..src/lr1.ml[106,3298+18])
                Texp_ident "Raw/633.n"
            <arg>
              Nolabel
              expression (src/lr1.ml[106,3298+19]..src/lr1.ml[106,3298+30])
                Texp_ident "unreachable/699"
          ]
    ]
  structure_item (src/lr1.ml[108,3330+0]..src/lr1.ml[109,3375+31])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[108,3330+4]..src/lr1.ml[108,3330+13])
          Tpat_var "transport/701"
        expression (src/lr1.ml[108,3330+14]..src/lr1.ml[109,3375+31]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[108,3330+15]..src/lr1.ml[108,3330+23])
                extra
                  Tpat_extra_constraint
                  core_type (src/lr1.ml[108,3330+26]..src/lr1.ml[108,3330+34])
                    Ttyp_constr "Raw/633.node"
                    []
                Tpat_alias "raw_node/703"
                pattern (src/lr1.ml[108,3330+15]..src/lr1.ml[108,3330+23])
                  Tpat_any
              expression (src/lr1.ml[109,3375+2]..src/lr1.ml[109,3375+31])
                extra
                  Texp_constraint
                  core_type (src/lr1.ml[108,3330+38]..src/lr1.ml[108,3330+42])
                    Ttyp_constr "node/642"
                    []
                Texp_apply
                expression (src/lr1.ml[109,3375+2]..src/lr1.ml[109,3375+31]) ghost
                  Texp_ident "Stdlib!.Array.get"
                [
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[109,3375+2]..src/lr1.ml[109,3375+9])
                      Texp_ident "_number/700"
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[109,3375+11]..src/lr1.ml[109,3375+30])
                      Texp_apply
                      expression (src/lr1.ml[109,3375+11]..src/lr1.ml[109,3375+21])
                        Texp_ident "Raw/633.number"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[109,3375+22]..src/lr1.ml[109,3375+30])
                            Texp_ident "raw_node/703"
                      ]
                ]
          ]
    ]
  structure_item (src/lr1.ml[115,3604+0]..src/lr1.ml[118,3713+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[115,3604+4]..src/lr1.ml[115,3604+15])
          extra
            Tpat_extra_constraint
            core_type (src/lr1.ml[115,3604+18]..src/lr1.ml[115,3604+44])
              Ttyp_constr "array/8!"
              [
                core_type (src/lr1.ml[115,3604+18]..src/lr1.ml[115,3604+38])
                  Ttyp_constr "Dune__exe!.Grammar.SymbolMap.t"
                  [
                    core_type (src/lr1.ml[115,3604+18]..src/lr1.ml[115,3604+26])
                      Ttyp_constr "Raw/633.node"
                      []
                  ]
              ]
          Tpat_alias "transitions/769"
          pattern (src/lr1.ml[115,3604+4]..src/lr1.ml[115,3604+15])
            Tpat_any
        expression (src/lr1.ml[116,3651+2]..src/lr1.ml[118,3713+3])
          extra
            Texp_constraint
            core_type (src/lr1.ml[115,3604+18]..src/lr1.ml[115,3604+44])
              Ttyp_constr "array/8!"
              [
                core_type (src/lr1.ml[115,3604+18]..src/lr1.ml[115,3604+38])
                  Ttyp_constr "Dune__exe!.Grammar.SymbolMap.t"
                  [
                    core_type (src/lr1.ml[115,3604+18]..src/lr1.ml[115,3604+26])
                      Ttyp_constr "Raw/633.node"
                      []
                  ]
              ]
          Texp_apply
          expression (src/lr1.ml[116,3651+2]..src/lr1.ml[116,3651+12])
            Texp_ident "Stdlib!.Array.init"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[116,3651+13]..src/lr1.ml[116,3651+18])
                Texp_ident "Raw/633.n"
            <arg>
              Nolabel
              expression (src/lr1.ml[116,3651+19]..src/lr1.ml[118,3713+3])
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr1.ml[116,3651+24]..src/lr1.ml[116,3651+25])
                      Tpat_var "i/770"
                    expression (src/lr1.ml[117,3680+4]..src/lr1.ml[117,3680+32])
                      Texp_apply
                      expression (src/lr1.ml[117,3680+4]..src/lr1.ml[117,3680+19])
                        Texp_ident "Raw/633.transitions"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[117,3680+20]..src/lr1.ml[117,3680+32])
                            Texp_apply
                            expression (src/lr1.ml[117,3680+21]..src/lr1.ml[117,3680+29])
                              Texp_ident "Raw/633.node"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[117,3680+30]..src/lr1.ml[117,3680+31])
                                  Texp_ident "i/770"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/lr1.ml[123,3866+0]..src/lr1.ml[124,3903+21])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[123,3866+4]..src/lr1.ml[123,3866+16])
          extra
            Tpat_extra_constraint
            core_type (src/lr1.ml[123,3866+19]..src/lr1.ml[123,3866+34])
              Ttyp_constr "array/8!"
              [
                core_type (src/lr1.ml[123,3866+19]..src/lr1.ml[123,3866+28])
                  Ttyp_constr "list/9!"
                  [
                    core_type (src/lr1.ml[123,3866+19]..src/lr1.ml[123,3866+23])
                      Ttyp_constr "node/642"
                      []
                  ]
              ]
          Tpat_alias "predecessors/819"
          pattern (src/lr1.ml[123,3866+4]..src/lr1.ml[123,3866+16])
            Tpat_any
        expression (src/lr1.ml[124,3903+2]..src/lr1.ml[124,3903+21])
          extra
            Texp_constraint
            core_type (src/lr1.ml[123,3866+19]..src/lr1.ml[123,3866+34])
              Ttyp_constr "array/8!"
              [
                core_type (src/lr1.ml[123,3866+19]..src/lr1.ml[123,3866+28])
                  Ttyp_constr "list/9!"
                  [
                    core_type (src/lr1.ml[123,3866+19]..src/lr1.ml[123,3866+23])
                      Ttyp_constr "node/642"
                      []
                  ]
              ]
          Texp_apply
          expression (src/lr1.ml[124,3903+2]..src/lr1.ml[124,3903+12])
            Texp_ident "Stdlib!.Array.make"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[124,3903+13]..src/lr1.ml[124,3903+18])
                Texp_ident "Raw/633.n"
            <arg>
              Nolabel
              expression (src/lr1.ml[124,3903+19]..src/lr1.ml[124,3903+21])
                Texp_construct "[]"
                []
          ]
    ]
  structure_item (src/lr1.ml[128,3981+0]..src/lr1.ml[129,4021+36])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[128,3981+4]..src/lr1.ml[128,3981+14])
          extra
            Tpat_extra_constraint
            core_type (src/lr1.ml[128,3981+17]..src/lr1.ml[128,3981+37])
              Ttyp_constr "array/8!"
              [
                core_type (src/lr1.ml[128,3981+17]..src/lr1.ml[128,3981+31])
                  Ttyp_constr "Dune__exe!.Lr0.reductions"
                  []
              ]
          Tpat_alias "reductions/858"
          pattern (src/lr1.ml[128,3981+4]..src/lr1.ml[128,3981+14])
            Tpat_any
        expression (src/lr1.ml[129,4021+2]..src/lr1.ml[129,4021+36])
          extra
            Texp_constraint
            core_type (src/lr1.ml[128,3981+17]..src/lr1.ml[128,3981+37])
              Ttyp_constr "array/8!"
              [
                core_type (src/lr1.ml[128,3981+17]..src/lr1.ml[128,3981+31])
                  Ttyp_constr "Dune__exe!.Lr0.reductions"
                  []
              ]
          Texp_apply
          expression (src/lr1.ml[129,4021+2]..src/lr1.ml[129,4021+12])
            Texp_ident "Stdlib!.Array.make"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[129,4021+13]..src/lr1.ml[129,4021+18])
                Texp_ident "Raw/633.n"
            <arg>
              Nolabel
              expression (src/lr1.ml[129,4021+19]..src/lr1.ml[129,4021+36])
                Texp_ident "Dune__exe!.Grammar.TerminalMap.empty"
          ]
    ]
  structure_item (src/lr1.ml[135,4239+0]..src/lr1.ml[136,4284+36])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[135,4239+4]..src/lr1.ml[135,4239+20])
          extra
            Tpat_extra_constraint
            core_type (src/lr1.ml[135,4239+23]..src/lr1.ml[135,4239+42])
              Ttyp_constr "array/8!"
              [
                core_type (src/lr1.ml[135,4239+23]..src/lr1.ml[135,4239+36])
                  Ttyp_constr "Dune__exe!.Grammar.TerminalSet.t"
                  []
              ]
          Tpat_alias "_conflict_tokens/947"
          pattern (src/lr1.ml[135,4239+4]..src/lr1.ml[135,4239+20])
            Tpat_any
        expression (src/lr1.ml[136,4284+2]..src/lr1.ml[136,4284+36])
          extra
            Texp_constraint
            core_type (src/lr1.ml[135,4239+23]..src/lr1.ml[135,4239+42])
              Ttyp_constr "array/8!"
              [
                core_type (src/lr1.ml[135,4239+23]..src/lr1.ml[135,4239+36])
                  Ttyp_constr "Dune__exe!.Grammar.TerminalSet.t"
                  []
              ]
          Texp_apply
          expression (src/lr1.ml[136,4284+2]..src/lr1.ml[136,4284+12])
            Texp_ident "Stdlib!.Array.make"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[136,4284+13]..src/lr1.ml[136,4284+18])
                Texp_ident "Raw/633.n"
            <arg>
              Nolabel
              expression (src/lr1.ml[136,4284+19]..src/lr1.ml[136,4284+36])
                Texp_ident "Dune__exe!.Grammar.TerminalSet.empty"
          ]
    ]
  structure_item (src/lr1.ml[140,4386+0]..src/lr1.ml[141,4465+23])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[140,4386+4]..src/lr1.ml[140,4386+21])
          extra
            Tpat_extra_constraint
            core_type (src/lr1.ml[140,4386+24]..src/lr1.ml[140,4386+76])
              Ttyp_constr "array/8!"
              [
                core_type (src/lr1.ml[140,4386+24]..src/lr1.ml[140,4386+70])
                  Ttyp_constr "option/10!"
                  [
                    core_type (src/lr1.ml[140,4386+25]..src/lr1.ml[140,4386+62])
                      Ttyp_tuple
                      [
                        core_type (src/lr1.ml[140,4386+25]..src/lr1.ml[140,4386+46])
                          Ttyp_constr "list/9!"
                          [
                            core_type (src/lr1.ml[140,4386+25]..src/lr1.ml[140,4386+41])
                              Ttyp_constr "Dune__exe!.Grammar.Production.index"
                              []
                          ]
                        core_type (src/lr1.ml[140,4386+49]..src/lr1.ml[140,4386+62])
                          Ttyp_constr "Dune__exe!.Grammar.TerminalSet.t"
                          []
                      ]
                  ]
              ]
          Tpat_alias "_has_eos_conflict/982"
          pattern (src/lr1.ml[140,4386+4]..src/lr1.ml[140,4386+21])
            Tpat_any
        expression (src/lr1.ml[141,4465+2]..src/lr1.ml[141,4465+23])
          extra
            Texp_constraint
            core_type (src/lr1.ml[140,4386+24]..src/lr1.ml[140,4386+76])
              Ttyp_constr "array/8!"
              [
                core_type (src/lr1.ml[140,4386+24]..src/lr1.ml[140,4386+70])
                  Ttyp_constr "option/10!"
                  [
                    core_type (src/lr1.ml[140,4386+25]..src/lr1.ml[140,4386+62])
                      Ttyp_tuple
                      [
                        core_type (src/lr1.ml[140,4386+25]..src/lr1.ml[140,4386+46])
                          Ttyp_constr "list/9!"
                          [
                            core_type (src/lr1.ml[140,4386+25]..src/lr1.ml[140,4386+41])
                              Ttyp_constr "Dune__exe!.Grammar.Production.index"
                              []
                          ]
                        core_type (src/lr1.ml[140,4386+49]..src/lr1.ml[140,4386+62])
                          Ttyp_constr "Dune__exe!.Grammar.TerminalSet.t"
                          []
                      ]
                  ]
              ]
          Texp_apply
          expression (src/lr1.ml[141,4465+2]..src/lr1.ml[141,4465+12])
            Texp_ident "Stdlib!.Array.make"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[141,4465+13]..src/lr1.ml[141,4465+18])
                Texp_ident "Raw/633.n"
            <arg>
              Nolabel
              expression (src/lr1.ml[141,4465+19]..src/lr1.ml[141,4465+23])
                Texp_construct "None"
                []
          ]
    ]
  structure_item (src/lr1.ml[147,4697+0]..src/lr1.ml[148,4741+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[147,4697+4]..src/lr1.ml[147,4697+28])
          extra
            Tpat_extra_constraint
            core_type (src/lr1.ml[147,4697+31]..src/lr1.ml[147,4697+41])
              Ttyp_constr "array/8!"
              [
                core_type (src/lr1.ml[147,4697+31]..src/lr1.ml[147,4697+35])
                  Ttyp_constr "bool/5!"
                  []
              ]
          Tpat_alias "forbid_default_reduction/983"
          pattern (src/lr1.ml[147,4697+4]..src/lr1.ml[147,4697+28])
            Tpat_any
        expression (src/lr1.ml[148,4741+2]..src/lr1.ml[148,4741+24])
          extra
            Texp_constraint
            core_type (src/lr1.ml[147,4697+31]..src/lr1.ml[147,4697+41])
              Ttyp_constr "array/8!"
              [
                core_type (src/lr1.ml[147,4697+31]..src/lr1.ml[147,4697+35])
                  Ttyp_constr "bool/5!"
                  []
              ]
          Texp_apply
          expression (src/lr1.ml[148,4741+2]..src/lr1.ml[148,4741+12])
            Texp_ident "Stdlib!.Array.make"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[148,4741+13]..src/lr1.ml[148,4741+18])
                Texp_ident "Raw/633.n"
            <arg>
              Nolabel
              expression (src/lr1.ml[148,4741+19]..src/lr1.ml[148,4741+24])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (src/lr1.ml[152,4806+0]..src/lr1.ml[153,4814+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[152,4806+4]..src/lr1.ml[152,4806+5])
          Tpat_var "n/984"
        expression (src/lr1.ml[153,4814+2]..src/lr1.ml[153,4814+7])
          Texp_apply
          expression (src/lr1.ml[153,4814+2]..src/lr1.ml[153,4814+5])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[153,4814+6]..src/lr1.ml[153,4814+7])
                Texp_constant Const_int 0
          ]
    ]
  structure_item (src/lr1.ml[157,4862+0]..src/lr1.ml[158,4899+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[157,4862+4]..src/lr1.ml[157,4862+18])
          extra
            Tpat_extra_constraint
            core_type (src/lr1.ml[157,4862+21]..src/lr1.ml[157,4862+34])
              Ttyp_constr "Stdlib!.ref"
              [
                core_type (src/lr1.ml[157,4862+21]..src/lr1.ml[157,4862+30])
                  Ttyp_constr "list/9!"
                  [
                    core_type (src/lr1.ml[157,4862+21]..src/lr1.ml[157,4862+25])
                      Ttyp_constr "node/642"
                      []
                  ]
              ]
          Tpat_alias "conflict_nodes/985"
          pattern (src/lr1.ml[157,4862+4]..src/lr1.ml[157,4862+18])
            Tpat_any
        expression (src/lr1.ml[158,4899+2]..src/lr1.ml[158,4899+8])
          extra
            Texp_constraint
            core_type (src/lr1.ml[157,4862+21]..src/lr1.ml[157,4862+34])
              Ttyp_constr "Stdlib!.ref"
              [
                core_type (src/lr1.ml[157,4862+21]..src/lr1.ml[157,4862+30])
                  Ttyp_constr "list/9!"
                  [
                    core_type (src/lr1.ml[157,4862+21]..src/lr1.ml[157,4862+25])
                      Ttyp_constr "node/642"
                      []
                  ]
              ]
          Texp_apply
          expression (src/lr1.ml[158,4899+2]..src/lr1.ml[158,4899+5])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[158,4899+6]..src/lr1.ml[158,4899+8])
                Texp_construct "[]"
                []
          ]
    ]
  structure_item (src/lr1.ml[162,4979+0]..src/lr1.ml[163,4998+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[162,4979+4]..src/lr1.ml[162,4979+16])
          Tpat_var "shift_reduce/986"
        expression (src/lr1.ml[163,4998+2]..src/lr1.ml[163,4998+7])
          Texp_apply
          expression (src/lr1.ml[163,4998+2]..src/lr1.ml[163,4998+5])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[163,4998+6]..src/lr1.ml[163,4998+7])
                Texp_constant Const_int 0
          ]
    ]
  structure_item (src/lr1.ml[165,5007+0]..src/lr1.ml[166,5027+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[165,5007+4]..src/lr1.ml[165,5007+17])
          Tpat_var "reduce_reduce/987"
        expression (src/lr1.ml[166,5027+2]..src/lr1.ml[166,5027+7])
          Texp_apply
          expression (src/lr1.ml[166,5027+2]..src/lr1.ml[166,5027+5])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[166,5027+6]..src/lr1.ml[166,5027+7])
                Texp_constant Const_int 0
          ]
    ]
  structure_item (src/lr1.ml[171,5115+0]..src/lr1.ml[172,5137+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[171,5115+4]..src/lr1.ml[171,5115+19])
          Tpat_var "silently_solved/988"
        expression (src/lr1.ml[172,5137+2]..src/lr1.ml[172,5137+7])
          Texp_apply
          expression (src/lr1.ml[172,5137+2]..src/lr1.ml[172,5137+5])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[172,5137+6]..src/lr1.ml[172,5137+7])
                Texp_constant Const_int 0
          ]
    ]
  structure_item (src/lr1.ml[182,5463+0]..src/lr1.ml[190,5730+3])
    Tstr_module
    RawForwardEdges/1091
      module_expr (src/lr1.ml[182,5463+25]..src/lr1.ml[190,5730+3])
        Tmod_structure
        [
          structure_item (src/lr1.ml[183,5495+2]..src/lr1.ml[183,5495+22])
            Tstr_type Rec
            [
              type_declaration node/989 (src/lr1.ml[183,5495+2]..src/lr1.ml[183,5495+22])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/lr1.ml[183,5495+14]..src/lr1.ml[183,5495+22])
                      Ttyp_constr "Raw/633.node"
                      []
            ]
          structure_item (src/lr1.ml[184,5518+2]..src/lr1.ml[184,5518+23])
            Tstr_type Rec
            [
              type_declaration label/990 (src/lr1.ml[184,5518+2]..src/lr1.ml[184,5518+23])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/lr1.ml[184,5518+15]..src/lr1.ml[184,5518+23])
                      Ttyp_constr "Dune__exe!.Grammar.Symbol.t"
                      []
            ]
          structure_item (src/lr1.ml[185,5542+2]..src/lr1.ml[187,5610+36])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/lr1.ml[185,5542+6]..src/lr1.ml[185,5542+27])
                  Tpat_var "foreach_outgoing_edge/1013"
                expression (src/lr1.ml[185,5542+28]..src/lr1.ml[187,5610+36]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/lr1.ml[185,5542+28]..src/lr1.ml[185,5542+32])
                        Tpat_var "node/1015"
                      expression (src/lr1.ml[185,5542+33]..src/lr1.ml[187,5610+36]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/lr1.ml[185,5542+33]..src/lr1.ml[185,5542+34])
                              Tpat_var "f/1016"
                            expression (src/lr1.ml[186,5579+4]..src/lr1.ml[187,5610+36])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/lr1.ml[186,5579+8]..src/lr1.ml[186,5579+9])
                                    Tpat_var "i/1017"
                                  expression (src/lr1.ml[186,5579+12]..src/lr1.ml[186,5579+27])
                                    Texp_apply
                                    expression (src/lr1.ml[186,5579+12]..src/lr1.ml[186,5579+22])
                                      Texp_ident "Raw/633.number"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[186,5579+23]..src/lr1.ml[186,5579+27])
                                          Texp_ident "node/1015"
                                    ]
                              ]
                              expression (src/lr1.ml[187,5610+4]..src/lr1.ml[187,5610+36])
                                Texp_apply
                                expression (src/lr1.ml[187,5610+4]..src/lr1.ml[187,5610+18])
                                  Texp_ident "Dune__exe!.Grammar.SymbolMap.iter"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/lr1.ml[187,5610+19]..src/lr1.ml[187,5610+20])
                                      Texp_ident "f/1016"
                                  <arg>
                                    Nolabel
                                    expression (src/lr1.ml[187,5610+21]..src/lr1.ml[187,5610+36])
                                      Texp_apply
                                      expression (src/lr1.ml[187,5610+21]..src/lr1.ml[187,5610+36]) ghost
                                        Texp_ident "Stdlib!.Array.get"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/lr1.ml[187,5610+21]..src/lr1.ml[187,5610+32])
                                            Texp_ident "transitions/769"
                                        <arg>
                                          Nolabel
                                          expression (src/lr1.ml[187,5610+34]..src/lr1.ml[187,5610+35])
                                            Texp_ident "i/1017"
                                      ]
                                ]
                        ]
                  ]
            ]
          structure_item (src/lr1.ml[188,5647+2]..src/lr1.ml[189,5670+59])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/lr1.ml[188,5647+6]..src/lr1.ml[188,5647+18])
                  Tpat_var "foreach_root/1018"
                expression (src/lr1.ml[188,5647+19]..src/lr1.ml[189,5670+59]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/lr1.ml[188,5647+19]..src/lr1.ml[188,5647+20])
                        Tpat_var "f/1020"
                      expression (src/lr1.ml[189,5670+4]..src/lr1.ml[189,5670+59])
                        Texp_apply
                        expression (src/lr1.ml[189,5670+4]..src/lr1.ml[189,5670+22])
                          Texp_ident "Dune__exe!.Grammar.ProductionMap.iter"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[189,5670+23]..src/lr1.ml[189,5670+49])
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/lr1.ml[189,5670+28]..src/lr1.ml[189,5670+33])
                                    Tpat_var "_prod/1055"
                                  expression (src/lr1.ml[189,5670+34]..src/lr1.ml[189,5670+48]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/lr1.ml[189,5670+34]..src/lr1.ml[189,5670+38])
                                          Tpat_var "node/1056"
                                        expression (src/lr1.ml[189,5670+42]..src/lr1.ml[189,5670+48])
                                          Texp_apply
                                          expression (src/lr1.ml[189,5670+42]..src/lr1.ml[189,5670+43])
                                            Texp_ident "f/1020"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[189,5670+44]..src/lr1.ml[189,5670+48])
                                                Texp_ident "node/1056"
                                          ]
                                    ]
                              ]
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[189,5670+50]..src/lr1.ml[189,5670+59])
                              Texp_ident "Raw/633.entry"
                        ]
                  ]
            ]
        ]
  structure_item (src/lr1.ml[198,5971+0]..src/lr1.ml[365,11520+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[198,5971+4]..src/lr1.ml[198,5971+12])
          Tpat_var "discover/1092"
        expression (src/lr1.ml[198,5971+13]..src/lr1.ml[365,11520+5]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[198,5971+14]..src/lr1.ml[198,5971+22])
                extra
                  Tpat_extra_constraint
                  core_type (src/lr1.ml[198,5971+25]..src/lr1.ml[198,5971+33])
                    Ttyp_constr "Raw/633.node"
                    []
                Tpat_alias "raw_node/1094"
                pattern (src/lr1.ml[198,5971+14]..src/lr1.ml[198,5971+22])
                  Tpat_any
              expression (src/lr1.ml[199,6008+2]..src/lr1.ml[365,11520+5])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/lr1.ml[199,6008+6]..src/lr1.ml[199,6008+7])
                      Tpat_var "i/1095"
                    expression (src/lr1.ml[199,6008+10]..src/lr1.ml[199,6008+29])
                      Texp_apply
                      expression (src/lr1.ml[199,6008+10]..src/lr1.ml[199,6008+20])
                        Texp_ident "Raw/633.number"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[199,6008+21]..src/lr1.ml[199,6008+29])
                            Texp_ident "raw_node/1094"
                      ]
                  <def>
                    pattern (src/lr1.ml[200,6038+6]..src/lr1.ml[200,6038+11])
                      Tpat_var "state/1096"
                    expression (src/lr1.ml[200,6038+14]..src/lr1.ml[200,6038+32])
                      Texp_apply
                      expression (src/lr1.ml[200,6038+14]..src/lr1.ml[200,6038+23])
                        Texp_ident "Raw/633.state"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[200,6038+24]..src/lr1.ml[200,6038+32])
                            Texp_ident "raw_node/1094"
                      ]
                ]
                expression (src/lr1.ml[204,6102+2]..src/lr1.ml[365,11520+5])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (src/lr1.ml[204,6102+6]..src/lr1.ml[204,6102+10])
                        extra
                          Tpat_extra_constraint
                          core_type (src/lr1.ml[204,6102+13]..src/lr1.ml[204,6102+17])
                            Ttyp_constr "node/642"
                            []
                        Tpat_alias "node/1135"
                        pattern (src/lr1.ml[204,6102+6]..src/lr1.ml[204,6102+10])
                          Tpat_any
                      expression (src/lr1.ml[204,6102+20]..src/lr1.ml[204,6102+40])
                        extra
                          Texp_constraint
                          core_type (src/lr1.ml[204,6102+13]..src/lr1.ml[204,6102+17])
                            Ttyp_constr "node/642"
                            []
                        Texp_apply
                        expression (src/lr1.ml[204,6102+20]..src/lr1.ml[204,6102+38])
                          Texp_ident "Dune__exe!.Misc.postincrement"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[204,6102+39]..src/lr1.ml[204,6102+40])
                              Texp_ident "n/984"
                        ]
                  ]
                  expression (src/lr1.ml[205,6146+2]..src/lr1.ml[365,11520+5])
                    Texp_sequence
                    expression (src/lr1.ml[205,6146+2]..src/lr1.ml[205,6146+21])
                      Texp_apply
                      expression (src/lr1.ml[205,6146+2]..src/lr1.ml[205,6146+21]) ghost
                        Texp_ident "Stdlib!.Array.set"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[205,6146+2]..src/lr1.ml[205,6146+9])
                            Texp_ident "_number/700"
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[205,6146+11]..src/lr1.ml[205,6146+12])
                            Texp_ident "i/1095"
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[205,6146+17]..src/lr1.ml[205,6146+21])
                            Texp_ident "node/1135"
                      ]
                    expression (src/lr1.ml[213,6520+2]..src/lr1.ml[365,11520+5])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/lr1.ml[213,6520+6]..src/lr1.ml[213,6520+22])
                            Tpat_var "has_shift_reduce/1172"
                          expression (src/lr1.ml[213,6520+25]..src/lr1.ml[213,6520+34])
                            Texp_apply
                            expression (src/lr1.ml[213,6520+25]..src/lr1.ml[213,6520+28])
                              Texp_ident "Stdlib!.ref"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[213,6520+29]..src/lr1.ml[213,6520+34])
                                  Texp_construct "false"
                                  []
                            ]
                        <def>
                          pattern (src/lr1.ml[214,6555+6]..src/lr1.ml[214,6555+23])
                            Tpat_var "has_reduce_reduce/1173"
                          expression (src/lr1.ml[214,6555+26]..src/lr1.ml[214,6555+35])
                            Texp_apply
                            expression (src/lr1.ml[214,6555+26]..src/lr1.ml[214,6555+29])
                              Texp_ident "Stdlib!.ref"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[214,6555+30]..src/lr1.ml[214,6555+35])
                                  Texp_construct "false"
                                  []
                            ]
                      ]
                      expression (src/lr1.ml[216,6595+2]..src/lr1.ml[365,11520+5])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/lr1.ml[216,6595+6]..src/lr1.ml[216,6595+23])
                              Tpat_var "foreach_reduction/1174"
                            expression (src/lr1.ml[216,6595+24]..src/lr1.ml[217,6623+69]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/lr1.ml[216,6595+24]..src/lr1.ml[216,6595+25])
                                    Tpat_var "f/1176"
                                  expression (src/lr1.ml[217,6623+4]..src/lr1.ml[217,6623+69])
                                    Texp_apply
                                    expression (src/lr1.ml[217,6623+4]..src/lr1.ml[217,6623+20])
                                      Texp_ident "Dune__exe!.Grammar.TerminalMap.fold"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[217,6623+21]..src/lr1.ml[217,6623+22])
                                          Texp_ident "f/1176"
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[217,6623+23]..src/lr1.ml[217,6623+51])
                                          Texp_apply
                                          expression (src/lr1.ml[217,6623+24]..src/lr1.ml[217,6623+44])
                                            Texp_ident "Dune__exe!.Lr0.reductions_table"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[217,6623+45]..src/lr1.ml[217,6623+50])
                                                Texp_ident "state/1096"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[217,6623+52]..src/lr1.ml[217,6623+69])
                                          Texp_ident "Dune__exe!.Grammar.TerminalMap.empty"
                                    ]
                              ]
                        ]
                        expression (src/lr1.ml[220,6699+2]..src/lr1.ml[365,11520+5])
                          Texp_sequence
                          expression (src/lr1.ml[220,6699+2]..src/lr1.ml[333,10455+5])
                            Texp_apply
                            expression (src/lr1.ml[220,6699+2]..src/lr1.ml[333,10455+5]) ghost
                              Texp_ident "Stdlib!.Array.set"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[220,6699+2]..src/lr1.ml[220,6699+12])
                                  Texp_ident "reductions/858"
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[220,6699+14]..src/lr1.ml[220,6699+15])
                                  Texp_ident "i/1095"
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[220,6699+20]..src/lr1.ml[333,10455+5])
                                  Texp_apply
                                  expression (src/lr1.ml[220,6699+20]..src/lr1.ml[220,6699+37])
                                    Texp_ident "foreach_reduction/1174"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[220,6699+38]..src/lr1.ml[333,10455+5])
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/lr1.ml[220,6699+48]..src/lr1.ml[220,6699+51])
                                              Tpat_var "tok/1177"
                                            expression (src/lr1.ml[220,6699+52]..src/lr1.ml[331,10446+7]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/lr1.ml[220,6699+52]..src/lr1.ml[220,6699+57])
                                                    Tpat_var "prods/1178"
                                                  expression (src/lr1.ml[220,6699+58]..src/lr1.ml[331,10446+7]) ghost
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (src/lr1.ml[220,6699+58]..src/lr1.ml[220,6699+68])
                                                          Tpat_var "reductions/1179"
                                                        expression (src/lr1.ml[221,6771+4]..src/lr1.ml[331,10446+7])
                                                          Texp_sequence
                                                          expression (src/lr1.ml[221,6771+4]..src/lr1.ml[221,6771+24])
                                                            Texp_assert                                                            expression (src/lr1.ml[221,6771+11]..src/lr1.ml[221,6771+24])
                                                              Texp_apply
                                                              expression (src/lr1.ml[221,6771+18]..src/lr1.ml[221,6771+20])
                                                                Texp_ident "Stdlib!.<>"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/lr1.ml[221,6771+12]..src/lr1.ml[221,6771+17])
                                                                    Texp_ident "prods/1178"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/lr1.ml[221,6771+21]..src/lr1.ml[221,6771+23])
                                                                    Texp_construct "[]"
                                                                    []
                                                              ]
                                                          expression (src/lr1.ml[222,6797+4]..src/lr1.ml[331,10446+7])
                                                            Texp_ifthenelse
                                                            expression (src/lr1.ml[222,6797+7]..src/lr1.ml[222,6797+51])
                                                              Texp_apply
                                                              expression (src/lr1.ml[222,6797+7]..src/lr1.ml[222,6797+20])
                                                                Texp_ident "Dune__exe!.Grammar.SymbolMap.mem"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/lr1.ml[222,6797+21]..src/lr1.ml[222,6797+35])
                                                                    Texp_construct "Symbol.T"
                                                                    [
                                                                      expression (src/lr1.ml[222,6797+31]..src/lr1.ml[222,6797+34])
                                                                        Texp_ident "tok/1177"
                                                                    ]
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/lr1.ml[222,6797+36]..src/lr1.ml[222,6797+51])
                                                                    Texp_apply
                                                                    expression (src/lr1.ml[222,6797+36]..src/lr1.ml[222,6797+51]) ghost
                                                                      Texp_ident "Stdlib!.Array.get"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/lr1.ml[222,6797+36]..src/lr1.ml[222,6797+47])
                                                                          Texp_ident "transitions/769"
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/lr1.ml[222,6797+49]..src/lr1.ml[222,6797+50])
                                                                          Texp_ident "i/1095"
                                                                    ]
                                                              ]
                                                            expression (src/lr1.ml[222,6797+57]..src/lr1.ml[317,10000+7])
                                                              Texp_sequence
                                                              expression (src/lr1.ml[227,6982+6]..src/lr1.ml[227,6982+54])
                                                                Texp_assert                                                                expression (src/lr1.ml[227,6982+13]..src/lr1.ml[227,6982+54])
                                                                  Texp_apply
                                                                  expression (src/lr1.ml[227,6982+14]..src/lr1.ml[227,6982+17])
                                                                    Texp_ident "Stdlib!.not"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/lr1.ml[227,6982+18]..src/lr1.ml[227,6982+53])
                                                                        Texp_apply
                                                                        expression (src/lr1.ml[227,6982+19]..src/lr1.ml[227,6982+33])
                                                                          Texp_ident "Dune__exe!.Grammar.Terminal.equal"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/lr1.ml[227,6982+34]..src/lr1.ml[227,6982+37])
                                                                              Texp_ident "tok/1177"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/lr1.ml[227,6982+38]..src/lr1.ml[227,6982+52])
                                                                              Texp_ident "Dune__exe!.Grammar.Terminal.sharp"
                                                                        ]
                                                                  ]
                                                              expression (src/lr1.ml[228,7038+6]..src/lr1.ml[315,9989+9])
                                                                Texp_ifthenelse
                                                                expression (src/lr1.ml[228,7038+9]..src/lr1.ml[228,7038+30])
                                                                  Texp_apply
                                                                  expression (src/lr1.ml[228,7038+27]..src/lr1.ml[228,7038+28])
                                                                    Texp_ident "Stdlib!.="
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/lr1.ml[228,7038+9]..src/lr1.ml[228,7038+26])
                                                                        Texp_apply
                                                                        expression (src/lr1.ml[228,7038+9]..src/lr1.ml[228,7038+20])
                                                                          Texp_ident "Stdlib!.List.length"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/lr1.ml[228,7038+21]..src/lr1.ml[228,7038+26])
                                                                              Texp_ident "prods/1178"
                                                                        ]
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/lr1.ml[228,7038+29]..src/lr1.ml[228,7038+30])
                                                                        Texp_constant Const_int 1
                                                                  ]
                                                                expression (src/lr1.ml[228,7038+36]..src/lr1.ml[272,8583+9])
                                                                  Texp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (src/lr1.ml[229,7080+12]..src/lr1.ml[229,7080+16])
                                                                        Tpat_var "prod/1305"
                                                                      expression (src/lr1.ml[229,7080+19]..src/lr1.ml[229,7080+32])
                                                                        Texp_apply
                                                                        expression (src/lr1.ml[229,7080+19]..src/lr1.ml[229,7080+26])
                                                                          Texp_ident "Stdlib!.List.hd"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/lr1.ml[229,7080+27]..src/lr1.ml[229,7080+32])
                                                                              Texp_ident "prods/1178"
                                                                        ]
                                                                  ]
                                                                  expression (src/lr1.ml[234,7263+8]..src/lr1.ml[270,8533+48])
                                                                    Texp_match
                                                                    expression (src/lr1.ml[234,7263+14]..src/lr1.ml[234,7263+46])
                                                                      Texp_apply
                                                                      expression (src/lr1.ml[234,7263+14]..src/lr1.ml[234,7263+37])
                                                                        Texp_ident "Dune__exe!.Grammar.Precedence.shift_reduce"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/lr1.ml[234,7263+38]..src/lr1.ml[234,7263+41])
                                                                            Texp_ident "tok/1177"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/lr1.ml[234,7263+42]..src/lr1.ml[234,7263+46])
                                                                            Texp_ident "prod/1305"
                                                                      ]
                                                                    [
                                                                      <case>
                                                                        pattern (src/lr1.ml[236,7316+10]..src/lr1.ml[236,7316+32])
                                                                          Tpat_value
                                                                          pattern (src/lr1.ml[236,7316+10]..src/lr1.ml[236,7316+32])
                                                                            Tpat_construct "Precedence.ChooseShift"
                                                                            []
                                                                            None
                                                                        expression (src/lr1.ml[240,7400+12]..src/lr1.ml[241,7434+22])
                                                                          Texp_sequence
                                                                          expression (src/lr1.ml[240,7400+12]..src/lr1.ml[240,7400+32])
                                                                            Texp_apply
                                                                            expression (src/lr1.ml[240,7400+12]..src/lr1.ml[240,7400+16])
                                                                              Texp_ident "Stdlib!.incr"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/lr1.ml[240,7400+17]..src/lr1.ml[240,7400+32])
                                                                                  Texp_ident "silently_solved/988"
                                                                            ]
                                                                          expression (src/lr1.ml[241,7434+12]..src/lr1.ml[241,7434+22])
                                                                            Texp_ident "reductions/1179"
                                                                      <case>
                                                                        pattern (src/lr1.ml[243,7458+10]..src/lr1.ml[243,7458+33])
                                                                          Tpat_value
                                                                          pattern (src/lr1.ml[243,7458+10]..src/lr1.ml[243,7458+33])
                                                                            Tpat_construct "Precedence.ChooseReduce"
                                                                            []
                                                                            None
                                                                        expression (src/lr1.ml[250,7789+12]..src/lr1.ml[252,7903+48])
                                                                          Texp_sequence
                                                                          expression (src/lr1.ml[250,7789+12]..src/lr1.ml[250,7789+32])
                                                                            Texp_apply
                                                                            expression (src/lr1.ml[250,7789+12]..src/lr1.ml[250,7789+16])
                                                                              Texp_ident "Stdlib!.incr"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/lr1.ml[250,7789+17]..src/lr1.ml[250,7789+32])
                                                                                  Texp_ident "silently_solved/988"
                                                                            ]
                                                                          expression (src/lr1.ml[251,7823+12]..src/lr1.ml[252,7903+48])
                                                                            Texp_sequence
                                                                            expression (src/lr1.ml[251,7823+12]..src/lr1.ml[251,7823+78])
                                                                              Texp_apply
                                                                              expression (src/lr1.ml[251,7823+12]..src/lr1.ml[251,7823+78]) ghost
                                                                                Texp_ident "Stdlib!.Array.set"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr1.ml[251,7823+12]..src/lr1.ml[251,7823+23])
                                                                                    Texp_ident "transitions/769"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr1.ml[251,7823+25]..src/lr1.ml[251,7823+26])
                                                                                    Texp_ident "i/1095"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr1.ml[251,7823+31]..src/lr1.ml[251,7823+78])
                                                                                    Texp_apply
                                                                                    expression (src/lr1.ml[251,7823+31]..src/lr1.ml[251,7823+47])
                                                                                      Texp_ident "Dune__exe!.Grammar.SymbolMap.remove"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/lr1.ml[251,7823+48]..src/lr1.ml[251,7823+62])
                                                                                          Texp_construct "Symbol.T"
                                                                                          [
                                                                                            expression (src/lr1.ml[251,7823+58]..src/lr1.ml[251,7823+61])
                                                                                              Texp_ident "tok/1177"
                                                                                          ]
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/lr1.ml[251,7823+63]..src/lr1.ml[251,7823+78])
                                                                                          Texp_apply
                                                                                          expression (src/lr1.ml[251,7823+63]..src/lr1.ml[251,7823+78]) ghost
                                                                                            Texp_ident "Stdlib!.Array.get"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/lr1.ml[251,7823+63]..src/lr1.ml[251,7823+74])
                                                                                                Texp_ident "transitions/769"
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/lr1.ml[251,7823+76]..src/lr1.ml[251,7823+77])
                                                                                                Texp_ident "i/1095"
                                                                                          ]
                                                                                    ]
                                                                              ]
                                                                            expression (src/lr1.ml[252,7903+12]..src/lr1.ml[252,7903+48])
                                                                              Texp_apply
                                                                              expression (src/lr1.ml[252,7903+12]..src/lr1.ml[252,7903+27])
                                                                                Texp_ident "Dune__exe!.Grammar.TerminalMap.add"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr1.ml[252,7903+28]..src/lr1.ml[252,7903+31])
                                                                                    Texp_ident "tok/1177"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr1.ml[252,7903+32]..src/lr1.ml[252,7903+37])
                                                                                    Texp_ident "prods/1178"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr1.ml[252,7903+38]..src/lr1.ml[252,7903+48])
                                                                                    Texp_ident "reductions/1179"
                                                                              ]
                                                                      <case>
                                                                        pattern (src/lr1.ml[254,7953+10]..src/lr1.ml[254,7953+34])
                                                                          Tpat_value
                                                                          pattern (src/lr1.ml[254,7953+10]..src/lr1.ml[254,7953+34])
                                                                            Tpat_construct "Precedence.ChooseNeither"
                                                                            []
                                                                            None
                                                                        expression (src/lr1.ml[258,8069+12]..src/lr1.ml[261,8233+22])
                                                                          Texp_sequence
                                                                          expression (src/lr1.ml[258,8069+12]..src/lr1.ml[258,8069+32])
                                                                            Texp_apply
                                                                            expression (src/lr1.ml[258,8069+12]..src/lr1.ml[258,8069+16])
                                                                              Texp_ident "Stdlib!.incr"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/lr1.ml[258,8069+17]..src/lr1.ml[258,8069+32])
                                                                                  Texp_ident "silently_solved/988"
                                                                            ]
                                                                          expression (src/lr1.ml[259,8103+12]..src/lr1.ml[261,8233+22])
                                                                            Texp_sequence
                                                                            expression (src/lr1.ml[259,8103+12]..src/lr1.ml[259,8103+78])
                                                                              Texp_apply
                                                                              expression (src/lr1.ml[259,8103+12]..src/lr1.ml[259,8103+78]) ghost
                                                                                Texp_ident "Stdlib!.Array.set"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr1.ml[259,8103+12]..src/lr1.ml[259,8103+23])
                                                                                    Texp_ident "transitions/769"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr1.ml[259,8103+25]..src/lr1.ml[259,8103+26])
                                                                                    Texp_ident "i/1095"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr1.ml[259,8103+31]..src/lr1.ml[259,8103+78])
                                                                                    Texp_apply
                                                                                    expression (src/lr1.ml[259,8103+31]..src/lr1.ml[259,8103+47])
                                                                                      Texp_ident "Dune__exe!.Grammar.SymbolMap.remove"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/lr1.ml[259,8103+48]..src/lr1.ml[259,8103+62])
                                                                                          Texp_construct "Symbol.T"
                                                                                          [
                                                                                            expression (src/lr1.ml[259,8103+58]..src/lr1.ml[259,8103+61])
                                                                                              Texp_ident "tok/1177"
                                                                                          ]
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/lr1.ml[259,8103+63]..src/lr1.ml[259,8103+78])
                                                                                          Texp_apply
                                                                                          expression (src/lr1.ml[259,8103+63]..src/lr1.ml[259,8103+78]) ghost
                                                                                            Texp_ident "Stdlib!.Array.get"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/lr1.ml[259,8103+63]..src/lr1.ml[259,8103+74])
                                                                                                Texp_ident "transitions/769"
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/lr1.ml[259,8103+76]..src/lr1.ml[259,8103+77])
                                                                                                Texp_ident "i/1095"
                                                                                          ]
                                                                                    ]
                                                                              ]
                                                                            expression (src/lr1.ml[260,8183+12]..src/lr1.ml[261,8233+22])
                                                                              Texp_sequence
                                                                              expression (src/lr1.ml[260,8183+12]..src/lr1.ml[260,8183+48])
                                                                                Texp_apply
                                                                                expression (src/lr1.ml[260,8183+12]..src/lr1.ml[260,8183+48]) ghost
                                                                                  Texp_ident "Stdlib!.Array.set"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr1.ml[260,8183+12]..src/lr1.ml[260,8183+36])
                                                                                      Texp_ident "forbid_default_reduction/983"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr1.ml[260,8183+38]..src/lr1.ml[260,8183+39])
                                                                                      Texp_ident "i/1095"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr1.ml[260,8183+44]..src/lr1.ml[260,8183+48])
                                                                                      Texp_construct "true"
                                                                                      []
                                                                                ]
                                                                              expression (src/lr1.ml[261,8233+12]..src/lr1.ml[261,8233+22])
                                                                                Texp_ident "reductions/1179"
                                                                      <case>
                                                                        pattern (src/lr1.ml[263,8257+10]..src/lr1.ml[263,8257+29])
                                                                          Tpat_value
                                                                          pattern (src/lr1.ml[263,8257+10]..src/lr1.ml[263,8257+29])
                                                                            Tpat_construct "Precedence.DontKnow"
                                                                            []
                                                                            None
                                                                        expression (src/lr1.ml[268,8409+12]..src/lr1.ml[270,8533+48])
                                                                          Texp_sequence
                                                                          expression (src/lr1.ml[268,8409+12]..src/lr1.ml[268,8409+84])
                                                                            Texp_apply
                                                                            expression (src/lr1.ml[268,8409+12]..src/lr1.ml[268,8409+84]) ghost
                                                                              Texp_ident "Stdlib!.Array.set"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/lr1.ml[268,8409+12]..src/lr1.ml[268,8409+28])
                                                                                  Texp_ident "_conflict_tokens/947"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/lr1.ml[268,8409+30]..src/lr1.ml[268,8409+31])
                                                                                  Texp_ident "i/1095"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/lr1.ml[268,8409+36]..src/lr1.ml[268,8409+84])
                                                                                  Texp_apply
                                                                                  expression (src/lr1.ml[268,8409+36]..src/lr1.ml[268,8409+59])
                                                                                    Texp_ident "Dune__exe!.Grammar.TerminalSet.add"
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/lr1.ml[268,8409+60]..src/lr1.ml[268,8409+63])
                                                                                        Texp_ident "tok/1177"
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/lr1.ml[268,8409+64]..src/lr1.ml[268,8409+84])
                                                                                        Texp_apply
                                                                                        expression (src/lr1.ml[268,8409+64]..src/lr1.ml[268,8409+84]) ghost
                                                                                          Texp_ident "Stdlib!.Array.get"
                                                                                        [
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/lr1.ml[268,8409+64]..src/lr1.ml[268,8409+80])
                                                                                              Texp_ident "_conflict_tokens/947"
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/lr1.ml[268,8409+82]..src/lr1.ml[268,8409+83])
                                                                                              Texp_ident "i/1095"
                                                                                        ]
                                                                                  ]
                                                                            ]
                                                                          expression (src/lr1.ml[269,8495+12]..src/lr1.ml[270,8533+48])
                                                                            Texp_sequence
                                                                            expression (src/lr1.ml[269,8495+12]..src/lr1.ml[269,8495+36])
                                                                              Texp_apply
                                                                              expression (src/lr1.ml[269,8495+29]..src/lr1.ml[269,8495+31])
                                                                                Texp_ident "Stdlib!.:="
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr1.ml[269,8495+12]..src/lr1.ml[269,8495+28])
                                                                                    Texp_ident "has_shift_reduce/1172"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr1.ml[269,8495+32]..src/lr1.ml[269,8495+36])
                                                                                    Texp_construct "true"
                                                                                    []
                                                                              ]
                                                                            expression (src/lr1.ml[270,8533+12]..src/lr1.ml[270,8533+48])
                                                                              Texp_apply
                                                                              expression (src/lr1.ml[270,8533+12]..src/lr1.ml[270,8533+27])
                                                                                Texp_ident "Dune__exe!.Grammar.TerminalMap.add"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr1.ml[270,8533+28]..src/lr1.ml[270,8533+31])
                                                                                    Texp_ident "tok/1177"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr1.ml[270,8533+32]..src/lr1.ml[270,8533+37])
                                                                                    Texp_ident "prods/1178"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr1.ml[270,8533+38]..src/lr1.ml[270,8533+48])
                                                                                    Texp_ident "reductions/1179"
                                                                              ]
                                                                    ]
                                                                Some
                                                                  expression (src/lr1.ml[273,8593+11]..src/lr1.ml[315,9989+9])
                                                                    Texp_let Nonrec
                                                                    [
                                                                      <def>
                                                                        pattern (src/lr1.ml[281,8965+12]..src/lr1.ml[281,8965+19])
                                                                          Tpat_var "choices/1368"
                                                                        expression (src/lr1.ml[281,8965+22]..src/lr1.ml[281,8965+66])
                                                                          Texp_apply
                                                                          expression (src/lr1.ml[281,8965+22]..src/lr1.ml[281,8965+30])
                                                                            Texp_ident "Stdlib!.List.map"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/lr1.ml[281,8965+31]..src/lr1.ml[281,8965+60])
                                                                                Texp_apply
                                                                                expression (src/lr1.ml[281,8965+32]..src/lr1.ml[281,8965+55])
                                                                                  Texp_ident "Dune__exe!.Grammar.Precedence.shift_reduce"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr1.ml[281,8965+56]..src/lr1.ml[281,8965+59])
                                                                                      Texp_ident "tok/1177"
                                                                                ]
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/lr1.ml[281,8965+61]..src/lr1.ml[281,8965+66])
                                                                                Texp_ident "prods/1178"
                                                                          ]
                                                                    ]
                                                                    expression (src/lr1.ml[283,9036+8]..src/lr1.ml[313,9976+11])
                                                                      Texp_ifthenelse
                                                                      expression (src/lr1.ml[283,9036+11]..src/lr1.ml[287,9169+17])
                                                                        Texp_apply
                                                                        expression (src/lr1.ml[283,9036+11]..src/lr1.ml[283,9036+23])
                                                                          Texp_ident "Stdlib!.List.for_all"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/lr1.ml[283,9036+24]..src/lr1.ml[287,9169+9])
                                                                              Texp_function
                                                                              Nolabel
                                                                              [
                                                                                <case>
                                                                                  pattern (src/lr1.ml[283,9036+29]..src/lr1.ml[283,9036+35])
                                                                                    Tpat_var "choice/1369"
                                                                                  expression (src/lr1.ml[284,9075+10]..src/lr1.ml[286,9146+22])
                                                                                    Texp_match
                                                                                    expression (src/lr1.ml[284,9075+16]..src/lr1.ml[284,9075+22])
                                                                                      Texp_ident "choice/1369"
                                                                                    [
                                                                                      <case>
                                                                                        pattern (src/lr1.ml[285,9103+12]..src/lr1.ml[285,9103+34])
                                                                                          Tpat_value
                                                                                          pattern (src/lr1.ml[285,9103+12]..src/lr1.ml[285,9103+34])
                                                                                            Tpat_construct "Precedence.ChooseShift"
                                                                                            []
                                                                                            None
                                                                                        expression (src/lr1.ml[285,9103+38]..src/lr1.ml[285,9103+42])
                                                                                          Texp_construct "true"
                                                                                          []
                                                                                      <case>
                                                                                        pattern (src/lr1.ml[286,9146+12]..src/lr1.ml[286,9146+13])
                                                                                          Tpat_value
                                                                                          pattern (src/lr1.ml[286,9146+12]..src/lr1.ml[286,9146+13])
                                                                                            Tpat_any
                                                                                        expression (src/lr1.ml[286,9146+17]..src/lr1.ml[286,9146+22])
                                                                                          Texp_construct "false"
                                                                                          []
                                                                                    ]
                                                                              ]
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/lr1.ml[287,9169+10]..src/lr1.ml[287,9169+17])
                                                                              Texp_ident "choices/1368"
                                                                        ]
                                                                      expression (src/lr1.ml[287,9169+23]..src/lr1.ml[294,9333+11])
                                                                        Texp_sequence
                                                                        expression (src/lr1.ml[291,9244+10]..src/lr1.ml[291,9244+65])
                                                                          Texp_apply
                                                                          expression (src/lr1.ml[291,9244+26]..src/lr1.ml[291,9244+28])
                                                                            Texp_ident "Stdlib!.:="
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/lr1.ml[291,9244+10]..src/lr1.ml[291,9244+25])
                                                                                Texp_ident "silently_solved/988"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/lr1.ml[291,9244+29]..src/lr1.ml[291,9244+65])
                                                                                Texp_apply
                                                                                expression (src/lr1.ml[291,9244+46]..src/lr1.ml[291,9244+47])
                                                                                  Texp_ident "Stdlib!.+"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr1.ml[291,9244+29]..src/lr1.ml[291,9244+45])
                                                                                      Texp_apply
                                                                                      expression (src/lr1.ml[291,9244+29]..src/lr1.ml[291,9244+30])
                                                                                        Texp_ident "Stdlib!.!"
                                                                                      [
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/lr1.ml[291,9244+30]..src/lr1.ml[291,9244+45])
                                                                                            Texp_ident "silently_solved/988"
                                                                                      ]
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr1.ml[291,9244+48]..src/lr1.ml[291,9244+65])
                                                                                      Texp_apply
                                                                                      expression (src/lr1.ml[291,9244+48]..src/lr1.ml[291,9244+59])
                                                                                        Texp_ident "Stdlib!.List.length"
                                                                                      [
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/lr1.ml[291,9244+60]..src/lr1.ml[291,9244+65])
                                                                                            Texp_ident "prods/1178"
                                                                                      ]
                                                                                ]
                                                                          ]
                                                                        expression (src/lr1.ml[292,9311+10]..src/lr1.ml[292,9311+20])
                                                                          Texp_ident "reductions/1179"
                                                                      Some
                                                                        expression (src/lr1.ml[295,9345+13]..src/lr1.ml[313,9976+11])
                                                                          Texp_ifthenelse
                                                                          expression (src/lr1.ml[295,9345+16]..src/lr1.ml[295,9345+67])
                                                                            Texp_apply
                                                                            expression (src/lr1.ml[295,9345+16]..src/lr1.ml[295,9345+28])
                                                                              Texp_ident "Stdlib!.List.for_all"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/lr1.ml[295,9345+29]..src/lr1.ml[295,9345+59])
                                                                                  Texp_apply
                                                                                  expression (src/lr1.ml[295,9345+30]..src/lr1.ml[295,9345+33])
                                                                                    Texp_ident "Stdlib!.="
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/lr1.ml[295,9345+34]..src/lr1.ml[295,9345+58])
                                                                                        Texp_construct "Precedence.ChooseNeither"
                                                                                        []
                                                                                  ]
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/lr1.ml[295,9345+60]..src/lr1.ml[295,9345+67])
                                                                                  Texp_ident "choices/1368"
                                                                            ]
                                                                          expression (src/lr1.ml[295,9345+73]..src/lr1.ml[303,9662+11])
                                                                            Texp_sequence
                                                                            expression (src/lr1.ml[299,9495+10]..src/lr1.ml[299,9495+65])
                                                                              Texp_apply
                                                                              expression (src/lr1.ml[299,9495+26]..src/lr1.ml[299,9495+28])
                                                                                Texp_ident "Stdlib!.:="
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr1.ml[299,9495+10]..src/lr1.ml[299,9495+25])
                                                                                    Texp_ident "silently_solved/988"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr1.ml[299,9495+29]..src/lr1.ml[299,9495+65])
                                                                                    Texp_apply
                                                                                    expression (src/lr1.ml[299,9495+46]..src/lr1.ml[299,9495+47])
                                                                                      Texp_ident "Stdlib!.+"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/lr1.ml[299,9495+29]..src/lr1.ml[299,9495+45])
                                                                                          Texp_apply
                                                                                          expression (src/lr1.ml[299,9495+29]..src/lr1.ml[299,9495+30])
                                                                                            Texp_ident "Stdlib!.!"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/lr1.ml[299,9495+30]..src/lr1.ml[299,9495+45])
                                                                                                Texp_ident "silently_solved/988"
                                                                                          ]
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/lr1.ml[299,9495+48]..src/lr1.ml[299,9495+65])
                                                                                          Texp_apply
                                                                                          expression (src/lr1.ml[299,9495+48]..src/lr1.ml[299,9495+59])
                                                                                            Texp_ident "Stdlib!.List.length"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/lr1.ml[299,9495+60]..src/lr1.ml[299,9495+65])
                                                                                                Texp_ident "prods/1178"
                                                                                          ]
                                                                                    ]
                                                                              ]
                                                                            expression (src/lr1.ml[300,9562+10]..src/lr1.ml[301,9640+20])
                                                                              Texp_sequence
                                                                              expression (src/lr1.ml[300,9562+10]..src/lr1.ml[300,9562+76])
                                                                                Texp_apply
                                                                                expression (src/lr1.ml[300,9562+10]..src/lr1.ml[300,9562+76]) ghost
                                                                                  Texp_ident "Stdlib!.Array.set"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr1.ml[300,9562+10]..src/lr1.ml[300,9562+21])
                                                                                      Texp_ident "transitions/769"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr1.ml[300,9562+23]..src/lr1.ml[300,9562+24])
                                                                                      Texp_ident "i/1095"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr1.ml[300,9562+29]..src/lr1.ml[300,9562+76])
                                                                                      Texp_apply
                                                                                      expression (src/lr1.ml[300,9562+29]..src/lr1.ml[300,9562+45])
                                                                                        Texp_ident "Dune__exe!.Grammar.SymbolMap.remove"
                                                                                      [
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/lr1.ml[300,9562+46]..src/lr1.ml[300,9562+60])
                                                                                            Texp_construct "Symbol.T"
                                                                                            [
                                                                                              expression (src/lr1.ml[300,9562+56]..src/lr1.ml[300,9562+59])
                                                                                                Texp_ident "tok/1177"
                                                                                            ]
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/lr1.ml[300,9562+61]..src/lr1.ml[300,9562+76])
                                                                                            Texp_apply
                                                                                            expression (src/lr1.ml[300,9562+61]..src/lr1.ml[300,9562+76]) ghost
                                                                                              Texp_ident "Stdlib!.Array.get"
                                                                                            [
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/lr1.ml[300,9562+61]..src/lr1.ml[300,9562+72])
                                                                                                  Texp_ident "transitions/769"
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/lr1.ml[300,9562+74]..src/lr1.ml[300,9562+75])
                                                                                                  Texp_ident "i/1095"
                                                                                            ]
                                                                                      ]
                                                                                ]
                                                                              expression (src/lr1.ml[301,9640+10]..src/lr1.ml[301,9640+20])
                                                                                Texp_ident "reductions/1179"
                                                                          Some
                                                                            expression (src/lr1.ml[304,9674+13]..src/lr1.ml[313,9976+11])
                                                                              Texp_sequence
                                                                              expression (src/lr1.ml[308,9771+10]..src/lr1.ml[308,9771+82])
                                                                                Texp_apply
                                                                                expression (src/lr1.ml[308,9771+10]..src/lr1.ml[308,9771+82]) ghost
                                                                                  Texp_ident "Stdlib!.Array.set"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr1.ml[308,9771+10]..src/lr1.ml[308,9771+26])
                                                                                      Texp_ident "_conflict_tokens/947"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr1.ml[308,9771+28]..src/lr1.ml[308,9771+29])
                                                                                      Texp_ident "i/1095"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr1.ml[308,9771+34]..src/lr1.ml[308,9771+82])
                                                                                      Texp_apply
                                                                                      expression (src/lr1.ml[308,9771+34]..src/lr1.ml[308,9771+57])
                                                                                        Texp_ident "Dune__exe!.Grammar.TerminalSet.add"
                                                                                      [
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/lr1.ml[308,9771+58]..src/lr1.ml[308,9771+61])
                                                                                            Texp_ident "tok/1177"
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/lr1.ml[308,9771+62]..src/lr1.ml[308,9771+82])
                                                                                            Texp_apply
                                                                                            expression (src/lr1.ml[308,9771+62]..src/lr1.ml[308,9771+82]) ghost
                                                                                              Texp_ident "Stdlib!.Array.get"
                                                                                            [
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/lr1.ml[308,9771+62]..src/lr1.ml[308,9771+78])
                                                                                                  Texp_ident "_conflict_tokens/947"
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/lr1.ml[308,9771+80]..src/lr1.ml[308,9771+81])
                                                                                                  Texp_ident "i/1095"
                                                                                            ]
                                                                                      ]
                                                                                ]
                                                                              expression (src/lr1.ml[309,9855+10]..src/lr1.ml[311,9928+46])
                                                                                Texp_sequence
                                                                                expression (src/lr1.ml[309,9855+10]..src/lr1.ml[309,9855+34])
                                                                                  Texp_apply
                                                                                  expression (src/lr1.ml[309,9855+27]..src/lr1.ml[309,9855+29])
                                                                                    Texp_ident "Stdlib!.:="
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/lr1.ml[309,9855+10]..src/lr1.ml[309,9855+26])
                                                                                        Texp_ident "has_shift_reduce/1172"
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/lr1.ml[309,9855+30]..src/lr1.ml[309,9855+34])
                                                                                        Texp_construct "true"
                                                                                        []
                                                                                  ]
                                                                                expression (src/lr1.ml[310,9891+10]..src/lr1.ml[311,9928+46])
                                                                                  Texp_sequence
                                                                                  expression (src/lr1.ml[310,9891+10]..src/lr1.ml[310,9891+35])
                                                                                    Texp_apply
                                                                                    expression (src/lr1.ml[310,9891+28]..src/lr1.ml[310,9891+30])
                                                                                      Texp_ident "Stdlib!.:="
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/lr1.ml[310,9891+10]..src/lr1.ml[310,9891+27])
                                                                                          Texp_ident "has_reduce_reduce/1173"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/lr1.ml[310,9891+31]..src/lr1.ml[310,9891+35])
                                                                                          Texp_construct "true"
                                                                                          []
                                                                                    ]
                                                                                  expression (src/lr1.ml[311,9928+10]..src/lr1.ml[311,9928+46])
                                                                                    Texp_apply
                                                                                    expression (src/lr1.ml[311,9928+10]..src/lr1.ml[311,9928+25])
                                                                                      Texp_ident "Dune__exe!.Grammar.TerminalMap.add"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/lr1.ml[311,9928+26]..src/lr1.ml[311,9928+29])
                                                                                          Texp_ident "tok/1177"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/lr1.ml[311,9928+30]..src/lr1.ml[311,9928+35])
                                                                                          Texp_ident "prods/1178"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/lr1.ml[311,9928+36]..src/lr1.ml[311,9928+46])
                                                                                          Texp_ident "reductions/1179"
                                                                                    ]
                                                            Some
                                                              expression (src/lr1.ml[318,10008+9]..src/lr1.ml[331,10446+7])
                                                                Texp_sequence
                                                                expression (src/lr1.ml[322,10093+6]..src/lr1.ml[327,10390+9])
                                                                  Texp_ifthenelse
                                                                  expression (src/lr1.ml[322,10093+9]..src/lr1.ml[322,10093+31])
                                                                    Texp_apply
                                                                    expression (src/lr1.ml[322,10093+27]..src/lr1.ml[322,10093+29])
                                                                      Texp_ident "Stdlib!.>="
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/lr1.ml[322,10093+9]..src/lr1.ml[322,10093+26])
                                                                          Texp_apply
                                                                          expression (src/lr1.ml[322,10093+9]..src/lr1.ml[322,10093+20])
                                                                            Texp_ident "Stdlib!.List.length"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/lr1.ml[322,10093+21]..src/lr1.ml[322,10093+26])
                                                                                Texp_ident "prods/1178"
                                                                          ]
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/lr1.ml[322,10093+30]..src/lr1.ml[322,10093+31])
                                                                          Texp_constant Const_int 2
                                                                    ]
                                                                  expression (src/lr1.ml[322,10093+37]..src/lr1.ml[327,10390+9])
                                                                    Texp_sequence
                                                                    expression (src/lr1.ml[325,10274+8]..src/lr1.ml[325,10274+80])
                                                                      Texp_apply
                                                                      expression (src/lr1.ml[325,10274+8]..src/lr1.ml[325,10274+80]) ghost
                                                                        Texp_ident "Stdlib!.Array.set"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/lr1.ml[325,10274+8]..src/lr1.ml[325,10274+24])
                                                                            Texp_ident "_conflict_tokens/947"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/lr1.ml[325,10274+26]..src/lr1.ml[325,10274+27])
                                                                            Texp_ident "i/1095"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/lr1.ml[325,10274+32]..src/lr1.ml[325,10274+80])
                                                                            Texp_apply
                                                                            expression (src/lr1.ml[325,10274+32]..src/lr1.ml[325,10274+55])
                                                                              Texp_ident "Dune__exe!.Grammar.TerminalSet.add"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/lr1.ml[325,10274+56]..src/lr1.ml[325,10274+59])
                                                                                  Texp_ident "tok/1177"
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/lr1.ml[325,10274+60]..src/lr1.ml[325,10274+80])
                                                                                  Texp_apply
                                                                                  expression (src/lr1.ml[325,10274+60]..src/lr1.ml[325,10274+80]) ghost
                                                                                    Texp_ident "Stdlib!.Array.get"
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/lr1.ml[325,10274+60]..src/lr1.ml[325,10274+76])
                                                                                        Texp_ident "_conflict_tokens/947"
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/lr1.ml[325,10274+78]..src/lr1.ml[325,10274+79])
                                                                                        Texp_ident "i/1095"
                                                                                  ]
                                                                            ]
                                                                      ]
                                                                    expression (src/lr1.ml[326,10356+8]..src/lr1.ml[326,10356+33])
                                                                      Texp_apply
                                                                      expression (src/lr1.ml[326,10356+26]..src/lr1.ml[326,10356+28])
                                                                        Texp_ident "Stdlib!.:="
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/lr1.ml[326,10356+8]..src/lr1.ml[326,10356+25])
                                                                            Texp_ident "has_reduce_reduce/1173"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/lr1.ml[326,10356+29]..src/lr1.ml[326,10356+33])
                                                                            Texp_construct "true"
                                                                            []
                                                                      ]
                                                                  None
                                                                expression (src/lr1.ml[329,10402+6]..src/lr1.ml[329,10402+42])
                                                                  Texp_apply
                                                                  expression (src/lr1.ml[329,10402+6]..src/lr1.ml[329,10402+21])
                                                                    Texp_ident "Dune__exe!.Grammar.TerminalMap.add"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/lr1.ml[329,10402+22]..src/lr1.ml[329,10402+25])
                                                                        Texp_ident "tok/1177"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/lr1.ml[329,10402+26]..src/lr1.ml[329,10402+31])
                                                                        Texp_ident "prods/1178"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/lr1.ml[329,10402+32]..src/lr1.ml[329,10402+42])
                                                                        Texp_ident "reductions/1179"
                                                                  ]
                                                    ]
                                              ]
                                        ]
                                  ]
                            ]
                          expression (src/lr1.ml[339,10641+2]..src/lr1.ml[365,11520+5])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/lr1.ml[339,10641+6]..src/lr1.ml[339,10641+17])
                                  Tpat_var "transitions/1370"
                                expression (src/lr1.ml[339,10641+20]..src/lr1.ml[339,10641+35])
                                  Texp_apply
                                  expression (src/lr1.ml[339,10641+20]..src/lr1.ml[339,10641+35]) ghost
                                    Texp_ident "Stdlib!.Array.get"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[339,10641+20]..src/lr1.ml[339,10641+31])
                                        Texp_ident "transitions/769"
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[339,10641+33]..src/lr1.ml[339,10641+34])
                                        Texp_ident "i/1095"
                                  ]
                              <def>
                                pattern (src/lr1.ml[340,10677+6]..src/lr1.ml[340,10677+16])
                                  Tpat_var "reductions/1371"
                                expression (src/lr1.ml[340,10677+19]..src/lr1.ml[340,10677+33])
                                  Texp_apply
                                  expression (src/lr1.ml[340,10677+19]..src/lr1.ml[340,10677+33]) ghost
                                    Texp_ident "Stdlib!.Array.get"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[340,10677+19]..src/lr1.ml[340,10677+29])
                                        Texp_ident "reductions/858"
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[340,10677+31]..src/lr1.ml[340,10677+32])
                                        Texp_ident "i/1095"
                                  ]
                            ]
                            expression (src/lr1.ml[342,10715+2]..src/lr1.ml[365,11520+5])
                              Texp_sequence
                              expression (src/lr1.ml[342,10715+2]..src/lr1.ml[355,11246+5])
                                Texp_ifthenelse
                                expression (src/lr1.ml[342,10715+5]..src/lr1.ml[342,10715+48])
                                  Texp_apply
                                  expression (src/lr1.ml[342,10715+5]..src/lr1.ml[342,10715+25])
                                    Texp_ident "Dune__exe!.Lr0.has_eos_conflict"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[342,10715+26]..src/lr1.ml[342,10715+37])
                                        Texp_ident "transitions/1370"
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[342,10715+38]..src/lr1.ml[342,10715+48])
                                        Texp_ident "reductions/1371"
                                  ]
                                expression (src/lr1.ml[342,10715+54]..src/lr1.ml[355,11246+5])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/lr1.ml[344,10833+10]..src/lr1.ml[344,10833+27])
                                        Tpat_tuple
                                        [
                                          pattern (src/lr1.ml[344,10833+10]..src/lr1.ml[344,10833+15])
                                            Tpat_var "prods/1372"
                                          pattern (src/lr1.ml[344,10833+17]..src/lr1.ml[344,10833+27])
                                            Tpat_var "reductions/1373"
                                        ]
                                      expression (src/lr1.ml[345,10863+8]..src/lr1.ml[345,10863+63])
                                        Texp_apply
                                        expression (src/lr1.ml[345,10863+8]..src/lr1.ml[345,10863+37])
                                          Texp_ident "Dune__exe!.Grammar.TerminalMap.lookup_and_remove"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[345,10863+38]..src/lr1.ml[345,10863+52])
                                              Texp_ident "Dune__exe!.Grammar.Terminal.sharp"
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[345,10863+53]..src/lr1.ml[345,10863+63])
                                              Texp_ident "reductions/1371"
                                        ]
                                  ]
                                  expression (src/lr1.ml[348,11020+4]..src/lr1.ml[354,11198+47])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/lr1.ml[348,11020+8]..src/lr1.ml[348,11020+12])
                                          Tpat_var "toks/1374"
                                        expression (src/lr1.ml[349,11035+6]..src/lr1.ml[351,11103+41])
                                          Texp_apply
                                          expression (src/lr1.ml[349,11035+6]..src/lr1.ml[349,11035+23])
                                            Texp_ident "Dune__exe!.Grammar.TerminalSet.union"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[350,11059+8]..src/lr1.ml[350,11059+43])
                                                Texp_apply
                                                expression (src/lr1.ml[350,11059+9]..src/lr1.ml[350,11059+30])
                                                  Texp_ident "Dune__exe!.Lr0.transition_tokens"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr1.ml[350,11059+31]..src/lr1.ml[350,11059+42])
                                                      Texp_ident "transitions/1370"
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[351,11103+8]..src/lr1.ml[351,11103+41])
                                                Texp_apply
                                                expression (src/lr1.ml[351,11103+9]..src/lr1.ml[351,11103+29])
                                                  Texp_ident "Dune__exe!.Lr0.reduction_tokens"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr1.ml[351,11103+30]..src/lr1.ml[351,11103+40])
                                                      Texp_ident "reductions/1373"
                                                ]
                                          ]
                                    ]
                                    expression (src/lr1.ml[354,11198+4]..src/lr1.ml[354,11198+47])
                                      Texp_apply
                                      expression (src/lr1.ml[354,11198+4]..src/lr1.ml[354,11198+47]) ghost
                                        Texp_ident "Stdlib!.Array.set"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/lr1.ml[354,11198+4]..src/lr1.ml[354,11198+21])
                                            Texp_ident "_has_eos_conflict/982"
                                        <arg>
                                          Nolabel
                                          expression (src/lr1.ml[354,11198+23]..src/lr1.ml[354,11198+24])
                                            Texp_ident "i/1095"
                                        <arg>
                                          Nolabel
                                          expression (src/lr1.ml[354,11198+29]..src/lr1.ml[354,11198+47])
                                            Texp_construct "Some"
                                            [
                                              expression (src/lr1.ml[354,11198+34]..src/lr1.ml[354,11198+47])
                                                Texp_tuple
                                                [
                                                  expression (src/lr1.ml[354,11198+35]..src/lr1.ml[354,11198+40])
                                                    Texp_ident "prods/1372"
                                                  expression (src/lr1.ml[354,11198+42]..src/lr1.ml[354,11198+46])
                                                    Texp_ident "toks/1374"
                                                ]
                                            ]
                                      ]
                                None
                              expression (src/lr1.ml[359,11298+2]..src/lr1.ml[365,11520+5])
                                Texp_ifthenelse
                                expression (src/lr1.ml[359,11298+5]..src/lr1.ml[359,11298+52])
                                  Texp_apply
                                  expression (src/lr1.ml[359,11298+5]..src/lr1.ml[359,11298+8])
                                    Texp_ident "Stdlib!.not"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[359,11298+9]..src/lr1.ml[359,11298+52])
                                        Texp_apply
                                        expression (src/lr1.ml[359,11298+10]..src/lr1.ml[359,11298+30])
                                          Texp_ident "Dune__exe!.Grammar.TerminalSet.is_empty"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[359,11298+31]..src/lr1.ml[359,11298+51])
                                              Texp_apply
                                              expression (src/lr1.ml[359,11298+31]..src/lr1.ml[359,11298+51]) ghost
                                                Texp_ident "Stdlib!.Array.get"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr1.ml[359,11298+31]..src/lr1.ml[359,11298+47])
                                                    Texp_ident "_conflict_tokens/947"
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr1.ml[359,11298+49]..src/lr1.ml[359,11298+50])
                                                    Texp_ident "i/1095"
                                              ]
                                        ]
                                  ]
                                expression (src/lr1.ml[359,11298+58]..src/lr1.ml[365,11520+5])
                                  Texp_sequence
                                  expression (src/lr1.ml[360,11362+4]..src/lr1.ml[360,11362+45])
                                    Texp_apply
                                    expression (src/lr1.ml[360,11362+19]..src/lr1.ml[360,11362+21])
                                      Texp_ident "Stdlib!.:="
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[360,11362+4]..src/lr1.ml[360,11362+18])
                                          Texp_ident "conflict_nodes/985"
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[360,11362+22]..src/lr1.ml[360,11362+45])
                                          Texp_construct "::"
                                          [
                                            expression (src/lr1.ml[360,11362+22]..src/lr1.ml[360,11362+26])
                                              Texp_ident "node/1135"
                                            expression (src/lr1.ml[360,11362+30]..src/lr1.ml[360,11362+45])
                                              Texp_apply
                                              expression (src/lr1.ml[360,11362+30]..src/lr1.ml[360,11362+31])
                                                Texp_ident "Stdlib!.!"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr1.ml[360,11362+31]..src/lr1.ml[360,11362+45])
                                                    Texp_ident "conflict_nodes/985"
                                              ]
                                          ]
                                    ]
                                  expression (src/lr1.ml[361,11409+4]..src/lr1.ml[364,11495+24])
                                    Texp_sequence
                                    expression (src/lr1.ml[361,11409+4]..src/lr1.ml[362,11439+23])
                                      Texp_ifthenelse
                                      expression (src/lr1.ml[361,11409+7]..src/lr1.ml[361,11409+24])
                                        Texp_apply
                                        expression (src/lr1.ml[361,11409+7]..src/lr1.ml[361,11409+8])
                                          Texp_ident "Stdlib!.!"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[361,11409+8]..src/lr1.ml[361,11409+24])
                                              Texp_ident "has_shift_reduce/1172"
                                        ]
                                      expression (src/lr1.ml[362,11439+6]..src/lr1.ml[362,11439+23])
                                        Texp_apply
                                        expression (src/lr1.ml[362,11439+6]..src/lr1.ml[362,11439+10])
                                          Texp_ident "Stdlib!.incr"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[362,11439+11]..src/lr1.ml[362,11439+23])
                                              Texp_ident "shift_reduce/986"
                                        ]
                                      None
                                    expression (src/lr1.ml[363,11464+4]..src/lr1.ml[364,11495+24])
                                      Texp_ifthenelse
                                      expression (src/lr1.ml[363,11464+7]..src/lr1.ml[363,11464+25])
                                        Texp_apply
                                        expression (src/lr1.ml[363,11464+7]..src/lr1.ml[363,11464+8])
                                          Texp_ident "Stdlib!.!"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[363,11464+8]..src/lr1.ml[363,11464+25])
                                              Texp_ident "has_reduce_reduce/1173"
                                        ]
                                      expression (src/lr1.ml[364,11495+6]..src/lr1.ml[364,11495+24])
                                        Texp_apply
                                        expression (src/lr1.ml[364,11495+6]..src/lr1.ml[364,11495+10])
                                          Texp_ident "Stdlib!.incr"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[364,11495+11]..src/lr1.ml[364,11495+24])
                                              Texp_ident "reduce_reduce/987"
                                        ]
                                      None
                                None
          ]
    ]
  structure_item (src/lr1.ml[373,11741+0]..src/lr1.ml[377,11983+58])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[373,11741+4]..src/lr1.ml[373,11741+12])
          Tpat_var "traverse/1375"
        expression (src/lr1.ml[373,11741+13]..src/lr1.ml[377,11983+58]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[373,11741+14]..src/lr1.ml[373,11741+20])
                extra
                  Tpat_extra_constraint
                  core_type (src/lr1.ml[373,11741+23]..src/lr1.ml[373,11741+31])
                    Ttyp_constr "Raw/633.node"
                    []
                Tpat_alias "source/1377"
                pattern (src/lr1.ml[373,11741+14]..src/lr1.ml[373,11741+20])
                  Tpat_any
              expression (src/lr1.ml[373,11741+33]..src/lr1.ml[377,11983+58]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr1.ml[373,11741+33]..src/lr1.ml[373,11741+40])
                      Tpat_var "_symbol/1378"
                    expression (src/lr1.ml[373,11741+41]..src/lr1.ml[377,11983+58]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/lr1.ml[373,11741+42]..src/lr1.ml[373,11741+48])
                            extra
                              Tpat_extra_constraint
                              core_type (src/lr1.ml[373,11741+51]..src/lr1.ml[373,11741+59])
                                Ttyp_constr "Raw/633.node"
                                []
                            Tpat_alias "target/1379"
                            pattern (src/lr1.ml[373,11741+42]..src/lr1.ml[373,11741+48])
                              Tpat_any
                          expression (src/lr1.ml[376,11952+2]..src/lr1.ml[377,11983+58])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/lr1.ml[376,11952+6]..src/lr1.ml[376,11952+7])
                                  Tpat_var "j/1380"
                                expression (src/lr1.ml[376,11952+10]..src/lr1.ml[376,11952+27])
                                  Texp_apply
                                  expression (src/lr1.ml[376,11952+10]..src/lr1.ml[376,11952+20])
                                    Texp_ident "Raw/633.number"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[376,11952+21]..src/lr1.ml[376,11952+27])
                                        Texp_ident "target/1379"
                                  ]
                            ]
                            expression (src/lr1.ml[377,11983+2]..src/lr1.ml[377,11983+58])
                              Texp_apply
                              expression (src/lr1.ml[377,11983+2]..src/lr1.ml[377,11983+58]) ghost
                                Texp_ident "Stdlib!.Array.set"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[377,11983+2]..src/lr1.ml[377,11983+14])
                                    Texp_ident "predecessors/819"
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[377,11983+16]..src/lr1.ml[377,11983+17])
                                    Texp_ident "j/1380"
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[377,11983+22]..src/lr1.ml[377,11983+58])
                                    Texp_construct "::"
                                    [
                                      expression (src/lr1.ml[377,11983+22]..src/lr1.ml[377,11983+38])
                                        Texp_apply
                                        expression (src/lr1.ml[377,11983+22]..src/lr1.ml[377,11983+31])
                                          Texp_ident "transport/701"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[377,11983+32]..src/lr1.ml[377,11983+38])
                                              Texp_ident "source/1377"
                                        ]
                                      expression (src/lr1.ml[377,11983+42]..src/lr1.ml[377,11983+58])
                                        Texp_apply
                                        expression (src/lr1.ml[377,11983+42]..src/lr1.ml[377,11983+58]) ghost
                                          Texp_ident "Stdlib!.Array.get"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[377,11983+42]..src/lr1.ml[377,11983+54])
                                              Texp_ident "predecessors/819"
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[377,11983+56]..src/lr1.ml[377,11983+57])
                                              Texp_ident "j/1380"
                                        ]
                                    ]
                              ]
                      ]
                ]
          ]
    ]
  structure_item (src/lr1.ml[383,12188+0]..src/lr1.ml[389,12337+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[383,12188+4]..src/lr1.ml[383,12188+6])
          Tpat_construct "()"
          []
          None
        expression (src/lr1.ml[384,12197+2]..src/lr1.ml[389,12337+4])
          Texp_letmodule "D/1383"
          module_expr (src/lr1.ml[384,12197+17]..src/lr1.ml[387,12277+5])
            Tmod_structure
            [
              structure_item (src/lr1.ml[385,12221+4]..src/lr1.ml[385,12221+27])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/lr1.ml[385,12221+8]..src/lr1.ml[385,12221+16])
                      Tpat_var "traverse/1381"
                    expression (src/lr1.ml[385,12221+19]..src/lr1.ml[385,12221+27])
                      Texp_ident "traverse/1375"
                ]
              structure_item (src/lr1.ml[386,12249+4]..src/lr1.ml[386,12249+27])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/lr1.ml[386,12249+8]..src/lr1.ml[386,12249+16])
                      Tpat_var "discover/1382"
                    expression (src/lr1.ml[386,12249+19]..src/lr1.ml[386,12249+27])
                      Texp_ident "discover/1092"
                ]
            ]
          expression (src/lr1.ml[388,12286+2]..src/lr1.ml[389,12337+4])
            Texp_letmodule "R/1422"
            module_expr (src/lr1.ml[388,12286+17]..src/lr1.ml[388,12286+47])
              Tmod_apply
              module_expr (src/lr1.ml[388,12286+17]..src/lr1.ml[388,12286+44])
                Tmod_apply
                module_expr (src/lr1.ml[388,12286+17]..src/lr1.ml[388,12286+41])
                  Tmod_apply
                  module_expr (src/lr1.ml[388,12286+17]..src/lr1.ml[388,12286+24])
                    module_expr (src/lr1.ml[388,12286+17]..src/lr1.ml[388,12286+24])
                      Tmod_ident "Dune__exe!.DFS.Run"
                  module_expr (src/lr1.ml[388,12286+25]..src/lr1.ml[388,12286+40])
                    Tmod_ident "RawForwardEdges/1091"
                module_expr (src/lr1.ml[388,12286+42]..src/lr1.ml[388,12286+43])
                  Tmod_ident "M/698"
              module_expr (src/lr1.ml[388,12286+45]..src/lr1.ml[388,12286+46])
                Tmod_ident "D/1383"
            expression (src/lr1.ml[389,12337+2]..src/lr1.ml[389,12337+4])
              Texp_construct "()"
              []
    ]
  structure_item (src/lr1.ml[391,12343+0]..src/lr1.ml[406,12816+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[391,12343+4]..src/lr1.ml[391,12343+6])
          Tpat_construct "()"
          []
          None
        expression (src/lr1.ml[392,12352+2]..src/lr1.ml[406,12816+5])
          Texp_sequence
          expression (src/lr1.ml[392,12352+2]..src/lr1.ml[400,12653+5])
            Texp_ifthenelse
            expression (src/lr1.ml[392,12352+5]..src/lr1.ml[392,12352+25])
              Texp_apply
              expression (src/lr1.ml[392,12352+22]..src/lr1.ml[392,12352+23])
                Texp_ident "Stdlib!.="
              [
                <arg>
                  Nolabel
                  expression (src/lr1.ml[392,12352+5]..src/lr1.ml[392,12352+21])
                    Texp_apply
                    expression (src/lr1.ml[392,12352+5]..src/lr1.ml[392,12352+6])
                      Texp_ident "Stdlib!.!"
                    [
                      <arg>
                        Nolabel
                        expression (src/lr1.ml[392,12352+6]..src/lr1.ml[392,12352+21])
                          Texp_ident "silently_solved/988"
                    ]
                <arg>
                  Nolabel
                  expression (src/lr1.ml[392,12352+24]..src/lr1.ml[392,12352+25])
                    Texp_constant Const_int 1
              ]
            expression (src/lr1.ml[393,12383+4]..src/lr1.ml[395,12484+5])
              Texp_apply
              expression (src/lr1.ml[393,12383+4]..src/lr1.ml[393,12383+14])
                Texp_ident "Dune__exe!.Error.logA"
              [
                <arg>
                  Nolabel
                  expression (src/lr1.ml[393,12383+15]..src/lr1.ml[393,12383+16])
                    Texp_constant Const_int 1
                <arg>
                  Nolabel
                  expression (src/lr1.ml[393,12383+17]..src/lr1.ml[395,12484+5])
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/lr1.ml[393,12383+22]..src/lr1.ml[393,12383+23])
                          Tpat_var "f/1423"
                        expression (src/lr1.ml[394,12410+6]..src/lr1.ml[394,12410+73])
                          Texp_apply
                          expression (src/lr1.ml[394,12410+6]..src/lr1.ml[394,12410+20])
                            Texp_ident "Stdlib!.Printf.fprintf"
                          [
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[394,12410+21]..src/lr1.ml[394,12410+22])
                                Texp_ident "f/1423"
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[394,12410+23]..src/lr1.ml[394,12410+73])
                                Texp_construct "CamlinternalFormatBasics.Format"
                                [
                                  expression (src/lr1.ml[394,12410+23]..src/lr1.ml[394,12410+73]) ghost
                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                    [
                                      expression (src/lr1.ml[394,12410+23]..src/lr1.ml[394,12410+73]) ghost
                                        Texp_constant Const_string("One shift/reduce conflict was silently solved.\n",(src/lr1.ml[394,12410+23]..src/lr1.ml[394,12410+73]) ghost,None)
                                      expression (src/lr1.ml[394,12410+23]..src/lr1.ml[394,12410+73]) ghost
                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                        []
                                    ]
                                  expression (src/lr1.ml[394,12410+23]..src/lr1.ml[394,12410+73]) ghost
                                    Texp_constant Const_string("One shift/reduce conflict was silently solved.\n",(src/lr1.ml[394,12410+23]..src/lr1.ml[394,12410+73]) ghost,None)
                                ]
                          ]
                    ]
              ]
            Some
              expression (src/lr1.ml[396,12490+7]..src/lr1.ml[400,12653+5])
                Texp_ifthenelse
                expression (src/lr1.ml[396,12490+10]..src/lr1.ml[396,12490+30])
                  Texp_apply
                  expression (src/lr1.ml[396,12490+27]..src/lr1.ml[396,12490+28])
                    Texp_ident "Stdlib!.>"
                  [
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[396,12490+10]..src/lr1.ml[396,12490+26])
                        Texp_apply
                        expression (src/lr1.ml[396,12490+10]..src/lr1.ml[396,12490+11])
                          Texp_ident "Stdlib!.!"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[396,12490+11]..src/lr1.ml[396,12490+26])
                              Texp_ident "silently_solved/988"
                        ]
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[396,12490+29]..src/lr1.ml[396,12490+30])
                        Texp_constant Const_int 1
                  ]
                expression (src/lr1.ml[397,12526+4]..src/lr1.ml[400,12653+5])
                  Texp_apply
                  expression (src/lr1.ml[397,12526+4]..src/lr1.ml[397,12526+14])
                    Texp_ident "Dune__exe!.Error.logA"
                  [
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[397,12526+15]..src/lr1.ml[397,12526+16])
                        Texp_constant Const_int 1
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[397,12526+17]..src/lr1.ml[400,12653+5])
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/lr1.ml[397,12526+22]..src/lr1.ml[397,12526+23])
                              Tpat_var "f/1424"
                            expression (src/lr1.ml[398,12553+6]..src/lr1.ml[399,12628+24])
                              Texp_apply
                              expression (src/lr1.ml[398,12553+6]..src/lr1.ml[398,12553+20])
                                Texp_ident "Stdlib!.Printf.fprintf"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[398,12553+21]..src/lr1.ml[398,12553+22])
                                    Texp_ident "f/1424"
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[398,12553+23]..src/lr1.ml[398,12553+74])
                                    Texp_construct "CamlinternalFormatBasics.Format"
                                    [
                                      expression (src/lr1.ml[398,12553+23]..src/lr1.ml[398,12553+74]) ghost
                                        Texp_construct "CamlinternalFormatBasics.Int"
                                        [
                                          expression (src/lr1.ml[398,12553+23]..src/lr1.ml[398,12553+74]) ghost
                                            Texp_construct "CamlinternalFormatBasics.Int_d"
                                            []
                                          expression (src/lr1.ml[398,12553+23]..src/lr1.ml[398,12553+74]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                            []
                                          expression (src/lr1.ml[398,12553+23]..src/lr1.ml[398,12553+74]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_precision"
                                            []
                                          expression (src/lr1.ml[398,12553+23]..src/lr1.ml[398,12553+74]) ghost
                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                            [
                                              expression (src/lr1.ml[398,12553+23]..src/lr1.ml[398,12553+74]) ghost
                                                Texp_constant Const_string(" shift/reduce conflicts were silently solved.\n",(src/lr1.ml[398,12553+23]..src/lr1.ml[398,12553+74]) ghost,None)
                                              expression (src/lr1.ml[398,12553+23]..src/lr1.ml[398,12553+74]) ghost
                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                []
                                            ]
                                        ]
                                      expression (src/lr1.ml[398,12553+23]..src/lr1.ml[398,12553+74]) ghost
                                        Texp_constant Const_string("%d shift/reduce conflicts were silently solved.\n",(src/lr1.ml[398,12553+23]..src/lr1.ml[398,12553+74]) ghost,None)
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[399,12628+8]..src/lr1.ml[399,12628+24])
                                    Texp_apply
                                    expression (src/lr1.ml[399,12628+8]..src/lr1.ml[399,12628+9])
                                      Texp_ident "Stdlib!.!"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[399,12628+9]..src/lr1.ml[399,12628+24])
                                          Texp_ident "silently_solved/988"
                                    ]
                              ]
                        ]
                  ]
                None
          expression (src/lr1.ml[401,12660+2]..src/lr1.ml[406,12816+5])
            Texp_ifthenelse
            expression (src/lr1.ml[401,12660+5]..src/lr1.ml[401,12660+15])
              Texp_apply
              expression (src/lr1.ml[401,12660+8]..src/lr1.ml[401,12660+9])
                Texp_ident "Stdlib!.<"
              [
                <arg>
                  Nolabel
                  expression (src/lr1.ml[401,12660+5]..src/lr1.ml[401,12660+7])
                    Texp_apply
                    expression (src/lr1.ml[401,12660+5]..src/lr1.ml[401,12660+6])
                      Texp_ident "Stdlib!.!"
                    [
                      <arg>
                        Nolabel
                        expression (src/lr1.ml[401,12660+6]..src/lr1.ml[401,12660+7])
                          Texp_ident "n/984"
                    ]
                <arg>
                  Nolabel
                  expression (src/lr1.ml[401,12660+10]..src/lr1.ml[401,12660+15])
                    Texp_ident "Raw/633.n"
              ]
            expression (src/lr1.ml[402,12681+4]..src/lr1.ml[406,12816+5])
              Texp_apply
              expression (src/lr1.ml[402,12681+4]..src/lr1.ml[402,12681+14])
                Texp_ident "Dune__exe!.Error.logA"
              [
                <arg>
                  Nolabel
                  expression (src/lr1.ml[402,12681+15]..src/lr1.ml[402,12681+16])
                    Texp_constant Const_int 1
                <arg>
                  Nolabel
                  expression (src/lr1.ml[402,12681+17]..src/lr1.ml[406,12816+5])
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/lr1.ml[402,12681+22]..src/lr1.ml[402,12681+23])
                          Tpat_var "f/1425"
                        expression (src/lr1.ml[403,12708+6]..src/lr1.ml[405,12805+10])
                          Texp_apply
                          expression (src/lr1.ml[403,12708+6]..src/lr1.ml[403,12708+20])
                            Texp_ident "Stdlib!.Printf.fprintf"
                          [
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[403,12708+21]..src/lr1.ml[403,12708+22])
                                Texp_ident "f/1425"
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[404,12731+8]..src/lr1.ml[404,12731+73])
                                Texp_construct "CamlinternalFormatBasics.Format"
                                [
                                  expression (src/lr1.ml[404,12731+8]..src/lr1.ml[404,12731+73]) ghost
                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                    [
                                      expression (src/lr1.ml[404,12731+8]..src/lr1.ml[404,12731+73]) ghost
                                        Texp_constant Const_string("Only ",(src/lr1.ml[404,12731+8]..src/lr1.ml[404,12731+73]) ghost,None)
                                      expression (src/lr1.ml[404,12731+8]..src/lr1.ml[404,12731+73]) ghost
                                        Texp_construct "CamlinternalFormatBasics.Int"
                                        [
                                          expression (src/lr1.ml[404,12731+8]..src/lr1.ml[404,12731+73]) ghost
                                            Texp_construct "CamlinternalFormatBasics.Int_d"
                                            []
                                          expression (src/lr1.ml[404,12731+8]..src/lr1.ml[404,12731+73]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                            []
                                          expression (src/lr1.ml[404,12731+8]..src/lr1.ml[404,12731+73]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_precision"
                                            []
                                          expression (src/lr1.ml[404,12731+8]..src/lr1.ml[404,12731+73]) ghost
                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                            [
                                              expression (src/lr1.ml[404,12731+8]..src/lr1.ml[404,12731+73]) ghost
                                                Texp_constant Const_string(" states remain after resolving shift/reduce conflicts.\n",(src/lr1.ml[404,12731+8]..src/lr1.ml[404,12731+73]) ghost,None)
                                              expression (src/lr1.ml[404,12731+8]..src/lr1.ml[404,12731+73]) ghost
                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                []
                                            ]
                                        ]
                                    ]
                                  expression (src/lr1.ml[404,12731+8]..src/lr1.ml[404,12731+73]) ghost
                                    Texp_constant Const_string("Only %d states remain after resolving shift/reduce conflicts.\n",(src/lr1.ml[404,12731+8]..src/lr1.ml[404,12731+73]) ghost,None)
                                ]
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[405,12805+8]..src/lr1.ml[405,12805+10])
                                Texp_apply
                                expression (src/lr1.ml[405,12805+8]..src/lr1.ml[405,12805+9])
                                  Texp_ident "Stdlib!.!"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/lr1.ml[405,12805+9]..src/lr1.ml[405,12805+10])
                                      Texp_ident "n/984"
                                ]
                          ]
                    ]
              ]
            None
    ]
  structure_item (src/lr1.ml[408,12823+0]..src/lr1.ml[409,12832+23])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[408,12823+4]..src/lr1.ml[408,12823+6])
          Tpat_construct "()"
          []
          None
        expression (src/lr1.ml[409,12832+2]..src/lr1.ml[409,12832+23])
          Texp_apply
          expression (src/lr1.ml[409,12832+2]..src/lr1.ml[409,12832+21])
            Texp_ident "Dune__exe!.Grammar.diagnostics"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[409,12832+21]..src/lr1.ml[409,12832+23])
                Texp_construct "()"
                []
          ]
    ]
  structure_item (src/lr1.ml[418,13225+0]..src/lr1.ml[419,13233+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[418,13225+4]..src/lr1.ml[418,13225+5])
          Tpat_var "n/1426"
        expression (src/lr1.ml[419,13233+2]..src/lr1.ml[419,13233+4])
          Texp_apply
          expression (src/lr1.ml[419,13233+2]..src/lr1.ml[419,13233+3])
            Texp_ident "Stdlib!.!"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[419,13233+3]..src/lr1.ml[419,13233+4])
                Texp_ident "n/984"
          ]
    ]
  structure_item (src/lr1.ml[421,13239+0]..src/lr1.ml[422,13260+17])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[421,13239+4]..src/lr1.ml[421,13239+18])
          Tpat_var "conflict_nodes/1427"
        expression (src/lr1.ml[422,13260+2]..src/lr1.ml[422,13260+17])
          Texp_apply
          expression (src/lr1.ml[422,13260+2]..src/lr1.ml[422,13260+3])
            Texp_ident "Stdlib!.!"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[422,13260+3]..src/lr1.ml[422,13260+17])
                Texp_ident "conflict_nodes/985"
          ]
    ]
  structure_item (src/lr1.ml[431,13536+0]..src/lr1.ml[442,13862+14])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[431,13536+4]..src/lr1.ml[431,13536+7])
          extra
            Tpat_extra_constraint
            core_type (src/lr1.ml[431,13536+10]..src/lr1.ml[431,13536+21])
              Ttyp_arrow
              Nolabel
              core_type (src/lr1.ml[431,13536+10]..src/lr1.ml[431,13536+14])
                Ttyp_constr "node/642"
                []
              core_type (src/lr1.ml[431,13536+18]..src/lr1.ml[431,13536+21])
                Ttyp_constr "int/1!"
                []
          Tpat_alias "raw/1428"
          pattern (src/lr1.ml[431,13536+4]..src/lr1.ml[431,13536+7])
            Tpat_any
        expression (src/lr1.ml[432,13560+2]..src/lr1.ml[442,13862+14])
          extra
            Texp_constraint
            core_type (src/lr1.ml[431,13536+10]..src/lr1.ml[431,13536+21])
              Ttyp_arrow
              Nolabel
              core_type (src/lr1.ml[431,13536+10]..src/lr1.ml[431,13536+14])
                Ttyp_constr "node/642"
                []
              core_type (src/lr1.ml[431,13536+18]..src/lr1.ml[431,13536+21])
                Ttyp_constr "int/1!"
                []
          Texp_let Nonrec
          [
            <def>
              pattern (src/lr1.ml[432,13560+6]..src/lr1.ml[432,13560+9])
                Tpat_var "raw/1429"
              expression (src/lr1.ml[432,13560+12]..src/lr1.ml[432,13560+29])
                Texp_apply
                expression (src/lr1.ml[432,13560+12]..src/lr1.ml[432,13560+22])
                  Texp_ident "Stdlib!.Array.make"
                [
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[432,13560+23]..src/lr1.ml[432,13560+24])
                      Texp_ident "n/1426"
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[432,13560+25]..src/lr1.ml[432,13560+29])
                      Texp_constant Const_int -1
                ]
          ]
          expression (src/lr1.ml[433,13605+2]..src/lr1.ml[442,13862+14])
            Texp_sequence
            expression (src/lr1.ml[433,13605+2]..src/lr1.ml[439,13799+11])
              Texp_apply
              expression (src/lr1.ml[433,13605+2]..src/lr1.ml[433,13605+13])
                Texp_ident "Stdlib!.Array.iteri"
              [
                <arg>
                  Nolabel
                  expression (src/lr1.ml[433,13605+14]..src/lr1.ml[439,13799+3])
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/lr1.ml[433,13605+19]..src/lr1.ml[433,13605+20])
                          Tpat_var "i/1430"
                        expression (src/lr1.ml[433,13605+37]..src/lr1.ml[438,13791+7]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/lr1.ml[433,13605+38]..src/lr1.ml[433,13605+42])
                                extra
                                  Tpat_extra_constraint
                                  core_type (src/lr1.ml[433,13605+45]..src/lr1.ml[433,13605+49])
                                    Ttyp_constr "node/642"
                                    []
                                Tpat_alias "node/1431"
                                pattern (src/lr1.ml[433,13605+38]..src/lr1.ml[433,13605+42])
                                  Tpat_any
                              expression (src/lr1.ml[434,13659+4]..src/lr1.ml[438,13791+7])
                                Texp_sequence
                                expression (src/lr1.ml[434,13659+4]..src/lr1.ml[434,13659+32])
                                  Texp_assert                                  expression (src/lr1.ml[434,13659+11]..src/lr1.ml[434,13659+32])
                                    Texp_apply
                                    expression (src/lr1.ml[434,13659+19]..src/lr1.ml[434,13659+21])
                                      Texp_ident "Stdlib!.&&"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[434,13659+12]..src/lr1.ml[434,13659+18])
                                          Texp_apply
                                          expression (src/lr1.ml[434,13659+14]..src/lr1.ml[434,13659+16])
                                            Texp_ident "Stdlib!.<="
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[434,13659+12]..src/lr1.ml[434,13659+13])
                                                Texp_constant Const_int 0
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[434,13659+17]..src/lr1.ml[434,13659+18])
                                                Texp_ident "i/1430"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[434,13659+22]..src/lr1.ml[434,13659+31])
                                          Texp_apply
                                          expression (src/lr1.ml[434,13659+24]..src/lr1.ml[434,13659+25])
                                            Texp_ident "Stdlib!.<"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[434,13659+22]..src/lr1.ml[434,13659+23])
                                                Texp_ident "i/1430"
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[434,13659+26]..src/lr1.ml[434,13659+31])
                                                Texp_ident "Raw/633.n"
                                          ]
                                    ]
                                expression (src/lr1.ml[435,13693+4]..src/lr1.ml[438,13791+7])
                                  Texp_ifthenelse
                                  expression (src/lr1.ml[435,13693+7]..src/lr1.ml[435,13693+26])
                                    Texp_apply
                                    expression (src/lr1.ml[435,13693+12]..src/lr1.ml[435,13693+14])
                                      Texp_ident "Stdlib!.<>"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[435,13693+7]..src/lr1.ml[435,13693+11])
                                          Texp_ident "node/1431"
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[435,13693+15]..src/lr1.ml[435,13693+26])
                                          Texp_ident "unreachable/699"
                                    ]
                                  expression (src/lr1.ml[435,13693+32]..src/lr1.ml[438,13791+7])
                                    Texp_sequence
                                    expression (src/lr1.ml[436,13731+6]..src/lr1.ml[436,13731+36])
                                      Texp_assert                                      expression (src/lr1.ml[436,13731+13]..src/lr1.ml[436,13731+36])
                                        Texp_apply
                                        expression (src/lr1.ml[436,13731+24]..src/lr1.ml[436,13731+26])
                                          Texp_ident "Stdlib!.&&"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[436,13731+14]..src/lr1.ml[436,13731+23])
                                              Texp_apply
                                              expression (src/lr1.ml[436,13731+16]..src/lr1.ml[436,13731+18])
                                                Texp_ident "Stdlib!.<="
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr1.ml[436,13731+14]..src/lr1.ml[436,13731+15])
                                                    Texp_constant Const_int 0
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr1.ml[436,13731+19]..src/lr1.ml[436,13731+23])
                                                    Texp_ident "node/1431"
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[436,13731+27]..src/lr1.ml[436,13731+35])
                                              Texp_apply
                                              expression (src/lr1.ml[436,13731+32]..src/lr1.ml[436,13731+33])
                                                Texp_ident "Stdlib!.<"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr1.ml[436,13731+27]..src/lr1.ml[436,13731+31])
                                                    Texp_ident "node/1431"
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr1.ml[436,13731+34]..src/lr1.ml[436,13731+35])
                                                    Texp_ident "n/1426"
                                              ]
                                        ]
                                    expression (src/lr1.ml[437,13769+6]..src/lr1.ml[437,13769+21])
                                      Texp_apply
                                      expression (src/lr1.ml[437,13769+6]..src/lr1.ml[437,13769+21]) ghost
                                        Texp_ident "Stdlib!.Array.set"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/lr1.ml[437,13769+6]..src/lr1.ml[437,13769+9])
                                            Texp_ident "raw/1429"
                                        <arg>
                                          Nolabel
                                          expression (src/lr1.ml[437,13769+11]..src/lr1.ml[437,13769+15])
                                            Texp_ident "node/1431"
                                        <arg>
                                          Nolabel
                                          expression (src/lr1.ml[437,13769+20]..src/lr1.ml[437,13769+21])
                                            Texp_ident "i/1430"
                                      ]
                                  None
                          ]
                    ]
                <arg>
                  Nolabel
                  expression (src/lr1.ml[439,13799+4]..src/lr1.ml[439,13799+11])
                    Texp_ident "_number/700"
              ]
            expression (src/lr1.ml[440,13812+2]..src/lr1.ml[442,13862+14])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/lr1.ml[440,13812+6]..src/lr1.ml[440,13812+10])
                    Tpat_var "node/1432"
                  expression (src/lr1.ml[441,13826+4]..src/lr1.ml[442,13862+14])
                    Texp_sequence
                    expression (src/lr1.ml[441,13826+4]..src/lr1.ml[441,13826+34])
                      Texp_assert                      expression (src/lr1.ml[441,13826+11]..src/lr1.ml[441,13826+34])
                        Texp_apply
                        expression (src/lr1.ml[441,13826+22]..src/lr1.ml[441,13826+24])
                          Texp_ident "Stdlib!.&&"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[441,13826+12]..src/lr1.ml[441,13826+21])
                              Texp_apply
                              expression (src/lr1.ml[441,13826+14]..src/lr1.ml[441,13826+16])
                                Texp_ident "Stdlib!.<="
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[441,13826+12]..src/lr1.ml[441,13826+13])
                                    Texp_constant Const_int 0
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[441,13826+17]..src/lr1.ml[441,13826+21])
                                    Texp_ident "node/1432"
                              ]
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[441,13826+25]..src/lr1.ml[441,13826+33])
                              Texp_apply
                              expression (src/lr1.ml[441,13826+30]..src/lr1.ml[441,13826+31])
                                Texp_ident "Stdlib!.<"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[441,13826+25]..src/lr1.ml[441,13826+29])
                                    Texp_ident "node/1432"
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[441,13826+32]..src/lr1.ml[441,13826+33])
                                    Texp_ident "n/1426"
                              ]
                        ]
                    expression (src/lr1.ml[442,13862+4]..src/lr1.ml[442,13862+14])
                      Texp_apply
                      expression (src/lr1.ml[442,13862+4]..src/lr1.ml[442,13862+14]) ghost
                        Texp_ident "Stdlib!.Array.get"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[442,13862+4]..src/lr1.ml[442,13862+7])
                            Texp_ident "raw/1429"
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[442,13862+9]..src/lr1.ml[442,13862+13])
                            Texp_ident "node/1432"
                      ]
              ]
    ]
  structure_item (src/lr1.ml[448,14050+0]..src/lr1.ml[451,14172+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[448,14050+4]..src/lr1.ml[448,14050+15])
          extra
            Tpat_extra_constraint
            core_type (src/lr1.ml[448,14050+18]..src/lr1.ml[448,14050+40])
              Ttyp_constr "array/8!"
              [
                core_type (src/lr1.ml[448,14050+18]..src/lr1.ml[448,14050+34])
                  Ttyp_constr "Dune__exe!.Grammar.SymbolMap.t"
                  [
                    core_type (src/lr1.ml[448,14050+18]..src/lr1.ml[448,14050+22])
                      Ttyp_constr "node/642"
                      []
                  ]
              ]
          Tpat_alias "transitions/1433"
          pattern (src/lr1.ml[448,14050+4]..src/lr1.ml[448,14050+15])
            Tpat_any
        expression (src/lr1.ml[449,14093+2]..src/lr1.ml[451,14172+3])
          extra
            Texp_constraint
            core_type (src/lr1.ml[448,14050+18]..src/lr1.ml[448,14050+40])
              Ttyp_constr "array/8!"
              [
                core_type (src/lr1.ml[448,14050+18]..src/lr1.ml[448,14050+34])
                  Ttyp_constr "Dune__exe!.Grammar.SymbolMap.t"
                  [
                    core_type (src/lr1.ml[448,14050+18]..src/lr1.ml[448,14050+22])
                      Ttyp_constr "node/642"
                      []
                  ]
              ]
          Texp_apply
          expression (src/lr1.ml[449,14093+2]..src/lr1.ml[449,14093+12])
            Texp_ident "Stdlib!.Array.init"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[449,14093+13]..src/lr1.ml[449,14093+14])
                Texp_ident "n/1426"
            <arg>
              Nolabel
              expression (src/lr1.ml[449,14093+15]..src/lr1.ml[451,14172+3])
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr1.ml[449,14093+20]..src/lr1.ml[449,14093+24])
                      Tpat_var "node/1434"
                    expression (src/lr1.ml[450,14121+4]..src/lr1.ml[450,14121+50])
                      Texp_apply
                      expression (src/lr1.ml[450,14121+4]..src/lr1.ml[450,14121+17])
                        Texp_ident "Dune__exe!.Grammar.SymbolMap.map"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[450,14121+18]..src/lr1.ml[450,14121+27])
                            Texp_ident "transport/701"
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[450,14121+28]..src/lr1.ml[450,14121+50])
                            Texp_apply
                            expression (src/lr1.ml[450,14121+28]..src/lr1.ml[450,14121+50]) ghost
                              Texp_ident "Stdlib!.Array.get"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[450,14121+28]..src/lr1.ml[450,14121+39])
                                  Texp_ident "transitions/769"
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[450,14121+41]..src/lr1.ml[450,14121+49])
                                  Texp_apply
                                  expression (src/lr1.ml[450,14121+41]..src/lr1.ml[450,14121+44])
                                    Texp_ident "raw/1428"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[450,14121+45]..src/lr1.ml[450,14121+49])
                                        Texp_ident "node/1434"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/lr1.ml[459,14325+0]..src/lr1.ml[460,14334+49])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[459,14325+4]..src/lr1.ml[459,14325+6])
          Tpat_construct "()"
          []
          None
        expression (src/lr1.ml[460,14334+2]..src/lr1.ml[460,14334+49])
          Texp_apply
          expression (src/lr1.ml[460,14334+2]..src/lr1.ml[460,14334+11])
            Texp_ident "Dune__exe!.Time.tick"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[460,14334+12]..src/lr1.ml[460,14334+49])
                Texp_constant Const_string("Construction of the LR(1) automaton",(src/lr1.ml[460,14334+13]..src/lr1.ml[460,14334+48]),None)
          ]
    ]
  structure_item (src/lr1.ml[466,14485+0]..src/lr1.ml[467,14503+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[466,14485+4]..src/lr1.ml[466,14485+10])
          Tpat_var "number/1440"
        expression (src/lr1.ml[466,14485+11]..src/lr1.ml[467,14503+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[466,14485+11]..src/lr1.ml[466,14485+15])
                Tpat_var "node/1442"
              expression (src/lr1.ml[467,14503+2]..src/lr1.ml[467,14503+6])
                Texp_ident "node/1442"
          ]
    ]
  structure_item (src/lr1.ml[469,14511+0]..src/lr1.ml[470,14528+35])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[469,14511+4]..src/lr1.ml[469,14511+9])
          Tpat_var "print/1443"
        expression (src/lr1.ml[469,14511+10]..src/lr1.ml[470,14528+35]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[469,14511+10]..src/lr1.ml[469,14511+14])
                Tpat_var "node/1445"
              expression (src/lr1.ml[470,14528+2]..src/lr1.ml[470,14528+35])
                Texp_apply
                expression (src/lr1.ml[470,14528+2]..src/lr1.ml[470,14528+16])
                  Texp_ident "Stdlib!.Printf.sprintf"
                [
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[470,14528+17]..src/lr1.ml[470,14528+21])
                      Texp_construct "CamlinternalFormatBasics.Format"
                      [
                        expression (src/lr1.ml[470,14528+17]..src/lr1.ml[470,14528+21]) ghost
                          Texp_construct "CamlinternalFormatBasics.Int"
                          [
                            expression (src/lr1.ml[470,14528+17]..src/lr1.ml[470,14528+21]) ghost
                              Texp_construct "CamlinternalFormatBasics.Int_d"
                              []
                            expression (src/lr1.ml[470,14528+17]..src/lr1.ml[470,14528+21]) ghost
                              Texp_construct "CamlinternalFormatBasics.No_padding"
                              []
                            expression (src/lr1.ml[470,14528+17]..src/lr1.ml[470,14528+21]) ghost
                              Texp_construct "CamlinternalFormatBasics.No_precision"
                              []
                            expression (src/lr1.ml[470,14528+17]..src/lr1.ml[470,14528+21]) ghost
                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                              []
                          ]
                        expression (src/lr1.ml[470,14528+17]..src/lr1.ml[470,14528+21]) ghost
                          Texp_constant Const_string("%d",(src/lr1.ml[470,14528+17]..src/lr1.ml[470,14528+21]) ghost,None)
                      ]
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[470,14528+22]..src/lr1.ml[470,14528+35])
                      Texp_apply
                      expression (src/lr1.ml[470,14528+23]..src/lr1.ml[470,14528+29])
                        Texp_ident "number/1440"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[470,14528+30]..src/lr1.ml[470,14528+34])
                            Texp_ident "node/1445"
                      ]
                ]
          ]
    ]
  structure_item (src/lr1.ml[472,14565+0]..src/lr1.ml[473,14577+39])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[472,14565+4]..src/lr1.ml[472,14565+9])
          Tpat_var "entry/1446"
        expression (src/lr1.ml[473,14577+2]..src/lr1.ml[473,14577+39])
          Texp_apply
          expression (src/lr1.ml[473,14577+2]..src/lr1.ml[473,14577+19])
            Texp_ident "Dune__exe!.Grammar.ProductionMap.map"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[473,14577+20]..src/lr1.ml[473,14577+29])
                Texp_ident "transport/701"
            <arg>
              Nolabel
              expression (src/lr1.ml[473,14577+30]..src/lr1.ml[473,14577+39])
                Texp_ident "Raw/633.entry"
          ]
    ]
  structure_item (src/lr1.ml[475,14618+0]..src/lr1.ml[476,14635+33])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[475,14618+4]..src/lr1.ml[475,14618+9])
          Tpat_var "state/1447"
        expression (src/lr1.ml[475,14618+10]..src/lr1.ml[476,14635+33]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[475,14618+10]..src/lr1.ml[475,14618+14])
                Tpat_var "node/1449"
              expression (src/lr1.ml[476,14635+2]..src/lr1.ml[476,14635+33])
                Texp_apply
                expression (src/lr1.ml[476,14635+2]..src/lr1.ml[476,14635+11])
                  Texp_ident "Raw/633.state"
                [
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[476,14635+12]..src/lr1.ml[476,14635+33])
                      Texp_apply
                      expression (src/lr1.ml[476,14635+13]..src/lr1.ml[476,14635+21])
                        Texp_ident "Raw/633.node"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[476,14635+22]..src/lr1.ml[476,14635+32])
                            Texp_apply
                            expression (src/lr1.ml[476,14635+23]..src/lr1.ml[476,14635+26])
                              Texp_ident "raw/1428"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[476,14635+27]..src/lr1.ml[476,14635+31])
                                  Texp_ident "node/1449"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/lr1.ml[478,14670+0]..src/lr1.ml[480,14727+20])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[478,14670+4]..src/lr1.ml[478,14670+15])
          Tpat_var "transitions/1450"
        expression (src/lr1.ml[478,14670+16]..src/lr1.ml[480,14727+20]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[478,14670+16]..src/lr1.ml[478,14670+20])
                Tpat_var "node/1451"
              expression (src/lr1.ml[479,14693+2]..src/lr1.ml[480,14727+20])
                Texp_sequence
                expression (src/lr1.ml[479,14693+2]..src/lr1.ml[479,14693+32])
                  Texp_assert                  expression (src/lr1.ml[479,14693+9]..src/lr1.ml[479,14693+32])
                    Texp_apply
                    expression (src/lr1.ml[479,14693+20]..src/lr1.ml[479,14693+22])
                      Texp_ident "Stdlib!.&&"
                    [
                      <arg>
                        Nolabel
                        expression (src/lr1.ml[479,14693+10]..src/lr1.ml[479,14693+19])
                          Texp_apply
                          expression (src/lr1.ml[479,14693+12]..src/lr1.ml[479,14693+14])
                            Texp_ident "Stdlib!.<="
                          [
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[479,14693+10]..src/lr1.ml[479,14693+11])
                                Texp_constant Const_int 0
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[479,14693+15]..src/lr1.ml[479,14693+19])
                                Texp_ident "node/1451"
                          ]
                      <arg>
                        Nolabel
                        expression (src/lr1.ml[479,14693+23]..src/lr1.ml[479,14693+31])
                          Texp_apply
                          expression (src/lr1.ml[479,14693+28]..src/lr1.ml[479,14693+29])
                            Texp_ident "Stdlib!.<"
                          [
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[479,14693+23]..src/lr1.ml[479,14693+27])
                                Texp_ident "node/1451"
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[479,14693+30]..src/lr1.ml[479,14693+31])
                                Texp_ident "n/1426"
                          ]
                    ]
                expression (src/lr1.ml[480,14727+2]..src/lr1.ml[480,14727+20])
                  Texp_apply
                  expression (src/lr1.ml[480,14727+2]..src/lr1.ml[480,14727+20]) ghost
                    Texp_ident "Stdlib!.Array.get"
                  [
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[480,14727+2]..src/lr1.ml[480,14727+13])
                        Texp_ident "transitions/1433"
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[480,14727+15]..src/lr1.ml[480,14727+19])
                        Texp_ident "node/1451"
                  ]
          ]
    ]
  structure_item (src/lr1.ml[482,14749+0]..src/lr1.ml[483,14781+32])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[482,14749+4]..src/lr1.ml[482,14749+18])
          Tpat_var "set_reductions/1452"
        expression (src/lr1.ml[482,14749+19]..src/lr1.ml[483,14781+32]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[482,14749+19]..src/lr1.ml[482,14749+23])
                Tpat_var "node/1454"
              expression (src/lr1.ml[482,14749+24]..src/lr1.ml[483,14781+32]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr1.ml[482,14749+24]..src/lr1.ml[482,14749+29])
                      Tpat_var "table/1455"
                    expression (src/lr1.ml[483,14781+2]..src/lr1.ml[483,14781+32])
                      Texp_apply
                      expression (src/lr1.ml[483,14781+2]..src/lr1.ml[483,14781+32]) ghost
                        Texp_ident "Stdlib!.Array.set"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[483,14781+2]..src/lr1.ml[483,14781+12])
                            Texp_ident "reductions/858"
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[483,14781+14]..src/lr1.ml[483,14781+22])
                            Texp_apply
                            expression (src/lr1.ml[483,14781+14]..src/lr1.ml[483,14781+17])
                              Texp_ident "raw/1428"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[483,14781+18]..src/lr1.ml[483,14781+22])
                                  Texp_ident "node/1454"
                            ]
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[483,14781+27]..src/lr1.ml[483,14781+32])
                            Texp_ident "table/1455"
                      ]
                ]
          ]
    ]
  structure_item (src/lr1.ml[485,14815+0]..src/lr1.ml[486,14837+23])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[485,14815+4]..src/lr1.ml[485,14815+14])
          Tpat_var "reductions/1456"
        expression (src/lr1.ml[485,14815+15]..src/lr1.ml[486,14837+23]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[485,14815+15]..src/lr1.ml[485,14815+19])
                Tpat_var "node/1457"
              expression (src/lr1.ml[486,14837+2]..src/lr1.ml[486,14837+23])
                Texp_apply
                expression (src/lr1.ml[486,14837+2]..src/lr1.ml[486,14837+23]) ghost
                  Texp_ident "Stdlib!.Array.get"
                [
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[486,14837+2]..src/lr1.ml[486,14837+12])
                      Texp_ident "reductions/858"
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[486,14837+14]..src/lr1.ml[486,14837+22])
                      Texp_apply
                      expression (src/lr1.ml[486,14837+14]..src/lr1.ml[486,14837+17])
                        Texp_ident "raw/1428"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[486,14837+18]..src/lr1.ml[486,14837+22])
                            Texp_ident "node/1457"
                      ]
                ]
          ]
    ]
  structure_item (src/lr1.ml[488,14862+0]..src/lr1.ml[489,14886+25])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[488,14862+4]..src/lr1.ml[488,14862+16])
          Tpat_var "predecessors/1458"
        expression (src/lr1.ml[488,14862+17]..src/lr1.ml[489,14886+25]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[488,14862+17]..src/lr1.ml[488,14862+21])
                Tpat_var "node/1459"
              expression (src/lr1.ml[489,14886+2]..src/lr1.ml[489,14886+25])
                Texp_apply
                expression (src/lr1.ml[489,14886+2]..src/lr1.ml[489,14886+25]) ghost
                  Texp_ident "Stdlib!.Array.get"
                [
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[489,14886+2]..src/lr1.ml[489,14886+14])
                      Texp_ident "predecessors/819"
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[489,14886+16]..src/lr1.ml[489,14886+24])
                      Texp_apply
                      expression (src/lr1.ml[489,14886+16]..src/lr1.ml[489,14886+19])
                        Texp_ident "raw/1428"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[489,14886+20]..src/lr1.ml[489,14886+24])
                            Texp_ident "node/1459"
                      ]
                ]
          ]
    ]
  structure_item (src/lr1.ml[491,14913+0]..src/lr1.ml[492,14940+29])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[491,14913+4]..src/lr1.ml[491,14913+19])
          Tpat_var "conflict_tokens/1460"
        expression (src/lr1.ml[491,14913+20]..src/lr1.ml[492,14940+29]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[491,14913+20]..src/lr1.ml[491,14913+24])
                Tpat_var "node/1462"
              expression (src/lr1.ml[492,14940+2]..src/lr1.ml[492,14940+29])
                Texp_apply
                expression (src/lr1.ml[492,14940+2]..src/lr1.ml[492,14940+29]) ghost
                  Texp_ident "Stdlib!.Array.get"
                [
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[492,14940+2]..src/lr1.ml[492,14940+18])
                      Texp_ident "_conflict_tokens/947"
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[492,14940+20]..src/lr1.ml[492,14940+28])
                      Texp_apply
                      expression (src/lr1.ml[492,14940+20]..src/lr1.ml[492,14940+23])
                        Texp_ident "raw/1428"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[492,14940+24]..src/lr1.ml[492,14940+28])
                            Texp_ident "node/1462"
                      ]
                ]
          ]
    ]
  structure_item (src/lr1.ml[494,14971+0]..src/lr1.ml[497,15048+18])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[494,14971+4]..src/lr1.ml[494,14971+13])
          Tpat_var "conflicts/1463"
        expression (src/lr1.ml[494,14971+14]..src/lr1.ml[497,15048+18]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[494,14971+14]..src/lr1.ml[494,14971+15])
                Tpat_var "f/1465"
              expression (src/lr1.ml[495,14989+2]..src/lr1.ml[497,15048+18])
                Texp_apply
                expression (src/lr1.ml[495,14989+2]..src/lr1.ml[495,14989+11])
                  Texp_ident "Stdlib!.List.iter"
                [
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[495,14989+12]..src/lr1.ml[497,15048+3])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/lr1.ml[495,14989+17]..src/lr1.ml[495,14989+21])
                            Tpat_var "node/1466"
                          expression (src/lr1.ml[496,15014+4]..src/lr1.ml[496,15014+33])
                            Texp_apply
                            expression (src/lr1.ml[496,15014+4]..src/lr1.ml[496,15014+5])
                              Texp_ident "f/1465"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[496,15014+6]..src/lr1.ml[496,15014+28])
                                  Texp_apply
                                  expression (src/lr1.ml[496,15014+7]..src/lr1.ml[496,15014+22])
                                    Texp_ident "conflict_tokens/1460"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[496,15014+23]..src/lr1.ml[496,15014+27])
                                        Texp_ident "node/1466"
                                  ]
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[496,15014+29]..src/lr1.ml[496,15014+33])
                                  Texp_ident "node/1466"
                            ]
                      ]
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[497,15048+4]..src/lr1.ml[497,15048+18])
                      Texp_ident "conflict_nodes/1427"
                ]
          ]
    ]
  structure_item (src/lr1.ml[499,15068+0]..src/lr1.ml[500,15104+37])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[499,15068+4]..src/lr1.ml[499,15068+28])
          Tpat_var "forbid_default_reduction/1467"
        expression (src/lr1.ml[499,15068+29]..src/lr1.ml[500,15104+37]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[499,15068+29]..src/lr1.ml[499,15068+33])
                Tpat_var "node/1468"
              expression (src/lr1.ml[500,15104+2]..src/lr1.ml[500,15104+37])
                Texp_apply
                expression (src/lr1.ml[500,15104+2]..src/lr1.ml[500,15104+37]) ghost
                  Texp_ident "Stdlib!.Array.get"
                [
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[500,15104+2]..src/lr1.ml[500,15104+26])
                      Texp_ident "forbid_default_reduction/983"
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[500,15104+28]..src/lr1.ml[500,15104+36])
                      Texp_apply
                      expression (src/lr1.ml[500,15104+28]..src/lr1.ml[500,15104+31])
                        Texp_ident "raw/1428"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[500,15104+32]..src/lr1.ml[500,15104+36])
                            Texp_ident "node/1468"
                      ]
                ]
          ]
    ]
  structure_item (src/lr1.ml[502,15143+0]..src/lr1.ml[503,15171+30])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[502,15143+4]..src/lr1.ml[502,15143+20])
          Tpat_var "has_eos_conflict/1469"
        expression (src/lr1.ml[502,15143+21]..src/lr1.ml[503,15171+30]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[502,15143+21]..src/lr1.ml[502,15143+25])
                Tpat_var "node/1471"
              expression (src/lr1.ml[503,15171+2]..src/lr1.ml[503,15171+30])
                Texp_apply
                expression (src/lr1.ml[503,15171+2]..src/lr1.ml[503,15171+30]) ghost
                  Texp_ident "Stdlib!.Array.get"
                [
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[503,15171+2]..src/lr1.ml[503,15171+19])
                      Texp_ident "_has_eos_conflict/982"
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[503,15171+21]..src/lr1.ml[503,15171+29])
                      Texp_apply
                      expression (src/lr1.ml[503,15171+21]..src/lr1.ml[503,15171+24])
                        Texp_ident "raw/1428"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[503,15171+25]..src/lr1.ml[503,15171+29])
                            Texp_ident "node/1471"
                      ]
                ]
          ]
    ]
  structure_item (src/lr1.ml[510,15436+0]..src/lr1.ml[511,15463+45])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[510,15436+4]..src/lr1.ml[510,15436+19])
          Tpat_var "incoming_symbol/1472"
        expression (src/lr1.ml[510,15436+20]..src/lr1.ml[511,15463+45]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[510,15436+20]..src/lr1.ml[510,15436+24])
                Tpat_var "node/1474"
              expression (src/lr1.ml[511,15463+2]..src/lr1.ml[511,15463+45])
                Texp_apply
                expression (src/lr1.ml[511,15463+2]..src/lr1.ml[511,15463+21])
                  Texp_ident "Dune__exe!.Lr0.incoming_symbol"
                [
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[511,15463+22]..src/lr1.ml[511,15463+45])
                      Texp_apply
                      expression (src/lr1.ml[511,15463+23]..src/lr1.ml[511,15463+31])
                        Texp_ident "Dune__exe!.Lr0.core"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[511,15463+32]..src/lr1.ml[511,15463+44])
                            Texp_apply
                            expression (src/lr1.ml[511,15463+33]..src/lr1.ml[511,15463+38])
                              Texp_ident "state/1447"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[511,15463+39]..src/lr1.ml[511,15463+43])
                                  Texp_ident "node/1474"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/lr1.ml[513,15510+0]..src/lr1.ml[518,15601+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[513,15510+4]..src/lr1.ml[513,15510+12])
          Tpat_var "is_start/1475"
        expression (src/lr1.ml[513,15510+13]..src/lr1.ml[518,15601+11]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[513,15510+13]..src/lr1.ml[513,15510+17])
                Tpat_var "node/1477"
              expression (src/lr1.ml[514,15530+2]..src/lr1.ml[518,15601+11])
                Texp_match
                expression (src/lr1.ml[514,15530+8]..src/lr1.ml[514,15530+28])
                  Texp_apply
                  expression (src/lr1.ml[514,15530+8]..src/lr1.ml[514,15530+23])
                    Texp_ident "incoming_symbol/1472"
                  [
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[514,15530+24]..src/lr1.ml[514,15530+28])
                        Texp_ident "node/1477"
                  ]
                [
                  <case>
                    pattern (src/lr1.ml[515,15564+4]..src/lr1.ml[515,15564+8])
                      Tpat_value
                      pattern (src/lr1.ml[515,15564+4]..src/lr1.ml[515,15564+8])
                        Tpat_construct "None"
                        []
                        None
                    expression (src/lr1.ml[516,15576+6]..src/lr1.ml[516,15576+10])
                      Texp_construct "true"
                      []
                  <case>
                    pattern (src/lr1.ml[517,15587+4]..src/lr1.ml[517,15587+10])
                      Tpat_value
                      pattern (src/lr1.ml[517,15587+4]..src/lr1.ml[517,15587+10])
                        Tpat_construct "Some"
                        [
                          pattern (src/lr1.ml[517,15587+9]..src/lr1.ml[517,15587+10])
                            Tpat_any
                        ]
                        None
                    expression (src/lr1.ml[518,15601+6]..src/lr1.ml[518,15601+11])
                      Texp_construct "false"
                      []
                ]
          ]
    ]
  structure_item (src/lr1.ml[524,15716+0]..src/lr1.ml[529,15872+3])
    Tstr_module
    ForwardEdges/1484
      module_expr (src/lr1.ml[524,15716+22]..src/lr1.ml[529,15872+3])
        Tmod_structure
        [
          structure_item (src/lr1.ml[525,15745+2]..src/lr1.ml[525,15745+25])
            Tstr_type Nonrec
            [
              type_declaration node/1478 (src/lr1.ml[525,15745+2]..src/lr1.ml[525,15745+25])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/lr1.ml[525,15745+21]..src/lr1.ml[525,15745+25])
                      Ttyp_constr "node/642"
                      []
            ]
          structure_item (src/lr1.ml[526,15771+2]..src/lr1.ml[526,15771+23])
            Tstr_type Rec
            [
              type_declaration label/1479 (src/lr1.ml[526,15771+2]..src/lr1.ml[526,15771+23])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/lr1.ml[526,15771+15]..src/lr1.ml[526,15771+23])
                      Ttyp_constr "Dune__exe!.Grammar.Symbol.t"
                      []
            ]
          structure_item (src/lr1.ml[527,15795+2]..src/lr1.ml[528,15832+39])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/lr1.ml[527,15795+6]..src/lr1.ml[527,15795+27])
                  Tpat_var "foreach_outgoing_edge/1480"
                expression (src/lr1.ml[527,15795+28]..src/lr1.ml[528,15832+39]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/lr1.ml[527,15795+28]..src/lr1.ml[527,15795+32])
                        Tpat_var "node/1482"
                      expression (src/lr1.ml[527,15795+33]..src/lr1.ml[528,15832+39]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/lr1.ml[527,15795+33]..src/lr1.ml[527,15795+34])
                              Tpat_var "f/1483"
                            expression (src/lr1.ml[528,15832+4]..src/lr1.ml[528,15832+39])
                              Texp_apply
                              expression (src/lr1.ml[528,15832+4]..src/lr1.ml[528,15832+18])
                                Texp_ident "Dune__exe!.Grammar.SymbolMap.iter"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[528,15832+19]..src/lr1.ml[528,15832+20])
                                    Texp_ident "f/1483"
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[528,15832+21]..src/lr1.ml[528,15832+39])
                                    Texp_apply
                                    expression (src/lr1.ml[528,15832+22]..src/lr1.ml[528,15832+33])
                                      Texp_ident "transitions/1450"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[528,15832+34]..src/lr1.ml[528,15832+38])
                                          Texp_ident "node/1482"
                                    ]
                              ]
                        ]
                  ]
            ]
        ]
  structure_item (src/lr1.ml[531,15877+0]..src/lr1.ml[536,16102+3])
    Tstr_module
    BackwardEdges/1492
      module_expr (src/lr1.ml[531,15877+23]..src/lr1.ml[536,16102+3])
        Tmod_structure
        [
          structure_item (src/lr1.ml[532,15907+2]..src/lr1.ml[532,15907+25])
            Tstr_type Nonrec
            [
              type_declaration node/1485 (src/lr1.ml[532,15907+2]..src/lr1.ml[532,15907+25])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/lr1.ml[532,15907+21]..src/lr1.ml[532,15907+25])
                      Ttyp_constr "node/642"
                      []
            ]
          structure_item (src/lr1.ml[533,15933+2]..src/lr1.ml[533,15933+19])
            Tstr_type Rec
            [
              type_declaration label/1486 (src/lr1.ml[533,15933+2]..src/lr1.ml[533,15933+19])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/lr1.ml[533,15933+15]..src/lr1.ml[533,15933+19])
                      Ttyp_constr "unit/6!"
                      []
            ]
          structure_item (src/lr1.ml[534,16007+2]..src/lr1.ml[535,16044+57])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/lr1.ml[534,16007+6]..src/lr1.ml[534,16007+27])
                  Tpat_var "foreach_outgoing_edge/1487"
                expression (src/lr1.ml[534,16007+28]..src/lr1.ml[535,16044+57]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/lr1.ml[534,16007+28]..src/lr1.ml[534,16007+32])
                        Tpat_var "node/1489"
                      expression (src/lr1.ml[534,16007+33]..src/lr1.ml[535,16044+57]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/lr1.ml[534,16007+33]..src/lr1.ml[534,16007+34])
                              Tpat_var "f/1490"
                            expression (src/lr1.ml[535,16044+4]..src/lr1.ml[535,16044+57])
                              Texp_apply
                              expression (src/lr1.ml[535,16044+4]..src/lr1.ml[535,16044+13])
                                Texp_ident "Stdlib!.List.iter"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[535,16044+14]..src/lr1.ml[535,16044+37])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/lr1.ml[535,16044+19]..src/lr1.ml[535,16044+23])
                                          Tpat_var "node/1491"
                                        expression (src/lr1.ml[535,16044+27]..src/lr1.ml[535,16044+36])
                                          Texp_apply
                                          expression (src/lr1.ml[535,16044+27]..src/lr1.ml[535,16044+28])
                                            Texp_ident "f/1490"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[535,16044+29]..src/lr1.ml[535,16044+31])
                                                Texp_construct "()"
                                                []
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[535,16044+32]..src/lr1.ml[535,16044+36])
                                                Texp_ident "node/1491"
                                          ]
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[535,16044+38]..src/lr1.ml[535,16044+57])
                                    Texp_apply
                                    expression (src/lr1.ml[535,16044+39]..src/lr1.ml[535,16044+51])
                                      Texp_ident "predecessors/1458"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[535,16044+52]..src/lr1.ml[535,16044+56])
                                          Texp_ident "node/1489"
                                    ]
                              ]
                        ]
                  ]
            ]
        ]
  structure_item (src/lr1.ml[547,16500+0]..src/lr1.ml[554,16737+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[547,16500+4]..src/lr1.ml[547,16500+20])
          Tpat_var "is_start_or_exit/1493"
        expression (src/lr1.ml[547,16500+21]..src/lr1.ml[554,16737+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[547,16500+21]..src/lr1.ml[547,16500+25])
                Tpat_var "node/1495"
              expression (src/lr1.ml[548,16528+2]..src/lr1.ml[554,16737+8])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/lr1.ml[548,16528+6]..src/lr1.ml[548,16528+11])
                      Tpat_var "items/1496"
                    expression (src/lr1.ml[548,16528+14]..src/lr1.ml[548,16528+47])
                      Texp_apply
                      expression (src/lr1.ml[548,16528+14]..src/lr1.ml[548,16528+23])
                        Texp_ident "Dune__exe!.Lr0.items"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[548,16528+24]..src/lr1.ml[548,16528+47])
                            Texp_apply
                            expression (src/lr1.ml[548,16528+25]..src/lr1.ml[548,16528+33])
                              Texp_ident "Dune__exe!.Lr0.core"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[548,16528+34]..src/lr1.ml[548,16528+46])
                                  Texp_apply
                                  expression (src/lr1.ml[548,16528+35]..src/lr1.ml[548,16528+40])
                                    Texp_ident "state/1447"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[548,16528+41]..src/lr1.ml[548,16528+45])
                                        Texp_ident "node/1495"
                                  ]
                            ]
                      ]
                ]
                expression (src/lr1.ml[549,16579+2]..src/lr1.ml[554,16737+8])
                  Texp_ifthenelse
                  expression (src/lr1.ml[549,16579+5]..src/lr1.ml[549,16579+32])
                    Texp_apply
                    expression (src/lr1.ml[549,16579+29]..src/lr1.ml[549,16579+30])
                      Texp_ident "Stdlib!.="
                    [
                      <arg>
                        Nolabel
                        expression (src/lr1.ml[549,16579+5]..src/lr1.ml[549,16579+28])
                          Texp_apply
                          expression (src/lr1.ml[549,16579+5]..src/lr1.ml[549,16579+22])
                            Texp_ident "Dune__exe!.Item.Set.cardinal"
                          [
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[549,16579+23]..src/lr1.ml[549,16579+28])
                                Texp_ident "items/1496"
                          ]
                      <arg>
                        Nolabel
                        expression (src/lr1.ml[549,16579+31]..src/lr1.ml[549,16579+32])
                          Texp_constant Const_int 1
                    ]
                  expression (src/lr1.ml[550,16617+4]..src/lr1.ml[552,16701+28])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/lr1.ml[550,16617+8]..src/lr1.ml[550,16617+12])
                          Tpat_var "item/1566"
                        expression (src/lr1.ml[550,16617+15]..src/lr1.ml[550,16617+36])
                          Texp_apply
                          expression (src/lr1.ml[550,16617+15]..src/lr1.ml[550,16617+30])
                            Texp_ident "Dune__exe!.Item.Set.choose"
                          [
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[550,16617+31]..src/lr1.ml[550,16617+36])
                                Texp_ident "items/1496"
                          ]
                    ]
                    expression (src/lr1.ml[551,16657+4]..src/lr1.ml[552,16701+28])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/lr1.ml[551,16657+8]..src/lr1.ml[551,16657+24])
                            Tpat_tuple
                            [
                              pattern (src/lr1.ml[551,16657+8]..src/lr1.ml[551,16657+12])
                                Tpat_var "prod/1567"
                              pattern (src/lr1.ml[551,16657+14]..src/lr1.ml[551,16657+15])
                                Tpat_any
                              pattern (src/lr1.ml[551,16657+17]..src/lr1.ml[551,16657+18])
                                Tpat_any
                              pattern (src/lr1.ml[551,16657+20]..src/lr1.ml[551,16657+21])
                                Tpat_any
                              pattern (src/lr1.ml[551,16657+23]..src/lr1.ml[551,16657+24])
                                Tpat_any
                            ]
                          expression (src/lr1.ml[551,16657+27]..src/lr1.ml[551,16657+40])
                            Texp_apply
                            expression (src/lr1.ml[551,16657+27]..src/lr1.ml[551,16657+35])
                              Texp_ident "Dune__exe!.Item.def"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[551,16657+36]..src/lr1.ml[551,16657+40])
                                  Texp_ident "item/1566"
                            ]
                      ]
                      expression (src/lr1.ml[552,16701+4]..src/lr1.ml[552,16701+28])
                        Texp_apply
                        expression (src/lr1.ml[552,16701+4]..src/lr1.ml[552,16701+23])
                          Texp_ident "Dune__exe!.Grammar.Production.classify"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[552,16701+24]..src/lr1.ml[552,16701+28])
                              Texp_ident "prod/1567"
                        ]
                  Some
                    expression (src/lr1.ml[554,16737+4]..src/lr1.ml[554,16737+8])
                      Texp_construct "None"
                      []
          ]
    ]
  structure_item (src/lr1.ml[560,16862+0]..src/lr1.ml[565,16965+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[560,16862+4]..src/lr1.ml[560,16862+8])
          Tpat_var "fold/1568"
        expression (src/lr1.ml[560,16862+9]..src/lr1.ml[565,16965+7]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[560,16862+9]..src/lr1.ml[560,16862+10])
                Tpat_var "f/1570"
              expression (src/lr1.ml[560,16862+11]..src/lr1.ml[565,16965+7]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr1.ml[560,16862+11]..src/lr1.ml[560,16862+15])
                      Tpat_var "accu/1571"
                    expression (src/lr1.ml[561,16880+2]..src/lr1.ml[565,16965+7])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/lr1.ml[561,16880+6]..src/lr1.ml[561,16880+10])
                            Tpat_var "accu/1572"
                          expression (src/lr1.ml[561,16880+13]..src/lr1.ml[561,16880+21])
                            Texp_apply
                            expression (src/lr1.ml[561,16880+13]..src/lr1.ml[561,16880+16])
                              Texp_ident "Stdlib!.ref"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[561,16880+17]..src/lr1.ml[561,16880+21])
                                  Texp_ident "accu/1571"
                            ]
                      ]
                      expression (src/lr1.ml[562,16905+2]..src/lr1.ml[565,16965+7])
                        Texp_sequence
                        expression (src/lr1.ml[562,16905+2]..src/lr1.ml[564,16957+6])
                          Texp_for "node/1573" Up
                          expression (src/lr1.ml[562,16905+13]..src/lr1.ml[562,16905+14])
                            Texp_constant Const_int 0
                          expression (src/lr1.ml[562,16905+18]..src/lr1.ml[562,16905+23])
                            Texp_apply
                            expression (src/lr1.ml[562,16905+20]..src/lr1.ml[562,16905+21])
                              Texp_ident "Stdlib!.-"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[562,16905+18]..src/lr1.ml[562,16905+19])
                                  Texp_ident "n/1426"
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[562,16905+22]..src/lr1.ml[562,16905+23])
                                  Texp_constant Const_int 1
                            ]
                          expression (src/lr1.ml[563,16932+4]..src/lr1.ml[563,16932+24])
                            Texp_apply
                            expression (src/lr1.ml[563,16932+9]..src/lr1.ml[563,16932+11])
                              Texp_ident "Stdlib!.:="
                            [
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[563,16932+4]..src/lr1.ml[563,16932+8])
                                  Texp_ident "accu/1572"
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[563,16932+12]..src/lr1.ml[563,16932+24])
                                  Texp_apply
                                  expression (src/lr1.ml[563,16932+12]..src/lr1.ml[563,16932+13])
                                    Texp_ident "f/1570"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[563,16932+14]..src/lr1.ml[563,16932+19])
                                        Texp_apply
                                        expression (src/lr1.ml[563,16932+14]..src/lr1.ml[563,16932+15])
                                          Texp_ident "Stdlib!.!"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[563,16932+15]..src/lr1.ml[563,16932+19])
                                              Texp_ident "accu/1572"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[563,16932+20]..src/lr1.ml[563,16932+24])
                                        Texp_ident "node/1573"
                                  ]
                            ]
                        expression (src/lr1.ml[565,16965+2]..src/lr1.ml[565,16965+7])
                          Texp_apply
                          expression (src/lr1.ml[565,16965+2]..src/lr1.ml[565,16965+3])
                            Texp_ident "Stdlib!.!"
                          [
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[565,16965+3]..src/lr1.ml[565,16965+7])
                                Texp_ident "accu/1572"
                          ]
                ]
          ]
    ]
  structure_item (src/lr1.ml[567,16974+0]..src/lr1.ml[570,17025+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[567,16974+4]..src/lr1.ml[567,16974+8])
          Tpat_var "iter/1574"
        expression (src/lr1.ml[567,16974+9]..src/lr1.ml[570,17025+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[567,16974+9]..src/lr1.ml[567,16974+10])
                Tpat_var "f/1576"
              expression (src/lr1.ml[568,16987+2]..src/lr1.ml[570,17025+6])
                Texp_for "node/1577" Up
                expression (src/lr1.ml[568,16987+13]..src/lr1.ml[568,16987+14])
                  Texp_constant Const_int 0
                expression (src/lr1.ml[568,16987+18]..src/lr1.ml[568,16987+23])
                  Texp_apply
                  expression (src/lr1.ml[568,16987+20]..src/lr1.ml[568,16987+21])
                    Texp_ident "Stdlib!.-"
                  [
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[568,16987+18]..src/lr1.ml[568,16987+19])
                        Texp_ident "n/1426"
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[568,16987+22]..src/lr1.ml[568,16987+23])
                        Texp_constant Const_int 1
                  ]
                expression (src/lr1.ml[569,17014+4]..src/lr1.ml[569,17014+10])
                  Texp_apply
                  expression (src/lr1.ml[569,17014+4]..src/lr1.ml[569,17014+5])
                    Texp_ident "f/1576"
                  [
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[569,17014+6]..src/lr1.ml[569,17014+10])
                        Texp_ident "node/1577"
                  ]
          ]
    ]
  structure_item (src/lr1.ml[572,17033+0]..src/lr1.ml[577,17115+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[572,17033+4]..src/lr1.ml[572,17033+7])
          Tpat_var "map/1578"
        expression (src/lr1.ml[572,17033+8]..src/lr1.ml[577,17115+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[572,17033+8]..src/lr1.ml[572,17033+9])
                Tpat_var "f/1580"
              expression (src/lr1.ml[573,17045+2]..src/lr1.ml[577,17115+3])
                Texp_apply
                expression (src/lr1.ml[573,17045+2]..src/lr1.ml[573,17045+10])
                  Texp_ident "Stdlib!.List.rev"
                [
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[573,17045+11]..src/lr1.ml[577,17115+3])
                      Texp_apply
                      expression (src/lr1.ml[574,17058+4]..src/lr1.ml[574,17058+8])
                        Texp_ident "fold/1568"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[574,17058+9]..src/lr1.ml[576,17106+5])
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/lr1.ml[574,17058+14]..src/lr1.ml[574,17058+18])
                                  Tpat_var "accu/1581"
                                expression (src/lr1.ml[574,17058+19]..src/lr1.ml[575,17085+20]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/lr1.ml[574,17058+19]..src/lr1.ml[574,17058+23])
                                        Tpat_var "node/1582"
                                      expression (src/lr1.ml[575,17085+6]..src/lr1.ml[575,17085+20])
                                        Texp_construct "::"
                                        [
                                          expression (src/lr1.ml[575,17085+6]..src/lr1.ml[575,17085+12])
                                            Texp_apply
                                            expression (src/lr1.ml[575,17085+6]..src/lr1.ml[575,17085+7])
                                              Texp_ident "f/1580"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/lr1.ml[575,17085+8]..src/lr1.ml[575,17085+12])
                                                  Texp_ident "node/1582"
                                            ]
                                          expression (src/lr1.ml[575,17085+16]..src/lr1.ml[575,17085+20])
                                            Texp_ident "accu/1581"
                                        ]
                                  ]
                            ]
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[576,17106+6]..src/lr1.ml[576,17106+8])
                            Texp_construct "[]"
                            []
                      ]
                ]
          ]
    ]
  structure_item (src/lr1.ml[579,17120+0]..src/lr1.ml[584,17242+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[579,17120+4]..src/lr1.ml[579,17120+9])
          Tpat_var "foldx/1583"
        expression (src/lr1.ml[579,17120+10]..src/lr1.ml[584,17242+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[579,17120+10]..src/lr1.ml[579,17120+11])
                Tpat_var "f/1585"
              expression (src/lr1.ml[580,17134+2]..src/lr1.ml[584,17242+3])
                Texp_apply
                expression (src/lr1.ml[580,17134+2]..src/lr1.ml[580,17134+6])
                  Texp_ident "fold/1568"
                [
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[580,17134+7]..src/lr1.ml[584,17242+3])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/lr1.ml[580,17134+12]..src/lr1.ml[580,17134+16])
                            Tpat_var "accu/1586"
                          expression (src/lr1.ml[580,17134+17]..src/lr1.ml[583,17214+27]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/lr1.ml[580,17134+17]..src/lr1.ml[580,17134+21])
                                  Tpat_var "node/1587"
                                expression (src/lr1.ml[581,17159+4]..src/lr1.ml[583,17214+27])
                                  Texp_match
                                  expression (src/lr1.ml[581,17159+10]..src/lr1.ml[581,17159+30])
                                    Texp_apply
                                    expression (src/lr1.ml[581,17159+10]..src/lr1.ml[581,17159+25])
                                      Texp_ident "incoming_symbol/1472"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[581,17159+26]..src/lr1.ml[581,17159+30])
                                          Texp_ident "node/1587"
                                    ]
                                  [
                                    <case>
                                      pattern (src/lr1.ml[582,17195+6]..src/lr1.ml[582,17195+10])
                                        Tpat_value
                                        pattern (src/lr1.ml[582,17195+6]..src/lr1.ml[582,17195+10])
                                          Tpat_construct "None"
                                          []
                                          None
                                      expression (src/lr1.ml[582,17195+14]..src/lr1.ml[582,17195+18])
                                        Texp_ident "accu/1586"
                                    <case>
                                      pattern (src/lr1.ml[583,17214+6]..src/lr1.ml[583,17214+12])
                                        Tpat_value
                                        pattern (src/lr1.ml[583,17214+6]..src/lr1.ml[583,17214+12])
                                          Tpat_construct "Some"
                                          [
                                            pattern (src/lr1.ml[583,17214+11]..src/lr1.ml[583,17214+12])
                                              Tpat_any
                                          ]
                                          None
                                      expression (src/lr1.ml[583,17214+16]..src/lr1.ml[583,17214+27])
                                        Texp_apply
                                        expression (src/lr1.ml[583,17214+16]..src/lr1.ml[583,17214+17])
                                          Texp_ident "f/1585"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[583,17214+18]..src/lr1.ml[583,17214+22])
                                              Texp_ident "accu/1586"
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[583,17214+23]..src/lr1.ml[583,17214+27])
                                              Texp_ident "node/1587"
                                        ]
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/lr1.ml[586,17247+0]..src/lr1.ml[591,17357+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[586,17247+4]..src/lr1.ml[586,17247+9])
          Tpat_var "iterx/1588"
        expression (src/lr1.ml[586,17247+10]..src/lr1.ml[591,17357+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[586,17247+10]..src/lr1.ml[586,17247+11])
                Tpat_var "f/1590"
              expression (src/lr1.ml[587,17261+2]..src/lr1.ml[591,17357+3])
                Texp_apply
                expression (src/lr1.ml[587,17261+2]..src/lr1.ml[587,17261+6])
                  Texp_ident "iter/1574"
                [
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[587,17261+7]..src/lr1.ml[591,17357+3])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/lr1.ml[587,17261+12]..src/lr1.ml[587,17261+16])
                            Tpat_var "node/1591"
                          expression (src/lr1.ml[588,17281+4]..src/lr1.ml[590,17334+22])
                            Texp_match
                            expression (src/lr1.ml[588,17281+10]..src/lr1.ml[588,17281+30])
                              Texp_apply
                              expression (src/lr1.ml[588,17281+10]..src/lr1.ml[588,17281+25])
                                Texp_ident "incoming_symbol/1472"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[588,17281+26]..src/lr1.ml[588,17281+30])
                                    Texp_ident "node/1591"
                              ]
                            [
                              <case>
                                pattern (src/lr1.ml[589,17317+6]..src/lr1.ml[589,17317+10])
                                  Tpat_value
                                  pattern (src/lr1.ml[589,17317+6]..src/lr1.ml[589,17317+10])
                                    Tpat_construct "None"
                                    []
                                    None
                                expression (src/lr1.ml[589,17317+14]..src/lr1.ml[589,17317+16])
                                  Texp_construct "()"
                                  []
                              <case>
                                pattern (src/lr1.ml[590,17334+6]..src/lr1.ml[590,17334+12])
                                  Tpat_value
                                  pattern (src/lr1.ml[590,17334+6]..src/lr1.ml[590,17334+12])
                                    Tpat_construct "Some"
                                    [
                                      pattern (src/lr1.ml[590,17334+11]..src/lr1.ml[590,17334+12])
                                        Tpat_any
                                    ]
                                    None
                                expression (src/lr1.ml[590,17334+16]..src/lr1.ml[590,17334+22])
                                  Texp_apply
                                  expression (src/lr1.ml[590,17334+16]..src/lr1.ml[590,17334+17])
                                    Texp_ident "f/1590"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[590,17334+18]..src/lr1.ml[590,17334+22])
                                        Texp_ident "node/1591"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/lr1.ml[593,17362+0]..src/lr1.ml[594,17394+19])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[593,17362+4]..src/lr1.ml[593,17362+12])
          Tpat_var "tabulate/1592"
        expression (src/lr1.ml[593,17362+13]..src/lr1.ml[594,17394+19]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[593,17362+14]..src/lr1.ml[593,17362+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/lr1.ml[593,17362+18]..src/lr1.ml[593,17362+28])
                    Ttyp_arrow
                    Nolabel
                    core_type (src/lr1.ml[593,17362+18]..src/lr1.ml[593,17362+22])
                      Ttyp_constr "node/642"
                      []
                    core_type (src/lr1.ml[593,17362+26]..src/lr1.ml[593,17362+28])
                      Ttyp_var a
                Tpat_alias "f/1594"
                pattern (src/lr1.ml[593,17362+14]..src/lr1.ml[593,17362+15])
                  Tpat_any
              expression (src/lr1.ml[594,17394+2]..src/lr1.ml[594,17394+19])
                Texp_apply
                expression (src/lr1.ml[594,17394+2]..src/lr1.ml[594,17394+15])
                  Texp_ident "Dune__exe!.Misc.tabulate"
                [
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[594,17394+16]..src/lr1.ml[594,17394+17])
                      Texp_ident "n/1426"
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[594,17394+18]..src/lr1.ml[594,17394+19])
                      Texp_ident "f/1594"
                ]
          ]
    ]
  structure_item (src/lr1.ml[596,17415+0]..src/lr1.ml[597,17443+14])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[596,17415+4]..src/lr1.ml[596,17415+7])
          Tpat_var "sum/1595"
        expression (src/lr1.ml[596,17415+8]..src/lr1.ml[597,17443+14]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[596,17415+9]..src/lr1.ml[596,17415+10])
                extra
                  Tpat_extra_constraint
                  core_type (src/lr1.ml[596,17415+13]..src/lr1.ml[596,17415+24])
                    Ttyp_arrow
                    Nolabel
                    core_type (src/lr1.ml[596,17415+13]..src/lr1.ml[596,17415+17])
                      Ttyp_constr "node/642"
                      []
                    core_type (src/lr1.ml[596,17415+21]..src/lr1.ml[596,17415+24])
                      Ttyp_constr "int/1!"
                      []
                Tpat_alias "f/1597"
                pattern (src/lr1.ml[596,17415+9]..src/lr1.ml[596,17415+10])
                  Tpat_any
              expression (src/lr1.ml[597,17443+2]..src/lr1.ml[597,17443+14])
                Texp_apply
                expression (src/lr1.ml[597,17443+2]..src/lr1.ml[597,17443+10])
                  Texp_ident "Dune__exe!.Misc.sum"
                [
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[597,17443+11]..src/lr1.ml[597,17443+12])
                      Texp_ident "n/1426"
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[597,17443+13]..src/lr1.ml[597,17443+14])
                      Texp_ident "f/1597"
                ]
          ]
    ]
  structure_item (src/lr1.ml[604,17638+0]..src/lr1.ml[605,17664+54])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[604,17638+4]..src/lr1.ml[604,17638+10])
          Tpat_var "lookup/1598"
        expression (src/lr1.ml[604,17638+11]..src/lr1.ml[605,17664+54]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[604,17638+11]..src/lr1.ml[604,17638+17])
                Tpat_var "symbol/1600"
              expression (src/lr1.ml[604,17638+18]..src/lr1.ml[605,17664+54]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr1.ml[604,17638+18]..src/lr1.ml[604,17638+23])
                      Tpat_var "index/1601"
                    expression (src/lr1.ml[605,17664+2]..src/lr1.ml[605,17664+54])
                      Texp_try
                      expression (src/lr1.ml[605,17664+6]..src/lr1.ml[605,17664+33])
                        Texp_apply
                        expression (src/lr1.ml[605,17664+6]..src/lr1.ml[605,17664+20])
                          Texp_ident "Dune__exe!.Grammar.SymbolMap.find"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[605,17664+21]..src/lr1.ml[605,17664+27])
                              Texp_ident "symbol/1600"
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[605,17664+28]..src/lr1.ml[605,17664+33])
                              Texp_ident "index/1601"
                        ]
                      [
                        <case>
                          pattern (src/lr1.ml[605,17664+39]..src/lr1.ml[605,17664+48])
                            Tpat_construct "Not_found"
                            []
                            None
                          expression (src/lr1.ml[605,17664+52]..src/lr1.ml[605,17664+54])
                            Texp_construct "[]"
                            []
                      ]
                ]
          ]
    ]
  structure_item (src/lr1.ml[607,17720+0]..src/lr1.ml[614,17932+19])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[607,17720+4]..src/lr1.ml[607,17720+9])
          extra
            Tpat_extra_constraint
            core_type (src/lr1.ml[607,17720+12]..src/lr1.ml[607,17720+33])
              Ttyp_constr "Dune__exe!.Grammar.SymbolMap.t"
              [
                core_type (src/lr1.ml[607,17720+12]..src/lr1.ml[607,17720+21])
                  Ttyp_constr "list/9!"
                  [
                    core_type (src/lr1.ml[607,17720+12]..src/lr1.ml[607,17720+16])
                      Ttyp_constr "node/642"
                      []
                  ]
              ]
          Tpat_alias "index/1602"
          pattern (src/lr1.ml[607,17720+4]..src/lr1.ml[607,17720+9])
            Tpat_any
        expression (src/lr1.ml[608,17756+2]..src/lr1.ml[614,17932+19])
          extra
            Texp_constraint
            core_type (src/lr1.ml[607,17720+12]..src/lr1.ml[607,17720+33])
              Ttyp_constr "Dune__exe!.Grammar.SymbolMap.t"
              [
                core_type (src/lr1.ml[607,17720+12]..src/lr1.ml[607,17720+21])
                  Ttyp_constr "list/9!"
                  [
                    core_type (src/lr1.ml[607,17720+12]..src/lr1.ml[607,17720+16])
                      Ttyp_constr "node/642"
                      []
                  ]
              ]
          Texp_apply
          expression (src/lr1.ml[608,17756+2]..src/lr1.ml[608,17756+6])
            Texp_ident "fold/1568"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[608,17756+7]..src/lr1.ml[614,17932+3])
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr1.ml[608,17756+12]..src/lr1.ml[608,17756+17])
                      Tpat_var "index/1603"
                    expression (src/lr1.ml[608,17756+18]..src/lr1.ml[613,17867+64]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/lr1.ml[608,17756+18]..src/lr1.ml[608,17756+22])
                            Tpat_var "node/1604"
                          expression (src/lr1.ml[609,17782+4]..src/lr1.ml[613,17867+64])
                            Texp_match
                            expression (src/lr1.ml[609,17782+10]..src/lr1.ml[609,17782+30])
                              Texp_apply
                              expression (src/lr1.ml[609,17782+10]..src/lr1.ml[609,17782+25])
                                Texp_ident "incoming_symbol/1472"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[609,17782+26]..src/lr1.ml[609,17782+30])
                                    Texp_ident "node/1604"
                              ]
                            [
                              <case>
                                pattern (src/lr1.ml[610,17818+6]..src/lr1.ml[610,17818+10])
                                  Tpat_value
                                  pattern (src/lr1.ml[610,17818+6]..src/lr1.ml[610,17818+10])
                                    Tpat_construct "None"
                                    []
                                    None
                                expression (src/lr1.ml[611,17832+8]..src/lr1.ml[611,17832+13])
                                  Texp_ident "index/1603"
                              <case>
                                pattern (src/lr1.ml[612,17846+6]..src/lr1.ml[612,17846+17])
                                  Tpat_value
                                  pattern (src/lr1.ml[612,17846+6]..src/lr1.ml[612,17846+17])
                                    Tpat_construct "Some"
                                    [
                                      pattern (src/lr1.ml[612,17846+11]..src/lr1.ml[612,17846+17])
                                        Tpat_var "symbol/1605"
                                    ]
                                    None
                                expression (src/lr1.ml[613,17867+8]..src/lr1.ml[613,17867+64])
                                  Texp_apply
                                  expression (src/lr1.ml[613,17867+8]..src/lr1.ml[613,17867+21])
                                    Texp_ident "Dune__exe!.Grammar.SymbolMap.add"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[613,17867+22]..src/lr1.ml[613,17867+28])
                                        Texp_ident "symbol/1605"
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[613,17867+29]..src/lr1.ml[613,17867+58])
                                        Texp_construct "::"
                                        [
                                          expression (src/lr1.ml[613,17867+30]..src/lr1.ml[613,17867+34])
                                            Texp_ident "node/1604"
                                          expression (src/lr1.ml[613,17867+38]..src/lr1.ml[613,17867+57])
                                            Texp_apply
                                            expression (src/lr1.ml[613,17867+38]..src/lr1.ml[613,17867+44])
                                              Texp_ident "lookup/1598"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/lr1.ml[613,17867+45]..src/lr1.ml[613,17867+51])
                                                  Texp_ident "symbol/1605"
                                              <arg>
                                                Nolabel
                                                expression (src/lr1.ml[613,17867+52]..src/lr1.ml[613,17867+57])
                                                  Texp_ident "index/1603"
                                            ]
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[613,17867+59]..src/lr1.ml[613,17867+64])
                                        Texp_ident "index/1603"
                                  ]
                            ]
                      ]
                ]
            <arg>
              Nolabel
              expression (src/lr1.ml[614,17932+4]..src/lr1.ml[614,17932+19])
                Texp_ident "Dune__exe!.Grammar.SymbolMap.empty"
          ]
    ]
  structure_item (src/lr1.ml[619,18111+0]..src/lr1.ml[624,18319+16])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[619,18111+4]..src/lr1.ml[619,18111+11])
          Tpat_var "targets/1606"
        expression (src/lr1.ml[619,18111+12]..src/lr1.ml[624,18319+16]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[619,18111+12]..src/lr1.ml[619,18111+13])
                Tpat_var "f/1608"
              expression (src/lr1.ml[619,18111+14]..src/lr1.ml[624,18319+16]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr1.ml[619,18111+14]..src/lr1.ml[619,18111+18])
                      Tpat_var "accu/1609"
                    expression (src/lr1.ml[619,18111+19]..src/lr1.ml[624,18319+16]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/lr1.ml[619,18111+19]..src/lr1.ml[619,18111+25])
                            Tpat_var "symbol/1610"
                          expression (src/lr1.ml[621,18203+2]..src/lr1.ml[624,18319+16])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/lr1.ml[621,18203+6]..src/lr1.ml[621,18203+13])
                                  Tpat_var "targets/1611"
                                expression (src/lr1.ml[621,18203+16]..src/lr1.ml[621,18203+35])
                                  Texp_apply
                                  expression (src/lr1.ml[621,18203+16]..src/lr1.ml[621,18203+22])
                                    Texp_ident "lookup/1598"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[621,18203+23]..src/lr1.ml[621,18203+29])
                                        Texp_ident "symbol/1610"
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[621,18203+30]..src/lr1.ml[621,18203+35])
                                        Texp_ident "index/1602"
                                  ]
                            ]
                            expression (src/lr1.ml[622,18242+2]..src/lr1.ml[624,18319+16])
                              Texp_apply
                              expression (src/lr1.ml[622,18242+2]..src/lr1.ml[622,18242+16])
                                Texp_ident "Stdlib!.List.fold_left"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[622,18242+17]..src/lr1.ml[624,18319+3])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/lr1.ml[622,18242+22]..src/lr1.ml[622,18242+26])
                                          Tpat_var "accu/1612"
                                        expression (src/lr1.ml[622,18242+27]..src/lr1.ml[623,18279+39]) ghost
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/lr1.ml[622,18242+27]..src/lr1.ml[622,18242+33])
                                                Tpat_var "target/1613"
                                              expression (src/lr1.ml[623,18279+4]..src/lr1.ml[623,18279+39])
                                                Texp_apply
                                                expression (src/lr1.ml[623,18279+4]..src/lr1.ml[623,18279+5])
                                                  Texp_ident "f/1608"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr1.ml[623,18279+6]..src/lr1.ml[623,18279+10])
                                                      Texp_ident "accu/1612"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr1.ml[623,18279+11]..src/lr1.ml[623,18279+32])
                                                      Texp_apply
                                                      expression (src/lr1.ml[623,18279+12]..src/lr1.ml[623,18279+24])
                                                        Texp_ident "predecessors/1458"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/lr1.ml[623,18279+25]..src/lr1.ml[623,18279+31])
                                                            Texp_ident "target/1613"
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr1.ml[623,18279+33]..src/lr1.ml[623,18279+39])
                                                      Texp_ident "target/1613"
                                                ]
                                          ]
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[624,18319+4]..src/lr1.ml[624,18319+8])
                                    Texp_ident "accu/1609"
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[624,18319+9]..src/lr1.ml[624,18319+16])
                                    Texp_ident "targets/1611"
                              ]
                      ]
                ]
          ]
    ]
  structure_item (src/lr1.ml[630,18489+0]..src/lr1.ml[635,18681+23])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[630,18489+4]..src/lr1.ml[630,18489+14])
          Tpat_var "start2item/1614"
        expression (src/lr1.ml[630,18489+15]..src/lr1.ml[635,18681+23]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[630,18489+15]..src/lr1.ml[630,18489+19])
                Tpat_var "node/1616"
              expression (src/lr1.ml[631,18511+2]..src/lr1.ml[635,18681+23])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/lr1.ml[631,18511+6]..src/lr1.ml[631,18511+11])
                      extra
                        Tpat_extra_constraint
                        core_type (src/lr1.ml[631,18511+14]..src/lr1.ml[631,18511+26])
                          Ttyp_constr "Dune__exe!.Lr0.lr1state"
                          []
                      Tpat_alias "state/1617"
                      pattern (src/lr1.ml[631,18511+6]..src/lr1.ml[631,18511+11])
                        Tpat_any
                    expression (src/lr1.ml[631,18511+29]..src/lr1.ml[631,18511+39])
                      extra
                        Texp_constraint
                        core_type (src/lr1.ml[631,18511+14]..src/lr1.ml[631,18511+26])
                          Ttyp_constr "Dune__exe!.Lr0.lr1state"
                          []
                      Texp_apply
                      expression (src/lr1.ml[631,18511+29]..src/lr1.ml[631,18511+34])
                        Texp_ident "state/1447"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[631,18511+35]..src/lr1.ml[631,18511+39])
                            Texp_ident "node/1616"
                      ]
                ]
                expression (src/lr1.ml[632,18554+2]..src/lr1.ml[635,18681+23])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (src/lr1.ml[632,18554+6]..src/lr1.ml[632,18554+10])
                        extra
                          Tpat_extra_constraint
                          core_type (src/lr1.ml[632,18554+13]..src/lr1.ml[632,18554+21])
                            Ttyp_constr "Dune__exe!.Lr0.node"
                            []
                        Tpat_alias "core/1618"
                        pattern (src/lr1.ml[632,18554+6]..src/lr1.ml[632,18554+10])
                          Tpat_any
                      expression (src/lr1.ml[632,18554+24]..src/lr1.ml[632,18554+38])
                        extra
                          Texp_constraint
                          core_type (src/lr1.ml[632,18554+13]..src/lr1.ml[632,18554+21])
                            Ttyp_constr "Dune__exe!.Lr0.node"
                            []
                        Texp_apply
                        expression (src/lr1.ml[632,18554+24]..src/lr1.ml[632,18554+32])
                          Texp_ident "Dune__exe!.Lr0.core"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[632,18554+33]..src/lr1.ml[632,18554+38])
                              Texp_ident "state/1617"
                        ]
                  ]
                  expression (src/lr1.ml[633,18596+2]..src/lr1.ml[635,18681+23])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/lr1.ml[633,18596+6]..src/lr1.ml[633,18596+11])
                          extra
                            Tpat_extra_constraint
                            core_type (src/lr1.ml[633,18596+14]..src/lr1.ml[633,18596+24])
                              Ttyp_constr "Dune__exe!.Item.Set.t"
                              []
                          Tpat_alias "items/1619"
                          pattern (src/lr1.ml[633,18596+6]..src/lr1.ml[633,18596+11])
                            Tpat_any
                        expression (src/lr1.ml[633,18596+27]..src/lr1.ml[633,18596+41])
                          extra
                            Texp_constraint
                            core_type (src/lr1.ml[633,18596+14]..src/lr1.ml[633,18596+24])
                              Ttyp_constr "Dune__exe!.Item.Set.t"
                              []
                          Texp_apply
                          expression (src/lr1.ml[633,18596+27]..src/lr1.ml[633,18596+36])
                            Texp_ident "Dune__exe!.Lr0.items"
                          [
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[633,18596+37]..src/lr1.ml[633,18596+41])
                                Texp_ident "core/1618"
                          ]
                    ]
                    expression (src/lr1.ml[634,18641+2]..src/lr1.ml[635,18681+23])
                      Texp_sequence
                      expression (src/lr1.ml[634,18641+2]..src/lr1.ml[634,18641+38])
                        Texp_assert                        expression (src/lr1.ml[634,18641+9]..src/lr1.ml[634,18641+38])
                          Texp_apply
                          expression (src/lr1.ml[634,18641+34]..src/lr1.ml[634,18641+35])
                            Texp_ident "Stdlib!.="
                          [
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[634,18641+10]..src/lr1.ml[634,18641+33])
                                Texp_apply
                                expression (src/lr1.ml[634,18641+10]..src/lr1.ml[634,18641+27])
                                  Texp_ident "Dune__exe!.Item.Set.cardinal"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/lr1.ml[634,18641+28]..src/lr1.ml[634,18641+33])
                                      Texp_ident "items/1619"
                                ]
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[634,18641+36]..src/lr1.ml[634,18641+37])
                                Texp_constant Const_int 1
                          ]
                      expression (src/lr1.ml[635,18681+2]..src/lr1.ml[635,18681+23])
                        Texp_apply
                        expression (src/lr1.ml[635,18681+2]..src/lr1.ml[635,18681+17])
                          Texp_ident "Dune__exe!.Item.Set.choose"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[635,18681+18]..src/lr1.ml[635,18681+23])
                              Texp_ident "items/1619"
                        ]
          ]
    ]
  structure_item (src/lr1.ml[643,19082+0]..src/lr1.ml[650,19308+27])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[643,19082+4]..src/lr1.ml[643,19082+17])
          Tpat_var "has_beforeend/1620"
        expression (src/lr1.ml[643,19082+18]..src/lr1.ml[650,19308+27]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[643,19082+18]..src/lr1.ml[643,19082+22])
                Tpat_var "node/1622"
              expression (src/lr1.ml[644,19107+2]..src/lr1.ml[650,19308+27])
                Texp_apply
                expression (src/lr1.ml[644,19107+2]..src/lr1.ml[644,19107+18])
                  Texp_ident "Dune__exe!.Grammar.TerminalMap.fold"
                [
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[644,19107+19]..src/lr1.ml[650,19308+3])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/lr1.ml[644,19107+24]..src/lr1.ml[644,19107+25])
                            Tpat_any
                          expression (src/lr1.ml[644,19107+26]..src/lr1.ml[649,19276+31]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/lr1.ml[644,19107+26]..src/lr1.ml[644,19107+31])
                                  Tpat_var "prods/1623"
                                expression (src/lr1.ml[644,19107+32]..src/lr1.ml[649,19276+31]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/lr1.ml[644,19107+32]..src/lr1.ml[644,19107+36])
                                        Tpat_var "accu/1624"
                                      expression (src/lr1.ml[645,19147+4]..src/lr1.ml[649,19276+31])
                                        Texp_apply
                                        expression (src/lr1.ml[645,19147+9]..src/lr1.ml[645,19147+11])
                                          Texp_ident "Stdlib!.||"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[645,19147+4]..src/lr1.ml[645,19147+8])
                                              Texp_ident "accu/1624"
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[646,19159+4]..src/lr1.ml[649,19276+31])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/lr1.ml[646,19159+8]..src/lr1.ml[646,19159+12])
                                                    Tpat_var "prod/1625"
                                                  expression (src/lr1.ml[646,19159+15]..src/lr1.ml[646,19159+32])
                                                    Texp_apply
                                                    expression (src/lr1.ml[646,19159+15]..src/lr1.ml[646,19159+26])
                                                      Texp_ident "Dune__exe!.Misc.single"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/lr1.ml[646,19159+27]..src/lr1.ml[646,19159+32])
                                                          Texp_ident "prods/1623"
                                                    ]
                                              ]
                                              expression (src/lr1.ml[647,19195+4]..src/lr1.ml[649,19276+31])
                                                Texp_apply
                                                expression (src/lr1.ml[647,19195+35]..src/lr1.ml[647,19195+37])
                                                  Texp_ident "Stdlib!.&&"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr1.ml[647,19195+4]..src/lr1.ml[647,19195+34])
                                                      Texp_apply
                                                      expression (src/lr1.ml[647,19195+4]..src/lr1.ml[647,19195+7])
                                                        Texp_ident "Stdlib!.not"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/lr1.ml[647,19195+8]..src/lr1.ml[647,19195+34])
                                                            Texp_apply
                                                            expression (src/lr1.ml[647,19195+9]..src/lr1.ml[647,19195+28])
                                                              Texp_ident "Dune__exe!.Grammar.Production.is_start"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/lr1.ml[647,19195+29]..src/lr1.ml[647,19195+33])
                                                                  Texp_ident "prod/1625"
                                                            ]
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr1.ml[648,19233+4]..src/lr1.ml[649,19276+31])
                                                      Texp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (src/lr1.ml[648,19233+8]..src/lr1.ml[648,19233+14])
                                                            Tpat_var "action/1626"
                                                          expression (src/lr1.ml[648,19233+17]..src/lr1.ml[648,19233+39])
                                                            Texp_apply
                                                            expression (src/lr1.ml[648,19233+17]..src/lr1.ml[648,19233+34])
                                                              Texp_ident "Dune__exe!.Grammar.Production.action"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/lr1.ml[648,19233+35]..src/lr1.ml[648,19233+39])
                                                                  Texp_ident "prod/1625"
                                                            ]
                                                      ]
                                                      expression (src/lr1.ml[649,19276+4]..src/lr1.ml[649,19276+31])
                                                        Texp_apply
                                                        expression (src/lr1.ml[649,19276+4]..src/lr1.ml[649,19276+24])
                                                          Texp_ident "Dune__exe!.Action.has_beforeend"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/lr1.ml[649,19276+25]..src/lr1.ml[649,19276+31])
                                                              Texp_ident "action/1626"
                                                        ]
                                                ]
                                        ]
                                  ]
                            ]
                      ]
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[650,19308+4]..src/lr1.ml[650,19308+21])
                      Texp_apply
                      expression (src/lr1.ml[650,19308+5]..src/lr1.ml[650,19308+15])
                        Texp_ident "reductions/1456"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[650,19308+16]..src/lr1.ml[650,19308+20])
                            Texp_ident "node/1622"
                      ]
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[650,19308+22]..src/lr1.ml[650,19308+27])
                      Texp_construct "false"
                      []
                ]
          ]
    ]
  structure_item (src/lr1.ml[664,20029+0]..src/lr1.ml[697,20889+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[664,20029+4]..src/lr1.ml[664,20029+21])
          Tpat_var "acceptable_tokens/1699"
        expression (src/lr1.ml[664,20029+22]..src/lr1.ml[697,20889+9]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[664,20029+23]..src/lr1.ml[664,20029+24])
                extra
                  Tpat_extra_constraint
                  core_type (src/lr1.ml[664,20029+27]..src/lr1.ml[664,20029+31])
                    Ttyp_constr "node/642"
                    []
                Tpat_alias "s/1701"
                pattern (src/lr1.ml[664,20029+23]..src/lr1.ml[664,20029+24])
                  Tpat_any
              expression (src/lr1.ml[669,20219+2]..src/lr1.ml[697,20889+9])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/lr1.ml[669,20219+6]..src/lr1.ml[669,20219+17])
                      Tpat_var "transitions/1702"
                    expression (src/lr1.ml[670,20239+4]..src/lr1.ml[670,20239+62])
                      Texp_apply
                      expression (src/lr1.ml[670,20239+4]..src/lr1.ml[670,20239+20])
                        Texp_ident "Dune__exe!.Grammar.SymbolMap.remove"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[670,20239+21]..src/lr1.ml[670,20239+46])
                            Texp_construct "Symbol.T"
                            [
                              expression (src/lr1.ml[670,20239+31]..src/lr1.ml[670,20239+45])
                                Texp_ident "Dune__exe!.Grammar.Terminal.error"
                            ]
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[670,20239+47]..src/lr1.ml[670,20239+62])
                            Texp_apply
                            expression (src/lr1.ml[670,20239+48]..src/lr1.ml[670,20239+59])
                              Texp_ident "transitions/1450"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[670,20239+60]..src/lr1.ml[670,20239+61])
                                  Texp_ident "s/1701"
                            ]
                      ]
                  <def>
                    pattern (src/lr1.ml[671,20302+6]..src/lr1.ml[671,20302+16])
                      Tpat_var "reductions/1703"
                    expression (src/lr1.ml[672,20321+4]..src/lr1.ml[672,20321+52])
                      Texp_apply
                      expression (src/lr1.ml[672,20321+4]..src/lr1.ml[672,20321+22])
                        Texp_ident "Dune__exe!.Grammar.TerminalMap.remove"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[672,20321+23]..src/lr1.ml[672,20321+37])
                            Texp_ident "Dune__exe!.Grammar.Terminal.error"
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[672,20321+38]..src/lr1.ml[672,20321+52])
                            Texp_apply
                            expression (src/lr1.ml[672,20321+39]..src/lr1.ml[672,20321+49])
                              Texp_ident "reductions/1456"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[672,20321+50]..src/lr1.ml[672,20321+51])
                                  Texp_ident "s/1701"
                            ]
                      ]
                ]
                expression (src/lr1.ml[677,20444+2]..src/lr1.ml[697,20889+9])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (src/lr1.ml[677,20444+6]..src/lr1.ml[677,20444+13])
                        Tpat_var "covered/1704"
                      expression (src/lr1.ml[678,20460+4]..src/lr1.ml[684,20630+35])
                        Texp_apply
                        expression (src/lr1.ml[678,20460+4]..src/lr1.ml[678,20460+18])
                          Texp_ident "Dune__exe!.Grammar.SymbolMap.fold"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[678,20460+19]..src/lr1.ml[684,20630+5])
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/lr1.ml[678,20460+24]..src/lr1.ml[678,20460+30])
                                    Tpat_var "symbol/1705"
                                  expression (src/lr1.ml[678,20460+31]..src/lr1.ml[683,20612+17]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/lr1.ml[678,20460+31]..src/lr1.ml[678,20460+32])
                                          Tpat_any
                                        expression (src/lr1.ml[678,20460+33]..src/lr1.ml[683,20612+17]) ghost
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/lr1.ml[678,20460+33]..src/lr1.ml[678,20460+40])
                                                Tpat_var "covered/1706"
                                              expression (src/lr1.ml[679,20504+6]..src/lr1.ml[683,20612+17])
                                                Texp_match
                                                expression (src/lr1.ml[679,20504+12]..src/lr1.ml[679,20504+18])
                                                  Texp_ident "symbol/1705"
                                                [
                                                  <case>
                                                    pattern (src/lr1.ml[680,20528+8]..src/lr1.ml[680,20528+20])
                                                      Tpat_value
                                                      pattern (src/lr1.ml[680,20528+8]..src/lr1.ml[680,20528+20])
                                                        Tpat_construct "Symbol.T"
                                                        [
                                                          pattern (src/lr1.ml[680,20528+17]..src/lr1.ml[680,20528+20])
                                                            Tpat_var "tok/1707"
                                                        ]
                                                        None
                                                    expression (src/lr1.ml[681,20552+10]..src/lr1.ml[681,20552+37])
                                                      Texp_apply
                                                      expression (src/lr1.ml[681,20552+10]..src/lr1.ml[681,20552+25])
                                                        Texp_ident "Dune__exe!.Grammar.TerminalSet.add"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/lr1.ml[681,20552+26]..src/lr1.ml[681,20552+29])
                                                            Texp_ident "tok/1707"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/lr1.ml[681,20552+30]..src/lr1.ml[681,20552+37])
                                                            Texp_ident "covered/1706"
                                                      ]
                                                  <case>
                                                    pattern (src/lr1.ml[682,20590+8]..src/lr1.ml[682,20590+18])
                                                      Tpat_value
                                                      pattern (src/lr1.ml[682,20590+8]..src/lr1.ml[682,20590+18])
                                                        Tpat_construct "Symbol.N"
                                                        [
                                                          pattern (src/lr1.ml[682,20590+17]..src/lr1.ml[682,20590+18])
                                                            Tpat_any
                                                        ]
                                                        None
                                                    expression (src/lr1.ml[683,20612+10]..src/lr1.ml[683,20612+17])
                                                      Texp_ident "covered/1706"
                                                ]
                                          ]
                                    ]
                              ]
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[684,20630+6]..src/lr1.ml[684,20630+17])
                              Texp_ident "transitions/1702"
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[684,20630+18]..src/lr1.ml[684,20630+35])
                              Texp_ident "Dune__exe!.Grammar.TerminalSet.empty"
                        ]
                  ]
                  expression (src/lr1.ml[689,20726+2]..src/lr1.ml[697,20889+9])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/lr1.ml[689,20726+6]..src/lr1.ml[689,20726+13])
                          Tpat_var "covered/1729"
                        expression (src/lr1.ml[690,20742+4]..src/lr1.ml[692,20825+37])
                          Texp_apply
                          expression (src/lr1.ml[690,20742+4]..src/lr1.ml[690,20742+22])
                            Texp_ident "Dune__exe!.Grammar.ProductionMap.fold"
                          [
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[690,20742+23]..src/lr1.ml[692,20825+5])
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/lr1.ml[690,20742+28]..src/lr1.ml[690,20742+29])
                                      Tpat_any
                                    expression (src/lr1.ml[690,20742+30]..src/lr1.ml[691,20788+36]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (src/lr1.ml[690,20742+30]..src/lr1.ml[690,20742+34])
                                            Tpat_var "toks/1730"
                                          expression (src/lr1.ml[690,20742+35]..src/lr1.ml[691,20788+36]) ghost
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (src/lr1.ml[690,20742+35]..src/lr1.ml[690,20742+42])
                                                  Tpat_var "covered/1731"
                                                expression (src/lr1.ml[691,20788+6]..src/lr1.ml[691,20788+36])
                                                  Texp_apply
                                                  expression (src/lr1.ml[691,20788+6]..src/lr1.ml[691,20788+23])
                                                    Texp_ident "Dune__exe!.Grammar.TerminalSet.union"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/lr1.ml[691,20788+24]..src/lr1.ml[691,20788+28])
                                                        Texp_ident "toks/1730"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/lr1.ml[691,20788+29]..src/lr1.ml[691,20788+36])
                                                        Texp_ident "covered/1731"
                                                  ]
                                            ]
                                      ]
                                ]
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[692,20825+6]..src/lr1.ml[692,20825+29])
                                Texp_apply
                                expression (src/lr1.ml[692,20825+7]..src/lr1.ml[692,20825+17])
                                  Texp_ident "Dune__exe!.Lr0.invert"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/lr1.ml[692,20825+18]..src/lr1.ml[692,20825+28])
                                      Texp_ident "reductions/1703"
                                ]
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[692,20825+30]..src/lr1.ml[692,20825+37])
                                Texp_ident "covered/1704"
                          ]
                    ]
                    expression (src/lr1.ml[697,20889+2]..src/lr1.ml[697,20889+9])
                      Texp_ident "covered/1729"
          ]
    ]
  structure_item (src/lr1.ml[704,21035+0]..src/lr1.ml[714,21469+20])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[704,21035+4]..src/lr1.ml[704,21035+6])
          Tpat_construct "()"
          []
          None
        expression (src/lr1.ml[705,21044+2]..src/lr1.ml[714,21469+20])
          Texp_sequence
          expression (src/lr1.ml[705,21044+2]..src/lr1.ml[709,21244+19])
            Texp_ifthenelse
            expression (src/lr1.ml[705,21044+5]..src/lr1.ml[705,21044+22])
              Texp_apply
              expression (src/lr1.ml[705,21044+19]..src/lr1.ml[705,21044+20])
                Texp_ident "Stdlib!.="
              [
                <arg>
                  Nolabel
                  expression (src/lr1.ml[705,21044+5]..src/lr1.ml[705,21044+18])
                    Texp_apply
                    expression (src/lr1.ml[705,21044+5]..src/lr1.ml[705,21044+6])
                      Texp_ident "Stdlib!.!"
                    [
                      <arg>
                        Nolabel
                        expression (src/lr1.ml[705,21044+6]..src/lr1.ml[705,21044+18])
                          Texp_ident "shift_reduce/986"
                    ]
                <arg>
                  Nolabel
                  expression (src/lr1.ml[705,21044+21]..src/lr1.ml[705,21044+22])
                    Texp_constant Const_int 1
              ]
            expression (src/lr1.ml[706,21072+4]..src/lr1.ml[706,21072+68])
              Texp_apply
              expression (src/lr1.ml[706,21072+4]..src/lr1.ml[706,21072+25])
                Texp_ident "Dune__exe!.Error.grammar_warning"
              [
                <arg>
                  Nolabel
                  expression (src/lr1.ml[706,21072+26]..src/lr1.ml[706,21072+28])
                    Texp_construct "[]"
                    []
                <arg>
                  Nolabel
                  expression (src/lr1.ml[706,21072+29]..src/lr1.ml[706,21072+68])
                    Texp_construct "CamlinternalFormatBasics.Format"
                    [
                      expression (src/lr1.ml[706,21072+29]..src/lr1.ml[706,21072+68]) ghost
                        Texp_construct "CamlinternalFormatBasics.String_literal"
                        [
                          expression (src/lr1.ml[706,21072+29]..src/lr1.ml[706,21072+68]) ghost
                            Texp_constant Const_string("one state has shift/reduce conflicts.",(src/lr1.ml[706,21072+29]..src/lr1.ml[706,21072+68]) ghost,None)
                          expression (src/lr1.ml[706,21072+29]..src/lr1.ml[706,21072+68]) ghost
                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                            []
                        ]
                      expression (src/lr1.ml[706,21072+29]..src/lr1.ml[706,21072+68]) ghost
                        Texp_constant Const_string("one state has shift/reduce conflicts.",(src/lr1.ml[706,21072+29]..src/lr1.ml[706,21072+68]) ghost,None)
                    ]
              ]
            Some
              expression (src/lr1.ml[707,21141+7]..src/lr1.ml[709,21244+19])
                Texp_ifthenelse
                expression (src/lr1.ml[707,21141+10]..src/lr1.ml[707,21141+27])
                  Texp_apply
                  expression (src/lr1.ml[707,21141+24]..src/lr1.ml[707,21141+25])
                    Texp_ident "Stdlib!.>"
                  [
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[707,21141+10]..src/lr1.ml[707,21141+23])
                        Texp_apply
                        expression (src/lr1.ml[707,21141+10]..src/lr1.ml[707,21141+11])
                          Texp_ident "Stdlib!.!"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[707,21141+11]..src/lr1.ml[707,21141+23])
                              Texp_ident "shift_reduce/986"
                        ]
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[707,21141+26]..src/lr1.ml[707,21141+27])
                        Texp_constant Const_int 1
                  ]
                expression (src/lr1.ml[708,21174+4]..src/lr1.ml[709,21244+19])
                  Texp_apply
                  expression (src/lr1.ml[708,21174+4]..src/lr1.ml[708,21174+25])
                    Texp_ident "Dune__exe!.Error.grammar_warning"
                  [
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[708,21174+26]..src/lr1.ml[708,21174+28])
                        Texp_construct "[]"
                        []
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[708,21174+29]..src/lr1.ml[708,21174+69])
                        Texp_construct "CamlinternalFormatBasics.Format"
                        [
                          expression (src/lr1.ml[708,21174+29]..src/lr1.ml[708,21174+69]) ghost
                            Texp_construct "CamlinternalFormatBasics.Int"
                            [
                              expression (src/lr1.ml[708,21174+29]..src/lr1.ml[708,21174+69]) ghost
                                Texp_construct "CamlinternalFormatBasics.Int_d"
                                []
                              expression (src/lr1.ml[708,21174+29]..src/lr1.ml[708,21174+69]) ghost
                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                []
                              expression (src/lr1.ml[708,21174+29]..src/lr1.ml[708,21174+69]) ghost
                                Texp_construct "CamlinternalFormatBasics.No_precision"
                                []
                              expression (src/lr1.ml[708,21174+29]..src/lr1.ml[708,21174+69]) ghost
                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                [
                                  expression (src/lr1.ml[708,21174+29]..src/lr1.ml[708,21174+69]) ghost
                                    Texp_constant Const_string(" states have shift/reduce conflicts.",(src/lr1.ml[708,21174+29]..src/lr1.ml[708,21174+69]) ghost,None)
                                  expression (src/lr1.ml[708,21174+29]..src/lr1.ml[708,21174+69]) ghost
                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                    []
                                ]
                            ]
                          expression (src/lr1.ml[708,21174+29]..src/lr1.ml[708,21174+69]) ghost
                            Texp_constant Const_string("%d states have shift/reduce conflicts.",(src/lr1.ml[708,21174+29]..src/lr1.ml[708,21174+69]) ghost,None)
                        ]
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[709,21244+6]..src/lr1.ml[709,21244+19])
                        Texp_apply
                        expression (src/lr1.ml[709,21244+6]..src/lr1.ml[709,21244+7])
                          Texp_ident "Stdlib!.!"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[709,21244+7]..src/lr1.ml[709,21244+19])
                              Texp_ident "shift_reduce/986"
                        ]
                  ]
                None
          expression (src/lr1.ml[710,21265+2]..src/lr1.ml[714,21469+20])
            Texp_ifthenelse
            expression (src/lr1.ml[710,21265+5]..src/lr1.ml[710,21265+23])
              Texp_apply
              expression (src/lr1.ml[710,21265+20]..src/lr1.ml[710,21265+21])
                Texp_ident "Stdlib!.="
              [
                <arg>
                  Nolabel
                  expression (src/lr1.ml[710,21265+5]..src/lr1.ml[710,21265+19])
                    Texp_apply
                    expression (src/lr1.ml[710,21265+5]..src/lr1.ml[710,21265+6])
                      Texp_ident "Stdlib!.!"
                    [
                      <arg>
                        Nolabel
                        expression (src/lr1.ml[710,21265+6]..src/lr1.ml[710,21265+19])
                          Texp_ident "reduce_reduce/987"
                    ]
                <arg>
                  Nolabel
                  expression (src/lr1.ml[710,21265+22]..src/lr1.ml[710,21265+23])
                    Texp_constant Const_int 1
              ]
            expression (src/lr1.ml[711,21294+4]..src/lr1.ml[711,21294+69])
              Texp_apply
              expression (src/lr1.ml[711,21294+4]..src/lr1.ml[711,21294+25])
                Texp_ident "Dune__exe!.Error.grammar_warning"
              [
                <arg>
                  Nolabel
                  expression (src/lr1.ml[711,21294+26]..src/lr1.ml[711,21294+28])
                    Texp_construct "[]"
                    []
                <arg>
                  Nolabel
                  expression (src/lr1.ml[711,21294+29]..src/lr1.ml[711,21294+69])
                    Texp_construct "CamlinternalFormatBasics.Format"
                    [
                      expression (src/lr1.ml[711,21294+29]..src/lr1.ml[711,21294+69]) ghost
                        Texp_construct "CamlinternalFormatBasics.String_literal"
                        [
                          expression (src/lr1.ml[711,21294+29]..src/lr1.ml[711,21294+69]) ghost
                            Texp_constant Const_string("one state has reduce/reduce conflicts.",(src/lr1.ml[711,21294+29]..src/lr1.ml[711,21294+69]) ghost,None)
                          expression (src/lr1.ml[711,21294+29]..src/lr1.ml[711,21294+69]) ghost
                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                            []
                        ]
                      expression (src/lr1.ml[711,21294+29]..src/lr1.ml[711,21294+69]) ghost
                        Texp_constant Const_string("one state has reduce/reduce conflicts.",(src/lr1.ml[711,21294+29]..src/lr1.ml[711,21294+69]) ghost,None)
                    ]
              ]
            Some
              expression (src/lr1.ml[712,21364+7]..src/lr1.ml[714,21469+20])
                Texp_ifthenelse
                expression (src/lr1.ml[712,21364+10]..src/lr1.ml[712,21364+28])
                  Texp_apply
                  expression (src/lr1.ml[712,21364+25]..src/lr1.ml[712,21364+26])
                    Texp_ident "Stdlib!.>"
                  [
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[712,21364+10]..src/lr1.ml[712,21364+24])
                        Texp_apply
                        expression (src/lr1.ml[712,21364+10]..src/lr1.ml[712,21364+11])
                          Texp_ident "Stdlib!.!"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[712,21364+11]..src/lr1.ml[712,21364+24])
                              Texp_ident "reduce_reduce/987"
                        ]
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[712,21364+27]..src/lr1.ml[712,21364+28])
                        Texp_constant Const_int 1
                  ]
                expression (src/lr1.ml[713,21398+4]..src/lr1.ml[714,21469+20])
                  Texp_apply
                  expression (src/lr1.ml[713,21398+4]..src/lr1.ml[713,21398+25])
                    Texp_ident "Dune__exe!.Error.grammar_warning"
                  [
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[713,21398+26]..src/lr1.ml[713,21398+28])
                        Texp_construct "[]"
                        []
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[713,21398+29]..src/lr1.ml[713,21398+70])
                        Texp_construct "CamlinternalFormatBasics.Format"
                        [
                          expression (src/lr1.ml[713,21398+29]..src/lr1.ml[713,21398+70]) ghost
                            Texp_construct "CamlinternalFormatBasics.Int"
                            [
                              expression (src/lr1.ml[713,21398+29]..src/lr1.ml[713,21398+70]) ghost
                                Texp_construct "CamlinternalFormatBasics.Int_d"
                                []
                              expression (src/lr1.ml[713,21398+29]..src/lr1.ml[713,21398+70]) ghost
                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                []
                              expression (src/lr1.ml[713,21398+29]..src/lr1.ml[713,21398+70]) ghost
                                Texp_construct "CamlinternalFormatBasics.No_precision"
                                []
                              expression (src/lr1.ml[713,21398+29]..src/lr1.ml[713,21398+70]) ghost
                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                [
                                  expression (src/lr1.ml[713,21398+29]..src/lr1.ml[713,21398+70]) ghost
                                    Texp_constant Const_string(" states have reduce/reduce conflicts.",(src/lr1.ml[713,21398+29]..src/lr1.ml[713,21398+70]) ghost,None)
                                  expression (src/lr1.ml[713,21398+29]..src/lr1.ml[713,21398+70]) ghost
                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                    []
                                ]
                            ]
                          expression (src/lr1.ml[713,21398+29]..src/lr1.ml[713,21398+70]) ghost
                            Texp_constant Const_string("%d states have reduce/reduce conflicts.",(src/lr1.ml[713,21398+29]..src/lr1.ml[713,21398+70]) ghost,None)
                        ]
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[714,21469+6]..src/lr1.ml[714,21469+20])
                        Texp_apply
                        expression (src/lr1.ml[714,21469+6]..src/lr1.ml[714,21469+7])
                          Texp_ident "Stdlib!.!"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[714,21469+7]..src/lr1.ml[714,21469+20])
                              Texp_ident "reduce_reduce/987"
                        ]
                  ]
                None
    ]
  structure_item (src/lr1.ml[720,21628+0]..src/lr1.ml[723,21685+3])
    Tstr_module
    Node/1770
      module_expr (src/lr1.ml[720,21628+14]..src/lr1.ml[723,21685+3])
        Tmod_structure
        [
          structure_item (src/lr1.ml[721,21649+2]..src/lr1.ml[721,21649+15])
            Tstr_type Rec
            [
              type_declaration t/1768 (src/lr1.ml[721,21649+2]..src/lr1.ml[721,21649+15])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/lr1.ml[721,21649+11]..src/lr1.ml[721,21649+15])
                      Ttyp_constr "node/642"
                      []
            ]
          structure_item (src/lr1.ml[722,21665+2]..src/lr1.ml[722,21665+19])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/lr1.ml[722,21665+6]..src/lr1.ml[722,21665+13])
                  Tpat_var "compare/1769"
                expression (src/lr1.ml[722,21665+16]..src/lr1.ml[722,21665+19])
                  Texp_ident "Stdlib!.-"
            ]
        ]
  structure_item (src/lr1.ml[725,21690+0]..src/lr1.ml[742,22111+3])
    Tstr_module
    NodeSet/2014
      module_expr (src/lr1.ml[725,21690+17]..src/lr1.ml[742,22111+3])
        Tmod_structure
        [
          structure_item (src/lr1.ml[727,21715+2]..src/lr1.ml[727,21715+24])
            Tstr_include            module_expr (src/lr1.ml[727,21715+10]..src/lr1.ml[727,21715+24])
              Tmod_apply
              module_expr (src/lr1.ml[727,21715+10]..src/lr1.ml[727,21715+18])
                module_expr (src/lr1.ml[727,21715+10]..src/lr1.ml[727,21715+18])
                  Tmod_ident "Stdlib!.Set.Make"
              module_expr (src/lr1.ml[727,21715+19]..src/lr1.ml[727,21715+23])
                Tmod_ident "Node/1770"
          structure_item (src/lr1.ml[734,21922+2]..src/lr1.ml[735,21945+44])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/lr1.ml[734,21922+6]..src/lr1.ml[734,21922+14])
                  Tpat_var "leq_join/1917"
                expression (src/lr1.ml[734,21922+15]..src/lr1.ml[735,21945+44]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/lr1.ml[734,21922+15]..src/lr1.ml[734,21922+17])
                        Tpat_var "s1/1919"
                      expression (src/lr1.ml[734,21922+18]..src/lr1.ml[735,21945+44]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/lr1.ml[734,21922+18]..src/lr1.ml[734,21922+20])
                              Tpat_var "s2/1920"
                            expression (src/lr1.ml[735,21945+4]..src/lr1.ml[735,21945+44])
                              Texp_ifthenelse
                              expression (src/lr1.ml[735,21945+7]..src/lr1.ml[735,21945+19])
                                Texp_apply
                                expression (src/lr1.ml[735,21945+7]..src/lr1.ml[735,21945+13])
                                  Texp_ident "subset/1907"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/lr1.ml[735,21945+14]..src/lr1.ml[735,21945+16])
                                      Texp_ident "s1/1919"
                                  <arg>
                                    Nolabel
                                    expression (src/lr1.ml[735,21945+17]..src/lr1.ml[735,21945+19])
                                      Texp_ident "s2/1920"
                                ]
                              expression (src/lr1.ml[735,21945+25]..src/lr1.ml[735,21945+27])
                                Texp_ident "s2/1920"
                              Some
                                expression (src/lr1.ml[735,21945+33]..src/lr1.ml[735,21945+44])
                                  Texp_apply
                                  expression (src/lr1.ml[735,21945+33]..src/lr1.ml[735,21945+38])
                                    Texp_ident "union/1878"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[735,21945+39]..src/lr1.ml[735,21945+41])
                                        Texp_ident "s1/1919"
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[735,21945+42]..src/lr1.ml[735,21945+44])
                                        Texp_ident "s2/1920"
                                  ]
                        ]
                  ]
            ]
          structure_item (src/lr1.ml[737,21991+2]..src/lr1.ml[740,22104+5])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/lr1.ml[737,21991+6]..src/lr1.ml[737,21991+11])
                  Tpat_var "print/2011"
                expression (src/lr1.ml[737,21991+12]..src/lr1.ml[740,22104+5]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/lr1.ml[737,21991+12]..src/lr1.ml[737,21991+13])
                        Tpat_var "s/2012"
                      expression (src/lr1.ml[738,22007+4]..src/lr1.ml[740,22104+5])
                        Texp_apply
                        expression (src/lr1.ml[738,22007+4]..src/lr1.ml[738,22007+18])
                          Texp_ident "Stdlib!.Printf.sprintf"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[738,22007+19]..src/lr1.ml[738,22007+27])
                              Texp_construct "CamlinternalFormatBasics.Format"
                              [
                                expression (src/lr1.ml[738,22007+19]..src/lr1.ml[738,22007+27]) ghost
                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                  [
                                    expression (src/lr1.ml[738,22007+19]..src/lr1.ml[738,22007+27]) ghost
                                      Texp_constant Const_string("{ ",(src/lr1.ml[738,22007+19]..src/lr1.ml[738,22007+27]) ghost,None)
                                    expression (src/lr1.ml[738,22007+19]..src/lr1.ml[738,22007+27]) ghost
                                      Texp_construct "CamlinternalFormatBasics.String"
                                      [
                                        expression (src/lr1.ml[738,22007+19]..src/lr1.ml[738,22007+27]) ghost
                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                          []
                                        expression (src/lr1.ml[738,22007+19]..src/lr1.ml[738,22007+27]) ghost
                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                          [
                                            expression (src/lr1.ml[738,22007+19]..src/lr1.ml[738,22007+27]) ghost
                                              Texp_constant Const_string(" }",(src/lr1.ml[738,22007+19]..src/lr1.ml[738,22007+27]) ghost,None)
                                            expression (src/lr1.ml[738,22007+19]..src/lr1.ml[738,22007+27]) ghost
                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                              []
                                          ]
                                      ]
                                  ]
                                expression (src/lr1.ml[738,22007+19]..src/lr1.ml[738,22007+27]) ghost
                                  Texp_constant Const_string("{ %s }",(src/lr1.ml[738,22007+19]..src/lr1.ml[738,22007+27]) ghost,None)
                              ]
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[738,22007+28]..src/lr1.ml[740,22104+5])
                              Texp_apply
                              expression (src/lr1.ml[739,22037+6]..src/lr1.ml[739,22037+35])
                                Texp_ident "Dune__exe!.Misc.separated_iter_to_string"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[739,22037+36]..src/lr1.ml[739,22037+41])
                                    Texp_ident "print/1443"
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[739,22037+42]..src/lr1.ml[739,22037+46])
                                    Texp_constant Const_string(", ",(src/lr1.ml[739,22037+43]..src/lr1.ml[739,22037+45]),None)
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[739,22037+47]..src/lr1.ml[739,22037+66])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/lr1.ml[739,22037+52]..src/lr1.ml[739,22037+53])
                                          Tpat_var "f/2013"
                                        expression (src/lr1.ml[739,22037+57]..src/lr1.ml[739,22037+65])
                                          Texp_apply
                                          expression (src/lr1.ml[739,22037+57]..src/lr1.ml[739,22037+61])
                                            Texp_ident "iter/1896"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[739,22037+62]..src/lr1.ml[739,22037+63])
                                                Texp_ident "f/2013"
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[739,22037+64]..src/lr1.ml[739,22037+65])
                                                Texp_ident "s/2012"
                                          ]
                                    ]
                              ]
                        ]
                  ]
            ]
        ]
  structure_item (src/lr1.ml[744,22116+0]..src/lr1.ml[745,22133+16])
    Tstr_module
    NodeMap/2116
      module_expr (src/lr1.ml[745,22133+2]..src/lr1.ml[745,22133+16])
        Tmod_apply
        module_expr (src/lr1.ml[745,22133+2]..src/lr1.ml[745,22133+10])
          module_expr (src/lr1.ml[745,22133+2]..src/lr1.ml[745,22133+10])
            Tmod_ident "Stdlib!.Map.Make"
        module_expr (src/lr1.ml[745,22133+11]..src/lr1.ml[745,22133+15])
          Tmod_ident "Node/1770"
  structure_item (src/lr1.ml[747,22151+0]..src/lr1.ml[748,22178+55])
    Tstr_module
    ImperativeNodeMap/2250
      module_expr (src/lr1.ml[748,22178+2]..src/lr1.ml[748,22178+55])
        Tmod_apply
        module_expr (src/lr1.ml[748,22178+2]..src/lr1.ml[748,22178+33])
          module_expr (src/lr1.ml[748,22178+2]..src/lr1.ml[748,22178+33])
            Tmod_ident "Dune__exe!.Fix.Glue.ArraysAsImperativeMaps"
        module_expr (src/lr1.ml[748,22178+34]..src/lr1.ml[748,22178+54])
          Tmod_structure
          [
            structure_item (src/lr1.ml[748,22178+41]..src/lr1.ml[748,22178+50])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/lr1.ml[748,22178+45]..src/lr1.ml[748,22178+46])
                    Tpat_var "n/2117"
                  expression (src/lr1.ml[748,22178+49]..src/lr1.ml[748,22178+50])
                    Texp_ident "n/1426"
              ]
          ]
  structure_item (src/lr1.ml[750,22235+0]..src/lr1.ml[753,22376+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[750,22235+4]..src/lr1.ml[750,22235+15])
          Tpat_var "all_sources/2251"
        expression (src/lr1.ml[750,22235+16]..src/lr1.ml[753,22376+24]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[750,22235+16]..src/lr1.ml[750,22235+22])
                Tpat_var "symbol/2253"
              expression (src/lr1.ml[751,22260+2]..src/lr1.ml[753,22376+24])
                Texp_apply
                expression (src/lr1.ml[751,22260+2]..src/lr1.ml[751,22260+9])
                  Texp_ident "targets/1606"
                [
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[751,22260+10]..src/lr1.ml[753,22376+3])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/lr1.ml[751,22260+15]..src/lr1.ml[751,22260+19])
                            Tpat_var "accu/2254"
                          expression (src/lr1.ml[751,22260+20]..src/lr1.ml[752,22299+76]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/lr1.ml[751,22260+20]..src/lr1.ml[751,22260+27])
                                  Tpat_var "sources/2255"
                                expression (src/lr1.ml[751,22260+28]..src/lr1.ml[752,22299+76]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/lr1.ml[751,22260+28]..src/lr1.ml[751,22260+35])
                                        Tpat_var "_target/2256"
                                      expression (src/lr1.ml[752,22299+4]..src/lr1.ml[752,22299+76])
                                        Texp_apply
                                        expression (src/lr1.ml[752,22299+4]..src/lr1.ml[752,22299+18])
                                          Texp_ident "Stdlib!.List.fold_left"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[752,22299+19]..src/lr1.ml[752,22299+63])
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/lr1.ml[752,22299+24]..src/lr1.ml[752,22299+28])
                                                    Tpat_var "accu/2257"
                                                  expression (src/lr1.ml[752,22299+29]..src/lr1.ml[752,22299+62]) ghost
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (src/lr1.ml[752,22299+29]..src/lr1.ml[752,22299+35])
                                                          Tpat_var "source/2258"
                                                        expression (src/lr1.ml[752,22299+39]..src/lr1.ml[752,22299+62])
                                                          Texp_apply
                                                          expression (src/lr1.ml[752,22299+39]..src/lr1.ml[752,22299+50])
                                                            Texp_ident "NodeSet/2014.add"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/lr1.ml[752,22299+51]..src/lr1.ml[752,22299+57])
                                                                Texp_ident "source/2258"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/lr1.ml[752,22299+58]..src/lr1.ml[752,22299+62])
                                                                Texp_ident "accu/2257"
                                                          ]
                                                    ]
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[752,22299+64]..src/lr1.ml[752,22299+68])
                                              Texp_ident "accu/2254"
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[752,22299+69]..src/lr1.ml[752,22299+76])
                                              Texp_ident "sources/2255"
                                        ]
                                  ]
                            ]
                      ]
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[753,22376+4]..src/lr1.ml[753,22376+17])
                      Texp_ident "NodeSet/2014.empty"
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[753,22376+18]..src/lr1.ml[753,22376+24])
                      Texp_ident "symbol/2253"
                ]
          ]
    ]
  structure_item (src/lr1.ml[755,22402+0]..src/lr1.ml[758,22494+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[755,22402+4]..src/lr1.ml[755,22402+15])
          Tpat_var "all_targets/2259"
        expression (src/lr1.ml[755,22402+16]..src/lr1.ml[758,22494+24]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[755,22402+16]..src/lr1.ml[755,22402+22])
                Tpat_var "symbol/2261"
              expression (src/lr1.ml[756,22427+2]..src/lr1.ml[758,22494+24])
                Texp_apply
                expression (src/lr1.ml[756,22427+2]..src/lr1.ml[756,22427+9])
                  Texp_ident "targets/1606"
                [
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[756,22427+10]..src/lr1.ml[758,22494+3])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/lr1.ml[756,22427+15]..src/lr1.ml[756,22427+19])
                            Tpat_var "accu/2262"
                          expression (src/lr1.ml[756,22427+20]..src/lr1.ml[757,22466+27]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/lr1.ml[756,22427+20]..src/lr1.ml[756,22427+28])
                                  Tpat_var "_sources/2263"
                                expression (src/lr1.ml[756,22427+29]..src/lr1.ml[757,22466+27]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/lr1.ml[756,22427+29]..src/lr1.ml[756,22427+35])
                                        Tpat_var "target/2264"
                                      expression (src/lr1.ml[757,22466+4]..src/lr1.ml[757,22466+27])
                                        Texp_apply
                                        expression (src/lr1.ml[757,22466+4]..src/lr1.ml[757,22466+15])
                                          Texp_ident "NodeSet/2014.add"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[757,22466+16]..src/lr1.ml[757,22466+22])
                                              Texp_ident "target/2264"
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[757,22466+23]..src/lr1.ml[757,22466+27])
                                              Texp_ident "accu/2262"
                                        ]
                                  ]
                            ]
                      ]
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[758,22494+4]..src/lr1.ml[758,22494+17])
                      Texp_ident "NodeSet/2014.empty"
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[758,22494+18]..src/lr1.ml[758,22494+24])
                      Texp_ident "symbol/2261"
                ]
          ]
    ]
  structure_item (src/lr1.ml[767,22900+0]..src/lr1.ml[768,22962+10])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[767,22900+4]..src/lr1.ml[767,22900+20])
          extra
            Tpat_extra_constraint
            core_type (src/lr1.ml[767,22900+23]..src/lr1.ml[767,22900+59])
              Ttyp_constr "Stdlib!.ref"
              [
                core_type (src/lr1.ml[767,22900+23]..src/lr1.ml[767,22900+55])
                  Ttyp_constr "option/10!"
                  [
                    core_type (src/lr1.ml[767,22900+23]..src/lr1.ml[767,22900+48])
                      Ttyp_constr "Dune__exe!.Grammar.ProductionMap.t"
                      [
                        core_type (src/lr1.ml[767,22900+23]..src/lr1.ml[767,22900+32])
                          Ttyp_constr "NodeSet/2014.t"
                          []
                      ]
                  ]
              ]
          Tpat_alias "production_where/2265"
          pattern (src/lr1.ml[767,22900+4]..src/lr1.ml[767,22900+20])
            Tpat_any
        expression (src/lr1.ml[768,22962+2]..src/lr1.ml[768,22962+10])
          extra
            Texp_constraint
            core_type (src/lr1.ml[767,22900+23]..src/lr1.ml[767,22900+59])
              Ttyp_constr "Stdlib!.ref"
              [
                core_type (src/lr1.ml[767,22900+23]..src/lr1.ml[767,22900+55])
                  Ttyp_constr "option/10!"
                  [
                    core_type (src/lr1.ml[767,22900+23]..src/lr1.ml[767,22900+48])
                      Ttyp_constr "Dune__exe!.Grammar.ProductionMap.t"
                      [
                        core_type (src/lr1.ml[767,22900+23]..src/lr1.ml[767,22900+32])
                          Ttyp_constr "NodeSet/2014.t"
                          []
                      ]
                  ]
              ]
          Texp_apply
          expression (src/lr1.ml[768,22962+2]..src/lr1.ml[768,22962+5])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[768,22962+6]..src/lr1.ml[768,22962+10])
                Texp_construct "None"
                []
          ]
    ]
  structure_item (src/lr1.ml[770,22974+0]..src/lr1.ml[784,23411+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[770,22974+4]..src/lr1.ml[770,22974+31])
          Tpat_var "initialize_production_where/2266"
        expression (src/lr1.ml[770,22974+32]..src/lr1.ml[784,23411+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[770,22974+32]..src/lr1.ml[770,22974+34])
                Tpat_construct "()"
                []
                None
              expression (src/lr1.ml[771,23011+2]..src/lr1.ml[784,23411+3])
                Texp_apply
                expression (src/lr1.ml[771,23011+19]..src/lr1.ml[771,23011+21])
                  Texp_ident "Stdlib!.:="
                [
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[771,23011+2]..src/lr1.ml[771,23011+18])
                      Texp_ident "production_where/2265"
                  <arg>
                    Nolabel
                    expression (src/lr1.ml[771,23011+22]..src/lr1.ml[784,23411+3])
                      Texp_construct "Some"
                      [
                        expression (src/lr1.ml[771,23011+27]..src/lr1.ml[784,23411+3])
                          Texp_apply
                          expression (src/lr1.ml[772,23040+4]..src/lr1.ml[772,23040+8])
                            Texp_ident "fold/1568"
                          [
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[772,23040+9]..src/lr1.ml[783,23385+5])
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/lr1.ml[772,23040+14]..src/lr1.ml[772,23040+18])
                                      Tpat_var "accu/2268"
                                    expression (src/lr1.ml[772,23040+19]..src/lr1.ml[782,23354+30]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (src/lr1.ml[772,23040+19]..src/lr1.ml[772,23040+23])
                                            Tpat_var "node/2269"
                                          expression (src/lr1.ml[773,23067+6]..src/lr1.ml[782,23354+30])
                                            Texp_apply
                                            expression (src/lr1.ml[773,23067+6]..src/lr1.ml[773,23067+22])
                                              Texp_ident "Dune__exe!.Grammar.TerminalMap.fold"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/lr1.ml[773,23067+23]..src/lr1.ml[782,23354+7])
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (src/lr1.ml[773,23067+28]..src/lr1.ml[773,23067+29])
                                                        Tpat_any
                                                      expression (src/lr1.ml[773,23067+30]..src/lr1.ml[781,23293+60]) ghost
                                                        Texp_function
                                                        Nolabel
                                                        [
                                                          <case>
                                                            pattern (src/lr1.ml[773,23067+30]..src/lr1.ml[773,23067+35])
                                                              Tpat_var "prods/2270"
                                                            expression (src/lr1.ml[773,23067+36]..src/lr1.ml[781,23293+60]) ghost
                                                              Texp_function
                                                              Nolabel
                                                              [
                                                                <case>
                                                                  pattern (src/lr1.ml[773,23067+36]..src/lr1.ml[773,23067+40])
                                                                    Tpat_var "accu/2271"
                                                                  expression (src/lr1.ml[774,23111+8]..src/lr1.ml[781,23293+60])
                                                                    Texp_let Nonrec
                                                                    [
                                                                      <def>
                                                                        pattern (src/lr1.ml[774,23111+12]..src/lr1.ml[774,23111+16])
                                                                          Tpat_var "prod/2272"
                                                                        expression (src/lr1.ml[774,23111+19]..src/lr1.ml[774,23111+36])
                                                                          Texp_apply
                                                                          expression (src/lr1.ml[774,23111+19]..src/lr1.ml[774,23111+30])
                                                                            Texp_ident "Dune__exe!.Misc.single"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/lr1.ml[774,23111+31]..src/lr1.ml[774,23111+36])
                                                                                Texp_ident "prods/2270"
                                                                          ]
                                                                    ]
                                                                    expression (src/lr1.ml[775,23151+8]..src/lr1.ml[781,23293+60])
                                                                      Texp_let Nonrec
                                                                      [
                                                                        <def>
                                                                          pattern (src/lr1.ml[775,23151+12]..src/lr1.ml[775,23151+17])
                                                                            Tpat_var "nodes/2273"
                                                                          expression (src/lr1.ml[776,23171+10]..src/lr1.ml[779,23256+25])
                                                                            Texp_try
                                                                            expression (src/lr1.ml[777,23185+12]..src/lr1.ml[777,23185+42])
                                                                              Texp_apply
                                                                              expression (src/lr1.ml[777,23185+12]..src/lr1.ml[777,23185+32])
                                                                                Texp_ident "Dune__exe!.Grammar.ProductionMap.lookup"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr1.ml[777,23185+33]..src/lr1.ml[777,23185+37])
                                                                                    Texp_ident "prod/2272"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr1.ml[777,23185+38]..src/lr1.ml[777,23185+42])
                                                                                    Texp_ident "accu/2271"
                                                                              ]
                                                                            [
                                                                              <case>
                                                                                pattern (src/lr1.ml[778,23228+15]..src/lr1.ml[778,23228+24])
                                                                                  Tpat_construct "Not_found"
                                                                                  []
                                                                                  None
                                                                                expression (src/lr1.ml[779,23256+12]..src/lr1.ml[779,23256+25])
                                                                                  Texp_ident "NodeSet/2014.empty"
                                                                            ]
                                                                      ]
                                                                      expression (src/lr1.ml[781,23293+8]..src/lr1.ml[781,23293+60])
                                                                        Texp_apply
                                                                        expression (src/lr1.ml[781,23293+8]..src/lr1.ml[781,23293+25])
                                                                          Texp_ident "Dune__exe!.Grammar.ProductionMap.add"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/lr1.ml[781,23293+26]..src/lr1.ml[781,23293+30])
                                                                              Texp_ident "prod/2272"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/lr1.ml[781,23293+31]..src/lr1.ml[781,23293+55])
                                                                              Texp_apply
                                                                              expression (src/lr1.ml[781,23293+32]..src/lr1.ml[781,23293+43])
                                                                                Texp_ident "NodeSet/2014.add"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr1.ml[781,23293+44]..src/lr1.ml[781,23293+48])
                                                                                    Texp_ident "node/2269"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr1.ml[781,23293+49]..src/lr1.ml[781,23293+54])
                                                                                    Texp_ident "nodes/2273"
                                                                              ]
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/lr1.ml[781,23293+56]..src/lr1.ml[781,23293+60])
                                                                              Texp_ident "accu/2271"
                                                                        ]
                                                              ]
                                                        ]
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (src/lr1.ml[782,23354+8]..src/lr1.ml[782,23354+25])
                                                  Texp_apply
                                                  expression (src/lr1.ml[782,23354+9]..src/lr1.ml[782,23354+19])
                                                    Texp_ident "reductions/1456"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/lr1.ml[782,23354+20]..src/lr1.ml[782,23354+24])
                                                        Texp_ident "node/2269"
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (src/lr1.ml[782,23354+26]..src/lr1.ml[782,23354+30])
                                                  Texp_ident "accu/2268"
                                            ]
                                      ]
                                ]
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[783,23385+6]..src/lr1.ml[783,23385+25])
                                Texp_ident "Dune__exe!.Grammar.ProductionMap.empty"
                          ]
                      ]
                ]
          ]
    ]
  structure_item (src/lr1.ml[786,23416+0]..src/lr1.ml[799,23919+21])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[786,23416+4]..src/lr1.ml[786,23416+20])
          Tpat_var "production_where/2276"
        expression (src/lr1.ml[786,23416+21]..src/lr1.ml[799,23919+21]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[786,23416+22]..src/lr1.ml[786,23416+26])
                extra
                  Tpat_extra_constraint
                  core_type (src/lr1.ml[786,23416+29]..src/lr1.ml[786,23416+45])
                    Ttyp_constr "Dune__exe!.Grammar.Production.index"
                    []
                Tpat_alias "prod/2277"
                pattern (src/lr1.ml[786,23416+22]..src/lr1.ml[786,23416+26])
                  Tpat_any
              expression (src/lr1.ml[787,23477+2]..src/lr1.ml[799,23919+21])
                extra
                  Texp_constraint
                  core_type (src/lr1.ml[786,23416+49]..src/lr1.ml[786,23416+58])
                    Ttyp_constr "NodeSet/2014.t"
                    []
                Texp_match
                expression (src/lr1.ml[787,23477+8]..src/lr1.ml[787,23477+25])
                  Texp_apply
                  expression (src/lr1.ml[787,23477+8]..src/lr1.ml[787,23477+9])
                    Texp_ident "Stdlib!.!"
                  [
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[787,23477+9]..src/lr1.ml[787,23477+25])
                        Texp_ident "production_where/2265"
                  ]
                [
                  <case>
                    pattern (src/lr1.ml[788,23508+4]..src/lr1.ml[788,23508+8])
                      Tpat_value
                      pattern (src/lr1.ml[788,23508+4]..src/lr1.ml[788,23508+8])
                        Tpat_construct "None"
                        []
                        None
                    expression (src/lr1.ml[790,23597+6]..src/lr1.ml[790,23597+18])
                      Texp_assert                      expression (src/lr1.ml[790,23597+13]..src/lr1.ml[790,23597+18])
                        Texp_construct "false"
                        []
                  <case>
                    pattern (src/lr1.ml[791,23616+4]..src/lr1.ml[791,23616+25])
                      Tpat_value
                      pattern (src/lr1.ml[791,23616+4]..src/lr1.ml[791,23616+25])
                        Tpat_construct "Some"
                        [
                          pattern (src/lr1.ml[791,23616+9]..src/lr1.ml[791,23616+25])
                            Tpat_var "production_where/2278"
                        ]
                        None
                    expression (src/lr1.ml[792,23645+6]..src/lr1.ml[799,23919+21])
                      Texp_try
                      expression (src/lr1.ml[794,23714+8]..src/lr1.ml[796,23827+13])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/lr1.ml[794,23714+12]..src/lr1.ml[794,23714+17])
                              Tpat_var "nodes/2279"
                            expression (src/lr1.ml[794,23714+20]..src/lr1.ml[794,23714+62])
                              Texp_apply
                              expression (src/lr1.ml[794,23714+20]..src/lr1.ml[794,23714+40])
                                Texp_ident "Dune__exe!.Grammar.ProductionMap.lookup"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[794,23714+41]..src/lr1.ml[794,23714+45])
                                    Texp_ident "prod/2277"
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[794,23714+46]..src/lr1.ml[794,23714+62])
                                    Texp_ident "production_where/2278"
                              ]
                        ]
                        expression (src/lr1.ml[795,23780+8]..src/lr1.ml[796,23827+13])
                          Texp_sequence
                          expression (src/lr1.ml[795,23780+8]..src/lr1.ml[795,23780+45])
                            Texp_assert                            expression (src/lr1.ml[795,23780+15]..src/lr1.ml[795,23780+45])
                              Texp_apply
                              expression (src/lr1.ml[795,23780+16]..src/lr1.ml[795,23780+19])
                                Texp_ident "Stdlib!.not"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[795,23780+20]..src/lr1.ml[795,23780+44])
                                    Texp_apply
                                    expression (src/lr1.ml[795,23780+21]..src/lr1.ml[795,23780+37])
                                      Texp_ident "NodeSet/2014.is_empty"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[795,23780+38]..src/lr1.ml[795,23780+43])
                                          Texp_ident "nodes/2279"
                                    ]
                              ]
                          expression (src/lr1.ml[796,23827+8]..src/lr1.ml[796,23827+13])
                            Texp_ident "nodes/2279"
                      [
                        <case>
                          pattern (src/lr1.ml[797,23841+11]..src/lr1.ml[797,23841+20])
                            Tpat_construct "Not_found"
                            []
                            None
                          expression (src/lr1.ml[799,23919+8]..src/lr1.ml[799,23919+21])
                            Texp_ident "NodeSet/2014.empty"
                      ]
                ]
          ]
    ]
  structure_item (src/lr1.ml[811,24517+0]..src/lr1.ml[830,25208+73])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[811,24517+4]..src/lr1.ml[811,24517+40])
          Tpat_var "warn_about_productions_never_reduced/2280"
        expression (src/lr1.ml[811,24517+41]..src/lr1.ml[830,25208+73]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[811,24517+41]..src/lr1.ml[811,24517+43])
                Tpat_construct "()"
                []
                None
              expression (src/lr1.ml[812,24563+2]..src/lr1.ml[830,25208+73])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/lr1.ml[812,24563+6]..src/lr1.ml[812,24563+11])
                      Tpat_var "count/2282"
                    expression (src/lr1.ml[812,24563+14]..src/lr1.ml[812,24563+19])
                      Texp_apply
                      expression (src/lr1.ml[812,24563+14]..src/lr1.ml[812,24563+17])
                        Texp_ident "Stdlib!.ref"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[812,24563+18]..src/lr1.ml[812,24563+19])
                            Texp_constant Const_int 0
                      ]
                ]
                expression (src/lr1.ml[813,24586+2]..src/lr1.ml[830,25208+73])
                  Texp_sequence
                  expression (src/lr1.ml[813,24586+2]..src/lr1.ml[826,25076+3])
                    Texp_apply
                    expression (src/lr1.ml[813,24586+2]..src/lr1.ml[813,24586+17])
                      Texp_ident "Dune__exe!.Grammar.Production.iter"
                    [
                      <arg>
                        Nolabel
                        expression (src/lr1.ml[813,24586+18]..src/lr1.ml[826,25076+3])
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/lr1.ml[813,24586+23]..src/lr1.ml[813,24586+27])
                                Tpat_var "prod/2283"
                              expression (src/lr1.ml[814,24617+4]..src/lr1.ml[825,25006+69])
                                Texp_ifthenelse
                                expression (src/lr1.ml[814,24617+7]..src/lr1.ml[814,24617+47])
                                  Texp_apply
                                  expression (src/lr1.ml[814,24617+7]..src/lr1.ml[814,24617+23])
                                    Texp_ident "NodeSet/2014.is_empty"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[814,24617+24]..src/lr1.ml[814,24617+47])
                                        Texp_apply
                                        expression (src/lr1.ml[814,24617+25]..src/lr1.ml[814,24617+41])
                                          Texp_ident "production_where/2276"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[814,24617+42]..src/lr1.ml[814,24617+46])
                                              Texp_ident "prod/2283"
                                        ]
                                  ]
                                expression (src/lr1.ml[815,24670+6]..src/lr1.ml[825,25006+69])
                                  Texp_match
                                  expression (src/lr1.ml[815,24670+12]..src/lr1.ml[815,24670+36])
                                    Texp_apply
                                    expression (src/lr1.ml[815,24670+12]..src/lr1.ml[815,24670+31])
                                      Texp_ident "Dune__exe!.Grammar.Production.classify"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[815,24670+32]..src/lr1.ml[815,24670+36])
                                          Texp_ident "prod/2283"
                                    ]
                                  [
                                    <case>
                                      pattern (src/lr1.ml[816,24712+8]..src/lr1.ml[816,24712+15])
                                        Tpat_value
                                        pattern (src/lr1.ml[816,24712+8]..src/lr1.ml[816,24712+15])
                                          Tpat_construct "Some"
                                          [
                                            pattern (src/lr1.ml[816,24712+13]..src/lr1.ml[816,24712+15])
                                              Tpat_var "nt/2284"
                                          ]
                                          None
                                      expression (src/lr1.ml[817,24731+10]..src/lr1.ml[820,24824+71])
                                        Texp_sequence
                                        expression (src/lr1.ml[817,24731+10]..src/lr1.ml[817,24731+20])
                                          Texp_apply
                                          expression (src/lr1.ml[817,24731+10]..src/lr1.ml[817,24731+14])
                                            Texp_ident "Stdlib!.incr"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[817,24731+15]..src/lr1.ml[817,24731+20])
                                                Texp_ident "count/2282"
                                          ]
                                        expression (src/lr1.ml[818,24753+10]..src/lr1.ml[820,24824+71])
                                          Texp_apply
                                          expression (src/lr1.ml[818,24753+10]..src/lr1.ml[818,24753+31])
                                            Texp_ident "Dune__exe!.Error.grammar_warning"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[819,24785+12]..src/lr1.ml[819,24785+38])
                                                Texp_apply
                                                expression (src/lr1.ml[819,24785+13]..src/lr1.ml[819,24785+34])
                                                  Texp_ident "Dune__exe!.Grammar.Nonterminal.positions"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr1.ml[819,24785+35]..src/lr1.ml[819,24785+37])
                                                      Texp_ident "nt/2284"
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[820,24824+12]..src/lr1.ml[820,24824+42])
                                                Texp_construct "CamlinternalFormatBasics.Format"
                                                [
                                                  expression (src/lr1.ml[820,24824+12]..src/lr1.ml[820,24824+42]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                    [
                                                      expression (src/lr1.ml[820,24824+12]..src/lr1.ml[820,24824+42]) ghost
                                                        Texp_constant Const_string("symbol ",(src/lr1.ml[820,24824+12]..src/lr1.ml[820,24824+42]) ghost,None)
                                                      expression (src/lr1.ml[820,24824+12]..src/lr1.ml[820,24824+42]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.String"
                                                        [
                                                          expression (src/lr1.ml[820,24824+12]..src/lr1.ml[820,24824+42]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                            []
                                                          expression (src/lr1.ml[820,24824+12]..src/lr1.ml[820,24824+42]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                            [
                                                              expression (src/lr1.ml[820,24824+12]..src/lr1.ml[820,24824+42]) ghost
                                                                Texp_constant Const_string(" is never accepted.",(src/lr1.ml[820,24824+12]..src/lr1.ml[820,24824+42]) ghost,None)
                                                              expression (src/lr1.ml[820,24824+12]..src/lr1.ml[820,24824+42]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                []
                                                            ]
                                                        ]
                                                    ]
                                                  expression (src/lr1.ml[820,24824+12]..src/lr1.ml[820,24824+42]) ghost
                                                    Texp_constant Const_string("symbol %s is never accepted.",(src/lr1.ml[820,24824+12]..src/lr1.ml[820,24824+42]) ghost,None)
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[820,24824+43]..src/lr1.ml[820,24824+71])
                                                Texp_apply
                                                expression (src/lr1.ml[820,24824+44]..src/lr1.ml[820,24824+61])
                                                  Texp_ident "Dune__exe!.Grammar.Nonterminal.print"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr1.ml[820,24824+62]..src/lr1.ml[820,24824+67])
                                                      Texp_construct "false"
                                                      []
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr1.ml[820,24824+68]..src/lr1.ml[820,24824+70])
                                                      Texp_ident "nt/2284"
                                                ]
                                          ]
                                    <case>
                                      pattern (src/lr1.ml[821,24896+8]..src/lr1.ml[821,24896+12])
                                        Tpat_value
                                        pattern (src/lr1.ml[821,24896+8]..src/lr1.ml[821,24896+12])
                                          Tpat_construct "None"
                                          []
                                          None
                                      expression (src/lr1.ml[822,24912+10]..src/lr1.ml[825,25006+69])
                                        Texp_sequence
                                        expression (src/lr1.ml[822,24912+10]..src/lr1.ml[822,24912+20])
                                          Texp_apply
                                          expression (src/lr1.ml[822,24912+10]..src/lr1.ml[822,24912+14])
                                            Texp_ident "Stdlib!.incr"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[822,24912+15]..src/lr1.ml[822,24912+20])
                                                Texp_ident "count/2282"
                                          ]
                                        expression (src/lr1.ml[823,24934+10]..src/lr1.ml[825,25006+69])
                                          Texp_apply
                                          expression (src/lr1.ml[823,24934+10]..src/lr1.ml[823,24934+31])
                                            Texp_ident "Dune__exe!.Error.grammar_warning"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[824,24966+12]..src/lr1.ml[824,24966+39])
                                                Texp_apply
                                                expression (src/lr1.ml[824,24966+13]..src/lr1.ml[824,24966+33])
                                                  Texp_ident "Dune__exe!.Grammar.Production.positions"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr1.ml[824,24966+34]..src/lr1.ml[824,24966+38])
                                                      Texp_ident "prod/2283"
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[825,25006+12]..src/lr1.ml[825,25006+45])
                                                Texp_construct "CamlinternalFormatBasics.Format"
                                                [
                                                  expression (src/lr1.ml[825,25006+12]..src/lr1.ml[825,25006+45]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                    [
                                                      expression (src/lr1.ml[825,25006+12]..src/lr1.ml[825,25006+45]) ghost
                                                        Texp_constant Const_string("production ",(src/lr1.ml[825,25006+12]..src/lr1.ml[825,25006+45]) ghost,None)
                                                      expression (src/lr1.ml[825,25006+12]..src/lr1.ml[825,25006+45]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.String"
                                                        [
                                                          expression (src/lr1.ml[825,25006+12]..src/lr1.ml[825,25006+45]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                            []
                                                          expression (src/lr1.ml[825,25006+12]..src/lr1.ml[825,25006+45]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                            [
                                                              expression (src/lr1.ml[825,25006+12]..src/lr1.ml[825,25006+45]) ghost
                                                                Texp_constant Const_string(" is never reduced.",(src/lr1.ml[825,25006+12]..src/lr1.ml[825,25006+45]) ghost,None)
                                                              expression (src/lr1.ml[825,25006+12]..src/lr1.ml[825,25006+45]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                []
                                                            ]
                                                        ]
                                                    ]
                                                  expression (src/lr1.ml[825,25006+12]..src/lr1.ml[825,25006+45]) ghost
                                                    Texp_constant Const_string("production %s is never reduced.",(src/lr1.ml[825,25006+12]..src/lr1.ml[825,25006+45]) ghost,None)
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[825,25006+46]..src/lr1.ml[825,25006+69])
                                                Texp_apply
                                                expression (src/lr1.ml[825,25006+47]..src/lr1.ml[825,25006+63])
                                                  Texp_ident "Dune__exe!.Grammar.Production.print"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr1.ml[825,25006+64]..src/lr1.ml[825,25006+68])
                                                      Texp_ident "prod/2283"
                                                ]
                                          ]
                                  ]
                                None
                          ]
                    ]
                  expression (src/lr1.ml[827,25081+2]..src/lr1.ml[830,25208+73])
                    Texp_ifthenelse
                    expression (src/lr1.ml[827,25081+5]..src/lr1.ml[827,25081+15])
                      Texp_apply
                      expression (src/lr1.ml[827,25081+12]..src/lr1.ml[827,25081+13])
                        Texp_ident "Stdlib!.>"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[827,25081+5]..src/lr1.ml[827,25081+11])
                            Texp_apply
                            expression (src/lr1.ml[827,25081+5]..src/lr1.ml[827,25081+6])
                              Texp_ident "Stdlib!.!"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[827,25081+6]..src/lr1.ml[827,25081+11])
                                  Texp_ident "count/2282"
                            ]
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[827,25081+14]..src/lr1.ml[827,25081+15])
                            Texp_constant Const_int 0
                      ]
                    expression (src/lr1.ml[828,25102+4]..src/lr1.ml[830,25208+73])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/lr1.ml[828,25102+8]..src/lr1.ml[828,25102+23])
                            Tpat_tuple
                            [
                              pattern (src/lr1.ml[828,25102+8]..src/lr1.ml[828,25102+19])
                                Tpat_var "plural_mark/2305"
                              pattern (src/lr1.ml[828,25102+21]..src/lr1.ml[828,25102+23])
                                Tpat_var "be/2306"
                            ]
                          expression (src/lr1.ml[828,25102+26]..src/lr1.ml[828,25102+73])
                            Texp_ifthenelse
                            expression (src/lr1.ml[828,25102+29]..src/lr1.ml[828,25102+39])
                              Texp_apply
                              expression (src/lr1.ml[828,25102+36]..src/lr1.ml[828,25102+37])
                                Texp_ident "Stdlib!.>"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[828,25102+29]..src/lr1.ml[828,25102+35])
                                    Texp_apply
                                    expression (src/lr1.ml[828,25102+29]..src/lr1.ml[828,25102+30])
                                      Texp_ident "Stdlib!.!"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[828,25102+30]..src/lr1.ml[828,25102+35])
                                          Texp_ident "count/2282"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[828,25102+38]..src/lr1.ml[828,25102+39])
                                    Texp_constant Const_int 1
                              ]
                            expression (src/lr1.ml[828,25102+45]..src/lr1.ml[828,25102+57])
                              Texp_tuple
                              [
                                expression (src/lr1.ml[828,25102+46]..src/lr1.ml[828,25102+49])
                                  Texp_constant Const_string("s",(src/lr1.ml[828,25102+47]..src/lr1.ml[828,25102+48]),None)
                                expression (src/lr1.ml[828,25102+51]..src/lr1.ml[828,25102+56])
                                  Texp_constant Const_string("are",(src/lr1.ml[828,25102+52]..src/lr1.ml[828,25102+55]),None)
                              ]
                            Some
                              expression (src/lr1.ml[828,25102+63]..src/lr1.ml[828,25102+73])
                                Texp_tuple
                                [
                                  expression (src/lr1.ml[828,25102+64]..src/lr1.ml[828,25102+66])
                                    Texp_constant Const_string("",(src/lr1.ml[828,25102+65]..src/lr1.ml[828,25102+65]),None)
                                  expression (src/lr1.ml[828,25102+68]..src/lr1.ml[828,25102+72])
                                    Texp_constant Const_string("is",(src/lr1.ml[828,25102+69]..src/lr1.ml[828,25102+71]),None)
                                ]
                      ]
                      expression (src/lr1.ml[829,25179+4]..src/lr1.ml[830,25208+73])
                        Texp_apply
                        expression (src/lr1.ml[829,25179+4]..src/lr1.ml[829,25179+25])
                          Texp_ident "Dune__exe!.Error.grammar_warning"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[829,25179+26]..src/lr1.ml[829,25179+28])
                              Texp_construct "[]"
                              []
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[830,25208+6]..src/lr1.ml[830,25208+51])
                              Texp_construct "CamlinternalFormatBasics.Format"
                              [
                                expression (src/lr1.ml[830,25208+6]..src/lr1.ml[830,25208+51]) ghost
                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                  [
                                    expression (src/lr1.ml[830,25208+6]..src/lr1.ml[830,25208+51]) ghost
                                      Texp_constant Const_string("in total, ",(src/lr1.ml[830,25208+6]..src/lr1.ml[830,25208+51]) ghost,None)
                                    expression (src/lr1.ml[830,25208+6]..src/lr1.ml[830,25208+51]) ghost
                                      Texp_construct "CamlinternalFormatBasics.Int"
                                      [
                                        expression (src/lr1.ml[830,25208+6]..src/lr1.ml[830,25208+51]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Int_d"
                                          []
                                        expression (src/lr1.ml[830,25208+6]..src/lr1.ml[830,25208+51]) ghost
                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                          []
                                        expression (src/lr1.ml[830,25208+6]..src/lr1.ml[830,25208+51]) ghost
                                          Texp_construct "CamlinternalFormatBasics.No_precision"
                                          []
                                        expression (src/lr1.ml[830,25208+6]..src/lr1.ml[830,25208+51]) ghost
                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                          [
                                            expression (src/lr1.ml[830,25208+6]..src/lr1.ml[830,25208+51]) ghost
                                              Texp_constant Const_string(" production",(src/lr1.ml[830,25208+6]..src/lr1.ml[830,25208+51]) ghost,None)
                                            expression (src/lr1.ml[830,25208+6]..src/lr1.ml[830,25208+51]) ghost
                                              Texp_construct "CamlinternalFormatBasics.String"
                                              [
                                                expression (src/lr1.ml[830,25208+6]..src/lr1.ml[830,25208+51]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                  []
                                                expression (src/lr1.ml[830,25208+6]..src/lr1.ml[830,25208+51]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                  [
                                                    expression (src/lr1.ml[830,25208+6]..src/lr1.ml[830,25208+51]) ghost
                                                      Texp_constant Const_char 20
                                                    expression (src/lr1.ml[830,25208+6]..src/lr1.ml[830,25208+51]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.String"
                                                      [
                                                        expression (src/lr1.ml[830,25208+6]..src/lr1.ml[830,25208+51]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                                          []
                                                        expression (src/lr1.ml[830,25208+6]..src/lr1.ml[830,25208+51]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                                          [
                                                            expression (src/lr1.ml[830,25208+6]..src/lr1.ml[830,25208+51]) ghost
                                                              Texp_constant Const_string(" never reduced.",(src/lr1.ml[830,25208+6]..src/lr1.ml[830,25208+51]) ghost,None)
                                                            expression (src/lr1.ml[830,25208+6]..src/lr1.ml[830,25208+51]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                              []
                                                          ]
                                                      ]
                                                  ]
                                              ]
                                          ]
                                      ]
                                  ]
                                expression (src/lr1.ml[830,25208+6]..src/lr1.ml[830,25208+51]) ghost
                                  Texp_constant Const_string("in total, %d production%s %s never reduced.",(src/lr1.ml[830,25208+6]..src/lr1.ml[830,25208+51]) ghost,None)
                              ]
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[830,25208+52]..src/lr1.ml[830,25208+58])
                              Texp_apply
                              expression (src/lr1.ml[830,25208+52]..src/lr1.ml[830,25208+53])
                                Texp_ident "Stdlib!.!"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[830,25208+53]..src/lr1.ml[830,25208+58])
                                    Texp_ident "count/2282"
                              ]
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[830,25208+59]..src/lr1.ml[830,25208+70])
                              Texp_ident "plural_mark/2305"
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[830,25208+71]..src/lr1.ml[830,25208+73])
                              Texp_ident "be/2306"
                        ]
                    None
          ]
    ]
  structure_item (src/lr1.ml[840,25634+0]..src/lr1.ml[857,26389+16])
    Tstr_value Rec
    [
      <def>
        pattern (src/lr1.ml[840,25634+8]..src/lr1.ml[840,25634+12])
          Tpat_var "best/2308"
        expression (src/lr1.ml[840,25634+13]..src/lr1.ml[857,26389+16]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[840,25634+13]..src/lr1.ml[840,25634+19])
                Tpat_var "choice/2309"
              expression (src/lr1.ml[840,25634+22]..src/lr1.ml[857,26389+16])
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr1.ml[841,25665+4]..src/lr1.ml[841,25665+6])
                      Tpat_construct "[]"
                      []
                      None
                    expression (src/lr1.ml[842,25675+6]..src/lr1.ml[842,25675+12])
                      Texp_ident "choice/2309"
                  <case>
                    pattern (src/lr1.ml[843,25688+4]..src/lr1.ml[843,25688+17])
                      Tpat_construct "::"
                      [
                        pattern (src/lr1.ml[843,25688+4]..src/lr1.ml[843,25688+8])
                          Tpat_var "prod/2310"
                        pattern (src/lr1.ml[843,25688+12]..src/lr1.ml[843,25688+17])
                          Tpat_var "prods/2311"
                      ]
                      None
                    expression (src/lr1.ml[844,25709+6]..src/lr1.ml[857,26389+16])
                      Texp_match
                      expression (src/lr1.ml[844,25709+12]..src/lr1.ml[844,25709+48])
                        Texp_apply
                        expression (src/lr1.ml[844,25709+12]..src/lr1.ml[844,25709+36])
                          Texp_ident "Dune__exe!.Grammar.Precedence.reduce_reduce"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[844,25709+37]..src/lr1.ml[844,25709+43])
                              Texp_ident "choice/2309"
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[844,25709+44]..src/lr1.ml[844,25709+48])
                              Texp_ident "prod/2310"
                        ]
                      [
                        <case>
                          pattern (src/lr1.ml[845,25763+8]..src/lr1.ml[845,25763+19])
                            Tpat_value
                            pattern (src/lr1.ml[845,25763+8]..src/lr1.ml[845,25763+19])
                              Tpat_construct "Some"
                              [
                                pattern (src/lr1.ml[845,25763+13]..src/lr1.ml[845,25763+19])
                                  Tpat_var "choice/2312"
                              ]
                              None
                          expression (src/lr1.ml[846,25786+10]..src/lr1.ml[846,25786+27])
                            Texp_apply
                            expression (src/lr1.ml[846,25786+10]..src/lr1.ml[846,25786+14])
                              Texp_ident "best/2308"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[846,25786+15]..src/lr1.ml[846,25786+21])
                                  Texp_ident "choice/2312"
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[846,25786+22]..src/lr1.ml[846,25786+27])
                                  Texp_ident "prods/2311"
                            ]
                        <case>
                          pattern (src/lr1.ml[847,25814+8]..src/lr1.ml[847,25814+12])
                            Tpat_value
                            pattern (src/lr1.ml[847,25814+8]..src/lr1.ml[847,25814+12])
                              Tpat_construct "None"
                              []
                              None
                          expression (src/lr1.ml[851,26050+10]..src/lr1.ml[857,26389+16])
                            Texp_sequence
                            expression (src/lr1.ml[851,26050+10]..src/lr1.ml[856,26346+41])
                              Texp_apply
                              expression (src/lr1.ml[851,26050+10]..src/lr1.ml[851,26050+22])
                                Texp_ident "Dune__exe!.Error.signal"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[851,26050+23]..src/lr1.ml[851,26050+46])
                                    Texp_ident "Dune__exe!.Error.grammatical_error"
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[852,26097+12]..src/lr1.ml[852,26097+69])
                                    Texp_apply
                                    expression (src/lr1.ml[852,26097+41]..src/lr1.ml[852,26097+42])
                                      Texp_ident "Stdlib!.@"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[852,26097+13]..src/lr1.ml[852,26097+40])
                                          Texp_apply
                                          expression (src/lr1.ml[852,26097+13]..src/lr1.ml[852,26097+33])
                                            Texp_ident "Dune__exe!.Grammar.Production.positions"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[852,26097+34]..src/lr1.ml[852,26097+40])
                                                Texp_ident "choice/2309"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[852,26097+43]..src/lr1.ml[852,26097+68])
                                          Texp_apply
                                          expression (src/lr1.ml[852,26097+43]..src/lr1.ml[852,26097+63])
                                            Texp_ident "Dune__exe!.Grammar.Production.positions"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[852,26097+64]..src/lr1.ml[852,26097+68])
                                                Texp_ident "prod/2310"
                                          ]
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[853,26167+15]..src/lr1.ml[854,26238+63])
                                    Texp_construct "CamlinternalFormatBasics.Format"
                                    [
                                      expression (src/lr1.ml[853,26167+15]..src/lr1.ml[854,26238+63]) ghost
                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                        [
                                          expression (src/lr1.ml[853,26167+15]..src/lr1.ml[854,26238+63]) ghost
                                            Texp_constant Const_string("do not know how to resolve a reduce/reduce conflict\nbetween the following two productions:\n",(src/lr1.ml[853,26167+15]..src/lr1.ml[854,26238+63]) ghost,None)
                                          expression (src/lr1.ml[853,26167+15]..src/lr1.ml[854,26238+63]) ghost
                                            Texp_construct "CamlinternalFormatBasics.String"
                                            [
                                              expression (src/lr1.ml[853,26167+15]..src/lr1.ml[854,26238+63]) ghost
                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                []
                                              expression (src/lr1.ml[853,26167+15]..src/lr1.ml[854,26238+63]) ghost
                                                Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                [
                                                  expression (src/lr1.ml[853,26167+15]..src/lr1.ml[854,26238+63]) ghost
                                                    Texp_constant Const_char 0a
                                                  expression (src/lr1.ml[853,26167+15]..src/lr1.ml[854,26238+63]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.String"
                                                    [
                                                      expression (src/lr1.ml[853,26167+15]..src/lr1.ml[854,26238+63]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                        []
                                                      expression (src/lr1.ml[853,26167+15]..src/lr1.ml[854,26238+63]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                        []
                                                    ]
                                                ]
                                            ]
                                        ]
                                      expression (src/lr1.ml[853,26167+15]..src/lr1.ml[854,26238+63]) ghost
                                        Texp_constant Const_string("do not know how to resolve a reduce/reduce conflict\nbetween the following two productions:\n%s\n%s",(src/lr1.ml[853,26167+15]..src/lr1.ml[854,26238+63]) ghost,None)
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[855,26302+18]..src/lr1.ml[855,26302+43])
                                    Texp_apply
                                    expression (src/lr1.ml[855,26302+19]..src/lr1.ml[855,26302+35])
                                      Texp_ident "Dune__exe!.Grammar.Production.print"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[855,26302+36]..src/lr1.ml[855,26302+42])
                                          Texp_ident "choice/2309"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[856,26346+18]..src/lr1.ml[856,26346+41])
                                    Texp_apply
                                    expression (src/lr1.ml[856,26346+19]..src/lr1.ml[856,26346+35])
                                      Texp_ident "Dune__exe!.Grammar.Production.print"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[856,26346+36]..src/lr1.ml[856,26346+40])
                                          Texp_ident "prod/2310"
                                    ]
                              ]
                            expression (src/lr1.ml[857,26389+10]..src/lr1.ml[857,26389+16])
                              Texp_ident "choice/2309"
                      ]
                ]
          ]
    ]
  structure_item (src/lr1.ml[861,26436+0]..src/lr1.ml[955,29664+40])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[861,26436+4]..src/lr1.ml[861,26436+31])
          Tpat_var "default_conflict_resolution/2329"
        expression (src/lr1.ml[861,26436+32]..src/lr1.ml[955,29664+40]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[861,26436+32]..src/lr1.ml[861,26436+34])
                Tpat_construct "()"
                []
                None
              expression (src/lr1.ml[863,26474+2]..src/lr1.ml[955,29664+40])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/lr1.ml[863,26474+6]..src/lr1.ml[863,26474+18])
                      Tpat_var "shift_reduce/2331"
                    expression (src/lr1.ml[864,26495+4]..src/lr1.ml[864,26495+9])
                      Texp_apply
                      expression (src/lr1.ml[864,26495+4]..src/lr1.ml[864,26495+7])
                        Texp_ident "Stdlib!.ref"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[864,26495+8]..src/lr1.ml[864,26495+9])
                            Texp_constant Const_int 0
                      ]
                  <def>
                    pattern (src/lr1.ml[865,26505+6]..src/lr1.ml[865,26505+19])
                      Tpat_var "reduce_reduce/2332"
                    expression (src/lr1.ml[866,26527+4]..src/lr1.ml[866,26527+9])
                      Texp_apply
                      expression (src/lr1.ml[866,26527+4]..src/lr1.ml[866,26527+7])
                        Texp_ident "Stdlib!.ref"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[866,26527+8]..src/lr1.ml[866,26527+9])
                            Texp_constant Const_int 0
                      ]
                ]
                expression (src/lr1.ml[869,26543+2]..src/lr1.ml[955,29664+40])
                  Texp_sequence
                  expression (src/lr1.ml[869,26543+2]..src/lr1.ml[902,27847+3])
                    Texp_apply
                    expression (src/lr1.ml[869,26543+20]..src/lr1.ml[902,27847+3])
                      Texp_apply
                      expression (src/lr1.ml[869,26543+20]..src/lr1.ml[869,26543+29])
                        Texp_ident "Stdlib!.List.iter"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[869,26543+30]..src/lr1.ml[902,27847+3])
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/lr1.ml[869,26543+35]..src/lr1.ml[869,26543+39])
                                  Tpat_var "node/2333"
                                expression (src/lr1.ml[870,26586+4]..src/lr1.ml[901,27841+5])
                                  Texp_sequence
                                  expression (src/lr1.ml[870,26586+4]..src/lr1.ml[870,26586+52])
                                    Texp_apply
                                    expression (src/lr1.ml[870,26586+4]..src/lr1.ml[870,26586+52]) ghost
                                      Texp_ident "Stdlib!.Array.set"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[870,26586+4]..src/lr1.ml[870,26586+20])
                                          Texp_ident "_conflict_tokens/947"
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[870,26586+22]..src/lr1.ml[870,26586+30])
                                          Texp_apply
                                          expression (src/lr1.ml[870,26586+22]..src/lr1.ml[870,26586+25])
                                            Texp_ident "raw/1428"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[870,26586+26]..src/lr1.ml[870,26586+30])
                                                Texp_ident "node/2333"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[870,26586+35]..src/lr1.ml[870,26586+52])
                                          Texp_ident "Dune__exe!.Grammar.TerminalSet.empty"
                                    ]
                                  expression (src/lr1.ml[871,26640+4]..src/lr1.ml[901,27841+5])
                                    Texp_apply
                                    expression (src/lr1.ml[871,26640+4]..src/lr1.ml[871,26640+18])
                                      Texp_ident "set_reductions/1452"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[871,26640+19]..src/lr1.ml[871,26640+23])
                                          Texp_ident "node/2333"
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[871,26640+24]..src/lr1.ml[901,27841+5])
                                          Texp_apply
                                          expression (src/lr1.ml[872,26666+6]..src/lr1.ml[872,26666+22])
                                            Texp_ident "Dune__exe!.Grammar.TerminalMap.fold"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[872,26666+23]..src/lr1.ml[900,27797+7])
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (src/lr1.ml[872,26666+28]..src/lr1.ml[872,26666+31])
                                                      Tpat_var "tok/2334"
                                                    expression (src/lr1.ml[872,26666+32]..src/lr1.ml[898,27731+64]) ghost
                                                      Texp_function
                                                      Nolabel
                                                      [
                                                        <case>
                                                          pattern (src/lr1.ml[872,26666+32]..src/lr1.ml[872,26666+37])
                                                            Tpat_var "prods/2335"
                                                          expression (src/lr1.ml[872,26666+38]..src/lr1.ml[898,27731+64]) ghost
                                                            Texp_function
                                                            Nolabel
                                                            [
                                                              <case>
                                                                pattern (src/lr1.ml[872,26666+38]..src/lr1.ml[872,26666+48])
                                                                  Tpat_var "reductions/2336"
                                                                expression (src/lr1.ml[874,26719+8]..src/lr1.ml[898,27731+64])
                                                                  Texp_try
                                                                  expression (src/lr1.ml[875,26731+10]..src/lr1.ml[883,27102+20])
                                                                    Texp_let Nonrec
                                                                    [
                                                                      <def>
                                                                        pattern (src/lr1.ml[875,26731+15]..src/lr1.ml[875,26731+16])
                                                                          extra
                                                                            Tpat_extra_constraint
                                                                            core_type (src/lr1.ml[875,26731+19]..src/lr1.ml[875,26731+23])
                                                                              Ttyp_constr "node/642"
                                                                              []
                                                                          Tpat_any
                                                                        expression (src/lr1.ml[876,26758+12]..src/lr1.ml[876,26758+60])
                                                                          Texp_apply
                                                                          expression (src/lr1.ml[876,26758+12]..src/lr1.ml[876,26758+26])
                                                                            Texp_ident "Dune__exe!.Grammar.SymbolMap.find"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/lr1.ml[876,26758+27]..src/lr1.ml[876,26758+41])
                                                                                Texp_construct "Symbol.T"
                                                                                [
                                                                                  expression (src/lr1.ml[876,26758+37]..src/lr1.ml[876,26758+40])
                                                                                    Texp_ident "tok/2334"
                                                                                ]
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/lr1.ml[876,26758+42]..src/lr1.ml[876,26758+60])
                                                                                Texp_apply
                                                                                expression (src/lr1.ml[876,26758+43]..src/lr1.ml[876,26758+54])
                                                                                  Texp_ident "transitions/1450"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr1.ml[876,26758+55]..src/lr1.ml[876,26758+59])
                                                                                      Texp_ident "node/2333"
                                                                                ]
                                                                          ]
                                                                    ]
                                                                    expression (src/lr1.ml[882,27041+10]..src/lr1.ml[883,27102+20])
                                                                      Texp_sequence
                                                                      expression (src/lr1.ml[882,27041+10]..src/lr1.ml[882,27041+59])
                                                                        Texp_apply
                                                                        expression (src/lr1.ml[882,27041+23]..src/lr1.ml[882,27041+25])
                                                                          Texp_ident "Stdlib!.:="
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/lr1.ml[882,27041+10]..src/lr1.ml[882,27041+22])
                                                                              Texp_ident "shift_reduce/2331"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/lr1.ml[882,27041+26]..src/lr1.ml[882,27041+59])
                                                                              Texp_apply
                                                                              expression (src/lr1.ml[882,27041+44]..src/lr1.ml[882,27041+45])
                                                                                Texp_ident "Stdlib!.+"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr1.ml[882,27041+26]..src/lr1.ml[882,27041+43])
                                                                                    Texp_apply
                                                                                    expression (src/lr1.ml[882,27041+26]..src/lr1.ml[882,27041+37])
                                                                                      Texp_ident "Stdlib!.List.length"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/lr1.ml[882,27041+38]..src/lr1.ml[882,27041+43])
                                                                                          Texp_ident "prods/2335"
                                                                                    ]
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr1.ml[882,27041+46]..src/lr1.ml[882,27041+59])
                                                                                    Texp_apply
                                                                                    expression (src/lr1.ml[882,27041+46]..src/lr1.ml[882,27041+47])
                                                                                      Texp_ident "Stdlib!.!"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/lr1.ml[882,27041+47]..src/lr1.ml[882,27041+59])
                                                                                          Texp_ident "shift_reduce/2331"
                                                                                    ]
                                                                              ]
                                                                        ]
                                                                      expression (src/lr1.ml[883,27102+10]..src/lr1.ml[883,27102+20])
                                                                        Texp_ident "reductions/2336"
                                                                  [
                                                                    <case>
                                                                      pattern (src/lr1.ml[884,27123+13]..src/lr1.ml[884,27123+22])
                                                                        Tpat_construct "Not_found"
                                                                        []
                                                                        None
                                                                      expression (src/lr1.ml[887,27260+10]..src/lr1.ml[898,27731+64])
                                                                        Texp_match
                                                                        expression (src/lr1.ml[887,27260+16]..src/lr1.ml[887,27260+21])
                                                                          Texp_ident "prods/2335"
                                                                        [
                                                                          <case>
                                                                            pattern (src/lr1.ml[888,27287+12]..src/lr1.ml[888,27287+14])
                                                                              Tpat_value
                                                                              pattern (src/lr1.ml[888,27287+12]..src/lr1.ml[888,27287+14])
                                                                                Tpat_construct "[]"
                                                                                []
                                                                                None
                                                                            expression (src/lr1.ml[889,27305+14]..src/lr1.ml[889,27305+26])
                                                                              Texp_assert                                                                              expression (src/lr1.ml[889,27305+21]..src/lr1.ml[889,27305+26])
                                                                                Texp_construct "false"
                                                                                []
                                                                          <case>
                                                                            pattern (src/lr1.ml[890,27332+12]..src/lr1.ml[890,27332+17])
                                                                              Tpat_value
                                                                              pattern (src/lr1.ml[890,27332+12]..src/lr1.ml[890,27332+17])
                                                                                Tpat_construct "::"
                                                                                [
                                                                                  pattern (src/lr1.ml[890,27332+14]..src/lr1.ml[890,27332+15])
                                                                                    Tpat_any
                                                                                  pattern (src/lr1.ml[890,27332+16]..src/lr1.ml[890,27332+17]) ghost
                                                                                    Tpat_construct "[]"
                                                                                    []
                                                                                    None
                                                                                ]
                                                                                None
                                                                            expression (src/lr1.ml[891,27353+14]..src/lr1.ml[891,27353+50])
                                                                              Texp_apply
                                                                              expression (src/lr1.ml[891,27353+14]..src/lr1.ml[891,27353+29])
                                                                                Texp_ident "Dune__exe!.Grammar.TerminalMap.add"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr1.ml[891,27353+30]..src/lr1.ml[891,27353+33])
                                                                                    Texp_ident "tok/2334"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr1.ml[891,27353+34]..src/lr1.ml[891,27353+39])
                                                                                    Texp_ident "prods/2335"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr1.ml[891,27353+40]..src/lr1.ml[891,27353+50])
                                                                                    Texp_ident "reductions/2336"
                                                                              ]
                                                                          <case>
                                                                            pattern (src/lr1.ml[892,27404+12]..src/lr1.ml[892,27404+39])
                                                                              Tpat_value
                                                                              pattern (src/lr1.ml[892,27404+12]..src/lr1.ml[892,27404+39])
                                                                                Tpat_construct "::"
                                                                                [
                                                                                  pattern (src/lr1.ml[892,27404+12]..src/lr1.ml[892,27404+16])
                                                                                    Tpat_var "prod/2337"
                                                                                  pattern (src/lr1.ml[892,27404+20]..src/lr1.ml[892,27404+39])
                                                                                    Tpat_alias "prods/2338"
                                                                                    pattern (src/lr1.ml[892,27404+21]..src/lr1.ml[892,27404+29])
                                                                                      Tpat_construct "::"
                                                                                      [
                                                                                        pattern (src/lr1.ml[892,27404+22]..src/lr1.ml[892,27404+23])
                                                                                          Tpat_any
                                                                                        pattern (src/lr1.ml[892,27404+27]..src/lr1.ml[892,27404+28])
                                                                                          Tpat_any
                                                                                      ]
                                                                                      None
                                                                                ]
                                                                                None
                                                                            expression (src/lr1.ml[897,27664+14]..src/lr1.ml[898,27731+64])
                                                                              Texp_sequence
                                                                              expression (src/lr1.ml[897,27664+14]..src/lr1.ml[897,27664+65])
                                                                                Texp_apply
                                                                                expression (src/lr1.ml[897,27664+28]..src/lr1.ml[897,27664+30])
                                                                                  Texp_ident "Stdlib!.:="
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr1.ml[897,27664+14]..src/lr1.ml[897,27664+27])
                                                                                      Texp_ident "reduce_reduce/2332"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr1.ml[897,27664+31]..src/lr1.ml[897,27664+65])
                                                                                      Texp_apply
                                                                                      expression (src/lr1.ml[897,27664+49]..src/lr1.ml[897,27664+50])
                                                                                        Texp_ident "Stdlib!.+"
                                                                                      [
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/lr1.ml[897,27664+31]..src/lr1.ml[897,27664+48])
                                                                                            Texp_apply
                                                                                            expression (src/lr1.ml[897,27664+31]..src/lr1.ml[897,27664+42])
                                                                                              Texp_ident "Stdlib!.List.length"
                                                                                            [
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/lr1.ml[897,27664+43]..src/lr1.ml[897,27664+48])
                                                                                                  Texp_ident "prods/2338"
                                                                                            ]
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/lr1.ml[897,27664+51]..src/lr1.ml[897,27664+65])
                                                                                            Texp_apply
                                                                                            expression (src/lr1.ml[897,27664+51]..src/lr1.ml[897,27664+52])
                                                                                              Texp_ident "Stdlib!.!"
                                                                                            [
                                                                                              <arg>
                                                                                                Nolabel
                                                                                                expression (src/lr1.ml[897,27664+52]..src/lr1.ml[897,27664+65])
                                                                                                  Texp_ident "reduce_reduce/2332"
                                                                                            ]
                                                                                      ]
                                                                                ]
                                                                              expression (src/lr1.ml[898,27731+14]..src/lr1.ml[898,27731+64])
                                                                                Texp_apply
                                                                                expression (src/lr1.ml[898,27731+14]..src/lr1.ml[898,27731+29])
                                                                                  Texp_ident "Dune__exe!.Grammar.TerminalMap.add"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr1.ml[898,27731+30]..src/lr1.ml[898,27731+33])
                                                                                      Texp_ident "tok/2334"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr1.ml[898,27731+34]..src/lr1.ml[898,27731+53])
                                                                                      Texp_construct "::"
                                                                                      [
                                                                                        expression (src/lr1.ml[898,27731+36]..src/lr1.ml[898,27731+51])
                                                                                          Texp_apply
                                                                                          expression (src/lr1.ml[898,27731+36]..src/lr1.ml[898,27731+40])
                                                                                            Texp_ident "best/2308"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/lr1.ml[898,27731+41]..src/lr1.ml[898,27731+45])
                                                                                                Texp_ident "prod/2337"
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/lr1.ml[898,27731+46]..src/lr1.ml[898,27731+51])
                                                                                                Texp_ident "prods/2338"
                                                                                          ]
                                                                                        expression (src/lr1.ml[898,27731+52]..src/lr1.ml[898,27731+53]) ghost
                                                                                          Texp_construct "[]"
                                                                                          []
                                                                                      ]
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr1.ml[898,27731+54]..src/lr1.ml[898,27731+64])
                                                                                      Texp_ident "reductions/2336"
                                                                                ]
                                                                        ]
                                                                  ]
                                                            ]
                                                      ]
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[900,27797+8]..src/lr1.ml[900,27797+25])
                                                Texp_apply
                                                expression (src/lr1.ml[900,27797+9]..src/lr1.ml[900,27797+19])
                                                  Texp_ident "reductions/1456"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr1.ml[900,27797+20]..src/lr1.ml[900,27797+24])
                                                      Texp_ident "node/2333"
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[900,27797+26]..src/lr1.ml[900,27797+43])
                                                Texp_ident "Dune__exe!.Grammar.TerminalMap.empty"
                                          ]
                                    ]
                            ]
                      ]
                    [
                      <arg>
                        Nolabel
                        expression (src/lr1.ml[869,26543+2]..src/lr1.ml[869,26543+16])
                          Texp_ident "conflict_nodes/1427"
                    ]
                  expression (src/lr1.ml[904,27853+2]..src/lr1.ml[955,29664+40])
                    Texp_sequence
                    expression (src/lr1.ml[904,27853+2]..src/lr1.ml[908,28065+19])
                      Texp_ifthenelse
                      expression (src/lr1.ml[904,27853+5]..src/lr1.ml[904,27853+22])
                        Texp_apply
                        expression (src/lr1.ml[904,27853+19]..src/lr1.ml[904,27853+20])
                          Texp_ident "Stdlib!.="
                        [
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[904,27853+5]..src/lr1.ml[904,27853+18])
                              Texp_apply
                              expression (src/lr1.ml[904,27853+5]..src/lr1.ml[904,27853+6])
                                Texp_ident "Stdlib!.!"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[904,27853+6]..src/lr1.ml[904,27853+18])
                                    Texp_ident "shift_reduce/2331"
                              ]
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[904,27853+21]..src/lr1.ml[904,27853+22])
                              Texp_constant Const_int 1
                        ]
                      expression (src/lr1.ml[905,27881+4]..src/lr1.ml[905,27881+74])
                        Texp_apply
                        expression (src/lr1.ml[905,27881+4]..src/lr1.ml[905,27881+17])
                          Texp_ident "Dune__exe!.Error.warning"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[905,27881+18]..src/lr1.ml[905,27881+20])
                              Texp_construct "[]"
                              []
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[905,27881+21]..src/lr1.ml[905,27881+74])
                              Texp_construct "CamlinternalFormatBasics.Format"
                              [
                                expression (src/lr1.ml[905,27881+21]..src/lr1.ml[905,27881+74]) ghost
                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                  [
                                    expression (src/lr1.ml[905,27881+21]..src/lr1.ml[905,27881+74]) ghost
                                      Texp_constant Const_string("one shift/reduce conflict was arbitrarily resolved.",(src/lr1.ml[905,27881+21]..src/lr1.ml[905,27881+74]) ghost,None)
                                    expression (src/lr1.ml[905,27881+21]..src/lr1.ml[905,27881+74]) ghost
                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                      []
                                  ]
                                expression (src/lr1.ml[905,27881+21]..src/lr1.ml[905,27881+74]) ghost
                                  Texp_constant Const_string("one shift/reduce conflict was arbitrarily resolved.",(src/lr1.ml[905,27881+21]..src/lr1.ml[905,27881+74]) ghost,None)
                              ]
                        ]
                      Some
                        expression (src/lr1.ml[906,27956+7]..src/lr1.ml[908,28065+19])
                          Texp_ifthenelse
                          expression (src/lr1.ml[906,27956+10]..src/lr1.ml[906,27956+27])
                            Texp_apply
                            expression (src/lr1.ml[906,27956+24]..src/lr1.ml[906,27956+25])
                              Texp_ident "Stdlib!.>"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[906,27956+10]..src/lr1.ml[906,27956+23])
                                  Texp_apply
                                  expression (src/lr1.ml[906,27956+10]..src/lr1.ml[906,27956+11])
                                    Texp_ident "Stdlib!.!"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[906,27956+11]..src/lr1.ml[906,27956+23])
                                        Texp_ident "shift_reduce/2331"
                                  ]
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[906,27956+26]..src/lr1.ml[906,27956+27])
                                  Texp_constant Const_int 1
                            ]
                          expression (src/lr1.ml[907,27989+4]..src/lr1.ml[908,28065+19])
                            Texp_apply
                            expression (src/lr1.ml[907,27989+4]..src/lr1.ml[907,27989+17])
                              Texp_ident "Dune__exe!.Error.warning"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[907,27989+18]..src/lr1.ml[907,27989+20])
                                  Texp_construct "[]"
                                  []
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[907,27989+21]..src/lr1.ml[907,27989+75])
                                  Texp_construct "CamlinternalFormatBasics.Format"
                                  [
                                    expression (src/lr1.ml[907,27989+21]..src/lr1.ml[907,27989+75]) ghost
                                      Texp_construct "CamlinternalFormatBasics.Int"
                                      [
                                        expression (src/lr1.ml[907,27989+21]..src/lr1.ml[907,27989+75]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Int_d"
                                          []
                                        expression (src/lr1.ml[907,27989+21]..src/lr1.ml[907,27989+75]) ghost
                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                          []
                                        expression (src/lr1.ml[907,27989+21]..src/lr1.ml[907,27989+75]) ghost
                                          Texp_construct "CamlinternalFormatBasics.No_precision"
                                          []
                                        expression (src/lr1.ml[907,27989+21]..src/lr1.ml[907,27989+75]) ghost
                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                          [
                                            expression (src/lr1.ml[907,27989+21]..src/lr1.ml[907,27989+75]) ghost
                                              Texp_constant Const_string(" shift/reduce conflicts were arbitrarily resolved.",(src/lr1.ml[907,27989+21]..src/lr1.ml[907,27989+75]) ghost,None)
                                            expression (src/lr1.ml[907,27989+21]..src/lr1.ml[907,27989+75]) ghost
                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                              []
                                          ]
                                      ]
                                    expression (src/lr1.ml[907,27989+21]..src/lr1.ml[907,27989+75]) ghost
                                      Texp_constant Const_string("%d shift/reduce conflicts were arbitrarily resolved.",(src/lr1.ml[907,27989+21]..src/lr1.ml[907,27989+75]) ghost,None)
                                  ]
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[908,28065+6]..src/lr1.ml[908,28065+19])
                                  Texp_apply
                                  expression (src/lr1.ml[908,28065+6]..src/lr1.ml[908,28065+7])
                                    Texp_ident "Stdlib!.!"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[908,28065+7]..src/lr1.ml[908,28065+19])
                                        Texp_ident "shift_reduce/2331"
                                  ]
                            ]
                          None
                    expression (src/lr1.ml[909,28086+2]..src/lr1.ml[955,29664+40])
                      Texp_sequence
                      expression (src/lr1.ml[909,28086+2]..src/lr1.ml[913,28302+20])
                        Texp_ifthenelse
                        expression (src/lr1.ml[909,28086+5]..src/lr1.ml[909,28086+23])
                          Texp_apply
                          expression (src/lr1.ml[909,28086+20]..src/lr1.ml[909,28086+21])
                            Texp_ident "Stdlib!.="
                          [
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[909,28086+5]..src/lr1.ml[909,28086+19])
                                Texp_apply
                                expression (src/lr1.ml[909,28086+5]..src/lr1.ml[909,28086+6])
                                  Texp_ident "Stdlib!.!"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/lr1.ml[909,28086+6]..src/lr1.ml[909,28086+19])
                                      Texp_ident "reduce_reduce/2332"
                                ]
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[909,28086+22]..src/lr1.ml[909,28086+23])
                                Texp_constant Const_int 1
                          ]
                        expression (src/lr1.ml[910,28115+4]..src/lr1.ml[910,28115+75])
                          Texp_apply
                          expression (src/lr1.ml[910,28115+4]..src/lr1.ml[910,28115+17])
                            Texp_ident "Dune__exe!.Error.warning"
                          [
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[910,28115+18]..src/lr1.ml[910,28115+20])
                                Texp_construct "[]"
                                []
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[910,28115+21]..src/lr1.ml[910,28115+75])
                                Texp_construct "CamlinternalFormatBasics.Format"
                                [
                                  expression (src/lr1.ml[910,28115+21]..src/lr1.ml[910,28115+75]) ghost
                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                    [
                                      expression (src/lr1.ml[910,28115+21]..src/lr1.ml[910,28115+75]) ghost
                                        Texp_constant Const_string("one reduce/reduce conflict was arbitrarily resolved.",(src/lr1.ml[910,28115+21]..src/lr1.ml[910,28115+75]) ghost,None)
                                      expression (src/lr1.ml[910,28115+21]..src/lr1.ml[910,28115+75]) ghost
                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                        []
                                    ]
                                  expression (src/lr1.ml[910,28115+21]..src/lr1.ml[910,28115+75]) ghost
                                    Texp_constant Const_string("one reduce/reduce conflict was arbitrarily resolved.",(src/lr1.ml[910,28115+21]..src/lr1.ml[910,28115+75]) ghost,None)
                                ]
                          ]
                        Some
                          expression (src/lr1.ml[911,28191+7]..src/lr1.ml[913,28302+20])
                            Texp_ifthenelse
                            expression (src/lr1.ml[911,28191+10]..src/lr1.ml[911,28191+28])
                              Texp_apply
                              expression (src/lr1.ml[911,28191+25]..src/lr1.ml[911,28191+26])
                                Texp_ident "Stdlib!.>"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[911,28191+10]..src/lr1.ml[911,28191+24])
                                    Texp_apply
                                    expression (src/lr1.ml[911,28191+10]..src/lr1.ml[911,28191+11])
                                      Texp_ident "Stdlib!.!"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[911,28191+11]..src/lr1.ml[911,28191+24])
                                          Texp_ident "reduce_reduce/2332"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[911,28191+27]..src/lr1.ml[911,28191+28])
                                    Texp_constant Const_int 1
                              ]
                            expression (src/lr1.ml[912,28225+4]..src/lr1.ml[913,28302+20])
                              Texp_apply
                              expression (src/lr1.ml[912,28225+4]..src/lr1.ml[912,28225+17])
                                Texp_ident "Dune__exe!.Error.warning"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[912,28225+18]..src/lr1.ml[912,28225+20])
                                    Texp_construct "[]"
                                    []
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[912,28225+21]..src/lr1.ml[912,28225+76])
                                    Texp_construct "CamlinternalFormatBasics.Format"
                                    [
                                      expression (src/lr1.ml[912,28225+21]..src/lr1.ml[912,28225+76]) ghost
                                        Texp_construct "CamlinternalFormatBasics.Int"
                                        [
                                          expression (src/lr1.ml[912,28225+21]..src/lr1.ml[912,28225+76]) ghost
                                            Texp_construct "CamlinternalFormatBasics.Int_d"
                                            []
                                          expression (src/lr1.ml[912,28225+21]..src/lr1.ml[912,28225+76]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                            []
                                          expression (src/lr1.ml[912,28225+21]..src/lr1.ml[912,28225+76]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_precision"
                                            []
                                          expression (src/lr1.ml[912,28225+21]..src/lr1.ml[912,28225+76]) ghost
                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                            [
                                              expression (src/lr1.ml[912,28225+21]..src/lr1.ml[912,28225+76]) ghost
                                                Texp_constant Const_string(" reduce/reduce conflicts were arbitrarily resolved.",(src/lr1.ml[912,28225+21]..src/lr1.ml[912,28225+76]) ghost,None)
                                              expression (src/lr1.ml[912,28225+21]..src/lr1.ml[912,28225+76]) ghost
                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                []
                                            ]
                                        ]
                                      expression (src/lr1.ml[912,28225+21]..src/lr1.ml[912,28225+76]) ghost
                                        Texp_constant Const_string("%d reduce/reduce conflicts were arbitrarily resolved.",(src/lr1.ml[912,28225+21]..src/lr1.ml[912,28225+76]) ghost,None)
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[913,28302+6]..src/lr1.ml[913,28302+20])
                                    Texp_apply
                                    expression (src/lr1.ml[913,28302+6]..src/lr1.ml[913,28302+7])
                                      Texp_ident "Stdlib!.!"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[913,28302+7]..src/lr1.ml[913,28302+20])
                                          Texp_ident "reduce_reduce/2332"
                                    ]
                              ]
                            None
                      expression (src/lr1.ml[923,28729+2]..src/lr1.ml[955,29664+40])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/lr1.ml[923,28729+6]..src/lr1.ml[923,28729+19])
                              Tpat_var "eos_conflicts/2339"
                            expression (src/lr1.ml[923,28729+22]..src/lr1.ml[923,28729+27])
                              Texp_apply
                              expression (src/lr1.ml[923,28729+22]..src/lr1.ml[923,28729+25])
                                Texp_ident "Stdlib!.ref"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr1.ml[923,28729+26]..src/lr1.ml[923,28729+27])
                                    Texp_constant Const_int 0
                              ]
                        ]
                        expression (src/lr1.ml[925,28761+2]..src/lr1.ml[955,29664+40])
                          Texp_sequence
                          expression (src/lr1.ml[925,28761+2]..src/lr1.ml[943,29292+5])
                            Texp_apply
                            expression (src/lr1.ml[925,28761+2]..src/lr1.ml[925,28761+6])
                              Texp_ident "iter/1574"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[925,28761+7]..src/lr1.ml[943,29292+5])
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/lr1.ml[925,28761+17]..src/lr1.ml[925,28761+21])
                                        Tpat_var "node/2340"
                                      expression (src/lr1.ml[926,28786+4]..src/lr1.ml[942,29284+7])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/lr1.ml[926,28786+8]..src/lr1.ml[926,28786+19])
                                              Tpat_var "transitions/2341"
                                            expression (src/lr1.ml[926,28786+22]..src/lr1.ml[926,28786+38])
                                              Texp_apply
                                              expression (src/lr1.ml[926,28786+22]..src/lr1.ml[926,28786+33])
                                                Texp_ident "transitions/1450"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr1.ml[926,28786+34]..src/lr1.ml[926,28786+38])
                                                    Texp_ident "node/2340"
                                              ]
                                          <def>
                                            pattern (src/lr1.ml[927,28825+8]..src/lr1.ml[927,28825+18])
                                              Tpat_var "reductions/2342"
                                            expression (src/lr1.ml[927,28825+21]..src/lr1.ml[927,28825+36])
                                              Texp_apply
                                              expression (src/lr1.ml[927,28825+21]..src/lr1.ml[927,28825+31])
                                                Texp_ident "reductions/1456"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr1.ml[927,28825+32]..src/lr1.ml[927,28825+36])
                                                    Texp_ident "node/2340"
                                              ]
                                        ]
                                        expression (src/lr1.ml[929,28866+4]..src/lr1.ml[942,29284+7])
                                          Texp_ifthenelse
                                          expression (src/lr1.ml[929,28866+7]..src/lr1.ml[929,28866+50])
                                            Texp_apply
                                            expression (src/lr1.ml[929,28866+7]..src/lr1.ml[929,28866+27])
                                              Texp_ident "Dune__exe!.Lr0.has_eos_conflict"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/lr1.ml[929,28866+28]..src/lr1.ml[929,28866+39])
                                                  Texp_ident "transitions/2341"
                                              <arg>
                                                Nolabel
                                                expression (src/lr1.ml[929,28866+40]..src/lr1.ml[929,28866+50])
                                                  Texp_ident "reductions/2342"
                                            ]
                                          expression (src/lr1.ml[929,28866+56]..src/lr1.ml[942,29284+7])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/lr1.ml[932,28976+10]..src/lr1.ml[932,28976+23])
                                                  Tpat_tuple
                                                  [
                                                    pattern (src/lr1.ml[932,28976+10]..src/lr1.ml[932,28976+11])
                                                      Tpat_any
                                                    pattern (src/lr1.ml[932,28976+13]..src/lr1.ml[932,28976+23])
                                                      Tpat_var "reductions/2343"
                                                  ]
                                                expression (src/lr1.ml[933,29002+8]..src/lr1.ml[933,29002+63])
                                                  Texp_apply
                                                  expression (src/lr1.ml[933,29002+8]..src/lr1.ml[933,29002+37])
                                                    Texp_ident "Dune__exe!.Grammar.TerminalMap.lookup_and_remove"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/lr1.ml[933,29002+38]..src/lr1.ml[933,29002+52])
                                                        Texp_ident "Dune__exe!.Grammar.Terminal.sharp"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/lr1.ml[933,29002+53]..src/lr1.ml[933,29002+63])
                                                        Texp_ident "reductions/2342"
                                                  ]
                                            ]
                                            expression (src/lr1.ml[934,29069+6]..src/lr1.ml[940,29258+24])
                                              Texp_sequence
                                              expression (src/lr1.ml[934,29069+6]..src/lr1.ml[934,29069+36])
                                                Texp_apply
                                                expression (src/lr1.ml[934,29069+6]..src/lr1.ml[934,29069+20])
                                                  Texp_ident "set_reductions/1452"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr1.ml[934,29069+21]..src/lr1.ml[934,29069+25])
                                                      Texp_ident "node/2340"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr1.ml[934,29069+26]..src/lr1.ml[934,29069+36])
                                                      Texp_ident "reductions/2343"
                                                ]
                                              expression (src/lr1.ml[937,29166+6]..src/lr1.ml[940,29258+24])
                                                Texp_sequence
                                                expression (src/lr1.ml[937,29166+6]..src/lr1.ml[937,29166+42])
                                                  Texp_apply
                                                  expression (src/lr1.ml[937,29166+6]..src/lr1.ml[937,29166+42]) ghost
                                                    Texp_ident "Stdlib!.Array.set"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/lr1.ml[937,29166+6]..src/lr1.ml[937,29166+23])
                                                        Texp_ident "_has_eos_conflict/982"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/lr1.ml[937,29166+25]..src/lr1.ml[937,29166+33])
                                                        Texp_apply
                                                        expression (src/lr1.ml[937,29166+25]..src/lr1.ml[937,29166+28])
                                                          Texp_ident "raw/1428"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/lr1.ml[937,29166+29]..src/lr1.ml[937,29166+33])
                                                              Texp_ident "node/2340"
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (src/lr1.ml[937,29166+38]..src/lr1.ml[937,29166+42])
                                                        Texp_construct "None"
                                                        []
                                                  ]
                                                expression (src/lr1.ml[940,29258+6]..src/lr1.ml[940,29258+24])
                                                  Texp_apply
                                                  expression (src/lr1.ml[940,29258+6]..src/lr1.ml[940,29258+10])
                                                    Texp_ident "Stdlib!.incr"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/lr1.ml[940,29258+11]..src/lr1.ml[940,29258+24])
                                                        Texp_ident "eos_conflicts/2339"
                                                  ]
                                          None
                                  ]
                            ]
                          expression (src/lr1.ml[945,29300+2]..src/lr1.ml[955,29664+40])
                            Texp_sequence
                            expression (src/lr1.ml[945,29300+2]..src/lr1.ml[951,29550+20])
                              Texp_ifthenelse
                              expression (src/lr1.ml[945,29300+5]..src/lr1.ml[945,29300+23])
                                Texp_apply
                                expression (src/lr1.ml[945,29300+20]..src/lr1.ml[945,29300+21])
                                  Texp_ident "Stdlib!.="
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/lr1.ml[945,29300+5]..src/lr1.ml[945,29300+19])
                                      Texp_apply
                                      expression (src/lr1.ml[945,29300+5]..src/lr1.ml[945,29300+6])
                                        Texp_ident "Stdlib!.!"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/lr1.ml[945,29300+6]..src/lr1.ml[945,29300+19])
                                            Texp_ident "eos_conflicts/2339"
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/lr1.ml[945,29300+22]..src/lr1.ml[945,29300+23])
                                      Texp_constant Const_int 1
                                ]
                              expression (src/lr1.ml[946,29329+4]..src/lr1.ml[947,29358+66])
                                Texp_apply
                                expression (src/lr1.ml[946,29329+4]..src/lr1.ml[946,29329+25])
                                  Texp_ident "Dune__exe!.Error.grammar_warning"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/lr1.ml[946,29329+26]..src/lr1.ml[946,29329+28])
                                      Texp_construct "[]"
                                      []
                                  <arg>
                                    Nolabel
                                    expression (src/lr1.ml[947,29358+6]..src/lr1.ml[947,29358+66])
                                      Texp_construct "CamlinternalFormatBasics.Format"
                                      [
                                        expression (src/lr1.ml[947,29358+6]..src/lr1.ml[947,29358+66]) ghost
                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                          [
                                            expression (src/lr1.ml[947,29358+6]..src/lr1.ml[947,29358+66]) ghost
                                              Texp_constant Const_string("one state end-of-stream conflict was arbitrarily resolved.",(src/lr1.ml[947,29358+6]..src/lr1.ml[947,29358+66]) ghost,None)
                                            expression (src/lr1.ml[947,29358+6]..src/lr1.ml[947,29358+66]) ghost
                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                              []
                                          ]
                                        expression (src/lr1.ml[947,29358+6]..src/lr1.ml[947,29358+66]) ghost
                                          Texp_constant Const_string("one state end-of-stream conflict was arbitrarily resolved.",(src/lr1.ml[947,29358+6]..src/lr1.ml[947,29358+66]) ghost,None)
                                      ]
                                ]
                              Some
                                expression (src/lr1.ml[948,29425+7]..src/lr1.ml[951,29550+20])
                                  Texp_ifthenelse
                                  expression (src/lr1.ml[948,29425+10]..src/lr1.ml[948,29425+28])
                                    Texp_apply
                                    expression (src/lr1.ml[948,29425+25]..src/lr1.ml[948,29425+26])
                                      Texp_ident "Stdlib!.>"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[948,29425+10]..src/lr1.ml[948,29425+24])
                                          Texp_apply
                                          expression (src/lr1.ml[948,29425+10]..src/lr1.ml[948,29425+11])
                                            Texp_ident "Stdlib!.!"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[948,29425+11]..src/lr1.ml[948,29425+24])
                                                Texp_ident "eos_conflicts/2339"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[948,29425+27]..src/lr1.ml[948,29425+28])
                                          Texp_constant Const_int 1
                                    ]
                                  expression (src/lr1.ml[949,29459+4]..src/lr1.ml[951,29550+20])
                                    Texp_apply
                                    expression (src/lr1.ml[949,29459+4]..src/lr1.ml[949,29459+25])
                                      Texp_ident "Dune__exe!.Error.grammar_warning"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[949,29459+26]..src/lr1.ml[949,29459+28])
                                          Texp_construct "[]"
                                          []
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[950,29488+6]..src/lr1.ml[950,29488+61])
                                          Texp_construct "CamlinternalFormatBasics.Format"
                                          [
                                            expression (src/lr1.ml[950,29488+6]..src/lr1.ml[950,29488+61]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Int"
                                              [
                                                expression (src/lr1.ml[950,29488+6]..src/lr1.ml[950,29488+61]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Int_d"
                                                  []
                                                expression (src/lr1.ml[950,29488+6]..src/lr1.ml[950,29488+61]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                  []
                                                expression (src/lr1.ml[950,29488+6]..src/lr1.ml[950,29488+61]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_precision"
                                                  []
                                                expression (src/lr1.ml[950,29488+6]..src/lr1.ml[950,29488+61]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                  [
                                                    expression (src/lr1.ml[950,29488+6]..src/lr1.ml[950,29488+61]) ghost
                                                      Texp_constant Const_string(" end-of-stream conflicts were arbitrarily resolved.",(src/lr1.ml[950,29488+6]..src/lr1.ml[950,29488+61]) ghost,None)
                                                    expression (src/lr1.ml[950,29488+6]..src/lr1.ml[950,29488+61]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                      []
                                                  ]
                                              ]
                                            expression (src/lr1.ml[950,29488+6]..src/lr1.ml[950,29488+61]) ghost
                                              Texp_constant Const_string("%d end-of-stream conflicts were arbitrarily resolved.",(src/lr1.ml[950,29488+6]..src/lr1.ml[950,29488+61]) ghost,None)
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/lr1.ml[951,29550+6]..src/lr1.ml[951,29550+20])
                                          Texp_apply
                                          expression (src/lr1.ml[951,29550+6]..src/lr1.ml[951,29550+7])
                                            Texp_ident "Stdlib!.!"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[951,29550+7]..src/lr1.ml[951,29550+20])
                                                Texp_ident "eos_conflicts/2339"
                                          ]
                                    ]
                                  None
                            expression (src/lr1.ml[954,29631+2]..src/lr1.ml[955,29664+40])
                              Texp_sequence
                              expression (src/lr1.ml[954,29631+2]..src/lr1.ml[954,29631+31])
                                Texp_apply
                                expression (src/lr1.ml[954,29631+2]..src/lr1.ml[954,29631+29])
                                  Texp_ident "initialize_production_where/2266"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/lr1.ml[954,29631+29]..src/lr1.ml[954,29631+31])
                                      Texp_construct "()"
                                      []
                                ]
                              expression (src/lr1.ml[955,29664+2]..src/lr1.ml[955,29664+40])
                                Texp_apply
                                expression (src/lr1.ml[955,29664+2]..src/lr1.ml[955,29664+38])
                                  Texp_ident "warn_about_productions_never_reduced/2280"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/lr1.ml[955,29664+38]..src/lr1.ml[955,29664+40])
                                      Texp_construct "()"
                                      []
                                ]
          ]
    ]
  structure_item (src/lr1.ml[986,31184+0]..src/lr1.ml[987,31196+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[986,31184+4]..src/lr1.ml[986,31184+9])
          Tpat_var "extra/2345"
        expression (src/lr1.ml[987,31196+2]..src/lr1.ml[987,31196+7])
          Texp_apply
          expression (src/lr1.ml[987,31196+2]..src/lr1.ml[987,31196+5])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[987,31196+6]..src/lr1.ml[987,31196+7])
                Texp_constant Const_int 0
          ]
    ]
  structure_item (src/lr1.ml[992,31347+0]..src/lr1.ml[993,31365+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[992,31347+4]..src/lr1.ml[992,31347+15])
          Tpat_var "prioritized/2346"
        expression (src/lr1.ml[993,31365+2]..src/lr1.ml[993,31365+8])
          Texp_apply
          expression (src/lr1.ml[993,31365+2]..src/lr1.ml[993,31365+5])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[993,31365+6]..src/lr1.ml[993,31365+8])
                Texp_construct "[]"
                []
          ]
    ]
  structure_item (src/lr1.ml[997,31458+0]..src/lr1.ml[998,31474+26])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[997,31458+4]..src/lr1.ml[997,31458+13])
          Tpat_var "extra_nts/2347"
        expression (src/lr1.ml[998,31474+2]..src/lr1.ml[998,31474+26])
          Texp_apply
          expression (src/lr1.ml[998,31474+2]..src/lr1.ml[998,31474+5])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (src/lr1.ml[998,31474+6]..src/lr1.ml[998,31474+26])
                Texp_ident "Dune__exe!.Grammar.NonterminalSet.empty"
          ]
    ]
  structure_item (src/lr1.ml[1000,31502+0]..src/lr1.ml[1030,32893+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[1000,31502+4]..src/lr1.ml[1000,31502+28])
          Tpat_var "extra_reductions_in_node/2434"
        expression (src/lr1.ml[1000,31502+29]..src/lr1.ml[1030,32893+7]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[1000,31502+29]..src/lr1.ml[1000,31502+33])
                Tpat_var "node/2436"
              expression (src/lr1.ml[1002,31598+2]..src/lr1.ml[1030,32893+7])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/lr1.ml[1002,31598+6]..src/lr1.ml[1002,31598+17])
                      extra
                        Tpat_extra_constraint
                        core_type (src/lr1.ml[1002,31598+20]..src/lr1.ml[1002,31598+37])
                          Ttyp_constr "Dune__exe!.Grammar.ProductionMap.t"
                          [
                            core_type (src/lr1.ml[1002,31598+20]..src/lr1.ml[1002,31598+21])
                              Ttyp_any
                          ]
                      Tpat_alias "productions/2437"
                      pattern (src/lr1.ml[1002,31598+6]..src/lr1.ml[1002,31598+17])
                        Tpat_any
                    expression (src/lr1.ml[1002,31598+40]..src/lr1.ml[1002,31598+68])
                      extra
                        Texp_constraint
                        core_type (src/lr1.ml[1002,31598+20]..src/lr1.ml[1002,31598+37])
                          Ttyp_constr "Dune__exe!.Grammar.ProductionMap.t"
                          [
                            core_type (src/lr1.ml[1002,31598+20]..src/lr1.ml[1002,31598+21])
                              Ttyp_any
                          ]
                      Texp_apply
                      expression (src/lr1.ml[1002,31598+40]..src/lr1.ml[1002,31598+50])
                        Texp_ident "Dune__exe!.Lr0.invert"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[1002,31598+51]..src/lr1.ml[1002,31598+68])
                            Texp_apply
                            expression (src/lr1.ml[1002,31598+52]..src/lr1.ml[1002,31598+62])
                              Texp_ident "reductions/1456"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[1002,31598+63]..src/lr1.ml[1002,31598+67])
                                  Texp_ident "node/2436"
                            ]
                      ]
                ]
                expression (src/lr1.ml[1003,31670+2]..src/lr1.ml[1030,32893+7])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (src/lr1.ml[1003,31670+6]..src/lr1.ml[1003,31670+11])
                        extra
                          Tpat_extra_constraint
                          core_type (src/lr1.ml[1003,31670+14]..src/lr1.ml[1003,31670+35])
                            Ttyp_constr "list/9!"
                            [
                              core_type (src/lr1.ml[1003,31670+14]..src/lr1.ml[1003,31670+30])
                                Ttyp_constr "Dune__exe!.Grammar.Production.index"
                                []
                            ]
                        Tpat_alias "prods/2438"
                        pattern (src/lr1.ml[1003,31670+6]..src/lr1.ml[1003,31670+11])
                          Tpat_any
                      expression (src/lr1.ml[1004,31708+4]..src/lr1.ml[1004,31708+73])
                        extra
                          Texp_constraint
                          core_type (src/lr1.ml[1003,31670+14]..src/lr1.ml[1003,31670+35])
                            Ttyp_constr "list/9!"
                            [
                              core_type (src/lr1.ml[1003,31670+14]..src/lr1.ml[1003,31670+30])
                                Ttyp_constr "Dune__exe!.Grammar.Production.index"
                                []
                            ]
                        Texp_apply
                        expression (src/lr1.ml[1004,31708+4]..src/lr1.ml[1004,31708+22])
                          Texp_ident "Dune__exe!.Grammar.ProductionMap.fold"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[1004,31708+23]..src/lr1.ml[1004,31708+58])
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/lr1.ml[1004,31708+28]..src/lr1.ml[1004,31708+32])
                                    Tpat_var "prod/2439"
                                  expression (src/lr1.ml[1004,31708+33]..src/lr1.ml[1004,31708+57]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/lr1.ml[1004,31708+33]..src/lr1.ml[1004,31708+34])
                                          Tpat_any
                                        expression (src/lr1.ml[1004,31708+35]..src/lr1.ml[1004,31708+57]) ghost
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/lr1.ml[1004,31708+35]..src/lr1.ml[1004,31708+40])
                                                Tpat_var "prods/2440"
                                              expression (src/lr1.ml[1004,31708+44]..src/lr1.ml[1004,31708+57])
                                                Texp_construct "::"
                                                [
                                                  expression (src/lr1.ml[1004,31708+44]..src/lr1.ml[1004,31708+48])
                                                    Texp_ident "prod/2439"
                                                  expression (src/lr1.ml[1004,31708+52]..src/lr1.ml[1004,31708+57])
                                                    Texp_ident "prods/2440"
                                                ]
                                          ]
                                    ]
                              ]
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[1004,31708+59]..src/lr1.ml[1004,31708+70])
                              Texp_ident "productions/2437"
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[1004,31708+71]..src/lr1.ml[1004,31708+73])
                              Texp_construct "[]"
                              []
                        ]
                  ]
                  expression (src/lr1.ml[1007,31864+2]..src/lr1.ml[1030,32893+7])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/lr1.ml[1007,31864+6]..src/lr1.ml[1007,31864+11])
                          Tpat_var "prods/2442"
                        expression (src/lr1.ml[1007,31864+14]..src/lr1.ml[1007,31864+52])
                          Texp_apply
                          expression (src/lr1.ml[1007,31864+14]..src/lr1.ml[1007,31864+25])
                            Texp_ident "Stdlib!.List.filter"
                          [
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[1007,31864+26]..src/lr1.ml[1007,31864+46])
                                Texp_ident "Dune__exe!.Grammar.OnErrorReduce.reduce"
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[1007,31864+47]..src/lr1.ml[1007,31864+52])
                                Texp_ident "prods/2438"
                          ]
                    ]
                    expression (src/lr1.ml[1009,31983+2]..src/lr1.ml[1030,32893+7])
                      Texp_match
                      expression (src/lr1.ml[1009,31983+8]..src/lr1.ml[1009,31983+48])
                        Texp_apply
                        expression (src/lr1.ml[1009,31983+8]..src/lr1.ml[1009,31983+17])
                          Texp_ident "Dune__exe!.Misc.best"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[1009,31983+18]..src/lr1.ml[1009,31983+42])
                              Texp_ident "Dune__exe!.Grammar.OnErrorReduce.preferable"
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[1009,31983+43]..src/lr1.ml[1009,31983+48])
                              Texp_ident "prods/2442"
                        ]
                      [
                        <case>
                          pattern (src/lr1.ml[1010,32037+4]..src/lr1.ml[1010,32037+8])
                            Tpat_value
                            pattern (src/lr1.ml[1010,32037+4]..src/lr1.ml[1010,32037+8])
                              Tpat_construct "None"
                              []
                              None
                          expression (src/lr1.ml[1013,32175+6]..src/lr1.ml[1013,32175+8])
                            Texp_construct "()"
                            []
                        <case>
                          pattern (src/lr1.ml[1014,32184+4]..src/lr1.ml[1014,32184+13])
                            Tpat_value
                            pattern (src/lr1.ml[1014,32184+4]..src/lr1.ml[1014,32184+13])
                              Tpat_construct "Some"
                              [
                                pattern (src/lr1.ml[1014,32184+9]..src/lr1.ml[1014,32184+13])
                                  Tpat_var "prod/2446"
                              ]
                              None
                          expression (src/lr1.ml[1015,32201+6]..src/lr1.ml[1030,32893+7])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/lr1.ml[1015,32201+10]..src/lr1.ml[1015,32201+20])
                                  Tpat_var "acceptable/2447"
                                expression (src/lr1.ml[1015,32201+23]..src/lr1.ml[1015,32201+45])
                                  Texp_apply
                                  expression (src/lr1.ml[1015,32201+23]..src/lr1.ml[1015,32201+40])
                                    Texp_ident "acceptable_tokens/1699"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[1015,32201+41]..src/lr1.ml[1015,32201+45])
                                        Texp_ident "node/2436"
                                  ]
                            ]
                            expression (src/lr1.ml[1019,32457+6]..src/lr1.ml[1030,32893+7])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/lr1.ml[1019,32457+10]..src/lr1.ml[1019,32457+19])
                                    Tpat_var "triggered/2448"
                                  expression (src/lr1.ml[1019,32457+22]..src/lr1.ml[1024,32663+7])
                                    Texp_lazy                                    expression (src/lr1.ml[1019,32457+27]..src/lr1.ml[1024,32663+7])
                                      Texp_sequence
                                      expression (src/lr1.ml[1020,32486+8]..src/lr1.ml[1020,32486+18])
                                        Texp_apply
                                        expression (src/lr1.ml[1020,32486+8]..src/lr1.ml[1020,32486+12])
                                          Texp_ident "Stdlib!.incr"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[1020,32486+13]..src/lr1.ml[1020,32486+18])
                                              Texp_ident "extra/2345"
                                        ]
                                      expression (src/lr1.ml[1021,32506+8]..src/lr1.ml[1023,32591+71])
                                        Texp_sequence
                                        expression (src/lr1.ml[1021,32506+8]..src/lr1.ml[1022,32544+45])
                                          Texp_ifthenelse
                                          expression (src/lr1.ml[1021,32506+11]..src/lr1.ml[1021,32506+32])
                                            Texp_apply
                                            expression (src/lr1.ml[1021,32506+29]..src/lr1.ml[1021,32506+30])
                                              Texp_ident "Stdlib!.>"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/lr1.ml[1021,32506+11]..src/lr1.ml[1021,32506+28])
                                                  Texp_apply
                                                  expression (src/lr1.ml[1021,32506+11]..src/lr1.ml[1021,32506+22])
                                                    Texp_ident "Stdlib!.List.length"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/lr1.ml[1021,32506+23]..src/lr1.ml[1021,32506+28])
                                                        Texp_ident "prods/2442"
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (src/lr1.ml[1021,32506+31]..src/lr1.ml[1021,32506+32])
                                                  Texp_constant Const_int 1
                                            ]
                                          expression (src/lr1.ml[1022,32544+10]..src/lr1.ml[1022,32544+45])
                                            Texp_apply
                                            expression (src/lr1.ml[1022,32544+22]..src/lr1.ml[1022,32544+24])
                                              Texp_ident "Stdlib!.:="
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/lr1.ml[1022,32544+10]..src/lr1.ml[1022,32544+21])
                                                  Texp_ident "prioritized/2346"
                                              <arg>
                                                Nolabel
                                                expression (src/lr1.ml[1022,32544+25]..src/lr1.ml[1022,32544+45])
                                                  Texp_construct "::"
                                                  [
                                                    expression (src/lr1.ml[1022,32544+25]..src/lr1.ml[1022,32544+29])
                                                      Texp_ident "node/2436"
                                                    expression (src/lr1.ml[1022,32544+33]..src/lr1.ml[1022,32544+45])
                                                      Texp_apply
                                                      expression (src/lr1.ml[1022,32544+33]..src/lr1.ml[1022,32544+34])
                                                        Texp_ident "Stdlib!.!"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/lr1.ml[1022,32544+34]..src/lr1.ml[1022,32544+45])
                                                            Texp_ident "prioritized/2346"
                                                      ]
                                                  ]
                                            ]
                                          None
                                        expression (src/lr1.ml[1023,32591+8]..src/lr1.ml[1023,32591+71])
                                          Texp_apply
                                          expression (src/lr1.ml[1023,32591+18]..src/lr1.ml[1023,32591+20])
                                            Texp_ident "Stdlib!.:="
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[1023,32591+8]..src/lr1.ml[1023,32591+17])
                                                Texp_ident "extra_nts/2347"
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[1023,32591+21]..src/lr1.ml[1023,32591+71])
                                                Texp_apply
                                                expression (src/lr1.ml[1023,32591+21]..src/lr1.ml[1023,32591+39])
                                                  Texp_ident "Dune__exe!.Grammar.NonterminalSet.add"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr1.ml[1023,32591+40]..src/lr1.ml[1023,32591+60])
                                                      Texp_apply
                                                      expression (src/lr1.ml[1023,32591+41]..src/lr1.ml[1023,32591+54])
                                                        Texp_ident "Dune__exe!.Grammar.Production.nt"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/lr1.ml[1023,32591+55]..src/lr1.ml[1023,32591+59])
                                                            Texp_ident "prod/2446"
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr1.ml[1023,32591+61]..src/lr1.ml[1023,32591+71])
                                                      Texp_apply
                                                      expression (src/lr1.ml[1023,32591+61]..src/lr1.ml[1023,32591+62])
                                                        Texp_ident "Stdlib!.!"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/lr1.ml[1023,32591+62]..src/lr1.ml[1023,32591+71])
                                                            Texp_ident "extra_nts/2347"
                                                      ]
                                                ]
                                          ]
                              ]
                              expression (src/lr1.ml[1025,32674+6]..src/lr1.ml[1030,32893+7])
                                Texp_apply
                                expression (src/lr1.ml[1025,32674+6]..src/lr1.ml[1025,32674+24])
                                  Texp_ident "Dune__exe!.Grammar.Terminal.iter_real"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/lr1.ml[1025,32674+25]..src/lr1.ml[1030,32893+7])
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (src/lr1.ml[1025,32674+30]..src/lr1.ml[1025,32674+33])
                                            Tpat_var "tok/2469"
                                          expression (src/lr1.ml[1026,32711+8]..src/lr1.ml[1029,32881+11])
                                            Texp_ifthenelse
                                            expression (src/lr1.ml[1026,32711+11]..src/lr1.ml[1026,32711+47])
                                              Texp_apply
                                              expression (src/lr1.ml[1026,32711+11]..src/lr1.ml[1026,32711+14])
                                                Texp_ident "Stdlib!.not"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr1.ml[1026,32711+15]..src/lr1.ml[1026,32711+47])
                                                    Texp_apply
                                                    expression (src/lr1.ml[1026,32711+16]..src/lr1.ml[1026,32711+31])
                                                      Texp_ident "Dune__exe!.Grammar.TerminalSet.mem"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/lr1.ml[1026,32711+32]..src/lr1.ml[1026,32711+35])
                                                          Texp_ident "tok/2469"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/lr1.ml[1026,32711+36]..src/lr1.ml[1026,32711+46])
                                                          Texp_ident "acceptable/2447"
                                                    ]
                                              ]
                                            expression (src/lr1.ml[1026,32711+53]..src/lr1.ml[1029,32881+11])
                                              Texp_sequence
                                              expression (src/lr1.ml[1027,32770+10]..src/lr1.ml[1027,32770+78])
                                                Texp_apply
                                                expression (src/lr1.ml[1027,32770+10]..src/lr1.ml[1027,32770+24])
                                                  Texp_ident "set_reductions/1452"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr1.ml[1027,32770+25]..src/lr1.ml[1027,32770+29])
                                                      Texp_ident "node/2436"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr1.ml[1027,32770+30]..src/lr1.ml[1027,32770+78])
                                                      Texp_apply
                                                      expression (src/lr1.ml[1027,32770+31]..src/lr1.ml[1027,32770+46])
                                                        Texp_ident "Dune__exe!.Grammar.TerminalMap.add"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/lr1.ml[1027,32770+47]..src/lr1.ml[1027,32770+50])
                                                            Texp_ident "tok/2469"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/lr1.ml[1027,32770+51]..src/lr1.ml[1027,32770+59])
                                                            Texp_construct "::"
                                                            [
                                                              expression (src/lr1.ml[1027,32770+53]..src/lr1.ml[1027,32770+57])
                                                                Texp_ident "prod/2446"
                                                              expression (src/lr1.ml[1027,32770+58]..src/lr1.ml[1027,32770+59]) ghost
                                                                Texp_construct "[]"
                                                                []
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/lr1.ml[1027,32770+60]..src/lr1.ml[1027,32770+77])
                                                            Texp_apply
                                                            expression (src/lr1.ml[1027,32770+61]..src/lr1.ml[1027,32770+71])
                                                              Texp_ident "reductions/1456"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/lr1.ml[1027,32770+72]..src/lr1.ml[1027,32770+76])
                                                                  Texp_ident "node/2436"
                                                            ]
                                                      ]
                                                ]
                                              expression (src/lr1.ml[1028,32850+10]..src/lr1.ml[1028,32850+30])
                                                Texp_apply
                                                expression (src/lr1.ml[1028,32850+10]..src/lr1.ml[1028,32850+20])
                                                  Texp_ident "Stdlib!.Lazy.force"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr1.ml[1028,32850+21]..src/lr1.ml[1028,32850+30])
                                                      Texp_ident "triggered/2448"
                                                ]
                                            None
                                      ]
                                ]
                      ]
          ]
    ]
  structure_item (src/lr1.ml[1032,32902+0]..src/lr1.ml[1060,33939+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[1032,32902+4]..src/lr1.ml[1032,32902+20])
          Tpat_var "extra_reductions/2483"
        expression (src/lr1.ml[1032,32902+21]..src/lr1.ml[1060,33939+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[1032,32902+21]..src/lr1.ml[1032,32902+23])
                Tpat_construct "()"
                []
                None
              expression (src/lr1.ml[1034,32956+2]..src/lr1.ml[1060,33939+3])
                Texp_sequence
                expression (src/lr1.ml[1034,32956+2]..src/lr1.ml[1039,33196+3])
                  Texp_apply
                  expression (src/lr1.ml[1034,32956+2]..src/lr1.ml[1034,32956+6])
                    Texp_ident "iter/1574"
                  [
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[1034,32956+7]..src/lr1.ml[1039,33196+3])
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/lr1.ml[1034,32956+12]..src/lr1.ml[1034,32956+16])
                              Tpat_var "node/2485"
                            expression (src/lr1.ml[1037,33112+4]..src/lr1.ml[1038,33160+35])
                              Texp_ifthenelse
                              expression (src/lr1.ml[1037,33112+7]..src/lr1.ml[1037,33112+42])
                                Texp_apply
                                expression (src/lr1.ml[1037,33112+7]..src/lr1.ml[1037,33112+10])
                                  Texp_ident "Stdlib!.not"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/lr1.ml[1037,33112+11]..src/lr1.ml[1037,33112+42])
                                      Texp_apply
                                      expression (src/lr1.ml[1037,33112+12]..src/lr1.ml[1037,33112+36])
                                        Texp_ident "forbid_default_reduction/1467"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/lr1.ml[1037,33112+37]..src/lr1.ml[1037,33112+41])
                                            Texp_ident "node/2485"
                                      ]
                                ]
                              expression (src/lr1.ml[1038,33160+6]..src/lr1.ml[1038,33160+35])
                                Texp_apply
                                expression (src/lr1.ml[1038,33160+6]..src/lr1.ml[1038,33160+30])
                                  Texp_ident "extra_reductions_in_node/2434"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/lr1.ml[1038,33160+31]..src/lr1.ml[1038,33160+35])
                                      Texp_ident "node/2485"
                                ]
                              None
                        ]
                  ]
                expression (src/lr1.ml[1041,33223+2]..src/lr1.ml[1060,33939+3])
                  Texp_sequence
                  expression (src/lr1.ml[1041,33223+2]..src/lr1.ml[1053,33659+5])
                    Texp_ifthenelse
                    expression (src/lr1.ml[1041,33223+5]..src/lr1.ml[1041,33223+15])
                      Texp_apply
                      expression (src/lr1.ml[1041,33223+12]..src/lr1.ml[1041,33223+13])
                        Texp_ident "Stdlib!.>"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[1041,33223+5]..src/lr1.ml[1041,33223+11])
                            Texp_apply
                            expression (src/lr1.ml[1041,33223+5]..src/lr1.ml[1041,33223+6])
                              Texp_ident "Stdlib!.!"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr1.ml[1041,33223+6]..src/lr1.ml[1041,33223+11])
                                  Texp_ident "extra/2345"
                            ]
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[1041,33223+14]..src/lr1.ml[1041,33223+15])
                            Texp_constant Const_int 0
                      ]
                    expression (src/lr1.ml[1041,33223+21]..src/lr1.ml[1053,33659+5])
                      Texp_sequence
                      expression (src/lr1.ml[1042,33250+4]..src/lr1.ml[1047,33479+5])
                        Texp_apply
                        expression (src/lr1.ml[1042,33250+4]..src/lr1.ml[1042,33250+14])
                          Texp_ident "Dune__exe!.Error.logA"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[1042,33250+15]..src/lr1.ml[1042,33250+16])
                              Texp_constant Const_int 1
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[1042,33250+17]..src/lr1.ml[1047,33479+5])
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/lr1.ml[1042,33250+22]..src/lr1.ml[1042,33250+23])
                                    Tpat_var "f/2486"
                                  expression (src/lr1.ml[1043,33277+6]..src/lr1.ml[1046,33444+34])
                                    Texp_sequence
                                    expression (src/lr1.ml[1043,33277+6]..src/lr1.ml[1044,33355+14])
                                      Texp_apply
                                      expression (src/lr1.ml[1043,33277+6]..src/lr1.ml[1043,33277+20])
                                        Texp_ident "Stdlib!.Printf.fprintf"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/lr1.ml[1043,33277+21]..src/lr1.ml[1043,33277+22])
                                            Texp_ident "f/2486"
                                        <arg>
                                          Nolabel
                                          expression (src/lr1.ml[1043,33277+23]..src/lr1.ml[1043,33277+77])
                                            Texp_construct "CamlinternalFormatBasics.Format"
                                            [
                                              expression (src/lr1.ml[1043,33277+23]..src/lr1.ml[1043,33277+77]) ghost
                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                [
                                                  expression (src/lr1.ml[1043,33277+23]..src/lr1.ml[1043,33277+77]) ghost
                                                    Texp_constant Const_string("Extra reductions on error were added in ",(src/lr1.ml[1043,33277+23]..src/lr1.ml[1043,33277+77]) ghost,None)
                                                  expression (src/lr1.ml[1043,33277+23]..src/lr1.ml[1043,33277+77]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.Int"
                                                    [
                                                      expression (src/lr1.ml[1043,33277+23]..src/lr1.ml[1043,33277+77]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.Int_d"
                                                        []
                                                      expression (src/lr1.ml[1043,33277+23]..src/lr1.ml[1043,33277+77]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                        []
                                                      expression (src/lr1.ml[1043,33277+23]..src/lr1.ml[1043,33277+77]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.No_precision"
                                                        []
                                                      expression (src/lr1.ml[1043,33277+23]..src/lr1.ml[1043,33277+77]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                        [
                                                          expression (src/lr1.ml[1043,33277+23]..src/lr1.ml[1043,33277+77]) ghost
                                                            Texp_constant Const_string(" states.\n",(src/lr1.ml[1043,33277+23]..src/lr1.ml[1043,33277+77]) ghost,None)
                                                          expression (src/lr1.ml[1043,33277+23]..src/lr1.ml[1043,33277+77]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                            []
                                                        ]
                                                    ]
                                                ]
                                              expression (src/lr1.ml[1043,33277+23]..src/lr1.ml[1043,33277+77]) ghost
                                                Texp_constant Const_string("Extra reductions on error were added in %d states.\n",(src/lr1.ml[1043,33277+23]..src/lr1.ml[1043,33277+77]) ghost,None)
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/lr1.ml[1044,33355+8]..src/lr1.ml[1044,33355+14])
                                            Texp_apply
                                            expression (src/lr1.ml[1044,33355+8]..src/lr1.ml[1044,33355+9])
                                              Texp_ident "Stdlib!.!"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/lr1.ml[1044,33355+9]..src/lr1.ml[1044,33355+14])
                                                  Texp_ident "extra/2345"
                                            ]
                                      ]
                                    expression (src/lr1.ml[1045,33371+6]..src/lr1.ml[1046,33444+34])
                                      Texp_apply
                                      expression (src/lr1.ml[1045,33371+6]..src/lr1.ml[1045,33371+20])
                                        Texp_ident "Stdlib!.Printf.fprintf"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/lr1.ml[1045,33371+21]..src/lr1.ml[1045,33371+22])
                                            Texp_ident "f/2486"
                                        <arg>
                                          Nolabel
                                          expression (src/lr1.ml[1045,33371+23]..src/lr1.ml[1045,33371+72])
                                            Texp_construct "CamlinternalFormatBasics.Format"
                                            [
                                              expression (src/lr1.ml[1045,33371+23]..src/lr1.ml[1045,33371+72]) ghost
                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                [
                                                  expression (src/lr1.ml[1045,33371+23]..src/lr1.ml[1045,33371+72]) ghost
                                                    Texp_constant Const_string("Priority played a role in ",(src/lr1.ml[1045,33371+23]..src/lr1.ml[1045,33371+72]) ghost,None)
                                                  expression (src/lr1.ml[1045,33371+23]..src/lr1.ml[1045,33371+72]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.Int"
                                                    [
                                                      expression (src/lr1.ml[1045,33371+23]..src/lr1.ml[1045,33371+72]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.Int_d"
                                                        []
                                                      expression (src/lr1.ml[1045,33371+23]..src/lr1.ml[1045,33371+72]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                        []
                                                      expression (src/lr1.ml[1045,33371+23]..src/lr1.ml[1045,33371+72]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.No_precision"
                                                        []
                                                      expression (src/lr1.ml[1045,33371+23]..src/lr1.ml[1045,33371+72]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                        [
                                                          expression (src/lr1.ml[1045,33371+23]..src/lr1.ml[1045,33371+72]) ghost
                                                            Texp_constant Const_string(" of these states.\n",(src/lr1.ml[1045,33371+23]..src/lr1.ml[1045,33371+72]) ghost,None)
                                                          expression (src/lr1.ml[1045,33371+23]..src/lr1.ml[1045,33371+72]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                            []
                                                        ]
                                                    ]
                                                ]
                                              expression (src/lr1.ml[1045,33371+23]..src/lr1.ml[1045,33371+72]) ghost
                                                Texp_constant Const_string("Priority played a role in %d of these states.\n",(src/lr1.ml[1045,33371+23]..src/lr1.ml[1045,33371+72]) ghost,None)
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/lr1.ml[1046,33444+8]..src/lr1.ml[1046,33444+34])
                                            Texp_apply
                                            expression (src/lr1.ml[1046,33444+9]..src/lr1.ml[1046,33444+20])
                                              Texp_ident "Stdlib!.List.length"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/lr1.ml[1046,33444+21]..src/lr1.ml[1046,33444+33])
                                                  Texp_apply
                                                  expression (src/lr1.ml[1046,33444+21]..src/lr1.ml[1046,33444+22])
                                                    Texp_ident "Stdlib!.!"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/lr1.ml[1046,33444+22]..src/lr1.ml[1046,33444+33])
                                                        Texp_ident "prioritized/2346"
                                                  ]
                                            ]
                                      ]
                              ]
                        ]
                      expression (src/lr1.ml[1048,33486+4]..src/lr1.ml[1052,33653+5])
                        Texp_apply
                        expression (src/lr1.ml[1048,33486+4]..src/lr1.ml[1048,33486+14])
                          Texp_ident "Dune__exe!.Error.logA"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[1048,33486+15]..src/lr1.ml[1048,33486+16])
                              Texp_constant Const_int 2
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[1048,33486+17]..src/lr1.ml[1052,33653+5])
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/lr1.ml[1048,33486+22]..src/lr1.ml[1048,33486+23])
                                    Tpat_var "f/2487"
                                  expression (src/lr1.ml[1049,33513+6]..src/lr1.ml[1051,33596+56])
                                    Texp_ifthenelse
                                    expression (src/lr1.ml[1049,33513+9]..src/lr1.ml[1049,33513+27])
                                      Texp_apply
                                      expression (src/lr1.ml[1049,33513+22]..src/lr1.ml[1049,33513+24])
                                        Texp_ident "Stdlib!.<>"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/lr1.ml[1049,33513+9]..src/lr1.ml[1049,33513+21])
                                            Texp_apply
                                            expression (src/lr1.ml[1049,33513+9]..src/lr1.ml[1049,33513+10])
                                              Texp_ident "Stdlib!.!"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/lr1.ml[1049,33513+10]..src/lr1.ml[1049,33513+21])
                                                  Texp_ident "prioritized/2346"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/lr1.ml[1049,33513+25]..src/lr1.ml[1049,33513+27])
                                            Texp_construct "[]"
                                            []
                                      ]
                                    expression (src/lr1.ml[1050,33546+8]..src/lr1.ml[1051,33596+56])
                                      Texp_apply
                                      expression (src/lr1.ml[1050,33546+8]..src/lr1.ml[1050,33546+22])
                                        Texp_ident "Stdlib!.Printf.fprintf"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/lr1.ml[1050,33546+23]..src/lr1.ml[1050,33546+24])
                                            Texp_ident "f/2487"
                                        <arg>
                                          Nolabel
                                          expression (src/lr1.ml[1050,33546+25]..src/lr1.ml[1050,33546+49])
                                            Texp_construct "CamlinternalFormatBasics.Format"
                                            [
                                              expression (src/lr1.ml[1050,33546+25]..src/lr1.ml[1050,33546+49]) ghost
                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                [
                                                  expression (src/lr1.ml[1050,33546+25]..src/lr1.ml[1050,33546+49]) ghost
                                                    Texp_constant Const_string("These states are ",(src/lr1.ml[1050,33546+25]..src/lr1.ml[1050,33546+49]) ghost,None)
                                                  expression (src/lr1.ml[1050,33546+25]..src/lr1.ml[1050,33546+49]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.String"
                                                    [
                                                      expression (src/lr1.ml[1050,33546+25]..src/lr1.ml[1050,33546+49]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                        []
                                                      expression (src/lr1.ml[1050,33546+25]..src/lr1.ml[1050,33546+49]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                        [
                                                          expression (src/lr1.ml[1050,33546+25]..src/lr1.ml[1050,33546+49]) ghost
                                                            Texp_constant Const_string(".\n",(src/lr1.ml[1050,33546+25]..src/lr1.ml[1050,33546+49]) ghost,None)
                                                          expression (src/lr1.ml[1050,33546+25]..src/lr1.ml[1050,33546+49]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                            []
                                                        ]
                                                    ]
                                                ]
                                              expression (src/lr1.ml[1050,33546+25]..src/lr1.ml[1050,33546+49]) ghost
                                                Texp_constant Const_string("These states are %s.\n",(src/lr1.ml[1050,33546+25]..src/lr1.ml[1050,33546+49]) ghost,None)
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/lr1.ml[1051,33596+10]..src/lr1.ml[1051,33596+56])
                                            Texp_apply
                                            expression (src/lr1.ml[1051,33596+11]..src/lr1.ml[1051,33596+24])
                                              Texp_ident "NodeSet/2014.print"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/lr1.ml[1051,33596+25]..src/lr1.ml[1051,33596+55])
                                                  Texp_apply
                                                  expression (src/lr1.ml[1051,33596+26]..src/lr1.ml[1051,33596+41])
                                                    Texp_ident "NodeSet/2014.of_list"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/lr1.ml[1051,33596+42]..src/lr1.ml[1051,33596+54])
                                                        Texp_apply
                                                        expression (src/lr1.ml[1051,33596+42]..src/lr1.ml[1051,33596+43])
                                                          Texp_ident "Stdlib!.!"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/lr1.ml[1051,33596+43]..src/lr1.ml[1051,33596+54])
                                                              Texp_ident "prioritized/2346"
                                                        ]
                                                  ]
                                            ]
                                      ]
                                    None
                              ]
                        ]
                    None
                  expression (src/lr1.ml[1055,33724+2]..src/lr1.ml[1060,33939+3])
                    Texp_apply
                    expression (src/lr1.ml[1055,33724+2]..src/lr1.ml[1055,33724+20])
                      Texp_ident "Dune__exe!.Grammar.OnErrorReduce.iter"
                    [
                      <arg>
                        Nolabel
                        expression (src/lr1.ml[1055,33724+21]..src/lr1.ml[1060,33939+3])
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/lr1.ml[1055,33724+26]..src/lr1.ml[1055,33724+28])
                                Tpat_var "nt/2488"
                              expression (src/lr1.ml[1056,33756+4]..src/lr1.ml[1059,33902+36])
                                Texp_ifthenelse
                                expression (src/lr1.ml[1056,33756+7]..src/lr1.ml[1056,33756+45])
                                  Texp_apply
                                  expression (src/lr1.ml[1056,33756+7]..src/lr1.ml[1056,33756+10])
                                    Texp_ident "Stdlib!.not"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[1056,33756+11]..src/lr1.ml[1056,33756+45])
                                        Texp_apply
                                        expression (src/lr1.ml[1056,33756+12]..src/lr1.ml[1056,33756+30])
                                          Texp_ident "Dune__exe!.Grammar.NonterminalSet.mem"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[1056,33756+31]..src/lr1.ml[1056,33756+33])
                                              Texp_ident "nt/2488"
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[1056,33756+34]..src/lr1.ml[1056,33756+44])
                                              Texp_apply
                                              expression (src/lr1.ml[1056,33756+34]..src/lr1.ml[1056,33756+35])
                                                Texp_ident "Stdlib!.!"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr1.ml[1056,33756+35]..src/lr1.ml[1056,33756+44])
                                                    Texp_ident "extra_nts/2347"
                                              ]
                                        ]
                                  ]
                                expression (src/lr1.ml[1057,33807+6]..src/lr1.ml[1059,33902+36])
                                  Texp_apply
                                  expression (src/lr1.ml[1057,33807+6]..src/lr1.ml[1057,33807+27])
                                    Texp_ident "Dune__exe!.Error.grammar_warning"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[1057,33807+28]..src/lr1.ml[1057,33807+30])
                                        Texp_construct "[]"
                                        []
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[1058,33838+8]..src/lr1.ml[1058,33838+63])
                                        Texp_construct "CamlinternalFormatBasics.Format"
                                        [
                                          expression (src/lr1.ml[1058,33838+8]..src/lr1.ml[1058,33838+63]) ghost
                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                            [
                                              expression (src/lr1.ml[1058,33838+8]..src/lr1.ml[1058,33838+63]) ghost
                                                Texp_constant Const_string("the declaration ",(src/lr1.ml[1058,33838+8]..src/lr1.ml[1058,33838+63]) ghost,None)
                                              expression (src/lr1.ml[1058,33838+8]..src/lr1.ml[1058,33838+63]) ghost
                                                Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                [
                                                  expression (src/lr1.ml[1058,33838+8]..src/lr1.ml[1058,33838+63]) ghost
                                                    Texp_constant Const_char 25
                                                  expression (src/lr1.ml[1058,33838+8]..src/lr1.ml[1058,33838+63]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                    [
                                                      expression (src/lr1.ml[1058,33838+8]..src/lr1.ml[1058,33838+63]) ghost
                                                        Texp_constant Const_string("on_error_reduce ",(src/lr1.ml[1058,33838+8]..src/lr1.ml[1058,33838+63]) ghost,None)
                                                      expression (src/lr1.ml[1058,33838+8]..src/lr1.ml[1058,33838+63]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.String"
                                                        [
                                                          expression (src/lr1.ml[1058,33838+8]..src/lr1.ml[1058,33838+63]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                            []
                                                          expression (src/lr1.ml[1058,33838+8]..src/lr1.ml[1058,33838+63]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                            [
                                                              expression (src/lr1.ml[1058,33838+8]..src/lr1.ml[1058,33838+63]) ghost
                                                                Texp_constant Const_string(" is never useful.",(src/lr1.ml[1058,33838+8]..src/lr1.ml[1058,33838+63]) ghost,None)
                                                              expression (src/lr1.ml[1058,33838+8]..src/lr1.ml[1058,33838+63]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                []
                                                            ]
                                                        ]
                                                    ]
                                                ]
                                            ]
                                          expression (src/lr1.ml[1058,33838+8]..src/lr1.ml[1058,33838+63]) ghost
                                            Texp_constant Const_string("the declaration %%on_error_reduce %s is never useful.",(src/lr1.ml[1058,33838+8]..src/lr1.ml[1058,33838+63]) ghost,None)
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/lr1.ml[1059,33902+8]..src/lr1.ml[1059,33902+36])
                                        Texp_apply
                                        expression (src/lr1.ml[1059,33902+9]..src/lr1.ml[1059,33902+26])
                                          Texp_ident "Dune__exe!.Grammar.Nonterminal.print"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[1059,33902+27]..src/lr1.ml[1059,33902+32])
                                              Texp_construct "false"
                                              []
                                          <arg>
                                            Nolabel
                                            expression (src/lr1.ml[1059,33902+33]..src/lr1.ml[1059,33902+35])
                                              Texp_ident "nt/2488"
                                        ]
                                  ]
                                None
                          ]
                    ]
          ]
    ]
  structure_item (src/lr1.ml[1065,34105+0]..src/lr1.ml[1078,34469+14])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[1065,34105+4]..src/lr1.ml[1065,34105+14])
          Tpat_var "fold_entry/2490"
        expression (src/lr1.ml[1065,34105+15]..src/lr1.ml[1078,34469+14]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[1065,34105+15]..src/lr1.ml[1065,34105+16])
                Tpat_var "f/2492"
              expression (src/lr1.ml[1065,34105+17]..src/lr1.ml[1078,34469+14]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr1.ml[1065,34105+17]..src/lr1.ml[1065,34105+21])
                      Tpat_var "accu/2493"
                    expression (src/lr1.ml[1066,34129+2]..src/lr1.ml[1078,34469+14])
                      Texp_apply
                      expression (src/lr1.ml[1066,34129+2]..src/lr1.ml[1066,34129+20])
                        Texp_ident "Dune__exe!.Grammar.ProductionMap.fold"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[1066,34129+21]..src/lr1.ml[1078,34469+3])
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/lr1.ml[1066,34129+26]..src/lr1.ml[1066,34129+30])
                                  Tpat_var "prod/2494"
                                expression (src/lr1.ml[1066,34129+31]..src/lr1.ml[1077,34442+26]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/lr1.ml[1066,34129+31]..src/lr1.ml[1066,34129+36])
                                        Tpat_var "state/2495"
                                      expression (src/lr1.ml[1066,34129+37]..src/lr1.ml[1077,34442+26]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/lr1.ml[1066,34129+37]..src/lr1.ml[1066,34129+41])
                                              Tpat_var "accu/2496"
                                            expression (src/lr1.ml[1067,34174+4]..src/lr1.ml[1077,34442+26])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/lr1.ml[1067,34174+8]..src/lr1.ml[1067,34174+10])
                                                    extra
                                                      Tpat_extra_constraint
                                                      core_type (src/lr1.ml[1067,34174+13]..src/lr1.ml[1067,34174+26])
                                                        Ttyp_constr "Dune__exe!.Grammar.Nonterminal.t"
                                                        []
                                                    Tpat_alias "nt/2497"
                                                    pattern (src/lr1.ml[1067,34174+8]..src/lr1.ml[1067,34174+10])
                                                      Tpat_any
                                                  expression (src/lr1.ml[1068,34203+6]..src/lr1.ml[1072,34293+22])
                                                    extra
                                                      Texp_constraint
                                                      core_type (src/lr1.ml[1067,34174+13]..src/lr1.ml[1067,34174+26])
                                                        Ttyp_constr "Dune__exe!.Grammar.Nonterminal.t"
                                                        []
                                                    Texp_match
                                                    expression (src/lr1.ml[1068,34203+12]..src/lr1.ml[1068,34203+36])
                                                      Texp_apply
                                                      expression (src/lr1.ml[1068,34203+12]..src/lr1.ml[1068,34203+31])
                                                        Texp_ident "Dune__exe!.Grammar.Production.classify"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/lr1.ml[1068,34203+32]..src/lr1.ml[1068,34203+36])
                                                            Texp_ident "prod/2494"
                                                      ]
                                                    [
                                                      <case>
                                                        pattern (src/lr1.ml[1069,34245+8]..src/lr1.ml[1069,34245+15])
                                                          Tpat_value
                                                          pattern (src/lr1.ml[1069,34245+8]..src/lr1.ml[1069,34245+15])
                                                            Tpat_construct "Some"
                                                            [
                                                              pattern (src/lr1.ml[1069,34245+13]..src/lr1.ml[1069,34245+15])
                                                                Tpat_var "nt/2498"
                                                            ]
                                                            None
                                                        expression (src/lr1.ml[1070,34264+10]..src/lr1.ml[1070,34264+12])
                                                          Texp_ident "nt/2498"
                                                      <case>
                                                        pattern (src/lr1.ml[1071,34277+8]..src/lr1.ml[1071,34277+12])
                                                          Tpat_value
                                                          pattern (src/lr1.ml[1071,34277+8]..src/lr1.ml[1071,34277+12])
                                                            Tpat_construct "None"
                                                            []
                                                            None
                                                        expression (src/lr1.ml[1072,34293+10]..src/lr1.ml[1072,34293+22])
                                                          Texp_assert                                                          expression (src/lr1.ml[1072,34293+17]..src/lr1.ml[1072,34293+22])
                                                            Texp_construct "false"
                                                            []
                                                    ]
                                              ]
                                              expression (src/lr1.ml[1074,34356+4]..src/lr1.ml[1077,34442+26])
                                                Texp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (src/lr1.ml[1074,34356+8]..src/lr1.ml[1074,34356+9])
                                                      extra
                                                        Tpat_extra_constraint
                                                        core_type (src/lr1.ml[1074,34356+12]..src/lr1.ml[1074,34356+29])
                                                          Ttyp_constr "Dune__exe!.Stretch.ocamltype"
                                                          []
                                                      Tpat_alias "t/2501"
                                                      pattern (src/lr1.ml[1074,34356+8]..src/lr1.ml[1074,34356+9])
                                                        Tpat_any
                                                    expression (src/lr1.ml[1075,34388+6]..src/lr1.ml[1075,34388+46])
                                                      extra
                                                        Texp_constraint
                                                        core_type (src/lr1.ml[1074,34356+12]..src/lr1.ml[1074,34356+29])
                                                          Ttyp_constr "Dune__exe!.Stretch.ocamltype"
                                                          []
                                                      Texp_apply
                                                      expression (src/lr1.ml[1075,34388+6]..src/lr1.ml[1075,34388+43])
                                                        Texp_ident "Dune__exe!.Grammar.Nonterminal.ocamltype_of_start_symbol"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/lr1.ml[1075,34388+44]..src/lr1.ml[1075,34388+46])
                                                            Texp_ident "nt/2497"
                                                      ]
                                                ]
                                                expression (src/lr1.ml[1077,34442+4]..src/lr1.ml[1077,34442+26])
                                                  Texp_apply
                                                  expression (src/lr1.ml[1077,34442+4]..src/lr1.ml[1077,34442+5])
                                                    Texp_ident "f/2492"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/lr1.ml[1077,34442+6]..src/lr1.ml[1077,34442+10])
                                                        Texp_ident "prod/2494"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/lr1.ml[1077,34442+11]..src/lr1.ml[1077,34442+16])
                                                        Texp_ident "state/2495"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/lr1.ml[1077,34442+17]..src/lr1.ml[1077,34442+19])
                                                        Texp_ident "nt/2497"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/lr1.ml[1077,34442+20]..src/lr1.ml[1077,34442+21])
                                                        Texp_ident "t/2501"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/lr1.ml[1077,34442+22]..src/lr1.ml[1077,34442+26])
                                                        Texp_ident "accu/2496"
                                                  ]
                                        ]
                                  ]
                            ]
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[1078,34469+4]..src/lr1.ml[1078,34469+9])
                            Texp_ident "entry/1446"
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[1078,34469+10]..src/lr1.ml[1078,34469+14])
                            Texp_ident "accu/2493"
                      ]
                ]
          ]
    ]
  structure_item (src/lr1.ml[1080,34485+0]..src/lr1.ml[1085,34654+16])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[1080,34485+4]..src/lr1.ml[1080,34485+15])
          Tpat_var "entry_of_nt/2504"
        expression (src/lr1.ml[1080,34485+16]..src/lr1.ml[1085,34654+16]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[1080,34485+16]..src/lr1.ml[1080,34485+18])
                Tpat_var "nt/2506"
              expression (src/lr1.ml[1082,34561+2]..src/lr1.ml[1085,34654+16])
                Texp_try
                expression (src/lr1.ml[1083,34567+4]..src/lr1.ml[1083,34567+66])
                  Texp_apply
                  expression (src/lr1.ml[1083,34567+4]..src/lr1.ml[1083,34567+22])
                    Texp_ident "Dune__exe!.Grammar.ProductionMap.find"
                  [
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[1083,34567+23]..src/lr1.ml[1083,34567+60])
                        Texp_apply
                        expression (src/lr1.ml[1083,34567+24]..src/lr1.ml[1083,34567+56])
                          Texp_ident "Dune__exe!.Grammar.Production.startsymbol2startprod"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr1.ml[1083,34567+57]..src/lr1.ml[1083,34567+59])
                              Texp_ident "nt/2506"
                        ]
                    <arg>
                      Nolabel
                      expression (src/lr1.ml[1083,34567+61]..src/lr1.ml[1083,34567+66])
                        Texp_ident "entry/1446"
                  ]
                [
                  <case>
                    pattern (src/lr1.ml[1084,34634+7]..src/lr1.ml[1084,34634+16])
                      Tpat_construct "Not_found"
                      []
                      None
                    expression (src/lr1.ml[1085,34654+4]..src/lr1.ml[1085,34654+16])
                      Texp_assert                      expression (src/lr1.ml[1085,34654+11]..src/lr1.ml[1085,34654+16])
                        Texp_construct "false"
                        []
                ]
          ]
    ]
  structure_item (src/lr1.ml[1087,34672+0]..src/lr1.ml[1087,34672+32])
    Tstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (src/lr1.ml[1087,34672+0]..src/lr1.ml[1087,34672+32])
          pext_name = "Found/2507"
          pext_kind =
            Text_decl
              [
                core_type (src/lr1.ml[1087,34672+19]..src/lr1.ml[1087,34672+32])
                  Ttyp_constr "Dune__exe!.Grammar.Nonterminal.t"
                  []
              ]
              None
  structure_item (src/lr1.ml[1089,34706+0]..src/lr1.ml[1104,35144+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr1.ml[1089,34706+4]..src/lr1.ml[1089,34706+15])
          Tpat_var "nt_of_entry/2508"
        expression (src/lr1.ml[1089,34706+16]..src/lr1.ml[1104,35144+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr1.ml[1089,34706+16]..src/lr1.ml[1089,34706+17])
                Tpat_var "s/2510"
              expression (src/lr1.ml[1091,34766+2]..src/lr1.ml[1104,35144+6])
                Texp_sequence
                expression (src/lr1.ml[1091,34766+2]..src/lr1.ml[1091,34766+35])
                  Texp_assert                  expression (src/lr1.ml[1091,34766+9]..src/lr1.ml[1091,34766+35])
                    Texp_apply
                    expression (src/lr1.ml[1091,34766+28]..src/lr1.ml[1091,34766+29])
                      Texp_ident "Stdlib!.="
                    [
                      <arg>
                        Nolabel
                        expression (src/lr1.ml[1091,34766+10]..src/lr1.ml[1091,34766+27])
                          Texp_apply
                          expression (src/lr1.ml[1091,34766+10]..src/lr1.ml[1091,34766+25])
                            Texp_ident "incoming_symbol/1472"
                          [
                            <arg>
                              Nolabel
                              expression (src/lr1.ml[1091,34766+26]..src/lr1.ml[1091,34766+27])
                                Texp_ident "s/2510"
                          ]
                      <arg>
                        Nolabel
                        expression (src/lr1.ml[1091,34766+30]..src/lr1.ml[1091,34766+34])
                          Texp_construct "None"
                          []
                    ]
                expression (src/lr1.ml[1092,34803+2]..src/lr1.ml[1104,35144+6])
                  Texp_try
                  expression (src/lr1.ml[1093,34809+4]..src/lr1.ml[1102,35108+16])
                    Texp_sequence
                    expression (src/lr1.ml[1093,34809+4]..src/lr1.ml[1100,35027+11])
                      Texp_apply
                      expression (src/lr1.ml[1093,34809+4]..src/lr1.ml[1093,34809+22])
                        Texp_ident "Dune__exe!.Grammar.ProductionMap.iter"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[1093,34809+23]..src/lr1.ml[1100,35027+5])
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/lr1.ml[1093,34809+28]..src/lr1.ml[1093,34809+32])
                                  Tpat_var "prod/2511"
                                expression (src/lr1.ml[1093,34809+33]..src/lr1.ml[1099,34998+28]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/lr1.ml[1093,34809+33]..src/lr1.ml[1093,34809+38])
                                        Tpat_var "entry/2512"
                                      expression (src/lr1.ml[1094,34851+6]..src/lr1.ml[1099,34998+28])
                                        Texp_ifthenelse
                                        expression (src/lr1.ml[1094,34851+9]..src/lr1.ml[1094,34851+33])
                                          Texp_apply
                                          expression (src/lr1.ml[1094,34851+30]..src/lr1.ml[1094,34851+31])
                                            Texp_ident "Stdlib!.="
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[1094,34851+9]..src/lr1.ml[1094,34851+29])
                                                Texp_apply
                                                expression (src/lr1.ml[1094,34851+9]..src/lr1.ml[1094,34851+21])
                                                  Texp_ident "Node/1770.compare"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr1.ml[1094,34851+22]..src/lr1.ml[1094,34851+23])
                                                      Texp_ident "s/2510"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr1.ml[1094,34851+24]..src/lr1.ml[1094,34851+29])
                                                      Texp_ident "entry/2512"
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/lr1.ml[1094,34851+32]..src/lr1.ml[1094,34851+33])
                                                Texp_constant Const_int 0
                                          ]
                                        expression (src/lr1.ml[1095,34890+8]..src/lr1.ml[1099,34998+28])
                                          Texp_match
                                          expression (src/lr1.ml[1095,34890+14]..src/lr1.ml[1095,34890+38])
                                            Texp_apply
                                            expression (src/lr1.ml[1095,34890+14]..src/lr1.ml[1095,34890+33])
                                              Texp_ident "Dune__exe!.Grammar.Production.classify"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/lr1.ml[1095,34890+34]..src/lr1.ml[1095,34890+38])
                                                  Texp_ident "prod/2511"
                                            ]
                                          [
                                            <case>
                                              pattern (src/lr1.ml[1096,34934+10]..src/lr1.ml[1096,34934+14])
                                                Tpat_value
                                                pattern (src/lr1.ml[1096,34934+10]..src/lr1.ml[1096,34934+14])
                                                  Tpat_construct "None"
                                                  []
                                                  None
                                              expression (src/lr1.ml[1097,34952+12]..src/lr1.ml[1097,34952+24])
                                                Texp_assert                                                expression (src/lr1.ml[1097,34952+19]..src/lr1.ml[1097,34952+24])
                                                  Texp_construct "false"
                                                  []
                                            <case>
                                              pattern (src/lr1.ml[1098,34977+10]..src/lr1.ml[1098,34977+17])
                                                Tpat_value
                                                pattern (src/lr1.ml[1098,34977+10]..src/lr1.ml[1098,34977+17])
                                                  Tpat_construct "Some"
                                                  [
                                                    pattern (src/lr1.ml[1098,34977+15]..src/lr1.ml[1098,34977+17])
                                                      Tpat_var "nt/2513"
                                                  ]
                                                  None
                                              expression (src/lr1.ml[1099,34998+12]..src/lr1.ml[1099,34998+28])
                                                Texp_apply
                                                expression (src/lr1.ml[1099,34998+12]..src/lr1.ml[1099,34998+17])
                                                  Texp_ident "Stdlib!.raise"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr1.ml[1099,34998+18]..src/lr1.ml[1099,34998+28])
                                                      Texp_construct "Found"
                                                      [
                                                        expression (src/lr1.ml[1099,34998+25]..src/lr1.ml[1099,34998+27])
                                                          Texp_ident "nt/2513"
                                                      ]
                                                ]
                                          ]
                                        None
                                  ]
                            ]
                        <arg>
                          Nolabel
                          expression (src/lr1.ml[1100,35027+6]..src/lr1.ml[1100,35027+11])
                            Texp_ident "entry/1446"
                      ]
                    expression (src/lr1.ml[1102,35108+4]..src/lr1.ml[1102,35108+16])
                      Texp_assert                      expression (src/lr1.ml[1102,35108+11]..src/lr1.ml[1102,35108+16])
                        Texp_construct "false"
                        []
                  [
                    <case>
                      pattern (src/lr1.ml[1103,35125+7]..src/lr1.ml[1103,35125+15])
                        Tpat_construct "Found"
                        [
                          pattern (src/lr1.ml[1103,35125+13]..src/lr1.ml[1103,35125+15])
                            Tpat_var "nt/2514"
                        ]
                        None
                      expression (src/lr1.ml[1104,35144+4]..src/lr1.ml[1104,35144+6])
                        Texp_ident "nt/2514"
                  ]
          ]
    ]
]

{<Dune__exe__Lr1>
 "BackwardEdges"[module] ->
   {<Dune__exe__Lr1.124>
    "foreach_outgoing_edge"[value] -> <Dune__exe__Lr1.120>;
    "label"[type] -> <Dune__exe__Lr1.119>;
    "node"[type] -> <Dune__exe__Lr1.118>;
    };
 "ForwardEdges"[module] ->
   {<Dune__exe__Lr1.117>
    "foreach_outgoing_edge"[value] -> <Dune__exe__Lr1.114>;
    "label"[type] -> <Dune__exe__Lr1.113>;
    "node"[type] -> <Dune__exe__Lr1.112>;
    };
 "ImperativeNodeMap"[module] ->
   {<Dune__exe__Lr1.201>
    "add"[value] ->
      CU Dune__exe . "Fix"[module] . "Glue"[module] .
      "ArraysAsImperativeMaps"[module](
      {
       "n"[value] -> <Dune__exe__Lr1.200>;
       })<Dune__exe__Lr1.201>
      . "add"[value];
    "create"[value] ->
      CU Dune__exe . "Fix"[module] . "Glue"[module] .
      "ArraysAsImperativeMaps"[module](
      {
       "n"[value] -> <Dune__exe__Lr1.200>;
       })<Dune__exe__Lr1.201>
      . "create"[value];
    "find"[value] ->
      CU Dune__exe . "Fix"[module] . "Glue"[module] .
      "ArraysAsImperativeMaps"[module](
      {
       "n"[value] -> <Dune__exe__Lr1.200>;
       })<Dune__exe__Lr1.201>
      . "find"[value];
    "key"[type] ->
      CU Dune__exe . "Fix"[module] . "Glue"[module] .
      "ArraysAsImperativeMaps"[module](
      {
       "n"[value] -> <Dune__exe__Lr1.200>;
       })<Dune__exe__Lr1.201>
      . "key"[type];
    "t"[type] ->
      CU Dune__exe . "Fix"[module] . "Glue"[module] .
      "ArraysAsImperativeMaps"[module](
      {
       "n"[value] -> <Dune__exe__Lr1.200>;
       })<Dune__exe__Lr1.201>
      . "t"[type];
    };
 "Node"[module] ->
   {<Dune__exe__Lr1.191>
    "compare"[value] -> <Dune__exe__Lr1.190>;
    "t"[type] -> <Dune__exe__Lr1.189>;
    };
 "NodeMap"[module] ->
   CU Stdlib . "Map"[module] . "Make"[module](
   {<Dune__exe__Lr1.191>
    "compare"[value] -> <Dune__exe__Lr1.190>;
    "t"[type] -> <Dune__exe__Lr1.189>;
    })<Dune__exe__Lr1.199>;
 "NodeSet"[module] ->
   {<Dune__exe__Lr1.198>
    "add"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "add"[value];
    "add_seq"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "add_seq"[value];
    "cardinal"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "cardinal"[value];
    "choose"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "choose"[value];
    "choose_opt"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "choose_opt"[value];
    "compare"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "compare"[value];
    "diff"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "diff"[value];
    "disjoint"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "disjoint"[value];
    "elements"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "elements"[value];
    "elt"[type] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "elt"[type];
    "empty"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "empty"[value];
    "equal"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "equal"[value];
    "exists"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "exists"[value];
    "filter"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "filter"[value];
    "filter_map"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "filter_map"[value];
    "find"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "find"[value];
    "find_first"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "find_first"[value];
    "find_first_opt"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "find_first_opt"[value];
    "find_last"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "find_last"[value];
    "find_last_opt"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "find_last_opt"[value];
    "find_opt"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "find_opt"[value];
    "fold"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "fold"[value];
    "for_all"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "for_all"[value];
    "inter"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "inter"[value];
    "is_empty"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "is_empty"[value];
    "iter"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "iter"[value];
    "leq_join"[value] -> <Dune__exe__Lr1.192>;
    "map"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "map"[value];
    "max_elt"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "max_elt"[value];
    "max_elt_opt"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "max_elt_opt"[value];
    "mem"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "mem"[value];
    "min_elt"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "min_elt"[value];
    "min_elt_opt"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "min_elt_opt"[value];
    "of_list"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "of_list"[value];
    "of_seq"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "of_seq"[value];
    "partition"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "partition"[value];
    "print"[value] -> <Dune__exe__Lr1.195>;
    "remove"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "remove"[value];
    "singleton"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "singleton"[value];
    "split"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "split"[value];
    "subset"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "subset"[value];
    "t"[type] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "t"[type];
    "to_list"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "to_list"[value];
    "to_rev_seq"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "to_rev_seq"[value];
    "to_seq"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "to_seq"[value];
    "to_seq_from"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "to_seq_from"[value];
    "union"[value] ->
      CU Stdlib . "Set"[module] . "Make"[module](
      {<Dune__exe__Lr1.191>
       "compare"[value] -> <Dune__exe__Lr1.190>;
       "t"[type] -> <Dune__exe__Lr1.189>;
       })
      . "union"[value];
    };
 "acceptable_tokens"[value] -> <Dune__exe__Lr1.178>;
 "all_sources"[value] -> <Dune__exe__Lr1.202>;
 "all_targets"[value] -> <Dune__exe__Lr1.209>;
 "conflict_tokens"[value] -> <Dune__exe__Lr1.99>;
 "conflicts"[value] -> <Dune__exe__Lr1.101>;
 "default_conflict_resolution"[value] -> <Dune__exe__Lr1.237>;
 "entry"[value] -> <Dune__exe__Lr1.87>;
 "entry_of_nt"[value] -> <Dune__exe__Lr1.279>;
 "extra_reductions"[value] -> <Dune__exe__Lr1.265>;
 "fold"[value] -> <Dune__exe__Lr1.130>;
 "fold_entry"[value] -> <Dune__exe__Lr1.270>;
 "foldx"[value] -> <Dune__exe__Lr1.142>;
 "forbid_default_reduction"[value] -> <Dune__exe__Lr1.104>;
 "has_beforeend"[value] -> <Dune__exe__Lr1.172>;
 "has_eos_conflict"[value] -> <Dune__exe__Lr1.106>;
 "incoming_symbol"[value] -> <Dune__exe__Lr1.108>;
 "is_start"[value] -> <Dune__exe__Lr1.110>;
 "is_start_or_exit"[value] -> <Dune__exe__Lr1.125>;
 "iter"[value] -> <Dune__exe__Lr1.135>;
 "iterx"[value] -> <Dune__exe__Lr1.146>;
 "map"[value] -> <Dune__exe__Lr1.138>;
 "n"[value] -> <Dune__exe__Lr1.74>;
 "node"[type] -> <Dune__exe__Lr1.8>;
 "nt_of_entry"[value] -> <Dune__exe__Lr1.282>;
 "number"[value] -> <Dune__exe__Lr1.83>;
 "predecessors"[value] -> <Dune__exe__Lr1.97>;
 "print"[value] -> <Dune__exe__Lr1.85>;
 "production_where"[value] -> <Dune__exe__Lr1.222>;
 "reductions"[value] -> <Dune__exe__Lr1.95>;
 "start2item"[value] -> <Dune__exe__Lr1.167>;
 "state"[value] -> <Dune__exe__Lr1.88>;
 "sum"[value] -> <Dune__exe__Lr1.151>;
 "tabulate"[value] -> <Dune__exe__Lr1.149>;
 "targets"[value] -> <Dune__exe__Lr1.160>;
 "transitions"[value] -> <Dune__exe__Lr1.90>;
 }

(seq
  (let (*match*/7775 = (apply (field_imm 0 (global Dune__exe__Slr!)) 0)) 0)
  (catch
    (let (*match*/7780 = (field_imm 2 (global Dune__exe__Settings!)))
      (switch* *match*/7780
       case int 0:
        (let
          (mode/7782 = "canonical"
           algo/7781 =
             (let (let/7776 = (global Dune__exe__LR1Canonical!))
               (global Dune__exe__LR1Canonical!)))
          (exit 4 algo/7781 mode/7782))
       case int 1:
        (let
          (mode/7784 = "no-pager"
           algo/7783 =
             (let (let/7777 = (global Dune__exe__LR1Pager!))
               (global Dune__exe__LR1Pager!)))
          (exit 4 algo/7783 mode/7784))
       case int 2:
        (let
          (mode/7786 = "pager"
           algo/7785 =
             (let (let/7778 = (global Dune__exe__LR1Pager!))
               (global Dune__exe__LR1Pager!)))
          (exit 4 algo/7785 mode/7786))
       case int 3:
        (let
          (mode/7788 = "lalr"
           algo/7787 =
             (let (let/7779 = (global Dune__exe__LALR!))
               (global Dune__exe__LALR!)))
          (exit 4 algo/7787 mode/7788))))
   with (4 algo/417 mode/418)
    (seq (setfield_ptr(root-init) 40 (global Dune__exe__Lr1!) algo/417)
      (setfield_ptr(root-init) 41 (global Dune__exe__Lr1!) mode/418)))
  (let (Algorithm/580 = (field_imm 40 (global Dune__exe__Lr1!)))
    (seq (setfield_ptr(root-init) 42 (global Dune__exe__Lr1!) Algorithm/580)
      (let
        (*match*/7790 =
           (apply (field_imm 3 (global Dune__exe__Error!)) 1
             (function f/596 : int
               (apply (field_imm 0 (global Stdlib__Printf!)) f/596
                 [0:
                  [11: "The construction mode is " [2: 0 [11: ".\n" 0]]]
                  "The construction mode is %s.\n"]
                 (field_imm 41 (global Dune__exe__Lr1!))))))
        0)
      (let
        (Raw/633 =
           (apply (field_imm 0 (field_imm 42 (global Dune__exe__Lr1!))) 0))
        (seq (setfield_ptr(root-init) 43 (global Dune__exe__Lr1!) Raw/633)
          (let
            (*match*/7792 =
               (apply (field_imm 3 (global Dune__exe__Error!)) 1
                 (function f/634 : int
                   (apply (field_imm 0 (global Stdlib__Printf!)) f/634
                     [0:
                      [11:
                       "Built an LR(1) automaton with "
                       [4: 0 0 0 [11: " states.\n" 0]]]
                      "Built an LR(1) automaton with %d states.\n"]
                     (field_imm 0 (field_imm 43 (global Dune__exe__Lr1!)))))))
            0)
          (let
            (marked/643 =
               (caml_make_vect
                 (field_imm 0 (field_imm 43 (global Dune__exe__Lr1!))) 0))
            (setfield_ptr(root-init) 77 (global Dune__exe__Lr1!) marked/643))
          (let
            (mark/692 =
               (function node/694 : int
                 (array.set[int] (field_imm 77 (global Dune__exe__Lr1!))
                   (apply
                     (field_imm 1 (field_imm 43 (global Dune__exe__Lr1!)))
                     node/694)
                   1)))
            (setfield_ptr(root-init) 78 (global Dune__exe__Lr1!) mark/692))
          (let
            (is_marked/695 =
               (function node/697 : int
                 (array.get[int] (field_imm 77 (global Dune__exe__Lr1!))
                   (apply
                     (field_imm 1 (field_imm 43 (global Dune__exe__Lr1!)))
                     node/697))))
            (setfield_ptr(root-init) 79 (global Dune__exe__Lr1!)
              is_marked/695))
          0
          (let
            (M/698 =
               (makeblock 0 (field_imm 77 (global Dune__exe__Lr1!))
                 (field_imm 78 (global Dune__exe__Lr1!))
                 (field_imm 79 (global Dune__exe__Lr1!))))
            (seq (setfield_ptr(root-init) 44 (global Dune__exe__Lr1!) M/698)
              (let (unreachable/699 =[int] -1)
                (setfield_ptr(root-init) 45 (global Dune__exe__Lr1!)
                  unreachable/699))
              (let
                (_number/700 =
                   (caml_make_vect
                     (field_imm 0 (field_imm 43 (global Dune__exe__Lr1!)))
                     (field_imm 45 (global Dune__exe__Lr1!))))
                (setfield_ptr(root-init) 46 (global Dune__exe__Lr1!)
                  _number/700))
              (let
                (transport/701 =
                   (function raw_node/703 : int
                     (array.get[int] (field_imm 46 (global Dune__exe__Lr1!))
                       (apply
                         (field_imm 1
                           (field_imm 43 (global Dune__exe__Lr1!)))
                         raw_node/703))))
                (setfield_ptr(root-init) 47 (global Dune__exe__Lr1!)
                  transport/701))
              (let
                (transitions/769 =
                   (apply (field_imm 0 (global Stdlib__Array!))
                     (field_imm 0 (field_imm 43 (global Dune__exe__Lr1!)))
                     (function i/770[int]
                       (apply
                         (field_imm 4
                           (field_imm 43 (global Dune__exe__Lr1!)))
                         (apply
                           (field_imm 2
                             (field_imm 43 (global Dune__exe__Lr1!)))
                           i/770)))))
                (setfield_ptr(root-init) 48 (global Dune__exe__Lr1!)
                  transitions/769))
              (let
                (predecessors/819 =
                   (caml_make_vect
                     (field_imm 0 (field_imm 43 (global Dune__exe__Lr1!))) 0))
                (setfield_ptr(root-init) 49 (global Dune__exe__Lr1!)
                  predecessors/819))
              (let
                (reductions/858 =
                   (caml_make_vect
                     (field_imm 0 (field_imm 43 (global Dune__exe__Lr1!)))
                     (field_imm 0 (field_imm 4 (global Dune__exe__Grammar!)))))
                (setfield_ptr(root-init) 50 (global Dune__exe__Lr1!)
                  reductions/858))
              (let
                (_conflict_tokens/947 =
                   (caml_make_vect
                     (field_imm 0 (field_imm 43 (global Dune__exe__Lr1!)))
                     (field_imm 0 (field_imm 3 (global Dune__exe__Grammar!)))))
                (setfield_ptr(root-init) 51 (global Dune__exe__Lr1!)
                  _conflict_tokens/947))
              (let
                (_has_eos_conflict/982 =
                   (caml_make_vect
                     (field_imm 0 (field_imm 43 (global Dune__exe__Lr1!))) 0))
                (setfield_ptr(root-init) 52 (global Dune__exe__Lr1!)
                  _has_eos_conflict/982))
              (let
                (forbid_default_reduction/983 =
                   (caml_make_vect
                     (field_imm 0 (field_imm 43 (global Dune__exe__Lr1!))) 0))
                (setfield_ptr(root-init) 53 (global Dune__exe__Lr1!)
                  forbid_default_reduction/983))
              (let (n/984 = (makemutable 0 (int) 0))
                (setfield_ptr(root-init) 54 (global Dune__exe__Lr1!) n/984))
              (let (conflict_nodes/985 = (makemutable 0 0))
                (setfield_ptr(root-init) 55 (global Dune__exe__Lr1!)
                  conflict_nodes/985))
              (let (shift_reduce/986 = (makemutable 0 (int) 0))
                (setfield_ptr(root-init) 56 (global Dune__exe__Lr1!)
                  shift_reduce/986))
              (let (reduce_reduce/987 = (makemutable 0 (int) 0))
                (setfield_ptr(root-init) 57 (global Dune__exe__Lr1!)
                  reduce_reduce/987))
              (let (silently_solved/988 = (makemutable 0 (int) 0))
                (setfield_ptr(root-init) 58 (global Dune__exe__Lr1!)
                  silently_solved/988))
              (let
                (foreach_outgoing_edge/1013 =
                   (function node/1015 f/1016 : int
                     (let
                       (i/1017 =[int]
                          (apply
                            (field_imm 1
                              (field_imm 43 (global Dune__exe__Lr1!)))
                            node/1015))
                       (apply
                         (field_imm 22
                           (field_imm 7 (global Dune__exe__Grammar!)))
                         f/1016
                         (array.get[gen]
                           (field_imm 48 (global Dune__exe__Lr1!)) i/1017)))))
                (setfield_ptr(root-init) 80 (global Dune__exe__Lr1!)
                  foreach_outgoing_edge/1013))
              (let
                (foreach_root/1018 =
                   (function f/1020 : int
                     (apply
                       (field_imm 18
                         (field_imm 9 (global Dune__exe__Grammar!)))
                       (function _prod/1055 node/1056 : int
                         (apply f/1020 node/1056))
                       (field_imm 3 (field_imm 43 (global Dune__exe__Lr1!))))))
                (setfield_ptr(root-init) 81 (global Dune__exe__Lr1!)
                  foreach_root/1018))
              0
              (let
                (RawForwardEdges/1091 =
                   (makeblock 0 (field_imm 80 (global Dune__exe__Lr1!))
                     (field_imm 81 (global Dune__exe__Lr1!))))
                (seq
                  (setfield_ptr(root-init) 59 (global Dune__exe__Lr1!)
                    RawForwardEdges/1091)
                  (let
                    (discover/1092 =
                       (function raw_node/1094 : int
                         (let
                           (i/1095 =[int]
                              (apply
                                (field_imm 1
                                  (field_imm 43 (global Dune__exe__Lr1!)))
                                raw_node/1094)
                            state/1096 =
                              (apply
                                (field_imm 5
                                  (field_imm 43 (global Dune__exe__Lr1!)))
                                raw_node/1094)
                            node/1135 =
                              (apply (field_imm 22 (global Dune__exe__Misc!))
                                (field_imm 54 (global Dune__exe__Lr1!))))
                           (seq
                             (array.set[int]
                               (field_imm 46 (global Dune__exe__Lr1!)) i/1095
                               node/1135)
                             (let
                               (has_shift_reduce/1172 =
                                  (makemutable 0 (int) 0)
                                has_reduce_reduce/1173 =
                                  (makemutable 0 (int) 0)
                                foreach_reduction/1174 =
                                  (function f/1176
                                    (apply
                                      (field_imm 19
                                        (field_imm 4
                                          (global Dune__exe__Grammar!)))
                                      f/1176
                                      (apply
                                        (field_imm 29
                                          (global Dune__exe__Lr0!))
                                        state/1096)
                                      (field_imm 0
                                        (field_imm 4
                                          (global Dune__exe__Grammar!))))))
                               (seq
                                 (array.set[gen]
                                   (field_imm 50 (global Dune__exe__Lr1!))
                                   i/1095
                                   (apply foreach_reduction/1174
                                     (function tok/1177 prods/1178
                                       reductions/1179
                                       (seq
                                         (if (!= prods/1178 0) 0
                                           (raise
                                             (makeblock 0
                                               (global Assert_failure/28!)
                                               [0: "src/lr1.ml" 221 4])))
                                         (if
                                           (apply
                                             (field_imm 31
                                               (field_imm 7
                                                 (global Dune__exe__Grammar!)))
                                             (makeblock 1 tok/1177)
                                             (array.get[gen]
                                               (field_imm 48
                                                 (global Dune__exe__Lr1!))
                                               i/1095))
                                           (seq
                                             (if
                                               (not
                                                 (apply
                                                   (field_imm 1
                                                     (field_imm 2
                                                       (global Dune__exe__Grammar!)))
                                                   tok/1177
                                                   (field_imm 9
                                                     (field_imm 2
                                                       (global Dune__exe__Grammar!)))))
                                               0
                                               (raise
                                                 (makeblock 0
                                                   (global Assert_failure/28!)
                                                   [0: "src/lr1.ml" 227 6])))
                                             (if
                                               (==
                                                 (apply
                                                   (field_imm 0
                                                     (global Stdlib__List!))
                                                   prods/1178)
                                                 1)
                                               (let
                                                 (prod/1305 =
                                                    (apply
                                                      (field_imm 5
                                                        (global Stdlib__List!))
                                                      prods/1178)
                                                  *match*/7808 =
                                                    (apply
                                                      (field_imm 0
                                                        (field_imm 12
                                                          (global Dune__exe__Grammar!)))
                                                      tok/1177 prod/1305))
                                                 (switch* *match*/7808
                                                  case int 0:
                                                   (seq
                                                     (+:=1
                                                       (field_imm 58
                                                         (global Dune__exe__Lr1!)))
                                                     reductions/1179)
                                                  case int 1:
                                                   (seq
                                                     (+:=1
                                                       (field_imm 58
                                                         (global Dune__exe__Lr1!)))
                                                     (array.set[gen]
                                                       (field_imm 48
                                                         (global Dune__exe__Lr1!))
                                                       i/1095
                                                       (apply
                                                         (field_imm 5
                                                           (field_imm 7
                                                             (global Dune__exe__Grammar!)))
                                                         (makeblock 1
                                                           tok/1177)
                                                         (array.get[gen]
                                                           (field_imm 48
                                                             (global Dune__exe__Lr1!))
                                                           i/1095)))
                                                     (apply
                                                       (field_imm 3
                                                         (field_imm 4
                                                           (global Dune__exe__Grammar!)))
                                                       tok/1177 prods/1178
                                                       reductions/1179))
                                                  case int 2:
                                                   (seq
                                                     (+:=1
                                                       (field_imm 58
                                                         (global Dune__exe__Lr1!)))
                                                     (array.set[gen]
                                                       (field_imm 48
                                                         (global Dune__exe__Lr1!))
                                                       i/1095
                                                       (apply
                                                         (field_imm 5
                                                           (field_imm 7
                                                             (global Dune__exe__Grammar!)))
                                                         (makeblock 1
                                                           tok/1177)
                                                         (array.get[gen]
                                                           (field_imm 48
                                                             (global Dune__exe__Lr1!))
                                                           i/1095)))
                                                     (array.set[int]
                                                       (field_imm 53
                                                         (global Dune__exe__Lr1!))
                                                       i/1095 1)
                                                     reductions/1179)
                                                  case int 3:
                                                   (seq
                                                     (array.set[gen]
                                                       (field_imm 51
                                                         (global Dune__exe__Lr1!))
                                                       i/1095
                                                       (apply
                                                         (field_imm 7
                                                           (field_imm 3
                                                             (global Dune__exe__Grammar!)))
                                                         tok/1177
                                                         (array.get[gen]
                                                           (field_imm 51
                                                             (global Dune__exe__Lr1!))
                                                           i/1095)))
                                                     (setfield_imm 0
                                                       has_shift_reduce/1172
                                                       1)
                                                     (apply
                                                       (field_imm 3
                                                         (field_imm 4
                                                           (global Dune__exe__Grammar!)))
                                                       tok/1177 prods/1178
                                                       reductions/1179))))
                                               (let
                                                 (choices/1368 =
                                                    (apply
                                                      (field_imm 19
                                                        (global Stdlib__List!))
                                                      (apply
                                                        (field_imm 0
                                                          (field_imm 12
                                                            (global Dune__exe__Grammar!)))
                                                        tok/1177)
                                                      prods/1178))
                                                 (if
                                                   (apply
                                                     (field_imm 32
                                                       (global Stdlib__List!))
                                                     (function
                                                       choice/1369[int] : int
                                                       (catch
                                                         (if
                                                           (!= choice/1369 0)
                                                           (exit 49) 1)
                                                        with (49) 0))
                                                     choices/1368)
                                                   (seq
                                                     (setfield_imm 0
                                                       (field_imm 58
                                                         (global Dune__exe__Lr1!))
                                                       (+
                                                         (field_int 0
                                                           (field_imm 58
                                                             (global Dune__exe__Lr1!)))
                                                         (apply
                                                           (field_imm 0
                                                             (global Stdlib__List!))
                                                           prods/1178)))
                                                     reductions/1179)
                                                   (if
                                                     (apply
                                                       (field_imm 32
                                                         (global Stdlib__List!))
                                                       (apply
                                                         (function prim/7807
                                                           prim/7806 stub
                                                           (== prim/7807
                                                             prim/7806))
                                                         2)
                                                       choices/1368)
                                                     (seq
                                                       (setfield_imm 0
                                                         (field_imm 58
                                                           (global Dune__exe__Lr1!))
                                                         (+
                                                           (field_int 0
                                                             (field_imm 58
                                                               (global Dune__exe__Lr1!)))
                                                           (apply
                                                             (field_imm 0
                                                               (global Stdlib__List!))
                                                             prods/1178)))
                                                       (array.set[gen]
                                                         (field_imm 48
                                                           (global Dune__exe__Lr1!))
                                                         i/1095
                                                         (apply
                                                           (field_imm 5
                                                             (field_imm 7
                                                               (global Dune__exe__Grammar!)))
                                                           (makeblock 1
                                                             tok/1177)
                                                           (array.get[gen]
                                                             (field_imm 48
                                                               (global Dune__exe__Lr1!))
                                                             i/1095)))
                                                       reductions/1179)
                                                     (seq
                                                       (array.set[gen]
                                                         (field_imm 51
                                                           (global Dune__exe__Lr1!))
                                                         i/1095
                                                         (apply
                                                           (field_imm 7
                                                             (field_imm 3
                                                               (global Dune__exe__Grammar!)))
                                                           tok/1177
                                                           (array.get[gen]
                                                             (field_imm 51
                                                               (global Dune__exe__Lr1!))
                                                             i/1095)))
                                                       (setfield_imm 0
                                                         has_shift_reduce/1172
                                                         1)
                                                       (setfield_imm 0
                                                         has_reduce_reduce/1173
                                                         1)
                                                       (apply
                                                         (field_imm 3
                                                           (field_imm 4
                                                             (global Dune__exe__Grammar!)))
                                                         tok/1177 prods/1178
                                                         reductions/1179)))))))
                                           (seq
                                             (if
                                               (>=
                                                 (apply
                                                   (field_imm 0
                                                     (global Stdlib__List!))
                                                   prods/1178)
                                                 2)
                                               (seq
                                                 (array.set[gen]
                                                   (field_imm 51
                                                     (global Dune__exe__Lr1!))
                                                   i/1095
                                                   (apply
                                                     (field_imm 7
                                                       (field_imm 3
                                                         (global Dune__exe__Grammar!)))
                                                     tok/1177
                                                     (array.get[gen]
                                                       (field_imm 51
                                                         (global Dune__exe__Lr1!))
                                                       i/1095)))
                                                 (setfield_imm 0
                                                   has_reduce_reduce/1173 1))
                                               0)
                                             (apply
                                               (field_imm 3
                                                 (field_imm 4
                                                   (global Dune__exe__Grammar!)))
                                               tok/1177 prods/1178
                                               reductions/1179)))))))
                                 (let
                                   (transitions/1370 =
                                      (array.get[gen]
                                        (field_imm 48
                                          (global Dune__exe__Lr1!))
                                        i/1095)
                                    reductions/1371 =
                                      (array.get[gen]
                                        (field_imm 50
                                          (global Dune__exe__Lr1!))
                                        i/1095))
                                   (seq
                                     (if
                                       (apply
                                         (field_imm 32
                                           (global Dune__exe__Lr0!))
                                         transitions/1370 reductions/1371)
                                       (let
                                         (*match*/7805 =
                                            (apply
                                              (field_imm 13
                                                (field_imm 4
                                                  (global Dune__exe__Grammar!)))
                                              (field_imm 9
                                                (field_imm 2
                                                  (global Dune__exe__Grammar!)))
                                              reductions/1371)
                                          reductions/1373 =a
                                            (field_imm 1 *match*/7805)
                                          prods/1372 =a
                                            (field_imm 0 *match*/7805)
                                          toks/1374 =
                                            (apply
                                              (field_imm 9
                                                (field_imm 3
                                                  (global Dune__exe__Grammar!)))
                                              (apply
                                                (field_imm 15
                                                  (global Dune__exe__Lr0!))
                                                transitions/1370)
                                              (apply
                                                (field_imm 31
                                                  (global Dune__exe__Lr0!))
                                                reductions/1373)))
                                         (array.set[addr]
                                           (field_imm 52
                                             (global Dune__exe__Lr1!))
                                           i/1095
                                           (makeblock 0
                                             (makeblock 0 prods/1372
                                               toks/1374))))
                                       0)
                                     (if
                                       (not
                                         (apply
                                           (field_imm 1
                                             (field_imm 3
                                               (global Dune__exe__Grammar!)))
                                           (array.get[gen]
                                             (field_imm 51
                                               (global Dune__exe__Lr1!))
                                             i/1095)))
                                       (seq
                                         (setfield_ptr 0
                                           (field_imm 55
                                             (global Dune__exe__Lr1!))
                                           (makeblock 0 (int,*) node/1135
                                             (field_mut 0
                                               (field_imm 55
                                                 (global Dune__exe__Lr1!)))))
                                         (if
                                           (field_int 0
                                             has_shift_reduce/1172)
                                           (+:=1
                                             (field_imm 56
                                               (global Dune__exe__Lr1!)))
                                           0)
                                         (if
                                           (field_int 0
                                             has_reduce_reduce/1173)
                                           (+:=1
                                             (field_imm 57
                                               (global Dune__exe__Lr1!)))
                                           0))
                                       0)))))))))
                    (setfield_ptr(root-init) 60 (global Dune__exe__Lr1!)
                      discover/1092))
                  (let
                    (traverse/1375 =
                       (function source/1377 _symbol/1378 target/1379 : int
                         (let
                           (j/1380 =[int]
                              (apply
                                (field_imm 1
                                  (field_imm 43 (global Dune__exe__Lr1!)))
                                target/1379))
                           (array.set[addr]
                             (field_imm 49 (global Dune__exe__Lr1!)) j/1380
                             (makeblock 0 (int,*)
                               (apply (field_imm 47 (global Dune__exe__Lr1!))
                                 source/1377)
                               (array.get[addr]
                                 (field_imm 49 (global Dune__exe__Lr1!))
                                 j/1380))))))
                    (setfield_ptr(root-init) 61 (global Dune__exe__Lr1!)
                      traverse/1375))
                  (let
                    (*match*/7812 =
                       (let
                         (D/1383 =
                            (let
                              (traverse/1381 =
                                 (field_imm 61 (global Dune__exe__Lr1!))
                               discover/1382 =
                                 (field_imm 60 (global Dune__exe__Lr1!)))
                              (makeblock 0 traverse/1381 discover/1382))
                          R/1422 =
                            (apply
                              (apply
                                (apply
                                  (let
                                    (let/7810 =
                                       (field_imm 0 (global Dune__exe__DFS!)))
                                    (field_imm 0 (global Dune__exe__DFS!)))
                                  (field_imm 59 (global Dune__exe__Lr1!)))
                                (makeblock 0
                                  (field_mut 1
                                    (field_imm 44 (global Dune__exe__Lr1!)))
                                  (field_mut 2
                                    (field_imm 44 (global Dune__exe__Lr1!)))))
                              (makeblock 0 (field_mut 1 D/1383)
                                (field_mut 0 D/1383))))
                         0))
                    0)
                  (let
                    (*match*/7815 =
                       (seq
                         (if
                           (==
                             (field_int 0
                               (field_imm 58 (global Dune__exe__Lr1!)))
                             1)
                           (apply (field_imm 3 (global Dune__exe__Error!)) 1
                             (function f/1423 : int
                               (apply (field_imm 0 (global Stdlib__Printf!))
                                 f/1423
                                 [0:
                                  [11:
                                   "One shift/reduce conflict was silently solved.\n"
                                   0]
                                  "One shift/reduce conflict was silently solved.\n"])))
                           (if
                             (>
                               (field_int 0
                                 (field_imm 58 (global Dune__exe__Lr1!)))
                               1)
                             (apply (field_imm 3 (global Dune__exe__Error!))
                               1
                               (function f/1424 : int
                                 (apply
                                   (field_imm 0 (global Stdlib__Printf!))
                                   f/1424
                                   [0:
                                    [4:
                                     0 0 0
                                     [11:
                                      " shift/reduce conflicts were silently solved.\n"
                                      0]]
                                    "%d shift/reduce conflicts were silently solved.\n"]
                                   (field_int 0
                                     (field_imm 58 (global Dune__exe__Lr1!))))))
                             0))
                         (if
                           (<
                             (field_int 0
                               (field_imm 54 (global Dune__exe__Lr1!)))
                             (field_imm 0
                               (field_imm 43 (global Dune__exe__Lr1!))))
                           (apply (field_imm 3 (global Dune__exe__Error!)) 1
                             (function f/1425 : int
                               (apply (field_imm 0 (global Stdlib__Printf!))
                                 f/1425
                                 [0:
                                  [11:
                                   "Only "
                                   [4:
                                    0 0 0
                                    [11:
                                     " states remain after resolving shift/reduce conflicts.\n"
                                     0]]]
                                  "Only %d states remain after resolving shift/reduce conflicts.\n"]
                                 (field_int 0
                                   (field_imm 54 (global Dune__exe__Lr1!))))))
                           0)))
                    0)
                  (let
                    (*match*/7817 =
                       (apply (field_imm 15 (global Dune__exe__Grammar!)) 0))
                    0)
                  (let
                    (n/1426 =[int]
                       (field_int 0 (field_imm 54 (global Dune__exe__Lr1!))))
                    (setfield_ptr(root-init) 8 (global Dune__exe__Lr1!)
                      n/1426))
                  (let
                    (conflict_nodes/1427 =
                       (field_mut 0 (field_imm 55 (global Dune__exe__Lr1!))))
                    (setfield_ptr(root-init) 62 (global Dune__exe__Lr1!)
                      conflict_nodes/1427))
                  (let
                    (raw/1428 =
                       (let
                         (raw/1429 =
                            (caml_make_vect
                              (field_imm 8 (global Dune__exe__Lr1!)) -1))
                         (seq
                           (apply (field_imm 11 (global Stdlib__Array!))
                             (function i/1430[int] node/1431[int] : int
                               (seq
                                 (if
                                   (&& (<= 0 i/1430)
                                     (< i/1430
                                       (field_imm 0
                                         (field_imm 43
                                           (global Dune__exe__Lr1!)))))
                                   0
                                   (raise
                                     (makeblock 0 (global Assert_failure/28!)
                                       [0: "src/lr1.ml" 434 4])))
                                 (if
                                   (!= node/1431
                                     (field_imm 45 (global Dune__exe__Lr1!)))
                                   (seq
                                     (if
                                       (&& (<= 0 node/1431)
                                         (< node/1431
                                           (field_imm 8
                                             (global Dune__exe__Lr1!))))
                                       0
                                       (raise
                                         (makeblock 0
                                           (global Assert_failure/28!)
                                           [0: "src/lr1.ml" 436 6])))
                                     (array.set[int] raw/1429 node/1431
                                       i/1430))
                                   0)))
                             (field_imm 46 (global Dune__exe__Lr1!)))
                           (function node/1432[int] : int
                             (seq
                               (if
                                 (&& (<= 0 node/1432)
                                   (< node/1432
                                     (field_imm 8 (global Dune__exe__Lr1!))))
                                 0
                                 (raise
                                   (makeblock 0 (global Assert_failure/28!)
                                     [0: "src/lr1.ml" 441 4])))
                               (array.get[int] raw/1429 node/1432))))))
                    (setfield_ptr(root-init) 63 (global Dune__exe__Lr1!)
                      raw/1428))
                  (let
                    (transitions/1433 =
                       (apply (field_imm 0 (global Stdlib__Array!))
                         (field_imm 8 (global Dune__exe__Lr1!))
                         (function node/1434[int]
                           (apply
                             (field_imm 24
                               (field_imm 7 (global Dune__exe__Grammar!)))
                             (field_imm 47 (global Dune__exe__Lr1!))
                             (array.get[gen]
                               (field_imm 48 (global Dune__exe__Lr1!))
                               (apply (field_imm 63 (global Dune__exe__Lr1!))
                                 node/1434))))))
                    (setfield_ptr(root-init) 64 (global Dune__exe__Lr1!)
                      transitions/1433))
                  (let
                    (*match*/7821 =
                       (apply (field_imm 0 (global Dune__exe__Time!))
                         "Construction of the LR(1) automaton"))
                    0)
                  (let (number/1440 = (function node/1442 node/1442))
                    (setfield_ptr(root-init) 9 (global Dune__exe__Lr1!)
                      number/1440))
                  (let
                    (print/1443 =
                       (function node/1445[int]
                         (apply (field_imm 3 (global Stdlib__Printf!))
                           [0: [4: 0 0 0 0] "%d"]
                           (apply (field_imm 9 (global Dune__exe__Lr1!))
                             node/1445))))
                    (setfield_ptr(root-init) 10 (global Dune__exe__Lr1!)
                      print/1443))
                  (let
                    (entry/1446 =
                       (apply
                         (field_imm 23
                           (field_imm 9 (global Dune__exe__Grammar!)))
                         (field_imm 47 (global Dune__exe__Lr1!))
                         (field_imm 3
                           (field_imm 43 (global Dune__exe__Lr1!)))))
                    (setfield_ptr(root-init) 4 (global Dune__exe__Lr1!)
                      entry/1446))
                  (let
                    (state/1447 =
                       (function node/1449[int]
                         (apply
                           (field_imm 5
                             (field_imm 43 (global Dune__exe__Lr1!)))
                           (apply
                             (field_imm 2
                               (field_imm 43 (global Dune__exe__Lr1!)))
                             (apply (field_imm 63 (global Dune__exe__Lr1!))
                               node/1449)))))
                    (setfield_ptr(root-init) 11 (global Dune__exe__Lr1!)
                      state/1447))
                  (let
                    (transitions/1450 =
                       (function node/1451[int]
                         (seq
                           (if
                             (&& (<= 0 node/1451)
                               (< node/1451
                                 (field_imm 8 (global Dune__exe__Lr1!))))
                             0
                             (raise
                               (makeblock 0 (global Assert_failure/28!)
                                 [0: "src/lr1.ml" 479 2])))
                           (array.get[gen]
                             (field_imm 64 (global Dune__exe__Lr1!))
                             node/1451))))
                    (setfield_ptr(root-init) 19 (global Dune__exe__Lr1!)
                      transitions/1450))
                  (let
                    (set_reductions/1452 =
                       (function node/1454[int] table/1455 : int
                         (array.set[gen]
                           (field_imm 50 (global Dune__exe__Lr1!))
                           (apply (field_imm 63 (global Dune__exe__Lr1!))
                             node/1454)
                           table/1455)))
                    (setfield_ptr(root-init) 65 (global Dune__exe__Lr1!)
                      set_reductions/1452))
                  (let
                    (reductions/1456 =
                       (function node/1457[int]
                         (array.get[gen]
                           (field_imm 50 (global Dune__exe__Lr1!))
                           (apply (field_imm 63 (global Dune__exe__Lr1!))
                             node/1457))))
                    (setfield_ptr(root-init) 20 (global Dune__exe__Lr1!)
                      reductions/1456))
                  (let
                    (predecessors/1458 =
                       (function node/1459[int]
                         (array.get[addr]
                           (field_imm 49 (global Dune__exe__Lr1!))
                           (apply (field_imm 63 (global Dune__exe__Lr1!))
                             node/1459))))
                    (setfield_ptr(root-init) 16 (global Dune__exe__Lr1!)
                      predecessors/1458))
                  (let
                    (conflict_tokens/1460 =
                       (function node/1462[int]
                         (array.get[gen]
                           (field_imm 51 (global Dune__exe__Lr1!))
                           (apply (field_imm 63 (global Dune__exe__Lr1!))
                             node/1462))))
                    (setfield_ptr(root-init) 35 (global Dune__exe__Lr1!)
                      conflict_tokens/1460))
                  (let
                    (conflicts/1463 =
                       (function f/1465 : int
                         (apply (field_imm 17 (global Stdlib__List!))
                           (function node/1466[int] : int
                             (apply f/1465
                               (apply (field_imm 35 (global Dune__exe__Lr1!))
                                 node/1466)
                               node/1466))
                           (field_imm 62 (global Dune__exe__Lr1!)))))
                    (setfield_ptr(root-init) 34 (global Dune__exe__Lr1!)
                      conflicts/1463))
                  (let
                    (forbid_default_reduction/1467 =
                       (function node/1468[int] : int
                         (array.get[int]
                           (field_imm 53 (global Dune__exe__Lr1!))
                           (apply (field_imm 63 (global Dune__exe__Lr1!))
                             node/1468))))
                    (setfield_ptr(root-init) 21 (global Dune__exe__Lr1!)
                      forbid_default_reduction/1467))
                  (let
                    (has_eos_conflict/1469 =
                       (function node/1471[int]
                         (array.get[addr]
                           (field_imm 52 (global Dune__exe__Lr1!))
                           (apply (field_imm 63 (global Dune__exe__Lr1!))
                             node/1471))))
                    (setfield_ptr(root-init) 36 (global Dune__exe__Lr1!)
                      has_eos_conflict/1469))
                  (let
                    (incoming_symbol/1472 =
                       (function node/1474[int]
                         (apply (field_imm 3 (global Dune__exe__Lr0!))
                           (apply (field_imm 11 (global Dune__exe__Lr0!))
                             (apply (field_imm 11 (global Dune__exe__Lr1!))
                               node/1474)))))
                    (setfield_ptr(root-init) 13 (global Dune__exe__Lr1!)
                      incoming_symbol/1472))
                  (let
                    (is_start/1475 =
                       (function node/1477[int] : int
                         (let
                           (*match*/7822 =
                              (apply (field_imm 13 (global Dune__exe__Lr1!))
                                node/1477))
                           (if (isint *match*/7822) 1
                             (let
                               (*match*/7823 =a (field_imm 0 *match*/7822))
                               0)))))
                    (setfield_ptr(root-init) 14 (global Dune__exe__Lr1!)
                      is_start/1475))
                  (let
                    (foreach_outgoing_edge/1480 =
                       (function node/1482[int] f/1483 : int
                         (apply
                           (field_imm 22
                             (field_imm 7 (global Dune__exe__Grammar!)))
                           f/1483
                           (apply (field_imm 19 (global Dune__exe__Lr1!))
                             node/1482))))
                    (setfield_ptr(root-init) 82 (global Dune__exe__Lr1!)
                      foreach_outgoing_edge/1480))
                  0
                  (let
                    (ForwardEdges/1484 =
                       (makeblock 0 (field_imm 82 (global Dune__exe__Lr1!))))
                    (seq
                      (setfield_ptr(root-init) 17 (global Dune__exe__Lr1!)
                        ForwardEdges/1484)
                      (let
                        (foreach_outgoing_edge/1487 =
                           (function node/1489[int] f/1490 : int
                             (apply (field_imm 17 (global Stdlib__List!))
                               (function node/1491[int] : int
                                 (apply f/1490 0 node/1491))
                               (apply (field_imm 16 (global Dune__exe__Lr1!))
                                 node/1489))))
                        (setfield_ptr(root-init) 83 (global Dune__exe__Lr1!)
                          foreach_outgoing_edge/1487))
                      0
                      (let
                        (BackwardEdges/1492 =
                           (makeblock 0
                             (field_imm 83 (global Dune__exe__Lr1!))))
                        (seq
                          (setfield_ptr(root-init) 18
                            (global Dune__exe__Lr1!) BackwardEdges/1492)
                          (let
                            (is_start_or_exit/1493 =
                               (function node/1495[int]
                                 (let
                                   (items/1496 =
                                      (apply
                                        (field_imm 2
                                          (global Dune__exe__Lr0!))
                                        (apply
                                          (field_imm 11
                                            (global Dune__exe__Lr0!))
                                          (apply
                                            (field_imm 11
                                              (global Dune__exe__Lr1!))
                                            node/1495))))
                                   (if
                                     (==
                                       (apply
                                         (field_imm 4
                                           (field_imm 8
                                             (global Dune__exe__Item!)))
                                         items/1496)
                                       1)
                                     (let
                                       (item/1566 =
                                          (apply
                                            (field_imm 5
                                              (field_imm 8
                                                (global Dune__exe__Item!)))
                                            items/1496)
                                        *match*/7830 =
                                          (apply
                                            (field_imm 4
                                              (global Dune__exe__Item!))
                                            item/1566)
                                        *match*/7834 =a
                                          (field_imm 4 *match*/7830)
                                        *match*/7833 =a
                                          (field_imm 3 *match*/7830)
                                        *match*/7832 =a
                                          (field_imm 2 *match*/7830)
                                        *match*/7831 =a
                                          (field_imm 1 *match*/7830)
                                        prod/1567 =a
                                          (field_imm 0 *match*/7830))
                                       (apply
                                         (field_imm 25
                                           (field_imm 8
                                             (global Dune__exe__Grammar!)))
                                         prod/1567))
                                     0))))
                            (setfield_ptr(root-init) 15
                              (global Dune__exe__Lr1!) is_start_or_exit/1493))
                          (let
                            (fold/1568 =
                               (function f/1570 accu/1571
                                 (let (accu/1572 = (makemutable 0 accu/1571))
                                   (seq
                                     (for node/1573 0 to
                                       (-
                                         (field_imm 8
                                           (global Dune__exe__Lr1!))
                                         1)
                                       (setfield_ptr 0 accu/1572
                                         (apply f/1570
                                           (field_mut 0 accu/1572) node/1573)))
                                     (field_mut 0 accu/1572)))))
                            (setfield_ptr(root-init) 24
                              (global Dune__exe__Lr1!) fold/1568))
                          (let
                            (iter/1574 =
                               (function f/1576 : int
                                 (for node/1577 0 to
                                   (- (field_imm 8 (global Dune__exe__Lr1!))
                                     1)
                                   (apply f/1576 node/1577))))
                            (setfield_ptr(root-init) 25
                              (global Dune__exe__Lr1!) iter/1574))
                          (let
                            (map/1578 =
                               (function f/1580
                                 (apply (field_imm 9 (global Stdlib__List!))
                                   (apply
                                     (field_imm 24 (global Dune__exe__Lr1!))
                                     (function accu/1581 node/1582[int]
                                       (makeblock 0 (apply f/1580 node/1582)
                                         accu/1581))
                                     0))))
                            (setfield_ptr(root-init) 26
                              (global Dune__exe__Lr1!) map/1578))
                          (let
                            (foldx/1583 =
                               (function f/1585
                                 (apply
                                   (field_imm 24 (global Dune__exe__Lr1!))
                                   (function accu/1586 node/1587[int]
                                     (let
                                       (*match*/7835 =
                                          (apply
                                            (field_imm 13
                                              (global Dune__exe__Lr1!))
                                            node/1587))
                                       (if (isint *match*/7835) accu/1586
                                         (let
                                           (*match*/7836 =a
                                              (field_imm 0 *match*/7835))
                                           (apply f/1585 accu/1586 node/1587))))))))
                            (setfield_ptr(root-init) 29
                              (global Dune__exe__Lr1!) foldx/1583))
                          (let
                            (iterx/1588 =
                               (function f/1590 : int
                                 (apply
                                   (field_imm 25 (global Dune__exe__Lr1!))
                                   (function node/1591[int] : int
                                     (let
                                       (*match*/7837 =
                                          (apply
                                            (field_imm 13
                                              (global Dune__exe__Lr1!))
                                            node/1591))
                                       (if (isint *match*/7837) 0
                                         (let
                                           (*match*/7838 =a
                                              (field_imm 0 *match*/7837))
                                           (apply f/1590 node/1591))))))))
                            (setfield_ptr(root-init) 30
                              (global Dune__exe__Lr1!) iterx/1588))
                          (let
                            (tabulate/1592 =
                               (function f/1594
                                 (apply
                                   (field_imm 2 (global Dune__exe__Misc!))
                                   (field_imm 8 (global Dune__exe__Lr1!))
                                   f/1594)))
                            (setfield_ptr(root-init) 27
                              (global Dune__exe__Lr1!) tabulate/1592))
                          (let
                            (sum/1595 =
                               (function f/1597 : int
                                 (apply
                                   (field_imm 3 (global Dune__exe__Misc!))
                                   (field_imm 8 (global Dune__exe__Lr1!))
                                   f/1597)))
                            (setfield_ptr(root-init) 28
                              (global Dune__exe__Lr1!) sum/1595))
                          (let
                            (lookup/1598 =
                               (function symbol/1600 index/1601
                                 (try
                                   (apply
                                     (field_imm 16
                                       (field_imm 7
                                         (global Dune__exe__Grammar!)))
                                     symbol/1600 index/1601)
                                  with exn/7839
                                   (catch
                                     (if
                                       (== exn/7839
                                         (field_imm 7 (global Stdlib!)))
                                       0 (exit 75))
                                    with (75) (reraise exn/7839)))))
                            (setfield_ptr(root-init) 66
                              (global Dune__exe__Lr1!) lookup/1598))
                          (let
                            (index/1602 =
                               (apply (field_imm 24 (global Dune__exe__Lr1!))
                                 (function index/1603 node/1604[int]
                                   (let
                                     (*match*/7840 =
                                        (apply
                                          (field_imm 13
                                            (global Dune__exe__Lr1!))
                                          node/1604))
                                     (if (isint *match*/7840) index/1603
                                       (let
                                         (symbol/1605 =a
                                            (field_imm 0 *match*/7840))
                                         (apply
                                           (field_imm 1
                                             (field_imm 7
                                               (global Dune__exe__Grammar!)))
                                           symbol/1605
                                           (makeblock 0 (int,*) node/1604
                                             (apply
                                               (field_imm 66
                                                 (global Dune__exe__Lr1!))
                                               symbol/1605 index/1603))
                                           index/1603)))))
                                 (field_imm 0
                                   (field_imm 7 (global Dune__exe__Grammar!)))))
                            (setfield_ptr(root-init) 67
                              (global Dune__exe__Lr1!) index/1602))
                          (let
                            (targets/1606 =
                               (function f/1608 accu/1609 symbol/1610
                                 (let
                                   (targets/1611 =
                                      (apply
                                        (field_imm 66
                                          (global Dune__exe__Lr1!))
                                        symbol/1610
                                        (field_imm 67
                                          (global Dune__exe__Lr1!))))
                                   (apply
                                     (field_imm 25 (global Stdlib__List!))
                                     (function accu/1612 target/1613[int]
                                       (apply f/1608 accu/1612
                                         (apply
                                           (field_imm 16
                                             (global Dune__exe__Lr1!))
                                           target/1613)
                                         target/1613))
                                     accu/1609 targets/1611))))
                            (setfield_ptr(root-init) 31
                              (global Dune__exe__Lr1!) targets/1606))
                          (let
                            (start2item/1614 =
                               (function node/1616[int]
                                 (let
                                   (state/1617 =
                                      (apply
                                        (field_imm 11
                                          (global Dune__exe__Lr1!))
                                        node/1616)
                                    core/1618 =
                                      (apply
                                        (field_imm 11
                                          (global Dune__exe__Lr0!))
                                        state/1617)
                                    items/1619 =
                                      (apply
                                        (field_imm 2
                                          (global Dune__exe__Lr0!))
                                        core/1618))
                                   (seq
                                     (if
                                       (==
                                         (apply
                                           (field_imm 4
                                             (field_imm 8
                                               (global Dune__exe__Item!)))
                                           items/1619)
                                         1)
                                       0
                                       (raise
                                         (makeblock 0
                                           (global Assert_failure/28!)
                                           [0: "src/lr1.ml" 634 2])))
                                     (apply
                                       (field_imm 5
                                         (field_imm 8
                                           (global Dune__exe__Item!)))
                                       items/1619)))))
                            (setfield_ptr(root-init) 12
                              (global Dune__exe__Lr1!) start2item/1614))
                          (let
                            (has_beforeend/1620 =
                               (function node/1622[int] : int
                                 (apply
                                   (field_imm 19
                                     (field_imm 4
                                       (global Dune__exe__Grammar!)))
                                   (function param/1698 prods/1623
                                     accu/1624[int] : int
                                     (|| accu/1624
                                       (let
                                         (prod/1625 =
                                            (apply
                                              (field_imm 0
                                                (global Dune__exe__Misc!))
                                              prods/1623))
                                         (&&
                                           (not
                                             (apply
                                               (field_imm 26
                                                 (field_imm 8
                                                   (global Dune__exe__Grammar!)))
                                               prod/1625))
                                           (let
                                             (action/1626 =
                                                (apply
                                                  (field_imm 9
                                                    (field_imm 8
                                                      (global Dune__exe__Grammar!)))
                                                  prod/1625))
                                             (apply
                                               (field_imm 9
                                                 (global Dune__exe__Action!))
                                               action/1626))))))
                                   (apply
                                     (field_imm 20 (global Dune__exe__Lr1!))
                                     node/1622)
                                   0)))
                            (setfield_ptr(root-init) 22
                              (global Dune__exe__Lr1!) has_beforeend/1620))
                          (let
                            (acceptable_tokens/1699 =
                               (function s/1701[int]
                                 (let
                                   (transitions/1702 =
                                      (apply
                                        (field_imm 5
                                          (field_imm 7
                                            (global Dune__exe__Grammar!)))
                                        (makeblock 1
                                          (field_imm 10
                                            (field_imm 2
                                              (global Dune__exe__Grammar!))))
                                        (apply
                                          (field_imm 19
                                            (global Dune__exe__Lr1!))
                                          s/1701))
                                    reductions/1703 =
                                      (apply
                                        (field_imm 15
                                          (field_imm 4
                                            (global Dune__exe__Grammar!)))
                                        (field_imm 10
                                          (field_imm 2
                                            (global Dune__exe__Grammar!)))
                                        (apply
                                          (field_imm 20
                                            (global Dune__exe__Lr1!))
                                          s/1701))
                                    covered/1704 =
                                      (apply
                                        (field_imm 23
                                          (field_imm 7
                                            (global Dune__exe__Grammar!)))
                                        (function symbol/1705 param/1728[int]
                                          covered/1706
                                          (switch* symbol/1705
                                           case tag 0:
                                            (let
                                              (*match*/7845 =a
                                                 (field_imm 0 symbol/1705))
                                              covered/1706)
                                           case tag 1:
                                            (let
                                              (tok/1707 =a
                                                 (field_imm 0 symbol/1705))
                                              (apply
                                                (field_imm 7
                                                  (field_imm 3
                                                    (global Dune__exe__Grammar!)))
                                                tok/1707 covered/1706))))
                                        transitions/1702
                                        (field_imm 0
                                          (field_imm 3
                                            (global Dune__exe__Grammar!))))
                                    covered/1729 =
                                      (apply
                                        (field_imm 19
                                          (field_imm 9
                                            (global Dune__exe__Grammar!)))
                                        (function param/1732 toks/1730
                                          covered/1731
                                          (apply
                                            (field_imm 9
                                              (field_imm 3
                                                (global Dune__exe__Grammar!)))
                                            toks/1730 covered/1731))
                                        (apply
                                          (field_imm 30
                                            (global Dune__exe__Lr0!))
                                          reductions/1703)
                                        covered/1704))
                                   covered/1729)))
                            (setfield_ptr(root-init) 23
                              (global Dune__exe__Lr1!)
                              acceptable_tokens/1699))
                          (let
                            (*match*/7849 =
                               (seq
                                 (if
                                   (==
                                     (field_int 0
                                       (field_imm 56
                                         (global Dune__exe__Lr1!)))
                                     1)
                                   (apply
                                     (field_imm 13
                                       (global Dune__exe__Error!))
                                     0
                                     [0:
                                      [11:
                                       "one state has shift/reduce conflicts."
                                       0]
                                      "one state has shift/reduce conflicts."])
                                   (if
                                     (>
                                       (field_int 0
                                         (field_imm 56
                                           (global Dune__exe__Lr1!)))
                                       1)
                                     (apply
                                       (field_imm 13
                                         (global Dune__exe__Error!))
                                       0
                                       [0:
                                        [4:
                                         0 0 0
                                         [11:
                                          " states have shift/reduce conflicts."
                                          0]]
                                        "%d states have shift/reduce conflicts."]
                                       (field_int 0
                                         (field_imm 56
                                           (global Dune__exe__Lr1!))))
                                     0))
                                 (if
                                   (==
                                     (field_int 0
                                       (field_imm 57
                                         (global Dune__exe__Lr1!)))
                                     1)
                                   (apply
                                     (field_imm 13
                                       (global Dune__exe__Error!))
                                     0
                                     [0:
                                      [11:
                                       "one state has reduce/reduce conflicts."
                                       0]
                                      "one state has reduce/reduce conflicts."])
                                   (if
                                     (>
                                       (field_int 0
                                         (field_imm 57
                                           (global Dune__exe__Lr1!)))
                                       1)
                                     (apply
                                       (field_imm 13
                                         (global Dune__exe__Error!))
                                       0
                                       [0:
                                        [4:
                                         0 0 0
                                         [11:
                                          " states have reduce/reduce conflicts."
                                          0]]
                                        "%d states have reduce/reduce conflicts."]
                                       (field_int 0
                                         (field_imm 57
                                           (global Dune__exe__Lr1!))))
                                     0))))
                            0)
                          (let
                            (compare/1769 =
                               (function prim/7851 prim/7850 stub
                                 (- prim/7851 prim/7850)))
                            (setfield_ptr(root-init) 84
                              (global Dune__exe__Lr1!) compare/1769))
                          0
                          (let
                            (Node/1770 =
                               (makeblock 0
                                 (field_imm 84 (global Dune__exe__Lr1!))))
                            (seq
                              (setfield_ptr(root-init) 0
                                (global Dune__exe__Lr1!) Node/1770)
                              (let
                                (include/7852 =
                                   (apply
                                     (let
                                       (let/7853 =
                                          (field_imm 0 (global Stdlib__Set!)))
                                       (field_imm 0 (global Stdlib__Set!)))
                                     (field_imm 0 (global Dune__exe__Lr1!)))
                                 empty/1874 =a (field_mut 0 include/7852))
                                (seq
                                  (setfield_ptr(root-init) 85
                                    (global Dune__exe__Lr1!) empty/1874)
                                  (let
                                    (add/1875 =a (field_mut 1 include/7852))
                                    (seq
                                      (setfield_ptr(root-init) 86
                                        (global Dune__exe__Lr1!) add/1875)
                                      (let
                                        (singleton/1876 =a
                                           (field_mut 2 include/7852))
                                        (seq
                                          (setfield_ptr(root-init) 87
                                            (global Dune__exe__Lr1!)
                                            singleton/1876)
                                          (let
                                            (remove/1877 =a
                                               (field_mut 3 include/7852))
                                            (seq
                                              (setfield_ptr(root-init) 88
                                                (global Dune__exe__Lr1!)
                                                remove/1877)
                                              (let
                                                (union/1878 =a
                                                   (field_mut 4 include/7852))
                                                (seq
                                                  (setfield_ptr(root-init) 89
                                                    (global Dune__exe__Lr1!)
                                                    union/1878)
                                                  (let
                                                    (inter/1879 =a
                                                       (field_mut 5
                                                         include/7852))
                                                    (seq
                                                      (setfield_ptr(root-init) 90
                                                        (global Dune__exe__Lr1!)
                                                        inter/1879)
                                                      (let
                                                        (disjoint/1880 =a
                                                           (field_mut 6
                                                             include/7852))
                                                        (seq
                                                          (setfield_ptr(root-init) 91
                                                            (global Dune__exe__Lr1!)
                                                            disjoint/1880)
                                                          (let
                                                            (diff/1881 =a
                                                               (field_mut 7
                                                                 include/7852))
                                                            (seq
                                                              (setfield_ptr(root-init) 92
                                                                (global Dune__exe__Lr1!)
                                                                diff/1881)
                                                              (let
                                                                (cardinal/1882 =a
                                                                   (field_mut 8
                                                                    include/7852))
                                                                (seq
                                                                  (setfield_ptr(root-init) 93
                                                                    (global Dune__exe__Lr1!)
                                                                    cardinal/1882)
                                                                  (let
                                                                    (elements/1883 =a
                                                                    (field_mut 9
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 94
                                                                    (global Dune__exe__Lr1!)
                                                                    elements/1883)
                                                                    (let
                                                                    (min_elt/1884 =a
                                                                    (field_mut 10
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 95
                                                                    (global Dune__exe__Lr1!)
                                                                    min_elt/1884)
                                                                    (let
                                                                    (min_elt_opt/1885 =a
                                                                    (field_mut 11
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 96
                                                                    (global Dune__exe__Lr1!)
                                                                    min_elt_opt/1885)
                                                                    (let
                                                                    (max_elt/1886 =a
                                                                    (field_mut 12
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 97
                                                                    (global Dune__exe__Lr1!)
                                                                    max_elt/1886)
                                                                    (let
                                                                    (max_elt_opt/1887 =a
                                                                    (field_mut 13
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 98
                                                                    (global Dune__exe__Lr1!)
                                                                    max_elt_opt/1887)
                                                                    (let
                                                                    (choose/1888 =a
                                                                    (field_mut 14
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 99
                                                                    (global Dune__exe__Lr1!)
                                                                    choose/1888)
                                                                    (let
                                                                    (choose_opt/1889 =a
                                                                    (field_mut 15
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 100
                                                                    (global Dune__exe__Lr1!)
                                                                    choose_opt/1889)
                                                                    (let
                                                                    (find/1890 =a
                                                                    (field_mut 16
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 101
                                                                    (global Dune__exe__Lr1!)
                                                                    find/1890)
                                                                    (let
                                                                    (find_opt/1891 =a
                                                                    (field_mut 17
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 102
                                                                    (global Dune__exe__Lr1!)
                                                                    find_opt/1891)
                                                                    (let
                                                                    (find_first/1892 =a
                                                                    (field_mut 18
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 103
                                                                    (global Dune__exe__Lr1!)
                                                                    find_first/1892)
                                                                    (let
                                                                    (find_first_opt/1893 =a
                                                                    (field_mut 19
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 104
                                                                    (global Dune__exe__Lr1!)
                                                                    find_first_opt/1893)
                                                                    (let
                                                                    (find_last/1894 =a
                                                                    (field_mut 20
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 105
                                                                    (global Dune__exe__Lr1!)
                                                                    find_last/1894)
                                                                    (let
                                                                    (find_last_opt/1895 =a
                                                                    (field_mut 21
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 106
                                                                    (global Dune__exe__Lr1!)
                                                                    find_last_opt/1895)
                                                                    (let
                                                                    (iter/1896 =a
                                                                    (field_mut 22
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 107
                                                                    (global Dune__exe__Lr1!)
                                                                    iter/1896)
                                                                    (let
                                                                    (fold/1897 =a
                                                                    (field_mut 23
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 108
                                                                    (global Dune__exe__Lr1!)
                                                                    fold/1897)
                                                                    (let
                                                                    (map/1898 =a
                                                                    (field_mut 24
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 109
                                                                    (global Dune__exe__Lr1!)
                                                                    map/1898)
                                                                    (let
                                                                    (filter/1899 =a
                                                                    (field_mut 25
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 110
                                                                    (global Dune__exe__Lr1!)
                                                                    filter/1899)
                                                                    (let
                                                                    (filter_map/1900 =a
                                                                    (field_mut 26
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 111
                                                                    (global Dune__exe__Lr1!)
                                                                    filter_map/1900)
                                                                    (let
                                                                    (partition/1901 =a
                                                                    (field_mut 27
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 112
                                                                    (global Dune__exe__Lr1!)
                                                                    partition/1901)
                                                                    (let
                                                                    (split/1902 =a
                                                                    (field_mut 28
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 113
                                                                    (global Dune__exe__Lr1!)
                                                                    split/1902)
                                                                    (let
                                                                    (is_empty/1903 =a
                                                                    (field_mut 29
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 114
                                                                    (global Dune__exe__Lr1!)
                                                                    is_empty/1903)
                                                                    (let
                                                                    (mem/1904 =a
                                                                    (field_mut 30
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 115
                                                                    (global Dune__exe__Lr1!)
                                                                    mem/1904)
                                                                    (let
                                                                    (equal/1905 =a
                                                                    (field_mut 31
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 116
                                                                    (global Dune__exe__Lr1!)
                                                                    equal/1905)
                                                                    (let
                                                                    (compare/1906 =a
                                                                    (field_mut 32
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 117
                                                                    (global Dune__exe__Lr1!)
                                                                    compare/1906)
                                                                    (let
                                                                    (subset/1907 =a
                                                                    (field_mut 33
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 118
                                                                    (global Dune__exe__Lr1!)
                                                                    subset/1907)
                                                                    (let
                                                                    (for_all/1908 =a
                                                                    (field_mut 34
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 119
                                                                    (global Dune__exe__Lr1!)
                                                                    for_all/1908)
                                                                    (let
                                                                    (exists/1909 =a
                                                                    (field_mut 35
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 120
                                                                    (global Dune__exe__Lr1!)
                                                                    exists/1909)
                                                                    (let
                                                                    (to_list/1910 =a
                                                                    (field_mut 36
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 121
                                                                    (global Dune__exe__Lr1!)
                                                                    to_list/1910)
                                                                    (let
                                                                    (of_list/1911 =a
                                                                    (field_mut 37
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 122
                                                                    (global Dune__exe__Lr1!)
                                                                    of_list/1911)
                                                                    (let
                                                                    (to_seq_from/1912 =a
                                                                    (field_mut 38
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 123
                                                                    (global Dune__exe__Lr1!)
                                                                    to_seq_from/1912)
                                                                    (let
                                                                    (to_seq/1913 =a
                                                                    (field_mut 39
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 124
                                                                    (global Dune__exe__Lr1!)
                                                                    to_seq/1913)
                                                                    (let
                                                                    (to_rev_seq/1914 =a
                                                                    (field_mut 40
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 125
                                                                    (global Dune__exe__Lr1!)
                                                                    to_rev_seq/1914)
                                                                    (let
                                                                    (add_seq/1915 =a
                                                                    (field_mut 41
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 126
                                                                    (global Dune__exe__Lr1!)
                                                                    add_seq/1915)
                                                                    (let
                                                                    (of_seq/1916 =a
                                                                    (field_mut 42
                                                                    include/7852))
                                                                    (seq
                                                                    (setfield_ptr(root-init) 127
                                                                    (global Dune__exe__Lr1!)
                                                                    of_seq/1916)
                                                                    (let
                                                                    (leq_join/1917 =
                                                                    (function
                                                                    s1/1919
                                                                    s2/1920
                                                                    (if
                                                                    (apply
                                                                    (field_imm 118
                                                                    (global Dune__exe__Lr1!))
                                                                    s1/1919
                                                                    s2/1920)
                                                                    s2/1920
                                                                    (apply
                                                                    (field_imm 89
                                                                    (global Dune__exe__Lr1!))
                                                                    s1/1919
                                                                    s2/1920))))
                                                                    (setfield_ptr(root-init) 128
                                                                    (global Dune__exe__Lr1!)
                                                                    leq_join/1917))
                                                                    (let
                                                                    (print/2011 =
                                                                    (function
                                                                    s/2012
                                                                    (apply
                                                                    (field_imm 3
                                                                    (global Stdlib__Printf!))
                                                                    [0:
                                                                    [11:
                                                                    "{ "
                                                                    [2:
                                                                    0
                                                                    [11:
                                                                    " }" 0]]]
                                                                    "{ %s }"]
                                                                    (apply
                                                                    (field_imm 5
                                                                    (global Dune__exe__Misc!))
                                                                    (field_imm 10
                                                                    (global Dune__exe__Lr1!))
                                                                    ", "
                                                                    (function
                                                                    f/2013
                                                                    : int
                                                                    (apply
                                                                    (field_imm 107
                                                                    (global Dune__exe__Lr1!))
                                                                    f/2013
                                                                    s/2012))))))
                                                                    (setfield_ptr(root-init) 129
                                                                    (global Dune__exe__Lr1!)
                                                                    print/2011))
                                                                    0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                              (let
                                (NodeSet/2014 =
                                   (makeblock 0
                                     (field_imm 85 (global Dune__exe__Lr1!))
                                     (field_imm 86 (global Dune__exe__Lr1!))
                                     (field_imm 87 (global Dune__exe__Lr1!))
                                     (field_imm 88 (global Dune__exe__Lr1!))
                                     (field_imm 89 (global Dune__exe__Lr1!))
                                     (field_imm 90 (global Dune__exe__Lr1!))
                                     (field_imm 91 (global Dune__exe__Lr1!))
                                     (field_imm 92 (global Dune__exe__Lr1!))
                                     (field_imm 93 (global Dune__exe__Lr1!))
                                     (field_imm 94 (global Dune__exe__Lr1!))
                                     (field_imm 95 (global Dune__exe__Lr1!))
                                     (field_imm 96 (global Dune__exe__Lr1!))
                                     (field_imm 97 (global Dune__exe__Lr1!))
                                     (field_imm 98 (global Dune__exe__Lr1!))
                                     (field_imm 99 (global Dune__exe__Lr1!))
                                     (field_imm 100 (global Dune__exe__Lr1!))
                                     (field_imm 101 (global Dune__exe__Lr1!))
                                     (field_imm 102 (global Dune__exe__Lr1!))
                                     (field_imm 103 (global Dune__exe__Lr1!))
                                     (field_imm 104 (global Dune__exe__Lr1!))
                                     (field_imm 105 (global Dune__exe__Lr1!))
                                     (field_imm 106 (global Dune__exe__Lr1!))
                                     (field_imm 107 (global Dune__exe__Lr1!))
                                     (field_imm 108 (global Dune__exe__Lr1!))
                                     (field_imm 109 (global Dune__exe__Lr1!))
                                     (field_imm 110 (global Dune__exe__Lr1!))
                                     (field_imm 111 (global Dune__exe__Lr1!))
                                     (field_imm 112 (global Dune__exe__Lr1!))
                                     (field_imm 113 (global Dune__exe__Lr1!))
                                     (field_imm 114 (global Dune__exe__Lr1!))
                                     (field_imm 115 (global Dune__exe__Lr1!))
                                     (field_imm 116 (global Dune__exe__Lr1!))
                                     (field_imm 117 (global Dune__exe__Lr1!))
                                     (field_imm 118 (global Dune__exe__Lr1!))
                                     (field_imm 119 (global Dune__exe__Lr1!))
                                     (field_imm 120 (global Dune__exe__Lr1!))
                                     (field_imm 121 (global Dune__exe__Lr1!))
                                     (field_imm 122 (global Dune__exe__Lr1!))
                                     (field_imm 123 (global Dune__exe__Lr1!))
                                     (field_imm 124 (global Dune__exe__Lr1!))
                                     (field_imm 125 (global Dune__exe__Lr1!))
                                     (field_imm 126 (global Dune__exe__Lr1!))
                                     (field_imm 127 (global Dune__exe__Lr1!))
                                     (field_imm 128 (global Dune__exe__Lr1!))
                                     (field_imm 129 (global Dune__exe__Lr1!))))
                                (seq
                                  (setfield_ptr(root-init) 1
                                    (global Dune__exe__Lr1!) NodeSet/2014)
                                  (let
                                    (NodeMap/2116 =
                                       (apply
                                         (let
                                           (let/7854 =
                                              (field_imm 0
                                                (global Stdlib__Map!)))
                                           (field_imm 0
                                             (global Stdlib__Map!)))
                                         (field_imm 0
                                           (global Dune__exe__Lr1!))))
                                    (seq
                                      (setfield_ptr(root-init) 2
                                        (global Dune__exe__Lr1!)
                                        NodeMap/2116)
                                      (let
                                        (ImperativeNodeMap/2250 =
                                           (apply
                                             (let
                                               (let/7855 =
                                                  (field_imm 10
                                                    (global Vendored_fix__Glue!)))
                                               (field_imm 10
                                                 (global Vendored_fix__Glue!)))
                                             (let
                                               (n/2117 =[int]
                                                  (field_imm 8
                                                    (global Dune__exe__Lr1!)))
                                               (makeblock 0 n/2117))))
                                        (seq
                                          (setfield_ptr(root-init) 3
                                            (global Dune__exe__Lr1!)
                                            (makeblock 0
                                              (field_mut 0
                                                ImperativeNodeMap/2250)
                                              (field_mut 1
                                                ImperativeNodeMap/2250)
                                              (field_mut 2
                                                ImperativeNodeMap/2250)))
                                          (let
                                            (all_sources/2251 =
                                               (function symbol/2253
                                                 (apply
                                                   (field_imm 31
                                                     (global Dune__exe__Lr1!))
                                                   (function accu/2254
                                                     sources/2255
                                                     _target/2256[int]
                                                     (apply
                                                       (field_imm 25
                                                         (global Stdlib__List!))
                                                       (function accu/2257
                                                         source/2258[int]
                                                         (apply
                                                           (field_imm 1
                                                             (field_imm 1
                                                               (global Dune__exe__Lr1!)))
                                                           source/2258
                                                           accu/2257))
                                                       accu/2254
                                                       sources/2255))
                                                   (field_imm 0
                                                     (field_imm 1
                                                       (global Dune__exe__Lr1!)))
                                                   symbol/2253)))
                                            (setfield_ptr(root-init) 32
                                              (global Dune__exe__Lr1!)
                                              all_sources/2251))
                                          (let
                                            (all_targets/2259 =
                                               (function symbol/2261
                                                 (apply
                                                   (field_imm 31
                                                     (global Dune__exe__Lr1!))
                                                   (function accu/2262
                                                     _sources/2263
                                                     target/2264[int]
                                                     (apply
                                                       (field_imm 1
                                                         (field_imm 1
                                                           (global Dune__exe__Lr1!)))
                                                       target/2264 accu/2262))
                                                   (field_imm 0
                                                     (field_imm 1
                                                       (global Dune__exe__Lr1!)))
                                                   symbol/2261)))
                                            (setfield_ptr(root-init) 33
                                              (global Dune__exe__Lr1!)
                                              all_targets/2259))
                                          (let
                                            (production_where/2265 =
                                               (makemutable 0 0))
                                            (setfield_ptr(root-init) 68
                                              (global Dune__exe__Lr1!)
                                              production_where/2265))
                                          (let
                                            (initialize_production_where/2266 =
                                               (function param/2275[int]
                                                 : int
                                                 (setfield_ptr 0
                                                   (field_imm 68
                                                     (global Dune__exe__Lr1!))
                                                   (makeblock 0
                                                     (apply
                                                       (field_imm 24
                                                         (global Dune__exe__Lr1!))
                                                       (function accu/2268
                                                         node/2269[int]
                                                         (apply
                                                           (field_imm 19
                                                             (field_imm 4
                                                               (global Dune__exe__Grammar!)))
                                                           (function
                                                             param/2274
                                                             prods/2270
                                                             accu/2271
                                                             (let
                                                               (prod/2272 =
                                                                  (apply
                                                                    (field_imm 0
                                                                    (global Dune__exe__Misc!))
                                                                    prods/2270)
                                                                nodes/2273 =
                                                                  (try
                                                                    (apply
                                                                    (field_imm 1
                                                                    (field_imm 9
                                                                    (global Dune__exe__Grammar!)))
                                                                    prod/2272
                                                                    accu/2271)
                                                                   with exn/7857
                                                                    (catch
                                                                    (if
                                                                    (==
                                                                    exn/7857
                                                                    (field_imm 7
                                                                    (global Stdlib!)))
                                                                    (field_imm 0
                                                                    (field_imm 1
                                                                    (global Dune__exe__Lr1!)))
                                                                    (exit 96))
                                                                    with (96)
                                                                    (reraise
                                                                    exn/7857))))
                                                               (apply
                                                                 (field_imm 3
                                                                   (field_imm 9
                                                                    (global Dune__exe__Grammar!)))
                                                                 prod/2272
                                                                 (apply
                                                                   (field_imm 1
                                                                    (field_imm 1
                                                                    (global Dune__exe__Lr1!)))
                                                                   node/2269
                                                                   nodes/2273)
                                                                 accu/2271)))
                                                           (apply
                                                             (field_imm 20
                                                               (global Dune__exe__Lr1!))
                                                             node/2269)
                                                           accu/2268))
                                                       (field_imm 0
                                                         (field_imm 9
                                                           (global Dune__exe__Grammar!))))))))
                                            (setfield_ptr(root-init) 69
                                              (global Dune__exe__Lr1!)
                                              initialize_production_where/2266))
                                          (let
                                            (production_where/2276 =
                                               (function prod/2277
                                                 (let
                                                   (*match*/7859 =
                                                      (field_mut 0
                                                        (field_imm 68
                                                          (global Dune__exe__Lr1!))))
                                                   (if (isint *match*/7859)
                                                     (raise
                                                       (makeblock 0
                                                         (global Assert_failure/28!)
                                                         [0:
                                                          "src/lr1.ml" 790 6]))
                                                     (let
                                                       (production_where/2278 =a
                                                          (field_imm 0
                                                            *match*/7859))
                                                       (try
                                                         (let
                                                           (nodes/2279 =
                                                              (apply
                                                                (field_imm 1
                                                                  (field_imm 9
                                                                    (global Dune__exe__Grammar!)))
                                                                prod/2277
                                                                production_where/2278))
                                                           (seq
                                                             (if
                                                               (not
                                                                 (apply
                                                                   (field_imm 29
                                                                    (field_imm 1
                                                                    (global Dune__exe__Lr1!)))
                                                                   nodes/2279))
                                                               0
                                                               (raise
                                                                 (makeblock 0
                                                                   (global Assert_failure/28!)
                                                                   [0:
                                                                    "src/lr1.ml"
                                                                    795 8])))
                                                             nodes/2279))
                                                        with exn/7858
                                                         (catch
                                                           (if
                                                             (== exn/7858
                                                               (field_imm 7
                                                                 (global Stdlib!)))
                                                             (field_imm 0
                                                               (field_imm 1
                                                                 (global Dune__exe__Lr1!)))
                                                             (exit 97))
                                                          with (97)
                                                           (reraise exn/7858))))))))
                                            (setfield_ptr(root-init) 39
                                              (global Dune__exe__Lr1!)
                                              production_where/2276))
                                          (let
                                            (warn_about_productions_never_reduced/2280 =
                                               (function param/2307[int]
                                                 : int
                                                 (let
                                                   (count/2282 =
                                                      (makemutable 0 (int) 0))
                                                   (seq
                                                     (apply
                                                       (field_imm 14
                                                         (field_imm 8
                                                           (global Dune__exe__Grammar!)))
                                                       (function prod/2283
                                                         : int
                                                         (if
                                                           (apply
                                                             (field_imm 29
                                                               (field_imm 1
                                                                 (global Dune__exe__Lr1!)))
                                                             (apply
                                                               (field_imm 39
                                                                 (global Dune__exe__Lr1!))
                                                               prod/2283))
                                                           (let
                                                             (*match*/7864 =
                                                                (apply
                                                                  (field_imm 25
                                                                    (field_imm 8
                                                                    (global Dune__exe__Grammar!)))
                                                                  prod/2283))
                                                             (if
                                                               (isint
                                                                 *match*/7864)
                                                               (seq
                                                                 (+:=1
                                                                   count/2282)
                                                                 (apply
                                                                   (field_imm 13
                                                                    (global Dune__exe__Error!))
                                                                   (apply
                                                                    (field_imm 10
                                                                    (field_imm 8
                                                                    (global Dune__exe__Grammar!)))
                                                                    prod/2283)
                                                                   [0:
                                                                    [11:
                                                                    "production "
                                                                    [2:
                                                                    0
                                                                    [11:
                                                                    " is never reduced."
                                                                    0]]]
                                                                    "production %s is never reduced."]
                                                                   (apply
                                                                    (field_imm 29
                                                                    (field_imm 8
                                                                    (global Dune__exe__Grammar!)))
                                                                    prod/2283)))
                                                               (let
                                                                 (nt/2284 =a
                                                                    (field_imm 0
                                                                    *match*/7864))
                                                                 (seq
                                                                   (+:=1
                                                                    count/2282)
                                                                   (apply
                                                                    (field_imm 13
                                                                    (global Dune__exe__Error!))
                                                                    (apply
                                                                    (field_imm 15
                                                                    (field_imm 0
                                                                    (global Dune__exe__Grammar!)))
                                                                    nt/2284)
                                                                    [0:
                                                                    [11:
                                                                    "symbol "
                                                                    [2:
                                                                    0
                                                                    [11:
                                                                    " is never accepted."
                                                                    0]]]
                                                                    "symbol %s is never accepted."]
                                                                    (apply
                                                                    (field_imm 5
                                                                    (field_imm 0
                                                                    (global Dune__exe__Grammar!)))
                                                                    0
                                                                    nt/2284))))))
                                                           0)))
                                                     (if
                                                       (>
                                                         (field_int 0
                                                           count/2282)
                                                         0)
                                                       (catch
                                                         (if
                                                           (>
                                                             (field_int 0
                                                               count/2282)
                                                             1)
                                                           (let
                                                             (be/7863 = "are"
                                                              plural_mark/7862 =
                                                                "s")
                                                             (exit 98
                                                               plural_mark/7862
                                                               be/7863))
                                                           (let
                                                             (be/7861 = "is"
                                                              plural_mark/7860 =
                                                                "")
                                                             (exit 98
                                                               plural_mark/7860
                                                               be/7861)))
                                                        with (98 plural_mark/2305 be/2306)
                                                         (apply
                                                           (field_imm 13
                                                             (global Dune__exe__Error!))
                                                           0
                                                           [0:
                                                            [11:
                                                             "in total, "
                                                             [4:
                                                              0 0 0
                                                              [11:
                                                               " production"
                                                               [2:
                                                                0
                                                                [12:
                                                                 ' '
                                                                 [2:
                                                                  0
                                                                  [11:
                                                                   " never reduced."
                                                                   0]]]]]]]
                                                            "in total, %d production%s %s never reduced."]
                                                           (field_int 0
                                                             count/2282)
                                                           plural_mark/2305
                                                           be/2306))
                                                       0)))))
                                            (setfield_ptr(root-init) 70
                                              (global Dune__exe__Lr1!)
                                              warn_about_productions_never_reduced/2280))
                                          (letrec
                                            (best/2308
                                               (function choice/2309
                                                 param/2328
                                                 (if (isint param/2328)
                                                   choice/2309
                                                   (let
                                                     (prods/2311 =a
                                                        (field_imm 1
                                                          param/2328)
                                                      prod/2310 =a
                                                        (field_imm 0
                                                          param/2328)
                                                      *match*/7865 =
                                                        (apply
                                                          (field_imm 1
                                                            (field_imm 12
                                                              (global Dune__exe__Grammar!)))
                                                          choice/2309
                                                          prod/2310))
                                                     (if (isint *match*/7865)
                                                       (seq
                                                         (apply
                                                           (field_imm 9
                                                             (global Dune__exe__Error!))
                                                           (field_imm 12
                                                             (global Dune__exe__Error!))
                                                           (apply
                                                             (field_imm 36
                                                               (global Stdlib!))
                                                             (apply
                                                               (field_imm 10
                                                                 (field_imm 8
                                                                   (global Dune__exe__Grammar!)))
                                                               choice/2309)
                                                             (apply
                                                               (field_imm 10
                                                                 (field_imm 8
                                                                   (global Dune__exe__Grammar!)))
                                                               prod/2310))
                                                           [0:
                                                            [11:
                                                             "do not know how to resolve a reduce/reduce conflict\nbetween the following two productions:\n"
                                                             [2:
                                                              0
                                                              [12:
                                                               '\n' [2: 0 0]]]]
                                                            "do not know how to resolve a reduce/reduce conflict\nbetween the following two productions:\n%s\n%s"]
                                                           (apply
                                                             (field_imm 29
                                                               (field_imm 8
                                                                 (global Dune__exe__Grammar!)))
                                                             choice/2309)
                                                           (apply
                                                             (field_imm 29
                                                               (field_imm 8
                                                                 (global Dune__exe__Grammar!)))
                                                             prod/2310))
                                                         choice/2309)
                                                       (let
                                                         (choice/2312 =a
                                                            (field_imm 0
                                                              *match*/7865))
                                                         (apply best/2308
                                                           choice/2312
                                                           prods/2311)))))))
                                            (setfield_ptr(root-init) 71
                                              (global Dune__exe__Lr1!)
                                              best/2308))
                                          (let
                                            (default_conflict_resolution/2329 =
                                               (function param/2344[int]
                                                 : int
                                                 (let
                                                   (shift_reduce/2331 =
                                                      (makemutable 0 (int) 0)
                                                    reduce_reduce/2332 =
                                                      (makemutable 0 (int) 0))
                                                   (seq
                                                     (apply
                                                       (field_imm 17
                                                         (global Stdlib__List!))
                                                       (function
                                                         node/2333[int] : int
                                                         (seq
                                                           (array.set[gen]
                                                             (field_imm 51
                                                               (global Dune__exe__Lr1!))
                                                             (apply
                                                               (field_imm 63
                                                                 (global Dune__exe__Lr1!))
                                                               node/2333)
                                                             (field_imm 0
                                                               (field_imm 3
                                                                 (global Dune__exe__Grammar!))))
                                                           (apply
                                                             (field_imm 65
                                                               (global Dune__exe__Lr1!))
                                                             node/2333
                                                             (apply
                                                               (field_imm 19
                                                                 (field_imm 4
                                                                   (global Dune__exe__Grammar!)))
                                                               (function
                                                                 tok/2334
                                                                 prods/2335
                                                                 reductions/2336
                                                                 (try
                                                                   (seq
                                                                    (apply
                                                                    (field_imm 16
                                                                    (field_imm 7
                                                                    (global Dune__exe__Grammar!)))
                                                                    (makeblock 1
                                                                    tok/2334)
                                                                    (apply
                                                                    (field_imm 19
                                                                    (global Dune__exe__Lr1!))
                                                                    node/2333))
                                                                    (setfield_imm 0
                                                                    shift_reduce/2331
                                                                    (+
                                                                    (apply
                                                                    (field_imm 0
                                                                    (global Stdlib__List!))
                                                                    prods/2335)
                                                                    (field_int 0
                                                                    shift_reduce/2331)))
                                                                    reductions/2336)
                                                                  with exn/7871
                                                                   (catch
                                                                    (if
                                                                    (==
                                                                    exn/7871
                                                                    (field_imm 7
                                                                    (global Stdlib!)))
                                                                    (if
                                                                    (isint
                                                                    prods/2335)
                                                                    (raise
                                                                    (makeblock 0
                                                                    (global Assert_failure/28!)
                                                                    [0:
                                                                    "src/lr1.ml"
                                                                    889 14]))
                                                                    (let
                                                                    (prods/2338 =a
                                                                    (field_imm 1
                                                                    prods/2335)
                                                                    prod/2337 =a
                                                                    (field_imm 0
                                                                    prods/2335))
                                                                    (if
                                                                    (isint
                                                                    prods/2338)
                                                                    (apply
                                                                    (field_imm 3
                                                                    (field_imm 4
                                                                    (global Dune__exe__Grammar!)))
                                                                    tok/2334
                                                                    prods/2335
                                                                    reductions/2336)
                                                                    (let
                                                                    (*match*/7873 =a
                                                                    (field_imm 1
                                                                    prods/2338)
                                                                    *match*/7872 =a
                                                                    (field_imm 0
                                                                    prods/2338))
                                                                    (seq
                                                                    (setfield_imm 0
                                                                    reduce_reduce/2332
                                                                    (+
                                                                    (apply
                                                                    (field_imm 0
                                                                    (global Stdlib__List!))
                                                                    prods/2338)
                                                                    (field_int 0
                                                                    reduce_reduce/2332)))
                                                                    (apply
                                                                    (field_imm 3
                                                                    (field_imm 4
                                                                    (global Dune__exe__Grammar!)))
                                                                    tok/2334
                                                                    (makeblock 0
                                                                    (apply
                                                                    (field_imm 71
                                                                    (global Dune__exe__Lr1!))
                                                                    prod/2337
                                                                    prods/2338)
                                                                    0)
                                                                    reductions/2336))))))
                                                                    (exit
                                                                    106))
                                                                    with (106)
                                                                    (reraise
                                                                    exn/7871))))
                                                               (apply
                                                                 (field_imm 20
                                                                   (global Dune__exe__Lr1!))
                                                                 node/2333)
                                                               (field_imm 0
                                                                 (field_imm 4
                                                                   (global Dune__exe__Grammar!)))))))
                                                       (field_imm 62
                                                         (global Dune__exe__Lr1!)))
                                                     (if
                                                       (==
                                                         (field_int 0
                                                           shift_reduce/2331)
                                                         1)
                                                       (apply
                                                         (field_imm 7
                                                           (global Dune__exe__Error!))
                                                         0
                                                         [0:
                                                          [11:
                                                           "one shift/reduce conflict was arbitrarily resolved."
                                                           0]
                                                          "one shift/reduce conflict was arbitrarily resolved."])
                                                       (if
                                                         (>
                                                           (field_int 0
                                                             shift_reduce/2331)
                                                           1)
                                                         (apply
                                                           (field_imm 7
                                                             (global Dune__exe__Error!))
                                                           0
                                                           [0:
                                                            [4:
                                                             0 0 0
                                                             [11:
                                                              " shift/reduce conflicts were arbitrarily resolved."
                                                              0]]
                                                            "%d shift/reduce conflicts were arbitrarily resolved."]
                                                           (field_int 0
                                                             shift_reduce/2331))
                                                         0))
                                                     (if
                                                       (==
                                                         (field_int 0
                                                           reduce_reduce/2332)
                                                         1)
                                                       (apply
                                                         (field_imm 7
                                                           (global Dune__exe__Error!))
                                                         0
                                                         [0:
                                                          [11:
                                                           "one reduce/reduce conflict was arbitrarily resolved."
                                                           0]
                                                          "one reduce/reduce conflict was arbitrarily resolved."])
                                                       (if
                                                         (>
                                                           (field_int 0
                                                             reduce_reduce/2332)
                                                           1)
                                                         (apply
                                                           (field_imm 7
                                                             (global Dune__exe__Error!))
                                                           0
                                                           [0:
                                                            [4:
                                                             0 0 0
                                                             [11:
                                                              " reduce/reduce conflicts were arbitrarily resolved."
                                                              0]]
                                                            "%d reduce/reduce conflicts were arbitrarily resolved."]
                                                           (field_int 0
                                                             reduce_reduce/2332))
                                                         0))
                                                     (let
                                                       (eos_conflicts/2339 =
                                                          (makemutable 0 (int)
                                                            0))
                                                       (seq
                                                         (apply
                                                           (field_imm 25
                                                             (global Dune__exe__Lr1!))
                                                           (function
                                                             node/2340[int]
                                                             : int
                                                             (let
                                                               (transitions/2341 =
                                                                  (apply
                                                                    (field_imm 19
                                                                    (global Dune__exe__Lr1!))
                                                                    node/2340)
                                                                reductions/2342 =
                                                                  (apply
                                                                    (field_imm 20
                                                                    (global Dune__exe__Lr1!))
                                                                    node/2340))
                                                               (if
                                                                 (apply
                                                                   (field_imm 32
                                                                    (global Dune__exe__Lr0!))
                                                                   transitions/2341
                                                                   reductions/2342)
                                                                 (let
                                                                   (*match*/7869 =
                                                                    (apply
                                                                    (field_imm 13
                                                                    (field_imm 4
                                                                    (global Dune__exe__Grammar!)))
                                                                    (field_imm 9
                                                                    (field_imm 2
                                                                    (global Dune__exe__Grammar!)))
                                                                    reductions/2342)
                                                                    reductions/2343 =a
                                                                    (field_imm 1
                                                                    *match*/7869)
                                                                    *match*/7870 =a
                                                                    (field_imm 0
                                                                    *match*/7869))
                                                                   (seq
                                                                    (apply
                                                                    (field_imm 65
                                                                    (global Dune__exe__Lr1!))
                                                                    node/2340
                                                                    reductions/2343)
                                                                    (array.set[addr]
                                                                    (field_imm 52
                                                                    (global Dune__exe__Lr1!))
                                                                    (apply
                                                                    (field_imm 63
                                                                    (global Dune__exe__Lr1!))
                                                                    node/2340)
                                                                    0)
                                                                    (+:=1
                                                                    eos_conflicts/2339)))
                                                                 0))))
                                                         (if
                                                           (==
                                                             (field_int 0
                                                               eos_conflicts/2339)
                                                             1)
                                                           (apply
                                                             (field_imm 13
                                                               (global Dune__exe__Error!))
                                                             0
                                                             [0:
                                                              [11:
                                                               "one state end-of-stream conflict was arbitrarily resolved."
                                                               0]
                                                              "one state end-of-stream conflict was arbitrarily resolved."])
                                                           (if
                                                             (>
                                                               (field_int 0
                                                                 eos_conflicts/2339)
                                                               1)
                                                             (apply
                                                               (field_imm 13
                                                                 (global Dune__exe__Error!))
                                                               0
                                                               [0:
                                                                [4:
                                                                 0 0 0
                                                                 [11:
                                                                  " end-of-stream conflicts were arbitrarily resolved."
                                                                  0]]
                                                                "%d end-of-stream conflicts were arbitrarily resolved."]
                                                               (field_int 0
                                                                 eos_conflicts/2339))
                                                             0))
                                                         (apply
                                                           (field_imm 69
                                                             (global Dune__exe__Lr1!))
                                                           0)
                                                         (apply
                                                           (field_imm 70
                                                             (global Dune__exe__Lr1!))
                                                           0)))))))
                                            (setfield_ptr(root-init) 37
                                              (global Dune__exe__Lr1!)
                                              default_conflict_resolution/2329))
                                          (let
                                            (extra/2345 =
                                               (makemutable 0 (int) 0))
                                            (setfield_ptr(root-init) 72
                                              (global Dune__exe__Lr1!)
                                              extra/2345))
                                          (let
                                            (prioritized/2346 =
                                               (makemutable 0 0))
                                            (setfield_ptr(root-init) 73
                                              (global Dune__exe__Lr1!)
                                              prioritized/2346))
                                          (let
                                            (extra_nts/2347 =
                                               (makemutable 0
                                                 (field_imm 0
                                                   (field_imm 26
                                                     (field_imm 1
                                                       (global Dune__exe__Grammar!))))))
                                            (setfield_ptr(root-init) 74
                                              (global Dune__exe__Lr1!)
                                              extra_nts/2347))
                                          (let
                                            (extra_reductions_in_node/2434 =
                                               (function node/2436[int] : int
                                                 (let
                                                   (productions/2437 =
                                                      (apply
                                                        (field_imm 30
                                                          (global Dune__exe__Lr0!))
                                                        (apply
                                                          (field_imm 20
                                                            (global Dune__exe__Lr1!))
                                                          node/2436))
                                                    prods/2438 =
                                                      (apply
                                                        (field_imm 19
                                                          (field_imm 9
                                                            (global Dune__exe__Grammar!)))
                                                        (function prod/2439
                                                          param/2441
                                                          prods/2440
                                                          (makeblock 0
                                                            prod/2439
                                                            prods/2440))
                                                        productions/2437 0)
                                                    prods/2442 =
                                                      (apply
                                                        (field_imm 43
                                                          (global Stdlib__List!))
                                                        (field_imm 0
                                                          (field_imm 13
                                                            (global Dune__exe__Grammar!)))
                                                        prods/2438)
                                                    *match*/7876 =
                                                      (apply
                                                        (field_imm 25
                                                          (global Dune__exe__Misc!))
                                                        (field_imm 2
                                                          (field_imm 13
                                                            (global Dune__exe__Grammar!)))
                                                        prods/2442))
                                                   (if (isint *match*/7876) 0
                                                     (let
                                                       (prod/2446 =a
                                                          (field_imm 0
                                                            *match*/7876)
                                                        acceptable/2447 =
                                                          (apply
                                                            (field_imm 23
                                                              (global Dune__exe__Lr1!))
                                                            node/2436)
                                                        triggered/2448 =
                                                          (makemutable 246
                                                            (function
                                                              param/7875
                                                              (seq
                                                                (+:=1
                                                                  (field_imm 72
                                                                    (global Dune__exe__Lr1!)))
                                                                (if
                                                                  (>
                                                                    (apply
                                                                    (field_imm 0
                                                                    (global Stdlib__List!))
                                                                    prods/2442)
                                                                    1)
                                                                  (setfield_ptr 0
                                                                    (field_imm 73
                                                                    (global Dune__exe__Lr1!))
                                                                    (makeblock 0 (int,*)
                                                                    node/2436
                                                                    (field_mut 0
                                                                    (field_imm 73
                                                                    (global Dune__exe__Lr1!)))))
                                                                  0)
                                                                (setfield_ptr 0
                                                                  (field_imm 74
                                                                    (global Dune__exe__Lr1!))
                                                                  (apply
                                                                    (field_imm 7
                                                                    (field_imm 26
                                                                    (field_imm 1
                                                                    (global Dune__exe__Grammar!))))
                                                                    (apply
                                                                    (field_imm 5
                                                                    (field_imm 8
                                                                    (global Dune__exe__Grammar!)))
                                                                    prod/2446)
                                                                    (field_mut 0
                                                                    (field_imm 74
                                                                    (global Dune__exe__Lr1!)))))))))
                                                       (apply
                                                         (field_imm 21
                                                           (field_imm 2
                                                             (global Dune__exe__Grammar!)))
                                                         (function tok/2469
                                                           : int
                                                           (if
                                                             (not
                                                               (apply
                                                                 (field_imm 6
                                                                   (field_imm 3
                                                                    (global Dune__exe__Grammar!)))
                                                                 tok/2469
                                                                 acceptable/2447))
                                                             (seq
                                                               (apply
                                                                 (field_imm 65
                                                                   (global Dune__exe__Lr1!))
                                                                 node/2436
                                                                 (apply
                                                                   (field_imm 3
                                                                    (field_imm 4
                                                                    (global Dune__exe__Grammar!)))
                                                                   tok/2469
                                                                   (makeblock 0
                                                                    prod/2446
                                                                    0)
                                                                   (apply
                                                                    (field_imm 20
                                                                    (global Dune__exe__Lr1!))
                                                                    node/2436)))
                                                               (let
                                                                 (lzarg/7874 =
                                                                    triggered/2448)
                                                                 (if
                                                                   (isint
                                                                    lzarg/7874)
                                                                   lzarg/7874
                                                                   (switch 
                                                                    (caml_obj_tag
                                                                    lzarg/7874)
                                                                    case int 250:
                                                                    (field_mut 0
                                                                    lzarg/7874)
                                                                    case int 246:
                                                                    (apply
                                                                    (field_imm 1
                                                                    (global CamlinternalLazy!))
                                                                    (opaque
                                                                    lzarg/7874))
                                                                    case int 244:
                                                                    (apply
                                                                    (field_imm 1
                                                                    (global CamlinternalLazy!))
                                                                    (opaque
                                                                    lzarg/7874))
                                                                    default:
                                                                    lzarg/7874))))
                                                             0))))))))
                                            (setfield_ptr(root-init) 75
                                              (global Dune__exe__Lr1!)
                                              extra_reductions_in_node/2434))
                                          (let
                                            (extra_reductions/2483 =
                                               (function param/2489[int]
                                                 : int
                                                 (seq
                                                   (apply
                                                     (field_imm 25
                                                       (global Dune__exe__Lr1!))
                                                     (function node/2485[int]
                                                       : int
                                                       (if
                                                         (not
                                                           (apply
                                                             (field_imm 21
                                                               (global Dune__exe__Lr1!))
                                                             node/2485))
                                                         (apply
                                                           (field_imm 75
                                                             (global Dune__exe__Lr1!))
                                                           node/2485)
                                                         0)))
                                                   (if
                                                     (>
                                                       (field_int 0
                                                         (field_imm 72
                                                           (global Dune__exe__Lr1!)))
                                                       0)
                                                     (seq
                                                       (apply
                                                         (field_imm 3
                                                           (global Dune__exe__Error!))
                                                         1
                                                         (function f/2486
                                                           : int
                                                           (seq
                                                             (apply
                                                               (field_imm 0
                                                                 (global Stdlib__Printf!))
                                                               f/2486
                                                               [0:
                                                                [11:
                                                                 "Extra reductions on error were added in "
                                                                 [4:
                                                                  0 0 0
                                                                  [11:
                                                                   " states.\n"
                                                                   0]]]
                                                                "Extra reductions on error were added in %d states.\n"]
                                                               (field_int 0
                                                                 (field_imm 72
                                                                   (global Dune__exe__Lr1!))))
                                                             (apply
                                                               (field_imm 0
                                                                 (global Stdlib__Printf!))
                                                               f/2486
                                                               [0:
                                                                [11:
                                                                 "Priority played a role in "
                                                                 [4:
                                                                  0 0 0
                                                                  [11:
                                                                   " of these states.\n"
                                                                   0]]]
                                                                "Priority played a role in %d of these states.\n"]
                                                               (apply
                                                                 (field_imm 0
                                                                   (global Stdlib__List!))
                                                                 (field_mut 0
                                                                   (field_imm 73
                                                                    (global Dune__exe__Lr1!))))))))
                                                       (apply
                                                         (field_imm 3
                                                           (global Dune__exe__Error!))
                                                         2
                                                         (function f/2487
                                                           : int
                                                           (if
                                                             (!=
                                                               (field_mut 0
                                                                 (field_imm 73
                                                                   (global Dune__exe__Lr1!)))
                                                               0)
                                                             (apply
                                                               (field_imm 0
                                                                 (global Stdlib__Printf!))
                                                               f/2487
                                                               [0:
                                                                [11:
                                                                 "These states are "
                                                                 [2:
                                                                  0
                                                                  [11:
                                                                   ".\n" 0]]]
                                                                "These states are %s.\n"]
                                                               (apply
                                                                 (field_imm 44
                                                                   (field_imm 1
                                                                    (global Dune__exe__Lr1!)))
                                                                 (apply
                                                                   (field_imm 37
                                                                    (field_imm 1
                                                                    (global Dune__exe__Lr1!)))
                                                                   (field_mut 0
                                                                    (field_imm 73
                                                                    (global Dune__exe__Lr1!))))))
                                                             0))))
                                                     0)
                                                   (apply
                                                     (field_imm 1
                                                       (field_imm 13
                                                         (global Dune__exe__Grammar!)))
                                                     (function nt/2488 : int
                                                       (if
                                                         (not
                                                           (apply
                                                             (field_imm 6
                                                               (field_imm 26
                                                                 (field_imm 1
                                                                   (global Dune__exe__Grammar!))))
                                                             nt/2488
                                                             (field_mut 0
                                                               (field_imm 74
                                                                 (global Dune__exe__Lr1!)))))
                                                         (apply
                                                           (field_imm 13
                                                             (global Dune__exe__Error!))
                                                           0
                                                           [0:
                                                            [11:
                                                             "the declaration "
                                                             [12:
                                                              '%'
                                                              [11:
                                                               "on_error_reduce "
                                                               [2:
                                                                0
                                                                [11:
                                                                 " is never useful."
                                                                 0]]]]]
                                                            "the declaration %%on_error_reduce %s is never useful."]
                                                           (apply
                                                             (field_imm 5
                                                               (field_imm 0
                                                                 (global Dune__exe__Grammar!)))
                                                             0 nt/2488))
                                                         0))))))
                                            (setfield_ptr(root-init) 38
                                              (global Dune__exe__Lr1!)
                                              extra_reductions/2483))
                                          (let
                                            (fold_entry/2490 =
                                               (function f/2492 accu/2493
                                                 (apply
                                                   (field_imm 19
                                                     (field_imm 9
                                                       (global Dune__exe__Grammar!)))
                                                   (function prod/2494
                                                     state/2495[int]
                                                     accu/2496
                                                     (let
                                                       (nt/2497 =
                                                          (let
                                                            (*match*/7880 =
                                                               (apply
                                                                 (field_imm 25
                                                                   (field_imm 8
                                                                    (global Dune__exe__Grammar!)))
                                                                 prod/2494))
                                                            (if
                                                              (isint
                                                                *match*/7880)
                                                              (raise
                                                                (makeblock 0
                                                                  (global Assert_failure/28!)
                                                                  [0:
                                                                   "src/lr1.ml"
                                                                   1072 10]))
                                                              (let
                                                                (nt/2498 =a
                                                                   (field_imm 0
                                                                    *match*/7880))
                                                                nt/2498)))
                                                        t/2501 =
                                                          (apply
                                                            (field_imm 7
                                                              (field_imm 0
                                                                (global Dune__exe__Grammar!)))
                                                            nt/2497))
                                                       (apply f/2492
                                                         prod/2494 state/2495
                                                         nt/2497 t/2501
                                                         accu/2496)))
                                                   (field_imm 4
                                                     (global Dune__exe__Lr1!))
                                                   accu/2493)))
                                            (setfield_ptr(root-init) 5
                                              (global Dune__exe__Lr1!)
                                              fold_entry/2490))
                                          (let
                                            (entry_of_nt/2504 =
                                               (function nt/2506 : int
                                                 (try
                                                   (apply
                                                     (field_imm 2
                                                       (field_imm 9
                                                         (global Dune__exe__Grammar!)))
                                                     (apply
                                                       (field_imm 21
                                                         (field_imm 8
                                                           (global Dune__exe__Grammar!)))
                                                       nt/2506)
                                                     (field_imm 4
                                                       (global Dune__exe__Lr1!)))
                                                  with exn/7882
                                                   (catch
                                                     (if
                                                       (== exn/7882
                                                         (field_imm 7
                                                           (global Stdlib!)))
                                                       (raise
                                                         (makeblock 0
                                                           (global Assert_failure/28!)
                                                           [0:
                                                            "src/lr1.ml" 1085
                                                            4]))
                                                       (exit 119))
                                                    with (119)
                                                     (reraise exn/7882)))))
                                            (setfield_ptr(root-init) 6
                                              (global Dune__exe__Lr1!)
                                              entry_of_nt/2504))
                                          (let
                                            (Found/2507 =
                                               (makeblock 248
                                                 "Dune__exe__Lr1.Found"
                                                 (caml_fresh_oo_id 0)))
                                            (setfield_ptr(root-init) 76
                                              (global Dune__exe__Lr1!)
                                              Found/2507))
                                          (let
                                            (nt_of_entry/2508 =
                                               (function s/2510[int]
                                                 (seq
                                                   (if
                                                     (==
                                                       (apply
                                                         (field_imm 13
                                                           (global Dune__exe__Lr1!))
                                                         s/2510)
                                                       0)
                                                     0
                                                     (raise
                                                       (makeblock 0
                                                         (global Assert_failure/28!)
                                                         [0:
                                                          "src/lr1.ml" 1091 2])))
                                                   (try
                                                     (seq
                                                       (apply
                                                         (field_imm 18
                                                           (field_imm 9
                                                             (global Dune__exe__Grammar!)))
                                                         (function prod/2511
                                                           entry/2512[int]
                                                           : int
                                                           (if
                                                             (==
                                                               (apply
                                                                 (field_imm 0
                                                                   (field_imm 0
                                                                    (global Dune__exe__Lr1!)))
                                                                 s/2510
                                                                 entry/2512)
                                                               0)
                                                             (let
                                                               (*match*/7885 =
                                                                  (apply
                                                                    (field_imm 25
                                                                    (field_imm 8
                                                                    (global Dune__exe__Grammar!)))
                                                                    prod/2511))
                                                               (if
                                                                 (isint
                                                                   *match*/7885)
                                                                 (raise
                                                                   (makeblock 0
                                                                    (global Assert_failure/28!)
                                                                    [0:
                                                                    "src/lr1.ml"
                                                                    1097 12]))
                                                                 (let
                                                                   (nt/2513 =a
                                                                    (field_imm 0
                                                                    *match*/7885))
                                                                   (raise
                                                                    (makeblock 0
                                                                    (field_imm 76
                                                                    (global Dune__exe__Lr1!))
                                                                    nt/2513)))))
                                                             0))
                                                         (field_imm 4
                                                           (global Dune__exe__Lr1!)))
                                                       (raise
                                                         (makeblock 0
                                                           (global Assert_failure/28!)
                                                           [0:
                                                            "src/lr1.ml" 1102
                                                            4])))
                                                    with exn/7883
                                                     (catch
                                                       (let
                                                         (tag/7884 =a
                                                            (field_imm 0
                                                              exn/7883))
                                                         (if
                                                           (== tag/7884
                                                             (field_imm 76
                                                               (global Dune__exe__Lr1!)))
                                                           (let
                                                             (nt/2514 =a
                                                                (field_imm 1
                                                                  exn/7883))
                                                             nt/2514)
                                                           (exit 120)))
                                                      with (120)
                                                       (reraise exn/7883))))))
                                            (setfield_ptr(root-init) 7
                                              (global Dune__exe__Lr1!)
                                              nt_of_entry/2508))
                                          0)))))))))))))))))))))
(seq
  (let (*match*/7775 = (apply (field_imm 0 (global Dune__exe__Slr!)) 0)) 0)
  (catch
    (let (*match*/7780 = (field_imm 2 (global Dune__exe__Settings!)))
      (switch* *match*/7780
       case int 0:
        (let
          (mode/7782 = "canonical"
           algo/7781 =
             (let (let/7776 = (global Dune__exe__LR1Canonical!))
               (global Dune__exe__LR1Canonical!)))
          (exit 4 algo/7781 mode/7782))
       case int 1:
        (let
          (mode/7784 = "no-pager"
           algo/7783 =
             (let (let/7777 = (global Dune__exe__LR1Pager!))
               (global Dune__exe__LR1Pager!)))
          (exit 4 algo/7783 mode/7784))
       case int 2:
        (let
          (mode/7786 = "pager"
           algo/7785 =
             (let (let/7778 = (global Dune__exe__LR1Pager!))
               (global Dune__exe__LR1Pager!)))
          (exit 4 algo/7785 mode/7786))
       case int 3:
        (let
          (mode/7788 = "lalr"
           algo/7787 =
             (let (let/7779 = (global Dune__exe__LALR!))
               (global Dune__exe__LALR!)))
          (exit 4 algo/7787 mode/7788))))
   with (4 algo/417 mode/418)
    (seq (setfield_ptr(root-init) 40 (global Dune__exe__Lr1!) algo/417)
      (setfield_ptr(root-init) 41 (global Dune__exe__Lr1!) mode/418)))
  (let (Algorithm/580 = (field_imm 40 (global Dune__exe__Lr1!)))
    (seq (setfield_ptr(root-init) 42 (global Dune__exe__Lr1!) Algorithm/580)
      (let
        (*match*/7790 =
           (apply (field_imm 3 (global Dune__exe__Error!)) 1
             (function f/596 : int
               (apply (field_imm 0 (global Stdlib__Printf!)) f/596
                 [0:
                  [11: "The construction mode is " [2: 0 [11: ".\n" 0]]]
                  "The construction mode is %s.\n"]
                 (field_imm 41 (global Dune__exe__Lr1!))))))
        0)
      (let
        (Raw/633 =
           (apply (field_imm 0 (field_imm 42 (global Dune__exe__Lr1!))) 0))
        (seq (setfield_ptr(root-init) 43 (global Dune__exe__Lr1!) Raw/633)
          (let
            (*match*/7792 =
               (apply (field_imm 3 (global Dune__exe__Error!)) 1
                 (function f/634 : int
                   (apply (field_imm 0 (global Stdlib__Printf!)) f/634
                     [0:
                      [11:
                       "Built an LR(1) automaton with "
                       [4: 0 0 0 [11: " states.\n" 0]]]
                      "Built an LR(1) automaton with %d states.\n"]
                     (field_imm 0 (field_imm 43 (global Dune__exe__Lr1!)))))))
            0)
          (let
            (marked/643 =
               (caml_make_vect
                 (field_imm 0 (field_imm 43 (global Dune__exe__Lr1!))) 0))
            (setfield_ptr(root-init) 77 (global Dune__exe__Lr1!) marked/643))
          (let
            (mark/692 =
               (function node/694 : int
                 (array.set[int] (field_imm 77 (global Dune__exe__Lr1!))
                   (apply
                     (field_imm 1 (field_imm 43 (global Dune__exe__Lr1!)))
                     node/694)
                   1)))
            (setfield_ptr(root-init) 78 (global Dune__exe__Lr1!) mark/692))
          (let
            (is_marked/695 =
               (function node/697 : int
                 (array.get[int] (field_imm 77 (global Dune__exe__Lr1!))
                   (apply
                     (field_imm 1 (field_imm 43 (global Dune__exe__Lr1!)))
                     node/697))))
            (setfield_ptr(root-init) 79 (global Dune__exe__Lr1!)
              is_marked/695))
          0
          (let
            (M/698 =
               (makeblock 0 (field_imm 77 (global Dune__exe__Lr1!))
                 (field_imm 78 (global Dune__exe__Lr1!))
                 (field_imm 79 (global Dune__exe__Lr1!))))
            (seq (setfield_ptr(root-init) 44 (global Dune__exe__Lr1!) M/698)
              (let (unreachable/699 =[int] -1)
                (setfield_ptr(root-init) 45 (global Dune__exe__Lr1!)
                  unreachable/699))
              (let
                (_number/700 =
                   (caml_make_vect
                     (field_imm 0 (field_imm 43 (global Dune__exe__Lr1!)))
                     (field_imm 45 (global Dune__exe__Lr1!))))
                (setfield_ptr(root-init) 46 (global Dune__exe__Lr1!)
                  _number/700))
              (let
                (transport/701 =
                   (function raw_node/703 : int
                     (array.get[int] (field_imm 46 (global Dune__exe__Lr1!))
                       (apply
                         (field_imm 1
                           (field_imm 43 (global Dune__exe__Lr1!)))
                         raw_node/703))))
                (setfield_ptr(root-init) 47 (global Dune__exe__Lr1!)
                  transport/701))
              (let
                (transitions/769 =
                   (apply (field_imm 0 (global Stdlib__Array!))
                     (field_imm 0 (field_imm 43 (global Dune__exe__Lr1!)))
                     (function i/770[int]
                       (apply
                         (field_imm 4
                           (field_imm 43 (global Dune__exe__Lr1!)))
                         (apply
                           (field_imm 2
                             (field_imm 43 (global Dune__exe__Lr1!)))
                           i/770)))))
                (setfield_ptr(root-init) 48 (global Dune__exe__Lr1!)
                  transitions/769))
              (let
                (predecessors/819 =
                   (caml_make_vect
                     (field_imm 0 (field_imm 43 (global Dune__exe__Lr1!))) 0))
                (setfield_ptr(root-init) 49 (global Dune__exe__Lr1!)
                  predecessors/819))
              (let
                (reductions/858 =
                   (caml_make_vect
                     (field_imm 0 (field_imm 43 (global Dune__exe__Lr1!)))
                     (field_imm 0 (field_imm 4 (global Dune__exe__Grammar!)))))
                (setfield_ptr(root-init) 50 (global Dune__exe__Lr1!)
                  reductions/858))
              (let
                (_conflict_tokens/947 =
                   (caml_make_vect
                     (field_imm 0 (field_imm 43 (global Dune__exe__Lr1!)))
                     (field_imm 0 (field_imm 3 (global Dune__exe__Grammar!)))))
                (setfield_ptr(root-init) 51 (global Dune__exe__Lr1!)
                  _conflict_tokens/947))
              (let
                (_has_eos_conflict/982 =
                   (caml_make_vect
                     (field_imm 0 (field_imm 43 (global Dune__exe__Lr1!))) 0))
                (setfield_ptr(root-init) 52 (global Dune__exe__Lr1!)
                  _has_eos_conflict/982))
              (let
                (forbid_default_reduction/983 =
                   (caml_make_vect
                     (field_imm 0 (field_imm 43 (global Dune__exe__Lr1!))) 0))
                (setfield_ptr(root-init) 53 (global Dune__exe__Lr1!)
                  forbid_default_reduction/983))
              (let (n/984 = (makemutable 0 (int) 0))
                (setfield_ptr(root-init) 54 (global Dune__exe__Lr1!) n/984))
              (let (conflict_nodes/985 = (makemutable 0 0))
                (setfield_ptr(root-init) 55 (global Dune__exe__Lr1!)
                  conflict_nodes/985))
              (let (shift_reduce/986 = (makemutable 0 (int) 0))
                (setfield_ptr(root-init) 56 (global Dune__exe__Lr1!)
                  shift_reduce/986))
              (let (reduce_reduce/987 = (makemutable 0 (int) 0))
                (setfield_ptr(root-init) 57 (global Dune__exe__Lr1!)
                  reduce_reduce/987))
              (let (silently_solved/988 = (makemutable 0 (int) 0))
                (setfield_ptr(root-init) 58 (global Dune__exe__Lr1!)
                  silently_solved/988))
              (let
                (foreach_outgoing_edge/1013 =
                   (function node/1015 f/1016 : int
                     (let
                       (i/1017 =[int]
                          (apply
                            (field_imm 1
                              (field_imm 43 (global Dune__exe__Lr1!)))
                            node/1015))
                       (apply
                         (field_imm 22
                           (field_imm 7 (global Dune__exe__Grammar!)))
                         f/1016
                         (array.get[gen]
                           (field_imm 48 (global Dune__exe__Lr1!)) i/1017)))))
                (setfield_ptr(root-init) 80 (global Dune__exe__Lr1!)
                  foreach_outgoing_edge/1013))
              (let
                (foreach_root/1018 =
                   (function f/1020 : int
                     (apply
                       (field_imm 18
                         (field_imm 9 (global Dune__exe__Grammar!)))
                       (function _prod/1055 node/1056 : int
                         (apply f/1020 node/1056))
                       (field_imm 3 (field_imm 43 (global Dune__exe__Lr1!))))))
                (setfield_ptr(root-init) 81 (global Dune__exe__Lr1!)
                  foreach_root/1018))
              0
              (let
                (RawForwardEdges/1091 =
                   (makeblock 0 (field_imm 80 (global Dune__exe__Lr1!))
                     (field_imm 81 (global Dune__exe__Lr1!))))
                (seq
                  (setfield_ptr(root-init) 59 (global Dune__exe__Lr1!)
                    RawForwardEdges/1091)
                  (let
                    (discover/1092 =
                       (function raw_node/1094 : int
                         (let
                           (i/1095 =[int]
                              (apply
                                (field_imm 1
                                  (field_imm 43 (global Dune__exe__Lr1!)))
                                raw_node/1094)
                            state/1096 =
                              (apply
                                (field_imm 5
                                  (field_imm 43 (global Dune__exe__Lr1!)))
                                raw_node/1094)
                            node/1135 =
                              (apply (field_imm 22 (global Dune__exe__Misc!))
                                (field_imm 54 (global Dune__exe__Lr1!))))
                           (seq
                             (array.set[int]
                               (field_imm 46 (global Dune__exe__Lr1!)) i/1095
                               node/1135)
                             (let
                               (has_shift_reduce/1172 =
                                  (makemutable 0 (int) 0)
                                has_reduce_reduce/1173 =
                                  (makemutable 0 (int) 0))
                               (seq
                                 (array.set[gen]
                                   (field_imm 50 (global Dune__exe__Lr1!))
                                   i/1095
                                   (let
                                     (f/7886 =
                                        (function tok/1177 prods/1178
                                          reductions/1179
                                          (seq
                                            (if (!= prods/1178 0) 0
                                              (raise
                                                (makeblock 0
                                                  (global Assert_failure/28!)
                                                  [0: "src/lr1.ml" 221 4])))
                                            (if
                                              (apply
                                                (field_imm 31
                                                  (field_imm 7
                                                    (global Dune__exe__Grammar!)))
                                                (makeblock 1 tok/1177)
                                                (array.get[gen]
                                                  (field_imm 48
                                                    (global Dune__exe__Lr1!))
                                                  i/1095))
                                              (seq
                                                (if
                                                  (not
                                                    (apply
                                                      (field_imm 1
                                                        (field_imm 2
                                                          (global Dune__exe__Grammar!)))
                                                      tok/1177
                                                      (field_imm 9
                                                        (field_imm 2
                                                          (global Dune__exe__Grammar!)))))
                                                  0
                                                  (raise
                                                    (makeblock 0
                                                      (global Assert_failure/28!)
                                                      [0: "src/lr1.ml" 227 6])))
                                                (if
                                                  (==
                                                    (apply
                                                      (field_imm 0
                                                        (global Stdlib__List!))
                                                      prods/1178)
                                                    1)
                                                  (let
                                                    (prod/1305 =
                                                       (apply
                                                         (field_imm 5
                                                           (global Stdlib__List!))
                                                         prods/1178)
                                                     *match*/7808 =
                                                       (apply
                                                         (field_imm 0
                                                           (field_imm 12
                                                             (global Dune__exe__Grammar!)))
                                                         tok/1177 prod/1305))
                                                    (switch* *match*/7808
                                                     case int 0:
                                                      (seq
                                                        (+:=1
                                                          (field_imm 58
                                                            (global Dune__exe__Lr1!)))
                                                        reductions/1179)
                                                     case int 1:
                                                      (seq
                                                        (+:=1
                                                          (field_imm 58
                                                            (global Dune__exe__Lr1!)))
                                                        (array.set[gen]
                                                          (field_imm 48
                                                            (global Dune__exe__Lr1!))
                                                          i/1095
                                                          (apply
                                                            (field_imm 5
                                                              (field_imm 7
                                                                (global Dune__exe__Grammar!)))
                                                            (makeblock 1
                                                              tok/1177)
                                                            (array.get[gen]
                                                              (field_imm 48
                                                                (global Dune__exe__Lr1!))
                                                              i/1095)))
                                                        (apply
                                                          (field_imm 3
                                                            (field_imm 4
                                                              (global Dune__exe__Grammar!)))
                                                          tok/1177 prods/1178
                                                          reductions/1179))
                                                     case int 2:
                                                      (seq
                                                        (+:=1
                                                          (field_imm 58
                                                            (global Dune__exe__Lr1!)))
                                                        (array.set[gen]
                                                          (field_imm 48
                                                            (global Dune__exe__Lr1!))
                                                          i/1095
                                                          (apply
                                                            (field_imm 5
                                                              (field_imm 7
                                                                (global Dune__exe__Grammar!)))
                                                            (makeblock 1
                                                              tok/1177)
                                                            (array.get[gen]
                                                              (field_imm 48
                                                                (global Dune__exe__Lr1!))
                                                              i/1095)))
                                                        (array.set[int]
                                                          (field_imm 53
                                                            (global Dune__exe__Lr1!))
                                                          i/1095 1)
                                                        reductions/1179)
                                                     case int 3:
                                                      (seq
                                                        (array.set[gen]
                                                          (field_imm 51
                                                            (global Dune__exe__Lr1!))
                                                          i/1095
                                                          (apply
                                                            (field_imm 7
                                                              (field_imm 3
                                                                (global Dune__exe__Grammar!)))
                                                            tok/1177
                                                            (array.get[gen]
                                                              (field_imm 51
                                                                (global Dune__exe__Lr1!))
                                                              i/1095)))
                                                        (setfield_imm 0
                                                          has_shift_reduce/1172
                                                          1)
                                                        (apply
                                                          (field_imm 3
                                                            (field_imm 4
                                                              (global Dune__exe__Grammar!)))
                                                          tok/1177 prods/1178
                                                          reductions/1179))))
                                                  (let
                                                    (choices/1368 =
                                                       (apply
                                                         (field_imm 19
                                                           (global Stdlib__List!))
                                                         (apply
                                                           (field_imm 0
                                                             (field_imm 12
                                                               (global Dune__exe__Grammar!)))
                                                           tok/1177)
                                                         prods/1178))
                                                    (if
                                                      (apply
                                                        (field_imm 32
                                                          (global Stdlib__List!))
                                                        (function
                                                          choice/1369[int]
                                                          : int
                                                          (if
                                                            (!= choice/1369
                                                              0)
                                                            0 1))
                                                        choices/1368)
                                                      (seq
                                                        (setfield_imm 0
                                                          (field_imm 58
                                                            (global Dune__exe__Lr1!))
                                                          (+
                                                            (field_int 0
                                                              (field_imm 58
                                                                (global Dune__exe__Lr1!)))
                                                            (apply
                                                              (field_imm 0
                                                                (global Stdlib__List!))
                                                              prods/1178)))
                                                        reductions/1179)
                                                      (if
                                                        (apply
                                                          (field_imm 32
                                                            (global Stdlib__List!))
                                                          (apply
                                                            (function
                                                              prim/7807
                                                              prim/7806 stub
                                                              (== prim/7807
                                                                prim/7806))
                                                            2)
                                                          choices/1368)
                                                        (seq
                                                          (setfield_imm 0
                                                            (field_imm 58
                                                              (global Dune__exe__Lr1!))
                                                            (+
                                                              (field_int 0
                                                                (field_imm 58
                                                                  (global Dune__exe__Lr1!)))
                                                              (apply
                                                                (field_imm 0
                                                                  (global Stdlib__List!))
                                                                prods/1178)))
                                                          (array.set[gen]
                                                            (field_imm 48
                                                              (global Dune__exe__Lr1!))
                                                            i/1095
                                                            (apply
                                                              (field_imm 5
                                                                (field_imm 7
                                                                  (global Dune__exe__Grammar!)))
                                                              (makeblock 1
                                                                tok/1177)
                                                              (array.get[gen]
                                                                (field_imm 48
                                                                  (global Dune__exe__Lr1!))
                                                                i/1095)))
                                                          reductions/1179)
                                                        (seq
                                                          (array.set[gen]
                                                            (field_imm 51
                                                              (global Dune__exe__Lr1!))
                                                            i/1095
                                                            (apply
                                                              (field_imm 7
                                                                (field_imm 3
                                                                  (global Dune__exe__Grammar!)))
                                                              tok/1177
                                                              (array.get[gen]
                                                                (field_imm 51
                                                                  (global Dune__exe__Lr1!))
                                                                i/1095)))
                                                          (setfield_imm 0
                                                            has_shift_reduce/1172
                                                            1)
                                                          (setfield_imm 0
                                                            has_reduce_reduce/1173
                                                            1)
                                                          (apply
                                                            (field_imm 3
                                                              (field_imm 4
                                                                (global Dune__exe__Grammar!)))
                                                            tok/1177
                                                            prods/1178
                                                            reductions/1179)))))))
                                              (seq
                                                (if
                                                  (>=
                                                    (apply
                                                      (field_imm 0
                                                        (global Stdlib__List!))
                                                      prods/1178)
                                                    2)
                                                  (seq
                                                    (array.set[gen]
                                                      (field_imm 51
                                                        (global Dune__exe__Lr1!))
                                                      i/1095
                                                      (apply
                                                        (field_imm 7
                                                          (field_imm 3
                                                            (global Dune__exe__Grammar!)))
                                                        tok/1177
                                                        (array.get[gen]
                                                          (field_imm 51
                                                            (global Dune__exe__Lr1!))
                                                          i/1095)))
                                                    (setfield_imm 0
                                                      has_reduce_reduce/1173
                                                      1))
                                                  0)
                                                (apply
                                                  (field_imm 3
                                                    (field_imm 4
                                                      (global Dune__exe__Grammar!)))
                                                  tok/1177 prods/1178
                                                  reductions/1179))))))
                                     (apply
                                       (field_imm 19
                                         (field_imm 4
                                           (global Dune__exe__Grammar!)))
                                       f/7886
                                       (apply
                                         (field_imm 29
                                           (global Dune__exe__Lr0!))
                                         state/1096)
                                       (field_imm 0
                                         (field_imm 4
                                           (global Dune__exe__Grammar!))))))
                                 (let
                                   (transitions/1370 =
                                      (array.get[gen]
                                        (field_imm 48
                                          (global Dune__exe__Lr1!))
                                        i/1095)
                                    reductions/1371 =
                                      (array.get[gen]
                                        (field_imm 50
                                          (global Dune__exe__Lr1!))
                                        i/1095))
                                   (seq
                                     (if
                                       (apply
                                         (field_imm 32
                                           (global Dune__exe__Lr0!))
                                         transitions/1370 reductions/1371)
                                       (let
                                         (*match*/7805 =
                                            (apply
                                              (field_imm 13
                                                (field_imm 4
                                                  (global Dune__exe__Grammar!)))
                                              (field_imm 9
                                                (field_imm 2
                                                  (global Dune__exe__Grammar!)))
                                              reductions/1371)
                                          toks/1374 =
                                            (apply
                                              (field_imm 9
                                                (field_imm 3
                                                  (global Dune__exe__Grammar!)))
                                              (apply
                                                (field_imm 15
                                                  (global Dune__exe__Lr0!))
                                                transitions/1370)
                                              (apply
                                                (field_imm 31
                                                  (global Dune__exe__Lr0!))
                                                (field_imm 1 *match*/7805))))
                                         (array.set[addr]
                                           (field_imm 52
                                             (global Dune__exe__Lr1!))
                                           i/1095
                                           (makeblock 0
                                             (makeblock 0
                                               (field_imm 0 *match*/7805)
                                               toks/1374))))
                                       0)
                                     (if
                                       (not
                                         (apply
                                           (field_imm 1
                                             (field_imm 3
                                               (global Dune__exe__Grammar!)))
                                           (array.get[gen]
                                             (field_imm 51
                                               (global Dune__exe__Lr1!))
                                             i/1095)))
                                       (seq
                                         (setfield_ptr 0
                                           (field_imm 55
                                             (global Dune__exe__Lr1!))
                                           (makeblock 0 (int,*) node/1135
                                             (field_mut 0
                                               (field_imm 55
                                                 (global Dune__exe__Lr1!)))))
                                         (if
                                           (field_int 0
                                             has_shift_reduce/1172)
                                           (+:=1
                                             (field_imm 56
                                               (global Dune__exe__Lr1!)))
                                           0)
                                         (if
                                           (field_int 0
                                             has_reduce_reduce/1173)
                                           (+:=1
                                             (field_imm 57
                                               (global Dune__exe__Lr1!)))
                                           0))
                                       0)))))))))
                    (setfield_ptr(root-init) 60 (global Dune__exe__Lr1!)
                      discover/1092))
                  (let
                    (traverse/1375 =
                       (function source/1377 _symbol/1378 target/1379 : int
                         (let
                           (j/1380 =[int]
                              (apply
                                (field_imm 1
                                  (field_imm 43 (global Dune__exe__Lr1!)))
                                target/1379))
                           (array.set[addr]
                             (field_imm 49 (global Dune__exe__Lr1!)) j/1380
                             (makeblock 0 (int,*)
                               (apply (field_imm 47 (global Dune__exe__Lr1!))
                                 source/1377)
                               (array.get[addr]
                                 (field_imm 49 (global Dune__exe__Lr1!))
                                 j/1380))))))
                    (setfield_ptr(root-init) 61 (global Dune__exe__Lr1!)
                      traverse/1375))
                  (let
                    (*match*/7812 =
                       (let
                         (D/1383 =
                            (let
                              (traverse/1381 =
                                 (field_imm 61 (global Dune__exe__Lr1!))
                               discover/1382 =
                                 (field_imm 60 (global Dune__exe__Lr1!)))
                              (makeblock 0 traverse/1381 discover/1382))
                          R/1422 =
                            (apply
                              (apply
                                (apply
                                  (let
                                    (let/7810 =
                                       (field_imm 0 (global Dune__exe__DFS!)))
                                    (field_imm 0 (global Dune__exe__DFS!)))
                                  (field_imm 59 (global Dune__exe__Lr1!)))
                                (makeblock 0
                                  (field_mut 1
                                    (field_imm 44 (global Dune__exe__Lr1!)))
                                  (field_mut 2
                                    (field_imm 44 (global Dune__exe__Lr1!)))))
                              (makeblock 0 (field_mut 1 D/1383)
                                (field_mut 0 D/1383))))
                         0))
                    0)
                  (let
                    (*match*/7815 =
                       (seq
                         (if
                           (==
                             (field_int 0
                               (field_imm 58 (global Dune__exe__Lr1!)))
                             1)
                           (apply (field_imm 3 (global Dune__exe__Error!)) 1
                             (function f/1423 : int
                               (apply (field_imm 0 (global Stdlib__Printf!))
                                 f/1423
                                 [0:
                                  [11:
                                   "One shift/reduce conflict was silently solved.\n"
                                   0]
                                  "One shift/reduce conflict was silently solved.\n"])))
                           (if
                             (>
                               (field_int 0
                                 (field_imm 58 (global Dune__exe__Lr1!)))
                               1)
                             (apply (field_imm 3 (global Dune__exe__Error!))
                               1
                               (function f/1424 : int
                                 (apply
                                   (field_imm 0 (global Stdlib__Printf!))
                                   f/1424
                                   [0:
                                    [4:
                                     0 0 0
                                     [11:
                                      " shift/reduce conflicts were silently solved.\n"
                                      0]]
                                    "%d shift/reduce conflicts were silently solved.\n"]
                                   (field_int 0
                                     (field_imm 58 (global Dune__exe__Lr1!))))))
                             0))
                         (if
                           (<
                             (field_int 0
                               (field_imm 54 (global Dune__exe__Lr1!)))
                             (field_imm 0
                               (field_imm 43 (global Dune__exe__Lr1!))))
                           (apply (field_imm 3 (global Dune__exe__Error!)) 1
                             (function f/1425 : int
                               (apply (field_imm 0 (global Stdlib__Printf!))
                                 f/1425
                                 [0:
                                  [11:
                                   "Only "
                                   [4:
                                    0 0 0
                                    [11:
                                     " states remain after resolving shift/reduce conflicts.\n"
                                     0]]]
                                  "Only %d states remain after resolving shift/reduce conflicts.\n"]
                                 (field_int 0
                                   (field_imm 54 (global Dune__exe__Lr1!))))))
                           0)))
                    0)
                  (let
                    (*match*/7817 =
                       (apply (field_imm 15 (global Dune__exe__Grammar!)) 0))
                    0)
                  (let
                    (n/1426 =[int]
                       (field_int 0 (field_imm 54 (global Dune__exe__Lr1!))))
                    (setfield_ptr(root-init) 8 (global Dune__exe__Lr1!)
                      n/1426))
                  (let
                    (conflict_nodes/1427 =
                       (field_mut 0 (field_imm 55 (global Dune__exe__Lr1!))))
                    (setfield_ptr(root-init) 62 (global Dune__exe__Lr1!)
                      conflict_nodes/1427))
                  (let
                    (raw/1428 =
                       (let
                         (raw/1429 =
                            (caml_make_vect
                              (field_imm 8 (global Dune__exe__Lr1!)) -1))
                         (seq
                           (apply (field_imm 11 (global Stdlib__Array!))
                             (function i/1430[int] node/1431[int] : int
                               (seq
                                 (if
                                   (&& (<= 0 i/1430)
                                     (< i/1430
                                       (field_imm 0
                                         (field_imm 43
                                           (global Dune__exe__Lr1!)))))
                                   0
                                   (raise
                                     (makeblock 0 (global Assert_failure/28!)
                                       [0: "src/lr1.ml" 434 4])))
                                 (if
                                   (!= node/1431
                                     (field_imm 45 (global Dune__exe__Lr1!)))
                                   (seq
                                     (if
                                       (&& (<= 0 node/1431)
                                         (< node/1431
                                           (field_imm 8
                                             (global Dune__exe__Lr1!))))
                                       0
                                       (raise
                                         (makeblock 0
                                           (global Assert_failure/28!)
                                           [0: "src/lr1.ml" 436 6])))
                                     (array.set[int] raw/1429 node/1431
                                       i/1430))
                                   0)))
                             (field_imm 46 (global Dune__exe__Lr1!)))
                           (function node/1432[int] : int
                             (seq
                               (if
                                 (&& (<= 0 node/1432)
                                   (< node/1432
                                     (field_imm 8 (global Dune__exe__Lr1!))))
                                 0
                                 (raise
                                   (makeblock 0 (global Assert_failure/28!)
                                     [0: "src/lr1.ml" 441 4])))
                               (array.get[int] raw/1429 node/1432))))))
                    (setfield_ptr(root-init) 63 (global Dune__exe__Lr1!)
                      raw/1428))
                  (let
                    (transitions/1433 =
                       (apply (field_imm 0 (global Stdlib__Array!))
                         (field_imm 8 (global Dune__exe__Lr1!))
                         (function node/1434[int]
                           (apply
                             (field_imm 24
                               (field_imm 7 (global Dune__exe__Grammar!)))
                             (field_imm 47 (global Dune__exe__Lr1!))
                             (array.get[gen]
                               (field_imm 48 (global Dune__exe__Lr1!))
                               (apply (field_imm 63 (global Dune__exe__Lr1!))
                                 node/1434))))))
                    (setfield_ptr(root-init) 64 (global Dune__exe__Lr1!)
                      transitions/1433))
                  (let
                    (*match*/7821 =
                       (apply (field_imm 0 (global Dune__exe__Time!))
                         "Construction of the LR(1) automaton"))
                    0)
                  (let (number/1440 = (function node/1442 node/1442))
                    (setfield_ptr(root-init) 9 (global Dune__exe__Lr1!)
                      number/1440))
                  (let
                    (print/1443 =
                       (function node/1445[int]
                         (apply (field_imm 3 (global Stdlib__Printf!))
                           [0: [4: 0 0 0 0] "%d"]
                           (apply (field_imm 9 (global Dune__exe__Lr1!))
                             node/1445))))
                    (setfield_ptr(root-init) 10 (global Dune__exe__Lr1!)
                      print/1443))
                  (let
                    (entry/1446 =
                       (apply
                         (field_imm 23
                           (field_imm 9 (global Dune__exe__Grammar!)))
                         (field_imm 47 (global Dune__exe__Lr1!))
                         (field_imm 3
                           (field_imm 43 (global Dune__exe__Lr1!)))))
                    (setfield_ptr(root-init) 4 (global Dune__exe__Lr1!)
                      entry/1446))
                  (let
                    (state/1447 =
                       (function node/1449[int]
                         (apply
                           (field_imm 5
                             (field_imm 43 (global Dune__exe__Lr1!)))
                           (apply
                             (field_imm 2
                               (field_imm 43 (global Dune__exe__Lr1!)))
                             (apply (field_imm 63 (global Dune__exe__Lr1!))
                               node/1449)))))
                    (setfield_ptr(root-init) 11 (global Dune__exe__Lr1!)
                      state/1447))
                  (let
                    (transitions/1450 =
                       (function node/1451[int]
                         (seq
                           (if
                             (&& (<= 0 node/1451)
                               (< node/1451
                                 (field_imm 8 (global Dune__exe__Lr1!))))
                             0
                             (raise
                               (makeblock 0 (global Assert_failure/28!)
                                 [0: "src/lr1.ml" 479 2])))
                           (array.get[gen]
                             (field_imm 64 (global Dune__exe__Lr1!))
                             node/1451))))
                    (setfield_ptr(root-init) 19 (global Dune__exe__Lr1!)
                      transitions/1450))
                  (let
                    (set_reductions/1452 =
                       (function node/1454[int] table/1455 : int
                         (array.set[gen]
                           (field_imm 50 (global Dune__exe__Lr1!))
                           (apply (field_imm 63 (global Dune__exe__Lr1!))
                             node/1454)
                           table/1455)))
                    (setfield_ptr(root-init) 65 (global Dune__exe__Lr1!)
                      set_reductions/1452))
                  (let
                    (reductions/1456 =
                       (function node/1457[int]
                         (array.get[gen]
                           (field_imm 50 (global Dune__exe__Lr1!))
                           (apply (field_imm 63 (global Dune__exe__Lr1!))
                             node/1457))))
                    (setfield_ptr(root-init) 20 (global Dune__exe__Lr1!)
                      reductions/1456))
                  (let
                    (predecessors/1458 =
                       (function node/1459[int]
                         (array.get[addr]
                           (field_imm 49 (global Dune__exe__Lr1!))
                           (apply (field_imm 63 (global Dune__exe__Lr1!))
                             node/1459))))
                    (setfield_ptr(root-init) 16 (global Dune__exe__Lr1!)
                      predecessors/1458))
                  (let
                    (conflict_tokens/1460 =
                       (function node/1462[int]
                         (array.get[gen]
                           (field_imm 51 (global Dune__exe__Lr1!))
                           (apply (field_imm 63 (global Dune__exe__Lr1!))
                             node/1462))))
                    (setfield_ptr(root-init) 35 (global Dune__exe__Lr1!)
                      conflict_tokens/1460))
                  (let
                    (conflicts/1463 =
                       (function f/1465 : int
                         (apply (field_imm 17 (global Stdlib__List!))
                           (function node/1466[int] : int
                             (apply f/1465
                               (apply (field_imm 35 (global Dune__exe__Lr1!))
                                 node/1466)
                               node/1466))
                           (field_imm 62 (global Dune__exe__Lr1!)))))
                    (setfield_ptr(root-init) 34 (global Dune__exe__Lr1!)
                      conflicts/1463))
                  (let
                    (forbid_default_reduction/1467 =
                       (function node/1468[int] : int
                         (array.get[int]
                           (field_imm 53 (global Dune__exe__Lr1!))
                           (apply (field_imm 63 (global Dune__exe__Lr1!))
                             node/1468))))
                    (setfield_ptr(root-init) 21 (global Dune__exe__Lr1!)
                      forbid_default_reduction/1467))
                  (let
                    (has_eos_conflict/1469 =
                       (function node/1471[int]
                         (array.get[addr]
                           (field_imm 52 (global Dune__exe__Lr1!))
                           (apply (field_imm 63 (global Dune__exe__Lr1!))
                             node/1471))))
                    (setfield_ptr(root-init) 36 (global Dune__exe__Lr1!)
                      has_eos_conflict/1469))
                  (let
                    (incoming_symbol/1472 =
                       (function node/1474[int]
                         (apply (field_imm 3 (global Dune__exe__Lr0!))
                           (apply (field_imm 11 (global Dune__exe__Lr0!))
                             (apply (field_imm 11 (global Dune__exe__Lr1!))
                               node/1474)))))
                    (setfield_ptr(root-init) 13 (global Dune__exe__Lr1!)
                      incoming_symbol/1472))
                  (let
                    (is_start/1475 =
                       (function node/1477[int] : int
                         (let
                           (*match*/7822 =
                              (apply (field_imm 13 (global Dune__exe__Lr1!))
                                node/1477))
                           (if (isint *match*/7822) 1 0))))
                    (setfield_ptr(root-init) 14 (global Dune__exe__Lr1!)
                      is_start/1475))
                  (let
                    (foreach_outgoing_edge/1480 =
                       (function node/1482[int] f/1483 : int
                         (apply
                           (field_imm 22
                             (field_imm 7 (global Dune__exe__Grammar!)))
                           f/1483
                           (apply (field_imm 19 (global Dune__exe__Lr1!))
                             node/1482))))
                    (setfield_ptr(root-init) 82 (global Dune__exe__Lr1!)
                      foreach_outgoing_edge/1480))
                  0
                  (let
                    (ForwardEdges/1484 =
                       (makeblock 0 (field_imm 82 (global Dune__exe__Lr1!))))
                    (seq
                      (setfield_ptr(root-init) 17 (global Dune__exe__Lr1!)
                        ForwardEdges/1484)
                      (let
                        (foreach_outgoing_edge/1487 =
                           (function node/1489[int] f/1490 : int
                             (apply (field_imm 17 (global Stdlib__List!))
                               (function node/1491[int] : int
                                 (apply f/1490 0 node/1491))
                               (apply (field_imm 16 (global Dune__exe__Lr1!))
                                 node/1489))))
                        (setfield_ptr(root-init) 83 (global Dune__exe__Lr1!)
                          foreach_outgoing_edge/1487))
                      0
                      (let
                        (BackwardEdges/1492 =
                           (makeblock 0
                             (field_imm 83 (global Dune__exe__Lr1!))))
                        (seq
                          (setfield_ptr(root-init) 18
                            (global Dune__exe__Lr1!) BackwardEdges/1492)
                          (let
                            (is_start_or_exit/1493 =
                               (function node/1495[int]
                                 (let
                                   (items/1496 =
                                      (apply
                                        (field_imm 2
                                          (global Dune__exe__Lr0!))
                                        (apply
                                          (field_imm 11
                                            (global Dune__exe__Lr0!))
                                          (apply
                                            (field_imm 11
                                              (global Dune__exe__Lr1!))
                                            node/1495))))
                                   (if
                                     (==
                                       (apply
                                         (field_imm 4
                                           (field_imm 8
                                             (global Dune__exe__Item!)))
                                         items/1496)
                                       1)
                                     (let
                                       (item/1566 =
                                          (apply
                                            (field_imm 5
                                              (field_imm 8
                                                (global Dune__exe__Item!)))
                                            items/1496)
                                        *match*/7830 =
                                          (apply
                                            (field_imm 4
                                              (global Dune__exe__Item!))
                                            item/1566))
                                       (apply
                                         (field_imm 25
                                           (field_imm 8
                                             (global Dune__exe__Grammar!)))
                                         (field_imm 0 *match*/7830)))
                                     0))))
                            (setfield_ptr(root-init) 15
                              (global Dune__exe__Lr1!) is_start_or_exit/1493))
                          (let
                            (fold/1568 =
                               (function f/1570 accu/1571
                                 (let (accu/1572 =mut accu/1571)
                                   (seq
                                     (for node/1573 0 to
                                       (-
                                         (field_imm 8
                                           (global Dune__exe__Lr1!))
                                         1)
                                       (assign accu/1572
                                         (apply f/1570 *accu/1572 node/1573)))
                                     *accu/1572))))
                            (setfield_ptr(root-init) 24
                              (global Dune__exe__Lr1!) fold/1568))
                          (let
                            (iter/1574 =
                               (function f/1576 : int
                                 (for node/1577 0 to
                                   (- (field_imm 8 (global Dune__exe__Lr1!))
                                     1)
                                   (apply f/1576 node/1577))))
                            (setfield_ptr(root-init) 25
                              (global Dune__exe__Lr1!) iter/1574))
                          (let
                            (map/1578 =
                               (function f/1580
                                 (apply (field_imm 9 (global Stdlib__List!))
                                   (apply
                                     (field_imm 24 (global Dune__exe__Lr1!))
                                     (function accu/1581 node/1582[int]
                                       (makeblock 0 (apply f/1580 node/1582)
                                         accu/1581))
                                     0))))
                            (setfield_ptr(root-init) 26
                              (global Dune__exe__Lr1!) map/1578))
                          (let
                            (foldx/1583 =
                               (function f/1585
                                 (apply
                                   (field_imm 24 (global Dune__exe__Lr1!))
                                   (function accu/1586 node/1587[int]
                                     (let
                                       (*match*/7835 =
                                          (apply
                                            (field_imm 13
                                              (global Dune__exe__Lr1!))
                                            node/1587))
                                       (if (isint *match*/7835) accu/1586
                                         (apply f/1585 accu/1586 node/1587)))))))
                            (setfield_ptr(root-init) 29
                              (global Dune__exe__Lr1!) foldx/1583))
                          (let
                            (iterx/1588 =
                               (function f/1590 : int
                                 (apply
                                   (field_imm 25 (global Dune__exe__Lr1!))
                                   (function node/1591[int] : int
                                     (let
                                       (*match*/7837 =
                                          (apply
                                            (field_imm 13
                                              (global Dune__exe__Lr1!))
                                            node/1591))
                                       (if (isint *match*/7837) 0
                                         (apply f/1590 node/1591)))))))
                            (setfield_ptr(root-init) 30
                              (global Dune__exe__Lr1!) iterx/1588))
                          (let
                            (tabulate/1592 =
                               (function f/1594
                                 (apply
                                   (field_imm 2 (global Dune__exe__Misc!))
                                   (field_imm 8 (global Dune__exe__Lr1!))
                                   f/1594)))
                            (setfield_ptr(root-init) 27
                              (global Dune__exe__Lr1!) tabulate/1592))
                          (let
                            (sum/1595 =
                               (function f/1597 : int
                                 (apply
                                   (field_imm 3 (global Dune__exe__Misc!))
                                   (field_imm 8 (global Dune__exe__Lr1!))
                                   f/1597)))
                            (setfield_ptr(root-init) 28
                              (global Dune__exe__Lr1!) sum/1595))
                          (let
                            (lookup/1598 =
                               (function symbol/1600 index/1601
                                 (try
                                   (apply
                                     (field_imm 16
                                       (field_imm 7
                                         (global Dune__exe__Grammar!)))
                                     symbol/1600 index/1601)
                                  with exn/7839
                                   (if
                                     (== exn/7839
                                       (field_imm 7 (global Stdlib!)))
                                     0 (reraise exn/7839)))))
                            (setfield_ptr(root-init) 66
                              (global Dune__exe__Lr1!) lookup/1598))
                          (let
                            (index/1602 =
                               (apply (field_imm 24 (global Dune__exe__Lr1!))
                                 (function index/1603 node/1604[int]
                                   (let
                                     (*match*/7840 =
                                        (apply
                                          (field_imm 13
                                            (global Dune__exe__Lr1!))
                                          node/1604))
                                     (if (isint *match*/7840) index/1603
                                       (let
                                         (symbol/1605 =a
                                            (field_imm 0 *match*/7840))
                                         (apply
                                           (field_imm 1
                                             (field_imm 7
                                               (global Dune__exe__Grammar!)))
                                           symbol/1605
                                           (makeblock 0 (int,*) node/1604
                                             (apply
                                               (field_imm 66
                                                 (global Dune__exe__Lr1!))
                                               symbol/1605 index/1603))
                                           index/1603)))))
                                 (field_imm 0
                                   (field_imm 7 (global Dune__exe__Grammar!)))))
                            (setfield_ptr(root-init) 67
                              (global Dune__exe__Lr1!) index/1602))
                          (let
                            (targets/1606 =
                               (function f/1608 accu/1609 symbol/1610
                                 (let
                                   (targets/1611 =
                                      (apply
                                        (field_imm 66
                                          (global Dune__exe__Lr1!))
                                        symbol/1610
                                        (field_imm 67
                                          (global Dune__exe__Lr1!))))
                                   (apply
                                     (field_imm 25 (global Stdlib__List!))
                                     (function accu/1612 target/1613[int]
                                       (apply f/1608 accu/1612
                                         (apply
                                           (field_imm 16
                                             (global Dune__exe__Lr1!))
                                           target/1613)
                                         target/1613))
                                     accu/1609 targets/1611))))
                            (setfield_ptr(root-init) 31
                              (global Dune__exe__Lr1!) targets/1606))
                          (let
                            (start2item/1614 =
                               (function node/1616[int]
                                 (let
                                   (state/1617 =
                                      (apply
                                        (field_imm 11
                                          (global Dune__exe__Lr1!))
                                        node/1616)
                                    core/1618 =
                                      (apply
                                        (field_imm 11
                                          (global Dune__exe__Lr0!))
                                        state/1617)
                                    items/1619 =
                                      (apply
                                        (field_imm 2
                                          (global Dune__exe__Lr0!))
                                        core/1618))
                                   (seq
                                     (if
                                       (==
                                         (apply
                                           (field_imm 4
                                             (field_imm 8
                                               (global Dune__exe__Item!)))
                                           items/1619)
                                         1)
                                       0
                                       (raise
                                         (makeblock 0
                                           (global Assert_failure/28!)
                                           [0: "src/lr1.ml" 634 2])))
                                     (apply
                                       (field_imm 5
                                         (field_imm 8
                                           (global Dune__exe__Item!)))
                                       items/1619)))))
                            (setfield_ptr(root-init) 12
                              (global Dune__exe__Lr1!) start2item/1614))
                          (let
                            (has_beforeend/1620 =
                               (function node/1622[int] : int
                                 (apply
                                   (field_imm 19
                                     (field_imm 4
                                       (global Dune__exe__Grammar!)))
                                   (function param/1698 prods/1623
                                     accu/1624[int] : int
                                     (|| accu/1624
                                       (let
                                         (prod/1625 =
                                            (apply
                                              (field_imm 0
                                                (global Dune__exe__Misc!))
                                              prods/1623))
                                         (&&
                                           (not
                                             (apply
                                               (field_imm 26
                                                 (field_imm 8
                                                   (global Dune__exe__Grammar!)))
                                               prod/1625))
                                           (let
                                             (action/1626 =
                                                (apply
                                                  (field_imm 9
                                                    (field_imm 8
                                                      (global Dune__exe__Grammar!)))
                                                  prod/1625))
                                             (apply
                                               (field_imm 9
                                                 (global Dune__exe__Action!))
                                               action/1626))))))
                                   (apply
                                     (field_imm 20 (global Dune__exe__Lr1!))
                                     node/1622)
                                   0)))
                            (setfield_ptr(root-init) 22
                              (global Dune__exe__Lr1!) has_beforeend/1620))
                          (let
                            (acceptable_tokens/1699 =
                               (function s/1701[int]
                                 (let
                                   (transitions/1702 =
                                      (apply
                                        (field_imm 5
                                          (field_imm 7
                                            (global Dune__exe__Grammar!)))
                                        (makeblock 1
                                          (field_imm 10
                                            (field_imm 2
                                              (global Dune__exe__Grammar!))))
                                        (apply
                                          (field_imm 19
                                            (global Dune__exe__Lr1!))
                                          s/1701))
                                    reductions/1703 =
                                      (apply
                                        (field_imm 15
                                          (field_imm 4
                                            (global Dune__exe__Grammar!)))
                                        (field_imm 10
                                          (field_imm 2
                                            (global Dune__exe__Grammar!)))
                                        (apply
                                          (field_imm 20
                                            (global Dune__exe__Lr1!))
                                          s/1701))
                                    covered/1704 =
                                      (apply
                                        (field_imm 23
                                          (field_imm 7
                                            (global Dune__exe__Grammar!)))
                                        (function symbol/1705 param/1728[int]
                                          covered/1706
                                          (switch* symbol/1705
                                           case tag 0: covered/1706
                                           case tag 1:
                                            (apply
                                              (field_imm 7
                                                (field_imm 3
                                                  (global Dune__exe__Grammar!)))
                                              (field_imm 0 symbol/1705)
                                              covered/1706)))
                                        transitions/1702
                                        (field_imm 0
                                          (field_imm 3
                                            (global Dune__exe__Grammar!)))))
                                   (apply
                                     (field_imm 19
                                       (field_imm 9
                                         (global Dune__exe__Grammar!)))
                                     (function param/1732 toks/1730
                                       covered/1731
                                       (apply
                                         (field_imm 9
                                           (field_imm 3
                                             (global Dune__exe__Grammar!)))
                                         toks/1730 covered/1731))
                                     (apply
                                       (field_imm 30
                                         (global Dune__exe__Lr0!))
                                       reductions/1703)
                                     covered/1704))))
                            (setfield_ptr(root-init) 23
                              (global Dune__exe__Lr1!)
                              acceptable_tokens/1699))
                          (let
                            (*match*/7849 =
                               (seq
                                 (if
                                   (==
                                     (field_int 0
                                       (field_imm 56
                                         (global Dune__exe__Lr1!)))
                                     1)
                                   (apply
                                     (field_imm 13
                                       (global Dune__exe__Error!))
                                     0
                                     [0:
                                      [11:
                                       "one state has shift/reduce conflicts."
                                       0]
                                      "one state has shift/reduce conflicts."])
                                   (if
                                     (>
                                       (field_int 0
                                         (field_imm 56
                                           (global Dune__exe__Lr1!)))
                                       1)
                                     (apply
                                       (field_imm 13
                                         (global Dune__exe__Error!))
                                       0
                                       [0:
                                        [4:
                                         0 0 0
                                         [11:
                                          " states have shift/reduce conflicts."
                                          0]]
                                        "%d states have shift/reduce conflicts."]
                                       (field_int 0
                                         (field_imm 56
                                           (global Dune__exe__Lr1!))))
                                     0))
                                 (if
                                   (==
                                     (field_int 0
                                       (field_imm 57
                                         (global Dune__exe__Lr1!)))
                                     1)
                                   (apply
                                     (field_imm 13
                                       (global Dune__exe__Error!))
                                     0
                                     [0:
                                      [11:
                                       "one state has reduce/reduce conflicts."
                                       0]
                                      "one state has reduce/reduce conflicts."])
                                   (if
                                     (>
                                       (field_int 0
                                         (field_imm 57
                                           (global Dune__exe__Lr1!)))
                                       1)
                                     (apply
                                       (field_imm 13
                                         (global Dune__exe__Error!))
                                       0
                                       [0:
                                        [4:
                                         0 0 0
                                         [11:
                                          " states have reduce/reduce conflicts."
                                          0]]
                                        "%d states have reduce/reduce conflicts."]
                                       (field_int 0
                                         (field_imm 57
                                           (global Dune__exe__Lr1!))))
                                     0))))
                            0)
                          (let
                            (compare/1769 =
                               (function prim/7851 prim/7850 stub
                                 (- prim/7851 prim/7850)))
                            (setfield_ptr(root-init) 84
                              (global Dune__exe__Lr1!) compare/1769))
                          0
                          (let
                            (Node/1770 =
                               (makeblock 0
                                 (field_imm 84 (global Dune__exe__Lr1!))))
                            (seq
                              (setfield_ptr(root-init) 0
                                (global Dune__exe__Lr1!) Node/1770)
                              (let
                                (include/7852 =
                                   (apply
                                     (let
                                       (let/7853 =
                                          (field_imm 0 (global Stdlib__Set!)))
                                       (field_imm 0 (global Stdlib__Set!)))
                                     (field_imm 0 (global Dune__exe__Lr1!))))
                                (seq
                                  (setfield_ptr(root-init) 85
                                    (global Dune__exe__Lr1!)
                                    (field_mut 0 include/7852))
                                  (setfield_ptr(root-init) 86
                                    (global Dune__exe__Lr1!)
                                    (field_mut 1 include/7852))
                                  (setfield_ptr(root-init) 87
                                    (global Dune__exe__Lr1!)
                                    (field_mut 2 include/7852))
                                  (setfield_ptr(root-init) 88
                                    (global Dune__exe__Lr1!)
                                    (field_mut 3 include/7852))
                                  (setfield_ptr(root-init) 89
                                    (global Dune__exe__Lr1!)
                                    (field_mut 4 include/7852))
                                  (setfield_ptr(root-init) 90
                                    (global Dune__exe__Lr1!)
                                    (field_mut 5 include/7852))
                                  (setfield_ptr(root-init) 91
                                    (global Dune__exe__Lr1!)
                                    (field_mut 6 include/7852))
                                  (setfield_ptr(root-init) 92
                                    (global Dune__exe__Lr1!)
                                    (field_mut 7 include/7852))
                                  (setfield_ptr(root-init) 93
                                    (global Dune__exe__Lr1!)
                                    (field_mut 8 include/7852))
                                  (setfield_ptr(root-init) 94
                                    (global Dune__exe__Lr1!)
                                    (field_mut 9 include/7852))
                                  (setfield_ptr(root-init) 95
                                    (global Dune__exe__Lr1!)
                                    (field_mut 10 include/7852))
                                  (setfield_ptr(root-init) 96
                                    (global Dune__exe__Lr1!)
                                    (field_mut 11 include/7852))
                                  (setfield_ptr(root-init) 97
                                    (global Dune__exe__Lr1!)
                                    (field_mut 12 include/7852))
                                  (setfield_ptr(root-init) 98
                                    (global Dune__exe__Lr1!)
                                    (field_mut 13 include/7852))
                                  (setfield_ptr(root-init) 99
                                    (global Dune__exe__Lr1!)
                                    (field_mut 14 include/7852))
                                  (setfield_ptr(root-init) 100
                                    (global Dune__exe__Lr1!)
                                    (field_mut 15 include/7852))
                                  (setfield_ptr(root-init) 101
                                    (global Dune__exe__Lr1!)
                                    (field_mut 16 include/7852))
                                  (setfield_ptr(root-init) 102
                                    (global Dune__exe__Lr1!)
                                    (field_mut 17 include/7852))
                                  (setfield_ptr(root-init) 103
                                    (global Dune__exe__Lr1!)
                                    (field_mut 18 include/7852))
                                  (setfield_ptr(root-init) 104
                                    (global Dune__exe__Lr1!)
                                    (field_mut 19 include/7852))
                                  (setfield_ptr(root-init) 105
                                    (global Dune__exe__Lr1!)
                                    (field_mut 20 include/7852))
                                  (setfield_ptr(root-init) 106
                                    (global Dune__exe__Lr1!)
                                    (field_mut 21 include/7852))
                                  (setfield_ptr(root-init) 107
                                    (global Dune__exe__Lr1!)
                                    (field_mut 22 include/7852))
                                  (setfield_ptr(root-init) 108
                                    (global Dune__exe__Lr1!)
                                    (field_mut 23 include/7852))
                                  (setfield_ptr(root-init) 109
                                    (global Dune__exe__Lr1!)
                                    (field_mut 24 include/7852))
                                  (setfield_ptr(root-init) 110
                                    (global Dune__exe__Lr1!)
                                    (field_mut 25 include/7852))
                                  (setfield_ptr(root-init) 111
                                    (global Dune__exe__Lr1!)
                                    (field_mut 26 include/7852))
                                  (setfield_ptr(root-init) 112
                                    (global Dune__exe__Lr1!)
                                    (field_mut 27 include/7852))
                                  (setfield_ptr(root-init) 113
                                    (global Dune__exe__Lr1!)
                                    (field_mut 28 include/7852))
                                  (setfield_ptr(root-init) 114
                                    (global Dune__exe__Lr1!)
                                    (field_mut 29 include/7852))
                                  (setfield_ptr(root-init) 115
                                    (global Dune__exe__Lr1!)
                                    (field_mut 30 include/7852))
                                  (setfield_ptr(root-init) 116
                                    (global Dune__exe__Lr1!)
                                    (field_mut 31 include/7852))
                                  (setfield_ptr(root-init) 117
                                    (global Dune__exe__Lr1!)
                                    (field_mut 32 include/7852))
                                  (setfield_ptr(root-init) 118
                                    (global Dune__exe__Lr1!)
                                    (field_mut 33 include/7852))
                                  (setfield_ptr(root-init) 119
                                    (global Dune__exe__Lr1!)
                                    (field_mut 34 include/7852))
                                  (setfield_ptr(root-init) 120
                                    (global Dune__exe__Lr1!)
                                    (field_mut 35 include/7852))
                                  (setfield_ptr(root-init) 121
                                    (global Dune__exe__Lr1!)
                                    (field_mut 36 include/7852))
                                  (setfield_ptr(root-init) 122
                                    (global Dune__exe__Lr1!)
                                    (field_mut 37 include/7852))
                                  (setfield_ptr(root-init) 123
                                    (global Dune__exe__Lr1!)
                                    (field_mut 38 include/7852))
                                  (setfield_ptr(root-init) 124
                                    (global Dune__exe__Lr1!)
                                    (field_mut 39 include/7852))
                                  (setfield_ptr(root-init) 125
                                    (global Dune__exe__Lr1!)
                                    (field_mut 40 include/7852))
                                  (setfield_ptr(root-init) 126
                                    (global Dune__exe__Lr1!)
                                    (field_mut 41 include/7852))
                                  (setfield_ptr(root-init) 127
                                    (global Dune__exe__Lr1!)
                                    (field_mut 42 include/7852))
                                  (let
                                    (leq_join/1917 =
                                       (function s1/1919 s2/1920
                                         (if
                                           (apply
                                             (field_imm 118
                                               (global Dune__exe__Lr1!))
                                             s1/1919 s2/1920)
                                           s2/1920
                                           (apply
                                             (field_imm 89
                                               (global Dune__exe__Lr1!))
                                             s1/1919 s2/1920))))
                                    (setfield_ptr(root-init) 128
                                      (global Dune__exe__Lr1!) leq_join/1917))
                                  (let
                                    (print/2011 =
                                       (function s/2012
                                         (apply
                                           (field_imm 3
                                             (global Stdlib__Printf!))
                                           [0:
                                            [11: "{ " [2: 0 [11: " }" 0]]]
                                            "{ %s }"]
                                           (apply
                                             (field_imm 5
                                               (global Dune__exe__Misc!))
                                             (field_imm 10
                                               (global Dune__exe__Lr1!))
                                             ", "
                                             (function f/2013 : int
                                               (apply
                                                 (field_imm 107
                                                   (global Dune__exe__Lr1!))
                                                 f/2013 s/2012))))))
                                    (setfield_ptr(root-init) 129
                                      (global Dune__exe__Lr1!) print/2011))
                                  0))
                              (let
                                (NodeSet/2014 =
                                   (makeblock 0
                                     (field_imm 85 (global Dune__exe__Lr1!))
                                     (field_imm 86 (global Dune__exe__Lr1!))
                                     (field_imm 87 (global Dune__exe__Lr1!))
                                     (field_imm 88 (global Dune__exe__Lr1!))
                                     (field_imm 89 (global Dune__exe__Lr1!))
                                     (field_imm 90 (global Dune__exe__Lr1!))
                                     (field_imm 91 (global Dune__exe__Lr1!))
                                     (field_imm 92 (global Dune__exe__Lr1!))
                                     (field_imm 93 (global Dune__exe__Lr1!))
                                     (field_imm 94 (global Dune__exe__Lr1!))
                                     (field_imm 95 (global Dune__exe__Lr1!))
                                     (field_imm 96 (global Dune__exe__Lr1!))
                                     (field_imm 97 (global Dune__exe__Lr1!))
                                     (field_imm 98 (global Dune__exe__Lr1!))
                                     (field_imm 99 (global Dune__exe__Lr1!))
                                     (field_imm 100 (global Dune__exe__Lr1!))
                                     (field_imm 101 (global Dune__exe__Lr1!))
                                     (field_imm 102 (global Dune__exe__Lr1!))
                                     (field_imm 103 (global Dune__exe__Lr1!))
                                     (field_imm 104 (global Dune__exe__Lr1!))
                                     (field_imm 105 (global Dune__exe__Lr1!))
                                     (field_imm 106 (global Dune__exe__Lr1!))
                                     (field_imm 107 (global Dune__exe__Lr1!))
                                     (field_imm 108 (global Dune__exe__Lr1!))
                                     (field_imm 109 (global Dune__exe__Lr1!))
                                     (field_imm 110 (global Dune__exe__Lr1!))
                                     (field_imm 111 (global Dune__exe__Lr1!))
                                     (field_imm 112 (global Dune__exe__Lr1!))
                                     (field_imm 113 (global Dune__exe__Lr1!))
                                     (field_imm 114 (global Dune__exe__Lr1!))
                                     (field_imm 115 (global Dune__exe__Lr1!))
                                     (field_imm 116 (global Dune__exe__Lr1!))
                                     (field_imm 117 (global Dune__exe__Lr1!))
                                     (field_imm 118 (global Dune__exe__Lr1!))
                                     (field_imm 119 (global Dune__exe__Lr1!))
                                     (field_imm 120 (global Dune__exe__Lr1!))
                                     (field_imm 121 (global Dune__exe__Lr1!))
                                     (field_imm 122 (global Dune__exe__Lr1!))
                                     (field_imm 123 (global Dune__exe__Lr1!))
                                     (field_imm 124 (global Dune__exe__Lr1!))
                                     (field_imm 125 (global Dune__exe__Lr1!))
                                     (field_imm 126 (global Dune__exe__Lr1!))
                                     (field_imm 127 (global Dune__exe__Lr1!))
                                     (field_imm 128 (global Dune__exe__Lr1!))
                                     (field_imm 129 (global Dune__exe__Lr1!))))
                                (seq
                                  (setfield_ptr(root-init) 1
                                    (global Dune__exe__Lr1!) NodeSet/2014)
                                  (let
                                    (NodeMap/2116 =
                                       (apply
                                         (let
                                           (let/7854 =
                                              (field_imm 0
                                                (global Stdlib__Map!)))
                                           (field_imm 0
                                             (global Stdlib__Map!)))
                                         (field_imm 0
                                           (global Dune__exe__Lr1!))))
                                    (seq
                                      (setfield_ptr(root-init) 2
                                        (global Dune__exe__Lr1!)
                                        NodeMap/2116)
                                      (let
                                        (ImperativeNodeMap/2250 =
                                           (apply
                                             (let
                                               (let/7855 =
                                                  (field_imm 10
                                                    (global Vendored_fix__Glue!)))
                                               (field_imm 10
                                                 (global Vendored_fix__Glue!)))
                                             (let
                                               (n/2117 =[int]
                                                  (field_imm 8
                                                    (global Dune__exe__Lr1!)))
                                               (makeblock 0 n/2117))))
                                        (seq
                                          (setfield_ptr(root-init) 3
                                            (global Dune__exe__Lr1!)
                                            (makeblock 0
                                              (field_mut 0
                                                ImperativeNodeMap/2250)
                                              (field_mut 1
                                                ImperativeNodeMap/2250)
                                              (field_mut 2
                                                ImperativeNodeMap/2250)))
                                          (let
                                            (all_sources/2251 =
                                               (function symbol/2253
                                                 (apply
                                                   (field_imm 31
                                                     (global Dune__exe__Lr1!))
                                                   (function accu/2254
                                                     sources/2255
                                                     _target/2256[int]
                                                     (apply
                                                       (field_imm 25
                                                         (global Stdlib__List!))
                                                       (function accu/2257
                                                         source/2258[int]
                                                         (apply
                                                           (field_imm 1
                                                             (field_imm 1
                                                               (global Dune__exe__Lr1!)))
                                                           source/2258
                                                           accu/2257))
                                                       accu/2254
                                                       sources/2255))
                                                   (field_imm 0
                                                     (field_imm 1
                                                       (global Dune__exe__Lr1!)))
                                                   symbol/2253)))
                                            (setfield_ptr(root-init) 32
                                              (global Dune__exe__Lr1!)
                                              all_sources/2251))
                                          (let
                                            (all_targets/2259 =
                                               (function symbol/2261
                                                 (apply
                                                   (field_imm 31
                                                     (global Dune__exe__Lr1!))
                                                   (function accu/2262
                                                     _sources/2263
                                                     target/2264[int]
                                                     (apply
                                                       (field_imm 1
                                                         (field_imm 1
                                                           (global Dune__exe__Lr1!)))
                                                       target/2264 accu/2262))
                                                   (field_imm 0
                                                     (field_imm 1
                                                       (global Dune__exe__Lr1!)))
                                                   symbol/2261)))
                                            (setfield_ptr(root-init) 33
                                              (global Dune__exe__Lr1!)
                                              all_targets/2259))
                                          (let
                                            (production_where/2265 =
                                               (makemutable 0 0))
                                            (setfield_ptr(root-init) 68
                                              (global Dune__exe__Lr1!)
                                              production_where/2265))
                                          (let
                                            (initialize_production_where/2266 =
                                               (function param/2275[int]
                                                 : int
                                                 (setfield_ptr 0
                                                   (field_imm 68
                                                     (global Dune__exe__Lr1!))
                                                   (makeblock 0
                                                     (apply
                                                       (field_imm 24
                                                         (global Dune__exe__Lr1!))
                                                       (function accu/2268
                                                         node/2269[int]
                                                         (apply
                                                           (field_imm 19
                                                             (field_imm 4
                                                               (global Dune__exe__Grammar!)))
                                                           (function
                                                             param/2274
                                                             prods/2270
                                                             accu/2271
                                                             (let
                                                               (prod/2272 =
                                                                  (apply
                                                                    (field_imm 0
                                                                    (global Dune__exe__Misc!))
                                                                    prods/2270)
                                                                nodes/2273 =
                                                                  (try
                                                                    (apply
                                                                    (field_imm 1
                                                                    (field_imm 9
                                                                    (global Dune__exe__Grammar!)))
                                                                    prod/2272
                                                                    accu/2271)
                                                                   with exn/7857
                                                                    (if
                                                                    (==
                                                                    exn/7857
                                                                    (field_imm 7
                                                                    (global Stdlib!)))
                                                                    (field_imm 0
                                                                    (field_imm 1
                                                                    (global Dune__exe__Lr1!)))
                                                                    (reraise
                                                                    exn/7857))))
                                                               (apply
                                                                 (field_imm 3
                                                                   (field_imm 9
                                                                    (global Dune__exe__Grammar!)))
                                                                 prod/2272
                                                                 (apply
                                                                   (field_imm 1
                                                                    (field_imm 1
                                                                    (global Dune__exe__Lr1!)))
                                                                   node/2269
                                                                   nodes/2273)
                                                                 accu/2271)))
                                                           (apply
                                                             (field_imm 20
                                                               (global Dune__exe__Lr1!))
                                                             node/2269)
                                                           accu/2268))
                                                       (field_imm 0
                                                         (field_imm 9
                                                           (global Dune__exe__Grammar!))))))))
                                            (setfield_ptr(root-init) 69
                                              (global Dune__exe__Lr1!)
                                              initialize_production_where/2266))
                                          (let
                                            (production_where/2276 =
                                               (function prod/2277
                                                 (let
                                                   (*match*/7859 =
                                                      (field_mut 0
                                                        (field_imm 68
                                                          (global Dune__exe__Lr1!))))
                                                   (if (isint *match*/7859)
                                                     (raise
                                                       (makeblock 0
                                                         (global Assert_failure/28!)
                                                         [0:
                                                          "src/lr1.ml" 790 6]))
                                                     (try
                                                       (let
                                                         (nodes/2279 =
                                                            (apply
                                                              (field_imm 1
                                                                (field_imm 9
                                                                  (global Dune__exe__Grammar!)))
                                                              prod/2277
                                                              (field_imm 0
                                                                *match*/7859)))
                                                         (seq
                                                           (if
                                                             (not
                                                               (apply
                                                                 (field_imm 29
                                                                   (field_imm 1
                                                                    (global Dune__exe__Lr1!)))
                                                                 nodes/2279))
                                                             0
                                                             (raise
                                                               (makeblock 0
                                                                 (global Assert_failure/28!)
                                                                 [0:
                                                                  "src/lr1.ml"
                                                                  795 8])))
                                                           nodes/2279))
                                                      with exn/7858
                                                       (if
                                                         (== exn/7858
                                                           (field_imm 7
                                                             (global Stdlib!)))
                                                         (field_imm 0
                                                           (field_imm 1
                                                             (global Dune__exe__Lr1!)))
                                                         (reraise exn/7858)))))))
                                            (setfield_ptr(root-init) 39
                                              (global Dune__exe__Lr1!)
                                              production_where/2276))
                                          (let
                                            (warn_about_productions_never_reduced/2280 =
                                               (function param/2307[int]
                                                 : int
                                                 (let
                                                   (count/2282 =
                                                      (makemutable 0 (int) 0))
                                                   (seq
                                                     (apply
                                                       (field_imm 14
                                                         (field_imm 8
                                                           (global Dune__exe__Grammar!)))
                                                       (function prod/2283
                                                         : int
                                                         (if
                                                           (apply
                                                             (field_imm 29
                                                               (field_imm 1
                                                                 (global Dune__exe__Lr1!)))
                                                             (apply
                                                               (field_imm 39
                                                                 (global Dune__exe__Lr1!))
                                                               prod/2283))
                                                           (let
                                                             (*match*/7864 =
                                                                (apply
                                                                  (field_imm 25
                                                                    (field_imm 8
                                                                    (global Dune__exe__Grammar!)))
                                                                  prod/2283))
                                                             (if
                                                               (isint
                                                                 *match*/7864)
                                                               (seq
                                                                 (+:=1
                                                                   count/2282)
                                                                 (apply
                                                                   (field_imm 13
                                                                    (global Dune__exe__Error!))
                                                                   (apply
                                                                    (field_imm 10
                                                                    (field_imm 8
                                                                    (global Dune__exe__Grammar!)))
                                                                    prod/2283)
                                                                   [0:
                                                                    [11:
                                                                    "production "
                                                                    [2:
                                                                    0
                                                                    [11:
                                                                    " is never reduced."
                                                                    0]]]
                                                                    "production %s is never reduced."]
                                                                   (apply
                                                                    (field_imm 29
                                                                    (field_imm 8
                                                                    (global Dune__exe__Grammar!)))
                                                                    prod/2283)))
                                                               (let
                                                                 (nt/2284 =a
                                                                    (field_imm 0
                                                                    *match*/7864))
                                                                 (seq
                                                                   (+:=1
                                                                    count/2282)
                                                                   (apply
                                                                    (field_imm 13
                                                                    (global Dune__exe__Error!))
                                                                    (apply
                                                                    (field_imm 15
                                                                    (field_imm 0
                                                                    (global Dune__exe__Grammar!)))
                                                                    nt/2284)
                                                                    [0:
                                                                    [11:
                                                                    "symbol "
                                                                    [2:
                                                                    0
                                                                    [11:
                                                                    " is never accepted."
                                                                    0]]]
                                                                    "symbol %s is never accepted."]
                                                                    (apply
                                                                    (field_imm 5
                                                                    (field_imm 0
                                                                    (global Dune__exe__Grammar!)))
                                                                    0
                                                                    nt/2284))))))
                                                           0)))
                                                     (if
                                                       (>
                                                         (field_int 0
                                                           count/2282)
                                                         0)
                                                       (catch
                                                         (if
                                                           (>
                                                             (field_int 0
                                                               count/2282)
                                                             1)
                                                           (let
                                                             (be/7863 = "are"
                                                              plural_mark/7862 =
                                                                "s")
                                                             (exit 98
                                                               plural_mark/7862
                                                               be/7863))
                                                           (let
                                                             (be/7861 = "is"
                                                              plural_mark/7860 =
                                                                "")
                                                             (exit 98
                                                               plural_mark/7860
                                                               be/7861)))
                                                        with (98 plural_mark/2305 be/2306)
                                                         (apply
                                                           (field_imm 13
                                                             (global Dune__exe__Error!))
                                                           0
                                                           [0:
                                                            [11:
                                                             "in total, "
                                                             [4:
                                                              0 0 0
                                                              [11:
                                                               " production"
                                                               [2:
                                                                0
                                                                [12:
                                                                 ' '
                                                                 [2:
                                                                  0
                                                                  [11:
                                                                   " never reduced."
                                                                   0]]]]]]]
                                                            "in total, %d production%s %s never reduced."]
                                                           (field_int 0
                                                             count/2282)
                                                           plural_mark/2305
                                                           be/2306))
                                                       0)))))
                                            (setfield_ptr(root-init) 70
                                              (global Dune__exe__Lr1!)
                                              warn_about_productions_never_reduced/2280))
                                          (letrec
                                            (best/2308
                                               (function choice/2309
                                                 param/2328
                                                 (if (isint param/2328)
                                                   choice/2309
                                                   (let
                                                     (prod/2310 =a
                                                        (field_imm 0
                                                          param/2328)
                                                      *match*/7865 =
                                                        (apply
                                                          (field_imm 1
                                                            (field_imm 12
                                                              (global Dune__exe__Grammar!)))
                                                          choice/2309
                                                          prod/2310))
                                                     (if (isint *match*/7865)
                                                       (seq
                                                         (apply
                                                           (field_imm 9
                                                             (global Dune__exe__Error!))
                                                           (field_imm 12
                                                             (global Dune__exe__Error!))
                                                           (apply
                                                             (field_imm 36
                                                               (global Stdlib!))
                                                             (apply
                                                               (field_imm 10
                                                                 (field_imm 8
                                                                   (global Dune__exe__Grammar!)))
                                                               choice/2309)
                                                             (apply
                                                               (field_imm 10
                                                                 (field_imm 8
                                                                   (global Dune__exe__Grammar!)))
                                                               prod/2310))
                                                           [0:
                                                            [11:
                                                             "do not know how to resolve a reduce/reduce conflict\nbetween the following two productions:\n"
                                                             [2:
                                                              0
                                                              [12:
                                                               '\n' [2: 0 0]]]]
                                                            "do not know how to resolve a reduce/reduce conflict\nbetween the following two productions:\n%s\n%s"]
                                                           (apply
                                                             (field_imm 29
                                                               (field_imm 8
                                                                 (global Dune__exe__Grammar!)))
                                                             choice/2309)
                                                           (apply
                                                             (field_imm 29
                                                               (field_imm 8
                                                                 (global Dune__exe__Grammar!)))
                                                             prod/2310))
                                                         choice/2309)
                                                       (apply best/2308
                                                         (field_imm 0
                                                           *match*/7865)
                                                         (field_imm 1
                                                           param/2328)))))))
                                            (setfield_ptr(root-init) 71
                                              (global Dune__exe__Lr1!)
                                              best/2308))
                                          (let
                                            (default_conflict_resolution/2329 =
                                               (function param/2344[int]
                                                 : int
                                                 (let
                                                   (shift_reduce/2331 =
                                                      (makemutable 0 (int) 0)
                                                    reduce_reduce/2332 =
                                                      (makemutable 0 (int) 0))
                                                   (seq
                                                     (apply
                                                       (field_imm 17
                                                         (global Stdlib__List!))
                                                       (function
                                                         node/2333[int] : int
                                                         (seq
                                                           (array.set[gen]
                                                             (field_imm 51
                                                               (global Dune__exe__Lr1!))
                                                             (apply
                                                               (field_imm 63
                                                                 (global Dune__exe__Lr1!))
                                                               node/2333)
                                                             (field_imm 0
                                                               (field_imm 3
                                                                 (global Dune__exe__Grammar!))))
                                                           (apply
                                                             (field_imm 65
                                                               (global Dune__exe__Lr1!))
                                                             node/2333
                                                             (apply
                                                               (field_imm 19
                                                                 (field_imm 4
                                                                   (global Dune__exe__Grammar!)))
                                                               (function
                                                                 tok/2334
                                                                 prods/2335
                                                                 reductions/2336
                                                                 (try
                                                                   (seq
                                                                    (apply
                                                                    (field_imm 16
                                                                    (field_imm 7
                                                                    (global Dune__exe__Grammar!)))
                                                                    (makeblock 1
                                                                    tok/2334)
                                                                    (apply
                                                                    (field_imm 19
                                                                    (global Dune__exe__Lr1!))
                                                                    node/2333))
                                                                    (setfield_imm 0
                                                                    shift_reduce/2331
                                                                    (+
                                                                    (apply
                                                                    (field_imm 0
                                                                    (global Stdlib__List!))
                                                                    prods/2335)
                                                                    (field_int 0
                                                                    shift_reduce/2331)))
                                                                    reductions/2336)
                                                                  with exn/7871
                                                                   (if
                                                                    (==
                                                                    exn/7871
                                                                    (field_imm 7
                                                                    (global Stdlib!)))
                                                                    (if
                                                                    (isint
                                                                    prods/2335)
                                                                    (raise
                                                                    (makeblock 0
                                                                    (global Assert_failure/28!)
                                                                    [0:
                                                                    "src/lr1.ml"
                                                                    889 14]))
                                                                    (let
                                                                    (prods/2338 =a
                                                                    (field_imm 1
                                                                    prods/2335))
                                                                    (if
                                                                    (isint
                                                                    prods/2338)
                                                                    (apply
                                                                    (field_imm 3
                                                                    (field_imm 4
                                                                    (global Dune__exe__Grammar!)))
                                                                    tok/2334
                                                                    prods/2335
                                                                    reductions/2336)
                                                                    (seq
                                                                    (setfield_imm 0
                                                                    reduce_reduce/2332
                                                                    (+
                                                                    (apply
                                                                    (field_imm 0
                                                                    (global Stdlib__List!))
                                                                    prods/2338)
                                                                    (field_int 0
                                                                    reduce_reduce/2332)))
                                                                    (apply
                                                                    (field_imm 3
                                                                    (field_imm 4
                                                                    (global Dune__exe__Grammar!)))
                                                                    tok/2334
                                                                    (makeblock 0
                                                                    (apply
                                                                    (field_imm 71
                                                                    (global Dune__exe__Lr1!))
                                                                    (field_imm 0
                                                                    prods/2335)
                                                                    prods/2338)
                                                                    0)
                                                                    reductions/2336)))))
                                                                    (reraise
                                                                    exn/7871))))
                                                               (apply
                                                                 (field_imm 20
                                                                   (global Dune__exe__Lr1!))
                                                                 node/2333)
                                                               (field_imm 0
                                                                 (field_imm 4
                                                                   (global Dune__exe__Grammar!)))))))
                                                       (field_imm 62
                                                         (global Dune__exe__Lr1!)))
                                                     (if
                                                       (==
                                                         (field_int 0
                                                           shift_reduce/2331)
                                                         1)
                                                       (apply
                                                         (field_imm 7
                                                           (global Dune__exe__Error!))
                                                         0
                                                         [0:
                                                          [11:
                                                           "one shift/reduce conflict was arbitrarily resolved."
                                                           0]
                                                          "one shift/reduce conflict was arbitrarily resolved."])
                                                       (if
                                                         (>
                                                           (field_int 0
                                                             shift_reduce/2331)
                                                           1)
                                                         (apply
                                                           (field_imm 7
                                                             (global Dune__exe__Error!))
                                                           0
                                                           [0:
                                                            [4:
                                                             0 0 0
                                                             [11:
                                                              " shift/reduce conflicts were arbitrarily resolved."
                                                              0]]
                                                            "%d shift/reduce conflicts were arbitrarily resolved."]
                                                           (field_int 0
                                                             shift_reduce/2331))
                                                         0))
                                                     (if
                                                       (==
                                                         (field_int 0
                                                           reduce_reduce/2332)
                                                         1)
                                                       (apply
                                                         (field_imm 7
                                                           (global Dune__exe__Error!))
                                                         0
                                                         [0:
                                                          [11:
                                                           "one reduce/reduce conflict was arbitrarily resolved."
                                                           0]
                                                          "one reduce/reduce conflict was arbitrarily resolved."])
                                                       (if
                                                         (>
                                                           (field_int 0
                                                             reduce_reduce/2332)
                                                           1)
                                                         (apply
                                                           (field_imm 7
                                                             (global Dune__exe__Error!))
                                                           0
                                                           [0:
                                                            [4:
                                                             0 0 0
                                                             [11:
                                                              " reduce/reduce conflicts were arbitrarily resolved."
                                                              0]]
                                                            "%d reduce/reduce conflicts were arbitrarily resolved."]
                                                           (field_int 0
                                                             reduce_reduce/2332))
                                                         0))
                                                     (let
                                                       (eos_conflicts/2339 =
                                                          (makemutable 0 (int)
                                                            0))
                                                       (seq
                                                         (apply
                                                           (field_imm 25
                                                             (global Dune__exe__Lr1!))
                                                           (function
                                                             node/2340[int]
                                                             : int
                                                             (let
                                                               (transitions/2341 =
                                                                  (apply
                                                                    (field_imm 19
                                                                    (global Dune__exe__Lr1!))
                                                                    node/2340)
                                                                reductions/2342 =
                                                                  (apply
                                                                    (field_imm 20
                                                                    (global Dune__exe__Lr1!))
                                                                    node/2340))
                                                               (if
                                                                 (apply
                                                                   (field_imm 32
                                                                    (global Dune__exe__Lr0!))
                                                                   transitions/2341
                                                                   reductions/2342)
                                                                 (let
                                                                   (*match*/7869 =
                                                                    (apply
                                                                    (field_imm 13
                                                                    (field_imm 4
                                                                    (global Dune__exe__Grammar!)))
                                                                    (field_imm 9
                                                                    (field_imm 2
                                                                    (global Dune__exe__Grammar!)))
                                                                    reductions/2342))
                                                                   (seq
                                                                    (apply
                                                                    (field_imm 65
                                                                    (global Dune__exe__Lr1!))
                                                                    node/2340
                                                                    (field_imm 1
                                                                    *match*/7869))
                                                                    (array.set[addr]
                                                                    (field_imm 52
                                                                    (global Dune__exe__Lr1!))
                                                                    (apply
                                                                    (field_imm 63
                                                                    (global Dune__exe__Lr1!))
                                                                    node/2340)
                                                                    0)
                                                                    (+:=1
                                                                    eos_conflicts/2339)))
                                                                 0))))
                                                         (if
                                                           (==
                                                             (field_int 0
                                                               eos_conflicts/2339)
                                                             1)
                                                           (apply
                                                             (field_imm 13
                                                               (global Dune__exe__Error!))
                                                             0
                                                             [0:
                                                              [11:
                                                               "one state end-of-stream conflict was arbitrarily resolved."
                                                               0]
                                                              "one state end-of-stream conflict was arbitrarily resolved."])
                                                           (if
                                                             (>
                                                               (field_int 0
                                                                 eos_conflicts/2339)
                                                               1)
                                                             (apply
                                                               (field_imm 13
                                                                 (global Dune__exe__Error!))
                                                               0
                                                               [0:
                                                                [4:
                                                                 0 0 0
                                                                 [11:
                                                                  " end-of-stream conflicts were arbitrarily resolved."
                                                                  0]]
                                                                "%d end-of-stream conflicts were arbitrarily resolved."]
                                                               (field_int 0
                                                                 eos_conflicts/2339))
                                                             0))
                                                         (apply
                                                           (field_imm 69
                                                             (global Dune__exe__Lr1!))
                                                           0)
                                                         (apply
                                                           (field_imm 70
                                                             (global Dune__exe__Lr1!))
                                                           0)))))))
                                            (setfield_ptr(root-init) 37
                                              (global Dune__exe__Lr1!)
                                              default_conflict_resolution/2329))
                                          (let
                                            (extra/2345 =
                                               (makemutable 0 (int) 0))
                                            (setfield_ptr(root-init) 72
                                              (global Dune__exe__Lr1!)
                                              extra/2345))
                                          (let
                                            (prioritized/2346 =
                                               (makemutable 0 0))
                                            (setfield_ptr(root-init) 73
                                              (global Dune__exe__Lr1!)
                                              prioritized/2346))
                                          (let
                                            (extra_nts/2347 =
                                               (makemutable 0
                                                 (field_imm 0
                                                   (field_imm 26
                                                     (field_imm 1
                                                       (global Dune__exe__Grammar!))))))
                                            (setfield_ptr(root-init) 74
                                              (global Dune__exe__Lr1!)
                                              extra_nts/2347))
                                          (let
                                            (extra_reductions_in_node/2434 =
                                               (function node/2436[int] : int
                                                 (let
                                                   (productions/2437 =
                                                      (apply
                                                        (field_imm 30
                                                          (global Dune__exe__Lr0!))
                                                        (apply
                                                          (field_imm 20
                                                            (global Dune__exe__Lr1!))
                                                          node/2436))
                                                    prods/2438 =
                                                      (apply
                                                        (field_imm 19
                                                          (field_imm 9
                                                            (global Dune__exe__Grammar!)))
                                                        (function prod/2439
                                                          param/2441
                                                          prods/2440
                                                          (makeblock 0
                                                            prod/2439
                                                            prods/2440))
                                                        productions/2437 0)
                                                    prods/2442 =
                                                      (apply
                                                        (field_imm 43
                                                          (global Stdlib__List!))
                                                        (field_imm 0
                                                          (field_imm 13
                                                            (global Dune__exe__Grammar!)))
                                                        prods/2438)
                                                    *match*/7876 =
                                                      (apply
                                                        (field_imm 25
                                                          (global Dune__exe__Misc!))
                                                        (field_imm 2
                                                          (field_imm 13
                                                            (global Dune__exe__Grammar!)))
                                                        prods/2442))
                                                   (if (isint *match*/7876) 0
                                                     (let
                                                       (prod/2446 =a
                                                          (field_imm 0
                                                            *match*/7876)
                                                        acceptable/2447 =
                                                          (apply
                                                            (field_imm 23
                                                              (global Dune__exe__Lr1!))
                                                            node/2436)
                                                        triggered/2448 =
                                                          (makemutable 246
                                                            (function
                                                              param/7875
                                                              (seq
                                                                (+:=1
                                                                  (field_imm 72
                                                                    (global Dune__exe__Lr1!)))
                                                                (if
                                                                  (>
                                                                    (apply
                                                                    (field_imm 0
                                                                    (global Stdlib__List!))
                                                                    prods/2442)
                                                                    1)
                                                                  (setfield_ptr 0
                                                                    (field_imm 73
                                                                    (global Dune__exe__Lr1!))
                                                                    (makeblock 0 (int,*)
                                                                    node/2436
                                                                    (field_mut 0
                                                                    (field_imm 73
                                                                    (global Dune__exe__Lr1!)))))
                                                                  0)
                                                                (setfield_ptr 0
                                                                  (field_imm 74
                                                                    (global Dune__exe__Lr1!))
                                                                  (apply
                                                                    (field_imm 7
                                                                    (field_imm 26
                                                                    (field_imm 1
                                                                    (global Dune__exe__Grammar!))))
                                                                    (apply
                                                                    (field_imm 5
                                                                    (field_imm 8
                                                                    (global Dune__exe__Grammar!)))
                                                                    prod/2446)
                                                                    (field_mut 0
                                                                    (field_imm 74
                                                                    (global Dune__exe__Lr1!)))))))))
                                                       (apply
                                                         (field_imm 21
                                                           (field_imm 2
                                                             (global Dune__exe__Grammar!)))
                                                         (function tok/2469
                                                           : int
                                                           (if
                                                             (not
                                                               (apply
                                                                 (field_imm 6
                                                                   (field_imm 3
                                                                    (global Dune__exe__Grammar!)))
                                                                 tok/2469
                                                                 acceptable/2447))
                                                             (seq
                                                               (apply
                                                                 (field_imm 65
                                                                   (global Dune__exe__Lr1!))
                                                                 node/2436
                                                                 (apply
                                                                   (field_imm 3
                                                                    (field_imm 4
                                                                    (global Dune__exe__Grammar!)))
                                                                   tok/2469
                                                                   (makeblock 0
                                                                    prod/2446
                                                                    0)
                                                                   (apply
                                                                    (field_imm 20
                                                                    (global Dune__exe__Lr1!))
                                                                    node/2436)))
                                                               (if
                                                                 (isint
                                                                   triggered/2448)
                                                                 triggered/2448
                                                                 (switch 
                                                                  (caml_obj_tag
                                                                    triggered/2448)
                                                                  case int 250:
                                                                   (field_mut 0
                                                                    triggered/2448)
                                                                  case int 246:
                                                                   (apply
                                                                    (field_imm 1
                                                                    (global CamlinternalLazy!))
                                                                    (opaque
                                                                    triggered/2448))
                                                                  case int 244:
                                                                   (apply
                                                                    (field_imm 1
                                                                    (global CamlinternalLazy!))
                                                                    (opaque
                                                                    triggered/2448))
                                                                  default:
                                                                   triggered/2448)))
                                                             0))))))))
                                            (setfield_ptr(root-init) 75
                                              (global Dune__exe__Lr1!)
                                              extra_reductions_in_node/2434))
                                          (let
                                            (extra_reductions/2483 =
                                               (function param/2489[int]
                                                 : int
                                                 (seq
                                                   (apply
                                                     (field_imm 25
                                                       (global Dune__exe__Lr1!))
                                                     (function node/2485[int]
                                                       : int
                                                       (if
                                                         (not
                                                           (apply
                                                             (field_imm 21
                                                               (global Dune__exe__Lr1!))
                                                             node/2485))
                                                         (apply
                                                           (field_imm 75
                                                             (global Dune__exe__Lr1!))
                                                           node/2485)
                                                         0)))
                                                   (if
                                                     (>
                                                       (field_int 0
                                                         (field_imm 72
                                                           (global Dune__exe__Lr1!)))
                                                       0)
                                                     (seq
                                                       (apply
                                                         (field_imm 3
                                                           (global Dune__exe__Error!))
                                                         1
                                                         (function f/2486
                                                           : int
                                                           (seq
                                                             (apply
                                                               (field_imm 0
                                                                 (global Stdlib__Printf!))
                                                               f/2486
                                                               [0:
                                                                [11:
                                                                 "Extra reductions on error were added in "
                                                                 [4:
                                                                  0 0 0
                                                                  [11:
                                                                   " states.\n"
                                                                   0]]]
                                                                "Extra reductions on error were added in %d states.\n"]
                                                               (field_int 0
                                                                 (field_imm 72
                                                                   (global Dune__exe__Lr1!))))
                                                             (apply
                                                               (field_imm 0
                                                                 (global Stdlib__Printf!))
                                                               f/2486
                                                               [0:
                                                                [11:
                                                                 "Priority played a role in "
                                                                 [4:
                                                                  0 0 0
                                                                  [11:
                                                                   " of these states.\n"
                                                                   0]]]
                                                                "Priority played a role in %d of these states.\n"]
                                                               (apply
                                                                 (field_imm 0
                                                                   (global Stdlib__List!))
                                                                 (field_mut 0
                                                                   (field_imm 73
                                                                    (global Dune__exe__Lr1!))))))))
                                                       (apply
                                                         (field_imm 3
                                                           (global Dune__exe__Error!))
                                                         2
                                                         (function f/2487
                                                           : int
                                                           (if
                                                             (!=
                                                               (field_mut 0
                                                                 (field_imm 73
                                                                   (global Dune__exe__Lr1!)))
                                                               0)
                                                             (apply
                                                               (field_imm 0
                                                                 (global Stdlib__Printf!))
                                                               f/2487
                                                               [0:
                                                                [11:
                                                                 "These states are "
                                                                 [2:
                                                                  0
                                                                  [11:
                                                                   ".\n" 0]]]
                                                                "These states are %s.\n"]
                                                               (apply
                                                                 (field_imm 44
                                                                   (field_imm 1
                                                                    (global Dune__exe__Lr1!)))
                                                                 (apply
                                                                   (field_imm 37
                                                                    (field_imm 1
                                                                    (global Dune__exe__Lr1!)))
                                                                   (field_mut 0
                                                                    (field_imm 73
                                                                    (global Dune__exe__Lr1!))))))
                                                             0))))
                                                     0)
                                                   (apply
                                                     (field_imm 1
                                                       (field_imm 13
                                                         (global Dune__exe__Grammar!)))
                                                     (function nt/2488 : int
                                                       (if
                                                         (not
                                                           (apply
                                                             (field_imm 6
                                                               (field_imm 26
                                                                 (field_imm 1
                                                                   (global Dune__exe__Grammar!))))
                                                             nt/2488
                                                             (field_mut 0
                                                               (field_imm 74
                                                                 (global Dune__exe__Lr1!)))))
                                                         (apply
                                                           (field_imm 13
                                                             (global Dune__exe__Error!))
                                                           0
                                                           [0:
                                                            [11:
                                                             "the declaration "
                                                             [12:
                                                              '%'
                                                              [11:
                                                               "on_error_reduce "
                                                               [2:
                                                                0
                                                                [11:
                                                                 " is never useful."
                                                                 0]]]]]
                                                            "the declaration %%on_error_reduce %s is never useful."]
                                                           (apply
                                                             (field_imm 5
                                                               (field_imm 0
                                                                 (global Dune__exe__Grammar!)))
                                                             0 nt/2488))
                                                         0))))))
                                            (setfield_ptr(root-init) 38
                                              (global Dune__exe__Lr1!)
                                              extra_reductions/2483))
                                          (let
                                            (fold_entry/2490 =
                                               (function f/2492 accu/2493
                                                 (apply
                                                   (field_imm 19
                                                     (field_imm 9
                                                       (global Dune__exe__Grammar!)))
                                                   (function prod/2494
                                                     state/2495[int]
                                                     accu/2496
                                                     (let
                                                       (nt/2497 =
                                                          (let
                                                            (*match*/7880 =
                                                               (apply
                                                                 (field_imm 25
                                                                   (field_imm 8
                                                                    (global Dune__exe__Grammar!)))
                                                                 prod/2494))
                                                            (if
                                                              (isint
                                                                *match*/7880)
                                                              (raise
                                                                (makeblock 0
                                                                  (global Assert_failure/28!)
                                                                  [0:
                                                                   "src/lr1.ml"
                                                                   1072 10]))
                                                              (field_imm 0
                                                                *match*/7880)))
                                                        t/2501 =
                                                          (apply
                                                            (field_imm 7
                                                              (field_imm 0
                                                                (global Dune__exe__Grammar!)))
                                                            nt/2497))
                                                       (apply f/2492
                                                         prod/2494 state/2495
                                                         nt/2497 t/2501
                                                         accu/2496)))
                                                   (field_imm 4
                                                     (global Dune__exe__Lr1!))
                                                   accu/2493)))
                                            (setfield_ptr(root-init) 5
                                              (global Dune__exe__Lr1!)
                                              fold_entry/2490))
                                          (let
                                            (entry_of_nt/2504 =
                                               (function nt/2506 : int
                                                 (try
                                                   (apply
                                                     (field_imm 2
                                                       (field_imm 9
                                                         (global Dune__exe__Grammar!)))
                                                     (apply
                                                       (field_imm 21
                                                         (field_imm 8
                                                           (global Dune__exe__Grammar!)))
                                                       nt/2506)
                                                     (field_imm 4
                                                       (global Dune__exe__Lr1!)))
                                                  with exn/7882
                                                   (if
                                                     (== exn/7882
                                                       (field_imm 7
                                                         (global Stdlib!)))
                                                     (raise
                                                       (makeblock 0
                                                         (global Assert_failure/28!)
                                                         [0:
                                                          "src/lr1.ml" 1085 4]))
                                                     (reraise exn/7882)))))
                                            (setfield_ptr(root-init) 6
                                              (global Dune__exe__Lr1!)
                                              entry_of_nt/2504))
                                          (let
                                            (Found/2507 =
                                               (makeblock 248
                                                 "Dune__exe__Lr1.Found"
                                                 (caml_fresh_oo_id 0)))
                                            (setfield_ptr(root-init) 76
                                              (global Dune__exe__Lr1!)
                                              Found/2507))
                                          (let
                                            (nt_of_entry/2508 =
                                               (function s/2510[int]
                                                 (seq
                                                   (if
                                                     (==
                                                       (apply
                                                         (field_imm 13
                                                           (global Dune__exe__Lr1!))
                                                         s/2510)
                                                       0)
                                                     0
                                                     (raise
                                                       (makeblock 0
                                                         (global Assert_failure/28!)
                                                         [0:
                                                          "src/lr1.ml" 1091 2])))
                                                   (try
                                                     (seq
                                                       (apply
                                                         (field_imm 18
                                                           (field_imm 9
                                                             (global Dune__exe__Grammar!)))
                                                         (function prod/2511
                                                           entry/2512[int]
                                                           : int
                                                           (if
                                                             (==
                                                               (apply
                                                                 (field_imm 0
                                                                   (field_imm 0
                                                                    (global Dune__exe__Lr1!)))
                                                                 s/2510
                                                                 entry/2512)
                                                               0)
                                                             (let
                                                               (*match*/7885 =
                                                                  (apply
                                                                    (field_imm 25
                                                                    (field_imm 8
                                                                    (global Dune__exe__Grammar!)))
                                                                    prod/2511))
                                                               (if
                                                                 (isint
                                                                   *match*/7885)
                                                                 (raise
                                                                   (makeblock 0
                                                                    (global Assert_failure/28!)
                                                                    [0:
                                                                    "src/lr1.ml"
                                                                    1097 12]))
                                                                 (raise
                                                                   (makeblock 0
                                                                    (field_imm 76
                                                                    (global Dune__exe__Lr1!))
                                                                    (field_imm 0
                                                                    *match*/7885)))))
                                                             0))
                                                         (field_imm 4
                                                           (global Dune__exe__Lr1!)))
                                                       (raise
                                                         (makeblock 0
                                                           (global Assert_failure/28!)
                                                           [0:
                                                            "src/lr1.ml" 1102
                                                            4])))
                                                    with exn/7883
                                                     (if
                                                       (==
                                                         (field_imm 0
                                                           exn/7883)
                                                         (field_imm 76
                                                           (global Dune__exe__Lr1!)))
                                                       (field_imm 1 exn/7883)
                                                       (reraise exn/7883))))))
                                            (setfield_ptr(root-init) 7
                                              (global Dune__exe__Lr1!)
                                              nt_of_entry/2508))
                                          0)))))))))))))))))))))
