[
  structure_item (src/partialGrammar.ml[14,1004+0]..[14,1004+11])
    Pstr_open Fresh
    module_expr (src/partialGrammar.ml[14,1004+5]..[14,1004+11])
      Pmod_ident "Syntax" (src/partialGrammar.ml[14,1004+5]..[14,1004+11])
  structure_item (src/partialGrammar.ml[15,1016+0]..[15,1016+14])
    Pstr_open Fresh
    module_expr (src/partialGrammar.ml[15,1016+5]..[15,1016+14])
      Pmod_ident "Positions" (src/partialGrammar.ml[15,1016+5]..[15,1016+14])
  structure_item (src/partialGrammar.ml[21,1211+0]..[153,5514+79])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[21,1211+4]..[21,1211+20])
          Ppat_var "join_declaration" (src/partialGrammar.ml[21,1211+4]..[21,1211+20])
        expression (src/partialGrammar.ml[21,1211+21]..[153,5514+79]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[21,1211+21]..[21,1211+29])
            Ppat_var "filename" (src/partialGrammar.ml[21,1211+21]..[21,1211+29])
          expression (src/partialGrammar.ml[21,1211+30]..[153,5514+79]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[21,1211+30]..[21,1211+49])
              Ppat_constraint
              pattern (src/partialGrammar.ml[21,1211+31]..[21,1211+38])
                Ppat_var "grammar" (src/partialGrammar.ml[21,1211+31]..[21,1211+38])
              core_type (src/partialGrammar.ml[21,1211+41]..[21,1211+48])
                Ptyp_constr "grammar" (src/partialGrammar.ml[21,1211+41]..[21,1211+48])
                []
            expression (src/partialGrammar.ml[21,1211+50]..[153,5514+79]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/partialGrammar.ml[21,1211+50]..[21,1211+54])
                Ppat_var "decl" (src/partialGrammar.ml[21,1211+50]..[21,1211+54])
              expression (src/partialGrammar.ml[22,1268+2]..[153,5514+79])
                Pexp_match
                expression (src/partialGrammar.ml[22,1268+8]..[22,1268+18])
                  Pexp_field
                  expression (src/partialGrammar.ml[22,1268+8]..[22,1268+12])
                    Pexp_ident "decl" (src/partialGrammar.ml[22,1268+8]..[22,1268+12])
                  "value" (src/partialGrammar.ml[22,1268+13]..[22,1268+18])
                [
                  <case>
                    pattern (src/partialGrammar.ml[28,1458+4]..[28,1458+14])
                      Ppat_construct "DCode" (src/partialGrammar.ml[28,1458+4]..[28,1458+9])
                      Some
                        []
                        pattern (src/partialGrammar.ml[28,1458+10]..[28,1458+14])
                          Ppat_var "code" (src/partialGrammar.ml[28,1458+10]..[28,1458+14])
                    expression (src/partialGrammar.ml[29,1476+6]..[29,1476+65])
                      Pexp_record
                      [
                        "p_preludes" (src/partialGrammar.ml[29,1476+21]..[29,1476+31])
                          expression (src/partialGrammar.ml[29,1476+34]..[29,1476+63])
                            Pexp_apply
                            expression (src/partialGrammar.ml[29,1476+53]..[29,1476+54])
                              Pexp_ident "@" (src/partialGrammar.ml[29,1476+53]..[29,1476+54])
                            [
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[29,1476+34]..[29,1476+52])
                                  Pexp_field
                                  expression (src/partialGrammar.ml[29,1476+34]..[29,1476+41])
                                    Pexp_ident "grammar" (src/partialGrammar.ml[29,1476+34]..[29,1476+41])
                                  "p_preludes" (src/partialGrammar.ml[29,1476+42]..[29,1476+52])
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[29,1476+55]..[29,1476+63])
                                  Pexp_construct "::" (src/partialGrammar.ml[29,1476+57]..[29,1476+63]) ghost
                                  Some
                                    expression (src/partialGrammar.ml[29,1476+57]..[29,1476+63]) ghost
                                      Pexp_tuple
                                      [
                                        expression (src/partialGrammar.ml[29,1476+57]..[29,1476+61])
                                          Pexp_ident "code" (src/partialGrammar.ml[29,1476+57]..[29,1476+61])
                                        expression (src/partialGrammar.ml[29,1476+62]..[29,1476+63]) ghost
                                          Pexp_construct "[]" (src/partialGrammar.ml[29,1476+62]..[29,1476+63]) ghost
                                          None
                                      ]
                            ]
                      ]
                      Some
                        expression (src/partialGrammar.ml[29,1476+8]..[29,1476+15])
                          Pexp_ident "grammar" (src/partialGrammar.ml[29,1476+8]..[29,1476+15])
                  <case>
                    pattern (src/partialGrammar.ml[30,1542+4]..[30,1542+41])
                      Ppat_construct "DParameter" (src/partialGrammar.ml[30,1542+4]..[30,1542+14])
                      Some
                        []
                        pattern (src/partialGrammar.ml[30,1542+15]..[30,1542+41])
                          Ppat_construct "Stretch.Declared" (src/partialGrammar.ml[30,1542+16]..[30,1542+32])
                          Some
                            []
                            pattern (src/partialGrammar.ml[30,1542+33]..[30,1542+40])
                              Ppat_var "stretch" (src/partialGrammar.ml[30,1542+33]..[30,1542+40])
                    expression (src/partialGrammar.ml[31,1587+6]..[31,1587+72])
                      Pexp_record
                      [
                        "p_parameters" (src/partialGrammar.ml[31,1587+21]..[31,1587+33])
                          expression (src/partialGrammar.ml[31,1587+36]..[31,1587+70])
                            Pexp_apply
                            expression (src/partialGrammar.ml[31,1587+57]..[31,1587+58])
                              Pexp_ident "@" (src/partialGrammar.ml[31,1587+57]..[31,1587+58])
                            [
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[31,1587+36]..[31,1587+56])
                                  Pexp_field
                                  expression (src/partialGrammar.ml[31,1587+36]..[31,1587+43])
                                    Pexp_ident "grammar" (src/partialGrammar.ml[31,1587+36]..[31,1587+43])
                                  "p_parameters" (src/partialGrammar.ml[31,1587+44]..[31,1587+56])
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[31,1587+59]..[31,1587+70])
                                  Pexp_construct "::" (src/partialGrammar.ml[31,1587+61]..[31,1587+70]) ghost
                                  Some
                                    expression (src/partialGrammar.ml[31,1587+61]..[31,1587+70]) ghost
                                      Pexp_tuple
                                      [
                                        expression (src/partialGrammar.ml[31,1587+61]..[31,1587+68])
                                          Pexp_ident "stretch" (src/partialGrammar.ml[31,1587+61]..[31,1587+68])
                                        expression (src/partialGrammar.ml[31,1587+69]..[31,1587+70]) ghost
                                          Pexp_construct "[]" (src/partialGrammar.ml[31,1587+69]..[31,1587+70]) ghost
                                          None
                                      ]
                            ]
                      ]
                      Some
                        expression (src/partialGrammar.ml[31,1587+8]..[31,1587+15])
                          Pexp_ident "grammar" (src/partialGrammar.ml[31,1587+8]..[31,1587+15])
                  <case>
                    pattern (src/partialGrammar.ml[32,1660+4]..[32,1660+35])
                      Ppat_construct "DParameter" (src/partialGrammar.ml[32,1660+4]..[32,1660+14])
                      Some
                        []
                        pattern (src/partialGrammar.ml[32,1660+15]..[32,1660+35])
                          Ppat_construct "Stretch.Inferred" (src/partialGrammar.ml[32,1660+16]..[32,1660+32])
                          Some
                            []
                            pattern (src/partialGrammar.ml[32,1660+33]..[32,1660+34])
                              Ppat_any
                    expression (src/partialGrammar.ml[33,1699+6]..[33,1699+18])
                      Pexp_assert
                      expression (src/partialGrammar.ml[33,1699+13]..[33,1699+18])
                        Pexp_construct "false" (src/partialGrammar.ml[33,1699+13]..[33,1699+18])
                        None
                  <case>
                    pattern (src/partialGrammar.ml[41,1965+4]..[41,1965+51])
                      Ppat_construct "DToken" (src/partialGrammar.ml[41,1965+4]..[41,1965+10])
                      Some
                        []
                        pattern (src/partialGrammar.ml[41,1965+11]..[41,1965+51])
                          Ppat_tuple
                          [
                            pattern (src/partialGrammar.ml[41,1965+12]..[41,1965+21])
                              Ppat_var "ocamltype" (src/partialGrammar.ml[41,1965+12]..[41,1965+21])
                            pattern (src/partialGrammar.ml[41,1965+23]..[41,1965+31])
                              Ppat_var "terminal" (src/partialGrammar.ml[41,1965+23]..[41,1965+31])
                            pattern (src/partialGrammar.ml[41,1965+33]..[41,1965+38])
                              Ppat_var "alias" (src/partialGrammar.ml[41,1965+33]..[41,1965+38])
                            pattern (src/partialGrammar.ml[41,1965+40]..[41,1965+50])
                              Ppat_var "attributes" (src/partialGrammar.ml[41,1965+40]..[41,1965+50])
                          ]
                    expression (src/partialGrammar.ml[42,2020+6]..[87,3381+75])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/partialGrammar.ml[42,2020+10]..[42,2020+24])
                            Ppat_var "token_property" (src/partialGrammar.ml[42,2020+10]..[42,2020+24])
                          expression (src/partialGrammar.ml[43,2047+8]..[83,3338+11])
                            Pexp_try
                            expression (src/partialGrammar.ml[47,2126+10]..[68,2877+11])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/partialGrammar.ml[47,2126+14]..[47,2126+28])
                                    Ppat_var "token_property" (src/partialGrammar.ml[47,2126+14]..[47,2126+28])
                                  expression (src/partialGrammar.ml[48,2157+12]..[48,2157+52])
                                    Pexp_apply
                                    expression (src/partialGrammar.ml[48,2157+12]..[48,2157+26])
                                      Pexp_ident "StringMap.find" (src/partialGrammar.ml[48,2157+12]..[48,2157+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/partialGrammar.ml[48,2157+27]..[48,2157+35])
                                          Pexp_ident "terminal" (src/partialGrammar.ml[48,2157+27]..[48,2157+35])
                                      <arg>
                                      Nolabel
                                        expression (src/partialGrammar.ml[48,2157+36]..[48,2157+52])
                                          Pexp_field
                                          expression (src/partialGrammar.ml[48,2157+36]..[48,2157+43])
                                            Pexp_ident "grammar" (src/partialGrammar.ml[48,2157+36]..[48,2157+43])
                                          "p_tokens" (src/partialGrammar.ml[48,2157+44]..[48,2157+52])
                                    ]
                              ]
                              expression (src/partialGrammar.ml[55,2406+10]..[68,2877+11])
                                Pexp_sequence
                                expression (src/partialGrammar.ml[55,2406+10]..[57,2484+63])
                                  Pexp_ifthenelse
                                  expression (src/partialGrammar.ml[55,2406+13]..[55,2406+42])
                                    Pexp_field
                                    expression (src/partialGrammar.ml[55,2406+13]..[55,2406+27])
                                      Pexp_ident "token_property" (src/partialGrammar.ml[55,2406+13]..[55,2406+27])
                                    "tk_is_declared" (src/partialGrammar.ml[55,2406+28]..[55,2406+42])
                                  expression (src/partialGrammar.ml[56,2454+12]..[57,2484+63])
                                    Pexp_apply
                                    expression (src/partialGrammar.ml[56,2454+12]..[56,2454+24])
                                      Pexp_ident "Error.errorp" (src/partialGrammar.ml[56,2454+12]..[56,2454+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/partialGrammar.ml[56,2454+25]..[56,2454+29])
                                          Pexp_ident "decl" (src/partialGrammar.ml[56,2454+25]..[56,2454+29])
                                      <arg>
                                      Nolabel
                                        expression (src/partialGrammar.ml[57,2484+14]..[57,2484+54])
                                          Pexp_constant PConst_string("the token %s has multiple definitions.",(src/partialGrammar.ml[57,2484+15]..[57,2484+53]),None)
                                      <arg>
                                      Nolabel
                                        expression (src/partialGrammar.ml[57,2484+55]..[57,2484+63])
                                          Pexp_ident "terminal" (src/partialGrammar.ml[57,2484+55]..[57,2484+63])
                                    ]
                                  None
                                expression (src/partialGrammar.ml[61,2610+10]..[68,2877+11])
                                  Pexp_record
                                  [
                                    "tk_is_declared" (src/partialGrammar.ml[62,2642+12]..[62,2642+26])
                                      expression (src/partialGrammar.ml[62,2642+29]..[62,2642+33])
                                        Pexp_construct "true" (src/partialGrammar.ml[62,2642+29]..[62,2642+33])
                                        None
                                    "tk_ocamltype" (src/partialGrammar.ml[63,2677+12]..[63,2677+24])
                                      expression (src/partialGrammar.ml[63,2677+29]..[63,2677+38])
                                        Pexp_ident "ocamltype" (src/partialGrammar.ml[63,2677+29]..[63,2677+38])
                                    "tk_filename" (src/partialGrammar.ml[64,2717+12]..[64,2717+23])
                                      expression (src/partialGrammar.ml[64,2717+29]..[64,2717+37])
                                        Pexp_ident "filename" (src/partialGrammar.ml[64,2717+29]..[64,2717+37])
                                    "tk_position" (src/partialGrammar.ml[65,2756+12]..[65,2756+23])
                                      expression (src/partialGrammar.ml[65,2756+29]..[65,2756+42])
                                        Pexp_field
                                        expression (src/partialGrammar.ml[65,2756+29]..[65,2756+33])
                                          Pexp_ident "decl" (src/partialGrammar.ml[65,2756+29]..[65,2756+33])
                                        "position" (src/partialGrammar.ml[65,2756+34]..[65,2756+42])
                                    "tk_attributes" (src/partialGrammar.ml[66,2800+12]..[66,2800+25])
                                      expression (src/partialGrammar.ml[66,2800+29]..[66,2800+39])
                                        Pexp_ident "attributes" (src/partialGrammar.ml[66,2800+29]..[66,2800+39])
                                    "tk_alias" (src/partialGrammar.ml[67,2841+12]..[67,2841+20])
                                      expression (src/partialGrammar.ml[67,2841+29]..[67,2841+34])
                                        Pexp_ident "alias" (src/partialGrammar.ml[67,2841+29]..[67,2841+34])
                                  ]
                                  Some
                                    expression (src/partialGrammar.ml[61,2610+12]..[61,2610+26])
                                      Pexp_ident "token_property" (src/partialGrammar.ml[61,2610+12]..[61,2610+26])
                            [
                              <case>
                                pattern (src/partialGrammar.ml[70,2890+13]..[70,2890+22])
                                  Ppat_construct "Not_found" (src/partialGrammar.ml[70,2890+13]..[70,2890+22])
                                  None
                                expression (src/partialGrammar.ml[74,2980+10]..[83,3338+11])
                                  Pexp_record
                                  [
                                    "tk_filename" (src/partialGrammar.ml[75,2992+12]..[75,2992+23])
                                      expression (src/partialGrammar.ml[75,2992+31]..[75,2992+39])
                                        Pexp_ident "filename" (src/partialGrammar.ml[75,2992+31]..[75,2992+39])
                                    "tk_ocamltype" (src/partialGrammar.ml[76,3033+12]..[76,3033+24])
                                      expression (src/partialGrammar.ml[76,3033+31]..[76,3033+40])
                                        Pexp_ident "ocamltype" (src/partialGrammar.ml[76,3033+31]..[76,3033+40])
                                    "tk_associativity" (src/partialGrammar.ml[77,3075+12]..[77,3075+28])
                                      expression (src/partialGrammar.ml[77,3075+31]..[77,3075+45])
                                        Pexp_construct "UndefinedAssoc" (src/partialGrammar.ml[77,3075+31]..[77,3075+45])
                                        None
                                    "tk_precedence" (src/partialGrammar.ml[78,3122+12]..[78,3122+25])
                                      expression (src/partialGrammar.ml[78,3122+31]..[78,3122+50])
                                        Pexp_construct "UndefinedPrecedence" (src/partialGrammar.ml[78,3122+31]..[78,3122+50])
                                        None
                                    "tk_position" (src/partialGrammar.ml[79,3174+12]..[79,3174+23])
                                      expression (src/partialGrammar.ml[79,3174+31]..[79,3174+44])
                                        Pexp_field
                                        expression (src/partialGrammar.ml[79,3174+31]..[79,3174+35])
                                          Pexp_ident "decl" (src/partialGrammar.ml[79,3174+31]..[79,3174+35])
                                        "position" (src/partialGrammar.ml[79,3174+36]..[79,3174+44])
                                    "tk_attributes" (src/partialGrammar.ml[80,3220+12]..[80,3220+25])
                                      expression (src/partialGrammar.ml[80,3220+31]..[80,3220+41])
                                        Pexp_ident "attributes" (src/partialGrammar.ml[80,3220+31]..[80,3220+41])
                                    "tk_is_declared" (src/partialGrammar.ml[81,3263+12]..[81,3263+26])
                                      expression (src/partialGrammar.ml[81,3263+31]..[81,3263+35])
                                        Pexp_construct "true" (src/partialGrammar.ml[81,3263+31]..[81,3263+35])
                                        None
                                    "tk_alias" (src/partialGrammar.ml[82,3300+12]..[82,3300+20])
                                      expression (src/partialGrammar.ml[82,3300+31]..[82,3300+36])
                                        Pexp_ident "alias" (src/partialGrammar.ml[82,3300+31]..[82,3300+36])
                                  ]
                                  None
                            ]
                      ]
                      expression (src/partialGrammar.ml[86,3360+6]..[87,3381+75])
                        Pexp_record
                        [
                          "p_tokens" (src/partialGrammar.ml[87,3381+8]..[87,3381+16])
                            expression (src/partialGrammar.ml[87,3381+19]..[87,3381+73])
                              Pexp_apply
                              expression (src/partialGrammar.ml[87,3381+19]..[87,3381+32])
                                Pexp_ident "StringMap.add" (src/partialGrammar.ml[87,3381+19]..[87,3381+32])
                              [
                                <arg>
                                Nolabel
                                  expression (src/partialGrammar.ml[87,3381+33]..[87,3381+41])
                                    Pexp_ident "terminal" (src/partialGrammar.ml[87,3381+33]..[87,3381+41])
                                <arg>
                                Nolabel
                                  expression (src/partialGrammar.ml[87,3381+42]..[87,3381+56])
                                    Pexp_ident "token_property" (src/partialGrammar.ml[87,3381+42]..[87,3381+56])
                                <arg>
                                Nolabel
                                  expression (src/partialGrammar.ml[87,3381+57]..[87,3381+73])
                                    Pexp_field
                                    expression (src/partialGrammar.ml[87,3381+57]..[87,3381+64])
                                      Pexp_ident "grammar" (src/partialGrammar.ml[87,3381+57]..[87,3381+64])
                                    "p_tokens" (src/partialGrammar.ml[87,3381+65]..[87,3381+73])
                              ]
                        ]
                        Some
                          expression (src/partialGrammar.ml[86,3360+8]..[86,3360+15])
                            Pexp_ident "grammar" (src/partialGrammar.ml[86,3360+8]..[86,3360+15])
                  <case>
                    pattern (src/partialGrammar.ml[91,3482+4]..[91,3482+22])
                      Ppat_construct "DStart" (src/partialGrammar.ml[91,3482+4]..[91,3482+10])
                      Some
                        []
                        pattern (src/partialGrammar.ml[91,3482+11]..[91,3482+22])
                          Ppat_var "nonterminal" (src/partialGrammar.ml[91,3482+11]..[91,3482+22])
                    expression (src/partialGrammar.ml[92,3508+6]..[93,3529+91])
                      Pexp_record
                      [
                        "p_start_symbols" (src/partialGrammar.ml[93,3529+8]..[93,3529+23])
                          expression (src/partialGrammar.ml[93,3529+26]..[93,3529+89])
                            Pexp_apply
                            expression (src/partialGrammar.ml[93,3529+26]..[93,3529+39])
                              Pexp_ident "StringMap.add" (src/partialGrammar.ml[93,3529+26]..[93,3529+39])
                            [
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[93,3529+40]..[93,3529+51])
                                  Pexp_ident "nonterminal" (src/partialGrammar.ml[93,3529+40]..[93,3529+51])
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[93,3529+52]..[93,3529+65])
                                  Pexp_field
                                  expression (src/partialGrammar.ml[93,3529+52]..[93,3529+56])
                                    Pexp_ident "decl" (src/partialGrammar.ml[93,3529+52]..[93,3529+56])
                                  "position" (src/partialGrammar.ml[93,3529+57]..[93,3529+65])
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[93,3529+66]..[93,3529+89])
                                  Pexp_field
                                  expression (src/partialGrammar.ml[93,3529+66]..[93,3529+73])
                                    Pexp_ident "grammar" (src/partialGrammar.ml[93,3529+66]..[93,3529+73])
                                  "p_start_symbols" (src/partialGrammar.ml[93,3529+74]..[93,3529+89])
                            ]
                      ]
                      Some
                        expression (src/partialGrammar.ml[92,3508+8]..[92,3508+15])
                          Pexp_ident "grammar" (src/partialGrammar.ml[92,3508+8]..[92,3508+15])
                  <case>
                    pattern (src/partialGrammar.ml[97,3667+4]..[97,3667+34])
                      Ppat_construct "DType" (src/partialGrammar.ml[97,3667+4]..[97,3667+9])
                      Some
                        []
                        pattern (src/partialGrammar.ml[97,3667+10]..[97,3667+34])
                          Ppat_tuple
                          [
                            pattern (src/partialGrammar.ml[97,3667+11]..[97,3667+20])
                              Ppat_var "ocamltype" (src/partialGrammar.ml[97,3667+11]..[97,3667+20])
                            pattern (src/partialGrammar.ml[97,3667+22]..[97,3667+33])
                              Ppat_var "nonterminal" (src/partialGrammar.ml[97,3667+22]..[97,3667+33])
                          ]
                    expression (src/partialGrammar.ml[98,3705+6]..[99,3726+88])
                      Pexp_record
                      [
                        "p_types" (src/partialGrammar.ml[99,3726+10]..[99,3726+17])
                          expression (src/partialGrammar.ml[99,3726+20]..[99,3726+86])
                            Pexp_construct "::" (src/partialGrammar.ml[99,3726+69]..[99,3726+71])
                            Some
                              expression (src/partialGrammar.ml[99,3726+20]..[99,3726+86]) ghost
                                Pexp_tuple
                                [
                                  expression (src/partialGrammar.ml[99,3726+20]..[99,3726+69])
                                    Pexp_tuple
                                    [
                                      expression (src/partialGrammar.ml[99,3726+21]..[99,3726+32])
                                        Pexp_ident "nonterminal" (src/partialGrammar.ml[99,3726+21]..[99,3726+32])
                                      expression (src/partialGrammar.ml[99,3726+34]..[99,3726+68])
                                        Pexp_apply
                                        expression (src/partialGrammar.ml[99,3726+34]..[99,3726+42])
                                          Pexp_ident "with_pos" (src/partialGrammar.ml[99,3726+34]..[99,3726+42])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/partialGrammar.ml[99,3726+43]..[99,3726+58])
                                              Pexp_apply
                                              expression (src/partialGrammar.ml[99,3726+44]..[99,3726+52])
                                                Pexp_ident "position" (src/partialGrammar.ml[99,3726+44]..[99,3726+52])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/partialGrammar.ml[99,3726+53]..[99,3726+57])
                                                    Pexp_ident "decl" (src/partialGrammar.ml[99,3726+53]..[99,3726+57])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (src/partialGrammar.ml[99,3726+59]..[99,3726+68])
                                              Pexp_ident "ocamltype" (src/partialGrammar.ml[99,3726+59]..[99,3726+68])
                                        ]
                                    ]
                                  expression (src/partialGrammar.ml[99,3726+71]..[99,3726+86])
                                    Pexp_field
                                    expression (src/partialGrammar.ml[99,3726+71]..[99,3726+78])
                                      Pexp_ident "grammar" (src/partialGrammar.ml[99,3726+71]..[99,3726+78])
                                    "p_types" (src/partialGrammar.ml[99,3726+79]..[99,3726+86])
                                ]
                      ]
                      Some
                        expression (src/partialGrammar.ml[98,3705+8]..[98,3705+15])
                          Pexp_ident "grammar" (src/partialGrammar.ml[98,3705+8]..[98,3705+15])
                  <case>
                    pattern (src/partialGrammar.ml[103,3863+4]..[103,3863+38])
                      Ppat_construct "DOnErrorReduce" (src/partialGrammar.ml[103,3863+4]..[103,3863+18])
                      Some
                        []
                        pattern (src/partialGrammar.ml[103,3863+19]..[103,3863+38])
                          Ppat_tuple
                          [
                            pattern (src/partialGrammar.ml[103,3863+20]..[103,3863+31])
                              Ppat_var "nonterminal" (src/partialGrammar.ml[103,3863+20]..[103,3863+31])
                            pattern (src/partialGrammar.ml[103,3863+33]..[103,3863+37])
                              Ppat_var "prec" (src/partialGrammar.ml[103,3863+33]..[103,3863+37])
                          ]
                    expression (src/partialGrammar.ml[104,3905+6]..[105,3926+78])
                      Pexp_record
                      [
                        "p_on_error_reduce" (src/partialGrammar.ml[105,3926+8]..[105,3926+25])
                          expression (src/partialGrammar.ml[105,3926+28]..[105,3926+76])
                            Pexp_construct "::" (src/partialGrammar.ml[105,3926+48]..[105,3926+50])
                            Some
                              expression (src/partialGrammar.ml[105,3926+28]..[105,3926+76]) ghost
                                Pexp_tuple
                                [
                                  expression (src/partialGrammar.ml[105,3926+28]..[105,3926+47])
                                    Pexp_tuple
                                    [
                                      expression (src/partialGrammar.ml[105,3926+29]..[105,3926+40])
                                        Pexp_ident "nonterminal" (src/partialGrammar.ml[105,3926+29]..[105,3926+40])
                                      expression (src/partialGrammar.ml[105,3926+42]..[105,3926+46])
                                        Pexp_ident "prec" (src/partialGrammar.ml[105,3926+42]..[105,3926+46])
                                    ]
                                  expression (src/partialGrammar.ml[105,3926+51]..[105,3926+76])
                                    Pexp_field
                                    expression (src/partialGrammar.ml[105,3926+51]..[105,3926+58])
                                      Pexp_ident "grammar" (src/partialGrammar.ml[105,3926+51]..[105,3926+58])
                                    "p_on_error_reduce" (src/partialGrammar.ml[105,3926+59]..[105,3926+76])
                                ]
                      ]
                      Some
                        expression (src/partialGrammar.ml[104,3905+8]..[104,3905+15])
                          Pexp_ident "grammar" (src/partialGrammar.ml[104,3905+8]..[104,3905+15])
                  <case>
                    pattern (src/partialGrammar.ml[109,4051+4]..[109,4051+44])
                      Ppat_construct "DTokenProperties" (src/partialGrammar.ml[109,4051+4]..[109,4051+20])
                      Some
                        []
                        pattern (src/partialGrammar.ml[109,4051+21]..[109,4051+44])
                          Ppat_tuple
                          [
                            pattern (src/partialGrammar.ml[109,4051+22]..[109,4051+30])
                              Ppat_var "terminal" (src/partialGrammar.ml[109,4051+22]..[109,4051+30])
                            pattern (src/partialGrammar.ml[109,4051+32]..[109,4051+37])
                              Ppat_var "assoc" (src/partialGrammar.ml[109,4051+32]..[109,4051+37])
                            pattern (src/partialGrammar.ml[109,4051+39]..[109,4051+43])
                              Ppat_var "prec" (src/partialGrammar.ml[109,4051+39]..[109,4051+43])
                          ]
                    expression (src/partialGrammar.ml[115,4260+6]..[145,5314+13])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/partialGrammar.ml[115,4260+10]..[115,4260+35])
                            Ppat_tuple
                            [
                              pattern (src/partialGrammar.ml[115,4260+10]..[115,4260+26])
                                Ppat_var "token_properties" (src/partialGrammar.ml[115,4260+10]..[115,4260+26])
                              pattern (src/partialGrammar.ml[115,4260+28]..[115,4260+35])
                                Ppat_var "grammar" (src/partialGrammar.ml[115,4260+28]..[115,4260+35])
                            ]
                          expression (src/partialGrammar.ml[116,4298+8]..[131,4818+69])
                            Pexp_try
                            expression (src/partialGrammar.ml[117,4310+10]..[117,4310+59])
                              Pexp_tuple
                              [
                                expression (src/partialGrammar.ml[117,4310+10]..[117,4310+50])
                                  Pexp_apply
                                  expression (src/partialGrammar.ml[117,4310+10]..[117,4310+24])
                                    Pexp_ident "StringMap.find" (src/partialGrammar.ml[117,4310+10]..[117,4310+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/partialGrammar.ml[117,4310+25]..[117,4310+33])
                                        Pexp_ident "terminal" (src/partialGrammar.ml[117,4310+25]..[117,4310+33])
                                    <arg>
                                    Nolabel
                                      expression (src/partialGrammar.ml[117,4310+34]..[117,4310+50])
                                        Pexp_field
                                        expression (src/partialGrammar.ml[117,4310+34]..[117,4310+41])
                                          Pexp_ident "grammar" (src/partialGrammar.ml[117,4310+34]..[117,4310+41])
                                        "p_tokens" (src/partialGrammar.ml[117,4310+42]..[117,4310+50])
                                  ]
                                expression (src/partialGrammar.ml[117,4310+52]..[117,4310+59])
                                  Pexp_ident "grammar" (src/partialGrammar.ml[117,4310+52]..[117,4310+59])
                              ]
                            [
                              <case>
                                pattern (src/partialGrammar.ml[118,4370+13]..[118,4370+22])
                                  Ppat_construct "Not_found" (src/partialGrammar.ml[118,4370+13]..[118,4370+22])
                                  None
                                expression (src/partialGrammar.ml[119,4396+10]..[131,4818+69])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/partialGrammar.ml[119,4396+14]..[119,4396+15])
                                        Ppat_var "p" (src/partialGrammar.ml[119,4396+14]..[119,4396+15])
                                      expression (src/partialGrammar.ml[119,4396+18]..[129,4775+11])
                                        Pexp_record
                                        [
                                          "tk_filename" (src/partialGrammar.ml[120,4416+12]..[120,4416+23])
                                            expression (src/partialGrammar.ml[120,4416+31]..[120,4416+39])
                                              Pexp_ident "filename" (src/partialGrammar.ml[120,4416+31]..[120,4416+39])
                                          "tk_ocamltype" (src/partialGrammar.ml[121,4457+12]..[121,4457+24])
                                            expression (src/partialGrammar.ml[121,4457+31]..[121,4457+35])
                                              Pexp_construct "None" (src/partialGrammar.ml[121,4457+31]..[121,4457+35])
                                              None
                                          "tk_associativity" (src/partialGrammar.ml[122,4494+12]..[122,4494+28])
                                            expression (src/partialGrammar.ml[122,4494+31]..[122,4494+45])
                                              Pexp_construct "UndefinedAssoc" (src/partialGrammar.ml[122,4494+31]..[122,4494+45])
                                              None
                                          "tk_precedence" (src/partialGrammar.ml[123,4541+12]..[123,4541+25])
                                            expression (src/partialGrammar.ml[123,4541+31]..[123,4541+35])
                                              Pexp_ident "prec" (src/partialGrammar.ml[123,4541+31]..[123,4541+35])
                                          "tk_is_declared" (src/partialGrammar.ml[124,4578+12]..[124,4578+26])
                                            expression (src/partialGrammar.ml[124,4578+31]..[124,4578+36])
                                              Pexp_construct "false" (src/partialGrammar.ml[124,4578+31]..[124,4578+36])
                                              None
                                          "tk_attributes" (src/partialGrammar.ml[125,4616+12]..[125,4616+25])
                                            expression (src/partialGrammar.ml[125,4616+31]..[125,4616+33])
                                              Pexp_construct "[]" (src/partialGrammar.ml[125,4616+31]..[125,4616+33])
                                              None
                                          "tk_alias" (src/partialGrammar.ml[126,4651+12]..[126,4651+20])
                                            expression (src/partialGrammar.ml[126,4651+31]..[126,4651+35])
                                              Pexp_construct "None" (src/partialGrammar.ml[126,4651+31]..[126,4651+35])
                                              None
                                          "tk_position" (src/partialGrammar.ml[128,4729+12]..[128,4729+23])
                                            expression (src/partialGrammar.ml[128,4729+31]..[128,4729+44])
                                              Pexp_field
                                              expression (src/partialGrammar.ml[128,4729+31]..[128,4729+35])
                                                Pexp_ident "decl" (src/partialGrammar.ml[128,4729+31]..[128,4729+35])
                                              "position" (src/partialGrammar.ml[128,4729+36]..[128,4729+44])
                                        ]
                                        None
                                  ]
                                  expression (src/partialGrammar.ml[130,4790+10]..[131,4818+69])
                                    Pexp_tuple
                                    [
                                      expression (src/partialGrammar.ml[130,4790+10]..[130,4790+11])
                                        Pexp_ident "p" (src/partialGrammar.ml[130,4790+10]..[130,4790+11])
                                      expression (src/partialGrammar.ml[130,4790+13]..[131,4818+69])
                                        Pexp_record
                                        [
                                          "p_tokens" (src/partialGrammar.ml[131,4818+15]..[131,4818+23])
                                            expression (src/partialGrammar.ml[131,4818+26]..[131,4818+67])
                                              Pexp_apply
                                              expression (src/partialGrammar.ml[131,4818+26]..[131,4818+39])
                                                Pexp_ident "StringMap.add" (src/partialGrammar.ml[131,4818+26]..[131,4818+39])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/partialGrammar.ml[131,4818+40]..[131,4818+48])
                                                    Pexp_ident "terminal" (src/partialGrammar.ml[131,4818+40]..[131,4818+48])
                                                <arg>
                                                Nolabel
                                                  expression (src/partialGrammar.ml[131,4818+49]..[131,4818+50])
                                                    Pexp_ident "p" (src/partialGrammar.ml[131,4818+49]..[131,4818+50])
                                                <arg>
                                                Nolabel
                                                  expression (src/partialGrammar.ml[131,4818+51]..[131,4818+67])
                                                    Pexp_field
                                                    expression (src/partialGrammar.ml[131,4818+51]..[131,4818+58])
                                                      Pexp_ident "grammar" (src/partialGrammar.ml[131,4818+51]..[131,4818+58])
                                                    "p_tokens" (src/partialGrammar.ml[131,4818+59]..[131,4818+67])
                                              ]
                                        ]
                                        Some
                                          expression (src/partialGrammar.ml[130,4790+15]..[130,4790+22])
                                            Pexp_ident "grammar" (src/partialGrammar.ml[130,4790+15]..[130,4790+22])
                                    ]
                            ]
                      ]
                      expression (src/partialGrammar.ml[136,4953+6]..[145,5314+13])
                        Pexp_sequence
                        expression (src/partialGrammar.ml[136,4953+6]..[139,5097+77])
                          Pexp_ifthenelse
                          expression (src/partialGrammar.ml[136,4953+9]..[136,4953+60])
                            Pexp_apply
                            expression (src/partialGrammar.ml[136,4953+43]..[136,4953+45])
                              Pexp_ident "<>" (src/partialGrammar.ml[136,4953+43]..[136,4953+45])
                            [
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[136,4953+9]..[136,4953+42])
                                  Pexp_field
                                  expression (src/partialGrammar.ml[136,4953+9]..[136,4953+25])
                                    Pexp_ident "token_properties" (src/partialGrammar.ml[136,4953+9]..[136,4953+25])
                                  "tk_associativity" (src/partialGrammar.ml[136,4953+26]..[136,4953+42])
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[136,4953+46]..[136,4953+60])
                                  Pexp_construct "UndefinedAssoc" (src/partialGrammar.ml[136,4953+46]..[136,4953+60])
                                  None
                            ]
                          expression (src/partialGrammar.ml[137,5019+8]..[139,5097+77])
                            Pexp_apply
                            expression (src/partialGrammar.ml[137,5019+8]..[137,5019+19])
                              Pexp_ident "Error.error" (src/partialGrammar.ml[137,5019+8]..[137,5019+19])
                            [
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[138,5039+10]..[138,5039+57])
                                  Pexp_construct "::" (src/partialGrammar.ml[138,5039+12]..[138,5039+57]) ghost
                                  Some
                                    expression (src/partialGrammar.ml[138,5039+12]..[138,5039+57]) ghost
                                      Pexp_tuple
                                      [
                                        expression (src/partialGrammar.ml[138,5039+12]..[138,5039+25])
                                          Pexp_field
                                          expression (src/partialGrammar.ml[138,5039+12]..[138,5039+16])
                                            Pexp_ident "decl" (src/partialGrammar.ml[138,5039+12]..[138,5039+16])
                                          "position" (src/partialGrammar.ml[138,5039+17]..[138,5039+25])
                                        expression (src/partialGrammar.ml[138,5039+27]..[138,5039+57]) ghost
                                          Pexp_construct "::" (src/partialGrammar.ml[138,5039+27]..[138,5039+57]) ghost
                                          Some
                                            expression (src/partialGrammar.ml[138,5039+27]..[138,5039+57]) ghost
                                              Pexp_tuple
                                              [
                                                expression (src/partialGrammar.ml[138,5039+27]..[138,5039+55])
                                                  Pexp_field
                                                  expression (src/partialGrammar.ml[138,5039+27]..[138,5039+43])
                                                    Pexp_ident "token_properties" (src/partialGrammar.ml[138,5039+27]..[138,5039+43])
                                                  "tk_position" (src/partialGrammar.ml[138,5039+44]..[138,5039+55])
                                                expression (src/partialGrammar.ml[138,5039+56]..[138,5039+57]) ghost
                                                  Pexp_construct "[]" (src/partialGrammar.ml[138,5039+56]..[138,5039+57]) ghost
                                                  None
                                              ]
                                      ]
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[139,5097+10]..[139,5097+68])
                                  Pexp_constant PConst_string("there are multiple precedence declarations for token %s.",(src/partialGrammar.ml[139,5097+11]..[139,5097+67]),None)
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[139,5097+69]..[139,5097+77])
                                  Pexp_ident "terminal" (src/partialGrammar.ml[139,5097+69]..[139,5097+77])
                            ]
                          None
                        expression (src/partialGrammar.ml[143,5218+6]..[145,5314+13])
                          Pexp_sequence
                          expression (src/partialGrammar.ml[143,5218+6]..[143,5218+44])
                            Pexp_setfield
                            expression (src/partialGrammar.ml[143,5218+6]..[143,5218+22])
                              Pexp_ident "token_properties" (src/partialGrammar.ml[143,5218+6]..[143,5218+22])
                            "tk_precedence" (src/partialGrammar.ml[143,5218+23]..[143,5218+36])
                            expression (src/partialGrammar.ml[143,5218+40]..[143,5218+44])
                              Pexp_ident "prec" (src/partialGrammar.ml[143,5218+40]..[143,5218+44])
                          expression (src/partialGrammar.ml[144,5264+6]..[145,5314+13])
                            Pexp_sequence
                            expression (src/partialGrammar.ml[144,5264+6]..[144,5264+48])
                              Pexp_setfield
                              expression (src/partialGrammar.ml[144,5264+6]..[144,5264+22])
                                Pexp_ident "token_properties" (src/partialGrammar.ml[144,5264+6]..[144,5264+22])
                              "tk_associativity" (src/partialGrammar.ml[144,5264+23]..[144,5264+39])
                              expression (src/partialGrammar.ml[144,5264+43]..[144,5264+48])
                                Pexp_ident "assoc" (src/partialGrammar.ml[144,5264+43]..[144,5264+48])
                            expression (src/partialGrammar.ml[145,5314+6]..[145,5314+13])
                              Pexp_ident "grammar" (src/partialGrammar.ml[145,5314+6]..[145,5314+13])
                  <case>
                    pattern (src/partialGrammar.ml[147,5329+4]..[147,5329+26])
                      Ppat_construct "DGrammarAttribute" (src/partialGrammar.ml[147,5329+4]..[147,5329+21])
                      Some
                        []
                        pattern (src/partialGrammar.ml[147,5329+22]..[147,5329+26])
                          Ppat_var "attr" (src/partialGrammar.ml[147,5329+22]..[147,5329+26])
                    expression (src/partialGrammar.ml[148,5359+6]..[149,5380+69])
                      Pexp_record
                      [
                        "p_grammar_attributes" (src/partialGrammar.ml[149,5380+8]..[149,5380+28])
                          expression (src/partialGrammar.ml[149,5380+31]..[149,5380+67])
                            Pexp_construct "::" (src/partialGrammar.ml[149,5380+36]..[149,5380+38])
                            Some
                              expression (src/partialGrammar.ml[149,5380+31]..[149,5380+67]) ghost
                                Pexp_tuple
                                [
                                  expression (src/partialGrammar.ml[149,5380+31]..[149,5380+35])
                                    Pexp_ident "attr" (src/partialGrammar.ml[149,5380+31]..[149,5380+35])
                                  expression (src/partialGrammar.ml[149,5380+39]..[149,5380+67])
                                    Pexp_field
                                    expression (src/partialGrammar.ml[149,5380+39]..[149,5380+46])
                                      Pexp_ident "grammar" (src/partialGrammar.ml[149,5380+39]..[149,5380+46])
                                    "p_grammar_attributes" (src/partialGrammar.ml[149,5380+47]..[149,5380+67])
                                ]
                      ]
                      Some
                        expression (src/partialGrammar.ml[148,5359+8]..[148,5359+15])
                          Pexp_ident "grammar" (src/partialGrammar.ml[148,5359+8]..[148,5359+15])
                  <case>
                    pattern (src/partialGrammar.ml[151,5451+4]..[151,5451+38])
                      Ppat_construct "DSymbolAttributes" (src/partialGrammar.ml[151,5451+4]..[151,5451+21])
                      Some
                        []
                        pattern (src/partialGrammar.ml[151,5451+22]..[151,5451+38])
                          Ppat_tuple
                          [
                            pattern (src/partialGrammar.ml[151,5451+23]..[151,5451+30])
                              Ppat_var "actuals" (src/partialGrammar.ml[151,5451+23]..[151,5451+30])
                            pattern (src/partialGrammar.ml[151,5451+32]..[151,5451+37])
                              Ppat_var "attrs" (src/partialGrammar.ml[151,5451+32]..[151,5451+37])
                          ]
                    expression (src/partialGrammar.ml[152,5493+6]..[153,5514+79])
                      Pexp_record
                      [
                        "p_symbol_attributes" (src/partialGrammar.ml[153,5514+8]..[153,5514+27])
                          expression (src/partialGrammar.ml[153,5514+30]..[153,5514+77])
                            Pexp_construct "::" (src/partialGrammar.ml[153,5514+47]..[153,5514+49])
                            Some
                              expression (src/partialGrammar.ml[153,5514+30]..[153,5514+77]) ghost
                                Pexp_tuple
                                [
                                  expression (src/partialGrammar.ml[153,5514+30]..[153,5514+46])
                                    Pexp_tuple
                                    [
                                      expression (src/partialGrammar.ml[153,5514+31]..[153,5514+38])
                                        Pexp_ident "actuals" (src/partialGrammar.ml[153,5514+31]..[153,5514+38])
                                      expression (src/partialGrammar.ml[153,5514+40]..[153,5514+45])
                                        Pexp_ident "attrs" (src/partialGrammar.ml[153,5514+40]..[153,5514+45])
                                    ]
                                  expression (src/partialGrammar.ml[153,5514+50]..[153,5514+77])
                                    Pexp_field
                                    expression (src/partialGrammar.ml[153,5514+50]..[153,5514+57])
                                      Pexp_ident "grammar" (src/partialGrammar.ml[153,5514+50]..[153,5514+57])
                                    "p_symbol_attributes" (src/partialGrammar.ml[153,5514+58]..[153,5514+77])
                                ]
                      ]
                      Some
                        expression (src/partialGrammar.ml[152,5493+8]..[152,5493+15])
                          Pexp_ident "grammar" (src/partialGrammar.ml[152,5493+8]..[152,5493+15])
                ]
    ]
  structure_item (src/partialGrammar.ml[159,5778+0]..[164,5884+68])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[159,5778+4]..[159,5778+17])
          Ppat_var "join_postlude" (src/partialGrammar.ml[159,5778+4]..[159,5778+17])
        expression (src/partialGrammar.ml[159,5778+18]..[164,5884+68]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[159,5778+18]..[159,5778+26])
            Ppat_var "postlude" (src/partialGrammar.ml[159,5778+18]..[159,5778+26])
          expression (src/partialGrammar.ml[159,5778+27]..[164,5884+68]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[159,5778+27]..[159,5778+34])
              Ppat_var "grammar" (src/partialGrammar.ml[159,5778+27]..[159,5778+34])
            expression (src/partialGrammar.ml[160,5815+2]..[164,5884+68])
              Pexp_match
              expression (src/partialGrammar.ml[160,5815+8]..[160,5815+16])
                Pexp_ident "postlude" (src/partialGrammar.ml[160,5815+8]..[160,5815+16])
              [
                <case>
                  pattern (src/partialGrammar.ml[161,5837+4]..[161,5837+8])
                    Ppat_construct "None" (src/partialGrammar.ml[161,5837+4]..[161,5837+8])
                    None
                  expression (src/partialGrammar.ml[162,5849+6]..[162,5849+13])
                    Pexp_ident "grammar" (src/partialGrammar.ml[162,5849+6]..[162,5849+13])
                <case>
                  pattern (src/partialGrammar.ml[163,5863+4]..[163,5863+17])
                    Ppat_construct "Some" (src/partialGrammar.ml[163,5863+4]..[163,5863+8])
                    Some
                      []
                      pattern (src/partialGrammar.ml[163,5863+9]..[163,5863+17])
                        Ppat_var "postlude" (src/partialGrammar.ml[163,5863+9]..[163,5863+17])
                  expression (src/partialGrammar.ml[164,5884+6]..[164,5884+68])
                    Pexp_record
                    [
                      "p_postludes" (src/partialGrammar.ml[164,5884+21]..[164,5884+32])
                        expression (src/partialGrammar.ml[164,5884+35]..[164,5884+66])
                          Pexp_construct "::" (src/partialGrammar.ml[164,5884+44]..[164,5884+46])
                          Some
                            expression (src/partialGrammar.ml[164,5884+35]..[164,5884+66]) ghost
                              Pexp_tuple
                              [
                                expression (src/partialGrammar.ml[164,5884+35]..[164,5884+43])
                                  Pexp_ident "postlude" (src/partialGrammar.ml[164,5884+35]..[164,5884+43])
                                expression (src/partialGrammar.ml[164,5884+47]..[164,5884+66])
                                  Pexp_field
                                  expression (src/partialGrammar.ml[164,5884+47]..[164,5884+54])
                                    Pexp_ident "grammar" (src/partialGrammar.ml[164,5884+47]..[164,5884+54])
                                  "p_postludes" (src/partialGrammar.ml[164,5884+55]..[164,5884+66])
                              ]
                    ]
                    Some
                      expression (src/partialGrammar.ml[164,5884+8]..[164,5884+15])
                        Pexp_ident "grammar" (src/partialGrammar.ml[164,5884+8]..[164,5884+15])
              ]
    ]
  structure_item (src/partialGrammar.ml[170,6159+0]..[171,6175+35])
    Pstr_type Rec
    [
      type_declaration "renaming" (src/partialGrammar.ml[170,6159+5]..[170,6159+13]) (src/partialGrammar.ml[170,6159+0]..[171,6175+35])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/partialGrammar.ml[171,6175+3]..[171,6175+35])
              Ptyp_constr "list" (src/partialGrammar.ml[171,6175+31]..[171,6175+35])
              [
                core_type (src/partialGrammar.ml[171,6175+4]..[171,6175+29])
                  Ptyp_tuple
                  [
                    core_type (src/partialGrammar.ml[171,6175+4]..[171,6175+15])
                      Ptyp_constr "nonterminal" (src/partialGrammar.ml[171,6175+4]..[171,6175+15])
                      []
                    core_type (src/partialGrammar.ml[171,6175+18]..[171,6175+29])
                      Ptyp_constr "nonterminal" (src/partialGrammar.ml[171,6175+18]..[171,6175+29])
                      []
                  ]
              ]
    ]
  structure_item (src/partialGrammar.ml[173,6212+0]..[174,6236+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[173,6212+4]..[173,6212+21])
          Ppat_var "identity_renaming" (src/partialGrammar.ml[173,6212+4]..[173,6212+21])
        expression (src/partialGrammar.ml[174,6236+2]..[174,6236+4])
          Pexp_construct "[]" (src/partialGrammar.ml[174,6236+2]..[174,6236+4])
          None
    ]
  structure_item (src/partialGrammar.ml[176,6242+0]..[177,6297+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[176,6242+4]..[176,6242+23])
          Ppat_var "rewrite_nonterminal" (src/partialGrammar.ml[176,6242+4]..[176,6242+23])
        expression (src/partialGrammar.ml[176,6242+24]..[177,6297+36]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[176,6242+24]..[176,6242+40])
            Ppat_constraint
            pattern (src/partialGrammar.ml[176,6242+25]..[176,6242+28])
              Ppat_var "phi" (src/partialGrammar.ml[176,6242+25]..[176,6242+28])
            core_type (src/partialGrammar.ml[176,6242+31]..[176,6242+39])
              Ptyp_constr "renaming" (src/partialGrammar.ml[176,6242+31]..[176,6242+39])
              []
          expression (src/partialGrammar.ml[176,6242+41]..[177,6297+36]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[176,6242+41]..[176,6242+52])
              Ppat_var "nonterminal" (src/partialGrammar.ml[176,6242+41]..[176,6242+52])
            expression (src/partialGrammar.ml[177,6297+2]..[177,6297+36])
              Pexp_apply
              expression (src/partialGrammar.ml[177,6297+2]..[177,6297+20])
                Pexp_ident "Misc.support_assoc" (src/partialGrammar.ml[177,6297+2]..[177,6297+20])
              [
                <arg>
                Nolabel
                  expression (src/partialGrammar.ml[177,6297+21]..[177,6297+24])
                    Pexp_ident "phi" (src/partialGrammar.ml[177,6297+21]..[177,6297+24])
                <arg>
                Nolabel
                  expression (src/partialGrammar.ml[177,6297+25]..[177,6297+36])
                    Pexp_ident "nonterminal" (src/partialGrammar.ml[177,6297+25]..[177,6297+36])
              ]
    ]
  structure_item (src/partialGrammar.ml[179,6335+0]..[180,6373+67])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[179,6335+4]..[179,6335+21])
          Ppat_var "rewrite_parameter" (src/partialGrammar.ml[179,6335+4]..[179,6335+21])
        expression (src/partialGrammar.ml[179,6335+22]..[180,6373+67]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[179,6335+22]..[179,6335+25])
            Ppat_var "phi" (src/partialGrammar.ml[179,6335+22]..[179,6335+25])
          expression (src/partialGrammar.ml[179,6335+26]..[180,6373+67]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[179,6335+26]..[179,6335+35])
              Ppat_var "parameter" (src/partialGrammar.ml[179,6335+26]..[179,6335+35])
            expression (src/partialGrammar.ml[180,6373+2]..[180,6373+67])
              Pexp_apply
              expression (src/partialGrammar.ml[180,6373+2]..[180,6373+16])
                Pexp_ident "Parameters.map" (src/partialGrammar.ml[180,6373+2]..[180,6373+16])
              [
                <arg>
                Nolabel
                  expression (src/partialGrammar.ml[180,6373+17]..[180,6373+57])
                    Pexp_apply
                    expression (src/partialGrammar.ml[180,6373+18]..[180,6373+31])
                      Pexp_ident "Positions.map" (src/partialGrammar.ml[180,6373+18]..[180,6373+31])
                    [
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[180,6373+32]..[180,6373+56])
                          Pexp_apply
                          expression (src/partialGrammar.ml[180,6373+33]..[180,6373+51])
                            Pexp_ident "Misc.support_assoc" (src/partialGrammar.ml[180,6373+33]..[180,6373+51])
                          [
                            <arg>
                            Nolabel
                              expression (src/partialGrammar.ml[180,6373+52]..[180,6373+55])
                                Pexp_ident "phi" (src/partialGrammar.ml[180,6373+52]..[180,6373+55])
                          ]
                    ]
                <arg>
                Nolabel
                  expression (src/partialGrammar.ml[180,6373+58]..[180,6373+67])
                    Pexp_ident "parameter" (src/partialGrammar.ml[180,6373+58]..[180,6373+67])
              ]
    ]
  structure_item (src/partialGrammar.ml[182,6442+0]..[183,6506+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[182,6442+4]..[182,6442+20])
          Ppat_var "rewrite_producer" (src/partialGrammar.ml[182,6442+4]..[182,6442+20])
        expression (src/partialGrammar.ml[182,6442+21]..[183,6506+45]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[182,6442+21]..[182,6442+24])
            Ppat_var "phi" (src/partialGrammar.ml[182,6442+21]..[182,6442+24])
          expression (src/partialGrammar.ml[182,6442+25]..[183,6506+45]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[182,6442+25]..[182,6442+61])
              Ppat_constraint
              pattern (src/partialGrammar.ml[182,6442+26]..[182,6442+49])
                Ppat_tuple
                [
                  pattern (src/partialGrammar.ml[182,6442+27]..[182,6442+30])
                    Ppat_var "ido" (src/partialGrammar.ml[182,6442+27]..[182,6442+30])
                  pattern (src/partialGrammar.ml[182,6442+32]..[182,6442+41])
                    Ppat_var "parameter" (src/partialGrammar.ml[182,6442+32]..[182,6442+41])
                  pattern (src/partialGrammar.ml[182,6442+43]..[182,6442+48])
                    Ppat_var "attrs" (src/partialGrammar.ml[182,6442+43]..[182,6442+48])
                ]
              core_type (src/partialGrammar.ml[182,6442+52]..[182,6442+60])
                Ptyp_constr "producer" (src/partialGrammar.ml[182,6442+52]..[182,6442+60])
                []
            expression (src/partialGrammar.ml[183,6506+2]..[183,6506+45])
              Pexp_tuple
              [
                expression (src/partialGrammar.ml[183,6506+2]..[183,6506+5])
                  Pexp_ident "ido" (src/partialGrammar.ml[183,6506+2]..[183,6506+5])
                expression (src/partialGrammar.ml[183,6506+7]..[183,6506+38])
                  Pexp_apply
                  expression (src/partialGrammar.ml[183,6506+7]..[183,6506+24])
                    Pexp_ident "rewrite_parameter" (src/partialGrammar.ml[183,6506+7]..[183,6506+24])
                  [
                    <arg>
                    Nolabel
                      expression (src/partialGrammar.ml[183,6506+25]..[183,6506+28])
                        Pexp_ident "phi" (src/partialGrammar.ml[183,6506+25]..[183,6506+28])
                    <arg>
                    Nolabel
                      expression (src/partialGrammar.ml[183,6506+29]..[183,6506+38])
                        Pexp_ident "parameter" (src/partialGrammar.ml[183,6506+29]..[183,6506+38])
                  ]
                expression (src/partialGrammar.ml[183,6506+40]..[183,6506+45])
                  Pexp_ident "attrs" (src/partialGrammar.ml[183,6506+40]..[183,6506+45])
              ]
    ]
  structure_item (src/partialGrammar.ml[185,6553+0]..[186,6619+74])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[185,6553+4]..[185,6553+18])
          Ppat_var "rewrite_branch" (src/partialGrammar.ml[185,6553+4]..[185,6553+18])
        expression (src/partialGrammar.ml[185,6553+19]..[186,6619+74]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[185,6553+19]..[185,6553+22])
            Ppat_var "phi" (src/partialGrammar.ml[185,6553+19]..[185,6553+22])
          expression (src/partialGrammar.ml[185,6553+23]..[186,6619+74]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[185,6553+23]..[185,6553+63])
              Ppat_alias "branch" (src/partialGrammar.ml[185,6553+56]..[185,6553+62])
              pattern (src/partialGrammar.ml[185,6553+24]..[185,6553+52])
                Ppat_record Closed
                [
                  "pr_producers" (src/partialGrammar.ml[185,6553+26]..[185,6553+38])
                    pattern (src/partialGrammar.ml[185,6553+41]..[185,6553+50])
                      Ppat_var "producers" (src/partialGrammar.ml[185,6553+41]..[185,6553+50])
                ]
            expression (src/partialGrammar.ml[186,6619+2]..[186,6619+74])
              Pexp_record
              [
                "pr_producers" (src/partialGrammar.ml[186,6619+16]..[186,6619+28])
                  expression (src/partialGrammar.ml[186,6619+31]..[186,6619+72])
                    Pexp_apply
                    expression (src/partialGrammar.ml[186,6619+31]..[186,6619+39])
                      Pexp_ident "List.map" (src/partialGrammar.ml[186,6619+31]..[186,6619+39])
                    [
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[186,6619+40]..[186,6619+62])
                          Pexp_apply
                          expression (src/partialGrammar.ml[186,6619+41]..[186,6619+57])
                            Pexp_ident "rewrite_producer" (src/partialGrammar.ml[186,6619+41]..[186,6619+57])
                          [
                            <arg>
                            Nolabel
                              expression (src/partialGrammar.ml[186,6619+58]..[186,6619+61])
                                Pexp_ident "phi" (src/partialGrammar.ml[186,6619+58]..[186,6619+61])
                          ]
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[186,6619+63]..[186,6619+72])
                          Pexp_ident "producers" (src/partialGrammar.ml[186,6619+63]..[186,6619+72])
                    ]
              ]
              Some
                expression (src/partialGrammar.ml[186,6619+4]..[186,6619+10])
                  Pexp_ident "branch" (src/partialGrammar.ml[186,6619+4]..[186,6619+10])
    ]
  structure_item (src/partialGrammar.ml[188,6695+0]..[193,6782+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[188,6695+4]..[188,6695+20])
          Ppat_var "rewrite_branches" (src/partialGrammar.ml[188,6695+4]..[188,6695+20])
        expression (src/partialGrammar.ml[188,6695+21]..[193,6782+44]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[188,6695+21]..[188,6695+24])
            Ppat_var "phi" (src/partialGrammar.ml[188,6695+21]..[188,6695+24])
          expression (src/partialGrammar.ml[188,6695+25]..[193,6782+44]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[188,6695+25]..[188,6695+33])
              Ppat_var "branches" (src/partialGrammar.ml[188,6695+25]..[188,6695+33])
            expression (src/partialGrammar.ml[189,6731+2]..[193,6782+44])
              Pexp_match
              expression (src/partialGrammar.ml[189,6731+8]..[189,6731+11])
                Pexp_ident "phi" (src/partialGrammar.ml[189,6731+8]..[189,6731+11])
              [
                <case>
                  pattern (src/partialGrammar.ml[190,6748+4]..[190,6748+6])
                    Ppat_construct "[]" (src/partialGrammar.ml[190,6748+4]..[190,6748+6])
                    None
                  expression (src/partialGrammar.ml[191,6758+6]..[191,6758+14])
                    Pexp_ident "branches" (src/partialGrammar.ml[191,6758+6]..[191,6758+14])
                <case>
                  pattern (src/partialGrammar.ml[192,6773+4]..[192,6773+5])
                    Ppat_any
                  expression (src/partialGrammar.ml[193,6782+6]..[193,6782+44])
                    Pexp_apply
                    expression (src/partialGrammar.ml[193,6782+6]..[193,6782+14])
                      Pexp_ident "List.map" (src/partialGrammar.ml[193,6782+6]..[193,6782+14])
                    [
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[193,6782+15]..[193,6782+35])
                          Pexp_apply
                          expression (src/partialGrammar.ml[193,6782+16]..[193,6782+30])
                            Pexp_ident "rewrite_branch" (src/partialGrammar.ml[193,6782+16]..[193,6782+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/partialGrammar.ml[193,6782+31]..[193,6782+34])
                                Pexp_ident "phi" (src/partialGrammar.ml[193,6782+31]..[193,6782+34])
                          ]
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[193,6782+36]..[193,6782+44])
                          Pexp_ident "branches" (src/partialGrammar.ml[193,6782+36]..[193,6782+44])
                    ]
              ]
    ]
  structure_item (src/partialGrammar.ml[195,6828+0]..[195,6828+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[195,6828+4]..[195,6828+17])
          Ppat_var "fresh_counter" (src/partialGrammar.ml[195,6828+4]..[195,6828+17])
        expression (src/partialGrammar.ml[195,6828+20]..[195,6828+25])
          Pexp_apply
          expression (src/partialGrammar.ml[195,6828+20]..[195,6828+23])
            Pexp_ident "ref" (src/partialGrammar.ml[195,6828+20]..[195,6828+23])
          [
            <arg>
            Nolabel
              expression (src/partialGrammar.ml[195,6828+24]..[195,6828+25])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (src/partialGrammar.ml[197,6855+0]..[197,6855+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[197,6855+4]..[197,6855+9])
          Ppat_var "names" (src/partialGrammar.ml[197,6855+4]..[197,6855+9])
        expression (src/partialGrammar.ml[197,6855+12]..[197,6855+31])
          Pexp_apply
          expression (src/partialGrammar.ml[197,6855+12]..[197,6855+15])
            Pexp_ident "ref" (src/partialGrammar.ml[197,6855+12]..[197,6855+15])
          [
            <arg>
            Nolabel
              expression (src/partialGrammar.ml[197,6855+16]..[197,6855+31])
                Pexp_ident "StringSet.empty" (src/partialGrammar.ml[197,6855+16]..[197,6855+31])
          ]
    ]
  structure_item (src/partialGrammar.ml[199,6888+0]..[200,6908+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[199,6888+4]..[199,6888+12])
          Ppat_var "use_name" (src/partialGrammar.ml[199,6888+4]..[199,6888+12])
        expression (src/partialGrammar.ml[199,6888+13]..[200,6908+36]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[199,6888+13]..[199,6888+17])
            Ppat_var "name" (src/partialGrammar.ml[199,6888+13]..[199,6888+17])
          expression (src/partialGrammar.ml[200,6908+2]..[200,6908+36])
            Pexp_apply
            expression (src/partialGrammar.ml[200,6908+8]..[200,6908+10])
              Pexp_ident ":=" (src/partialGrammar.ml[200,6908+8]..[200,6908+10])
            [
              <arg>
              Nolabel
                expression (src/partialGrammar.ml[200,6908+2]..[200,6908+7])
                  Pexp_ident "names" (src/partialGrammar.ml[200,6908+2]..[200,6908+7])
              <arg>
              Nolabel
                expression (src/partialGrammar.ml[200,6908+11]..[200,6908+36])
                  Pexp_apply
                  expression (src/partialGrammar.ml[200,6908+11]..[200,6908+24])
                    Pexp_ident "StringSet.add" (src/partialGrammar.ml[200,6908+11]..[200,6908+24])
                  [
                    <arg>
                    Nolabel
                      expression (src/partialGrammar.ml[200,6908+25]..[200,6908+29])
                        Pexp_ident "name" (src/partialGrammar.ml[200,6908+25]..[200,6908+29])
                    <arg>
                    Nolabel
                      expression (src/partialGrammar.ml[200,6908+30]..[200,6908+36])
                        Pexp_apply
                        expression (src/partialGrammar.ml[200,6908+30]..[200,6908+31])
                          Pexp_ident "!" (src/partialGrammar.ml[200,6908+30]..[200,6908+31])
                        [
                          <arg>
                          Nolabel
                            expression (src/partialGrammar.ml[200,6908+31]..[200,6908+36])
                              Pexp_ident "names" (src/partialGrammar.ml[200,6908+31]..[200,6908+36])
                        ]
                  ]
            ]
    ]
  structure_item (src/partialGrammar.ml[202,6946+0]..[203,6967+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[202,6946+4]..[202,6946+13])
          Ppat_var "used_name" (src/partialGrammar.ml[202,6946+4]..[202,6946+13])
        expression (src/partialGrammar.ml[202,6946+14]..[203,6967+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[202,6946+14]..[202,6946+18])
            Ppat_var "name" (src/partialGrammar.ml[202,6946+14]..[202,6946+18])
          expression (src/partialGrammar.ml[203,6967+2]..[203,6967+27])
            Pexp_apply
            expression (src/partialGrammar.ml[203,6967+2]..[203,6967+15])
              Pexp_ident "StringSet.mem" (src/partialGrammar.ml[203,6967+2]..[203,6967+15])
            [
              <arg>
              Nolabel
                expression (src/partialGrammar.ml[203,6967+16]..[203,6967+20])
                  Pexp_ident "name" (src/partialGrammar.ml[203,6967+16]..[203,6967+20])
              <arg>
              Nolabel
                expression (src/partialGrammar.ml[203,6967+21]..[203,6967+27])
                  Pexp_apply
                  expression (src/partialGrammar.ml[203,6967+21]..[203,6967+22])
                    Pexp_ident "!" (src/partialGrammar.ml[203,6967+21]..[203,6967+22])
                  [
                    <arg>
                    Nolabel
                      expression (src/partialGrammar.ml[203,6967+22]..[203,6967+27])
                        Pexp_ident "names" (src/partialGrammar.ml[203,6967+22]..[203,6967+27])
                  ]
            ]
    ]
  structure_item (src/partialGrammar.ml[205,6996+0]..[215,7202+5])
    Pstr_value Rec
    [
      <def>
        pattern (src/partialGrammar.ml[205,6996+8]..[205,6996+13])
          Ppat_var "fresh" (src/partialGrammar.ml[205,6996+8]..[205,6996+13])
        expression (src/partialGrammar.ml[205,6996+14]..[215,7202+5]) ghost
          Pexp_fun
          Optional "hint"
          Some
            expression (src/partialGrammar.ml[205,6996+23]..[205,6996+26])
              Pexp_constant PConst_string("v",(src/partialGrammar.ml[205,6996+24]..[205,6996+25]),None)
          pattern (src/partialGrammar.ml[205,6996+16]..[205,6996+20])
            Ppat_var "hint" (src/partialGrammar.ml[205,6996+16]..[205,6996+20])
          expression (src/partialGrammar.ml[205,6996+28]..[215,7202+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[205,6996+28]..[205,6996+30])
              Ppat_construct "()" (src/partialGrammar.ml[205,6996+28]..[205,6996+30])
              None
            expression (src/partialGrammar.ml[206,7029+2]..[215,7202+5])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/partialGrammar.ml[206,7029+6]..[206,7029+10])
                    Ppat_var "name" (src/partialGrammar.ml[206,7029+6]..[206,7029+10])
                  expression (src/partialGrammar.ml[207,7042+4]..[208,7066+39])
                    Pexp_sequence
                    expression (src/partialGrammar.ml[207,7042+4]..[207,7042+22])
                      Pexp_apply
                      expression (src/partialGrammar.ml[207,7042+4]..[207,7042+8])
                        Pexp_ident "incr" (src/partialGrammar.ml[207,7042+4]..[207,7042+8])
                      [
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[207,7042+9]..[207,7042+22])
                            Pexp_ident "fresh_counter" (src/partialGrammar.ml[207,7042+9]..[207,7042+22])
                      ]
                    expression (src/partialGrammar.ml[208,7066+4]..[208,7066+39])
                      Pexp_apply
                      expression (src/partialGrammar.ml[208,7066+9]..[208,7066+10])
                        Pexp_ident "^" (src/partialGrammar.ml[208,7066+9]..[208,7066+10])
                      [
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[208,7066+4]..[208,7066+8])
                            Pexp_ident "hint" (src/partialGrammar.ml[208,7066+4]..[208,7066+8])
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[208,7066+11]..[208,7066+39])
                            Pexp_apply
                            expression (src/partialGrammar.ml[208,7066+11]..[208,7066+24])
                              Pexp_ident "string_of_int" (src/partialGrammar.ml[208,7066+11]..[208,7066+24])
                            [
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[208,7066+25]..[208,7066+39])
                                  Pexp_apply
                                  expression (src/partialGrammar.ml[208,7066+25]..[208,7066+26])
                                    Pexp_ident "!" (src/partialGrammar.ml[208,7066+25]..[208,7066+26])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/partialGrammar.ml[208,7066+26]..[208,7066+39])
                                        Pexp_ident "fresh_counter" (src/partialGrammar.ml[208,7066+26]..[208,7066+39])
                                  ]
                            ]
                      ]
              ]
              expression (src/partialGrammar.ml[210,7111+4]..[215,7202+5])
                Pexp_ifthenelse
                expression (src/partialGrammar.ml[210,7111+7]..[210,7111+21])
                  Pexp_apply
                  expression (src/partialGrammar.ml[210,7111+7]..[210,7111+16])
                    Pexp_ident "used_name" (src/partialGrammar.ml[210,7111+7]..[210,7111+16])
                  [
                    <arg>
                    Nolabel
                      expression (src/partialGrammar.ml[210,7111+17]..[210,7111+21])
                        Pexp_ident "name" (src/partialGrammar.ml[210,7111+17]..[210,7111+21])
                  ]
                expression (src/partialGrammar.ml[211,7138+6]..[211,7138+20])
                  Pexp_apply
                  expression (src/partialGrammar.ml[211,7138+6]..[211,7138+11])
                    Pexp_ident "fresh" (src/partialGrammar.ml[211,7138+6]..[211,7138+11])
                  [
                    <arg>
                    Labelled "hint"
                      expression (src/partialGrammar.ml[211,7138+13]..[211,7138+17])
                        Pexp_ident "hint" (src/partialGrammar.ml[211,7138+13]..[211,7138+17])
                    <arg>
                    Nolabel
                      expression (src/partialGrammar.ml[211,7138+18]..[211,7138+20])
                        Pexp_construct "()" (src/partialGrammar.ml[211,7138+18]..[211,7138+20])
                        None
                  ]
                Some
                  expression (src/partialGrammar.ml[212,7159+9]..[215,7202+5])
                    Pexp_sequence
                    expression (src/partialGrammar.ml[213,7170+6]..[213,7170+19])
                      Pexp_apply
                      expression (src/partialGrammar.ml[213,7170+6]..[213,7170+14])
                        Pexp_ident "use_name" (src/partialGrammar.ml[213,7170+6]..[213,7170+14])
                      [
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[213,7170+15]..[213,7170+19])
                            Pexp_ident "name" (src/partialGrammar.ml[213,7170+15]..[213,7170+19])
                      ]
                    expression (src/partialGrammar.ml[214,7191+6]..[214,7191+10])
                      Pexp_ident "name" (src/partialGrammar.ml[214,7191+6]..[214,7191+10])
    ]
  structure_item (src/partialGrammar.ml[219,7293+0]..[226,7590+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[219,7293+4]..[219,7293+21])
          Ppat_var "alphaconvert_rule" (src/partialGrammar.ml[219,7293+4]..[219,7293+21])
        expression (src/partialGrammar.ml[219,7293+22]..[226,7590+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[219,7293+22]..[219,7293+32])
            Ppat_var "parameters" (src/partialGrammar.ml[219,7293+22]..[219,7293+32])
          expression (src/partialGrammar.ml[219,7293+33]..[226,7590+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[219,7293+33]..[219,7293+38])
              Ppat_var "prule" (src/partialGrammar.ml[219,7293+33]..[219,7293+38])
            expression (src/partialGrammar.ml[220,7334+2]..[226,7590+5])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/partialGrammar.ml[220,7334+6]..[220,7334+9])
                    Ppat_var "phi" (src/partialGrammar.ml[220,7334+6]..[220,7334+9])
                  expression (src/partialGrammar.ml[221,7346+4]..[221,7346+77])
                    Pexp_apply
                    expression (src/partialGrammar.ml[221,7346+4]..[221,7346+16])
                      Pexp_ident "List.combine" (src/partialGrammar.ml[221,7346+4]..[221,7346+16])
                    [
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[221,7346+17]..[221,7346+27])
                          Pexp_ident "parameters" (src/partialGrammar.ml[221,7346+17]..[221,7346+27])
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[221,7346+28]..[221,7346+77])
                          Pexp_apply
                          expression (src/partialGrammar.ml[221,7346+29]..[221,7346+37])
                            Pexp_ident "List.map" (src/partialGrammar.ml[221,7346+29]..[221,7346+37])
                          [
                            <arg>
                            Nolabel
                              expression (src/partialGrammar.ml[221,7346+38]..[221,7346+65])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/partialGrammar.ml[221,7346+43]..[221,7346+44])
                                  Ppat_var "x" (src/partialGrammar.ml[221,7346+43]..[221,7346+44])
                                expression (src/partialGrammar.ml[221,7346+48]..[221,7346+64])
                                  Pexp_apply
                                  expression (src/partialGrammar.ml[221,7346+48]..[221,7346+53])
                                    Pexp_ident "fresh" (src/partialGrammar.ml[221,7346+48]..[221,7346+53])
                                  [
                                    <arg>
                                    Labelled "hint"
                                      expression (src/partialGrammar.ml[221,7346+60]..[221,7346+61])
                                        Pexp_ident "x" (src/partialGrammar.ml[221,7346+60]..[221,7346+61])
                                    <arg>
                                    Nolabel
                                      expression (src/partialGrammar.ml[221,7346+62]..[221,7346+64])
                                        Pexp_construct "()" (src/partialGrammar.ml[221,7346+62]..[221,7346+64])
                                        None
                                  ]
                            <arg>
                            Nolabel
                              expression (src/partialGrammar.ml[221,7346+66]..[221,7346+76])
                                Pexp_ident "parameters" (src/partialGrammar.ml[221,7346+66]..[221,7346+76])
                          ]
                    ]
              ]
              expression (src/partialGrammar.ml[223,7429+4]..[226,7590+5])
                Pexp_record
                [
                  "pr_parameters" (src/partialGrammar.ml[224,7446+8]..[224,7446+21])
                    expression (src/partialGrammar.ml[224,7446+25]..[224,7446+78])
                      Pexp_apply
                      expression (src/partialGrammar.ml[224,7446+25]..[224,7446+33])
                        Pexp_ident "List.map" (src/partialGrammar.ml[224,7446+25]..[224,7446+33])
                      [
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[224,7446+34]..[224,7446+58])
                            Pexp_apply
                            expression (src/partialGrammar.ml[224,7446+35]..[224,7446+53])
                              Pexp_ident "Misc.support_assoc" (src/partialGrammar.ml[224,7446+35]..[224,7446+53])
                            [
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[224,7446+54]..[224,7446+57])
                                  Pexp_ident "phi" (src/partialGrammar.ml[224,7446+54]..[224,7446+57])
                            ]
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[224,7446+59]..[224,7446+78])
                            Pexp_field
                            expression (src/partialGrammar.ml[224,7446+59]..[224,7446+64])
                              Pexp_ident "prule" (src/partialGrammar.ml[224,7446+59]..[224,7446+64])
                            "pr_parameters" (src/partialGrammar.ml[224,7446+65]..[224,7446+78])
                      ]
                  "pr_branches" (src/partialGrammar.ml[225,7526+8]..[225,7526+19])
                    expression (src/partialGrammar.ml[225,7526+25]..[225,7526+63])
                      Pexp_apply
                      expression (src/partialGrammar.ml[225,7526+25]..[225,7526+41])
                        Pexp_ident "rewrite_branches" (src/partialGrammar.ml[225,7526+25]..[225,7526+41])
                      [
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[225,7526+42]..[225,7526+45])
                            Pexp_ident "phi" (src/partialGrammar.ml[225,7526+42]..[225,7526+45])
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[225,7526+46]..[225,7526+63])
                            Pexp_field
                            expression (src/partialGrammar.ml[225,7526+46]..[225,7526+51])
                              Pexp_ident "prule" (src/partialGrammar.ml[225,7526+46]..[225,7526+51])
                            "pr_branches" (src/partialGrammar.ml[225,7526+52]..[225,7526+63])
                      ]
                ]
                Some
                  expression (src/partialGrammar.ml[223,7429+6]..[223,7429+11])
                    Pexp_ident "prule" (src/partialGrammar.ml[223,7429+6]..[223,7429+11])
    ]
  structure_item (src/partialGrammar.ml[230,7693+0]..[243,8079+62])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[230,7693+4]..[230,7693+16])
          Ppat_var "rewrite_rule" (src/partialGrammar.ml[230,7693+4]..[230,7693+16])
        expression (src/partialGrammar.ml[230,7693+17]..[243,8079+62]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[230,7693+17]..[230,7693+20])
            Ppat_var "phi" (src/partialGrammar.ml[230,7693+17]..[230,7693+20])
          expression (src/partialGrammar.ml[230,7693+21]..[243,8079+62]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[230,7693+21]..[230,7693+26])
              Ppat_var "prule" (src/partialGrammar.ml[230,7693+21]..[230,7693+26])
            expression (src/partialGrammar.ml[231,7722+2]..[243,8079+62])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/partialGrammar.ml[231,7722+6]..[231,7722+9])
                    Ppat_var "ids" (src/partialGrammar.ml[231,7722+6]..[231,7722+9])
                  expression (src/partialGrammar.ml[232,7734+4]..[233,7811+25])
                    Pexp_apply
                    expression (src/partialGrammar.ml[232,7734+4]..[232,7734+18])
                      Pexp_ident "List.fold_left" (src/partialGrammar.ml[232,7734+4]..[232,7734+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[232,7734+19]..[232,7734+76])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/partialGrammar.ml[232,7734+24]..[232,7734+27])
                            Ppat_var "acu" (src/partialGrammar.ml[232,7734+24]..[232,7734+27])
                          expression (src/partialGrammar.ml[232,7734+28]..[232,7734+75]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/partialGrammar.ml[232,7734+28]..[232,7734+34])
                              Ppat_tuple
                              [
                                pattern (src/partialGrammar.ml[232,7734+29]..[232,7734+30])
                                  Ppat_var "f" (src/partialGrammar.ml[232,7734+29]..[232,7734+30])
                                pattern (src/partialGrammar.ml[232,7734+32]..[232,7734+33])
                                  Ppat_var "d" (src/partialGrammar.ml[232,7734+32]..[232,7734+33])
                              ]
                            expression (src/partialGrammar.ml[232,7734+38]..[232,7734+75])
                              Pexp_apply
                              expression (src/partialGrammar.ml[232,7734+38]..[232,7734+51])
                                Pexp_ident "StringSet.add" (src/partialGrammar.ml[232,7734+38]..[232,7734+51])
                              [
                                <arg>
                                Nolabel
                                  expression (src/partialGrammar.ml[232,7734+52]..[232,7734+53])
                                    Pexp_ident "f" (src/partialGrammar.ml[232,7734+52]..[232,7734+53])
                                <arg>
                                Nolabel
                                  expression (src/partialGrammar.ml[232,7734+54]..[232,7734+75])
                                    Pexp_apply
                                    expression (src/partialGrammar.ml[232,7734+55]..[232,7734+68])
                                      Pexp_ident "StringSet.add" (src/partialGrammar.ml[232,7734+55]..[232,7734+68])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/partialGrammar.ml[232,7734+69]..[232,7734+70])
                                          Pexp_ident "d" (src/partialGrammar.ml[232,7734+69]..[232,7734+70])
                                      <arg>
                                      Nolabel
                                        expression (src/partialGrammar.ml[232,7734+71]..[232,7734+74])
                                          Pexp_ident "acu" (src/partialGrammar.ml[232,7734+71]..[232,7734+74])
                                    ]
                              ]
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[233,7811+6]..[233,7811+21])
                          Pexp_ident "StringSet.empty" (src/partialGrammar.ml[233,7811+6]..[233,7811+21])
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[233,7811+22]..[233,7811+25])
                          Pexp_ident "phi" (src/partialGrammar.ml[233,7811+22]..[233,7811+25])
                    ]
              ]
              expression (src/partialGrammar.ml[235,7842+2]..[243,8079+62])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/partialGrammar.ml[235,7842+6]..[235,7842+25])
                      Ppat_var "captured_parameters" (src/partialGrammar.ml[235,7842+6]..[235,7842+25])
                    expression (src/partialGrammar.ml[236,7870+4]..[236,7870+66])
                      Pexp_apply
                      expression (src/partialGrammar.ml[236,7870+4]..[236,7870+15])
                        Pexp_ident "List.filter" (src/partialGrammar.ml[236,7870+4]..[236,7870+15])
                      [
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[236,7870+16]..[236,7870+46])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/partialGrammar.ml[236,7870+21]..[236,7870+22])
                              Ppat_var "p" (src/partialGrammar.ml[236,7870+21]..[236,7870+22])
                            expression (src/partialGrammar.ml[236,7870+26]..[236,7870+45])
                              Pexp_apply
                              expression (src/partialGrammar.ml[236,7870+26]..[236,7870+39])
                                Pexp_ident "StringSet.mem" (src/partialGrammar.ml[236,7870+26]..[236,7870+39])
                              [
                                <arg>
                                Nolabel
                                  expression (src/partialGrammar.ml[236,7870+40]..[236,7870+41])
                                    Pexp_ident "p" (src/partialGrammar.ml[236,7870+40]..[236,7870+41])
                                <arg>
                                Nolabel
                                  expression (src/partialGrammar.ml[236,7870+42]..[236,7870+45])
                                    Pexp_ident "ids" (src/partialGrammar.ml[236,7870+42]..[236,7870+45])
                              ]
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[236,7870+47]..[236,7870+66])
                            Pexp_field
                            expression (src/partialGrammar.ml[236,7870+47]..[236,7870+52])
                              Pexp_ident "prule" (src/partialGrammar.ml[236,7870+47]..[236,7870+52])
                            "pr_parameters" (src/partialGrammar.ml[236,7870+53]..[236,7870+66])
                      ]
                ]
                expression (src/partialGrammar.ml[238,7942+2]..[243,8079+62])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/partialGrammar.ml[238,7942+6]..[238,7942+11])
                        Ppat_var "prule" (src/partialGrammar.ml[238,7942+6]..[238,7942+11])
                      expression (src/partialGrammar.ml[239,7956+4]..[239,7956+47])
                        Pexp_apply
                        expression (src/partialGrammar.ml[239,7956+4]..[239,7956+21])
                          Pexp_ident "alphaconvert_rule" (src/partialGrammar.ml[239,7956+4]..[239,7956+21])
                        [
                          <arg>
                          Nolabel
                            expression (src/partialGrammar.ml[239,7956+22]..[239,7956+41])
                              Pexp_ident "captured_parameters" (src/partialGrammar.ml[239,7956+22]..[239,7956+41])
                          <arg>
                          Nolabel
                            expression (src/partialGrammar.ml[239,7956+42]..[239,7956+47])
                              Pexp_ident "prule" (src/partialGrammar.ml[239,7956+42]..[239,7956+47])
                        ]
                  ]
                  expression (src/partialGrammar.ml[241,8009+4]..[243,8079+62])
                    Pexp_record
                    [
                      "pr_nt" (src/partialGrammar.ml[242,8026+8]..[242,8026+13])
                        expression (src/partialGrammar.ml[242,8026+16]..[242,8026+51])
                          Pexp_apply
                          expression (src/partialGrammar.ml[242,8026+16]..[242,8026+35])
                            Pexp_ident "rewrite_nonterminal" (src/partialGrammar.ml[242,8026+16]..[242,8026+35])
                          [
                            <arg>
                            Nolabel
                              expression (src/partialGrammar.ml[242,8026+36]..[242,8026+39])
                                Pexp_ident "phi" (src/partialGrammar.ml[242,8026+36]..[242,8026+39])
                            <arg>
                            Nolabel
                              expression (src/partialGrammar.ml[242,8026+40]..[242,8026+51])
                                Pexp_field
                                expression (src/partialGrammar.ml[242,8026+40]..[242,8026+45])
                                  Pexp_ident "prule" (src/partialGrammar.ml[242,8026+40]..[242,8026+45])
                                "pr_nt" (src/partialGrammar.ml[242,8026+46]..[242,8026+51])
                          ]
                      "pr_branches" (src/partialGrammar.ml[243,8079+8]..[243,8079+19])
                        expression (src/partialGrammar.ml[243,8079+22]..[243,8079+60])
                          Pexp_apply
                          expression (src/partialGrammar.ml[243,8079+22]..[243,8079+38])
                            Pexp_ident "rewrite_branches" (src/partialGrammar.ml[243,8079+22]..[243,8079+38])
                          [
                            <arg>
                            Nolabel
                              expression (src/partialGrammar.ml[243,8079+39]..[243,8079+42])
                                Pexp_ident "phi" (src/partialGrammar.ml[243,8079+39]..[243,8079+42])
                            <arg>
                            Nolabel
                              expression (src/partialGrammar.ml[243,8079+43]..[243,8079+60])
                                Pexp_field
                                expression (src/partialGrammar.ml[243,8079+43]..[243,8079+48])
                                  Pexp_ident "prule" (src/partialGrammar.ml[243,8079+43]..[243,8079+48])
                                "pr_branches" (src/partialGrammar.ml[243,8079+49]..[243,8079+60])
                          ]
                    ]
                    Some
                      expression (src/partialGrammar.ml[241,8009+6]..[241,8009+11])
                        Pexp_ident "prule" (src/partialGrammar.ml[241,8009+6]..[241,8009+11])
    ]
  structure_item (src/partialGrammar.ml[245,8143+0]..[246,8173+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[245,8143+4]..[245,8143+17])
          Ppat_var "rewrite_rules" (src/partialGrammar.ml[245,8143+4]..[245,8143+17])
        expression (src/partialGrammar.ml[245,8143+18]..[246,8173+35]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[245,8143+18]..[245,8143+21])
            Ppat_var "phi" (src/partialGrammar.ml[245,8143+18]..[245,8143+21])
          expression (src/partialGrammar.ml[245,8143+22]..[246,8173+35]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[245,8143+22]..[245,8143+27])
              Ppat_var "rules" (src/partialGrammar.ml[245,8143+22]..[245,8143+27])
            expression (src/partialGrammar.ml[246,8173+2]..[246,8173+35])
              Pexp_apply
              expression (src/partialGrammar.ml[246,8173+2]..[246,8173+10])
                Pexp_ident "List.map" (src/partialGrammar.ml[246,8173+2]..[246,8173+10])
              [
                <arg>
                Nolabel
                  expression (src/partialGrammar.ml[246,8173+11]..[246,8173+29])
                    Pexp_apply
                    expression (src/partialGrammar.ml[246,8173+12]..[246,8173+24])
                      Pexp_ident "rewrite_rule" (src/partialGrammar.ml[246,8173+12]..[246,8173+24])
                    [
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[246,8173+25]..[246,8173+28])
                          Pexp_ident "phi" (src/partialGrammar.ml[246,8173+25]..[246,8173+28])
                    ]
                <arg>
                Nolabel
                  expression (src/partialGrammar.ml[246,8173+30]..[246,8173+35])
                    Pexp_ident "rules" (src/partialGrammar.ml[246,8173+30]..[246,8173+35])
              ]
    ]
  structure_item (src/partialGrammar.ml[248,8210+0]..[254,8402+66])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[248,8210+4]..[248,8210+19])
          Ppat_var "rewrite_grammar" (src/partialGrammar.ml[248,8210+4]..[248,8210+19])
        expression (src/partialGrammar.ml[248,8210+20]..[254,8402+66]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[248,8210+20]..[248,8210+23])
            Ppat_var "phi" (src/partialGrammar.ml[248,8210+20]..[248,8210+23])
          expression (src/partialGrammar.ml[248,8210+24]..[254,8402+66]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[248,8210+24]..[248,8210+31])
              Ppat_var "grammar" (src/partialGrammar.ml[248,8210+24]..[248,8210+31])
            expression (src/partialGrammar.ml[251,8349+2]..[254,8402+66])
              Pexp_ifthenelse
              expression (src/partialGrammar.ml[251,8349+5]..[251,8349+28])
                Pexp_apply
                expression (src/partialGrammar.ml[251,8349+9]..[251,8349+10])
                  Pexp_ident "=" (src/partialGrammar.ml[251,8349+9]..[251,8349+10])
                [
                  <arg>
                  Nolabel
                    expression (src/partialGrammar.ml[251,8349+5]..[251,8349+8])
                      Pexp_ident "phi" (src/partialGrammar.ml[251,8349+5]..[251,8349+8])
                  <arg>
                  Nolabel
                    expression (src/partialGrammar.ml[251,8349+11]..[251,8349+28])
                      Pexp_ident "identity_renaming" (src/partialGrammar.ml[251,8349+11]..[251,8349+28])
                ]
              expression (src/partialGrammar.ml[252,8383+4]..[252,8383+11])
                Pexp_ident "grammar" (src/partialGrammar.ml[252,8383+4]..[252,8383+11])
              Some
                expression (src/partialGrammar.ml[254,8402+4]..[254,8402+66])
                  Pexp_record
                  [
                    "pg_rules" (src/partialGrammar.ml[254,8402+19]..[254,8402+27])
                      expression (src/partialGrammar.ml[254,8402+30]..[254,8402+64])
                        Pexp_apply
                        expression (src/partialGrammar.ml[254,8402+30]..[254,8402+43])
                          Pexp_ident "rewrite_rules" (src/partialGrammar.ml[254,8402+30]..[254,8402+43])
                        [
                          <arg>
                          Nolabel
                            expression (src/partialGrammar.ml[254,8402+44]..[254,8402+47])
                              Pexp_ident "phi" (src/partialGrammar.ml[254,8402+44]..[254,8402+47])
                          <arg>
                          Nolabel
                            expression (src/partialGrammar.ml[254,8402+48]..[254,8402+64])
                              Pexp_field
                              expression (src/partialGrammar.ml[254,8402+48]..[254,8402+55])
                                Pexp_ident "grammar" (src/partialGrammar.ml[254,8402+48]..[254,8402+55])
                              "pg_rules" (src/partialGrammar.ml[254,8402+56]..[254,8402+64])
                        ]
                  ]
                  Some
                    expression (src/partialGrammar.ml[254,8402+6]..[254,8402+13])
                      Pexp_ident "grammar" (src/partialGrammar.ml[254,8402+6]..[254,8402+13])
    ]
  structure_item (src/partialGrammar.ml[260,8670+0]..[270,8855+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[260,8670+4]..[260,8670+34])
          Ppat_var "is_valid_nonterminal_character" (src/partialGrammar.ml[260,8670+4]..[260,8670+34])
        expression (src/partialGrammar.ml[260,8670+37]..[270,8855+11])
          Pexp_function
          [
            <case>
              pattern (src/partialGrammar.ml[261,8716+4]..[267,8817+14])
                Ppat_or
                pattern (src/partialGrammar.ml[261,8716+4]..[266,8796+20])
                  Ppat_or
                  pattern (src/partialGrammar.ml[261,8716+4]..[265,8775+20])
                    Ppat_or
                    pattern (src/partialGrammar.ml[261,8716+4]..[264,8754+20])
                      Ppat_or
                      pattern (src/partialGrammar.ml[261,8716+4]..[263,8746+7])
                        Ppat_or
                        pattern (src/partialGrammar.ml[261,8716+4]..[262,8731+14])
                          Ppat_or
                          pattern (src/partialGrammar.ml[261,8716+4]..[261,8716+14])
                            Ppat_interval PConst_char 41..PConst_char 5a
                          pattern (src/partialGrammar.ml[262,8731+4]..[262,8731+14])
                            Ppat_interval PConst_char 61..PConst_char 7a
                        pattern (src/partialGrammar.ml[263,8746+4]..[263,8746+7])
                          Ppat_constant PConst_char 5f
                      pattern (src/partialGrammar.ml[264,8754+4]..[264,8754+20])
                        Ppat_interval PConst_char c0..PConst_char d6
                    pattern (src/partialGrammar.ml[265,8775+4]..[265,8775+20])
                      Ppat_interval PConst_char d8..PConst_char f6
                  pattern (src/partialGrammar.ml[266,8796+4]..[266,8796+20])
                    Ppat_interval PConst_char f8..PConst_char ff
                pattern (src/partialGrammar.ml[267,8817+4]..[267,8817+14])
                  Ppat_interval PConst_char 30..PConst_char 39
              expression (src/partialGrammar.ml[268,8835+6]..[268,8835+10])
                Pexp_construct "true" (src/partialGrammar.ml[268,8835+6]..[268,8835+10])
                None
            <case>
              pattern (src/partialGrammar.ml[269,8846+4]..[269,8846+5])
                Ppat_any
              expression (src/partialGrammar.ml[270,8855+6]..[270,8855+11])
                Pexp_construct "false" (src/partialGrammar.ml[270,8855+6]..[270,8855+11])
                None
          ]
    ]
  structure_item (src/partialGrammar.ml[272,8868+0]..[278,9128+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[272,8868+4]..[272,8868+12])
          Ppat_var "restrict" (src/partialGrammar.ml[272,8868+4]..[272,8868+12])
        expression (src/partialGrammar.ml[272,8868+13]..[278,9128+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[272,8868+13]..[272,8868+21])
            Ppat_var "filename" (src/partialGrammar.ml[272,8868+13]..[272,8868+21])
          expression (src/partialGrammar.ml[273,8892+2]..[278,9128+26])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/partialGrammar.ml[273,8892+6]..[273,8892+7])
                  Ppat_var "m" (src/partialGrammar.ml[273,8892+6]..[273,8892+7])
                expression (src/partialGrammar.ml[273,8892+10]..[273,8892+98])
                  Pexp_apply
                  expression (src/partialGrammar.ml[273,8892+10]..[273,8892+25])
                    Pexp_ident "Bytes.of_string" (src/partialGrammar.ml[273,8892+10]..[273,8892+25])
                  [
                    <arg>
                    Nolabel
                      expression (src/partialGrammar.ml[273,8892+26]..[273,8892+98])
                        Pexp_apply
                        expression (src/partialGrammar.ml[273,8892+27]..[273,8892+47])
                          Pexp_ident "Filename.chop_suffix" (src/partialGrammar.ml[273,8892+27]..[273,8892+47])
                        [
                          <arg>
                          Nolabel
                            expression (src/partialGrammar.ml[273,8892+48]..[273,8892+56])
                              Pexp_ident "filename" (src/partialGrammar.ml[273,8892+48]..[273,8892+56])
                          <arg>
                          Nolabel
                            expression (src/partialGrammar.ml[273,8892+57]..[273,8892+97])
                              Pexp_ifthenelse
                              expression (src/partialGrammar.ml[273,8892+61]..[273,8892+73])
                                Pexp_ident "Settings.coq" (src/partialGrammar.ml[273,8892+61]..[273,8892+73])
                              expression (src/partialGrammar.ml[273,8892+79]..[273,8892+84])
                                Pexp_constant PConst_string(".vy",(src/partialGrammar.ml[273,8892+80]..[273,8892+83]),None)
                              Some
                                expression (src/partialGrammar.ml[273,8892+90]..[273,8892+96])
                                  Pexp_constant PConst_string(".mly",(src/partialGrammar.ml[273,8892+91]..[273,8892+95]),None)
                        ]
                  ]
            ]
            expression (src/partialGrammar.ml[274,8994+2]..[278,9128+26])
              Pexp_sequence
              expression (src/partialGrammar.ml[274,8994+2]..[277,9120+6])
                Pexp_for Up
                pattern (src/partialGrammar.ml[274,8994+6]..[274,8994+7])
                  Ppat_var "i" (src/partialGrammar.ml[274,8994+6]..[274,8994+7])
                expression (src/partialGrammar.ml[274,8994+10]..[274,8994+11])
                  Pexp_constant PConst_int (0,None)
                expression (src/partialGrammar.ml[274,8994+15]..[274,8994+33])
                  Pexp_apply
                  expression (src/partialGrammar.ml[274,8994+30]..[274,8994+31])
                    Pexp_ident "-" (src/partialGrammar.ml[274,8994+30]..[274,8994+31])
                  [
                    <arg>
                    Nolabel
                      expression (src/partialGrammar.ml[274,8994+15]..[274,8994+29])
                        Pexp_apply
                        expression (src/partialGrammar.ml[274,8994+15]..[274,8994+27])
                          Pexp_ident "Bytes.length" (src/partialGrammar.ml[274,8994+15]..[274,8994+27])
                        [
                          <arg>
                          Nolabel
                            expression (src/partialGrammar.ml[274,8994+28]..[274,8994+29])
                              Pexp_ident "m" (src/partialGrammar.ml[274,8994+28]..[274,8994+29])
                        ]
                    <arg>
                    Nolabel
                      expression (src/partialGrammar.ml[274,8994+32]..[274,8994+33])
                        Pexp_constant PConst_int (1,None)
                  ]
                expression (src/partialGrammar.ml[275,9031+4]..[276,9096+23])
                  Pexp_ifthenelse
                  expression (src/partialGrammar.ml[275,9031+7]..[275,9031+59])
                    Pexp_apply
                    expression (src/partialGrammar.ml[275,9031+7]..[275,9031+10])
                      Pexp_ident "not" (src/partialGrammar.ml[275,9031+7]..[275,9031+10])
                    [
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[275,9031+11]..[275,9031+59])
                          Pexp_apply
                          expression (src/partialGrammar.ml[275,9031+12]..[275,9031+42])
                            Pexp_ident "is_valid_nonterminal_character" (src/partialGrammar.ml[275,9031+12]..[275,9031+42])
                          [
                            <arg>
                            Nolabel
                              expression (src/partialGrammar.ml[275,9031+43]..[275,9031+58])
                                Pexp_apply
                                expression (src/partialGrammar.ml[275,9031+44]..[275,9031+53])
                                  Pexp_ident "Bytes.get" (src/partialGrammar.ml[275,9031+44]..[275,9031+53])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/partialGrammar.ml[275,9031+54]..[275,9031+55])
                                      Pexp_ident "m" (src/partialGrammar.ml[275,9031+54]..[275,9031+55])
                                  <arg>
                                  Nolabel
                                    expression (src/partialGrammar.ml[275,9031+56]..[275,9031+57])
                                      Pexp_ident "i" (src/partialGrammar.ml[275,9031+56]..[275,9031+57])
                                ]
                          ]
                    ]
                  expression (src/partialGrammar.ml[276,9096+6]..[276,9096+23])
                    Pexp_apply
                    expression (src/partialGrammar.ml[276,9096+6]..[276,9096+15])
                      Pexp_ident "Bytes.set" (src/partialGrammar.ml[276,9096+6]..[276,9096+15])
                    [
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[276,9096+16]..[276,9096+17])
                          Pexp_ident "m" (src/partialGrammar.ml[276,9096+16]..[276,9096+17])
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[276,9096+18]..[276,9096+19])
                          Pexp_ident "i" (src/partialGrammar.ml[276,9096+18]..[276,9096+19])
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[276,9096+20]..[276,9096+23])
                          Pexp_constant PConst_char 5f
                    ]
                  None
              expression (src/partialGrammar.ml[278,9128+2]..[278,9128+26])
                Pexp_apply
                expression (src/partialGrammar.ml[278,9128+2]..[278,9128+24])
                  Pexp_ident "Bytes.unsafe_to_string" (src/partialGrammar.ml[278,9128+2]..[278,9128+24])
                [
                  <arg>
                  Nolabel
                    expression (src/partialGrammar.ml[278,9128+25]..[278,9128+26])
                      Pexp_ident "m" (src/partialGrammar.ml[278,9128+25]..[278,9128+26])
                ]
    ]
  structure_item (src/partialGrammar.ml[280,9156+0]..[285,9306+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[280,9156+4]..[280,9156+10])
          Ppat_var "rename" (src/partialGrammar.ml[280,9156+4]..[280,9156+10])
        expression (src/partialGrammar.ml[280,9156+11]..[285,9306+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[280,9156+11]..[280,9156+22])
            Ppat_var "nonterminal" (src/partialGrammar.ml[280,9156+11]..[280,9156+22])
          expression (src/partialGrammar.ml[280,9156+23]..[285,9306+27]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[280,9156+23]..[280,9156+31])
              Ppat_var "filename" (src/partialGrammar.ml[280,9156+23]..[280,9156+31])
            expression (src/partialGrammar.ml[281,9190+2]..[285,9306+27])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/partialGrammar.ml[281,9190+6]..[281,9190+10])
                    Ppat_var "name" (src/partialGrammar.ml[281,9190+6]..[281,9190+10])
                  expression (src/partialGrammar.ml[281,9190+13]..[281,9190+50])
                    Pexp_apply
                    expression (src/partialGrammar.ml[281,9190+31]..[281,9190+32])
                      Pexp_ident "^" (src/partialGrammar.ml[281,9190+31]..[281,9190+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[281,9190+13]..[281,9190+30])
                          Pexp_apply
                          expression (src/partialGrammar.ml[281,9190+13]..[281,9190+21])
                            Pexp_ident "restrict" (src/partialGrammar.ml[281,9190+13]..[281,9190+21])
                          [
                            <arg>
                            Nolabel
                              expression (src/partialGrammar.ml[281,9190+22]..[281,9190+30])
                                Pexp_ident "filename" (src/partialGrammar.ml[281,9190+22]..[281,9190+30])
                          ]
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[281,9190+33]..[281,9190+50])
                          Pexp_apply
                          expression (src/partialGrammar.ml[281,9190+37]..[281,9190+38])
                            Pexp_ident "^" (src/partialGrammar.ml[281,9190+37]..[281,9190+38])
                          [
                            <arg>
                            Nolabel
                              expression (src/partialGrammar.ml[281,9190+33]..[281,9190+36])
                                Pexp_constant PConst_string("_",(src/partialGrammar.ml[281,9190+34]..[281,9190+35]),None)
                            <arg>
                            Nolabel
                              expression (src/partialGrammar.ml[281,9190+39]..[281,9190+50])
                                Pexp_ident "nonterminal" (src/partialGrammar.ml[281,9190+39]..[281,9190+50])
                          ]
                    ]
              ]
              expression (src/partialGrammar.ml[282,9244+4]..[285,9306+27])
                Pexp_ifthenelse
                expression (src/partialGrammar.ml[282,9244+7]..[282,9244+21])
                  Pexp_apply
                  expression (src/partialGrammar.ml[282,9244+7]..[282,9244+16])
                    Pexp_ident "used_name" (src/partialGrammar.ml[282,9244+7]..[282,9244+16])
                  [
                    <arg>
                    Nolabel
                      expression (src/partialGrammar.ml[282,9244+17]..[282,9244+21])
                        Pexp_ident "name" (src/partialGrammar.ml[282,9244+17]..[282,9244+21])
                  ]
                expression (src/partialGrammar.ml[283,9271+6]..[283,9271+25])
                  Pexp_apply
                  expression (src/partialGrammar.ml[283,9271+6]..[283,9271+11])
                    Pexp_ident "fresh" (src/partialGrammar.ml[283,9271+6]..[283,9271+11])
                  [
                    <arg>
                    Labelled "hint"
                      expression (src/partialGrammar.ml[283,9271+18]..[283,9271+22])
                        Pexp_ident "name" (src/partialGrammar.ml[283,9271+18]..[283,9271+22])
                    <arg>
                    Nolabel
                      expression (src/partialGrammar.ml[283,9271+23]..[283,9271+25])
                        Pexp_construct "()" (src/partialGrammar.ml[283,9271+23]..[283,9271+25])
                        None
                  ]
                Some
                  expression (src/partialGrammar.ml[285,9306+6]..[285,9306+27])
                    Pexp_sequence
                    expression (src/partialGrammar.ml[285,9306+7]..[285,9306+20])
                      Pexp_apply
                      expression (src/partialGrammar.ml[285,9306+7]..[285,9306+15])
                        Pexp_ident "use_name" (src/partialGrammar.ml[285,9306+7]..[285,9306+15])
                      [
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[285,9306+16]..[285,9306+20])
                            Pexp_ident "name" (src/partialGrammar.ml[285,9306+16]..[285,9306+20])
                      ]
                    expression (src/partialGrammar.ml[285,9306+22]..[285,9306+26])
                      Pexp_ident "name" (src/partialGrammar.ml[285,9306+22]..[285,9306+26])
    ]
  structure_item (src/partialGrammar.ml[288,9415+0]..[301,9840+27])
    Pstr_type Rec
    [
      type_declaration "symbol_kind" (src/partialGrammar.ml[288,9415+5]..[288,9415+16]) (src/partialGrammar.ml[288,9415+0]..[301,9840+27])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (src/partialGrammar.ml[291,9504+2]..[291,9504+36])
                "PublicNonTerminal" (src/partialGrammar.ml[291,9504+4]..[291,9504+21])
                [
                  core_type (src/partialGrammar.ml[291,9504+25]..[291,9504+36])
                    Ptyp_constr "Positions.t" (src/partialGrammar.ml[291,9504+25]..[291,9504+36])
                    []
                ]
                None
              (src/partialGrammar.ml[294,9616+2]..[294,9616+37])
                "PrivateNonTerminal" (src/partialGrammar.ml[294,9616+4]..[294,9616+22])
                [
                  core_type (src/partialGrammar.ml[294,9616+26]..[294,9616+37])
                    Ptyp_constr "Positions.t" (src/partialGrammar.ml[294,9616+26]..[294,9616+37])
                    []
                ]
                None
              (src/partialGrammar.ml[297,9686+2]..[297,9686+29])
                "Token" (src/partialGrammar.ml[297,9686+4]..[297,9686+9])
                [
                  core_type (src/partialGrammar.ml[297,9686+13]..[297,9686+29])
                    Ptyp_constr "token_properties" (src/partialGrammar.ml[297,9686+13]..[297,9686+29])
                    []
                ]
                None
              (src/partialGrammar.ml[301,9840+2]..[301,9840+27])
                "DontKnow" (src/partialGrammar.ml[301,9840+4]..[301,9840+12])
                [
                  core_type (src/partialGrammar.ml[301,9840+16]..[301,9840+27])
                    Ptyp_constr "Positions.t" (src/partialGrammar.ml[301,9840+16]..[301,9840+27])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/partialGrammar.ml[303,9869+0]..[304,9889+35])
    Pstr_type Rec
    [
      type_declaration "symbol_table" (src/partialGrammar.ml[303,9869+5]..[303,9869+17]) (src/partialGrammar.ml[303,9869+0]..[304,9889+35])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/partialGrammar.ml[304,9889+4]..[304,9889+35])
              Ptyp_constr "Hashtbl.t" (src/partialGrammar.ml[304,9889+26]..[304,9889+35])
              [
                core_type (src/partialGrammar.ml[304,9889+5]..[304,9889+11])
                  Ptyp_constr "symbol" (src/partialGrammar.ml[304,9889+5]..[304,9889+11])
                  []
                core_type (src/partialGrammar.ml[304,9889+13]..[304,9889+24])
                  Ptyp_constr "symbol_kind" (src/partialGrammar.ml[304,9889+13]..[304,9889+24])
                  []
              ]
    ]
  structure_item (src/partialGrammar.ml[306,9926+0]..[307,9976+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[306,9926+4]..[306,9926+15])
          Ppat_var "find_symbol" (src/partialGrammar.ml[306,9926+4]..[306,9926+15])
        expression (src/partialGrammar.ml[306,9926+16]..[307,9976+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[306,9926+16]..[306,9926+40])
            Ppat_constraint
            pattern (src/partialGrammar.ml[306,9926+17]..[306,9926+24])
              Ppat_var "symbols" (src/partialGrammar.ml[306,9926+17]..[306,9926+24])
            core_type (src/partialGrammar.ml[306,9926+27]..[306,9926+39])
              Ptyp_constr "symbol_table" (src/partialGrammar.ml[306,9926+27]..[306,9926+39])
              []
          expression (src/partialGrammar.ml[306,9926+41]..[307,9976+29]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[306,9926+41]..[306,9926+47])
              Ppat_var "symbol" (src/partialGrammar.ml[306,9926+41]..[306,9926+47])
            expression (src/partialGrammar.ml[307,9976+2]..[307,9976+29])
              Pexp_apply
              expression (src/partialGrammar.ml[307,9976+2]..[307,9976+14])
                Pexp_ident "Hashtbl.find" (src/partialGrammar.ml[307,9976+2]..[307,9976+14])
              [
                <arg>
                Nolabel
                  expression (src/partialGrammar.ml[307,9976+15]..[307,9976+22])
                    Pexp_ident "symbols" (src/partialGrammar.ml[307,9976+15]..[307,9976+22])
                <arg>
                Nolabel
                  expression (src/partialGrammar.ml[307,9976+23]..[307,9976+29])
                    Pexp_ident "symbol" (src/partialGrammar.ml[307,9976+23]..[307,9976+29])
              ]
    ]
  structure_item (src/partialGrammar.ml[309,10007+0]..[312,10124+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[309,10007+4]..[309,10007+23])
          Ppat_var "add_in_symbol_table" (src/partialGrammar.ml[309,10007+4]..[309,10007+23])
        expression (src/partialGrammar.ml[309,10007+24]..[312,10124+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[309,10007+24]..[309,10007+48])
            Ppat_constraint
            pattern (src/partialGrammar.ml[309,10007+25]..[309,10007+32])
              Ppat_var "symbols" (src/partialGrammar.ml[309,10007+25]..[309,10007+32])
            core_type (src/partialGrammar.ml[309,10007+35]..[309,10007+47])
              Ptyp_constr "symbol_table" (src/partialGrammar.ml[309,10007+35]..[309,10007+47])
              []
          expression (src/partialGrammar.ml[309,10007+49]..[312,10124+9]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[309,10007+49]..[309,10007+55])
              Ppat_var "symbol" (src/partialGrammar.ml[309,10007+49]..[309,10007+55])
            expression (src/partialGrammar.ml[309,10007+56]..[312,10124+9]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/partialGrammar.ml[309,10007+56]..[309,10007+60])
                Ppat_var "kind" (src/partialGrammar.ml[309,10007+56]..[309,10007+60])
              expression (src/partialGrammar.ml[310,10070+2]..[312,10124+9])
                Pexp_sequence
                expression (src/partialGrammar.ml[310,10070+2]..[310,10070+17])
                  Pexp_apply
                  expression (src/partialGrammar.ml[310,10070+2]..[310,10070+10])
                    Pexp_ident "use_name" (src/partialGrammar.ml[310,10070+2]..[310,10070+10])
                  [
                    <arg>
                    Nolabel
                      expression (src/partialGrammar.ml[310,10070+11]..[310,10070+17])
                        Pexp_ident "symbol" (src/partialGrammar.ml[310,10070+11]..[310,10070+17])
                  ]
                expression (src/partialGrammar.ml[311,10089+2]..[312,10124+9])
                  Pexp_sequence
                  expression (src/partialGrammar.ml[311,10089+2]..[311,10089+33])
                    Pexp_apply
                    expression (src/partialGrammar.ml[311,10089+2]..[311,10089+13])
                      Pexp_ident "Hashtbl.add" (src/partialGrammar.ml[311,10089+2]..[311,10089+13])
                    [
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[311,10089+14]..[311,10089+21])
                          Pexp_ident "symbols" (src/partialGrammar.ml[311,10089+14]..[311,10089+21])
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[311,10089+22]..[311,10089+28])
                          Pexp_ident "symbol" (src/partialGrammar.ml[311,10089+22]..[311,10089+28])
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[311,10089+29]..[311,10089+33])
                          Pexp_ident "kind" (src/partialGrammar.ml[311,10089+29]..[311,10089+33])
                    ]
                  expression (src/partialGrammar.ml[312,10124+2]..[312,10124+9])
                    Pexp_ident "symbols" (src/partialGrammar.ml[312,10124+2]..[312,10124+9])
    ]
  structure_item (src/partialGrammar.ml[314,10135+0]..[316,10241+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[314,10135+4]..[314,10135+27])
          Ppat_var "replace_in_symbol_table" (src/partialGrammar.ml[314,10135+4]..[314,10135+27])
        expression (src/partialGrammar.ml[314,10135+28]..[316,10241+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[314,10135+28]..[314,10135+52])
            Ppat_constraint
            pattern (src/partialGrammar.ml[314,10135+29]..[314,10135+36])
              Ppat_var "symbols" (src/partialGrammar.ml[314,10135+29]..[314,10135+36])
            core_type (src/partialGrammar.ml[314,10135+39]..[314,10135+51])
              Ptyp_constr "symbol_table" (src/partialGrammar.ml[314,10135+39]..[314,10135+51])
              []
          expression (src/partialGrammar.ml[314,10135+53]..[316,10241+9]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[314,10135+53]..[314,10135+59])
              Ppat_var "symbol" (src/partialGrammar.ml[314,10135+53]..[314,10135+59])
            expression (src/partialGrammar.ml[314,10135+60]..[316,10241+9]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/partialGrammar.ml[314,10135+60]..[314,10135+64])
                Ppat_var "kind" (src/partialGrammar.ml[314,10135+60]..[314,10135+64])
              expression (src/partialGrammar.ml[315,10202+2]..[316,10241+9])
                Pexp_sequence
                expression (src/partialGrammar.ml[315,10202+2]..[315,10202+37])
                  Pexp_apply
                  expression (src/partialGrammar.ml[315,10202+2]..[315,10202+17])
                    Pexp_ident "Hashtbl.replace" (src/partialGrammar.ml[315,10202+2]..[315,10202+17])
                  [
                    <arg>
                    Nolabel
                      expression (src/partialGrammar.ml[315,10202+18]..[315,10202+25])
                        Pexp_ident "symbols" (src/partialGrammar.ml[315,10202+18]..[315,10202+25])
                    <arg>
                    Nolabel
                      expression (src/partialGrammar.ml[315,10202+26]..[315,10202+32])
                        Pexp_ident "symbol" (src/partialGrammar.ml[315,10202+26]..[315,10202+32])
                    <arg>
                    Nolabel
                      expression (src/partialGrammar.ml[315,10202+33]..[315,10202+37])
                        Pexp_ident "kind" (src/partialGrammar.ml[315,10202+33]..[315,10202+37])
                  ]
                expression (src/partialGrammar.ml[316,10241+2]..[316,10241+9])
                  Pexp_ident "symbols" (src/partialGrammar.ml[316,10241+2]..[316,10241+9])
    ]
  structure_item (src/partialGrammar.ml[318,10252+0]..[319,10295+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[318,10252+4]..[318,10252+22])
          Ppat_var "empty_symbol_table" (src/partialGrammar.ml[318,10252+4]..[318,10252+22])
        expression (src/partialGrammar.ml[318,10252+23]..[319,10295+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[318,10252+23]..[318,10252+25])
            Ppat_construct "()" (src/partialGrammar.ml[318,10252+23]..[318,10252+25])
            None
          expression (src/partialGrammar.ml[318,10252+26]..[319,10295+19])
            Pexp_constraint
            expression (src/partialGrammar.ml[319,10295+2]..[319,10295+19])
              Pexp_apply
              expression (src/partialGrammar.ml[319,10295+2]..[319,10295+16])
                Pexp_ident "Hashtbl.create" (src/partialGrammar.ml[319,10295+2]..[319,10295+16])
              [
                <arg>
                Nolabel
                  expression (src/partialGrammar.ml[319,10295+17]..[319,10295+19])
                    Pexp_constant PConst_int (13,None)
              ]
            core_type (src/partialGrammar.ml[318,10252+28]..[318,10252+40])
              Ptyp_constr "symbol_table" (src/partialGrammar.ml[318,10252+28]..[318,10252+40])
              []
    ]
  structure_item (src/partialGrammar.ml[321,10316+0]..[357,11771+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[321,10316+4]..[321,10316+16])
          Ppat_var "store_symbol" (src/partialGrammar.ml[321,10316+4]..[321,10316+16])
        expression (src/partialGrammar.ml[321,10316+17]..[357,11771+49]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[321,10316+17]..[321,10316+41])
            Ppat_constraint
            pattern (src/partialGrammar.ml[321,10316+18]..[321,10316+25])
              Ppat_var "symbols" (src/partialGrammar.ml[321,10316+18]..[321,10316+25])
            core_type (src/partialGrammar.ml[321,10316+28]..[321,10316+40])
              Ptyp_constr "symbol_table" (src/partialGrammar.ml[321,10316+28]..[321,10316+40])
              []
          expression (src/partialGrammar.ml[321,10316+42]..[357,11771+49]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[321,10316+42]..[321,10316+48])
              Ppat_var "symbol" (src/partialGrammar.ml[321,10316+42]..[321,10316+48])
            expression (src/partialGrammar.ml[321,10316+49]..[357,11771+49]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/partialGrammar.ml[321,10316+49]..[321,10316+53])
                Ppat_var "kind" (src/partialGrammar.ml[321,10316+49]..[321,10316+53])
              expression (src/partialGrammar.ml[322,10372+2]..[357,11771+49])
                Pexp_match
                expression (src/partialGrammar.ml[322,10372+8]..[322,10372+40])
                  Pexp_tuple
                  [
                    expression (src/partialGrammar.ml[322,10372+8]..[322,10372+34])
                      Pexp_apply
                      expression (src/partialGrammar.ml[322,10372+8]..[322,10372+19])
                        Pexp_ident "find_symbol" (src/partialGrammar.ml[322,10372+8]..[322,10372+19])
                      [
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[322,10372+20]..[322,10372+27])
                            Pexp_ident "symbols" (src/partialGrammar.ml[322,10372+20]..[322,10372+27])
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[322,10372+28]..[322,10372+34])
                            Pexp_ident "symbol" (src/partialGrammar.ml[322,10372+28]..[322,10372+34])
                      ]
                    expression (src/partialGrammar.ml[322,10372+36]..[322,10372+40])
                      Pexp_ident "kind" (src/partialGrammar.ml[322,10372+36]..[322,10372+40])
                  ]
                [
                  <case>
                    pattern (src/partialGrammar.ml[325,10467+4]..[325,10467+23])
                      Ppat_exception
                      pattern (src/partialGrammar.ml[325,10467+14]..[325,10467+23])
                        Ppat_construct "Not_found" (src/partialGrammar.ml[325,10467+14]..[325,10467+23])
                        None
                    expression (src/partialGrammar.ml[326,10494+6]..[326,10494+45])
                      Pexp_apply
                      expression (src/partialGrammar.ml[326,10494+6]..[326,10494+25])
                        Pexp_ident "add_in_symbol_table" (src/partialGrammar.ml[326,10494+6]..[326,10494+25])
                      [
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[326,10494+26]..[326,10494+33])
                            Pexp_ident "symbols" (src/partialGrammar.ml[326,10494+26]..[326,10494+33])
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[326,10494+34]..[326,10494+40])
                            Pexp_ident "symbol" (src/partialGrammar.ml[326,10494+34]..[326,10494+40])
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[326,10494+41]..[326,10494+45])
                            Pexp_ident "kind" (src/partialGrammar.ml[326,10494+41]..[326,10494+45])
                      ]
                  <case>
                    pattern (src/partialGrammar.ml[331,10706+4]..[333,10801+46])
                      Ppat_or
                      pattern (src/partialGrammar.ml[331,10706+4]..[332,10754+46])
                        Ppat_or
                        pattern (src/partialGrammar.ml[331,10706+4]..[331,10706+47])
                          Ppat_tuple
                          [
                            pattern (src/partialGrammar.ml[331,10706+4]..[331,10706+24])
                              Ppat_construct "PrivateNonTerminal" (src/partialGrammar.ml[331,10706+4]..[331,10706+22])
                              Some
                                []
                                pattern (src/partialGrammar.ml[331,10706+23]..[331,10706+24])
                                  Ppat_var "p" (src/partialGrammar.ml[331,10706+23]..[331,10706+24])
                            pattern (src/partialGrammar.ml[331,10706+26]..[331,10706+47])
                              Ppat_construct "PrivateNonTerminal" (src/partialGrammar.ml[331,10706+26]..[331,10706+44])
                              Some
                                []
                                pattern (src/partialGrammar.ml[331,10706+45]..[331,10706+47])
                                  Ppat_var "p'" (src/partialGrammar.ml[331,10706+45]..[331,10706+47])
                          ]
                        pattern (src/partialGrammar.ml[332,10754+4]..[332,10754+46])
                          Ppat_tuple
                          [
                            pattern (src/partialGrammar.ml[332,10754+4]..[332,10754+23])
                              Ppat_construct "PublicNonTerminal" (src/partialGrammar.ml[332,10754+4]..[332,10754+21])
                              Some
                                []
                                pattern (src/partialGrammar.ml[332,10754+22]..[332,10754+23])
                                  Ppat_var "p" (src/partialGrammar.ml[332,10754+22]..[332,10754+23])
                            pattern (src/partialGrammar.ml[332,10754+25]..[332,10754+46])
                              Ppat_construct "PrivateNonTerminal" (src/partialGrammar.ml[332,10754+25]..[332,10754+43])
                              Some
                                []
                                pattern (src/partialGrammar.ml[332,10754+44]..[332,10754+46])
                                  Ppat_var "p'" (src/partialGrammar.ml[332,10754+44]..[332,10754+46])
                          ]
                      pattern (src/partialGrammar.ml[333,10801+4]..[333,10801+46])
                        Ppat_tuple
                        [
                          pattern (src/partialGrammar.ml[333,10801+4]..[333,10801+24])
                            Ppat_construct "PrivateNonTerminal" (src/partialGrammar.ml[333,10801+4]..[333,10801+22])
                            Some
                              []
                              pattern (src/partialGrammar.ml[333,10801+23]..[333,10801+24])
                                Ppat_var "p" (src/partialGrammar.ml[333,10801+23]..[333,10801+24])
                          pattern (src/partialGrammar.ml[333,10801+26]..[333,10801+46])
                            Ppat_construct "PublicNonTerminal" (src/partialGrammar.ml[333,10801+26]..[333,10801+43])
                            Some
                              []
                              pattern (src/partialGrammar.ml[333,10801+44]..[333,10801+46])
                                Ppat_var "p'" (src/partialGrammar.ml[333,10801+44]..[333,10801+46])
                        ]
                    expression (src/partialGrammar.ml[334,10851+6]..[337,10997+14])
                      Pexp_apply
                      expression (src/partialGrammar.ml[334,10851+6]..[334,10851+17])
                        Pexp_ident "Error.error" (src/partialGrammar.ml[334,10851+6]..[334,10851+17])
                      [
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[334,10851+18]..[334,10851+26])
                            Pexp_construct "::" (src/partialGrammar.ml[334,10851+20]..[334,10851+26]) ghost
                            Some
                              expression (src/partialGrammar.ml[334,10851+20]..[334,10851+26]) ghost
                                Pexp_tuple
                                [
                                  expression (src/partialGrammar.ml[334,10851+20]..[334,10851+21])
                                    Pexp_ident "p" (src/partialGrammar.ml[334,10851+20]..[334,10851+21])
                                  expression (src/partialGrammar.ml[334,10851+23]..[334,10851+26]) ghost
                                    Pexp_construct "::" (src/partialGrammar.ml[334,10851+23]..[334,10851+26]) ghost
                                    Some
                                      expression (src/partialGrammar.ml[334,10851+23]..[334,10851+26]) ghost
                                        Pexp_tuple
                                        [
                                          expression (src/partialGrammar.ml[334,10851+23]..[334,10851+25])
                                            Pexp_ident "p'" (src/partialGrammar.ml[334,10851+23]..[334,10851+25])
                                          expression (src/partialGrammar.ml[334,10851+25]..[334,10851+26]) ghost
                                            Pexp_construct "[]" (src/partialGrammar.ml[334,10851+25]..[334,10851+26]) ghost
                                            None
                                        ]
                                ]
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[335,10878+8]..[336,10937+59])
                            Pexp_constant PConst_string("the nonterminal symbol %s is multiply defined.\nOnly %%public symbols can have split definitions.",(src/partialGrammar.ml[335,10878+9]..[336,10937+58]),None)
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[337,10997+8]..[337,10997+14])
                            Pexp_ident "symbol" (src/partialGrammar.ml[337,10997+8]..[337,10997+14])
                      ]
                  <case>
                    pattern (src/partialGrammar.ml[340,11085+4]..[341,11145+59])
                      Ppat_or
                      pattern (src/partialGrammar.ml[340,11085+4]..[340,11085+59])
                        Ppat_tuple
                        [
                          pattern (src/partialGrammar.ml[340,11085+4]..[340,11085+13])
                            Ppat_construct "Token" (src/partialGrammar.ml[340,11085+4]..[340,11085+9])
                            Some
                              []
                              pattern (src/partialGrammar.ml[340,11085+10]..[340,11085+13])
                                Ppat_var "tkp" (src/partialGrammar.ml[340,11085+10]..[340,11085+13])
                          pattern (src/partialGrammar.ml[340,11085+15]..[340,11085+59])
                            Ppat_or
                            pattern (src/partialGrammar.ml[340,11085+16]..[340,11085+36])
                              Ppat_construct "PrivateNonTerminal" (src/partialGrammar.ml[340,11085+16]..[340,11085+34])
                              Some
                                []
                                pattern (src/partialGrammar.ml[340,11085+35]..[340,11085+36])
                                  Ppat_var "p" (src/partialGrammar.ml[340,11085+35]..[340,11085+36])
                            pattern (src/partialGrammar.ml[340,11085+39]..[340,11085+58])
                              Ppat_construct "PublicNonTerminal" (src/partialGrammar.ml[340,11085+39]..[340,11085+56])
                              Some
                                []
                                pattern (src/partialGrammar.ml[340,11085+57]..[340,11085+58])
                                  Ppat_var "p" (src/partialGrammar.ml[340,11085+57]..[340,11085+58])
                        ]
                      pattern (src/partialGrammar.ml[341,11145+4]..[341,11145+59])
                        Ppat_tuple
                        [
                          pattern (src/partialGrammar.ml[341,11145+4]..[341,11145+48])
                            Ppat_or
                            pattern (src/partialGrammar.ml[341,11145+5]..[341,11145+25])
                              Ppat_construct "PrivateNonTerminal" (src/partialGrammar.ml[341,11145+5]..[341,11145+23])
                              Some
                                []
                                pattern (src/partialGrammar.ml[341,11145+24]..[341,11145+25])
                                  Ppat_var "p" (src/partialGrammar.ml[341,11145+24]..[341,11145+25])
                            pattern (src/partialGrammar.ml[341,11145+28]..[341,11145+47])
                              Ppat_construct "PublicNonTerminal" (src/partialGrammar.ml[341,11145+28]..[341,11145+45])
                              Some
                                []
                                pattern (src/partialGrammar.ml[341,11145+46]..[341,11145+47])
                                  Ppat_var "p" (src/partialGrammar.ml[341,11145+46]..[341,11145+47])
                          pattern (src/partialGrammar.ml[341,11145+50]..[341,11145+59])
                            Ppat_construct "Token" (src/partialGrammar.ml[341,11145+50]..[341,11145+55])
                            Some
                              []
                              pattern (src/partialGrammar.ml[341,11145+56]..[341,11145+59])
                                Ppat_var "tkp" (src/partialGrammar.ml[341,11145+56]..[341,11145+59])
                        ]
                    expression (src/partialGrammar.ml[342,11208+6]..[344,11307+17])
                      Pexp_apply
                      expression (src/partialGrammar.ml[342,11208+6]..[342,11208+17])
                        Pexp_ident "Error.error" (src/partialGrammar.ml[342,11208+6]..[342,11208+17])
                      [
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[342,11208+18]..[342,11208+40])
                            Pexp_construct "::" (src/partialGrammar.ml[342,11208+20]..[342,11208+40]) ghost
                            Some
                              expression (src/partialGrammar.ml[342,11208+20]..[342,11208+40]) ghost
                                Pexp_tuple
                                [
                                  expression (src/partialGrammar.ml[342,11208+20]..[342,11208+21])
                                    Pexp_ident "p" (src/partialGrammar.ml[342,11208+20]..[342,11208+21])
                                  expression (src/partialGrammar.ml[342,11208+23]..[342,11208+40]) ghost
                                    Pexp_construct "::" (src/partialGrammar.ml[342,11208+23]..[342,11208+40]) ghost
                                    Some
                                      expression (src/partialGrammar.ml[342,11208+23]..[342,11208+40]) ghost
                                        Pexp_tuple
                                        [
                                          expression (src/partialGrammar.ml[342,11208+23]..[342,11208+38])
                                            Pexp_field
                                            expression (src/partialGrammar.ml[342,11208+23]..[342,11208+26])
                                              Pexp_ident "tkp" (src/partialGrammar.ml[342,11208+23]..[342,11208+26])
                                            "tk_position" (src/partialGrammar.ml[342,11208+27]..[342,11208+38])
                                          expression (src/partialGrammar.ml[342,11208+39]..[342,11208+40]) ghost
                                            Pexp_construct "[]" (src/partialGrammar.ml[342,11208+39]..[342,11208+40]) ghost
                                            None
                                        ]
                                ]
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[343,11249+11]..[343,11249+57])
                            Pexp_constant PConst_string("the identifier %s is a reference to a token.",(src/partialGrammar.ml[343,11249+12]..[343,11249+56]),None)
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[344,11307+11]..[344,11307+17])
                            Pexp_ident "symbol" (src/partialGrammar.ml[344,11307+11]..[344,11307+17])
                      ]
                  <case>
                    pattern (src/partialGrammar.ml[350,11586+4]..[352,11625+44])
                      Ppat_or
                      pattern (src/partialGrammar.ml[350,11586+4]..[351,11604+20])
                        Ppat_or
                        pattern (src/partialGrammar.ml[350,11586+4]..[350,11586+17])
                          Ppat_tuple
                          [
                            pattern (src/partialGrammar.ml[350,11586+4]..[350,11586+5])
                              Ppat_any
                            pattern (src/partialGrammar.ml[350,11586+7]..[350,11586+17])
                              Ppat_construct "DontKnow" (src/partialGrammar.ml[350,11586+7]..[350,11586+15])
                              Some
                                []
                                pattern (src/partialGrammar.ml[350,11586+16]..[350,11586+17])
                                  Ppat_any
                          ]
                        pattern (src/partialGrammar.ml[351,11604+4]..[351,11604+20])
                          Ppat_tuple
                          [
                            pattern (src/partialGrammar.ml[351,11604+4]..[351,11604+11])
                              Ppat_construct "Token" (src/partialGrammar.ml[351,11604+4]..[351,11604+9])
                              Some
                                []
                                pattern (src/partialGrammar.ml[351,11604+10]..[351,11604+11])
                                  Ppat_any
                            pattern (src/partialGrammar.ml[351,11604+13]..[351,11604+20])
                              Ppat_construct "Token" (src/partialGrammar.ml[351,11604+13]..[351,11604+18])
                              Some
                                []
                                pattern (src/partialGrammar.ml[351,11604+19]..[351,11604+20])
                                  Ppat_any
                          ]
                      pattern (src/partialGrammar.ml[352,11625+4]..[352,11625+44])
                        Ppat_tuple
                        [
                          pattern (src/partialGrammar.ml[352,11625+4]..[352,11625+23])
                            Ppat_construct "PublicNonTerminal" (src/partialGrammar.ml[352,11625+4]..[352,11625+21])
                            Some
                              []
                              pattern (src/partialGrammar.ml[352,11625+22]..[352,11625+23])
                                Ppat_any
                          pattern (src/partialGrammar.ml[352,11625+25]..[352,11625+44])
                            Ppat_construct "PublicNonTerminal" (src/partialGrammar.ml[352,11625+25]..[352,11625+42])
                            Some
                              []
                              pattern (src/partialGrammar.ml[352,11625+43]..[352,11625+44])
                                Ppat_any
                        ]
                    expression (src/partialGrammar.ml[353,11673+6]..[353,11673+13])
                      Pexp_ident "symbols" (src/partialGrammar.ml[353,11673+6]..[353,11673+13])
                  <case>
                    pattern (src/partialGrammar.ml[356,11750+4]..[356,11750+17])
                      Ppat_tuple
                      [
                        pattern (src/partialGrammar.ml[356,11750+4]..[356,11750+14])
                          Ppat_construct "DontKnow" (src/partialGrammar.ml[356,11750+4]..[356,11750+12])
                          Some
                            []
                            pattern (src/partialGrammar.ml[356,11750+13]..[356,11750+14])
                              Ppat_any
                        pattern (src/partialGrammar.ml[356,11750+16]..[356,11750+17])
                          Ppat_any
                      ]
                    expression (src/partialGrammar.ml[357,11771+6]..[357,11771+49])
                      Pexp_apply
                      expression (src/partialGrammar.ml[357,11771+6]..[357,11771+29])
                        Pexp_ident "replace_in_symbol_table" (src/partialGrammar.ml[357,11771+6]..[357,11771+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[357,11771+30]..[357,11771+37])
                            Pexp_ident "symbols" (src/partialGrammar.ml[357,11771+30]..[357,11771+37])
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[357,11771+38]..[357,11771+44])
                            Pexp_ident "symbol" (src/partialGrammar.ml[357,11771+38]..[357,11771+44])
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[357,11771+45]..[357,11771+49])
                            Pexp_ident "kind" (src/partialGrammar.ml[357,11771+45]..[357,11771+49])
                      ]
                ]
    ]
  structure_item (src/partialGrammar.ml[359,11822+0]..[366,11992+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[359,11822+4]..[359,11822+21])
          Ppat_var "store_used_symbol" (src/partialGrammar.ml[359,11822+4]..[359,11822+21])
        expression (src/partialGrammar.ml[359,11822+22]..[366,11992+34]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[359,11822+22]..[359,11822+30])
            Ppat_var "position" (src/partialGrammar.ml[359,11822+22]..[359,11822+30])
          expression (src/partialGrammar.ml[359,11822+31]..[366,11992+34]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[359,11822+31]..[359,11822+37])
              Ppat_var "tokens" (src/partialGrammar.ml[359,11822+31]..[359,11822+37])
            expression (src/partialGrammar.ml[359,11822+38]..[366,11992+34]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/partialGrammar.ml[359,11822+38]..[359,11822+45])
                Ppat_var "symbols" (src/partialGrammar.ml[359,11822+38]..[359,11822+45])
              expression (src/partialGrammar.ml[359,11822+46]..[366,11992+34]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/partialGrammar.ml[359,11822+46]..[359,11822+52])
                  Ppat_var "symbol" (src/partialGrammar.ml[359,11822+46]..[359,11822+52])
                expression (src/partialGrammar.ml[360,11877+2]..[366,11992+34])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/partialGrammar.ml[360,11877+6]..[360,11877+10])
                        Ppat_var "kind" (src/partialGrammar.ml[360,11877+6]..[360,11877+10])
                      expression (src/partialGrammar.ml[361,11890+4]..[364,11963+23])
                        Pexp_try
                        expression (src/partialGrammar.ml[362,11898+6]..[362,11898+42])
                          Pexp_construct "Token" (src/partialGrammar.ml[362,11898+6]..[362,11898+11])
                          Some
                            expression (src/partialGrammar.ml[362,11898+12]..[362,11898+42])
                              Pexp_apply
                              expression (src/partialGrammar.ml[362,11898+13]..[362,11898+27])
                                Pexp_ident "StringMap.find" (src/partialGrammar.ml[362,11898+13]..[362,11898+27])
                              [
                                <arg>
                                Nolabel
                                  expression (src/partialGrammar.ml[362,11898+28]..[362,11898+34])
                                    Pexp_ident "symbol" (src/partialGrammar.ml[362,11898+28]..[362,11898+34])
                                <arg>
                                Nolabel
                                  expression (src/partialGrammar.ml[362,11898+35]..[362,11898+41])
                                    Pexp_ident "tokens" (src/partialGrammar.ml[362,11898+35]..[362,11898+41])
                              ]
                        [
                          <case>
                            pattern (src/partialGrammar.ml[363,11941+9]..[363,11941+18])
                              Ppat_construct "Not_found" (src/partialGrammar.ml[363,11941+9]..[363,11941+18])
                              None
                            expression (src/partialGrammar.ml[364,11963+6]..[364,11963+23])
                              Pexp_construct "DontKnow" (src/partialGrammar.ml[364,11963+6]..[364,11963+14])
                              Some
                                expression (src/partialGrammar.ml[364,11963+15]..[364,11963+23])
                                  Pexp_ident "position" (src/partialGrammar.ml[364,11963+15]..[364,11963+23])
                        ]
                  ]
                  expression (src/partialGrammar.ml[366,11992+2]..[366,11992+34])
                    Pexp_apply
                    expression (src/partialGrammar.ml[366,11992+2]..[366,11992+14])
                      Pexp_ident "store_symbol" (src/partialGrammar.ml[366,11992+2]..[366,11992+14])
                    [
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[366,11992+15]..[366,11992+22])
                          Pexp_ident "symbols" (src/partialGrammar.ml[366,11992+15]..[366,11992+22])
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[366,11992+23]..[366,11992+29])
                          Pexp_ident "symbol" (src/partialGrammar.ml[366,11992+23]..[366,11992+29])
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[366,11992+30]..[366,11992+34])
                          Pexp_ident "kind" (src/partialGrammar.ml[366,11992+30]..[366,11992+34])
                    ]
    ]
  structure_item (src/partialGrammar.ml[368,12028+0]..[372,12181+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[368,12028+4]..[368,12028+32])
          Ppat_var "non_terminal_is_not_reserved" (src/partialGrammar.ml[368,12028+4]..[368,12028+32])
        expression (src/partialGrammar.ml[368,12028+33]..[372,12181+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[368,12028+33]..[368,12028+39])
            Ppat_var "symbol" (src/partialGrammar.ml[368,12028+33]..[368,12028+39])
          expression (src/partialGrammar.ml[368,12028+40]..[372,12181+40]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[368,12028+40]..[368,12028+49])
              Ppat_var "positions" (src/partialGrammar.ml[368,12028+40]..[368,12028+49])
            expression (src/partialGrammar.ml[369,12080+2]..[372,12181+40])
              Pexp_ifthenelse
              expression (src/partialGrammar.ml[369,12080+5]..[369,12080+21])
                Pexp_apply
                expression (src/partialGrammar.ml[369,12080+12]..[369,12080+13])
                  Pexp_ident "=" (src/partialGrammar.ml[369,12080+12]..[369,12080+13])
                [
                  <arg>
                  Nolabel
                    expression (src/partialGrammar.ml[369,12080+5]..[369,12080+11])
                      Pexp_ident "symbol" (src/partialGrammar.ml[369,12080+5]..[369,12080+11])
                  <arg>
                  Nolabel
                    expression (src/partialGrammar.ml[369,12080+14]..[369,12080+21])
                      Pexp_constant PConst_string("error",(src/partialGrammar.ml[369,12080+15]..[369,12080+20]),None)
                ]
              expression (src/partialGrammar.ml[370,12107+4]..[372,12181+40])
                Pexp_apply
                expression (src/partialGrammar.ml[370,12107+4]..[370,12107+15])
                  Pexp_ident "Error.error" (src/partialGrammar.ml[370,12107+4]..[370,12107+15])
                [
                  <arg>
                  Nolabel
                    expression (src/partialGrammar.ml[370,12107+16]..[370,12107+25])
                      Pexp_ident "positions" (src/partialGrammar.ml[370,12107+16]..[370,12107+25])
                  <arg>
                  Nolabel
                    expression (src/partialGrammar.ml[371,12133+6]..[372,12181+33])
                      Pexp_constant PConst_string("%s is reserved and thus cannot be used as a non-terminal symbol.",(src/partialGrammar.ml[371,12133+7]..[372,12181+32]),None)
                  <arg>
                  Nolabel
                    expression (src/partialGrammar.ml[372,12181+34]..[372,12181+40])
                      Pexp_ident "symbol" (src/partialGrammar.ml[372,12181+34]..[372,12181+40])
                ]
              None
    ]
  structure_item (src/partialGrammar.ml[374,12223+0]..[380,12457+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[374,12223+4]..[374,12223+31])
          Ppat_var "non_terminal_is_not_a_token" (src/partialGrammar.ml[374,12223+4]..[374,12223+31])
        expression (src/partialGrammar.ml[374,12223+32]..[380,12457+22]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[374,12223+32]..[374,12223+38])
            Ppat_var "tokens" (src/partialGrammar.ml[374,12223+32]..[374,12223+38])
          expression (src/partialGrammar.ml[374,12223+39]..[380,12457+22]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[374,12223+39]..[374,12223+45])
              Ppat_var "symbol" (src/partialGrammar.ml[374,12223+39]..[374,12223+45])
            expression (src/partialGrammar.ml[374,12223+46]..[380,12457+22]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/partialGrammar.ml[374,12223+46]..[374,12223+55])
                Ppat_var "positions" (src/partialGrammar.ml[374,12223+46]..[374,12223+55])
              expression (src/partialGrammar.ml[375,12281+2]..[380,12457+22])
                Pexp_try
                expression (src/partialGrammar.ml[376,12287+4]..[379,12441+15])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/partialGrammar.ml[376,12287+8]..[376,12287+11])
                        Ppat_var "tkp" (src/partialGrammar.ml[376,12287+8]..[376,12287+11])
                      expression (src/partialGrammar.ml[376,12287+14]..[376,12287+42])
                        Pexp_apply
                        expression (src/partialGrammar.ml[376,12287+14]..[376,12287+28])
                          Pexp_ident "StringMap.find" (src/partialGrammar.ml[376,12287+14]..[376,12287+28])
                        [
                          <arg>
                          Nolabel
                            expression (src/partialGrammar.ml[376,12287+29]..[376,12287+35])
                              Pexp_ident "symbol" (src/partialGrammar.ml[376,12287+29]..[376,12287+35])
                          <arg>
                          Nolabel
                            expression (src/partialGrammar.ml[376,12287+36]..[376,12287+42])
                              Pexp_ident "tokens" (src/partialGrammar.ml[376,12287+36]..[376,12287+42])
                        ]
                  ]
                  expression (src/partialGrammar.ml[377,12333+6]..[379,12441+15])
                    Pexp_apply
                    expression (src/partialGrammar.ml[377,12333+6]..[377,12333+17])
                      Pexp_ident "Error.error" (src/partialGrammar.ml[377,12333+6]..[377,12333+17])
                    [
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[377,12333+18]..[377,12333+51])
                          Pexp_apply
                          expression (src/partialGrammar.ml[377,12333+29]..[377,12333+30])
                            Pexp_ident "@" (src/partialGrammar.ml[377,12333+29]..[377,12333+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/partialGrammar.ml[377,12333+19]..[377,12333+28])
                                Pexp_ident "positions" (src/partialGrammar.ml[377,12333+19]..[377,12333+28])
                            <arg>
                            Nolabel
                              expression (src/partialGrammar.ml[377,12333+31]..[377,12333+50])
                                Pexp_construct "::" (src/partialGrammar.ml[377,12333+33]..[377,12333+50]) ghost
                                Some
                                  expression (src/partialGrammar.ml[377,12333+33]..[377,12333+50]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/partialGrammar.ml[377,12333+33]..[377,12333+48])
                                        Pexp_field
                                        expression (src/partialGrammar.ml[377,12333+33]..[377,12333+36])
                                          Pexp_ident "tkp" (src/partialGrammar.ml[377,12333+33]..[377,12333+36])
                                        "tk_position" (src/partialGrammar.ml[377,12333+37]..[377,12333+48])
                                      expression (src/partialGrammar.ml[377,12333+49]..[377,12333+50]) ghost
                                        Pexp_construct "[]" (src/partialGrammar.ml[377,12333+49]..[377,12333+50]) ghost
                                        None
                                    ]
                          ]
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[378,12385+9]..[378,12385+55])
                          Pexp_constant PConst_string("the identifier %s is a reference to a token.",(src/partialGrammar.ml[378,12385+10]..[378,12385+54]),None)
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[379,12441+9]..[379,12441+15])
                          Pexp_ident "symbol" (src/partialGrammar.ml[379,12441+9]..[379,12441+15])
                    ]
                [
                  <case>
                    pattern (src/partialGrammar.ml[380,12457+7]..[380,12457+16])
                      Ppat_construct "Not_found" (src/partialGrammar.ml[380,12457+7]..[380,12457+16])
                      None
                    expression (src/partialGrammar.ml[380,12457+20]..[380,12457+22])
                      Pexp_construct "()" (src/partialGrammar.ml[380,12457+20]..[380,12457+22])
                      None
                ]
    ]
  structure_item (src/partialGrammar.ml[382,12481+0]..[385,12648+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[382,12481+4]..[382,12481+28])
          Ppat_var "store_public_nonterminal" (src/partialGrammar.ml[382,12481+4]..[382,12481+28])
        expression (src/partialGrammar.ml[382,12481+29]..[385,12648+69]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[382,12481+29]..[382,12481+35])
            Ppat_var "tokens" (src/partialGrammar.ml[382,12481+29]..[382,12481+35])
          expression (src/partialGrammar.ml[382,12481+36]..[385,12648+69]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[382,12481+36]..[382,12481+43])
              Ppat_var "symbols" (src/partialGrammar.ml[382,12481+36]..[382,12481+43])
            expression (src/partialGrammar.ml[382,12481+44]..[385,12648+69]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/partialGrammar.ml[382,12481+44]..[382,12481+50])
                Ppat_var "symbol" (src/partialGrammar.ml[382,12481+44]..[382,12481+50])
              expression (src/partialGrammar.ml[382,12481+51]..[385,12648+69]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/partialGrammar.ml[382,12481+51]..[382,12481+60])
                  Ppat_var "positions" (src/partialGrammar.ml[382,12481+51]..[382,12481+60])
                expression (src/partialGrammar.ml[383,12544+2]..[385,12648+69])
                  Pexp_sequence
                  expression (src/partialGrammar.ml[383,12544+2]..[383,12544+47])
                    Pexp_apply
                    expression (src/partialGrammar.ml[383,12544+2]..[383,12544+30])
                      Pexp_ident "non_terminal_is_not_reserved" (src/partialGrammar.ml[383,12544+2]..[383,12544+30])
                    [
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[383,12544+31]..[383,12544+37])
                          Pexp_ident "symbol" (src/partialGrammar.ml[383,12544+31]..[383,12544+37])
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[383,12544+38]..[383,12544+47])
                          Pexp_ident "positions" (src/partialGrammar.ml[383,12544+38]..[383,12544+47])
                    ]
                  expression (src/partialGrammar.ml[384,12593+2]..[385,12648+69])
                    Pexp_sequence
                    expression (src/partialGrammar.ml[384,12593+2]..[384,12593+53])
                      Pexp_apply
                      expression (src/partialGrammar.ml[384,12593+2]..[384,12593+29])
                        Pexp_ident "non_terminal_is_not_a_token" (src/partialGrammar.ml[384,12593+2]..[384,12593+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[384,12593+30]..[384,12593+36])
                            Pexp_ident "tokens" (src/partialGrammar.ml[384,12593+30]..[384,12593+36])
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[384,12593+37]..[384,12593+43])
                            Pexp_ident "symbol" (src/partialGrammar.ml[384,12593+37]..[384,12593+43])
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[384,12593+44]..[384,12593+53])
                            Pexp_ident "positions" (src/partialGrammar.ml[384,12593+44]..[384,12593+53])
                      ]
                    expression (src/partialGrammar.ml[385,12648+2]..[385,12648+69])
                      Pexp_apply
                      expression (src/partialGrammar.ml[385,12648+2]..[385,12648+14])
                        Pexp_ident "store_symbol" (src/partialGrammar.ml[385,12648+2]..[385,12648+14])
                      [
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[385,12648+15]..[385,12648+22])
                            Pexp_ident "symbols" (src/partialGrammar.ml[385,12648+15]..[385,12648+22])
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[385,12648+23]..[385,12648+29])
                            Pexp_ident "symbol" (src/partialGrammar.ml[385,12648+23]..[385,12648+29])
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[385,12648+30]..[385,12648+69])
                            Pexp_construct "PublicNonTerminal" (src/partialGrammar.ml[385,12648+31]..[385,12648+48])
                            Some
                              expression (src/partialGrammar.ml[385,12648+49]..[385,12648+68])
                                Pexp_apply
                                expression (src/partialGrammar.ml[385,12648+50]..[385,12648+57])
                                  Pexp_ident "List.hd" (src/partialGrammar.ml[385,12648+50]..[385,12648+57])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/partialGrammar.ml[385,12648+58]..[385,12648+67])
                                      Pexp_ident "positions" (src/partialGrammar.ml[385,12648+58]..[385,12648+67])
                                ]
                      ]
    ]
  structure_item (src/partialGrammar.ml[387,12719+0]..[390,12887+70])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[387,12719+4]..[387,12719+29])
          Ppat_var "store_private_nonterminal" (src/partialGrammar.ml[387,12719+4]..[387,12719+29])
        expression (src/partialGrammar.ml[387,12719+30]..[390,12887+70]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[387,12719+30]..[387,12719+36])
            Ppat_var "tokens" (src/partialGrammar.ml[387,12719+30]..[387,12719+36])
          expression (src/partialGrammar.ml[387,12719+37]..[390,12887+70]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[387,12719+37]..[387,12719+44])
              Ppat_var "symbols" (src/partialGrammar.ml[387,12719+37]..[387,12719+44])
            expression (src/partialGrammar.ml[387,12719+45]..[390,12887+70]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/partialGrammar.ml[387,12719+45]..[387,12719+51])
                Ppat_var "symbol" (src/partialGrammar.ml[387,12719+45]..[387,12719+51])
              expression (src/partialGrammar.ml[387,12719+52]..[390,12887+70]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/partialGrammar.ml[387,12719+52]..[387,12719+61])
                  Ppat_var "positions" (src/partialGrammar.ml[387,12719+52]..[387,12719+61])
                expression (src/partialGrammar.ml[388,12783+2]..[390,12887+70])
                  Pexp_sequence
                  expression (src/partialGrammar.ml[388,12783+2]..[388,12783+47])
                    Pexp_apply
                    expression (src/partialGrammar.ml[388,12783+2]..[388,12783+30])
                      Pexp_ident "non_terminal_is_not_reserved" (src/partialGrammar.ml[388,12783+2]..[388,12783+30])
                    [
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[388,12783+31]..[388,12783+37])
                          Pexp_ident "symbol" (src/partialGrammar.ml[388,12783+31]..[388,12783+37])
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[388,12783+38]..[388,12783+47])
                          Pexp_ident "positions" (src/partialGrammar.ml[388,12783+38]..[388,12783+47])
                    ]
                  expression (src/partialGrammar.ml[389,12832+2]..[390,12887+70])
                    Pexp_sequence
                    expression (src/partialGrammar.ml[389,12832+2]..[389,12832+53])
                      Pexp_apply
                      expression (src/partialGrammar.ml[389,12832+2]..[389,12832+29])
                        Pexp_ident "non_terminal_is_not_a_token" (src/partialGrammar.ml[389,12832+2]..[389,12832+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[389,12832+30]..[389,12832+36])
                            Pexp_ident "tokens" (src/partialGrammar.ml[389,12832+30]..[389,12832+36])
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[389,12832+37]..[389,12832+43])
                            Pexp_ident "symbol" (src/partialGrammar.ml[389,12832+37]..[389,12832+43])
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[389,12832+44]..[389,12832+53])
                            Pexp_ident "positions" (src/partialGrammar.ml[389,12832+44]..[389,12832+53])
                      ]
                    expression (src/partialGrammar.ml[390,12887+2]..[390,12887+70])
                      Pexp_apply
                      expression (src/partialGrammar.ml[390,12887+2]..[390,12887+14])
                        Pexp_ident "store_symbol" (src/partialGrammar.ml[390,12887+2]..[390,12887+14])
                      [
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[390,12887+15]..[390,12887+22])
                            Pexp_ident "symbols" (src/partialGrammar.ml[390,12887+15]..[390,12887+22])
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[390,12887+23]..[390,12887+29])
                            Pexp_ident "symbol" (src/partialGrammar.ml[390,12887+23]..[390,12887+29])
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[390,12887+30]..[390,12887+70])
                            Pexp_construct "PrivateNonTerminal" (src/partialGrammar.ml[390,12887+31]..[390,12887+49])
                            Some
                              expression (src/partialGrammar.ml[390,12887+50]..[390,12887+69])
                                Pexp_apply
                                expression (src/partialGrammar.ml[390,12887+51]..[390,12887+58])
                                  Pexp_ident "List.hd" (src/partialGrammar.ml[390,12887+51]..[390,12887+58])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/partialGrammar.ml[390,12887+59]..[390,12887+68])
                                      Pexp_ident "positions" (src/partialGrammar.ml[390,12887+59]..[390,12887+68])
                                ]
                      ]
    ]
  structure_item (src/partialGrammar.ml[421,13795+0]..[429,13957+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[421,13795+4]..[421,13795+21])
          Ppat_var "is_private_symbol" (src/partialGrammar.ml[421,13795+4]..[421,13795+21])
        expression (src/partialGrammar.ml[421,13795+22]..[429,13957+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[421,13795+22]..[421,13795+23])
            Ppat_var "t" (src/partialGrammar.ml[421,13795+22]..[421,13795+23])
          expression (src/partialGrammar.ml[421,13795+24]..[429,13957+9]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[421,13795+24]..[421,13795+25])
              Ppat_var "x" (src/partialGrammar.ml[421,13795+24]..[421,13795+25])
            expression (src/partialGrammar.ml[422,13823+2]..[429,13957+9])
              Pexp_try
              expression (src/partialGrammar.ml[423,13829+4]..[427,13921+15])
                Pexp_match
                expression (src/partialGrammar.ml[423,13829+10]..[423,13829+26])
                  Pexp_apply
                  expression (src/partialGrammar.ml[423,13829+10]..[423,13829+22])
                    Pexp_ident "Hashtbl.find" (src/partialGrammar.ml[423,13829+10]..[423,13829+22])
                  [
                    <arg>
                    Nolabel
                      expression (src/partialGrammar.ml[423,13829+23]..[423,13829+24])
                        Pexp_ident "t" (src/partialGrammar.ml[423,13829+23]..[423,13829+24])
                    <arg>
                    Nolabel
                      expression (src/partialGrammar.ml[423,13829+25]..[423,13829+26])
                        Pexp_ident "x" (src/partialGrammar.ml[423,13829+25]..[423,13829+26])
                  ]
                [
                  <case>
                    pattern (src/partialGrammar.ml[424,13861+8]..[424,13861+28])
                      Ppat_construct "PrivateNonTerminal" (src/partialGrammar.ml[424,13861+8]..[424,13861+26])
                      Some
                        []
                        pattern (src/partialGrammar.ml[424,13861+27]..[424,13861+28])
                          Ppat_any
                    expression (src/partialGrammar.ml[425,13893+10]..[425,13893+14])
                      Pexp_construct "true" (src/partialGrammar.ml[425,13893+10]..[425,13893+14])
                      None
                  <case>
                    pattern (src/partialGrammar.ml[426,13908+8]..[426,13908+9])
                      Ppat_any
                    expression (src/partialGrammar.ml[427,13921+10]..[427,13921+15])
                      Pexp_construct "false" (src/partialGrammar.ml[427,13921+10]..[427,13921+15])
                      None
                ]
              [
                <case>
                  pattern (src/partialGrammar.ml[428,13937+7]..[428,13937+16])
                    Ppat_construct "Not_found" (src/partialGrammar.ml[428,13937+7]..[428,13937+16])
                    None
                  expression (src/partialGrammar.ml[429,13957+4]..[429,13957+9])
                    Pexp_construct "false" (src/partialGrammar.ml[429,13957+4]..[429,13957+9])
                    None
              ]
    ]
  structure_item (src/partialGrammar.ml[431,13968+0]..[435,14122+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[431,13968+4]..[431,13968+27])
          Ppat_var "fold_on_private_symbols" (src/partialGrammar.ml[431,13968+4]..[431,13968+27])
        expression (src/partialGrammar.ml[431,13968+28]..[435,14122+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[431,13968+28]..[431,13968+29])
            Ppat_var "f" (src/partialGrammar.ml[431,13968+28]..[431,13968+29])
          expression (src/partialGrammar.ml[431,13968+30]..[435,14122+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[431,13968+30]..[431,13968+34])
              Ppat_var "init" (src/partialGrammar.ml[431,13968+30]..[431,13968+34])
            expression (src/partialGrammar.ml[431,13968+35]..[435,14122+10]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/partialGrammar.ml[431,13968+35]..[431,13968+36])
                Ppat_var "t" (src/partialGrammar.ml[431,13968+35]..[431,13968+36])
              expression (src/partialGrammar.ml[432,14007+2]..[435,14122+10])
                Pexp_apply
                expression (src/partialGrammar.ml[432,14007+2]..[432,14007+14])
                  Pexp_ident "Hashtbl.fold" (src/partialGrammar.ml[432,14007+2]..[432,14007+14])
                [
                  <arg>
                  Nolabel
                    expression (src/partialGrammar.ml[433,14022+4]..[434,14090+31])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/partialGrammar.ml[433,14022+9]..[433,14022+10])
                        Ppat_var "k" (src/partialGrammar.ml[433,14022+9]..[433,14022+10])
                      expression (src/partialGrammar.ml[433,14022+14]..[434,14090+30])
                        Pexp_function
                        [
                          <case>
                            pattern (src/partialGrammar.ml[433,14022+23]..[433,14022+43])
                              Ppat_construct "PrivateNonTerminal" (src/partialGrammar.ml[433,14022+23]..[433,14022+41])
                              Some
                                []
                                pattern (src/partialGrammar.ml[433,14022+42]..[433,14022+43])
                                  Ppat_any
                            expression (src/partialGrammar.ml[433,14022+47]..[433,14022+67])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/partialGrammar.ml[433,14022+52]..[433,14022+55])
                                Ppat_var "acu" (src/partialGrammar.ml[433,14022+52]..[433,14022+55])
                              expression (src/partialGrammar.ml[433,14022+59]..[433,14022+66])
                                Pexp_apply
                                expression (src/partialGrammar.ml[433,14022+59]..[433,14022+60])
                                  Pexp_ident "f" (src/partialGrammar.ml[433,14022+59]..[433,14022+60])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/partialGrammar.ml[433,14022+61]..[433,14022+64])
                                      Pexp_ident "acu" (src/partialGrammar.ml[433,14022+61]..[433,14022+64])
                                  <arg>
                                  Nolabel
                                    expression (src/partialGrammar.ml[433,14022+65]..[433,14022+66])
                                      Pexp_ident "k" (src/partialGrammar.ml[433,14022+65]..[433,14022+66])
                                ]
                          <case>
                            pattern (src/partialGrammar.ml[434,14090+9]..[434,14090+10])
                              Ppat_any
                            expression (src/partialGrammar.ml[434,14090+14]..[434,14090+30])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/partialGrammar.ml[434,14090+19]..[434,14090+22])
                                Ppat_var "acu" (src/partialGrammar.ml[434,14090+19]..[434,14090+22])
                              expression (src/partialGrammar.ml[434,14090+26]..[434,14090+29])
                                Pexp_ident "acu" (src/partialGrammar.ml[434,14090+26]..[434,14090+29])
                        ]
                  <arg>
                  Nolabel
                    expression (src/partialGrammar.ml[435,14122+4]..[435,14122+5])
                      Pexp_ident "t" (src/partialGrammar.ml[435,14122+4]..[435,14122+5])
                  <arg>
                  Nolabel
                    expression (src/partialGrammar.ml[435,14122+6]..[435,14122+10])
                      Pexp_ident "init" (src/partialGrammar.ml[435,14122+6]..[435,14122+10])
                ]
    ]
  structure_item (src/partialGrammar.ml[437,14134+0]..[441,14286+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[437,14134+4]..[437,14134+26])
          Ppat_var "fold_on_public_symbols" (src/partialGrammar.ml[437,14134+4]..[437,14134+26])
        expression (src/partialGrammar.ml[437,14134+27]..[441,14286+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[437,14134+27]..[437,14134+28])
            Ppat_var "f" (src/partialGrammar.ml[437,14134+27]..[437,14134+28])
          expression (src/partialGrammar.ml[437,14134+29]..[441,14286+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[437,14134+29]..[437,14134+33])
              Ppat_var "init" (src/partialGrammar.ml[437,14134+29]..[437,14134+33])
            expression (src/partialGrammar.ml[437,14134+34]..[441,14286+10]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/partialGrammar.ml[437,14134+34]..[437,14134+35])
                Ppat_var "t" (src/partialGrammar.ml[437,14134+34]..[437,14134+35])
              expression (src/partialGrammar.ml[438,14172+2]..[441,14286+10])
                Pexp_apply
                expression (src/partialGrammar.ml[438,14172+2]..[438,14172+14])
                  Pexp_ident "Hashtbl.fold" (src/partialGrammar.ml[438,14172+2]..[438,14172+14])
                [
                  <arg>
                  Nolabel
                    expression (src/partialGrammar.ml[439,14187+4]..[440,14254+31])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/partialGrammar.ml[439,14187+9]..[439,14187+10])
                        Ppat_var "k" (src/partialGrammar.ml[439,14187+9]..[439,14187+10])
                      expression (src/partialGrammar.ml[439,14187+14]..[440,14254+30])
                        Pexp_function
                        [
                          <case>
                            pattern (src/partialGrammar.ml[439,14187+23]..[439,14187+42])
                              Ppat_construct "PublicNonTerminal" (src/partialGrammar.ml[439,14187+23]..[439,14187+40])
                              Some
                                []
                                pattern (src/partialGrammar.ml[439,14187+41]..[439,14187+42])
                                  Ppat_any
                            expression (src/partialGrammar.ml[439,14187+46]..[439,14187+66])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/partialGrammar.ml[439,14187+51]..[439,14187+54])
                                Ppat_var "acu" (src/partialGrammar.ml[439,14187+51]..[439,14187+54])
                              expression (src/partialGrammar.ml[439,14187+58]..[439,14187+65])
                                Pexp_apply
                                expression (src/partialGrammar.ml[439,14187+58]..[439,14187+59])
                                  Pexp_ident "f" (src/partialGrammar.ml[439,14187+58]..[439,14187+59])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/partialGrammar.ml[439,14187+60]..[439,14187+63])
                                      Pexp_ident "acu" (src/partialGrammar.ml[439,14187+60]..[439,14187+63])
                                  <arg>
                                  Nolabel
                                    expression (src/partialGrammar.ml[439,14187+64]..[439,14187+65])
                                      Pexp_ident "k" (src/partialGrammar.ml[439,14187+64]..[439,14187+65])
                                ]
                          <case>
                            pattern (src/partialGrammar.ml[440,14254+9]..[440,14254+10])
                              Ppat_any
                            expression (src/partialGrammar.ml[440,14254+14]..[440,14254+30])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/partialGrammar.ml[440,14254+19]..[440,14254+22])
                                Ppat_var "acu" (src/partialGrammar.ml[440,14254+19]..[440,14254+22])
                              expression (src/partialGrammar.ml[440,14254+26]..[440,14254+29])
                                Pexp_ident "acu" (src/partialGrammar.ml[440,14254+26]..[440,14254+29])
                        ]
                  <arg>
                  Nolabel
                    expression (src/partialGrammar.ml[441,14286+4]..[441,14286+5])
                      Pexp_ident "t" (src/partialGrammar.ml[441,14286+4]..[441,14286+5])
                  <arg>
                  Nolabel
                    expression (src/partialGrammar.ml[441,14286+6]..[441,14286+10])
                      Pexp_ident "init" (src/partialGrammar.ml[441,14286+6]..[441,14286+10])
                ]
    ]
  structure_item (src/partialGrammar.ml[443,14298+0]..[447,14414+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[443,14298+4]..[443,14298+29])
          Ppat_var "iter_on_only_used_symbols" (src/partialGrammar.ml[443,14298+4]..[443,14298+29])
        expression (src/partialGrammar.ml[443,14298+30]..[447,14414+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[443,14298+30]..[443,14298+31])
            Ppat_var "f" (src/partialGrammar.ml[443,14298+30]..[443,14298+31])
          expression (src/partialGrammar.ml[443,14298+32]..[447,14414+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[443,14298+32]..[443,14298+33])
              Ppat_var "t" (src/partialGrammar.ml[443,14298+32]..[443,14298+33])
            expression (src/partialGrammar.ml[444,14334+2]..[447,14414+5])
              Pexp_apply
              expression (src/partialGrammar.ml[444,14334+2]..[444,14334+14])
                Pexp_ident "Hashtbl.iter" (src/partialGrammar.ml[444,14334+2]..[444,14334+14])
              [
                <arg>
                Nolabel
                  expression (src/partialGrammar.ml[445,14349+4]..[446,14396+17])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/partialGrammar.ml[445,14349+9]..[445,14349+10])
                      Ppat_var "k" (src/partialGrammar.ml[445,14349+9]..[445,14349+10])
                    expression (src/partialGrammar.ml[445,14349+14]..[446,14396+16])
                      Pexp_function
                      [
                        <case>
                          pattern (src/partialGrammar.ml[445,14349+23]..[445,14349+35])
                            Ppat_construct "DontKnow" (src/partialGrammar.ml[445,14349+23]..[445,14349+31])
                            Some
                              []
                              pattern (src/partialGrammar.ml[445,14349+32]..[445,14349+35])
                                Ppat_var "pos" (src/partialGrammar.ml[445,14349+32]..[445,14349+35])
                          expression (src/partialGrammar.ml[445,14349+39]..[445,14349+46])
                            Pexp_apply
                            expression (src/partialGrammar.ml[445,14349+39]..[445,14349+40])
                              Pexp_ident "f" (src/partialGrammar.ml[445,14349+39]..[445,14349+40])
                            [
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[445,14349+41]..[445,14349+42])
                                  Pexp_ident "k" (src/partialGrammar.ml[445,14349+41]..[445,14349+42])
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[445,14349+43]..[445,14349+46])
                                  Pexp_ident "pos" (src/partialGrammar.ml[445,14349+43]..[445,14349+46])
                            ]
                        <case>
                          pattern (src/partialGrammar.ml[446,14396+9]..[446,14396+10])
                            Ppat_any
                          expression (src/partialGrammar.ml[446,14396+14]..[446,14396+16])
                            Pexp_construct "()" (src/partialGrammar.ml[446,14396+14]..[446,14396+16])
                            None
                      ]
                <arg>
                Nolabel
                  expression (src/partialGrammar.ml[447,14414+4]..[447,14414+5])
                    Pexp_ident "t" (src/partialGrammar.ml[447,14414+4]..[447,14414+5])
              ]
    ]
  structure_item (src/partialGrammar.ml[449,14421+0]..[482,15789+76])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[449,14421+4]..[449,14421+14])
          Ppat_var "symbols_of" (src/partialGrammar.ml[449,14421+4]..[449,14421+14])
        expression (src/partialGrammar.ml[449,14421+15]..[482,15789+76]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[449,14421+15]..[449,14421+22])
            Ppat_var "grammar" (src/partialGrammar.ml[449,14421+15]..[449,14421+22])
          expression (src/partialGrammar.ml[449,14421+23]..[482,15789+76]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[449,14421+23]..[449,14421+58])
              Ppat_constraint
              pattern (src/partialGrammar.ml[449,14421+24]..[449,14421+32])
                Ppat_var "pgrammar" (src/partialGrammar.ml[449,14421+24]..[449,14421+32])
              core_type (src/partialGrammar.ml[449,14421+35]..[449,14421+57])
                Ptyp_constr "Syntax.partial_grammar" (src/partialGrammar.ml[449,14421+35]..[449,14421+57])
                []
            expression (src/partialGrammar.ml[450,14482+2]..[482,15789+76])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/partialGrammar.ml[450,14482+6]..[450,14482+12])
                    Ppat_var "tokens" (src/partialGrammar.ml[450,14482+6]..[450,14482+12])
                  expression (src/partialGrammar.ml[450,14482+15]..[450,14482+31])
                    Pexp_field
                    expression (src/partialGrammar.ml[450,14482+15]..[450,14482+22])
                      Pexp_ident "grammar" (src/partialGrammar.ml[450,14482+15]..[450,14482+22])
                    "p_tokens" (src/partialGrammar.ml[450,14482+23]..[450,14482+31])
              ]
              expression (src/partialGrammar.ml[451,14517+2]..[482,15789+76])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/partialGrammar.ml[451,14517+6]..[451,14517+21])
                      Ppat_var "symbols_of_rule" (src/partialGrammar.ml[451,14517+6]..[451,14517+21])
                    expression (src/partialGrammar.ml[451,14517+22]..[480,15704+79]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/partialGrammar.ml[451,14517+22]..[451,14517+29])
                        Ppat_var "symbols" (src/partialGrammar.ml[451,14517+22]..[451,14517+29])
                      expression (src/partialGrammar.ml[451,14517+30]..[480,15704+79]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/partialGrammar.ml[451,14517+30]..[451,14517+35])
                          Ppat_var "prule" (src/partialGrammar.ml[451,14517+30]..[451,14517+35])
                        expression (src/partialGrammar.ml[452,14555+4]..[480,15704+79])
                          Pexp_let Rec
                          [
                            <def>
                              pattern (src/partialGrammar.ml[452,14555+12]..[452,14555+40])
                                Ppat_var "store_except_rule_parameters" (src/partialGrammar.ml[452,14555+12]..[452,14555+40])
                              expression (src/partialGrammar.ml[452,14555+41]..[463,15037+68]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/partialGrammar.ml[452,14555+41]..[452,14555+48])
                                  Ppat_var "symbols" (src/partialGrammar.ml[452,14555+41]..[452,14555+48])
                                expression (src/partialGrammar.ml[452,14555+49]..[463,15037+68]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/partialGrammar.ml[452,14555+49]..[452,14555+58])
                                    Ppat_var "parameter" (src/partialGrammar.ml[452,14555+49]..[452,14555+58])
                                  expression (src/partialGrammar.ml[453,14616+6]..[463,15037+68])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/partialGrammar.ml[453,14616+10]..[453,14616+28])
                                          Ppat_tuple
                                          [
                                            pattern (src/partialGrammar.ml[453,14616+10]..[453,14616+16])
                                              Ppat_var "symbol" (src/partialGrammar.ml[453,14616+10]..[453,14616+16])
                                            pattern (src/partialGrammar.ml[453,14616+18]..[453,14616+28])
                                              Ppat_var "parameters" (src/partialGrammar.ml[453,14616+18]..[453,14616+28])
                                          ]
                                        expression (src/partialGrammar.ml[453,14616+31]..[453,14616+57])
                                          Pexp_apply
                                          expression (src/partialGrammar.ml[453,14616+31]..[453,14616+47])
                                            Pexp_ident "Parameters.unapp" (src/partialGrammar.ml[453,14616+31]..[453,14616+47])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/partialGrammar.ml[453,14616+48]..[453,14616+57])
                                                Pexp_ident "parameter" (src/partialGrammar.ml[453,14616+48]..[453,14616+57])
                                          ]
                                    ]
                                    expression (src/partialGrammar.ml[455,14724+6]..[463,15037+68])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/partialGrammar.ml[455,14724+10]..[455,14724+17])
                                            Ppat_var "symbols" (src/partialGrammar.ml[455,14724+10]..[455,14724+17])
                                          expression (src/partialGrammar.ml[456,14744+8]..[460,14920+71])
                                            Pexp_ifthenelse
                                            expression (src/partialGrammar.ml[456,14744+11]..[456,14744+52])
                                              Pexp_apply
                                              expression (src/partialGrammar.ml[456,14744+11]..[456,14744+19])
                                                Pexp_ident "List.mem" (src/partialGrammar.ml[456,14744+11]..[456,14744+19])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/partialGrammar.ml[456,14744+20]..[456,14744+32])
                                                    Pexp_field
                                                    expression (src/partialGrammar.ml[456,14744+20]..[456,14744+26])
                                                      Pexp_ident "symbol" (src/partialGrammar.ml[456,14744+20]..[456,14744+26])
                                                    "value" (src/partialGrammar.ml[456,14744+27]..[456,14744+32])
                                                <arg>
                                                Nolabel
                                                  expression (src/partialGrammar.ml[456,14744+33]..[456,14744+52])
                                                    Pexp_field
                                                    expression (src/partialGrammar.ml[456,14744+33]..[456,14744+38])
                                                      Pexp_ident "prule" (src/partialGrammar.ml[456,14744+33]..[456,14744+38])
                                                    "pr_parameters" (src/partialGrammar.ml[456,14744+39]..[456,14744+52])
                                              ]
                                            expression (src/partialGrammar.ml[458,14889+10]..[458,14889+17])
                                              Pexp_ident "symbols" (src/partialGrammar.ml[458,14889+10]..[458,14889+17])
                                            Some
                                              expression (src/partialGrammar.ml[460,14920+10]..[460,14920+71])
                                                Pexp_apply
                                                expression (src/partialGrammar.ml[460,14920+10]..[460,14920+27])
                                                  Pexp_ident "store_used_symbol" (src/partialGrammar.ml[460,14920+10]..[460,14920+27])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/partialGrammar.ml[460,14920+28]..[460,14920+43])
                                                      Pexp_field
                                                      expression (src/partialGrammar.ml[460,14920+28]..[460,14920+34])
                                                        Pexp_ident "symbol" (src/partialGrammar.ml[460,14920+28]..[460,14920+34])
                                                      "position" (src/partialGrammar.ml[460,14920+35]..[460,14920+43])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/partialGrammar.ml[460,14920+44]..[460,14920+50])
                                                      Pexp_ident "tokens" (src/partialGrammar.ml[460,14920+44]..[460,14920+50])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/partialGrammar.ml[460,14920+51]..[460,14920+58])
                                                      Pexp_ident "symbols" (src/partialGrammar.ml[460,14920+51]..[460,14920+58])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/partialGrammar.ml[460,14920+59]..[460,14920+71])
                                                      Pexp_field
                                                      expression (src/partialGrammar.ml[460,14920+59]..[460,14920+65])
                                                        Pexp_ident "symbol" (src/partialGrammar.ml[460,14920+59]..[460,14920+65])
                                                      "value" (src/partialGrammar.ml[460,14920+66]..[460,14920+71])
                                                ]
                                      ]
                                      expression (src/partialGrammar.ml[463,15037+6]..[463,15037+68])
                                        Pexp_apply
                                        expression (src/partialGrammar.ml[463,15037+6]..[463,15037+20])
                                          Pexp_ident "List.fold_left" (src/partialGrammar.ml[463,15037+6]..[463,15037+20])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/partialGrammar.ml[463,15037+21]..[463,15037+49])
                                              Pexp_ident "store_except_rule_parameters" (src/partialGrammar.ml[463,15037+21]..[463,15037+49])
                                          <arg>
                                          Nolabel
                                            expression (src/partialGrammar.ml[463,15037+50]..[463,15037+57])
                                              Pexp_ident "symbols" (src/partialGrammar.ml[463,15037+50]..[463,15037+57])
                                          <arg>
                                          Nolabel
                                            expression (src/partialGrammar.ml[463,15037+58]..[463,15037+68])
                                              Pexp_ident "parameters" (src/partialGrammar.ml[463,15037+58]..[463,15037+68])
                                        ]
                          ]
                          expression (src/partialGrammar.ml[467,15145+4]..[480,15704+79])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/partialGrammar.ml[467,15145+8]..[467,15145+15])
                                  Ppat_var "symbols" (src/partialGrammar.ml[467,15145+8]..[467,15145+15])
                                expression (src/partialGrammar.ml[467,15145+18]..[471,15331+31])
                                  Pexp_apply
                                  expression (src/partialGrammar.ml[467,15145+18]..[467,15145+32])
                                    Pexp_ident "List.fold_left" (src/partialGrammar.ml[467,15145+18]..[467,15145+32])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/partialGrammar.ml[467,15145+33]..[471,15331+5])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/partialGrammar.ml[467,15145+38]..[467,15145+45])
                                          Ppat_var "symbols" (src/partialGrammar.ml[467,15145+38]..[467,15145+45])
                                        expression (src/partialGrammar.ml[467,15145+46]..[470,15295+35]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (src/partialGrammar.ml[467,15145+46]..[467,15145+52])
                                            Ppat_var "branch" (src/partialGrammar.ml[467,15145+46]..[467,15145+52])
                                          expression (src/partialGrammar.ml[468,15201+6]..[470,15295+35])
                                            Pexp_apply
                                            expression (src/partialGrammar.ml[468,15201+6]..[468,15201+20])
                                              Pexp_ident "List.fold_left" (src/partialGrammar.ml[468,15201+6]..[468,15201+20])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/partialGrammar.ml[468,15201+21]..[470,15295+7])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (src/partialGrammar.ml[468,15201+26]..[468,15201+33])
                                                    Ppat_var "symbols" (src/partialGrammar.ml[468,15201+26]..[468,15201+33])
                                                  expression (src/partialGrammar.ml[468,15201+34]..[469,15248+46]) ghost
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (src/partialGrammar.ml[468,15201+34]..[468,15201+43])
                                                      Ppat_tuple
                                                      [
                                                        pattern (src/partialGrammar.ml[468,15201+35]..[468,15201+36])
                                                          Ppat_any
                                                        pattern (src/partialGrammar.ml[468,15201+38]..[468,15201+39])
                                                          Ppat_var "p" (src/partialGrammar.ml[468,15201+38]..[468,15201+39])
                                                        pattern (src/partialGrammar.ml[468,15201+41]..[468,15201+42])
                                                          Ppat_any
                                                      ]
                                                    expression (src/partialGrammar.ml[469,15248+8]..[469,15248+46])
                                                      Pexp_apply
                                                      expression (src/partialGrammar.ml[469,15248+8]..[469,15248+36])
                                                        Pexp_ident "store_except_rule_parameters" (src/partialGrammar.ml[469,15248+8]..[469,15248+36])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/partialGrammar.ml[469,15248+37]..[469,15248+44])
                                                            Pexp_ident "symbols" (src/partialGrammar.ml[469,15248+37]..[469,15248+44])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/partialGrammar.ml[469,15248+45]..[469,15248+46])
                                                            Pexp_ident "p" (src/partialGrammar.ml[469,15248+45]..[469,15248+46])
                                                      ]
                                              <arg>
                                              Nolabel
                                                expression (src/partialGrammar.ml[470,15295+8]..[470,15295+15])
                                                  Pexp_ident "symbols" (src/partialGrammar.ml[470,15295+8]..[470,15295+15])
                                              <arg>
                                              Nolabel
                                                expression (src/partialGrammar.ml[470,15295+16]..[470,15295+35])
                                                  Pexp_field
                                                  expression (src/partialGrammar.ml[470,15295+16]..[470,15295+22])
                                                    Pexp_ident "branch" (src/partialGrammar.ml[470,15295+16]..[470,15295+22])
                                                  "pr_producers" (src/partialGrammar.ml[470,15295+23]..[470,15295+35])
                                            ]
                                    <arg>
                                    Nolabel
                                      expression (src/partialGrammar.ml[471,15331+6]..[471,15331+13])
                                        Pexp_ident "symbols" (src/partialGrammar.ml[471,15331+6]..[471,15331+13])
                                    <arg>
                                    Nolabel
                                      expression (src/partialGrammar.ml[471,15331+14]..[471,15331+31])
                                        Pexp_field
                                        expression (src/partialGrammar.ml[471,15331+14]..[471,15331+19])
                                          Pexp_ident "prule" (src/partialGrammar.ml[471,15331+14]..[471,15331+19])
                                        "pr_branches" (src/partialGrammar.ml[471,15331+20]..[471,15331+31])
                                  ]
                            ]
                            expression (src/partialGrammar.ml[476,15518+6]..[480,15704+79])
                              Pexp_ifthenelse
                              expression (src/partialGrammar.ml[476,15518+9]..[477,15548+60])
                                Pexp_apply
                                expression (src/partialGrammar.ml[477,15548+8]..[477,15548+10])
                                  Pexp_ident "||" (src/partialGrammar.ml[477,15548+8]..[477,15548+10])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/partialGrammar.ml[476,15518+9]..[476,15518+29])
                                      Pexp_field
                                      expression (src/partialGrammar.ml[476,15518+9]..[476,15518+14])
                                        Pexp_ident "prule" (src/partialGrammar.ml[476,15518+9]..[476,15518+14])
                                      "pr_public_flag" (src/partialGrammar.ml[476,15518+15]..[476,15518+29])
                                  <arg>
                                  Nolabel
                                    expression (src/partialGrammar.ml[477,15548+11]..[477,15548+60])
                                      Pexp_apply
                                      expression (src/partialGrammar.ml[477,15548+11]..[477,15548+24])
                                        Pexp_ident "StringMap.mem" (src/partialGrammar.ml[477,15548+11]..[477,15548+24])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/partialGrammar.ml[477,15548+25]..[477,15548+36])
                                            Pexp_field
                                            expression (src/partialGrammar.ml[477,15548+25]..[477,15548+30])
                                              Pexp_ident "prule" (src/partialGrammar.ml[477,15548+25]..[477,15548+30])
                                            "pr_nt" (src/partialGrammar.ml[477,15548+31]..[477,15548+36])
                                        <arg>
                                        Nolabel
                                          expression (src/partialGrammar.ml[477,15548+37]..[477,15548+60])
                                            Pexp_field
                                            expression (src/partialGrammar.ml[477,15548+37]..[477,15548+44])
                                              Pexp_ident "grammar" (src/partialGrammar.ml[477,15548+37]..[477,15548+44])
                                            "p_start_symbols" (src/partialGrammar.ml[477,15548+45]..[477,15548+60])
                                      ]
                                ]
                              expression (src/partialGrammar.ml[478,15614+8]..[478,15614+78])
                                Pexp_apply
                                expression (src/partialGrammar.ml[478,15614+8]..[478,15614+32])
                                  Pexp_ident "store_public_nonterminal" (src/partialGrammar.ml[478,15614+8]..[478,15614+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/partialGrammar.ml[478,15614+33]..[478,15614+39])
                                      Pexp_ident "tokens" (src/partialGrammar.ml[478,15614+33]..[478,15614+39])
                                  <arg>
                                  Nolabel
                                    expression (src/partialGrammar.ml[478,15614+40]..[478,15614+47])
                                      Pexp_ident "symbols" (src/partialGrammar.ml[478,15614+40]..[478,15614+47])
                                  <arg>
                                  Nolabel
                                    expression (src/partialGrammar.ml[478,15614+48]..[478,15614+59])
                                      Pexp_field
                                      expression (src/partialGrammar.ml[478,15614+48]..[478,15614+53])
                                        Pexp_ident "prule" (src/partialGrammar.ml[478,15614+48]..[478,15614+53])
                                      "pr_nt" (src/partialGrammar.ml[478,15614+54]..[478,15614+59])
                                  <arg>
                                  Nolabel
                                    expression (src/partialGrammar.ml[478,15614+60]..[478,15614+78])
                                      Pexp_field
                                      expression (src/partialGrammar.ml[478,15614+60]..[478,15614+65])
                                        Pexp_ident "prule" (src/partialGrammar.ml[478,15614+60]..[478,15614+65])
                                      "pr_positions" (src/partialGrammar.ml[478,15614+66]..[478,15614+78])
                                ]
                              Some
                                expression (src/partialGrammar.ml[480,15704+8]..[480,15704+79])
                                  Pexp_apply
                                  expression (src/partialGrammar.ml[480,15704+8]..[480,15704+33])
                                    Pexp_ident "store_private_nonterminal" (src/partialGrammar.ml[480,15704+8]..[480,15704+33])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/partialGrammar.ml[480,15704+34]..[480,15704+40])
                                        Pexp_ident "tokens" (src/partialGrammar.ml[480,15704+34]..[480,15704+40])
                                    <arg>
                                    Nolabel
                                      expression (src/partialGrammar.ml[480,15704+41]..[480,15704+48])
                                        Pexp_ident "symbols" (src/partialGrammar.ml[480,15704+41]..[480,15704+48])
                                    <arg>
                                    Nolabel
                                      expression (src/partialGrammar.ml[480,15704+49]..[480,15704+60])
                                        Pexp_field
                                        expression (src/partialGrammar.ml[480,15704+49]..[480,15704+54])
                                          Pexp_ident "prule" (src/partialGrammar.ml[480,15704+49]..[480,15704+54])
                                        "pr_nt" (src/partialGrammar.ml[480,15704+55]..[480,15704+60])
                                    <arg>
                                    Nolabel
                                      expression (src/partialGrammar.ml[480,15704+61]..[480,15704+79])
                                        Pexp_field
                                        expression (src/partialGrammar.ml[480,15704+61]..[480,15704+66])
                                          Pexp_ident "prule" (src/partialGrammar.ml[480,15704+61]..[480,15704+66])
                                        "pr_positions" (src/partialGrammar.ml[480,15704+67]..[480,15704+79])
                                  ]
                ]
                expression (src/partialGrammar.ml[482,15789+4]..[482,15789+76])
                  Pexp_apply
                  expression (src/partialGrammar.ml[482,15789+4]..[482,15789+18])
                    Pexp_ident "List.fold_left" (src/partialGrammar.ml[482,15789+4]..[482,15789+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/partialGrammar.ml[482,15789+19]..[482,15789+34])
                        Pexp_ident "symbols_of_rule" (src/partialGrammar.ml[482,15789+19]..[482,15789+34])
                    <arg>
                    Nolabel
                      expression (src/partialGrammar.ml[482,15789+35]..[482,15789+58])
                        Pexp_apply
                        expression (src/partialGrammar.ml[482,15789+36]..[482,15789+54])
                          Pexp_ident "empty_symbol_table" (src/partialGrammar.ml[482,15789+36]..[482,15789+54])
                        [
                          <arg>
                          Nolabel
                            expression (src/partialGrammar.ml[482,15789+55]..[482,15789+57])
                              Pexp_construct "()" (src/partialGrammar.ml[482,15789+55]..[482,15789+57])
                              None
                        ]
                    <arg>
                    Nolabel
                      expression (src/partialGrammar.ml[482,15789+59]..[482,15789+76])
                        Pexp_field
                        expression (src/partialGrammar.ml[482,15789+59]..[482,15789+67])
                          Pexp_ident "pgrammar" (src/partialGrammar.ml[482,15789+59]..[482,15789+67])
                        "pg_rules" (src/partialGrammar.ml[482,15789+68]..[482,15789+76])
                  ]
    ]
  structure_item (src/partialGrammar.ml[484,15867+0]..[575,19506+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[484,15867+4]..[484,15867+15])
          Ppat_var "merge_rules" (src/partialGrammar.ml[484,15867+4]..[484,15867+15])
        expression (src/partialGrammar.ml[484,15867+16]..[575,19506+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[484,15867+16]..[484,15867+23])
            Ppat_var "symbols" (src/partialGrammar.ml[484,15867+16]..[484,15867+23])
          expression (src/partialGrammar.ml[484,15867+24]..[575,19506+26]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[484,15867+24]..[484,15867+27])
              Ppat_var "pgs" (src/partialGrammar.ml[484,15867+24]..[484,15867+27])
            expression (src/partialGrammar.ml[487,15939+2]..[575,19506+26])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/partialGrammar.ml[487,15939+6]..[487,15939+20])
                    Ppat_var "public_symbols" (src/partialGrammar.ml[487,15939+6]..[487,15939+20])
                  expression (src/partialGrammar.ml[488,15962+4]..[490,16073+13])
                    Pexp_apply
                    expression (src/partialGrammar.ml[488,15962+4]..[488,15962+18])
                      Pexp_ident "List.fold_left" (src/partialGrammar.ml[488,15962+4]..[488,15962+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[488,15962+19]..[488,15962+74])
                          Pexp_apply
                          expression (src/partialGrammar.ml[488,15962+20]..[488,15962+42])
                            Pexp_ident "fold_on_public_symbols" (src/partialGrammar.ml[488,15962+20]..[488,15962+42])
                          [
                            <arg>
                            Nolabel
                              expression (src/partialGrammar.ml[488,15962+43]..[488,15962+73])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/partialGrammar.ml[488,15962+48]..[488,15962+49])
                                  Ppat_var "s" (src/partialGrammar.ml[488,15962+48]..[488,15962+49])
                                expression (src/partialGrammar.ml[488,15962+50]..[488,15962+72]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/partialGrammar.ml[488,15962+50]..[488,15962+51])
                                    Ppat_var "k" (src/partialGrammar.ml[488,15962+50]..[488,15962+51])
                                  expression (src/partialGrammar.ml[488,15962+55]..[488,15962+72])
                                    Pexp_apply
                                    expression (src/partialGrammar.ml[488,15962+55]..[488,15962+68])
                                      Pexp_ident "StringSet.add" (src/partialGrammar.ml[488,15962+55]..[488,15962+68])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/partialGrammar.ml[488,15962+69]..[488,15962+70])
                                          Pexp_ident "k" (src/partialGrammar.ml[488,15962+69]..[488,15962+70])
                                      <arg>
                                      Nolabel
                                        expression (src/partialGrammar.ml[488,15962+71]..[488,15962+72])
                                          Pexp_ident "s" (src/partialGrammar.ml[488,15962+71]..[488,15962+72])
                                    ]
                          ]
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[489,16037+6]..[489,16037+35])
                          Pexp_apply
                          expression (src/partialGrammar.ml[489,16037+7]..[489,16037+26])
                            Pexp_ident "StringSet.singleton" (src/partialGrammar.ml[489,16037+7]..[489,16037+26])
                          [
                            <arg>
                            Nolabel
                              expression (src/partialGrammar.ml[489,16037+27]..[489,16037+34])
                                Pexp_constant PConst_string("error",(src/partialGrammar.ml[489,16037+28]..[489,16037+33]),None)
                          ]
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[490,16073+6]..[490,16073+13])
                          Pexp_ident "symbols" (src/partialGrammar.ml[490,16073+6]..[490,16073+13])
                    ]
              ]
              expression (src/partialGrammar.ml[495,16179+2]..[575,19506+26])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/partialGrammar.ml[495,16179+6]..[495,16179+7])
                      Ppat_any
                    expression (src/partialGrammar.ml[496,16189+4]..[501,16373+13])
                      Pexp_apply
                      expression (src/partialGrammar.ml[496,16189+4]..[496,16189+13])
                        Pexp_ident "List.iter" (src/partialGrammar.ml[496,16189+4]..[496,16189+13])
                      [
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[497,16203+6]..[500,16336+36])
                            Pexp_apply
                            expression (src/partialGrammar.ml[497,16203+7]..[497,16203+32])
                              Pexp_ident "iter_on_only_used_symbols" (src/partialGrammar.ml[497,16203+7]..[497,16203+32])
                            [
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[498,16236+9]..[500,16336+35])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/partialGrammar.ml[498,16236+14]..[498,16236+15])
                                    Ppat_var "k" (src/partialGrammar.ml[498,16236+14]..[498,16236+15])
                                  expression (src/partialGrammar.ml[498,16236+16]..[500,16336+34]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/partialGrammar.ml[498,16236+16]..[498,16236+19])
                                      Ppat_var "pos" (src/partialGrammar.ml[498,16236+16]..[498,16236+19])
                                    expression (src/partialGrammar.ml[498,16236+23]..[500,16336+34])
                                      Pexp_ifthenelse
                                      expression (src/partialGrammar.ml[498,16236+26]..[498,16236+62])
                                        Pexp_apply
                                        expression (src/partialGrammar.ml[498,16236+26]..[498,16236+29])
                                          Pexp_ident "not" (src/partialGrammar.ml[498,16236+26]..[498,16236+29])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/partialGrammar.ml[498,16236+30]..[498,16236+62])
                                              Pexp_apply
                                              expression (src/partialGrammar.ml[498,16236+31]..[498,16236+44])
                                                Pexp_ident "StringSet.mem" (src/partialGrammar.ml[498,16236+31]..[498,16236+44])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/partialGrammar.ml[498,16236+45]..[498,16236+46])
                                                    Pexp_ident "k" (src/partialGrammar.ml[498,16236+45]..[498,16236+46])
                                                <arg>
                                                Nolabel
                                                  expression (src/partialGrammar.ml[498,16236+47]..[498,16236+61])
                                                    Pexp_ident "public_symbols" (src/partialGrammar.ml[498,16236+47]..[498,16236+61])
                                              ]
                                        ]
                                      expression (src/partialGrammar.ml[499,16304+12]..[500,16336+34])
                                        Pexp_apply
                                        expression (src/partialGrammar.ml[499,16304+12]..[499,16304+23])
                                          Pexp_ident "Error.error" (src/partialGrammar.ml[499,16304+12]..[499,16304+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/partialGrammar.ml[499,16304+24]..[499,16304+31])
                                              Pexp_construct "::" (src/partialGrammar.ml[499,16304+26]..[499,16304+31]) ghost
                                              Some
                                                expression (src/partialGrammar.ml[499,16304+26]..[499,16304+31]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (src/partialGrammar.ml[499,16304+26]..[499,16304+29])
                                                      Pexp_ident "pos" (src/partialGrammar.ml[499,16304+26]..[499,16304+29])
                                                    expression (src/partialGrammar.ml[499,16304+30]..[499,16304+31]) ghost
                                                      Pexp_construct "[]" (src/partialGrammar.ml[499,16304+30]..[499,16304+31]) ghost
                                                      None
                                                  ]
                                          <arg>
                                          Nolabel
                                            expression (src/partialGrammar.ml[500,16336+14]..[500,16336+32])
                                              Pexp_constant PConst_string("%s is undefined.",(src/partialGrammar.ml[500,16336+15]..[500,16336+31]),None)
                                          <arg>
                                          Nolabel
                                            expression (src/partialGrammar.ml[500,16336+33]..[500,16336+34])
                                              Pexp_ident "k" (src/partialGrammar.ml[500,16336+33]..[500,16336+34])
                                        ]
                                      None
                            ]
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[501,16373+6]..[501,16373+13])
                            Pexp_ident "symbols" (src/partialGrammar.ml[501,16373+6]..[501,16373+13])
                      ]
                ]
                expression (src/partialGrammar.ml[504,16460+2]..[575,19506+26])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/partialGrammar.ml[504,16460+6]..[504,16460+35])
                        Ppat_var "detect_private_symbol_clashes" (src/partialGrammar.ml[504,16460+6]..[504,16460+35])
                      expression (src/partialGrammar.ml[505,16498+4]..[511,16727+51])
                        Pexp_apply
                        expression (src/partialGrammar.ml[505,16498+4]..[505,16498+27])
                          Pexp_ident "fold_on_private_symbols" (src/partialGrammar.ml[505,16498+4]..[505,16498+27])
                        [
                          <arg>
                          Nolabel
                            expression (src/partialGrammar.ml[506,16526+6]..[511,16727+51])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/partialGrammar.ml[506,16526+11]..[506,16526+29])
                                Ppat_tuple
                                [
                                  pattern (src/partialGrammar.ml[506,16526+12]..[506,16526+19])
                                    Ppat_var "defined" (src/partialGrammar.ml[506,16526+12]..[506,16526+19])
                                  pattern (src/partialGrammar.ml[506,16526+21]..[506,16526+28])
                                    Ppat_var "clashes" (src/partialGrammar.ml[506,16526+21]..[506,16526+28])
                                ]
                              expression (src/partialGrammar.ml[506,16526+30]..[511,16727+50]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/partialGrammar.ml[506,16526+30]..[506,16526+36])
                                  Ppat_var "symbol" (src/partialGrammar.ml[506,16526+30]..[506,16526+36])
                                expression (src/partialGrammar.ml[507,16566+9]..[511,16727+50])
                                  Pexp_ifthenelse
                                  expression (src/partialGrammar.ml[507,16566+12]..[508,16607+49])
                                    Pexp_apply
                                    expression (src/partialGrammar.ml[508,16607+11]..[508,16607+13])
                                      Pexp_ident "||" (src/partialGrammar.ml[508,16607+11]..[508,16607+13])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/partialGrammar.ml[507,16566+12]..[507,16566+40])
                                          Pexp_apply
                                          expression (src/partialGrammar.ml[507,16566+12]..[507,16566+25])
                                            Pexp_ident "StringSet.mem" (src/partialGrammar.ml[507,16566+12]..[507,16566+25])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/partialGrammar.ml[507,16566+26]..[507,16566+32])
                                                Pexp_ident "symbol" (src/partialGrammar.ml[507,16566+26]..[507,16566+32])
                                            <arg>
                                            Nolabel
                                              expression (src/partialGrammar.ml[507,16566+33]..[507,16566+40])
                                                Pexp_ident "defined" (src/partialGrammar.ml[507,16566+33]..[507,16566+40])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (src/partialGrammar.ml[508,16607+14]..[508,16607+49])
                                          Pexp_apply
                                          expression (src/partialGrammar.ml[508,16607+14]..[508,16607+27])
                                            Pexp_ident "StringSet.mem" (src/partialGrammar.ml[508,16607+14]..[508,16607+27])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/partialGrammar.ml[508,16607+28]..[508,16607+34])
                                                Pexp_ident "symbol" (src/partialGrammar.ml[508,16607+28]..[508,16607+34])
                                            <arg>
                                            Nolabel
                                              expression (src/partialGrammar.ml[508,16607+35]..[508,16607+49])
                                                Pexp_ident "public_symbols" (src/partialGrammar.ml[508,16607+35]..[508,16607+49])
                                          ]
                                    ]
                                  expression (src/partialGrammar.ml[509,16662+11]..[509,16662+50])
                                    Pexp_tuple
                                    [
                                      expression (src/partialGrammar.ml[509,16662+12]..[509,16662+19])
                                        Pexp_ident "defined" (src/partialGrammar.ml[509,16662+12]..[509,16662+19])
                                      expression (src/partialGrammar.ml[509,16662+21]..[509,16662+49])
                                        Pexp_apply
                                        expression (src/partialGrammar.ml[509,16662+21]..[509,16662+34])
                                          Pexp_ident "StringSet.add" (src/partialGrammar.ml[509,16662+21]..[509,16662+34])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/partialGrammar.ml[509,16662+35]..[509,16662+41])
                                              Pexp_ident "symbol" (src/partialGrammar.ml[509,16662+35]..[509,16662+41])
                                          <arg>
                                          Nolabel
                                            expression (src/partialGrammar.ml[509,16662+42]..[509,16662+49])
                                              Pexp_ident "clashes" (src/partialGrammar.ml[509,16662+42]..[509,16662+49])
                                        ]
                                    ]
                                  Some
                                    expression (src/partialGrammar.ml[511,16727+11]..[511,16727+50])
                                      Pexp_tuple
                                      [
                                        expression (src/partialGrammar.ml[511,16727+12]..[511,16727+40])
                                          Pexp_apply
                                          expression (src/partialGrammar.ml[511,16727+12]..[511,16727+25])
                                            Pexp_ident "StringSet.add" (src/partialGrammar.ml[511,16727+12]..[511,16727+25])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/partialGrammar.ml[511,16727+26]..[511,16727+32])
                                                Pexp_ident "symbol" (src/partialGrammar.ml[511,16727+26]..[511,16727+32])
                                            <arg>
                                            Nolabel
                                              expression (src/partialGrammar.ml[511,16727+33]..[511,16727+40])
                                                Pexp_ident "defined" (src/partialGrammar.ml[511,16727+33]..[511,16727+40])
                                          ]
                                        expression (src/partialGrammar.ml[511,16727+42]..[511,16727+49])
                                          Pexp_ident "clashes" (src/partialGrammar.ml[511,16727+42]..[511,16727+49])
                                      ]
                        ]
                  ]
                  expression (src/partialGrammar.ml[513,16784+2]..[575,19506+26])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/partialGrammar.ml[513,16784+6]..[513,16784+31])
                          Ppat_tuple
                          [
                            pattern (src/partialGrammar.ml[513,16784+6]..[513,16784+22])
                              Ppat_var "_private_symbols" (src/partialGrammar.ml[513,16784+6]..[513,16784+22])
                            pattern (src/partialGrammar.ml[513,16784+24]..[513,16784+31])
                              Ppat_var "clashes" (src/partialGrammar.ml[513,16784+24]..[513,16784+31])
                          ]
                        expression (src/partialGrammar.ml[514,16818+4]..[514,16818+91])
                          Pexp_apply
                          expression (src/partialGrammar.ml[514,16818+4]..[514,16818+18])
                            Pexp_ident "List.fold_left" (src/partialGrammar.ml[514,16818+4]..[514,16818+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/partialGrammar.ml[514,16818+19]..[514,16818+48])
                                Pexp_ident "detect_private_symbol_clashes" (src/partialGrammar.ml[514,16818+19]..[514,16818+48])
                            <arg>
                            Nolabel
                              expression (src/partialGrammar.ml[514,16818+49]..[514,16818+83])
                                Pexp_tuple
                                [
                                  expression (src/partialGrammar.ml[514,16818+50]..[514,16818+65])
                                    Pexp_ident "StringSet.empty" (src/partialGrammar.ml[514,16818+50]..[514,16818+65])
                                  expression (src/partialGrammar.ml[514,16818+67]..[514,16818+82])
                                    Pexp_ident "StringSet.empty" (src/partialGrammar.ml[514,16818+67]..[514,16818+82])
                                ]
                            <arg>
                            Nolabel
                              expression (src/partialGrammar.ml[514,16818+84]..[514,16818+91])
                                Pexp_ident "symbols" (src/partialGrammar.ml[514,16818+84]..[514,16818+91])
                          ]
                    ]
                    expression (src/partialGrammar.ml[516,16915+2]..[575,19506+26])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/partialGrammar.ml[516,16915+6]..[516,16915+10])
                            Ppat_var "rpgs" (src/partialGrammar.ml[516,16915+6]..[516,16915+10])
                          expression (src/partialGrammar.ml[516,16915+13]..[532,17471+7])
                            Pexp_apply
                            expression (src/partialGrammar.ml[516,16915+13]..[516,16915+21])
                              Pexp_ident "List.map" (src/partialGrammar.ml[516,16915+13]..[516,16915+21])
                            [
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[517,16937+4]..[531,17433+37])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/partialGrammar.ml[517,16937+9]..[517,16937+27])
                                    Ppat_tuple
                                    [
                                      pattern (src/partialGrammar.ml[517,16937+10]..[517,16937+22])
                                        Ppat_var "symbol_table" (src/partialGrammar.ml[517,16937+10]..[517,16937+22])
                                      pattern (src/partialGrammar.ml[517,16937+24]..[517,16937+26])
                                        Ppat_var "pg" (src/partialGrammar.ml[517,16937+24]..[517,16937+26])
                                    ]
                                  expression (src/partialGrammar.ml[518,16968+7]..[531,17433+36])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/partialGrammar.ml[518,16968+11]..[518,16968+19])
                                          Ppat_var "renaming" (src/partialGrammar.ml[518,16968+11]..[518,16968+19])
                                        expression (src/partialGrammar.ml[519,16990+9]..[529,17401+21])
                                          Pexp_apply
                                          expression (src/partialGrammar.ml[519,16990+9]..[519,16990+23])
                                            Pexp_ident "StringSet.fold" (src/partialGrammar.ml[519,16990+9]..[519,16990+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/partialGrammar.ml[520,17014+11]..[528,17377+23])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (src/partialGrammar.ml[520,17014+16]..[520,17014+17])
                                                  Ppat_var "x" (src/partialGrammar.ml[520,17014+16]..[520,17014+17])
                                                expression (src/partialGrammar.ml[520,17014+18]..[528,17377+22]) ghost
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (src/partialGrammar.ml[520,17014+18]..[520,17014+21])
                                                    Ppat_var "phi" (src/partialGrammar.ml[520,17014+18]..[520,17014+21])
                                                  expression (src/partialGrammar.ml[521,17039+14]..[528,17377+22])
                                                    Pexp_ifthenelse
                                                    expression (src/partialGrammar.ml[521,17039+17]..[521,17039+49])
                                                      Pexp_apply
                                                      expression (src/partialGrammar.ml[521,17039+17]..[521,17039+34])
                                                        Pexp_ident "is_private_symbol" (src/partialGrammar.ml[521,17039+17]..[521,17039+34])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/partialGrammar.ml[521,17039+35]..[521,17039+47])
                                                            Pexp_ident "symbol_table" (src/partialGrammar.ml[521,17039+35]..[521,17039+47])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/partialGrammar.ml[521,17039+48]..[521,17039+49])
                                                            Pexp_ident "x" (src/partialGrammar.ml[521,17039+48]..[521,17039+49])
                                                      ]
                                                    expression (src/partialGrammar.ml[521,17039+55]..[527,17357+19])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (src/partialGrammar.ml[522,17100+22]..[522,17100+24])
                                                            Ppat_var "x'" (src/partialGrammar.ml[522,17100+22]..[522,17100+24])
                                                          expression (src/partialGrammar.ml[522,17100+27]..[522,17100+50])
                                                            Pexp_apply
                                                            expression (src/partialGrammar.ml[522,17100+27]..[522,17100+33])
                                                              Pexp_ident "rename" (src/partialGrammar.ml[522,17100+27]..[522,17100+33])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/partialGrammar.ml[522,17100+34]..[522,17100+35])
                                                                  Pexp_ident "x" (src/partialGrammar.ml[522,17100+34]..[522,17100+35])
                                                              <arg>
                                                              Nolabel
                                                                expression (src/partialGrammar.ml[522,17100+36]..[522,17100+50])
                                                                  Pexp_field
                                                                  expression (src/partialGrammar.ml[522,17100+36]..[522,17100+38])
                                                                    Pexp_ident "pg" (src/partialGrammar.ml[522,17100+36]..[522,17100+38])
                                                                  "pg_filename" (src/partialGrammar.ml[522,17100+39]..[522,17100+50])
                                                            ]
                                                      ]
                                                      expression (src/partialGrammar.ml[523,17154+20]..[526,17322+34])
                                                        Pexp_sequence
                                                        expression (src/partialGrammar.ml[523,17154+20]..[525,17279+41])
                                                          Pexp_apply
                                                          expression (src/partialGrammar.ml[523,17154+20]..[523,17154+34])
                                                            Pexp_ident "Printf.fprintf" (src/partialGrammar.ml[523,17154+20]..[523,17154+34])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/partialGrammar.ml[523,17154+35]..[523,17154+41])
                                                                Pexp_ident "stderr" (src/partialGrammar.ml[523,17154+35]..[523,17154+41])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/partialGrammar.ml[524,17196+22]..[524,17196+82])
                                                                Pexp_constant PConst_string("Note: the nonterminal symbol %s (from %s) is renamed %s.\n",(src/partialGrammar.ml[524,17196+23]..[524,17196+81]),None)
                                                            <arg>
                                                            Nolabel
                                                              expression (src/partialGrammar.ml[525,17279+22]..[525,17279+23])
                                                                Pexp_ident "x" (src/partialGrammar.ml[525,17279+22]..[525,17279+23])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/partialGrammar.ml[525,17279+24]..[525,17279+38])
                                                                Pexp_field
                                                                expression (src/partialGrammar.ml[525,17279+24]..[525,17279+26])
                                                                  Pexp_ident "pg" (src/partialGrammar.ml[525,17279+24]..[525,17279+26])
                                                                "pg_filename" (src/partialGrammar.ml[525,17279+27]..[525,17279+38])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/partialGrammar.ml[525,17279+39]..[525,17279+41])
                                                                Pexp_ident "x'" (src/partialGrammar.ml[525,17279+39]..[525,17279+41])
                                                          ]
                                                        expression (src/partialGrammar.ml[526,17322+20]..[526,17322+34])
                                                          Pexp_construct "::" (src/partialGrammar.ml[526,17322+28]..[526,17322+30])
                                                          Some
                                                            expression (src/partialGrammar.ml[526,17322+20]..[526,17322+34]) ghost
                                                              Pexp_tuple
                                                              [
                                                                expression (src/partialGrammar.ml[526,17322+20]..[526,17322+27])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (src/partialGrammar.ml[526,17322+21]..[526,17322+22])
                                                                      Pexp_ident "x" (src/partialGrammar.ml[526,17322+21]..[526,17322+22])
                                                                    expression (src/partialGrammar.ml[526,17322+24]..[526,17322+26])
                                                                      Pexp_ident "x'" (src/partialGrammar.ml[526,17322+24]..[526,17322+26])
                                                                  ]
                                                                expression (src/partialGrammar.ml[526,17322+31]..[526,17322+34])
                                                                  Pexp_ident "phi" (src/partialGrammar.ml[526,17322+31]..[526,17322+34])
                                                              ]
                                                    Some
                                                      expression (src/partialGrammar.ml[528,17377+19]..[528,17377+22])
                                                        Pexp_ident "phi" (src/partialGrammar.ml[528,17377+19]..[528,17377+22])
                                            <arg>
                                            Nolabel
                                              expression (src/partialGrammar.ml[529,17401+11]..[529,17401+18])
                                                Pexp_ident "clashes" (src/partialGrammar.ml[529,17401+11]..[529,17401+18])
                                            <arg>
                                            Nolabel
                                              expression (src/partialGrammar.ml[529,17401+19]..[529,17401+21])
                                                Pexp_construct "[]" (src/partialGrammar.ml[529,17401+19]..[529,17401+21])
                                                None
                                          ]
                                    ]
                                    expression (src/partialGrammar.ml[531,17433+9]..[531,17433+36])
                                      Pexp_apply
                                      expression (src/partialGrammar.ml[531,17433+9]..[531,17433+24])
                                        Pexp_ident "rewrite_grammar" (src/partialGrammar.ml[531,17433+9]..[531,17433+24])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/partialGrammar.ml[531,17433+25]..[531,17433+33])
                                            Pexp_ident "renaming" (src/partialGrammar.ml[531,17433+25]..[531,17433+33])
                                        <arg>
                                        Nolabel
                                          expression (src/partialGrammar.ml[531,17433+34]..[531,17433+36])
                                            Pexp_ident "pg" (src/partialGrammar.ml[531,17433+34]..[531,17433+36])
                                      ]
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[532,17471+4]..[532,17471+7])
                                  Pexp_ident "pgs" (src/partialGrammar.ml[532,17471+4]..[532,17471+7])
                            ]
                      ]
                      expression (src/partialGrammar.ml[538,17679+4]..[575,19506+26])
                        Pexp_apply
                        expression (src/partialGrammar.ml[538,17679+4]..[538,17679+18])
                          Pexp_ident "List.fold_left" (src/partialGrammar.ml[538,17679+4]..[538,17679+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/partialGrammar.ml[539,17698+6]..[574,19441+64])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/partialGrammar.ml[539,17698+11]..[539,17698+16])
                                Ppat_var "rules" (src/partialGrammar.ml[539,17698+11]..[539,17698+16])
                              expression (src/partialGrammar.ml[539,17698+17]..[574,19441+63]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/partialGrammar.ml[539,17698+17]..[539,17698+20])
                                  Ppat_var "rpg" (src/partialGrammar.ml[539,17698+17]..[539,17698+20])
                                expression (src/partialGrammar.ml[539,17698+24]..[574,19441+63])
                                  Pexp_apply
                                  expression (src/partialGrammar.ml[539,17698+24]..[539,17698+38])
                                    Pexp_ident "List.fold_left" (src/partialGrammar.ml[539,17698+24]..[539,17698+38])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/partialGrammar.ml[540,17737+9]..[574,19441+44])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/partialGrammar.ml[540,17737+14]..[540,17737+19])
                                          Ppat_var "rules" (src/partialGrammar.ml[540,17737+14]..[540,17737+19])
                                        expression (src/partialGrammar.ml[540,17737+20]..[574,19441+43]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (src/partialGrammar.ml[540,17737+20]..[540,17737+21])
                                            Ppat_var "r" (src/partialGrammar.ml[540,17737+20]..[540,17737+21])
                                          expression (src/partialGrammar.ml[541,17762+12]..[574,19441+43])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/partialGrammar.ml[541,17762+16]..[541,17762+17])
                                                  Ppat_var "r" (src/partialGrammar.ml[541,17762+16]..[541,17762+17])
                                                expression (src/partialGrammar.ml[542,17782+14]..[572,19374+51])
                                                  Pexp_try
                                                  expression (src/partialGrammar.ml[543,17800+16]..[568,19177+23])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (src/partialGrammar.ml[543,17800+20]..[543,17800+22])
                                                          Ppat_var "r'" (src/partialGrammar.ml[543,17800+20]..[543,17800+22])
                                                        expression (src/partialGrammar.ml[543,17800+25]..[543,17800+53])
                                                          Pexp_apply
                                                          expression (src/partialGrammar.ml[543,17800+25]..[543,17800+39])
                                                            Pexp_ident "StringMap.find" (src/partialGrammar.ml[543,17800+25]..[543,17800+39])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/partialGrammar.ml[543,17800+40]..[543,17800+47])
                                                                Pexp_field
                                                                expression (src/partialGrammar.ml[543,17800+40]..[543,17800+41])
                                                                  Pexp_ident "r" (src/partialGrammar.ml[543,17800+40]..[543,17800+41])
                                                                "pr_nt" (src/partialGrammar.ml[543,17800+42]..[543,17800+47])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/partialGrammar.ml[543,17800+48]..[543,17800+53])
                                                                Pexp_ident "rules" (src/partialGrammar.ml[543,17800+48]..[543,17800+53])
                                                          ]
                                                    ]
                                                    expression (src/partialGrammar.ml[544,17857+16]..[568,19177+23])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (src/partialGrammar.ml[544,17857+20]..[544,17857+29])
                                                            Ppat_var "positions" (src/partialGrammar.ml[544,17857+20]..[544,17857+29])
                                                          expression (src/partialGrammar.ml[544,17857+32]..[544,17857+64])
                                                            Pexp_apply
                                                            expression (src/partialGrammar.ml[544,17857+47]..[544,17857+48])
                                                              Pexp_ident "@" (src/partialGrammar.ml[544,17857+47]..[544,17857+48])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/partialGrammar.ml[544,17857+32]..[544,17857+46])
                                                                  Pexp_field
                                                                  expression (src/partialGrammar.ml[544,17857+32]..[544,17857+33])
                                                                    Pexp_ident "r" (src/partialGrammar.ml[544,17857+32]..[544,17857+33])
                                                                  "pr_positions" (src/partialGrammar.ml[544,17857+34]..[544,17857+46])
                                                              <arg>
                                                              Nolabel
                                                                expression (src/partialGrammar.ml[544,17857+49]..[544,17857+64])
                                                                  Pexp_field
                                                                  expression (src/partialGrammar.ml[544,17857+49]..[544,17857+51])
                                                                    Pexp_ident "r'" (src/partialGrammar.ml[544,17857+49]..[544,17857+51])
                                                                  "pr_positions" (src/partialGrammar.ml[544,17857+52]..[544,17857+64])
                                                            ]
                                                      ]
                                                      expression (src/partialGrammar.ml[545,17925+16]..[568,19177+23])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (src/partialGrammar.ml[545,17925+20]..[545,17925+27])
                                                              Ppat_tuple
                                                              [
                                                                pattern (src/partialGrammar.ml[545,17925+20]..[545,17925+22])
                                                                  Ppat_var "ra" (src/partialGrammar.ml[545,17925+20]..[545,17925+22])
                                                                pattern (src/partialGrammar.ml[545,17925+24]..[545,17925+27])
                                                                  Ppat_var "ra'" (src/partialGrammar.ml[545,17925+24]..[545,17925+27])
                                                              ]
                                                            expression (src/partialGrammar.ml[546,17955+18]..[547,18002+46])
                                                              Pexp_tuple
                                                              [
                                                                expression (src/partialGrammar.ml[546,17955+18]..[546,17955+45])
                                                                  Pexp_apply
                                                                  expression (src/partialGrammar.ml[546,17955+18]..[546,17955+29])
                                                                    Pexp_ident "List.length" (src/partialGrammar.ml[546,17955+18]..[546,17955+29])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/partialGrammar.ml[546,17955+30]..[546,17955+45])
Pexp_field
expression (src/partialGrammar.ml[546,17955+30]..[546,17955+31])
  Pexp_ident "r" (src/partialGrammar.ml[546,17955+30]..[546,17955+31])
"pr_parameters" (src/partialGrammar.ml[546,17955+32]..[546,17955+45])
                                                                  ]
                                                                expression (src/partialGrammar.ml[547,18002+18]..[547,18002+46])
                                                                  Pexp_apply
                                                                  expression (src/partialGrammar.ml[547,18002+18]..[547,18002+29])
                                                                    Pexp_ident "List.length" (src/partialGrammar.ml[547,18002+18]..[547,18002+29])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/partialGrammar.ml[547,18002+30]..[547,18002+46])
Pexp_field
expression (src/partialGrammar.ml[547,18002+30]..[547,18002+32])
  Pexp_ident "r'" (src/partialGrammar.ml[547,18002+30]..[547,18002+32])
"pr_parameters" (src/partialGrammar.ml[547,18002+33]..[547,18002+46])
                                                                  ]
                                                              ]
                                                        ]
                                                        expression (src/partialGrammar.ml[550,18148+18]..[568,19177+23])
                                                          Pexp_ifthenelse
                                                          expression (src/partialGrammar.ml[550,18148+21]..[550,18148+30])
                                                            Pexp_apply
                                                            expression (src/partialGrammar.ml[550,18148+24]..[550,18148+26])
                                                              Pexp_ident "<>" (src/partialGrammar.ml[550,18148+24]..[550,18148+26])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/partialGrammar.ml[550,18148+21]..[550,18148+23])
                                                                  Pexp_ident "ra" (src/partialGrammar.ml[550,18148+21]..[550,18148+23])
                                                              <arg>
                                                              Nolabel
                                                                expression (src/partialGrammar.ml[550,18148+27]..[550,18148+30])
                                                                  Pexp_ident "ra'" (src/partialGrammar.ml[550,18148+27]..[550,18148+30])
                                                            ]
                                                          expression (src/partialGrammar.ml[551,18184+20]..[553,18299+39])
                                                            Pexp_apply
                                                            expression (src/partialGrammar.ml[551,18184+20]..[551,18184+31])
                                                              Pexp_ident "Error.error" (src/partialGrammar.ml[551,18184+20]..[551,18184+31])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/partialGrammar.ml[551,18184+32]..[551,18184+41])
                                                                  Pexp_ident "positions" (src/partialGrammar.ml[551,18184+32]..[551,18184+41])
                                                              <arg>
                                                              Nolabel
                                                                expression (src/partialGrammar.ml[552,18226+22]..[552,18226+72])
                                                                  Pexp_constant PConst_string("the symbol %s is defined with arities %d and %d.",(src/partialGrammar.ml[552,18226+23]..[552,18226+71]),None)
                                                              <arg>
                                                              Nolabel
                                                                expression (src/partialGrammar.ml[553,18299+25]..[553,18299+32])
                                                                  Pexp_field
                                                                  expression (src/partialGrammar.ml[553,18299+25]..[553,18299+26])
                                                                    Pexp_ident "r" (src/partialGrammar.ml[553,18299+25]..[553,18299+26])
                                                                  "pr_nt" (src/partialGrammar.ml[553,18299+27]..[553,18299+32])
                                                              <arg>
                                                              Nolabel
                                                                expression (src/partialGrammar.ml[553,18299+33]..[553,18299+35])
                                                                  Pexp_ident "ra" (src/partialGrammar.ml[553,18299+33]..[553,18299+35])
                                                              <arg>
                                                              Nolabel
                                                                expression (src/partialGrammar.ml[553,18299+36]..[553,18299+39])
                                                                  Pexp_ident "ra'" (src/partialGrammar.ml[553,18299+36]..[553,18299+39])
                                                            ]
                                                          Some
                                                            expression (src/partialGrammar.ml[554,18339+23]..[568,19177+23])
                                                              Pexp_ifthenelse
                                                              expression (src/partialGrammar.ml[554,18339+26]..[554,18339+63])
                                                                Pexp_apply
                                                                expression (src/partialGrammar.ml[554,18339+43]..[554,18339+45])
                                                                  Pexp_ident "<>" (src/partialGrammar.ml[554,18339+43]..[554,18339+45])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/partialGrammar.ml[554,18339+26]..[554,18339+42])
                                                                      Pexp_field
                                                                      expression (src/partialGrammar.ml[554,18339+26]..[554,18339+27])
Pexp_ident "r" (src/partialGrammar.ml[554,18339+26]..[554,18339+27])
                                                                      "pr_inline_flag" (src/partialGrammar.ml[554,18339+28]..[554,18339+42])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/partialGrammar.ml[554,18339+46]..[554,18339+63])
                                                                      Pexp_field
                                                                      expression (src/partialGrammar.ml[554,18339+46]..[554,18339+48])
Pexp_ident "r'" (src/partialGrammar.ml[554,18339+46]..[554,18339+48])
                                                                      "pr_inline_flag" (src/partialGrammar.ml[554,18339+49]..[554,18339+63])
                                                                ]
                                                              expression (src/partialGrammar.ml[555,18408+20]..[556,18450+81])
                                                                Pexp_apply
                                                                expression (src/partialGrammar.ml[555,18408+20]..[555,18408+31])
                                                                  Pexp_ident "Error.error" (src/partialGrammar.ml[555,18408+20]..[555,18408+31])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/partialGrammar.ml[555,18408+32]..[555,18408+41])
                                                                      Pexp_ident "positions" (src/partialGrammar.ml[555,18408+32]..[555,18408+41])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/partialGrammar.ml[556,18450+25]..[556,18450+73])
                                                                      Pexp_constant PConst_string("not all definitions of %s are marked %%inline.",(src/partialGrammar.ml[556,18450+26]..[556,18450+72]),None)
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/partialGrammar.ml[556,18450+74]..[556,18450+81])
                                                                      Pexp_field
                                                                      expression (src/partialGrammar.ml[556,18450+74]..[556,18450+75])
Pexp_ident "r" (src/partialGrammar.ml[556,18450+74]..[556,18450+75])
                                                                      "pr_nt" (src/partialGrammar.ml[556,18450+76]..[556,18450+81])
                                                                ]
                                                              Some
                                                                expression (src/partialGrammar.ml[562,18805+20]..[568,19177+23])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (src/partialGrammar.ml[562,18805+24]..[562,18805+27])
Ppat_var "phi" (src/partialGrammar.ml[562,18805+24]..[562,18805+27])
                                                                      expression (src/partialGrammar.ml[562,18805+30]..[562,18805+75])
Pexp_apply
expression (src/partialGrammar.ml[562,18805+30]..[562,18805+42])
  Pexp_ident "List.combine" (src/partialGrammar.ml[562,18805+30]..[562,18805+42])
[
  <arg>
  Nolabel
    expression (src/partialGrammar.ml[562,18805+43]..[562,18805+58])
      Pexp_field
      expression (src/partialGrammar.ml[562,18805+43]..[562,18805+44])
        Pexp_ident "r" (src/partialGrammar.ml[562,18805+43]..[562,18805+44])
      "pr_parameters" (src/partialGrammar.ml[562,18805+45]..[562,18805+58])
  <arg>
  Nolabel
    expression (src/partialGrammar.ml[562,18805+59]..[562,18805+75])
      Pexp_field
      expression (src/partialGrammar.ml[562,18805+59]..[562,18805+61])
        Pexp_ident "r'" (src/partialGrammar.ml[562,18805+59]..[562,18805+61])
      "pr_parameters" (src/partialGrammar.ml[562,18805+62]..[562,18805+75])
]
                                                                  ]
                                                                  expression (src/partialGrammar.ml[563,18884+20]..[568,19177+23])
                                                                    Pexp_let Nonrec
                                                                    [
                                                                      <def>
pattern (src/partialGrammar.ml[563,18884+24]..[563,18884+27])
  Ppat_var "rbr" (src/partialGrammar.ml[563,18884+24]..[563,18884+27])
expression (src/partialGrammar.ml[563,18884+30]..[563,18884+64])
  Pexp_apply
  expression (src/partialGrammar.ml[563,18884+30]..[563,18884+46])
    Pexp_ident "rewrite_branches" (src/partialGrammar.ml[563,18884+30]..[563,18884+46])
  [
    <arg>
    Nolabel
      expression (src/partialGrammar.ml[563,18884+47]..[563,18884+50])
        Pexp_ident "phi" (src/partialGrammar.ml[563,18884+47]..[563,18884+50])
    <arg>
    Nolabel
      expression (src/partialGrammar.ml[563,18884+51]..[563,18884+64])
        Pexp_field
        expression (src/partialGrammar.ml[563,18884+51]..[563,18884+52])
          Pexp_ident "r" (src/partialGrammar.ml[563,18884+51]..[563,18884+52])
        "pr_branches" (src/partialGrammar.ml[563,18884+53]..[563,18884+64])
  ]
                                                                    ]
                                                                    expression (src/partialGrammar.ml[564,18952+22]..[568,19177+23])
                                                                      Pexp_record
                                                                      [
"pr_positions" (src/partialGrammar.ml[565,18984+26]..[565,18984+38])
  expression (src/partialGrammar.ml[565,18984+41]..[565,18984+50])
    Pexp_ident "positions" (src/partialGrammar.ml[565,18984+41]..[565,18984+50])
"pr_branches" (src/partialGrammar.ml[566,19036+26]..[566,19036+37])
  expression (src/partialGrammar.ml[566,19036+41]..[566,19036+61])
    Pexp_apply
    expression (src/partialGrammar.ml[566,19036+45]..[566,19036+46])
      Pexp_ident "@" (src/partialGrammar.ml[566,19036+45]..[566,19036+46])
    [
      <arg>
      Nolabel
        expression (src/partialGrammar.ml[566,19036+41]..[566,19036+44])
          Pexp_ident "rbr" (src/partialGrammar.ml[566,19036+41]..[566,19036+44])
      <arg>
      Nolabel
        expression (src/partialGrammar.ml[566,19036+47]..[566,19036+61])
          Pexp_field
          expression (src/partialGrammar.ml[566,19036+47]..[566,19036+49])
            Pexp_ident "r'" (src/partialGrammar.ml[566,19036+47]..[566,19036+49])
          "pr_branches" (src/partialGrammar.ml[566,19036+50]..[566,19036+61])
    ]
"pr_attributes" (src/partialGrammar.ml[567,19099+26]..[567,19099+39])
  expression (src/partialGrammar.ml[567,19099+42]..[567,19099+76])
    Pexp_apply
    expression (src/partialGrammar.ml[567,19099+58]..[567,19099+59])
      Pexp_ident "@" (src/partialGrammar.ml[567,19099+58]..[567,19099+59])
    [
      <arg>
      Nolabel
        expression (src/partialGrammar.ml[567,19099+42]..[567,19099+57])
          Pexp_field
          expression (src/partialGrammar.ml[567,19099+42]..[567,19099+43])
            Pexp_ident "r" (src/partialGrammar.ml[567,19099+42]..[567,19099+43])
          "pr_attributes" (src/partialGrammar.ml[567,19099+44]..[567,19099+57])
      <arg>
      Nolabel
        expression (src/partialGrammar.ml[567,19099+60]..[567,19099+76])
          Pexp_field
          expression (src/partialGrammar.ml[567,19099+60]..[567,19099+62])
            Pexp_ident "r'" (src/partialGrammar.ml[567,19099+60]..[567,19099+62])
          "pr_attributes" (src/partialGrammar.ml[567,19099+63]..[567,19099+76])
    ]
                                                                      ]
                                                                      Some
expression (src/partialGrammar.ml[564,18952+24]..[564,18952+26])
  Pexp_ident "r'" (src/partialGrammar.ml[564,18952+24]..[564,18952+26])
                                                  [
                                                    <case>
                                                      pattern (src/partialGrammar.ml[569,19201+19]..[569,19201+28])
                                                        Ppat_construct "Not_found" (src/partialGrammar.ml[569,19201+19]..[569,19201+28])
                                                        None
                                                      expression (src/partialGrammar.ml[572,19374+16]..[572,19374+51])
                                                        Pexp_apply
                                                        expression (src/partialGrammar.ml[572,19374+16]..[572,19374+33])
                                                          Pexp_ident "alphaconvert_rule" (src/partialGrammar.ml[572,19374+16]..[572,19374+33])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/partialGrammar.ml[572,19374+34]..[572,19374+49])
                                                              Pexp_field
                                                              expression (src/partialGrammar.ml[572,19374+34]..[572,19374+35])
                                                                Pexp_ident "r" (src/partialGrammar.ml[572,19374+34]..[572,19374+35])
                                                              "pr_parameters" (src/partialGrammar.ml[572,19374+36]..[572,19374+49])
                                                          <arg>
                                                          Nolabel
                                                            expression (src/partialGrammar.ml[572,19374+50]..[572,19374+51])
                                                              Pexp_ident "r" (src/partialGrammar.ml[572,19374+50]..[572,19374+51])
                                                        ]
                                                  ]
                                            ]
                                            expression (src/partialGrammar.ml[574,19441+14]..[574,19441+43])
                                              Pexp_apply
                                              expression (src/partialGrammar.ml[574,19441+14]..[574,19441+27])
                                                Pexp_ident "StringMap.add" (src/partialGrammar.ml[574,19441+14]..[574,19441+27])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/partialGrammar.ml[574,19441+28]..[574,19441+35])
                                                    Pexp_field
                                                    expression (src/partialGrammar.ml[574,19441+28]..[574,19441+29])
                                                      Pexp_ident "r" (src/partialGrammar.ml[574,19441+28]..[574,19441+29])
                                                    "pr_nt" (src/partialGrammar.ml[574,19441+30]..[574,19441+35])
                                                <arg>
                                                Nolabel
                                                  expression (src/partialGrammar.ml[574,19441+36]..[574,19441+37])
                                                    Pexp_ident "r" (src/partialGrammar.ml[574,19441+36]..[574,19441+37])
                                                <arg>
                                                Nolabel
                                                  expression (src/partialGrammar.ml[574,19441+38]..[574,19441+43])
                                                    Pexp_ident "rules" (src/partialGrammar.ml[574,19441+38]..[574,19441+43])
                                              ]
                                    <arg>
                                    Nolabel
                                      expression (src/partialGrammar.ml[574,19441+45]..[574,19441+50])
                                        Pexp_ident "rules" (src/partialGrammar.ml[574,19441+45]..[574,19441+50])
                                    <arg>
                                    Nolabel
                                      expression (src/partialGrammar.ml[574,19441+51]..[574,19441+63])
                                        Pexp_field
                                        expression (src/partialGrammar.ml[574,19441+51]..[574,19441+54])
                                          Pexp_ident "rpg" (src/partialGrammar.ml[574,19441+51]..[574,19441+54])
                                        "pg_rules" (src/partialGrammar.ml[574,19441+55]..[574,19441+63])
                                  ]
                          <arg>
                          Nolabel
                            expression (src/partialGrammar.ml[575,19506+6]..[575,19506+21])
                              Pexp_ident "StringMap.empty" (src/partialGrammar.ml[575,19506+6]..[575,19506+21])
                          <arg>
                          Nolabel
                            expression (src/partialGrammar.ml[575,19506+22]..[575,19506+26])
                              Pexp_ident "rpgs" (src/partialGrammar.ml[575,19506+22]..[575,19506+26])
                        ]
    ]
  structure_item (src/partialGrammar.ml[577,19534+0]..[589,19957+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[577,19534+4]..[577,19534+17])
          Ppat_var "empty_grammar" (src/partialGrammar.ml[577,19534+4]..[577,19534+17])
        expression (src/partialGrammar.ml[578,19554+2]..[589,19957+3])
          Pexp_record
          [
            "p_preludes" (src/partialGrammar.ml[579,19558+4]..[579,19558+14])
              expression (src/partialGrammar.ml[579,19558+32]..[579,19558+34])
                Pexp_construct "[]" (src/partialGrammar.ml[579,19558+32]..[579,19558+34])
                None
            "p_postludes" (src/partialGrammar.ml[580,19594+4]..[580,19594+15])
              expression (src/partialGrammar.ml[580,19594+32]..[580,19594+34])
                Pexp_construct "[]" (src/partialGrammar.ml[580,19594+32]..[580,19594+34])
                None
            "p_parameters" (src/partialGrammar.ml[581,19630+4]..[581,19630+16])
              expression (src/partialGrammar.ml[581,19630+32]..[581,19630+34])
                Pexp_construct "[]" (src/partialGrammar.ml[581,19630+32]..[581,19630+34])
                None
            "p_start_symbols" (src/partialGrammar.ml[582,19666+4]..[582,19666+19])
              expression (src/partialGrammar.ml[582,19666+32]..[582,19666+47])
                Pexp_ident "StringMap.empty" (src/partialGrammar.ml[582,19666+32]..[582,19666+47])
            "p_types" (src/partialGrammar.ml[583,19715+4]..[583,19715+11])
              expression (src/partialGrammar.ml[583,19715+32]..[583,19715+34])
                Pexp_construct "[]" (src/partialGrammar.ml[583,19715+32]..[583,19715+34])
                None
            "p_tokens" (src/partialGrammar.ml[584,19751+4]..[584,19751+12])
              expression (src/partialGrammar.ml[584,19751+32]..[584,19751+47])
                Pexp_ident "StringMap.empty" (src/partialGrammar.ml[584,19751+32]..[584,19751+47])
            "p_rules" (src/partialGrammar.ml[585,19800+4]..[585,19800+11])
              expression (src/partialGrammar.ml[585,19800+32]..[585,19800+47])
                Pexp_ident "StringMap.empty" (src/partialGrammar.ml[585,19800+32]..[585,19800+47])
            "p_on_error_reduce" (src/partialGrammar.ml[586,19849+4]..[586,19849+21])
              expression (src/partialGrammar.ml[586,19849+32]..[586,19849+34])
                Pexp_construct "[]" (src/partialGrammar.ml[586,19849+32]..[586,19849+34])
                None
            "p_grammar_attributes" (src/partialGrammar.ml[587,19885+4]..[587,19885+24])
              expression (src/partialGrammar.ml[587,19885+32]..[587,19885+34])
                Pexp_construct "[]" (src/partialGrammar.ml[587,19885+32]..[587,19885+34])
                None
            "p_symbol_attributes" (src/partialGrammar.ml[588,19921+4]..[588,19921+23])
              expression (src/partialGrammar.ml[588,19921+32]..[588,19921+34])
                Pexp_construct "[]" (src/partialGrammar.ml[588,19921+32]..[588,19921+34])
                None
          ]
          None
    ]
  structure_item (src/partialGrammar.ml[591,19962+0]..[594,20111+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[591,19962+4]..[591,19962+8])
          Ppat_var "join" (src/partialGrammar.ml[591,19962+4]..[591,19962+8])
        expression (src/partialGrammar.ml[591,19962+9]..[594,20111+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[591,19962+9]..[591,19962+16])
            Ppat_var "grammar" (src/partialGrammar.ml[591,19962+9]..[591,19962+16])
          expression (src/partialGrammar.ml[591,19962+17]..[594,20111+41]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[591,19962+17]..[591,19962+25])
              Ppat_var "pgrammar" (src/partialGrammar.ml[591,19962+17]..[591,19962+25])
            expression (src/partialGrammar.ml[592,19990+2]..[594,20111+41])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/partialGrammar.ml[592,19990+6]..[592,19990+14])
                    Ppat_var "filename" (src/partialGrammar.ml[592,19990+6]..[592,19990+14])
                  expression (src/partialGrammar.ml[592,19990+17]..[592,19990+37])
                    Pexp_field
                    expression (src/partialGrammar.ml[592,19990+17]..[592,19990+25])
                      Pexp_ident "pgrammar" (src/partialGrammar.ml[592,19990+17]..[592,19990+25])
                    "pg_filename" (src/partialGrammar.ml[592,19990+26]..[592,19990+37])
              ]
              expression (src/partialGrammar.ml[593,20031+4]..[594,20111+41])
                Pexp_apply
                expression (src/partialGrammar.ml[594,20111+4]..[594,20111+6])
                  Pexp_ident "|>" (src/partialGrammar.ml[594,20111+4]..[594,20111+6])
                [
                  <arg>
                  Nolabel
                    expression (src/partialGrammar.ml[593,20031+4]..[593,20031+79])
                      Pexp_apply
                      expression (src/partialGrammar.ml[593,20031+4]..[593,20031+18])
                        Pexp_ident "List.fold_left" (src/partialGrammar.ml[593,20031+4]..[593,20031+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[593,20031+19]..[593,20031+46])
                            Pexp_apply
                            expression (src/partialGrammar.ml[593,20031+20]..[593,20031+36])
                              Pexp_ident "join_declaration" (src/partialGrammar.ml[593,20031+20]..[593,20031+36])
                            [
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[593,20031+37]..[593,20031+45])
                                  Pexp_ident "filename" (src/partialGrammar.ml[593,20031+37]..[593,20031+45])
                            ]
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[593,20031+47]..[593,20031+54])
                            Pexp_ident "grammar" (src/partialGrammar.ml[593,20031+47]..[593,20031+54])
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[593,20031+55]..[593,20031+79])
                            Pexp_field
                            expression (src/partialGrammar.ml[593,20031+55]..[593,20031+63])
                              Pexp_ident "pgrammar" (src/partialGrammar.ml[593,20031+55]..[593,20031+63])
                            "pg_declarations" (src/partialGrammar.ml[593,20031+64]..[593,20031+79])
                      ]
                  <arg>
                  Nolabel
                    expression (src/partialGrammar.ml[594,20111+7]..[594,20111+41])
                      Pexp_apply
                      expression (src/partialGrammar.ml[594,20111+7]..[594,20111+20])
                        Pexp_ident "join_postlude" (src/partialGrammar.ml[594,20111+7]..[594,20111+20])
                      [
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[594,20111+21]..[594,20111+41])
                            Pexp_field
                            expression (src/partialGrammar.ml[594,20111+21]..[594,20111+29])
                              Pexp_ident "pgrammar" (src/partialGrammar.ml[594,20111+21]..[594,20111+29])
                            "pg_postlude" (src/partialGrammar.ml[594,20111+30]..[594,20111+41])
                      ]
                ]
    ]
  structure_item (src/partialGrammar.ml[597,20226+0]..[607,20558+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[597,20226+4]..[597,20226+26])
          Ppat_var "check_inline_attribute" (src/partialGrammar.ml[597,20226+4]..[597,20226+26])
        expression (src/partialGrammar.ml[597,20226+27]..[607,20558+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[597,20226+27]..[597,20226+32])
            Ppat_var "prule" (src/partialGrammar.ml[597,20226+27]..[597,20226+32])
          expression (src/partialGrammar.ml[598,20261+2]..[607,20558+8])
            Pexp_match
            expression (src/partialGrammar.ml[598,20261+8]..[598,20261+49])
              Pexp_tuple
              [
                expression (src/partialGrammar.ml[598,20261+8]..[598,20261+28])
                  Pexp_field
                  expression (src/partialGrammar.ml[598,20261+8]..[598,20261+13])
                    Pexp_ident "prule" (src/partialGrammar.ml[598,20261+8]..[598,20261+13])
                  "pr_inline_flag" (src/partialGrammar.ml[598,20261+14]..[598,20261+28])
                expression (src/partialGrammar.ml[598,20261+30]..[598,20261+49])
                  Pexp_field
                  expression (src/partialGrammar.ml[598,20261+30]..[598,20261+35])
                    Pexp_ident "prule" (src/partialGrammar.ml[598,20261+30]..[598,20261+35])
                  "pr_attributes" (src/partialGrammar.ml[598,20261+36]..[598,20261+49])
              ]
            [
              <case>
                pattern (src/partialGrammar.ml[599,20316+4]..[599,20316+39])
                  Ppat_tuple
                  [
                    pattern (src/partialGrammar.ml[599,20316+4]..[599,20316+8])
                      Ppat_construct "true" (src/partialGrammar.ml[599,20316+4]..[599,20316+8])
                      None
                    pattern (src/partialGrammar.ml[599,20316+10]..[599,20316+39])
                      Ppat_construct "::" (src/partialGrammar.ml[599,20316+25]..[599,20316+27])
                      Some
                        []
                        pattern (src/partialGrammar.ml[599,20316+10]..[599,20316+39]) ghost
                          Ppat_tuple
                          [
                            pattern (src/partialGrammar.ml[599,20316+10]..[599,20316+24])
                              Ppat_tuple
                              [
                                pattern (src/partialGrammar.ml[599,20316+11]..[599,20316+13])
                                  Ppat_var "id" (src/partialGrammar.ml[599,20316+11]..[599,20316+13])
                                pattern (src/partialGrammar.ml[599,20316+15]..[599,20316+23])
                                  Ppat_var "_payload" (src/partialGrammar.ml[599,20316+15]..[599,20316+23])
                              ]
                            pattern (src/partialGrammar.ml[599,20316+28]..[599,20316+39])
                              Ppat_var "_attributes" (src/partialGrammar.ml[599,20316+28]..[599,20316+39])
                          ]
                  ]
                expression (src/partialGrammar.ml[600,20359+6]..[604,20509+19])
                  Pexp_apply
                  expression (src/partialGrammar.ml[600,20359+6]..[600,20359+17])
                    Pexp_ident "Error.error" (src/partialGrammar.ml[600,20359+6]..[600,20359+17])
                  [
                    <arg>
                    Nolabel
                      expression (src/partialGrammar.ml[601,20377+8]..[601,20377+31])
                        Pexp_construct "::" (src/partialGrammar.ml[601,20377+9]..[601,20377+31]) ghost
                        Some
                          expression (src/partialGrammar.ml[601,20377+9]..[601,20377+31]) ghost
                            Pexp_tuple
                            [
                              expression (src/partialGrammar.ml[601,20377+9]..[601,20377+30])
                                Pexp_apply
                                expression (src/partialGrammar.ml[601,20377+9]..[601,20377+27])
                                  Pexp_ident "Positions.position" (src/partialGrammar.ml[601,20377+9]..[601,20377+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/partialGrammar.ml[601,20377+28]..[601,20377+30])
                                      Pexp_ident "id" (src/partialGrammar.ml[601,20377+28]..[601,20377+30])
                                ]
                              expression (src/partialGrammar.ml[601,20377+30]..[601,20377+31]) ghost
                                Pexp_construct "[]" (src/partialGrammar.ml[601,20377+30]..[601,20377+31]) ghost
                                None
                            ]
                    <arg>
                    Nolabel
                      expression (src/partialGrammar.ml[602,20409+8]..[603,20469+39])
                        Pexp_constant PConst_string("the nonterminal symbol %s is declared %%inline.\nIt cannot carry an attribute.",(src/partialGrammar.ml[602,20409+9]..[603,20469+38]),None)
                    <arg>
                    Nolabel
                      expression (src/partialGrammar.ml[604,20509+8]..[604,20509+19])
                        Pexp_field
                        expression (src/partialGrammar.ml[604,20509+8]..[604,20509+13])
                          Pexp_ident "prule" (src/partialGrammar.ml[604,20509+8]..[604,20509+13])
                        "pr_nt" (src/partialGrammar.ml[604,20509+14]..[604,20509+19])
                  ]
              <case>
                pattern (src/partialGrammar.ml[605,20529+4]..[606,20542+12])
                  Ppat_or
                  pattern (src/partialGrammar.ml[605,20529+4]..[605,20529+12])
                    Ppat_tuple
                    [
                      pattern (src/partialGrammar.ml[605,20529+4]..[605,20529+8])
                        Ppat_construct "true" (src/partialGrammar.ml[605,20529+4]..[605,20529+8])
                        None
                      pattern (src/partialGrammar.ml[605,20529+10]..[605,20529+12])
                        Ppat_construct "[]" (src/partialGrammar.ml[605,20529+10]..[605,20529+12])
                        None
                    ]
                  pattern (src/partialGrammar.ml[606,20542+4]..[606,20542+12])
                    Ppat_tuple
                    [
                      pattern (src/partialGrammar.ml[606,20542+4]..[606,20542+9])
                        Ppat_construct "false" (src/partialGrammar.ml[606,20542+4]..[606,20542+9])
                        None
                      pattern (src/partialGrammar.ml[606,20542+11]..[606,20542+12])
                        Ppat_any
                    ]
                expression (src/partialGrammar.ml[607,20558+6]..[607,20558+8])
                  Pexp_construct "()" (src/partialGrammar.ml[607,20558+6]..[607,20558+8])
                  None
            ]
    ]
  structure_item (src/partialGrammar.ml[609,20568+0]..[610,20583+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[609,20568+4]..[609,20568+12])
          Ppat_var "reserved" (src/partialGrammar.ml[609,20568+4]..[609,20568+12])
        expression (src/partialGrammar.ml[610,20583+2]..[610,20583+13])
          Pexp_construct "::" (src/partialGrammar.ml[610,20583+4]..[610,20583+13]) ghost
          Some
            expression (src/partialGrammar.ml[610,20583+4]..[610,20583+13]) ghost
              Pexp_tuple
              [
                expression (src/partialGrammar.ml[610,20583+4]..[610,20583+11])
                  Pexp_constant PConst_string("error",(src/partialGrammar.ml[610,20583+5]..[610,20583+10]),None)
                expression (src/partialGrammar.ml[610,20583+12]..[610,20583+13]) ghost
                  Pexp_construct "[]" (src/partialGrammar.ml[610,20583+12]..[610,20583+13]) ghost
                  None
              ]
    ]
  structure_item (src/partialGrammar.ml[612,20598+0]..[638,21661+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[612,20598+4]..[612,20598+30])
          Ppat_var "check_identifier_reference" (src/partialGrammar.ml[612,20598+4]..[612,20598+30])
        expression (src/partialGrammar.ml[612,20598+31]..[638,21661+59]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[612,20598+31]..[612,20598+49])
            Ppat_var "mark_token_as_used" (src/partialGrammar.ml[612,20598+31]..[612,20598+49])
          expression (src/partialGrammar.ml[612,20598+50]..[638,21661+59]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/partialGrammar.ml[612,20598+50]..[612,20598+57])
              Ppat_var "grammar" (src/partialGrammar.ml[612,20598+50]..[612,20598+57])
            expression (src/partialGrammar.ml[612,20598+58]..[638,21661+59]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/partialGrammar.ml[612,20598+58]..[612,20598+63])
                Ppat_var "prule" (src/partialGrammar.ml[612,20598+58]..[612,20598+63])
              expression (src/partialGrammar.ml[612,20598+64]..[638,21661+59]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/partialGrammar.ml[612,20598+64]..[612,20598+71])
                  Ppat_var "is_prec" (src/partialGrammar.ml[612,20598+64]..[612,20598+71])
                expression (src/partialGrammar.ml[612,20598+72]..[638,21661+59]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/partialGrammar.ml[612,20598+72]..[612,20598+73])
                    Ppat_var "s" (src/partialGrammar.ml[612,20598+72]..[612,20598+73])
                  expression (src/partialGrammar.ml[612,20598+74]..[638,21661+59]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/partialGrammar.ml[612,20598+74]..[612,20598+75])
                      Ppat_var "p" (src/partialGrammar.ml[612,20598+74]..[612,20598+75])
                    expression (src/partialGrammar.ml[613,20676+2]..[638,21661+59])
                      Pexp_ifthenelse
                      expression (src/partialGrammar.ml[613,20676+5]..[613,20676+50])
                        Pexp_apply
                        expression (src/partialGrammar.ml[613,20676+17]..[613,20676+19])
                          Pexp_ident "&&" (src/partialGrammar.ml[613,20676+17]..[613,20676+19])
                        [
                          <arg>
                          Nolabel
                            expression (src/partialGrammar.ml[613,20676+5]..[613,20676+16])
                              Pexp_apply
                              expression (src/partialGrammar.ml[613,20676+5]..[613,20676+8])
                                Pexp_ident "not" (src/partialGrammar.ml[613,20676+5]..[613,20676+8])
                              [
                                <arg>
                                Nolabel
                                  expression (src/partialGrammar.ml[613,20676+9]..[613,20676+16])
                                    Pexp_ident "is_prec" (src/partialGrammar.ml[613,20676+9]..[613,20676+16])
                              ]
                          <arg>
                          Nolabel
                            expression (src/partialGrammar.ml[613,20676+20]..[613,20676+50])
                              Pexp_apply
                              expression (src/partialGrammar.ml[613,20676+20]..[613,20676+28])
                                Pexp_ident "List.mem" (src/partialGrammar.ml[613,20676+20]..[613,20676+28])
                              [
                                <arg>
                                Nolabel
                                  expression (src/partialGrammar.ml[613,20676+29]..[613,20676+30])
                                    Pexp_ident "s" (src/partialGrammar.ml[613,20676+29]..[613,20676+30])
                                <arg>
                                Nolabel
                                  expression (src/partialGrammar.ml[613,20676+31]..[613,20676+50])
                                    Pexp_field
                                    expression (src/partialGrammar.ml[613,20676+31]..[613,20676+36])
                                      Pexp_ident "prule" (src/partialGrammar.ml[613,20676+31]..[613,20676+36])
                                    "pr_parameters" (src/partialGrammar.ml[613,20676+37]..[613,20676+50])
                              ]
                        ]
                      expression (src/partialGrammar.ml[615,20768+4]..[615,20768+6])
                        Pexp_construct "()" (src/partialGrammar.ml[615,20768+4]..[615,20768+6])
                        None
                      Some
                        expression (src/partialGrammar.ml[616,20775+7]..[638,21661+59])
                          Pexp_ifthenelse
                          expression (src/partialGrammar.ml[616,20775+10]..[616,20775+44])
                            Pexp_apply
                            expression (src/partialGrammar.ml[616,20775+22]..[616,20775+24])
                              Pexp_ident "&&" (src/partialGrammar.ml[616,20775+22]..[616,20775+24])
                            [
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[616,20775+10]..[616,20775+21])
                                  Pexp_apply
                                  expression (src/partialGrammar.ml[616,20775+10]..[616,20775+13])
                                    Pexp_ident "not" (src/partialGrammar.ml[616,20775+10]..[616,20775+13])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/partialGrammar.ml[616,20775+14]..[616,20775+21])
                                        Pexp_ident "is_prec" (src/partialGrammar.ml[616,20775+14]..[616,20775+21])
                                  ]
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[616,20775+25]..[616,20775+44])
                                  Pexp_apply
                                  expression (src/partialGrammar.ml[616,20775+25]..[616,20775+33])
                                    Pexp_ident "List.mem" (src/partialGrammar.ml[616,20775+25]..[616,20775+33])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/partialGrammar.ml[616,20775+34]..[616,20775+35])
                                        Pexp_ident "s" (src/partialGrammar.ml[616,20775+34]..[616,20775+35])
                                    <arg>
                                    Nolabel
                                      expression (src/partialGrammar.ml[616,20775+36]..[616,20775+44])
                                        Pexp_ident "reserved" (src/partialGrammar.ml[616,20775+36]..[616,20775+44])
                                  ]
                            ]
                          expression (src/partialGrammar.ml[618,20853+4]..[618,20853+24])
                            Pexp_apply
                            expression (src/partialGrammar.ml[618,20853+4]..[618,20853+22])
                              Pexp_ident "mark_token_as_used" (src/partialGrammar.ml[618,20853+4]..[618,20853+22])
                            [
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[618,20853+23]..[618,20853+24])
                                  Pexp_ident "s" (src/partialGrammar.ml[618,20853+23]..[618,20853+24])
                            ]
                          Some
                            expression (src/partialGrammar.ml[619,20878+7]..[638,21661+59])
                              Pexp_ifthenelse
                              expression (src/partialGrammar.ml[619,20878+10]..[619,20878+56])
                                Pexp_apply
                                expression (src/partialGrammar.ml[619,20878+22]..[619,20878+24])
                                  Pexp_ident "&&" (src/partialGrammar.ml[619,20878+22]..[619,20878+24])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/partialGrammar.ml[619,20878+10]..[619,20878+21])
                                      Pexp_apply
                                      expression (src/partialGrammar.ml[619,20878+10]..[619,20878+13])
                                        Pexp_ident "not" (src/partialGrammar.ml[619,20878+10]..[619,20878+13])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/partialGrammar.ml[619,20878+14]..[619,20878+21])
                                            Pexp_ident "is_prec" (src/partialGrammar.ml[619,20878+14]..[619,20878+21])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/partialGrammar.ml[619,20878+25]..[619,20878+56])
                                      Pexp_apply
                                      expression (src/partialGrammar.ml[619,20878+25]..[619,20878+38])
                                        Pexp_ident "StringMap.mem" (src/partialGrammar.ml[619,20878+25]..[619,20878+38])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/partialGrammar.ml[619,20878+39]..[619,20878+40])
                                            Pexp_ident "s" (src/partialGrammar.ml[619,20878+39]..[619,20878+40])
                                        <arg>
                                        Nolabel
                                          expression (src/partialGrammar.ml[619,20878+41]..[619,20878+56])
                                            Pexp_field
                                            expression (src/partialGrammar.ml[619,20878+41]..[619,20878+48])
                                              Pexp_ident "grammar" (src/partialGrammar.ml[619,20878+41]..[619,20878+48])
                                            "p_rules" (src/partialGrammar.ml[619,20878+49]..[619,20878+56])
                                      ]
                                ]
                              expression (src/partialGrammar.ml[621,20972+4]..[621,20972+6])
                                Pexp_construct "()" (src/partialGrammar.ml[621,20972+4]..[621,20972+6])
                                None
                              Some
                                expression (src/partialGrammar.ml[622,20979+7]..[638,21661+59])
                                  Pexp_match
                                  expression (src/partialGrammar.ml[622,20979+13]..[622,20979+46])
                                    Pexp_apply
                                    expression (src/partialGrammar.ml[622,20979+13]..[622,20979+27])
                                      Pexp_ident "StringMap.find" (src/partialGrammar.ml[622,20979+13]..[622,20979+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/partialGrammar.ml[622,20979+28]..[622,20979+29])
                                          Pexp_ident "s" (src/partialGrammar.ml[622,20979+28]..[622,20979+29])
                                      <arg>
                                      Nolabel
                                        expression (src/partialGrammar.ml[622,20979+30]..[622,20979+46])
                                          Pexp_field
                                          expression (src/partialGrammar.ml[622,20979+30]..[622,20979+37])
                                            Pexp_ident "grammar" (src/partialGrammar.ml[622,20979+30]..[622,20979+37])
                                          "p_tokens" (src/partialGrammar.ml[622,20979+38]..[622,20979+46])
                                    ]
                                  [
                                    <case>
                                      pattern (src/partialGrammar.ml[623,21031+6]..[623,21031+10])
                                        Ppat_var "prop" (src/partialGrammar.ml[623,21031+6]..[623,21031+10])
                                      expression (src/partialGrammar.ml[625,21101+8]..[632,21453+39])
                                        Pexp_sequence
                                        expression (src/partialGrammar.ml[625,21101+8]..[625,21101+28])
                                          Pexp_apply
                                          expression (src/partialGrammar.ml[625,21101+8]..[625,21101+26])
                                            Pexp_ident "mark_token_as_used" (src/partialGrammar.ml[625,21101+8]..[625,21101+26])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/partialGrammar.ml[625,21101+27]..[625,21101+28])
                                                Pexp_ident "s" (src/partialGrammar.ml[625,21101+27]..[625,21101+28])
                                          ]
                                        expression (src/partialGrammar.ml[626,21131+8]..[632,21453+39])
                                          Pexp_ifthenelse
                                          expression (src/partialGrammar.ml[626,21131+11]..[626,21131+49])
                                            Pexp_apply
                                            expression (src/partialGrammar.ml[626,21131+23]..[626,21131+25])
                                              Pexp_ident "&&" (src/partialGrammar.ml[626,21131+23]..[626,21131+25])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/partialGrammar.ml[626,21131+11]..[626,21131+22])
                                                  Pexp_apply
                                                  expression (src/partialGrammar.ml[626,21131+11]..[626,21131+14])
                                                    Pexp_ident "not" (src/partialGrammar.ml[626,21131+11]..[626,21131+14])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/partialGrammar.ml[626,21131+15]..[626,21131+22])
                                                        Pexp_ident "is_prec" (src/partialGrammar.ml[626,21131+15]..[626,21131+22])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (src/partialGrammar.ml[626,21131+26]..[626,21131+49])
                                                  Pexp_apply
                                                  expression (src/partialGrammar.ml[626,21131+26]..[626,21131+29])
                                                    Pexp_ident "not" (src/partialGrammar.ml[626,21131+26]..[626,21131+29])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/partialGrammar.ml[626,21131+30]..[626,21131+49])
                                                        Pexp_field
                                                        expression (src/partialGrammar.ml[626,21131+30]..[626,21131+34])
                                                          Pexp_ident "prop" (src/partialGrammar.ml[626,21131+30]..[626,21131+34])
                                                        "tk_is_declared" (src/partialGrammar.ml[626,21131+35]..[626,21131+49])
                                                  ]
                                            ]
                                          expression (src/partialGrammar.ml[630,21361+10]..[632,21453+39])
                                            Pexp_apply
                                            expression (src/partialGrammar.ml[630,21361+10]..[630,21361+21])
                                              Pexp_ident "Error.error" (src/partialGrammar.ml[630,21361+10]..[630,21361+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/partialGrammar.ml[630,21361+22]..[630,21361+27])
                                                  Pexp_construct "::" (src/partialGrammar.ml[630,21361+24]..[630,21361+27]) ghost
                                                  Some
                                                    expression (src/partialGrammar.ml[630,21361+24]..[630,21361+27]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (src/partialGrammar.ml[630,21361+24]..[630,21361+25])
                                                          Pexp_ident "p" (src/partialGrammar.ml[630,21361+24]..[630,21361+25])
                                                        expression (src/partialGrammar.ml[630,21361+26]..[630,21361+27]) ghost
                                                          Pexp_construct "[]" (src/partialGrammar.ml[630,21361+26]..[630,21361+27]) ghost
                                                          None
                                                      ]
                                              <arg>
                                              Nolabel
                                                expression (src/partialGrammar.ml[631,21389+12]..[632,21453+37])
                                                  Pexp_constant PConst_string("The symbol %s has not been declared by %%token,\nso cannot be used here.",(src/partialGrammar.ml[631,21389+13]..[632,21453+36]),None)
                                              <arg>
                                              Nolabel
                                                expression (src/partialGrammar.ml[632,21453+38]..[632,21453+39])
                                                  Pexp_ident "s" (src/partialGrammar.ml[632,21453+38]..[632,21453+39])
                                            ]
                                          None
                                    <case>
                                      pattern (src/partialGrammar.ml[633,21493+6]..[633,21493+25])
                                        Ppat_exception
                                        pattern (src/partialGrammar.ml[633,21493+16]..[633,21493+25])
                                          Ppat_construct "Not_found" (src/partialGrammar.ml[633,21493+16]..[633,21493+25])
                                          None
                                      expression (src/partialGrammar.ml[635,21555+8]..[638,21661+59])
                                        Pexp_ifthenelse
                                        expression (src/partialGrammar.ml[635,21555+11]..[635,21555+18])
                                          Pexp_ident "is_prec" (src/partialGrammar.ml[635,21555+11]..[635,21555+18])
                                        expression (src/partialGrammar.ml[636,21579+10]..[636,21579+68])
                                          Pexp_apply
                                          expression (src/partialGrammar.ml[636,21579+10]..[636,21579+21])
                                            Pexp_ident "Error.error" (src/partialGrammar.ml[636,21579+10]..[636,21579+21])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/partialGrammar.ml[636,21579+22]..[636,21579+27])
                                                Pexp_construct "::" (src/partialGrammar.ml[636,21579+24]..[636,21579+27]) ghost
                                                Some
                                                  expression (src/partialGrammar.ml[636,21579+24]..[636,21579+27]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (src/partialGrammar.ml[636,21579+24]..[636,21579+25])
                                                        Pexp_ident "p" (src/partialGrammar.ml[636,21579+24]..[636,21579+25])
                                                      expression (src/partialGrammar.ml[636,21579+26]..[636,21579+27]) ghost
                                                        Pexp_construct "[]" (src/partialGrammar.ml[636,21579+26]..[636,21579+27]) ghost
                                                        None
                                                    ]
                                            <arg>
                                            Nolabel
                                              expression (src/partialGrammar.ml[636,21579+28]..[636,21579+66])
                                                Pexp_constant PConst_string("The terminal symbol %s is undefined.",(src/partialGrammar.ml[636,21579+29]..[636,21579+65]),None)
                                            <arg>
                                            Nolabel
                                              expression (src/partialGrammar.ml[636,21579+67]..[636,21579+68])
                                                Pexp_ident "s" (src/partialGrammar.ml[636,21579+67]..[636,21579+68])
                                          ]
                                        Some
                                          expression (src/partialGrammar.ml[638,21661+10]..[638,21661+59])
                                            Pexp_apply
                                            expression (src/partialGrammar.ml[638,21661+10]..[638,21661+21])
                                              Pexp_ident "Error.error" (src/partialGrammar.ml[638,21661+10]..[638,21661+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/partialGrammar.ml[638,21661+22]..[638,21661+27])
                                                  Pexp_construct "::" (src/partialGrammar.ml[638,21661+24]..[638,21661+27]) ghost
                                                  Some
                                                    expression (src/partialGrammar.ml[638,21661+24]..[638,21661+27]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (src/partialGrammar.ml[638,21661+24]..[638,21661+25])
                                                          Pexp_ident "p" (src/partialGrammar.ml[638,21661+24]..[638,21661+25])
                                                        expression (src/partialGrammar.ml[638,21661+26]..[638,21661+27]) ghost
                                                          Pexp_construct "[]" (src/partialGrammar.ml[638,21661+26]..[638,21661+27]) ghost
                                                          None
                                                      ]
                                              <arg>
                                              Nolabel
                                                expression (src/partialGrammar.ml[638,21661+28]..[638,21661+57])
                                                  Pexp_constant PConst_string("The symbol %s is undefined.",(src/partialGrammar.ml[638,21661+29]..[638,21661+56]),None)
                                              <arg>
                                              Nolabel
                                                expression (src/partialGrammar.ml[638,21661+58]..[638,21661+59])
                                                  Pexp_ident "s" (src/partialGrammar.ml[638,21661+58]..[638,21661+59])
                                            ]
                                  ]
    ]
  structure_item (src/partialGrammar.ml[640,21722+0]..[767,26752+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[640,21722+4]..[640,21722+47])
          Ppat_var "check_parameterized_grammar_is_well_defined" (src/partialGrammar.ml[640,21722+4]..[640,21722+47])
        expression (src/partialGrammar.ml[640,21722+48]..[767,26752+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[640,21722+48]..[640,21722+55])
            Ppat_var "grammar" (src/partialGrammar.ml[640,21722+48]..[640,21722+55])
          expression (src/partialGrammar.ml[643,21848+2]..[767,26752+5])
            Pexp_sequence
            expression (src/partialGrammar.ml[643,21848+2]..[652,22309+29])
              Pexp_apply
              expression (src/partialGrammar.ml[643,21848+2]..[643,21848+16])
                Pexp_ident "StringMap.iter" (src/partialGrammar.ml[643,21848+2]..[643,21848+16])
              [
                <arg>
                Nolabel
                  expression (src/partialGrammar.ml[644,21865+4]..[652,22309+5])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/partialGrammar.ml[644,21865+9]..[644,21865+20])
                      Ppat_var "nonterminal" (src/partialGrammar.ml[644,21865+9]..[644,21865+20])
                    expression (src/partialGrammar.ml[644,21865+21]..[651,22235+73]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/partialGrammar.ml[644,21865+21]..[644,21865+22])
                        Ppat_var "p" (src/partialGrammar.ml[644,21865+21]..[644,21865+22])
                      expression (src/partialGrammar.ml[645,21891+7]..[651,22235+73])
                        Pexp_sequence
                        expression (src/partialGrammar.ml[645,21891+7]..[646,21954+72])
                          Pexp_ifthenelse
                          expression (src/partialGrammar.ml[645,21891+10]..[645,21891+57])
                            Pexp_apply
                            expression (src/partialGrammar.ml[645,21891+10]..[645,21891+13])
                              Pexp_ident "not" (src/partialGrammar.ml[645,21891+10]..[645,21891+13])
                            [
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[645,21891+14]..[645,21891+57])
                                  Pexp_apply
                                  expression (src/partialGrammar.ml[645,21891+15]..[645,21891+28])
                                    Pexp_ident "StringMap.mem" (src/partialGrammar.ml[645,21891+15]..[645,21891+28])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/partialGrammar.ml[645,21891+29]..[645,21891+40])
                                        Pexp_ident "nonterminal" (src/partialGrammar.ml[645,21891+29]..[645,21891+40])
                                    <arg>
                                    Nolabel
                                      expression (src/partialGrammar.ml[645,21891+41]..[645,21891+56])
                                        Pexp_field
                                        expression (src/partialGrammar.ml[645,21891+41]..[645,21891+48])
                                          Pexp_ident "grammar" (src/partialGrammar.ml[645,21891+41]..[645,21891+48])
                                        "p_rules" (src/partialGrammar.ml[645,21891+49]..[645,21891+56])
                                  ]
                            ]
                          expression (src/partialGrammar.ml[646,21954+9]..[646,21954+72])
                            Pexp_apply
                            expression (src/partialGrammar.ml[646,21954+9]..[646,21954+20])
                              Pexp_ident "Error.error" (src/partialGrammar.ml[646,21954+9]..[646,21954+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[646,21954+21]..[646,21954+24])
                                  Pexp_construct "::" (src/partialGrammar.ml[646,21954+22]..[646,21954+24]) ghost
                                  Some
                                    expression (src/partialGrammar.ml[646,21954+22]..[646,21954+24]) ghost
                                      Pexp_tuple
                                      [
                                        expression (src/partialGrammar.ml[646,21954+22]..[646,21954+23])
                                          Pexp_ident "p" (src/partialGrammar.ml[646,21954+22]..[646,21954+23])
                                        expression (src/partialGrammar.ml[646,21954+23]..[646,21954+24]) ghost
                                          Pexp_construct "[]" (src/partialGrammar.ml[646,21954+23]..[646,21954+24]) ghost
                                          None
                                      ]
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[646,21954+25]..[646,21954+60])
                                  Pexp_constant PConst_string("the start symbol %s is undefined.",(src/partialGrammar.ml[646,21954+26]..[646,21954+59]),None)
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[646,21954+61]..[646,21954+72])
                                  Pexp_ident "nonterminal" (src/partialGrammar.ml[646,21954+61]..[646,21954+72])
                            ]
                          None
                        expression (src/partialGrammar.ml[647,22028+7]..[651,22235+72])
                          Pexp_ifthenelse
                          expression (src/partialGrammar.ml[647,22028+10]..[649,22146+58])
                            Pexp_apply
                            expression (src/partialGrammar.ml[647,22028+10]..[647,22028+13])
                              Pexp_ident "not" (src/partialGrammar.ml[647,22028+10]..[647,22028+13])
                            [
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[647,22028+14]..[649,22146+58])
                                  Pexp_apply
                                  expression (src/partialGrammar.ml[647,22028+15]..[647,22028+26])
                                    Pexp_ident "List.exists" (src/partialGrammar.ml[647,22028+15]..[647,22028+26])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/partialGrammar.ml[647,22028+27]..[649,22146+41])
                                        Pexp_function
                                        [
                                          <case>
                                            pattern (src/partialGrammar.ml[648,22065+30]..[648,22065+60])
                                              Ppat_tuple
                                              [
                                                pattern (src/partialGrammar.ml[648,22065+30]..[648,22065+57])
                                                  Ppat_construct "ParameterVar" (src/partialGrammar.ml[648,22065+30]..[648,22065+42])
                                                  Some
                                                    []
                                                    pattern (src/partialGrammar.ml[648,22065+43]..[648,22065+57])
                                                      Ppat_record Closed
                                                      [
                                                        "value" (src/partialGrammar.ml[648,22065+45]..[648,22065+50])
                                                          pattern (src/partialGrammar.ml[648,22065+53]..[648,22065+55])
                                                            Ppat_var "id" (src/partialGrammar.ml[648,22065+53]..[648,22065+55])
                                                      ]
                                                pattern (src/partialGrammar.ml[648,22065+59]..[648,22065+60])
                                                  Ppat_any
                                              ]
                                            expression (src/partialGrammar.ml[648,22065+64]..[648,22065+80])
                                              Pexp_apply
                                              expression (src/partialGrammar.ml[648,22065+67]..[648,22065+68])
                                                Pexp_ident "=" (src/partialGrammar.ml[648,22065+67]..[648,22065+68])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/partialGrammar.ml[648,22065+64]..[648,22065+66])
                                                    Pexp_ident "id" (src/partialGrammar.ml[648,22065+64]..[648,22065+66])
                                                <arg>
                                                Nolabel
                                                  expression (src/partialGrammar.ml[648,22065+69]..[648,22065+80])
                                                    Pexp_ident "nonterminal" (src/partialGrammar.ml[648,22065+69]..[648,22065+80])
                                              ]
                                          <case>
                                            pattern (src/partialGrammar.ml[649,22146+30]..[649,22146+31])
                                              Ppat_any
                                            expression (src/partialGrammar.ml[649,22146+35]..[649,22146+40])
                                              Pexp_construct "false" (src/partialGrammar.ml[649,22146+35]..[649,22146+40])
                                              None
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/partialGrammar.ml[649,22146+42]..[649,22146+57])
                                        Pexp_field
                                        expression (src/partialGrammar.ml[649,22146+42]..[649,22146+49])
                                          Pexp_ident "grammar" (src/partialGrammar.ml[649,22146+42]..[649,22146+49])
                                        "p_types" (src/partialGrammar.ml[649,22146+50]..[649,22146+57])
                                  ]
                            ]
                          expression (src/partialGrammar.ml[650,22210+9]..[651,22235+72])
                            Pexp_apply
                            expression (src/partialGrammar.ml[650,22210+9]..[650,22210+20])
                              Pexp_ident "Error.error" (src/partialGrammar.ml[650,22210+9]..[650,22210+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[650,22210+21]..[650,22210+24])
                                  Pexp_construct "::" (src/partialGrammar.ml[650,22210+22]..[650,22210+24]) ghost
                                  Some
                                    expression (src/partialGrammar.ml[650,22210+22]..[650,22210+24]) ghost
                                      Pexp_tuple
                                      [
                                        expression (src/partialGrammar.ml[650,22210+22]..[650,22210+23])
                                          Pexp_ident "p" (src/partialGrammar.ml[650,22210+22]..[650,22210+23])
                                        expression (src/partialGrammar.ml[650,22210+23]..[650,22210+24]) ghost
                                          Pexp_construct "[]" (src/partialGrammar.ml[650,22210+23]..[650,22210+24]) ghost
                                          None
                                      ]
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[651,22235+11]..[651,22235+60])
                                  Pexp_constant PConst_string("the type of the start symbol %s is unspecified.",(src/partialGrammar.ml[651,22235+12]..[651,22235+59]),None)
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[651,22235+61]..[651,22235+72])
                                  Pexp_ident "nonterminal" (src/partialGrammar.ml[651,22235+61]..[651,22235+72])
                            ]
                          None
                <arg>
                Nolabel
                  expression (src/partialGrammar.ml[652,22309+6]..[652,22309+29])
                    Pexp_field
                    expression (src/partialGrammar.ml[652,22309+6]..[652,22309+13])
                      Pexp_ident "grammar" (src/partialGrammar.ml[652,22309+6]..[652,22309+13])
                    "p_start_symbols" (src/partialGrammar.ml[652,22309+14]..[652,22309+29])
              ]
            expression (src/partialGrammar.ml[658,22532+2]..[767,26752+5])
              Pexp_let Rec
              [
                <def>
                  pattern (src/partialGrammar.ml[658,22532+10]..[658,22532+15])
                    Ppat_var "check" (src/partialGrammar.ml[658,22532+10]..[658,22532+15])
                  expression (src/partialGrammar.ml[658,22532+16]..[675,23417+35]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/partialGrammar.ml[658,22532+16]..[658,22532+31])
                      Ppat_constraint
                      pattern (src/partialGrammar.ml[658,22532+17]..[658,22532+21])
                        Ppat_var "kind" (src/partialGrammar.ml[658,22532+17]..[658,22532+21])
                      core_type (src/partialGrammar.ml[658,22532+24]..[658,22532+30])
                        Ptyp_constr "string" (src/partialGrammar.ml[658,22532+24]..[658,22532+30])
                        []
                    expression (src/partialGrammar.ml[658,22532+32]..[675,23417+35]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/partialGrammar.ml[658,22532+32]..[658,22532+60])
                        Ppat_constraint
                        pattern (src/partialGrammar.ml[658,22532+33]..[658,22532+52])
                          Ppat_var "must_be_nonterminal" (src/partialGrammar.ml[658,22532+33]..[658,22532+52])
                        core_type (src/partialGrammar.ml[658,22532+55]..[658,22532+59])
                          Ptyp_constr "bool" (src/partialGrammar.ml[658,22532+55]..[658,22532+59])
                          []
                      expression (src/partialGrammar.ml[658,22532+61]..[675,23417+35]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/partialGrammar.ml[658,22532+61]..[658,22532+83])
                          Ppat_constraint
                          pattern (src/partialGrammar.ml[658,22532+62]..[658,22532+63])
                            Ppat_var "p" (src/partialGrammar.ml[658,22532+62]..[658,22532+63])
                          core_type (src/partialGrammar.ml[658,22532+66]..[658,22532+82])
                            Ptyp_constr "Syntax.parameter" (src/partialGrammar.ml[658,22532+66]..[658,22532+82])
                            []
                        expression (src/partialGrammar.ml[660,22660+4]..[675,23417+35])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/partialGrammar.ml[660,22660+8]..[660,22660+16])
                                Ppat_tuple
                                [
                                  pattern (src/partialGrammar.ml[660,22660+8]..[660,22660+12])
                                    Ppat_var "head" (src/partialGrammar.ml[660,22660+8]..[660,22660+12])
                                  pattern (src/partialGrammar.ml[660,22660+14]..[660,22660+16])
                                    Ppat_var "ps" (src/partialGrammar.ml[660,22660+14]..[660,22660+16])
                                ]
                              expression (src/partialGrammar.ml[660,22660+19]..[660,22660+37])
                                Pexp_apply
                                expression (src/partialGrammar.ml[660,22660+19]..[660,22660+35])
                                  Pexp_ident "Parameters.unapp" (src/partialGrammar.ml[660,22660+19]..[660,22660+35])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/partialGrammar.ml[660,22660+36]..[660,22660+37])
                                      Pexp_ident "p" (src/partialGrammar.ml[660,22660+36]..[660,22660+37])
                                ]
                          ]
                          expression (src/partialGrammar.ml[661,22701+4]..[675,23417+35])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/partialGrammar.ml[661,22701+8]..[661,22701+12])
                                  Ppat_var "head" (src/partialGrammar.ml[661,22701+8]..[661,22701+12])
                                expression (src/partialGrammar.ml[661,22701+15]..[661,22701+25])
                                  Pexp_apply
                                  expression (src/partialGrammar.ml[661,22701+15]..[661,22701+20])
                                    Pexp_ident "value" (src/partialGrammar.ml[661,22701+15]..[661,22701+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/partialGrammar.ml[661,22701+21]..[661,22701+25])
                                        Pexp_ident "head" (src/partialGrammar.ml[661,22701+21]..[661,22701+25])
                                  ]
                            ]
                            expression (src/partialGrammar.ml[663,22793+4]..[675,23417+35])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/partialGrammar.ml[663,22793+8]..[663,22793+22])
                                    Ppat_var "is_nonterminal" (src/partialGrammar.ml[663,22793+8]..[663,22793+22])
                                  expression (src/partialGrammar.ml[663,22793+25]..[663,22793+59])
                                    Pexp_apply
                                    expression (src/partialGrammar.ml[663,22793+25]..[663,22793+38])
                                      Pexp_ident "StringMap.mem" (src/partialGrammar.ml[663,22793+25]..[663,22793+38])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/partialGrammar.ml[663,22793+39]..[663,22793+43])
                                          Pexp_ident "head" (src/partialGrammar.ml[663,22793+39]..[663,22793+43])
                                      <arg>
                                      Nolabel
                                        expression (src/partialGrammar.ml[663,22793+44]..[663,22793+59])
                                          Pexp_field
                                          expression (src/partialGrammar.ml[663,22793+44]..[663,22793+51])
                                            Pexp_ident "grammar" (src/partialGrammar.ml[663,22793+44]..[663,22793+51])
                                          "p_rules" (src/partialGrammar.ml[663,22793+52]..[663,22793+59])
                                    ]
                                <def>
                                  pattern (src/partialGrammar.ml[664,22853+8]..[664,22853+19])
                                    Ppat_var "is_terminal" (src/partialGrammar.ml[664,22853+8]..[664,22853+19])
                                  expression (src/partialGrammar.ml[664,22853+22]..[664,22853+83])
                                    Pexp_apply
                                    expression (src/partialGrammar.ml[664,22853+58]..[664,22853+60])
                                      Pexp_ident "||" (src/partialGrammar.ml[664,22853+58]..[664,22853+60])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/partialGrammar.ml[664,22853+22]..[664,22853+57])
                                          Pexp_apply
                                          expression (src/partialGrammar.ml[664,22853+22]..[664,22853+35])
                                            Pexp_ident "StringMap.mem" (src/partialGrammar.ml[664,22853+22]..[664,22853+35])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/partialGrammar.ml[664,22853+36]..[664,22853+40])
                                                Pexp_ident "head" (src/partialGrammar.ml[664,22853+36]..[664,22853+40])
                                            <arg>
                                            Nolabel
                                              expression (src/partialGrammar.ml[664,22853+41]..[664,22853+57])
                                                Pexp_field
                                                expression (src/partialGrammar.ml[664,22853+41]..[664,22853+48])
                                                  Pexp_ident "grammar" (src/partialGrammar.ml[664,22853+41]..[664,22853+48])
                                                "p_tokens" (src/partialGrammar.ml[664,22853+49]..[664,22853+57])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (src/partialGrammar.ml[664,22853+61]..[664,22853+83])
                                          Pexp_apply
                                          expression (src/partialGrammar.ml[664,22853+61]..[664,22853+69])
                                            Pexp_ident "List.mem" (src/partialGrammar.ml[664,22853+61]..[664,22853+69])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/partialGrammar.ml[664,22853+70]..[664,22853+74])
                                                Pexp_ident "head" (src/partialGrammar.ml[664,22853+70]..[664,22853+74])
                                            <arg>
                                            Nolabel
                                              expression (src/partialGrammar.ml[664,22853+75]..[664,22853+83])
                                                Pexp_ident "reserved" (src/partialGrammar.ml[664,22853+75]..[664,22853+83])
                                          ]
                                    ]
                              ]
                              expression (src/partialGrammar.ml[666,22988+4]..[675,23417+35])
                                Pexp_sequence
                                expression (src/partialGrammar.ml[666,22988+4]..[668,23078+36])
                                  Pexp_ifthenelse
                                  expression (src/partialGrammar.ml[666,22988+7]..[666,22988+42])
                                    Pexp_apply
                                    expression (src/partialGrammar.ml[666,22988+7]..[666,22988+10])
                                      Pexp_ident "not" (src/partialGrammar.ml[666,22988+7]..[666,22988+10])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/partialGrammar.ml[666,22988+11]..[666,22988+42])
                                          Pexp_apply
                                          expression (src/partialGrammar.ml[666,22988+24]..[666,22988+26])
                                            Pexp_ident "||" (src/partialGrammar.ml[666,22988+24]..[666,22988+26])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/partialGrammar.ml[666,22988+12]..[666,22988+23])
                                                Pexp_ident "is_terminal" (src/partialGrammar.ml[666,22988+12]..[666,22988+23])
                                            <arg>
                                            Nolabel
                                              expression (src/partialGrammar.ml[666,22988+27]..[666,22988+41])
                                                Pexp_ident "is_nonterminal" (src/partialGrammar.ml[666,22988+27]..[666,22988+41])
                                          ]
                                    ]
                                  expression (src/partialGrammar.ml[667,23036+6]..[668,23078+36])
                                    Pexp_apply
                                    expression (src/partialGrammar.ml[667,23036+6]..[667,23036+17])
                                      Pexp_ident "Error.error" (src/partialGrammar.ml[667,23036+6]..[667,23036+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/partialGrammar.ml[667,23036+18]..[667,23036+41])
                                          Pexp_construct "::" (src/partialGrammar.ml[667,23036+19]..[667,23036+41]) ghost
                                          Some
                                            expression (src/partialGrammar.ml[667,23036+19]..[667,23036+41]) ghost
                                              Pexp_tuple
                                              [
                                                expression (src/partialGrammar.ml[667,23036+19]..[667,23036+40])
                                                  Pexp_apply
                                                  expression (src/partialGrammar.ml[667,23036+19]..[667,23036+38])
                                                    Pexp_ident "Parameters.position" (src/partialGrammar.ml[667,23036+19]..[667,23036+38])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/partialGrammar.ml[667,23036+39]..[667,23036+40])
                                                        Pexp_ident "p" (src/partialGrammar.ml[667,23036+39]..[667,23036+40])
                                                  ]
                                                expression (src/partialGrammar.ml[667,23036+40]..[667,23036+41]) ghost
                                                  Pexp_construct "[]" (src/partialGrammar.ml[667,23036+40]..[667,23036+41]) ghost
                                                  None
                                              ]
                                      <arg>
                                      Nolabel
                                        expression (src/partialGrammar.ml[668,23078+13]..[668,23078+31])
                                          Pexp_constant PConst_string("%s is undefined.",(src/partialGrammar.ml[668,23078+14]..[668,23078+30]),None)
                                      <arg>
                                      Nolabel
                                        expression (src/partialGrammar.ml[668,23078+32]..[668,23078+36])
                                          Pexp_ident "head" (src/partialGrammar.ml[668,23078+32]..[668,23078+36])
                                    ]
                                  None
                                expression (src/partialGrammar.ml[669,23116+4]..[675,23417+35])
                                  Pexp_sequence
                                  expression (src/partialGrammar.ml[669,23116+4]..[673,23335+43])
                                    Pexp_ifthenelse
                                    expression (src/partialGrammar.ml[669,23116+7]..[669,23116+50])
                                      Pexp_apply
                                      expression (src/partialGrammar.ml[669,23116+28]..[669,23116+30])
                                        Pexp_ident "&&" (src/partialGrammar.ml[669,23116+28]..[669,23116+30])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/partialGrammar.ml[669,23116+8]..[669,23116+27])
                                            Pexp_ident "must_be_nonterminal" (src/partialGrammar.ml[669,23116+8]..[669,23116+27])
                                        <arg>
                                        Nolabel
                                          expression (src/partialGrammar.ml[669,23116+31]..[669,23116+49])
                                            Pexp_apply
                                            expression (src/partialGrammar.ml[669,23116+31]..[669,23116+34])
                                              Pexp_ident "not" (src/partialGrammar.ml[669,23116+31]..[669,23116+34])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/partialGrammar.ml[669,23116+35]..[669,23116+49])
                                                  Pexp_ident "is_nonterminal" (src/partialGrammar.ml[669,23116+35]..[669,23116+49])
                                            ]
                                      ]
                                    expression (src/partialGrammar.ml[670,23172+6]..[673,23335+43])
                                      Pexp_apply
                                      expression (src/partialGrammar.ml[670,23172+6]..[670,23172+17])
                                        Pexp_ident "Error.error" (src/partialGrammar.ml[670,23172+6]..[670,23172+17])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/partialGrammar.ml[670,23172+18]..[670,23172+41])
                                            Pexp_construct "::" (src/partialGrammar.ml[670,23172+19]..[670,23172+41]) ghost
                                            Some
                                              expression (src/partialGrammar.ml[670,23172+19]..[670,23172+41]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (src/partialGrammar.ml[670,23172+19]..[670,23172+40])
                                                    Pexp_apply
                                                    expression (src/partialGrammar.ml[670,23172+19]..[670,23172+38])
                                                      Pexp_ident "Parameters.position" (src/partialGrammar.ml[670,23172+19]..[670,23172+38])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/partialGrammar.ml[670,23172+39]..[670,23172+40])
                                                          Pexp_ident "p" (src/partialGrammar.ml[670,23172+39]..[670,23172+40])
                                                    ]
                                                  expression (src/partialGrammar.ml[670,23172+40]..[670,23172+41]) ghost
                                                    Pexp_construct "[]" (src/partialGrammar.ml[670,23172+40]..[670,23172+41]) ghost
                                                    None
                                                ]
                                        <arg>
                                        Nolabel
                                          expression (src/partialGrammar.ml[671,23214+13]..[672,23256+78])
                                            Pexp_constant PConst_string("%s is a terminal symbol,\nbut %s declarations are applicable only to nonterminal symbols.",(src/partialGrammar.ml[671,23214+14]..[672,23256+77]),None)
                                        <arg>
                                        Nolabel
                                          expression (src/partialGrammar.ml[673,23335+13]..[673,23335+38])
                                            Pexp_apply
                                            expression (src/partialGrammar.ml[673,23335+14]..[673,23335+30])
                                              Pexp_ident "Parameters.print" (src/partialGrammar.ml[673,23335+14]..[673,23335+30])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/partialGrammar.ml[673,23335+31]..[673,23335+35])
                                                  Pexp_construct "true" (src/partialGrammar.ml[673,23335+31]..[673,23335+35])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (src/partialGrammar.ml[673,23335+36]..[673,23335+37])
                                                  Pexp_ident "p" (src/partialGrammar.ml[673,23335+36]..[673,23335+37])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (src/partialGrammar.ml[673,23335+39]..[673,23335+43])
                                            Pexp_ident "kind" (src/partialGrammar.ml[673,23335+39]..[673,23335+43])
                                      ]
                                    None
                                  expression (src/partialGrammar.ml[675,23417+4]..[675,23417+35])
                                    Pexp_apply
                                    expression (src/partialGrammar.ml[675,23417+4]..[675,23417+13])
                                      Pexp_ident "List.iter" (src/partialGrammar.ml[675,23417+4]..[675,23417+13])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/partialGrammar.ml[675,23417+14]..[675,23417+32])
                                          Pexp_apply
                                          expression (src/partialGrammar.ml[675,23417+15]..[675,23417+20])
                                            Pexp_ident "check" (src/partialGrammar.ml[675,23417+15]..[675,23417+20])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/partialGrammar.ml[675,23417+21]..[675,23417+25])
                                                Pexp_ident "kind" (src/partialGrammar.ml[675,23417+21]..[675,23417+25])
                                            <arg>
                                            Nolabel
                                              expression (src/partialGrammar.ml[675,23417+26]..[675,23417+31])
                                                Pexp_construct "false" (src/partialGrammar.ml[675,23417+26]..[675,23417+31])
                                                None
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (src/partialGrammar.ml[675,23417+33]..[675,23417+35])
                                          Pexp_ident "ps" (src/partialGrammar.ml[675,23417+33]..[675,23417+35])
                                    ]
              ]
              expression (src/partialGrammar.ml[678,23459+2]..[767,26752+5])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/partialGrammar.ml[678,23459+6]..[678,23459+15])
                      Ppat_var "check_fst" (src/partialGrammar.ml[678,23459+6]..[678,23459+15])
                    expression (src/partialGrammar.ml[678,23459+16]..[679,23509+36]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/partialGrammar.ml[678,23459+16]..[678,23459+20])
                        Ppat_var "kind" (src/partialGrammar.ml[678,23459+16]..[678,23459+20])
                      expression (src/partialGrammar.ml[678,23459+21]..[679,23509+36]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/partialGrammar.ml[678,23459+21]..[678,23459+40])
                          Ppat_var "must_be_nonterminal" (src/partialGrammar.ml[678,23459+21]..[678,23459+40])
                        expression (src/partialGrammar.ml[678,23459+41]..[679,23509+36]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/partialGrammar.ml[678,23459+41]..[678,23459+47])
                            Ppat_tuple
                            [
                              pattern (src/partialGrammar.ml[678,23459+42]..[678,23459+43])
                                Ppat_var "p" (src/partialGrammar.ml[678,23459+42]..[678,23459+43])
                              pattern (src/partialGrammar.ml[678,23459+45]..[678,23459+46])
                                Ppat_any
                            ]
                          expression (src/partialGrammar.ml[679,23509+4]..[679,23509+36])
                            Pexp_apply
                            expression (src/partialGrammar.ml[679,23509+4]..[679,23509+9])
                              Pexp_ident "check" (src/partialGrammar.ml[679,23509+4]..[679,23509+9])
                            [
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[679,23509+10]..[679,23509+14])
                                  Pexp_ident "kind" (src/partialGrammar.ml[679,23509+10]..[679,23509+14])
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[679,23509+15]..[679,23509+34])
                                  Pexp_ident "must_be_nonterminal" (src/partialGrammar.ml[679,23509+15]..[679,23509+34])
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[679,23509+35]..[679,23509+36])
                                  Pexp_ident "p" (src/partialGrammar.ml[679,23509+35]..[679,23509+36])
                            ]
                ]
                expression (src/partialGrammar.ml[682,23552+2]..[767,26752+5])
                  Pexp_sequence
                  expression (src/partialGrammar.ml[682,23552+2]..[682,23552+52])
                    Pexp_apply
                    expression (src/partialGrammar.ml[682,23552+2]..[682,23552+11])
                      Pexp_ident "List.iter" (src/partialGrammar.ml[682,23552+2]..[682,23552+11])
                    [
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[682,23552+12]..[682,23552+36])
                          Pexp_apply
                          expression (src/partialGrammar.ml[682,23552+13]..[682,23552+22])
                            Pexp_ident "check_fst" (src/partialGrammar.ml[682,23552+13]..[682,23552+22])
                          [
                            <arg>
                            Nolabel
                              expression (src/partialGrammar.ml[682,23552+23]..[682,23552+30])
                                Pexp_constant PConst_string("%type",(src/partialGrammar.ml[682,23552+24]..[682,23552+29]),None)
                            <arg>
                            Nolabel
                              expression (src/partialGrammar.ml[682,23552+31]..[682,23552+35])
                                Pexp_construct "true" (src/partialGrammar.ml[682,23552+31]..[682,23552+35])
                                None
                          ]
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[682,23552+37]..[682,23552+52])
                          Pexp_field
                          expression (src/partialGrammar.ml[682,23552+37]..[682,23552+44])
                            Pexp_ident "grammar" (src/partialGrammar.ml[682,23552+37]..[682,23552+44])
                          "p_types" (src/partialGrammar.ml[682,23552+45]..[682,23552+52])
                    ]
                  expression (src/partialGrammar.ml[683,23606+2]..[767,26752+5])
                    Pexp_sequence
                    expression (src/partialGrammar.ml[683,23606+2]..[683,23606+73])
                      Pexp_apply
                      expression (src/partialGrammar.ml[683,23606+2]..[683,23606+11])
                        Pexp_ident "List.iter" (src/partialGrammar.ml[683,23606+2]..[683,23606+11])
                      [
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[683,23606+12]..[683,23606+47])
                            Pexp_apply
                            expression (src/partialGrammar.ml[683,23606+13]..[683,23606+22])
                              Pexp_ident "check_fst" (src/partialGrammar.ml[683,23606+13]..[683,23606+22])
                            [
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[683,23606+23]..[683,23606+41])
                                  Pexp_constant PConst_string("%on_error_reduce",(src/partialGrammar.ml[683,23606+24]..[683,23606+40]),None)
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[683,23606+42]..[683,23606+46])
                                  Pexp_construct "true" (src/partialGrammar.ml[683,23606+42]..[683,23606+46])
                                  None
                            ]
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[683,23606+48]..[683,23606+73])
                            Pexp_field
                            expression (src/partialGrammar.ml[683,23606+48]..[683,23606+55])
                              Pexp_ident "grammar" (src/partialGrammar.ml[683,23606+48]..[683,23606+55])
                            "p_on_error_reduce" (src/partialGrammar.ml[683,23606+56]..[683,23606+73])
                      ]
                    expression (src/partialGrammar.ml[684,23681+2]..[767,26752+5])
                      Pexp_sequence
                      expression (src/partialGrammar.ml[684,23681+2]..[686,23761+31])
                        Pexp_apply
                        expression (src/partialGrammar.ml[684,23681+2]..[684,23681+11])
                          Pexp_ident "List.iter" (src/partialGrammar.ml[684,23681+2]..[684,23681+11])
                        [
                          <arg>
                          Nolabel
                            expression (src/partialGrammar.ml[684,23681+12]..[686,23761+3])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/partialGrammar.ml[684,23681+17]..[684,23681+28])
                                Ppat_tuple
                                [
                                  pattern (src/partialGrammar.ml[684,23681+18]..[684,23681+24])
                                    Ppat_var "params" (src/partialGrammar.ml[684,23681+18]..[684,23681+24])
                                  pattern (src/partialGrammar.ml[684,23681+26]..[684,23681+27])
                                    Ppat_any
                                ]
                              expression (src/partialGrammar.ml[685,23713+4]..[685,23713+47])
                                Pexp_apply
                                expression (src/partialGrammar.ml[685,23713+4]..[685,23713+13])
                                  Pexp_ident "List.iter" (src/partialGrammar.ml[685,23713+4]..[685,23713+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/partialGrammar.ml[685,23713+14]..[685,23713+40])
                                      Pexp_apply
                                      expression (src/partialGrammar.ml[685,23713+15]..[685,23713+20])
                                        Pexp_ident "check" (src/partialGrammar.ml[685,23713+15]..[685,23713+20])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/partialGrammar.ml[685,23713+21]..[685,23713+33])
                                            Pexp_constant PConst_string("%attribute",(src/partialGrammar.ml[685,23713+22]..[685,23713+32]),None)
                                        <arg>
                                        Nolabel
                                          expression (src/partialGrammar.ml[685,23713+34]..[685,23713+39])
                                            Pexp_construct "false" (src/partialGrammar.ml[685,23713+34]..[685,23713+39])
                                            None
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/partialGrammar.ml[685,23713+41]..[685,23713+47])
                                      Pexp_ident "params" (src/partialGrammar.ml[685,23713+41]..[685,23713+47])
                                ]
                          <arg>
                          Nolabel
                            expression (src/partialGrammar.ml[686,23761+4]..[686,23761+31])
                              Pexp_field
                              expression (src/partialGrammar.ml[686,23761+4]..[686,23761+11])
                                Pexp_ident "grammar" (src/partialGrammar.ml[686,23761+4]..[686,23761+11])
                              "p_symbol_attributes" (src/partialGrammar.ml[686,23761+12]..[686,23761+31])
                        ]
                      expression (src/partialGrammar.ml[689,23848+2]..[767,26752+5])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/partialGrammar.ml[689,23848+6]..[689,23848+17])
                              Ppat_var "used_tokens" (src/partialGrammar.ml[689,23848+6]..[689,23848+17])
                            expression (src/partialGrammar.ml[689,23848+20]..[689,23848+39])
                              Pexp_apply
                              expression (src/partialGrammar.ml[689,23848+20]..[689,23848+23])
                                Pexp_ident "ref" (src/partialGrammar.ml[689,23848+20]..[689,23848+23])
                              [
                                <arg>
                                Nolabel
                                  expression (src/partialGrammar.ml[689,23848+24]..[689,23848+39])
                                    Pexp_ident "StringSet.empty" (src/partialGrammar.ml[689,23848+24]..[689,23848+39])
                              ]
                        ]
                        expression (src/partialGrammar.ml[690,23891+2]..[767,26752+5])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/partialGrammar.ml[690,23891+6]..[690,23891+24])
                                Ppat_var "mark_token_as_used" (src/partialGrammar.ml[690,23891+6]..[690,23891+24])
                              expression (src/partialGrammar.ml[690,23891+25]..[691,23924+51]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/partialGrammar.ml[690,23891+25]..[690,23891+30])
                                  Ppat_var "token" (src/partialGrammar.ml[690,23891+25]..[690,23891+30])
                                expression (src/partialGrammar.ml[691,23924+4]..[691,23924+51])
                                  Pexp_apply
                                  expression (src/partialGrammar.ml[691,23924+16]..[691,23924+18])
                                    Pexp_ident ":=" (src/partialGrammar.ml[691,23924+16]..[691,23924+18])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/partialGrammar.ml[691,23924+4]..[691,23924+15])
                                        Pexp_ident "used_tokens" (src/partialGrammar.ml[691,23924+4]..[691,23924+15])
                                    <arg>
                                    Nolabel
                                      expression (src/partialGrammar.ml[691,23924+19]..[691,23924+51])
                                        Pexp_apply
                                        expression (src/partialGrammar.ml[691,23924+19]..[691,23924+32])
                                          Pexp_ident "StringSet.add" (src/partialGrammar.ml[691,23924+19]..[691,23924+32])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/partialGrammar.ml[691,23924+33]..[691,23924+38])
                                              Pexp_ident "token" (src/partialGrammar.ml[691,23924+33]..[691,23924+38])
                                          <arg>
                                          Nolabel
                                            expression (src/partialGrammar.ml[691,23924+39]..[691,23924+51])
                                              Pexp_apply
                                              expression (src/partialGrammar.ml[691,23924+39]..[691,23924+40])
                                                Pexp_ident "!" (src/partialGrammar.ml[691,23924+39]..[691,23924+40])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/partialGrammar.ml[691,23924+40]..[691,23924+51])
                                                    Pexp_ident "used_tokens" (src/partialGrammar.ml[691,23924+40]..[691,23924+51])
                                              ]
                                        ]
                                  ]
                          ]
                          expression (src/partialGrammar.ml[693,23981+4]..[767,26752+5])
                            Pexp_sequence
                            expression (src/partialGrammar.ml[693,23981+4]..[752,26202+23])
                              Pexp_apply
                              expression (src/partialGrammar.ml[693,23981+4]..[693,23981+18])
                                Pexp_ident "StringMap.iter" (src/partialGrammar.ml[693,23981+4]..[693,23981+18])
                              [
                                <arg>
                                Nolabel
                                  expression (src/partialGrammar.ml[694,24000+6]..[752,26202+7])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/partialGrammar.ml[694,24000+11]..[694,24000+12])
                                      Ppat_var "k" (src/partialGrammar.ml[694,24000+11]..[694,24000+12])
                                    expression (src/partialGrammar.ml[694,24000+13]..[750,26163+37]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (src/partialGrammar.ml[694,24000+13]..[694,24000+18])
                                        Ppat_var "prule" (src/partialGrammar.ml[694,24000+13]..[694,24000+18])
                                      expression (src/partialGrammar.ml[696,24023+9]..[750,26163+37])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/partialGrammar.ml[696,24023+13]..[696,24023+39])
                                              Ppat_var "check_identifier_reference" (src/partialGrammar.ml[696,24023+13]..[696,24023+39])
                                            expression (src/partialGrammar.ml[697,24065+11]..[698,24103+45])
                                              Pexp_apply
                                              expression (src/partialGrammar.ml[697,24065+11]..[697,24065+37])
                                                Pexp_ident "check_identifier_reference" (src/partialGrammar.ml[697,24065+11]..[697,24065+37])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/partialGrammar.ml[698,24103+13]..[698,24103+31])
                                                    Pexp_ident "mark_token_as_used" (src/partialGrammar.ml[698,24103+13]..[698,24103+31])
                                                <arg>
                                                Nolabel
                                                  expression (src/partialGrammar.ml[698,24103+32]..[698,24103+39])
                                                    Pexp_ident "grammar" (src/partialGrammar.ml[698,24103+32]..[698,24103+39])
                                                <arg>
                                                Nolabel
                                                  expression (src/partialGrammar.ml[698,24103+40]..[698,24103+45])
                                                    Pexp_ident "prule" (src/partialGrammar.ml[698,24103+40]..[698,24103+45])
                                              ]
                                        ]
                                        expression (src/partialGrammar.ml[702,24238+9]..[750,26163+37])
                                          Pexp_sequence
                                          expression (src/partialGrammar.ml[702,24238+9]..[708,24485+15])
                                            Pexp_apply
                                            expression (src/partialGrammar.ml[705,24330+11]..[705,24330+13])
                                              Pexp_ident "|>" (src/partialGrammar.ml[705,24330+11]..[705,24330+13])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/partialGrammar.ml[702,24238+9]..[704,24299+30])
                                                  Pexp_apply
                                                  expression (src/partialGrammar.ml[704,24299+11]..[704,24299+13])
                                                    Pexp_ident "|>" (src/partialGrammar.ml[704,24299+11]..[704,24299+13])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/partialGrammar.ml[702,24238+9]..[703,24267+31])
                                                        Pexp_apply
                                                        expression (src/partialGrammar.ml[703,24267+11]..[703,24267+13])
                                                          Pexp_ident "|>" (src/partialGrammar.ml[703,24267+11]..[703,24267+13])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/partialGrammar.ml[702,24238+9]..[702,24238+28])
                                                              Pexp_field
                                                              expression (src/partialGrammar.ml[702,24238+9]..[702,24238+14])
                                                                Pexp_ident "prule" (src/partialGrammar.ml[702,24238+9]..[702,24238+14])
                                                              "pr_parameters" (src/partialGrammar.ml[702,24238+15]..[702,24238+28])
                                                          <arg>
                                                          Nolabel
                                                            expression (src/partialGrammar.ml[703,24267+14]..[703,24267+31])
                                                              Pexp_apply
                                                              expression (src/partialGrammar.ml[703,24267+14]..[703,24267+23])
                                                                Pexp_ident "List.sort" (src/partialGrammar.ml[703,24267+14]..[703,24267+23])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/partialGrammar.ml[703,24267+24]..[703,24267+31])
                                                                    Pexp_ident "compare" (src/partialGrammar.ml[703,24267+24]..[703,24267+31])
                                                              ]
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (src/partialGrammar.ml[704,24299+14]..[704,24299+30])
                                                        Pexp_apply
                                                        expression (src/partialGrammar.ml[704,24299+14]..[704,24299+22])
                                                          Pexp_ident "Misc.dup" (src/partialGrammar.ml[704,24299+14]..[704,24299+22])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/partialGrammar.ml[704,24299+23]..[704,24299+30])
                                                              Pexp_ident "compare" (src/partialGrammar.ml[704,24299+23]..[704,24299+30])
                                                        ]
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (src/partialGrammar.ml[705,24330+14]..[708,24485+15])
                                                  Pexp_apply
                                                  expression (src/partialGrammar.ml[705,24330+14]..[705,24330+25])
                                                    Pexp_ident "Option.iter" (src/partialGrammar.ml[705,24330+14]..[705,24330+25])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/partialGrammar.ml[705,24330+26]..[708,24485+15])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (src/partialGrammar.ml[705,24330+31]..[705,24330+32])
                                                          Ppat_var "x" (src/partialGrammar.ml[705,24330+31]..[705,24330+32])
                                                        expression (src/partialGrammar.ml[706,24366+16]..[707,24413+71])
                                                          Pexp_apply
                                                          expression (src/partialGrammar.ml[706,24366+16]..[706,24366+27])
                                                            Pexp_ident "Error.error" (src/partialGrammar.ml[706,24366+16]..[706,24366+27])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/partialGrammar.ml[706,24366+28]..[706,24366+46])
                                                                Pexp_field
                                                                expression (src/partialGrammar.ml[706,24366+28]..[706,24366+33])
                                                                  Pexp_ident "prule" (src/partialGrammar.ml[706,24366+28]..[706,24366+33])
                                                                "pr_positions" (src/partialGrammar.ml[706,24366+34]..[706,24366+46])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/partialGrammar.ml[707,24413+18]..[707,24413+69])
                                                                Pexp_constant PConst_string("several parameters of this rule are named \"%s\".",(src/partialGrammar.ml[707,24413+19]..[707,24413+68]),None)
                                                            <arg>
                                                            Nolabel
                                                              expression (src/partialGrammar.ml[707,24413+70]..[707,24413+71])
                                                                Pexp_ident "x" (src/partialGrammar.ml[707,24413+70]..[707,24413+71])
                                                          ]
                                                  ]
                                            ]
                                          expression (src/partialGrammar.ml[711,24537+9]..[750,26163+37])
                                            Pexp_sequence
                                            expression (src/partialGrammar.ml[711,24537+9]..[741,25781+26])
                                              Pexp_apply
                                              expression (src/partialGrammar.ml[711,24537+9]..[711,24537+18])
                                                Pexp_ident "List.iter" (src/partialGrammar.ml[711,24537+9]..[711,24537+18])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/partialGrammar.ml[711,24537+19]..[739,25740+39])
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (src/partialGrammar.ml[711,24537+24]..[713,24632+15])
                                                      Ppat_record Closed
                                                      [
                                                        "pr_producers" (src/partialGrammar.ml[711,24537+26]..[711,24537+38])
                                                          pattern (src/partialGrammar.ml[711,24537+41]..[711,24537+50])
                                                            Ppat_var "producers" (src/partialGrammar.ml[711,24537+41]..[711,24537+50])
                                                        "pr_branch_prec_annotation" (src/partialGrammar.ml[712,24589+16]..[712,24589+41]) ghost
                                                          pattern (src/partialGrammar.ml[712,24589+16]..[712,24589+41])
                                                            Ppat_var "pr_branch_prec_annotation" (src/partialGrammar.ml[712,24589+16]..[712,24589+41])
                                                      ]
                                                    expression (src/partialGrammar.ml[713,24632+19]..[739,25740+38])
                                                      Pexp_sequence
                                                      expression (src/partialGrammar.ml[713,24632+19]..[735,25579+40])
                                                        Pexp_apply
                                                        expression (src/partialGrammar.ml[713,24632+19]..[713,24632+25])
                                                          Pexp_ident "ignore" (src/partialGrammar.ml[713,24632+19]..[713,24632+25])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/partialGrammar.ml[713,24632+26]..[735,25579+40])
                                                              Pexp_apply
                                                              expression (src/partialGrammar.ml[713,24632+27]..[713,24632+41])
                                                                Pexp_ident "List.fold_left" (src/partialGrammar.ml[713,24632+27]..[713,24632+41])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/partialGrammar.ml[716,24714+12]..[735,25579+13])
                                                                    Pexp_fun
                                                                    Nolabel
                                                                    None
                                                                    pattern (src/partialGrammar.ml[716,24714+17]..[716,24714+29])
                                                                      Ppat_var "already_seen" (src/partialGrammar.ml[716,24714+17]..[716,24714+29])
                                                                    expression (src/partialGrammar.ml[716,24714+30]..[733,25548+29]) ghost
                                                                      Pexp_fun
                                                                      Nolabel
                                                                      None
                                                                      pattern (src/partialGrammar.ml[716,24714+30]..[716,24714+40])
Ppat_tuple
[
  pattern (src/partialGrammar.ml[716,24714+31]..[716,24714+33])
    Ppat_var "id" (src/partialGrammar.ml[716,24714+31]..[716,24714+33])
  pattern (src/partialGrammar.ml[716,24714+35]..[716,24714+36])
    Ppat_var "p" (src/partialGrammar.ml[716,24714+35]..[716,24714+36])
  pattern (src/partialGrammar.ml[716,24714+38]..[716,24714+39])
    Ppat_any
]
                                                                      expression (src/partialGrammar.ml[717,24758+15]..[733,25548+29])
Pexp_let Nonrec
[
  <def>
    pattern (src/partialGrammar.ml[717,24758+19]..[717,24758+37])
      Ppat_tuple
      [
        pattern (src/partialGrammar.ml[717,24758+19]..[717,24758+25])
          Ppat_var "symbol" (src/partialGrammar.ml[717,24758+19]..[717,24758+25])
        pattern (src/partialGrammar.ml[717,24758+27]..[717,24758+37])
          Ppat_var "parameters" (src/partialGrammar.ml[717,24758+27]..[717,24758+37])
      ]
    expression (src/partialGrammar.ml[717,24758+40]..[717,24758+58])
      Pexp_apply
      expression (src/partialGrammar.ml[717,24758+40]..[717,24758+56])
        Pexp_ident "Parameters.unapp" (src/partialGrammar.ml[717,24758+40]..[717,24758+56])
      [
        <arg>
        Nolabel
          expression (src/partialGrammar.ml[717,24758+57]..[717,24758+58])
            Pexp_ident "p" (src/partialGrammar.ml[717,24758+57]..[717,24758+58])
      ]
]
expression (src/partialGrammar.ml[718,24820+15]..[733,25548+29])
  Pexp_let Nonrec
  [
    <def>
      pattern (src/partialGrammar.ml[718,24820+19]..[718,24820+20])
        Ppat_var "s" (src/partialGrammar.ml[718,24820+19]..[718,24820+20])
      expression (src/partialGrammar.ml[718,24820+23]..[718,24820+35])
        Pexp_field
        expression (src/partialGrammar.ml[718,24820+23]..[718,24820+29])
          Pexp_ident "symbol" (src/partialGrammar.ml[718,24820+23]..[718,24820+29])
        "value" (src/partialGrammar.ml[718,24820+30]..[718,24820+35])
    <def>
      pattern (src/partialGrammar.ml[718,24820+40]..[718,24820+41])
        Ppat_var "p" (src/partialGrammar.ml[718,24820+40]..[718,24820+41])
      expression (src/partialGrammar.ml[718,24820+44]..[718,24820+59])
        Pexp_field
        expression (src/partialGrammar.ml[718,24820+44]..[718,24820+50])
          Pexp_ident "symbol" (src/partialGrammar.ml[718,24820+44]..[718,24820+50])
        "position" (src/partialGrammar.ml[718,24820+51]..[718,24820+59])
  ]
  expression (src/partialGrammar.ml[719,24883+15]..[733,25548+29])
    Pexp_let Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[719,24883+19]..[719,24883+31])
          Ppat_var "already_seen" (src/partialGrammar.ml[719,24883+19]..[719,24883+31])
        expression (src/partialGrammar.ml[721,24973+17]..[725,25197+52])
          Pexp_sequence
          expression (src/partialGrammar.ml[721,24973+17]..[724,25163+32])
            Pexp_ifthenelse
            expression (src/partialGrammar.ml[721,24973+20]..[721,24973+55])
              Pexp_apply
              expression (src/partialGrammar.ml[721,24973+20]..[721,24973+33])
                Pexp_ident "StringSet.mem" (src/partialGrammar.ml[721,24973+20]..[721,24973+33])
              [
                <arg>
                Nolabel
                  expression (src/partialGrammar.ml[721,24973+34]..[721,24973+42])
                    Pexp_field
                    expression (src/partialGrammar.ml[721,24973+34]..[721,24973+36])
                      Pexp_ident "id" (src/partialGrammar.ml[721,24973+34]..[721,24973+36])
                    "value" (src/partialGrammar.ml[721,24973+37]..[721,24973+42])
                <arg>
                Nolabel
                  expression (src/partialGrammar.ml[721,24973+43]..[721,24973+55])
                    Pexp_ident "already_seen" (src/partialGrammar.ml[721,24973+43]..[721,24973+55])
              ]
            expression (src/partialGrammar.ml[722,25034+19]..[724,25163+32])
              Pexp_apply
              expression (src/partialGrammar.ml[722,25034+19]..[722,25034+30])
                Pexp_ident "Error.error" (src/partialGrammar.ml[722,25034+19]..[722,25034+30])
              [
                <arg>
                Nolabel
                  expression (src/partialGrammar.ml[722,25034+31]..[722,25034+46])
                    Pexp_construct "::" (src/partialGrammar.ml[722,25034+33]..[722,25034+46]) ghost
                    Some
                      expression (src/partialGrammar.ml[722,25034+33]..[722,25034+46]) ghost
                        Pexp_tuple
                        [
                          expression (src/partialGrammar.ml[722,25034+33]..[722,25034+44])
                            Pexp_field
                            expression (src/partialGrammar.ml[722,25034+33]..[722,25034+35])
                              Pexp_ident "id" (src/partialGrammar.ml[722,25034+33]..[722,25034+35])
                            "position" (src/partialGrammar.ml[722,25034+36]..[722,25034+44])
                          expression (src/partialGrammar.ml[722,25034+45]..[722,25034+46]) ghost
                            Pexp_construct "[]" (src/partialGrammar.ml[722,25034+45]..[722,25034+46]) ghost
                            None
                        ]
                <arg>
                Nolabel
                  expression (src/partialGrammar.ml[723,25081+24]..[723,25081+81])
                    Pexp_constant PConst_string("there are multiple producers named %s in this sequence.",(src/partialGrammar.ml[723,25081+25]..[723,25081+80]),None)
                <arg>
                Nolabel
                  expression (src/partialGrammar.ml[724,25163+24]..[724,25163+32])
                    Pexp_field
                    expression (src/partialGrammar.ml[724,25163+24]..[724,25163+26])
                      Pexp_ident "id" (src/partialGrammar.ml[724,25163+24]..[724,25163+26])
                    "value" (src/partialGrammar.ml[724,25163+27]..[724,25163+32])
              ]
            None
          expression (src/partialGrammar.ml[725,25197+17]..[725,25197+52])
            Pexp_apply
            expression (src/partialGrammar.ml[725,25197+17]..[725,25197+30])
              Pexp_ident "StringSet.add" (src/partialGrammar.ml[725,25197+17]..[725,25197+30])
            [
              <arg>
              Nolabel
                expression (src/partialGrammar.ml[725,25197+31]..[725,25197+39])
                  Pexp_field
                  expression (src/partialGrammar.ml[725,25197+31]..[725,25197+33])
                    Pexp_ident "id" (src/partialGrammar.ml[725,25197+31]..[725,25197+33])
                  "value" (src/partialGrammar.ml[725,25197+34]..[725,25197+39])
              <arg>
              Nolabel
                expression (src/partialGrammar.ml[725,25197+40]..[725,25197+52])
                  Pexp_ident "already_seen" (src/partialGrammar.ml[725,25197+40]..[725,25197+52])
            ]
    ]
    expression (src/partialGrammar.ml[729,25338+17]..[733,25548+29])
      Pexp_sequence
      expression (src/partialGrammar.ml[729,25338+17]..[729,25338+53])
        Pexp_apply
        expression (src/partialGrammar.ml[729,25338+17]..[729,25338+43])
          Pexp_ident "check_identifier_reference" (src/partialGrammar.ml[729,25338+17]..[729,25338+43])
        [
          <arg>
          Nolabel
            expression (src/partialGrammar.ml[729,25338+44]..[729,25338+49])
              Pexp_construct "false" (src/partialGrammar.ml[729,25338+44]..[729,25338+49])
              None
          <arg>
          Nolabel
            expression (src/partialGrammar.ml[729,25338+50]..[729,25338+51])
              Pexp_ident "s" (src/partialGrammar.ml[729,25338+50]..[729,25338+51])
          <arg>
          Nolabel
            expression (src/partialGrammar.ml[729,25338+52]..[729,25338+53])
              Pexp_ident "p" (src/partialGrammar.ml[729,25338+52]..[729,25338+53])
        ]
      expression (src/partialGrammar.ml[730,25393+17]..[733,25548+29])
        Pexp_sequence
        expression (src/partialGrammar.ml[730,25393+17]..[731,25460+85])
          Pexp_apply
          expression (src/partialGrammar.ml[730,25393+17]..[730,25393+31])
            Pexp_ident "StringMap.iter" (src/partialGrammar.ml[730,25393+17]..[730,25393+31])
          [
            <arg>
            Nolabel
              expression (src/partialGrammar.ml[730,25393+32]..[730,25393+66])
                Pexp_apply
                expression (src/partialGrammar.ml[730,25393+33]..[730,25393+59])
                  Pexp_ident "check_identifier_reference" (src/partialGrammar.ml[730,25393+33]..[730,25393+59])
                [
                  <arg>
                  Nolabel
                    expression (src/partialGrammar.ml[730,25393+60]..[730,25393+65])
                      Pexp_construct "false" (src/partialGrammar.ml[730,25393+60]..[730,25393+65])
                      None
                ]
            <arg>
            Nolabel
              expression (src/partialGrammar.ml[731,25460+19]..[731,25460+85])
                Pexp_apply
                expression (src/partialGrammar.ml[731,25460+20]..[731,25460+34])
                  Pexp_ident "List.fold_left" (src/partialGrammar.ml[731,25460+20]..[731,25460+34])
                [
                  <arg>
                  Nolabel
                    expression (src/partialGrammar.ml[731,25460+35]..[731,25460+57])
                      Pexp_ident "Parameters.identifiers" (src/partialGrammar.ml[731,25460+35]..[731,25460+57])
                  <arg>
                  Nolabel
                    expression (src/partialGrammar.ml[731,25460+58]..[731,25460+73])
                      Pexp_ident "StringMap.empty" (src/partialGrammar.ml[731,25460+58]..[731,25460+73])
                  <arg>
                  Nolabel
                    expression (src/partialGrammar.ml[731,25460+74]..[731,25460+84])
                      Pexp_ident "parameters" (src/partialGrammar.ml[731,25460+74]..[731,25460+84])
                ]
          ]
        expression (src/partialGrammar.ml[733,25548+17]..[733,25548+29])
          Pexp_ident "already_seen" (src/partialGrammar.ml[733,25548+17]..[733,25548+29])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/partialGrammar.ml[735,25579+14]..[735,25579+29])
                                                                    Pexp_ident "StringSet.empty" (src/partialGrammar.ml[735,25579+14]..[735,25579+29])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/partialGrammar.ml[735,25579+30]..[735,25579+39])
                                                                    Pexp_ident "producers" (src/partialGrammar.ml[735,25579+30]..[735,25579+39])
                                                              ]
                                                        ]
                                                      expression (src/partialGrammar.ml[737,25622+11]..[739,25740+38])
                                                        Pexp_apply
                                                        expression (src/partialGrammar.ml[737,25622+11]..[737,25622+22])
                                                          Pexp_ident "Option.iter" (src/partialGrammar.ml[737,25622+11]..[737,25622+22])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/partialGrammar.ml[737,25622+23]..[739,25740+12])
                                                              Pexp_fun
                                                              Nolabel
                                                              None
                                                              pattern (src/partialGrammar.ml[737,25622+28]..[737,25622+36])
                                                                Ppat_var "terminal" (src/partialGrammar.ml[737,25622+28]..[737,25622+36])
                                                              expression (src/partialGrammar.ml[738,25662+13]..[738,25662+77])
                                                                Pexp_apply
                                                                expression (src/partialGrammar.ml[738,25662+13]..[738,25662+39])
                                                                  Pexp_ident "check_identifier_reference" (src/partialGrammar.ml[738,25662+13]..[738,25662+39])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/partialGrammar.ml[738,25662+40]..[738,25662+44])
                                                                      Pexp_construct "true" (src/partialGrammar.ml[738,25662+40]..[738,25662+44])
                                                                      None
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/partialGrammar.ml[738,25662+45]..[738,25662+59])
                                                                      Pexp_field
                                                                      expression (src/partialGrammar.ml[738,25662+45]..[738,25662+53])
Pexp_ident "terminal" (src/partialGrammar.ml[738,25662+45]..[738,25662+53])
                                                                      "value" (src/partialGrammar.ml[738,25662+54]..[738,25662+59])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/partialGrammar.ml[738,25662+60]..[738,25662+77])
                                                                      Pexp_field
                                                                      expression (src/partialGrammar.ml[738,25662+60]..[738,25662+68])
Pexp_ident "terminal" (src/partialGrammar.ml[738,25662+60]..[738,25662+68])
                                                                      "position" (src/partialGrammar.ml[738,25662+69]..[738,25662+77])
                                                                ]
                                                          <arg>
                                                          Nolabel
                                                            expression (src/partialGrammar.ml[739,25740+13]..[739,25740+38])
                                                              Pexp_ident "pr_branch_prec_annotation" (src/partialGrammar.ml[739,25740+13]..[739,25740+38])
                                                        ]
                                                <arg>
                                                Nolabel
                                                  expression (src/partialGrammar.ml[741,25781+9]..[741,25781+26])
                                                    Pexp_field
                                                    expression (src/partialGrammar.ml[741,25781+9]..[741,25781+14])
                                                      Pexp_ident "prule" (src/partialGrammar.ml[741,25781+9]..[741,25781+14])
                                                    "pr_branches" (src/partialGrammar.ml[741,25781+15]..[741,25781+26])
                                              ]
                                            expression (src/partialGrammar.ml[744,25876+9]..[750,26163+37])
                                              Pexp_sequence
                                              expression (src/partialGrammar.ml[744,25876+9]..[747,26014+65])
                                                Pexp_ifthenelse
                                                expression (src/partialGrammar.ml[744,25876+12]..[745,25910+56])
                                                  Pexp_apply
                                                  expression (src/partialGrammar.ml[745,25910+13]..[745,25910+15])
                                                    Pexp_ident "&&" (src/partialGrammar.ml[745,25910+13]..[745,25910+15])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/partialGrammar.ml[744,25876+13]..[744,25876+33])
                                                        Pexp_field
                                                        expression (src/partialGrammar.ml[744,25876+13]..[744,25876+18])
                                                          Pexp_ident "prule" (src/partialGrammar.ml[744,25876+13]..[744,25876+18])
                                                        "pr_inline_flag" (src/partialGrammar.ml[744,25876+19]..[744,25876+33])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/partialGrammar.ml[745,25910+16]..[745,25910+55])
                                                        Pexp_apply
                                                        expression (src/partialGrammar.ml[745,25910+16]..[745,25910+29])
                                                          Pexp_ident "StringMap.mem" (src/partialGrammar.ml[745,25910+16]..[745,25910+29])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/partialGrammar.ml[745,25910+30]..[745,25910+31])
                                                              Pexp_ident "k" (src/partialGrammar.ml[745,25910+30]..[745,25910+31])
                                                          <arg>
                                                          Nolabel
                                                            expression (src/partialGrammar.ml[745,25910+32]..[745,25910+55])
                                                              Pexp_field
                                                              expression (src/partialGrammar.ml[745,25910+32]..[745,25910+39])
                                                                Pexp_ident "grammar" (src/partialGrammar.ml[745,25910+32]..[745,25910+39])
                                                              "p_start_symbols" (src/partialGrammar.ml[745,25910+40]..[745,25910+55])
                                                        ]
                                                  ]
                                                expression (src/partialGrammar.ml[746,25972+11]..[747,26014+65])
                                                  Pexp_apply
                                                  expression (src/partialGrammar.ml[746,25972+11]..[746,25972+22])
                                                    Pexp_ident "Error.error" (src/partialGrammar.ml[746,25972+11]..[746,25972+22])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/partialGrammar.ml[746,25972+23]..[746,25972+41])
                                                        Pexp_field
                                                        expression (src/partialGrammar.ml[746,25972+23]..[746,25972+28])
                                                          Pexp_ident "prule" (src/partialGrammar.ml[746,25972+23]..[746,25972+28])
                                                        "pr_positions" (src/partialGrammar.ml[746,25972+29]..[746,25972+41])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/partialGrammar.ml[747,26014+16]..[747,26014+63])
                                                        Pexp_constant PConst_string("%s cannot be both a start symbol and inlined.",(src/partialGrammar.ml[747,26014+17]..[747,26014+62]),None)
                                                    <arg>
                                                    Nolabel
                                                      expression (src/partialGrammar.ml[747,26014+64]..[747,26014+65])
                                                        Pexp_ident "k" (src/partialGrammar.ml[747,26014+64]..[747,26014+65])
                                                  ]
                                                None
                                              expression (src/partialGrammar.ml[750,26163+9]..[750,26163+37])
                                                Pexp_apply
                                                expression (src/partialGrammar.ml[750,26163+9]..[750,26163+31])
                                                  Pexp_ident "check_inline_attribute" (src/partialGrammar.ml[750,26163+9]..[750,26163+31])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/partialGrammar.ml[750,26163+32]..[750,26163+37])
                                                      Pexp_ident "prule" (src/partialGrammar.ml[750,26163+32]..[750,26163+37])
                                                ]
                                <arg>
                                Nolabel
                                  expression (src/partialGrammar.ml[752,26202+8]..[752,26202+23])
                                    Pexp_field
                                    expression (src/partialGrammar.ml[752,26202+8]..[752,26202+15])
                                      Pexp_ident "grammar" (src/partialGrammar.ml[752,26202+8]..[752,26202+15])
                                    "p_rules" (src/partialGrammar.ml[752,26202+16]..[752,26202+23])
                              ]
                            expression (src/partialGrammar.ml[755,26268+2]..[767,26752+5])
                              Pexp_ifthenelse
                              expression (src/partialGrammar.ml[755,26268+5]..[755,26268+42])
                                Pexp_apply
                                expression (src/partialGrammar.ml[755,26268+5]..[755,26268+8])
                                  Pexp_ident "not" (src/partialGrammar.ml[755,26268+5]..[755,26268+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/partialGrammar.ml[755,26268+9]..[755,26268+42])
                                      Pexp_ident "Settings.ignore_all_unused_tokens" (src/partialGrammar.ml[755,26268+9]..[755,26268+42])
                                ]
                              expression (src/partialGrammar.ml[755,26268+48]..[767,26752+5])
                                Pexp_match
                                expression (src/partialGrammar.ml[756,26322+10]..[756,26322+34])
                                  Pexp_ident "Settings.token_type_mode" (src/partialGrammar.ml[756,26322+10]..[756,26322+34])
                                [
                                  <case>
                                    pattern (src/partialGrammar.ml[757,26362+6]..[757,26362+28])
                                      Ppat_construct "Settings.TokenTypeOnly" (src/partialGrammar.ml[757,26362+6]..[757,26362+28])
                                      None
                                    expression (src/partialGrammar.ml[758,26394+8]..[758,26394+10])
                                      Pexp_construct "()" (src/partialGrammar.ml[758,26394+8]..[758,26394+10])
                                      None
                                  <case>
                                    pattern (src/partialGrammar.ml[759,26405+6]..[760,26437+25])
                                      Ppat_or
                                      pattern (src/partialGrammar.ml[759,26405+6]..[759,26405+31])
                                        Ppat_construct "Settings.TokenTypeAndCode" (src/partialGrammar.ml[759,26405+6]..[759,26405+31])
                                        None
                                      pattern (src/partialGrammar.ml[760,26437+6]..[760,26437+25])
                                        Ppat_construct "Settings.CodeOnly" (src/partialGrammar.ml[760,26437+6]..[760,26437+23])
                                        Some
                                          []
                                          pattern (src/partialGrammar.ml[760,26437+24]..[760,26437+25])
                                            Ppat_any
                                    expression (src/partialGrammar.ml[761,26466+8]..[766,26725+26])
                                      Pexp_apply
                                      expression (src/partialGrammar.ml[761,26466+8]..[761,26466+22])
                                        Pexp_ident "StringMap.iter" (src/partialGrammar.ml[761,26466+8]..[761,26466+22])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/partialGrammar.ml[761,26466+23]..[766,26725+9])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (src/partialGrammar.ml[761,26466+28]..[761,26466+33])
                                              Ppat_var "token" (src/partialGrammar.ml[761,26466+28]..[761,26466+33])
                                            expression (src/partialGrammar.ml[761,26466+34]..[765,26679+45]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (src/partialGrammar.ml[761,26466+34]..[761,26466+53])
                                                Ppat_record Closed
                                                [
                                                  "tk_position" (src/partialGrammar.ml[761,26466+36]..[761,26466+47])
                                                    pattern (src/partialGrammar.ml[761,26466+50]..[761,26466+51])
                                                      Ppat_var "p" (src/partialGrammar.ml[761,26466+50]..[761,26466+51])
                                                ]
                                              expression (src/partialGrammar.ml[762,26523+10]..[765,26679+45])
                                                Pexp_ifthenelse
                                                expression (src/partialGrammar.ml[762,26523+13]..[763,26574+69])
                                                  Pexp_apply
                                                  expression (src/partialGrammar.ml[762,26523+13]..[762,26523+16])
                                                    Pexp_ident "not" (src/partialGrammar.ml[762,26523+13]..[762,26523+16])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/partialGrammar.ml[762,26523+17]..[763,26574+69])
                                                        Pexp_apply
                                                        expression (src/partialGrammar.ml[763,26574+15]..[763,26574+17])
                                                          Pexp_ident "||" (src/partialGrammar.ml[763,26574+15]..[763,26574+17])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/partialGrammar.ml[762,26523+18]..[762,26523+50])
                                                              Pexp_apply
                                                              expression (src/partialGrammar.ml[762,26523+18]..[762,26523+31])
                                                                Pexp_ident "StringSet.mem" (src/partialGrammar.ml[762,26523+18]..[762,26523+31])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/partialGrammar.ml[762,26523+32]..[762,26523+37])
                                                                    Pexp_ident "token" (src/partialGrammar.ml[762,26523+32]..[762,26523+37])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/partialGrammar.ml[762,26523+38]..[762,26523+50])
                                                                    Pexp_apply
                                                                    expression (src/partialGrammar.ml[762,26523+38]..[762,26523+39])
                                                                      Pexp_ident "!" (src/partialGrammar.ml[762,26523+38]..[762,26523+39])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/partialGrammar.ml[762,26523+39]..[762,26523+50])
  Pexp_ident "used_tokens" (src/partialGrammar.ml[762,26523+39]..[762,26523+50])
                                                                    ]
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (src/partialGrammar.ml[763,26574+18]..[763,26574+68])
                                                              Pexp_apply
                                                              expression (src/partialGrammar.ml[763,26574+18]..[763,26574+31])
                                                                Pexp_ident "StringSet.mem" (src/partialGrammar.ml[763,26574+18]..[763,26574+31])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/partialGrammar.ml[763,26574+32]..[763,26574+37])
                                                                    Pexp_ident "token" (src/partialGrammar.ml[763,26574+32]..[763,26574+37])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/partialGrammar.ml[763,26574+38]..[763,26574+68])
                                                                    Pexp_ident "Settings.ignored_unused_tokens" (src/partialGrammar.ml[763,26574+38]..[763,26574+68])
                                                              ]
                                                        ]
                                                  ]
                                                expression (src/partialGrammar.ml[764,26649+12]..[765,26679+45])
                                                  Pexp_apply
                                                  expression (src/partialGrammar.ml[764,26649+12]..[764,26649+25])
                                                    Pexp_ident "Error.warning" (src/partialGrammar.ml[764,26649+12]..[764,26649+25])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/partialGrammar.ml[764,26649+26]..[764,26649+29])
                                                        Pexp_construct "::" (src/partialGrammar.ml[764,26649+27]..[764,26649+29]) ghost
                                                        Some
                                                          expression (src/partialGrammar.ml[764,26649+27]..[764,26649+29]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (src/partialGrammar.ml[764,26649+27]..[764,26649+28])
                                                                Pexp_ident "p" (src/partialGrammar.ml[764,26649+27]..[764,26649+28])
                                                              expression (src/partialGrammar.ml[764,26649+28]..[764,26649+29]) ghost
                                                                Pexp_construct "[]" (src/partialGrammar.ml[764,26649+28]..[764,26649+29]) ghost
                                                                None
                                                            ]
                                                    <arg>
                                                    Nolabel
                                                      expression (src/partialGrammar.ml[765,26679+14]..[765,26679+39])
                                                        Pexp_constant PConst_string("the token %s is unused.",(src/partialGrammar.ml[765,26679+15]..[765,26679+38]),None)
                                                    <arg>
                                                    Nolabel
                                                      expression (src/partialGrammar.ml[765,26679+40]..[765,26679+45])
                                                        Pexp_ident "token" (src/partialGrammar.ml[765,26679+40]..[765,26679+45])
                                                  ]
                                                None
                                        <arg>
                                        Nolabel
                                          expression (src/partialGrammar.ml[766,26725+10]..[766,26725+26])
                                            Pexp_field
                                            expression (src/partialGrammar.ml[766,26725+10]..[766,26725+17])
                                              Pexp_ident "grammar" (src/partialGrammar.ml[766,26725+10]..[766,26725+17])
                                            "p_tokens" (src/partialGrammar.ml[766,26725+18]..[766,26725+26])
                                      ]
                                ]
                              None
    ]
  structure_item (src/partialGrammar.ml[769,26759+0]..[780,27293+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[769,26759+4]..[769,26759+25])
          Ppat_var "join_partial_grammars" (src/partialGrammar.ml[769,26759+4]..[769,26759+25])
        expression (src/partialGrammar.ml[769,26759+26]..[780,27293+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/partialGrammar.ml[769,26759+26]..[769,26759+29])
            Ppat_var "pgs" (src/partialGrammar.ml[769,26759+26]..[769,26759+29])
          expression (src/partialGrammar.ml[771,26872+2]..[780,27293+9])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/partialGrammar.ml[771,26872+6]..[771,26872+9])
                  Ppat_var "pgs" (src/partialGrammar.ml[771,26872+6]..[771,26872+9])
                expression (src/partialGrammar.ml[771,26872+12]..[771,26872+51])
                  Pexp_apply
                  expression (src/partialGrammar.ml[771,26872+12]..[771,26872+47])
                    Pexp_ident "ExpandTokenAliases.dealias_grammars" (src/partialGrammar.ml[771,26872+12]..[771,26872+47])
                  [
                    <arg>
                    Nolabel
                      expression (src/partialGrammar.ml[771,26872+48]..[771,26872+51])
                        Pexp_ident "pgs" (src/partialGrammar.ml[771,26872+48]..[771,26872+51])
                  ]
            ]
            expression (src/partialGrammar.ml[773,26962+2]..[780,27293+9])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/partialGrammar.ml[773,26962+6]..[773,26962+13])
                    Ppat_var "grammar" (src/partialGrammar.ml[773,26962+6]..[773,26962+13])
                  expression (src/partialGrammar.ml[773,26962+16]..[773,26962+53])
                    Pexp_apply
                    expression (src/partialGrammar.ml[773,26962+16]..[773,26962+30])
                      Pexp_ident "List.fold_left" (src/partialGrammar.ml[773,26962+16]..[773,26962+30])
                    [
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[773,26962+31]..[773,26962+35])
                          Pexp_ident "join" (src/partialGrammar.ml[773,26962+31]..[773,26962+35])
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[773,26962+36]..[773,26962+49])
                          Pexp_ident "empty_grammar" (src/partialGrammar.ml[773,26962+36]..[773,26962+49])
                      <arg>
                      Nolabel
                        expression (src/partialGrammar.ml[773,26962+50]..[773,26962+53])
                          Pexp_ident "pgs" (src/partialGrammar.ml[773,26962+50]..[773,26962+53])
                    ]
              ]
              expression (src/partialGrammar.ml[774,27019+2]..[780,27293+9])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/partialGrammar.ml[774,27019+6]..[774,27019+13])
                      Ppat_var "symbols" (src/partialGrammar.ml[774,27019+6]..[774,27019+13])
                    expression (src/partialGrammar.ml[774,27019+16]..[774,27019+49])
                      Pexp_apply
                      expression (src/partialGrammar.ml[774,27019+16]..[774,27019+24])
                        Pexp_ident "List.map" (src/partialGrammar.ml[774,27019+16]..[774,27019+24])
                      [
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[774,27019+25]..[774,27019+45])
                            Pexp_apply
                            expression (src/partialGrammar.ml[774,27019+26]..[774,27019+36])
                              Pexp_ident "symbols_of" (src/partialGrammar.ml[774,27019+26]..[774,27019+36])
                            [
                              <arg>
                              Nolabel
                                expression (src/partialGrammar.ml[774,27019+37]..[774,27019+44])
                                  Pexp_ident "grammar" (src/partialGrammar.ml[774,27019+37]..[774,27019+44])
                            ]
                        <arg>
                        Nolabel
                          expression (src/partialGrammar.ml[774,27019+46]..[774,27019+49])
                            Pexp_ident "pgs" (src/partialGrammar.ml[774,27019+46]..[774,27019+49])
                      ]
                ]
                expression (src/partialGrammar.ml[775,27072+2]..[780,27293+9])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/partialGrammar.ml[775,27072+6]..[775,27072+10])
                        Ppat_var "tpgs" (src/partialGrammar.ml[775,27072+6]..[775,27072+10])
                      expression (src/partialGrammar.ml[775,27072+13]..[775,27072+37])
                        Pexp_apply
                        expression (src/partialGrammar.ml[775,27072+13]..[775,27072+25])
                          Pexp_ident "List.combine" (src/partialGrammar.ml[775,27072+13]..[775,27072+25])
                        [
                          <arg>
                          Nolabel
                            expression (src/partialGrammar.ml[775,27072+26]..[775,27072+33])
                              Pexp_ident "symbols" (src/partialGrammar.ml[775,27072+26]..[775,27072+33])
                          <arg>
                          Nolabel
                            expression (src/partialGrammar.ml[775,27072+34]..[775,27072+37])
                              Pexp_ident "pgs" (src/partialGrammar.ml[775,27072+34]..[775,27072+37])
                        ]
                  ]
                  expression (src/partialGrammar.ml[776,27113+2]..[780,27293+9])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/partialGrammar.ml[776,27113+6]..[776,27113+11])
                          Ppat_var "rules" (src/partialGrammar.ml[776,27113+6]..[776,27113+11])
                        expression (src/partialGrammar.ml[776,27113+14]..[776,27113+38])
                          Pexp_apply
                          expression (src/partialGrammar.ml[776,27113+14]..[776,27113+25])
                            Pexp_ident "merge_rules" (src/partialGrammar.ml[776,27113+14]..[776,27113+25])
                          [
                            <arg>
                            Nolabel
                              expression (src/partialGrammar.ml[776,27113+26]..[776,27113+33])
                                Pexp_ident "symbols" (src/partialGrammar.ml[776,27113+26]..[776,27113+33])
                            <arg>
                            Nolabel
                              expression (src/partialGrammar.ml[776,27113+34]..[776,27113+38])
                                Pexp_ident "tpgs" (src/partialGrammar.ml[776,27113+34]..[776,27113+38])
                          ]
                    ]
                    expression (src/partialGrammar.ml[777,27155+2]..[780,27293+9])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/partialGrammar.ml[777,27155+6]..[777,27155+13])
                            Ppat_var "grammar" (src/partialGrammar.ml[777,27155+6]..[777,27155+13])
                          expression (src/partialGrammar.ml[777,27155+16]..[777,27155+48])
                            Pexp_record
                            [
                              "p_rules" (src/partialGrammar.ml[777,27155+31]..[777,27155+38])
                                expression (src/partialGrammar.ml[777,27155+41]..[777,27155+46])
                                  Pexp_ident "rules" (src/partialGrammar.ml[777,27155+41]..[777,27155+46])
                            ]
                            Some
                              expression (src/partialGrammar.ml[777,27155+18]..[777,27155+25])
                                Pexp_ident "grammar" (src/partialGrammar.ml[777,27155+18]..[777,27155+25])
                      ]
                      expression (src/partialGrammar.ml[779,27238+2]..[780,27293+9])
                        Pexp_sequence
                        expression (src/partialGrammar.ml[779,27238+2]..[779,27238+53])
                          Pexp_apply
                          expression (src/partialGrammar.ml[779,27238+2]..[779,27238+45])
                            Pexp_ident "check_parameterized_grammar_is_well_defined" (src/partialGrammar.ml[779,27238+2]..[779,27238+45])
                          [
                            <arg>
                            Nolabel
                              expression (src/partialGrammar.ml[779,27238+46]..[779,27238+53])
                                Pexp_ident "grammar" (src/partialGrammar.ml[779,27238+46]..[779,27238+53])
                          ]
                        expression (src/partialGrammar.ml[780,27293+2]..[780,27293+9])
                          Pexp_ident "grammar" (src/partialGrammar.ml[780,27293+2]..[780,27293+9])
    ]
]

open Syntax
open Positions
let join_declaration filename (grammar : grammar) decl =
  match decl.value with
  | DCode code -> { grammar with p_preludes = (grammar.p_preludes @ [code]) }
  | DParameter (Stretch.Declared stretch) ->
      { grammar with p_parameters = (grammar.p_parameters @ [stretch]) }
  | DParameter (Stretch.Inferred _) -> assert false
  | DToken (ocamltype, terminal, alias, attributes) ->
      let token_property =
        try
          let token_property = StringMap.find terminal grammar.p_tokens in
          if token_property.tk_is_declared
          then
            Error.errorp decl "the token %s has multiple definitions."
              terminal;
          {
            token_property with
            tk_is_declared = true;
            tk_ocamltype = ocamltype;
            tk_filename = filename;
            tk_position = (decl.position);
            tk_attributes = attributes;
            tk_alias = alias
          }
        with
        | Not_found ->
            {
              tk_filename = filename;
              tk_ocamltype = ocamltype;
              tk_associativity = UndefinedAssoc;
              tk_precedence = UndefinedPrecedence;
              tk_position = (decl.position);
              tk_attributes = attributes;
              tk_is_declared = true;
              tk_alias = alias
            } in
      {
        grammar with
        p_tokens = (StringMap.add terminal token_property grammar.p_tokens)
      }
  | DStart nonterminal ->
      {
        grammar with
        p_start_symbols =
          (StringMap.add nonterminal decl.position grammar.p_start_symbols)
      }
  | DType (ocamltype, nonterminal) ->
      {
        grammar with
        p_types = ((nonterminal, (with_pos (position decl) ocamltype)) ::
          (grammar.p_types))
      }
  | DOnErrorReduce (nonterminal, prec) ->
      {
        grammar with
        p_on_error_reduce = ((nonterminal, prec) ::
          (grammar.p_on_error_reduce))
      }
  | DTokenProperties (terminal, assoc, prec) ->
      let (token_properties, grammar) =
        try ((StringMap.find terminal grammar.p_tokens), grammar)
        with
        | Not_found ->
            let p =
              {
                tk_filename = filename;
                tk_ocamltype = None;
                tk_associativity = UndefinedAssoc;
                tk_precedence = prec;
                tk_is_declared = false;
                tk_attributes = [];
                tk_alias = None;
                tk_position = (decl.position)
              } in
            (p,
              {
                grammar with
                p_tokens = (StringMap.add terminal p grammar.p_tokens)
              }) in
      (if token_properties.tk_associativity <> UndefinedAssoc
       then
         Error.error [decl.position; token_properties.tk_position]
           "there are multiple precedence declarations for token %s."
           terminal;
       token_properties.tk_precedence <- prec;
       token_properties.tk_associativity <- assoc;
       grammar)
  | DGrammarAttribute attr ->
      {
        grammar with
        p_grammar_attributes = (attr :: (grammar.p_grammar_attributes))
      }
  | DSymbolAttributes (actuals, attrs) ->
      {
        grammar with
        p_symbol_attributes = ((actuals, attrs) ::
          (grammar.p_symbol_attributes))
      }
let join_postlude postlude grammar =
  match postlude with
  | None -> grammar
  | Some postlude ->
      { grammar with p_postludes = (postlude :: (grammar.p_postludes)) }
type renaming = (nonterminal * nonterminal) list
let identity_renaming = []
let rewrite_nonterminal (phi : renaming) nonterminal =
  Misc.support_assoc phi nonterminal
let rewrite_parameter phi parameter =
  Parameters.map (Positions.map (Misc.support_assoc phi)) parameter
let rewrite_producer phi ((ido, parameter, attrs) : producer) =
  (ido, (rewrite_parameter phi parameter), attrs)
let rewrite_branch phi ({ pr_producers = producers } as branch) =
  { branch with pr_producers = (List.map (rewrite_producer phi) producers) }
let rewrite_branches phi branches =
  match phi with
  | [] -> branches
  | _ -> List.map (rewrite_branch phi) branches
let fresh_counter = ref 0
let names = ref StringSet.empty
let use_name name = names := (StringSet.add name (!names))
let used_name name = StringSet.mem name (!names)
let rec fresh ?(hint= "v")  () =
  let name = incr fresh_counter; hint ^ (string_of_int (!fresh_counter)) in
  if used_name name then fresh ~hint () else (use_name name; name)
let alphaconvert_rule parameters prule =
  let phi =
    List.combine parameters (List.map (fun x -> fresh ~hint:x ()) parameters) in
  {
    prule with
    pr_parameters = (List.map (Misc.support_assoc phi) prule.pr_parameters);
    pr_branches = (rewrite_branches phi prule.pr_branches)
  }
let rewrite_rule phi prule =
  let ids =
    List.fold_left
      (fun acu -> fun (f, d) -> StringSet.add f (StringSet.add d acu))
      StringSet.empty phi in
  let captured_parameters =
    List.filter (fun p -> StringSet.mem p ids) prule.pr_parameters in
  let prule = alphaconvert_rule captured_parameters prule in
  {
    prule with
    pr_nt = (rewrite_nonterminal phi prule.pr_nt);
    pr_branches = (rewrite_branches phi prule.pr_branches)
  }
let rewrite_rules phi rules = List.map (rewrite_rule phi) rules
let rewrite_grammar phi grammar =
  if phi = identity_renaming
  then grammar
  else { grammar with pg_rules = (rewrite_rules phi grammar.pg_rules) }
let is_valid_nonterminal_character =
  function
  | 'A'..'Z' | 'a'..'z' | '_' | '\192'..'\214' | '\216'..'\246'
    | '\248'..'\255' | '0'..'9' -> true
  | _ -> false
let restrict filename =
  let m =
    Bytes.of_string
      (Filename.chop_suffix filename (if Settings.coq then ".vy" else ".mly")) in
  for i = 0 to (Bytes.length m) - 1 do
    if not (is_valid_nonterminal_character (Bytes.get m i))
    then Bytes.set m i '_'
  done;
  Bytes.unsafe_to_string m
let rename nonterminal filename =
  let name = (restrict filename) ^ ("_" ^ nonterminal) in
  if used_name name then fresh ~hint:name () else (use_name name; name)
type symbol_kind =
  | PublicNonTerminal of Positions.t 
  | PrivateNonTerminal of Positions.t 
  | Token of token_properties 
  | DontKnow of Positions.t 
type symbol_table = (symbol, symbol_kind) Hashtbl.t
let find_symbol (symbols : symbol_table) symbol = Hashtbl.find symbols symbol
let add_in_symbol_table (symbols : symbol_table) symbol kind =
  use_name symbol; Hashtbl.add symbols symbol kind; symbols
let replace_in_symbol_table (symbols : symbol_table) symbol kind =
  Hashtbl.replace symbols symbol kind; symbols
let empty_symbol_table () = (Hashtbl.create 13 : symbol_table)
let store_symbol (symbols : symbol_table) symbol kind =
  match ((find_symbol symbols symbol), kind) with
  | exception Not_found -> add_in_symbol_table symbols symbol kind
  | (PrivateNonTerminal p, PrivateNonTerminal p')
    | (PublicNonTerminal p, PrivateNonTerminal p')
    | (PrivateNonTerminal p, PublicNonTerminal p') ->
      Error.error [p; p']
        "the nonterminal symbol %s is multiply defined.\nOnly %%public symbols can have split definitions."
        symbol
  | (Token tkp, (PrivateNonTerminal p | PublicNonTerminal p))
    | ((PrivateNonTerminal p | PublicNonTerminal p), Token tkp) ->
      Error.error [p; tkp.tk_position]
        "the identifier %s is a reference to a token." symbol
  | (_, DontKnow _) | (Token _, Token _)
    | (PublicNonTerminal _, PublicNonTerminal _) -> symbols
  | (DontKnow _, _) -> replace_in_symbol_table symbols symbol kind
let store_used_symbol position tokens symbols symbol =
  let kind =
    try Token (StringMap.find symbol tokens)
    with | Not_found -> DontKnow position in
  store_symbol symbols symbol kind
let non_terminal_is_not_reserved symbol positions =
  if symbol = "error"
  then
    Error.error positions
      "%s is reserved and thus cannot be used as a non-terminal symbol."
      symbol
let non_terminal_is_not_a_token tokens symbol positions =
  try
    let tkp = StringMap.find symbol tokens in
    Error.error (positions @ [tkp.tk_position])
      "the identifier %s is a reference to a token." symbol
  with | Not_found -> ()
let store_public_nonterminal tokens symbols symbol positions =
  non_terminal_is_not_reserved symbol positions;
  non_terminal_is_not_a_token tokens symbol positions;
  store_symbol symbols symbol (PublicNonTerminal (List.hd positions))
let store_private_nonterminal tokens symbols symbol positions =
  non_terminal_is_not_reserved symbol positions;
  non_terminal_is_not_a_token tokens symbol positions;
  store_symbol symbols symbol (PrivateNonTerminal (List.hd positions))
let is_private_symbol t x =
  try match Hashtbl.find t x with | PrivateNonTerminal _ -> true | _ -> false
  with | Not_found -> false
let fold_on_private_symbols f init t =
  Hashtbl.fold
    (fun k ->
       function
       | PrivateNonTerminal _ -> (fun acu -> f acu k)
       | _ -> (fun acu -> acu)) t init
let fold_on_public_symbols f init t =
  Hashtbl.fold
    (fun k ->
       function
       | PublicNonTerminal _ -> (fun acu -> f acu k)
       | _ -> (fun acu -> acu)) t init
let iter_on_only_used_symbols f t =
  Hashtbl.iter (fun k -> function | DontKnow pos -> f k pos | _ -> ()) t
let symbols_of grammar (pgrammar : Syntax.partial_grammar) =
  let tokens = grammar.p_tokens in
  let symbols_of_rule symbols prule =
    let rec store_except_rule_parameters symbols parameter =
      let (symbol, parameters) = Parameters.unapp parameter in
      let symbols =
        if List.mem symbol.value prule.pr_parameters
        then symbols
        else store_used_symbol symbol.position tokens symbols symbol.value in
      List.fold_left store_except_rule_parameters symbols parameters in
    let symbols =
      List.fold_left
        (fun symbols ->
           fun branch ->
             List.fold_left
               (fun symbols ->
                  fun (_, p, _) -> store_except_rule_parameters symbols p)
               symbols branch.pr_producers) symbols prule.pr_branches in
    if
      prule.pr_public_flag ||
        (StringMap.mem prule.pr_nt grammar.p_start_symbols)
    then
      store_public_nonterminal tokens symbols prule.pr_nt prule.pr_positions
    else
      store_private_nonterminal tokens symbols prule.pr_nt prule.pr_positions in
  List.fold_left symbols_of_rule (empty_symbol_table ()) pgrammar.pg_rules
let merge_rules symbols pgs =
  let public_symbols =
    List.fold_left
      (fold_on_public_symbols (fun s -> fun k -> StringSet.add k s))
      (StringSet.singleton "error") symbols in
  let _ =
    List.iter
      (iter_on_only_used_symbols
         (fun k ->
            fun pos ->
              if not (StringSet.mem k public_symbols)
              then Error.error [pos] "%s is undefined." k)) symbols in
  let detect_private_symbol_clashes =
    fold_on_private_symbols
      (fun (defined, clashes) ->
         fun symbol ->
           if
             (StringSet.mem symbol defined) ||
               (StringSet.mem symbol public_symbols)
           then (defined, (StringSet.add symbol clashes))
           else ((StringSet.add symbol defined), clashes)) in
  let (_private_symbols, clashes) =
    List.fold_left detect_private_symbol_clashes
      (StringSet.empty, StringSet.empty) symbols in
  let rpgs =
    List.map
      (fun (symbol_table, pg) ->
         let renaming =
           StringSet.fold
             (fun x ->
                fun phi ->
                  if is_private_symbol symbol_table x
                  then
                    let x' = rename x pg.pg_filename in
                    (Printf.fprintf stderr
                       "Note: the nonterminal symbol %s (from %s) is renamed %s.\n"
                       x pg.pg_filename x';
                     (x, x')
                     ::
                     phi)
                  else phi) clashes [] in
         rewrite_grammar renaming pg) pgs in
  List.fold_left
    (fun rules ->
       fun rpg ->
         List.fold_left
           (fun rules ->
              fun r ->
                let r =
                  try
                    let r' = StringMap.find r.pr_nt rules in
                    let positions = r.pr_positions @ r'.pr_positions in
                    let (ra, ra') =
                      ((List.length r.pr_parameters),
                        (List.length r'.pr_parameters)) in
                    if ra <> ra'
                    then
                      Error.error positions
                        "the symbol %s is defined with arities %d and %d."
                        r.pr_nt ra ra'
                    else
                      if r.pr_inline_flag <> r'.pr_inline_flag
                      then
                        Error.error positions
                          "not all definitions of %s are marked %%inline."
                          r.pr_nt
                      else
                        (let phi =
                           List.combine r.pr_parameters r'.pr_parameters in
                         let rbr = rewrite_branches phi r.pr_branches in
                         {
                           r' with
                           pr_positions = positions;
                           pr_branches = (rbr @ r'.pr_branches);
                           pr_attributes =
                             (r.pr_attributes @ r'.pr_attributes)
                         })
                  with | Not_found -> alphaconvert_rule r.pr_parameters r in
                StringMap.add r.pr_nt r rules) rules rpg.pg_rules)
    StringMap.empty rpgs
let empty_grammar =
  {
    p_preludes = [];
    p_postludes = [];
    p_parameters = [];
    p_start_symbols = StringMap.empty;
    p_types = [];
    p_tokens = StringMap.empty;
    p_rules = StringMap.empty;
    p_on_error_reduce = [];
    p_grammar_attributes = [];
    p_symbol_attributes = []
  }
let join grammar pgrammar =
  let filename = pgrammar.pg_filename in
  (List.fold_left (join_declaration filename) grammar
     pgrammar.pg_declarations)
    |> (join_postlude pgrammar.pg_postlude)
let check_inline_attribute prule =
  match ((prule.pr_inline_flag), (prule.pr_attributes)) with
  | (true, (id, _payload)::_attributes) ->
      Error.error [Positions.position id]
        "the nonterminal symbol %s is declared %%inline.\nIt cannot carry an attribute."
        prule.pr_nt
  | (true, []) | (false, _) -> ()
let reserved = ["error"]
let check_identifier_reference mark_token_as_used grammar prule is_prec s p =
  if (not is_prec) && (List.mem s prule.pr_parameters)
  then ()
  else
    if (not is_prec) && (List.mem s reserved)
    then mark_token_as_used s
    else
      if (not is_prec) && (StringMap.mem s grammar.p_rules)
      then ()
      else
        (match StringMap.find s grammar.p_tokens with
         | prop ->
             (mark_token_as_used s;
              if (not is_prec) && (not prop.tk_is_declared)
              then
                Error.error [p]
                  "The symbol %s has not been declared by %%token,\nso cannot be used here."
                  s)
         | exception Not_found ->
             if is_prec
             then Error.error [p] "The terminal symbol %s is undefined." s
             else Error.error [p] "The symbol %s is undefined." s)
let check_parameterized_grammar_is_well_defined grammar =
  StringMap.iter
    (fun nonterminal ->
       fun p ->
         if not (StringMap.mem nonterminal grammar.p_rules)
         then Error.error [p] "the start symbol %s is undefined." nonterminal;
         if
           not
             (List.exists
                (function
                 | (ParameterVar { value = id }, _) -> id = nonterminal
                 | _ -> false) grammar.p_types)
         then
           Error.error [p] "the type of the start symbol %s is unspecified."
             nonterminal) grammar.p_start_symbols;
  (let rec check (kind : string) (must_be_nonterminal : bool)
     (p : Syntax.parameter) =
     let (head, ps) = Parameters.unapp p in
     let head = value head in
     let is_nonterminal = StringMap.mem head grammar.p_rules
     and is_terminal =
       (StringMap.mem head grammar.p_tokens) || (List.mem head reserved) in
     if not (is_terminal || is_nonterminal)
     then Error.error [Parameters.position p] "%s is undefined." head;
     if must_be_nonterminal && (not is_nonterminal)
     then
       Error.error [Parameters.position p]
         "%s is a terminal symbol,\nbut %s declarations are applicable only to nonterminal symbols."
         (Parameters.print true p) kind;
     List.iter (check kind false) ps in
   let check_fst kind must_be_nonterminal (p, _) =
     check kind must_be_nonterminal p in
   List.iter (check_fst "%type" true) grammar.p_types;
   List.iter (check_fst "%on_error_reduce" true) grammar.p_on_error_reduce;
   List.iter (fun (params, _) -> List.iter (check "%attribute" false) params)
     grammar.p_symbol_attributes;
   (let used_tokens = ref StringSet.empty in
    let mark_token_as_used token =
      used_tokens := (StringSet.add token (!used_tokens)) in
    StringMap.iter
      (fun k ->
         fun prule ->
           let check_identifier_reference =
             check_identifier_reference mark_token_as_used grammar prule in
           ((prule.pr_parameters |> (List.sort compare)) |>
              (Misc.dup compare))
             |>
             (Option.iter
                (fun x ->
                   Error.error prule.pr_positions
                     "several parameters of this rule are named \"%s\"." x));
           List.iter
             (fun { pr_producers = producers; pr_branch_prec_annotation } ->
                ignore
                  (List.fold_left
                     (fun already_seen ->
                        fun (id, p, _) ->
                          let (symbol, parameters) = Parameters.unapp p in
                          let s = symbol.value
                          and p = symbol.position in
                          let already_seen =
                            if StringSet.mem id.value already_seen
                            then
                              Error.error [id.position]
                                "there are multiple producers named %s in this sequence."
                                id.value;
                            StringSet.add id.value already_seen in
                          check_identifier_reference false s p;
                          StringMap.iter (check_identifier_reference false)
                            (List.fold_left Parameters.identifiers
                               StringMap.empty parameters);
                          already_seen) StringSet.empty producers);
                Option.iter
                  (fun terminal ->
                     check_identifier_reference true terminal.value
                       terminal.position) pr_branch_prec_annotation)
             prule.pr_branches;
           if
             prule.pr_inline_flag &&
               (StringMap.mem k grammar.p_start_symbols)
           then
             Error.error prule.pr_positions
               "%s cannot be both a start symbol and inlined." k;
           check_inline_attribute prule) grammar.p_rules;
    if not Settings.ignore_all_unused_tokens
    then
      (match Settings.token_type_mode with
       | Settings.TokenTypeOnly -> ()
       | Settings.TokenTypeAndCode | Settings.CodeOnly _ ->
           StringMap.iter
             (fun token ->
                fun { tk_position = p } ->
                  if
                    not
                      ((StringSet.mem token (!used_tokens)) ||
                         (StringSet.mem token Settings.ignored_unused_tokens))
                  then Error.warning [p] "the token %s is unused." token)
             grammar.p_tokens)))
let join_partial_grammars pgs =
  let pgs = ExpandTokenAliases.dealias_grammars pgs in
  let grammar = List.fold_left join empty_grammar pgs in
  let symbols = List.map (symbols_of grammar) pgs in
  let tpgs = List.combine symbols pgs in
  let rules = merge_rules symbols tpgs in
  let grammar = { grammar with p_rules = rules } in
  check_parameterized_grammar_is_well_defined grammar; grammar
[
  structure_item (src/partialGrammar.ml[14,1004+0]..src/partialGrammar.ml[14,1004+11])
    Tstr_open Fresh
    module_expr (src/partialGrammar.ml[14,1004+5]..src/partialGrammar.ml[14,1004+11])
      Tmod_ident "Dune__exe!.Syntax"
  structure_item (src/partialGrammar.ml[15,1016+0]..src/partialGrammar.ml[15,1016+14])
    Tstr_open Fresh
    module_expr (src/partialGrammar.ml[15,1016+5]..src/partialGrammar.ml[15,1016+14])
      Tmod_ident "Dune__exe!.Positions"
  structure_item (src/partialGrammar.ml[21,1211+0]..src/partialGrammar.ml[153,5514+79])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[21,1211+4]..src/partialGrammar.ml[21,1211+20])
          Tpat_var "join_declaration/466"
        expression (src/partialGrammar.ml[21,1211+21]..src/partialGrammar.ml[153,5514+79]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[21,1211+21]..src/partialGrammar.ml[21,1211+29])
                Tpat_var "filename/468"
              expression (src/partialGrammar.ml[21,1211+30]..src/partialGrammar.ml[153,5514+79]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[21,1211+31]..src/partialGrammar.ml[21,1211+38])
                      extra
                        Tpat_extra_constraint
                        core_type (src/partialGrammar.ml[21,1211+41]..src/partialGrammar.ml[21,1211+48])
                          Ttyp_constr "Dune__exe!.Syntax.grammar"
                          []
                      Tpat_alias "grammar/469"
                      pattern (src/partialGrammar.ml[21,1211+31]..src/partialGrammar.ml[21,1211+38])
                        Tpat_any
                    expression (src/partialGrammar.ml[21,1211+50]..src/partialGrammar.ml[153,5514+79]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/partialGrammar.ml[21,1211+50]..src/partialGrammar.ml[21,1211+54])
                            Tpat_var "decl/470"
                          expression (src/partialGrammar.ml[22,1268+2]..src/partialGrammar.ml[153,5514+79])
                            Texp_match
                            expression (src/partialGrammar.ml[22,1268+8]..src/partialGrammar.ml[22,1268+18])
                              Texp_field
                              expression (src/partialGrammar.ml[22,1268+8]..src/partialGrammar.ml[22,1268+12])
                                Texp_ident "decl/470"
                              "value"
                            [
                              <case>
                                pattern (src/partialGrammar.ml[28,1458+4]..src/partialGrammar.ml[28,1458+14])
                                  Tpat_value
                                  pattern (src/partialGrammar.ml[28,1458+4]..src/partialGrammar.ml[28,1458+14])
                                    Tpat_construct "DCode"
                                    [
                                      pattern (src/partialGrammar.ml[28,1458+10]..src/partialGrammar.ml[28,1458+14])
                                        Tpat_var "code/471"
                                    ]
                                    None
                                expression (src/partialGrammar.ml[29,1476+6]..src/partialGrammar.ml[29,1476+65])
                                  Texp_record
                                    fields =
                                      [
                                        "p_preludes"
                                          expression (src/partialGrammar.ml[29,1476+34]..src/partialGrammar.ml[29,1476+63])
                                            Texp_apply
                                            expression (src/partialGrammar.ml[29,1476+53]..src/partialGrammar.ml[29,1476+54])
                                              Texp_ident "Stdlib!.@"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/partialGrammar.ml[29,1476+34]..src/partialGrammar.ml[29,1476+52])
                                                  Texp_field
                                                  expression (src/partialGrammar.ml[29,1476+34]..src/partialGrammar.ml[29,1476+41])
                                                    Texp_ident "grammar/469"
                                                  "p_preludes"
                                              <arg>
                                                Nolabel
                                                expression (src/partialGrammar.ml[29,1476+55]..src/partialGrammar.ml[29,1476+63])
                                                  Texp_construct "::"
                                                  [
                                                    expression (src/partialGrammar.ml[29,1476+57]..src/partialGrammar.ml[29,1476+61])
                                                      Texp_ident "code/471"
                                                    expression (src/partialGrammar.ml[29,1476+62]..src/partialGrammar.ml[29,1476+63]) ghost
                                                      Texp_construct "[]"
                                                      []
                                                  ]
                                            ]
                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                      ]
                                    representation =
                                      Record_regular
                                    extended_expression =
                                      Some
                                        expression (src/partialGrammar.ml[29,1476+8]..src/partialGrammar.ml[29,1476+15])
                                          Texp_ident "grammar/469"
                              <case>
                                pattern (src/partialGrammar.ml[30,1542+4]..src/partialGrammar.ml[30,1542+41])
                                  Tpat_value
                                  pattern (src/partialGrammar.ml[30,1542+4]..src/partialGrammar.ml[30,1542+41])
                                    Tpat_construct "DParameter"
                                    [
                                      pattern (src/partialGrammar.ml[30,1542+15]..src/partialGrammar.ml[30,1542+41])
                                        Tpat_construct "Stretch.Declared"
                                        [
                                          pattern (src/partialGrammar.ml[30,1542+33]..src/partialGrammar.ml[30,1542+40])
                                            Tpat_var "stretch/511"
                                        ]
                                        None
                                    ]
                                    None
                                expression (src/partialGrammar.ml[31,1587+6]..src/partialGrammar.ml[31,1587+72])
                                  Texp_record
                                    fields =
                                      [
                                        <kept>                                        <kept>                                        "p_parameters"
                                          expression (src/partialGrammar.ml[31,1587+36]..src/partialGrammar.ml[31,1587+70])
                                            Texp_apply
                                            expression (src/partialGrammar.ml[31,1587+57]..src/partialGrammar.ml[31,1587+58])
                                              Texp_ident "Stdlib!.@"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/partialGrammar.ml[31,1587+36]..src/partialGrammar.ml[31,1587+56])
                                                  Texp_field
                                                  expression (src/partialGrammar.ml[31,1587+36]..src/partialGrammar.ml[31,1587+43])
                                                    Texp_ident "grammar/469"
                                                  "p_parameters"
                                              <arg>
                                                Nolabel
                                                expression (src/partialGrammar.ml[31,1587+59]..src/partialGrammar.ml[31,1587+70])
                                                  Texp_construct "::"
                                                  [
                                                    expression (src/partialGrammar.ml[31,1587+61]..src/partialGrammar.ml[31,1587+68])
                                                      Texp_ident "stretch/511"
                                                    expression (src/partialGrammar.ml[31,1587+69]..src/partialGrammar.ml[31,1587+70]) ghost
                                                      Texp_construct "[]"
                                                      []
                                                  ]
                                            ]
                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                      ]
                                    representation =
                                      Record_regular
                                    extended_expression =
                                      Some
                                        expression (src/partialGrammar.ml[31,1587+8]..src/partialGrammar.ml[31,1587+15])
                                          Texp_ident "grammar/469"
                              <case>
                                pattern (src/partialGrammar.ml[32,1660+4]..src/partialGrammar.ml[32,1660+35])
                                  Tpat_value
                                  pattern (src/partialGrammar.ml[32,1660+4]..src/partialGrammar.ml[32,1660+35])
                                    Tpat_construct "DParameter"
                                    [
                                      pattern (src/partialGrammar.ml[32,1660+15]..src/partialGrammar.ml[32,1660+35])
                                        Tpat_construct "Stretch.Inferred"
                                        [
                                          pattern (src/partialGrammar.ml[32,1660+33]..src/partialGrammar.ml[32,1660+34])
                                            Tpat_any
                                        ]
                                        None
                                    ]
                                    None
                                expression (src/partialGrammar.ml[33,1699+6]..src/partialGrammar.ml[33,1699+18])
                                  Texp_assert                                  expression (src/partialGrammar.ml[33,1699+13]..src/partialGrammar.ml[33,1699+18])
                                    Texp_construct "false"
                                    []
                              <case>
                                pattern (src/partialGrammar.ml[41,1965+4]..src/partialGrammar.ml[41,1965+51])
                                  Tpat_value
                                  pattern (src/partialGrammar.ml[41,1965+4]..src/partialGrammar.ml[41,1965+51])
                                    Tpat_construct "DToken"
                                    [
                                      pattern (src/partialGrammar.ml[41,1965+12]..src/partialGrammar.ml[41,1965+21])
                                        Tpat_var "ocamltype/512"
                                      pattern (src/partialGrammar.ml[41,1965+23]..src/partialGrammar.ml[41,1965+31])
                                        Tpat_var "terminal/513"
                                      pattern (src/partialGrammar.ml[41,1965+33]..src/partialGrammar.ml[41,1965+38])
                                        Tpat_var "alias/514"
                                      pattern (src/partialGrammar.ml[41,1965+40]..src/partialGrammar.ml[41,1965+50])
                                        Tpat_var "attributes/515"
                                    ]
                                    None
                                expression (src/partialGrammar.ml[42,2020+6]..src/partialGrammar.ml[87,3381+75])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/partialGrammar.ml[42,2020+10]..src/partialGrammar.ml[42,2020+24])
                                        Tpat_var "token_property/658"
                                      expression (src/partialGrammar.ml[43,2047+8]..src/partialGrammar.ml[83,3338+11])
                                        Texp_try
                                        expression (src/partialGrammar.ml[47,2126+10]..src/partialGrammar.ml[68,2877+11])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/partialGrammar.ml[47,2126+14]..src/partialGrammar.ml[47,2126+28])
                                                Tpat_var "token_property/659"
                                              expression (src/partialGrammar.ml[48,2157+12]..src/partialGrammar.ml[48,2157+52])
                                                Texp_apply
                                                expression (src/partialGrammar.ml[48,2157+12]..src/partialGrammar.ml[48,2157+26])
                                                  Texp_ident "Dune__exe!.StringMap.find"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/partialGrammar.ml[48,2157+27]..src/partialGrammar.ml[48,2157+35])
                                                      Texp_ident "terminal/513"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/partialGrammar.ml[48,2157+36]..src/partialGrammar.ml[48,2157+52])
                                                      Texp_field
                                                      expression (src/partialGrammar.ml[48,2157+36]..src/partialGrammar.ml[48,2157+43])
                                                        Texp_ident "grammar/469"
                                                      "p_tokens"
                                                ]
                                          ]
                                          expression (src/partialGrammar.ml[55,2406+10]..src/partialGrammar.ml[68,2877+11])
                                            Texp_sequence
                                            expression (src/partialGrammar.ml[55,2406+10]..src/partialGrammar.ml[57,2484+63])
                                              Texp_ifthenelse
                                              expression (src/partialGrammar.ml[55,2406+13]..src/partialGrammar.ml[55,2406+42])
                                                Texp_field
                                                expression (src/partialGrammar.ml[55,2406+13]..src/partialGrammar.ml[55,2406+27])
                                                  Texp_ident "token_property/659"
                                                "tk_is_declared"
                                              expression (src/partialGrammar.ml[56,2454+12]..src/partialGrammar.ml[57,2484+63])
                                                Texp_apply
                                                expression (src/partialGrammar.ml[56,2454+12]..src/partialGrammar.ml[56,2454+24])
                                                  Texp_ident "Dune__exe!.Error.errorp"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/partialGrammar.ml[56,2454+25]..src/partialGrammar.ml[56,2454+29])
                                                      Texp_ident "decl/470"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/partialGrammar.ml[57,2484+14]..src/partialGrammar.ml[57,2484+54])
                                                      Texp_construct "CamlinternalFormatBasics.Format"
                                                      [
                                                        expression (src/partialGrammar.ml[57,2484+14]..src/partialGrammar.ml[57,2484+54]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                                          [
                                                            expression (src/partialGrammar.ml[57,2484+14]..src/partialGrammar.ml[57,2484+54]) ghost
                                                              Texp_constant Const_string("the token ",(src/partialGrammar.ml[57,2484+14]..src/partialGrammar.ml[57,2484+54]) ghost,None)
                                                            expression (src/partialGrammar.ml[57,2484+14]..src/partialGrammar.ml[57,2484+54]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.String"
                                                              [
                                                                expression (src/partialGrammar.ml[57,2484+14]..src/partialGrammar.ml[57,2484+54]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                  []
                                                                expression (src/partialGrammar.ml[57,2484+14]..src/partialGrammar.ml[57,2484+54]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                  [
                                                                    expression (src/partialGrammar.ml[57,2484+14]..src/partialGrammar.ml[57,2484+54]) ghost
                                                                      Texp_constant Const_string(" has multiple definitions.",(src/partialGrammar.ml[57,2484+14]..src/partialGrammar.ml[57,2484+54]) ghost,None)
                                                                    expression (src/partialGrammar.ml[57,2484+14]..src/partialGrammar.ml[57,2484+54]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                      []
                                                                  ]
                                                              ]
                                                          ]
                                                        expression (src/partialGrammar.ml[57,2484+14]..src/partialGrammar.ml[57,2484+54]) ghost
                                                          Texp_constant Const_string("the token %s has multiple definitions.",(src/partialGrammar.ml[57,2484+14]..src/partialGrammar.ml[57,2484+54]) ghost,None)
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (src/partialGrammar.ml[57,2484+55]..src/partialGrammar.ml[57,2484+63])
                                                      Texp_ident "terminal/513"
                                                ]
                                              None
                                            expression (src/partialGrammar.ml[61,2610+10]..src/partialGrammar.ml[68,2877+11])
                                              Texp_record
                                                fields =
                                                  [
                                                    "tk_filename"
                                                      expression (src/partialGrammar.ml[64,2717+29]..src/partialGrammar.ml[64,2717+37])
                                                        Texp_ident "filename/468"
                                                    "tk_ocamltype"
                                                      expression (src/partialGrammar.ml[63,2677+29]..src/partialGrammar.ml[63,2677+38])
                                                        Texp_ident "ocamltype/512"
                                                    "tk_position"
                                                      expression (src/partialGrammar.ml[65,2756+29]..src/partialGrammar.ml[65,2756+42])
                                                        Texp_field
                                                        expression (src/partialGrammar.ml[65,2756+29]..src/partialGrammar.ml[65,2756+33])
                                                          Texp_ident "decl/470"
                                                        "position"
                                                    "tk_alias"
                                                      expression (src/partialGrammar.ml[67,2841+29]..src/partialGrammar.ml[67,2841+34])
                                                        Texp_ident "alias/514"
                                                    "tk_attributes"
                                                      expression (src/partialGrammar.ml[66,2800+29]..src/partialGrammar.ml[66,2800+39])
                                                        Texp_ident "attributes/515"
                                                    <kept>                                                    <kept>                                                    "tk_is_declared"
                                                      expression (src/partialGrammar.ml[62,2642+29]..src/partialGrammar.ml[62,2642+33])
                                                        Texp_construct "true"
                                                        []
                                                  ]
                                                representation =
                                                  Record_regular
                                                extended_expression =
                                                  Some
                                                    expression (src/partialGrammar.ml[61,2610+12]..src/partialGrammar.ml[61,2610+26])
                                                      Texp_ident "token_property/659"
                                        [
                                          <case>
                                            pattern (src/partialGrammar.ml[70,2890+13]..src/partialGrammar.ml[70,2890+22])
                                              Tpat_construct "Not_found"
                                              []
                                              None
                                            expression (src/partialGrammar.ml[74,2980+10]..src/partialGrammar.ml[83,3338+11])
                                              Texp_record
                                                fields =
                                                  [
                                                    "tk_filename"
                                                      expression (src/partialGrammar.ml[75,2992+31]..src/partialGrammar.ml[75,2992+39])
                                                        Texp_ident "filename/468"
                                                    "tk_ocamltype"
                                                      expression (src/partialGrammar.ml[76,3033+31]..src/partialGrammar.ml[76,3033+40])
                                                        Texp_ident "ocamltype/512"
                                                    "tk_position"
                                                      expression (src/partialGrammar.ml[79,3174+31]..src/partialGrammar.ml[79,3174+44])
                                                        Texp_field
                                                        expression (src/partialGrammar.ml[79,3174+31]..src/partialGrammar.ml[79,3174+35])
                                                          Texp_ident "decl/470"
                                                        "position"
                                                    "tk_alias"
                                                      expression (src/partialGrammar.ml[82,3300+31]..src/partialGrammar.ml[82,3300+36])
                                                        Texp_ident "alias/514"
                                                    "tk_attributes"
                                                      expression (src/partialGrammar.ml[80,3220+31]..src/partialGrammar.ml[80,3220+41])
                                                        Texp_ident "attributes/515"
                                                    "tk_associativity"
                                                      expression (src/partialGrammar.ml[77,3075+31]..src/partialGrammar.ml[77,3075+45])
                                                        Texp_construct "UndefinedAssoc"
                                                        []
                                                    "tk_precedence"
                                                      expression (src/partialGrammar.ml[78,3122+31]..src/partialGrammar.ml[78,3122+50])
                                                        Texp_construct "UndefinedPrecedence"
                                                        []
                                                    "tk_is_declared"
                                                      expression (src/partialGrammar.ml[81,3263+31]..src/partialGrammar.ml[81,3263+35])
                                                        Texp_construct "true"
                                                        []
                                                  ]
                                                representation =
                                                  Record_regular
                                                extended_expression =
                                                  None
                                        ]
                                  ]
                                  expression (src/partialGrammar.ml[86,3360+6]..src/partialGrammar.ml[87,3381+75])
                                    Texp_record
                                      fields =
                                        [
                                          <kept>                                          <kept>                                          <kept>                                          <kept>                                          <kept>                                          "p_tokens"
                                            expression (src/partialGrammar.ml[87,3381+19]..src/partialGrammar.ml[87,3381+73])
                                              Texp_apply
                                              expression (src/partialGrammar.ml[87,3381+19]..src/partialGrammar.ml[87,3381+32])
                                                Texp_ident "Dune__exe!.StringMap.add"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/partialGrammar.ml[87,3381+33]..src/partialGrammar.ml[87,3381+41])
                                                    Texp_ident "terminal/513"
                                                <arg>
                                                  Nolabel
                                                  expression (src/partialGrammar.ml[87,3381+42]..src/partialGrammar.ml[87,3381+56])
                                                    Texp_ident "token_property/658"
                                                <arg>
                                                  Nolabel
                                                  expression (src/partialGrammar.ml[87,3381+57]..src/partialGrammar.ml[87,3381+73])
                                                    Texp_field
                                                    expression (src/partialGrammar.ml[87,3381+57]..src/partialGrammar.ml[87,3381+64])
                                                      Texp_ident "grammar/469"
                                                    "p_tokens"
                                              ]
                                          <kept>                                          <kept>                                          <kept>                                          <kept>                                        ]
                                      representation =
                                        Record_regular
                                      extended_expression =
                                        Some
                                          expression (src/partialGrammar.ml[86,3360+8]..src/partialGrammar.ml[86,3360+15])
                                            Texp_ident "grammar/469"
                              <case>
                                pattern (src/partialGrammar.ml[91,3482+4]..src/partialGrammar.ml[91,3482+22])
                                  Tpat_value
                                  pattern (src/partialGrammar.ml[91,3482+4]..src/partialGrammar.ml[91,3482+22])
                                    Tpat_construct "DStart"
                                    [
                                      pattern (src/partialGrammar.ml[91,3482+11]..src/partialGrammar.ml[91,3482+22])
                                        Tpat_var "nonterminal/516"
                                    ]
                                    None
                                expression (src/partialGrammar.ml[92,3508+6]..src/partialGrammar.ml[93,3529+91])
                                  Texp_record
                                    fields =
                                      [
                                        <kept>                                        <kept>                                        <kept>                                        "p_start_symbols"
                                          expression (src/partialGrammar.ml[93,3529+26]..src/partialGrammar.ml[93,3529+89])
                                            Texp_apply
                                            expression (src/partialGrammar.ml[93,3529+26]..src/partialGrammar.ml[93,3529+39])
                                              Texp_ident "Dune__exe!.StringMap.add"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/partialGrammar.ml[93,3529+40]..src/partialGrammar.ml[93,3529+51])
                                                  Texp_ident "nonterminal/516"
                                              <arg>
                                                Nolabel
                                                expression (src/partialGrammar.ml[93,3529+52]..src/partialGrammar.ml[93,3529+65])
                                                  Texp_field
                                                  expression (src/partialGrammar.ml[93,3529+52]..src/partialGrammar.ml[93,3529+56])
                                                    Texp_ident "decl/470"
                                                  "position"
                                              <arg>
                                                Nolabel
                                                expression (src/partialGrammar.ml[93,3529+66]..src/partialGrammar.ml[93,3529+89])
                                                  Texp_field
                                                  expression (src/partialGrammar.ml[93,3529+66]..src/partialGrammar.ml[93,3529+73])
                                                    Texp_ident "grammar/469"
                                                  "p_start_symbols"
                                            ]
                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                      ]
                                    representation =
                                      Record_regular
                                    extended_expression =
                                      Some
                                        expression (src/partialGrammar.ml[92,3508+8]..src/partialGrammar.ml[92,3508+15])
                                          Texp_ident "grammar/469"
                              <case>
                                pattern (src/partialGrammar.ml[97,3667+4]..src/partialGrammar.ml[97,3667+34])
                                  Tpat_value
                                  pattern (src/partialGrammar.ml[97,3667+4]..src/partialGrammar.ml[97,3667+34])
                                    Tpat_construct "DType"
                                    [
                                      pattern (src/partialGrammar.ml[97,3667+11]..src/partialGrammar.ml[97,3667+20])
                                        Tpat_var "ocamltype/517"
                                      pattern (src/partialGrammar.ml[97,3667+22]..src/partialGrammar.ml[97,3667+33])
                                        Tpat_var "nonterminal/518"
                                    ]
                                    None
                                expression (src/partialGrammar.ml[98,3705+6]..src/partialGrammar.ml[99,3726+88])
                                  Texp_record
                                    fields =
                                      [
                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                        "p_types"
                                          expression (src/partialGrammar.ml[99,3726+20]..src/partialGrammar.ml[99,3726+86])
                                            Texp_construct "::"
                                            [
                                              expression (src/partialGrammar.ml[99,3726+20]..src/partialGrammar.ml[99,3726+69])
                                                Texp_tuple
                                                [
                                                  expression (src/partialGrammar.ml[99,3726+21]..src/partialGrammar.ml[99,3726+32])
                                                    Texp_ident "nonterminal/518"
                                                  expression (src/partialGrammar.ml[99,3726+34]..src/partialGrammar.ml[99,3726+68])
                                                    Texp_apply
                                                    expression (src/partialGrammar.ml[99,3726+34]..src/partialGrammar.ml[99,3726+42])
                                                      Texp_ident "Dune__exe!.Positions.with_pos"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/partialGrammar.ml[99,3726+43]..src/partialGrammar.ml[99,3726+58])
                                                          Texp_apply
                                                          expression (src/partialGrammar.ml[99,3726+44]..src/partialGrammar.ml[99,3726+52])
                                                            Texp_ident "Dune__exe!.Positions.position"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[99,3726+53]..src/partialGrammar.ml[99,3726+57])
                                                                Texp_ident "decl/470"
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (src/partialGrammar.ml[99,3726+59]..src/partialGrammar.ml[99,3726+68])
                                                          Texp_ident "ocamltype/517"
                                                    ]
                                                ]
                                              expression (src/partialGrammar.ml[99,3726+71]..src/partialGrammar.ml[99,3726+86])
                                                Texp_field
                                                expression (src/partialGrammar.ml[99,3726+71]..src/partialGrammar.ml[99,3726+78])
                                                  Texp_ident "grammar/469"
                                                "p_types"
                                            ]
                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                      ]
                                    representation =
                                      Record_regular
                                    extended_expression =
                                      Some
                                        expression (src/partialGrammar.ml[98,3705+8]..src/partialGrammar.ml[98,3705+15])
                                          Texp_ident "grammar/469"
                              <case>
                                pattern (src/partialGrammar.ml[103,3863+4]..src/partialGrammar.ml[103,3863+38])
                                  Tpat_value
                                  pattern (src/partialGrammar.ml[103,3863+4]..src/partialGrammar.ml[103,3863+38])
                                    Tpat_construct "DOnErrorReduce"
                                    [
                                      pattern (src/partialGrammar.ml[103,3863+20]..src/partialGrammar.ml[103,3863+31])
                                        Tpat_var "nonterminal/519"
                                      pattern (src/partialGrammar.ml[103,3863+33]..src/partialGrammar.ml[103,3863+37])
                                        Tpat_var "prec/520"
                                    ]
                                    None
                                expression (src/partialGrammar.ml[104,3905+6]..src/partialGrammar.ml[105,3926+78])
                                  Texp_record
                                    fields =
                                      [
                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                        "p_on_error_reduce"
                                          expression (src/partialGrammar.ml[105,3926+28]..src/partialGrammar.ml[105,3926+76])
                                            Texp_construct "::"
                                            [
                                              expression (src/partialGrammar.ml[105,3926+28]..src/partialGrammar.ml[105,3926+47])
                                                Texp_tuple
                                                [
                                                  expression (src/partialGrammar.ml[105,3926+29]..src/partialGrammar.ml[105,3926+40])
                                                    Texp_ident "nonterminal/519"
                                                  expression (src/partialGrammar.ml[105,3926+42]..src/partialGrammar.ml[105,3926+46])
                                                    Texp_ident "prec/520"
                                                ]
                                              expression (src/partialGrammar.ml[105,3926+51]..src/partialGrammar.ml[105,3926+76])
                                                Texp_field
                                                expression (src/partialGrammar.ml[105,3926+51]..src/partialGrammar.ml[105,3926+58])
                                                  Texp_ident "grammar/469"
                                                "p_on_error_reduce"
                                            ]
                                        <kept>                                        <kept>                                        <kept>                                      ]
                                    representation =
                                      Record_regular
                                    extended_expression =
                                      Some
                                        expression (src/partialGrammar.ml[104,3905+8]..src/partialGrammar.ml[104,3905+15])
                                          Texp_ident "grammar/469"
                              <case>
                                pattern (src/partialGrammar.ml[109,4051+4]..src/partialGrammar.ml[109,4051+44])
                                  Tpat_value
                                  pattern (src/partialGrammar.ml[109,4051+4]..src/partialGrammar.ml[109,4051+44])
                                    Tpat_construct "DTokenProperties"
                                    [
                                      pattern (src/partialGrammar.ml[109,4051+22]..src/partialGrammar.ml[109,4051+30])
                                        Tpat_var "terminal/521"
                                      pattern (src/partialGrammar.ml[109,4051+32]..src/partialGrammar.ml[109,4051+37])
                                        Tpat_var "assoc/522"
                                      pattern (src/partialGrammar.ml[109,4051+39]..src/partialGrammar.ml[109,4051+43])
                                        Tpat_var "prec/523"
                                    ]
                                    None
                                expression (src/partialGrammar.ml[115,4260+6]..src/partialGrammar.ml[145,5314+13])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/partialGrammar.ml[115,4260+10]..src/partialGrammar.ml[115,4260+35])
                                        Tpat_tuple
                                        [
                                          pattern (src/partialGrammar.ml[115,4260+10]..src/partialGrammar.ml[115,4260+26])
                                            Tpat_var "token_properties/698"
                                          pattern (src/partialGrammar.ml[115,4260+28]..src/partialGrammar.ml[115,4260+35])
                                            Tpat_var "grammar/699"
                                        ]
                                      expression (src/partialGrammar.ml[116,4298+8]..src/partialGrammar.ml[131,4818+69])
                                        Texp_try
                                        expression (src/partialGrammar.ml[117,4310+10]..src/partialGrammar.ml[117,4310+59])
                                          Texp_tuple
                                          [
                                            expression (src/partialGrammar.ml[117,4310+10]..src/partialGrammar.ml[117,4310+50])
                                              Texp_apply
                                              expression (src/partialGrammar.ml[117,4310+10]..src/partialGrammar.ml[117,4310+24])
                                                Texp_ident "Dune__exe!.StringMap.find"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/partialGrammar.ml[117,4310+25]..src/partialGrammar.ml[117,4310+33])
                                                    Texp_ident "terminal/521"
                                                <arg>
                                                  Nolabel
                                                  expression (src/partialGrammar.ml[117,4310+34]..src/partialGrammar.ml[117,4310+50])
                                                    Texp_field
                                                    expression (src/partialGrammar.ml[117,4310+34]..src/partialGrammar.ml[117,4310+41])
                                                      Texp_ident "grammar/469"
                                                    "p_tokens"
                                              ]
                                            expression (src/partialGrammar.ml[117,4310+52]..src/partialGrammar.ml[117,4310+59])
                                              Texp_ident "grammar/469"
                                          ]
                                        [
                                          <case>
                                            pattern (src/partialGrammar.ml[118,4370+13]..src/partialGrammar.ml[118,4370+22])
                                              Tpat_construct "Not_found"
                                              []
                                              None
                                            expression (src/partialGrammar.ml[119,4396+10]..src/partialGrammar.ml[131,4818+69])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/partialGrammar.ml[119,4396+14]..src/partialGrammar.ml[119,4396+15])
                                                    Tpat_var "p/700"
                                                  expression (src/partialGrammar.ml[119,4396+18]..src/partialGrammar.ml[129,4775+11])
                                                    Texp_record
                                                      fields =
                                                        [
                                                          "tk_filename"
                                                            expression (src/partialGrammar.ml[120,4416+31]..src/partialGrammar.ml[120,4416+39])
                                                              Texp_ident "filename/468"
                                                          "tk_ocamltype"
                                                            expression (src/partialGrammar.ml[121,4457+31]..src/partialGrammar.ml[121,4457+35])
                                                              Texp_construct "None"
                                                              []
                                                          "tk_position"
                                                            expression (src/partialGrammar.ml[128,4729+31]..src/partialGrammar.ml[128,4729+44])
                                                              Texp_field
                                                              expression (src/partialGrammar.ml[128,4729+31]..src/partialGrammar.ml[128,4729+35])
                                                                Texp_ident "decl/470"
                                                              "position"
                                                          "tk_alias"
                                                            expression (src/partialGrammar.ml[126,4651+31]..src/partialGrammar.ml[126,4651+35])
                                                              Texp_construct "None"
                                                              []
                                                          "tk_attributes"
                                                            expression (src/partialGrammar.ml[125,4616+31]..src/partialGrammar.ml[125,4616+33])
                                                              Texp_construct "[]"
                                                              []
                                                          "tk_associativity"
                                                            expression (src/partialGrammar.ml[122,4494+31]..src/partialGrammar.ml[122,4494+45])
                                                              Texp_construct "UndefinedAssoc"
                                                              []
                                                          "tk_precedence"
                                                            expression (src/partialGrammar.ml[123,4541+31]..src/partialGrammar.ml[123,4541+35])
                                                              Texp_ident "prec/523"
                                                          "tk_is_declared"
                                                            expression (src/partialGrammar.ml[124,4578+31]..src/partialGrammar.ml[124,4578+36])
                                                              Texp_construct "false"
                                                              []
                                                        ]
                                                      representation =
                                                        Record_regular
                                                      extended_expression =
                                                        None
                                              ]
                                              expression (src/partialGrammar.ml[130,4790+10]..src/partialGrammar.ml[131,4818+69])
                                                Texp_tuple
                                                [
                                                  expression (src/partialGrammar.ml[130,4790+10]..src/partialGrammar.ml[130,4790+11])
                                                    Texp_ident "p/700"
                                                  expression (src/partialGrammar.ml[130,4790+13]..src/partialGrammar.ml[131,4818+69])
                                                    Texp_record
                                                      fields =
                                                        [
                                                          <kept>                                                          <kept>                                                          <kept>                                                          <kept>                                                          <kept>                                                          "p_tokens"
                                                            expression (src/partialGrammar.ml[131,4818+26]..src/partialGrammar.ml[131,4818+67])
                                                              Texp_apply
                                                              expression (src/partialGrammar.ml[131,4818+26]..src/partialGrammar.ml[131,4818+39])
                                                                Texp_ident "Dune__exe!.StringMap.add"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/partialGrammar.ml[131,4818+40]..src/partialGrammar.ml[131,4818+48])
                                                                    Texp_ident "terminal/521"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/partialGrammar.ml[131,4818+49]..src/partialGrammar.ml[131,4818+50])
                                                                    Texp_ident "p/700"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/partialGrammar.ml[131,4818+51]..src/partialGrammar.ml[131,4818+67])
                                                                    Texp_field
                                                                    expression (src/partialGrammar.ml[131,4818+51]..src/partialGrammar.ml[131,4818+58])
                                                                      Texp_ident "grammar/469"
                                                                    "p_tokens"
                                                              ]
                                                          <kept>                                                          <kept>                                                          <kept>                                                          <kept>                                                        ]
                                                      representation =
                                                        Record_regular
                                                      extended_expression =
                                                        Some
                                                          expression (src/partialGrammar.ml[130,4790+15]..src/partialGrammar.ml[130,4790+22])
                                                            Texp_ident "grammar/469"
                                                ]
                                        ]
                                  ]
                                  expression (src/partialGrammar.ml[136,4953+6]..src/partialGrammar.ml[145,5314+13])
                                    Texp_sequence
                                    expression (src/partialGrammar.ml[136,4953+6]..src/partialGrammar.ml[139,5097+77])
                                      Texp_ifthenelse
                                      expression (src/partialGrammar.ml[136,4953+9]..src/partialGrammar.ml[136,4953+60])
                                        Texp_apply
                                        expression (src/partialGrammar.ml[136,4953+43]..src/partialGrammar.ml[136,4953+45])
                                          Texp_ident "Stdlib!.<>"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/partialGrammar.ml[136,4953+9]..src/partialGrammar.ml[136,4953+42])
                                              Texp_field
                                              expression (src/partialGrammar.ml[136,4953+9]..src/partialGrammar.ml[136,4953+25])
                                                Texp_ident "token_properties/698"
                                              "tk_associativity"
                                          <arg>
                                            Nolabel
                                            expression (src/partialGrammar.ml[136,4953+46]..src/partialGrammar.ml[136,4953+60])
                                              Texp_construct "UndefinedAssoc"
                                              []
                                        ]
                                      expression (src/partialGrammar.ml[137,5019+8]..src/partialGrammar.ml[139,5097+77])
                                        Texp_apply
                                        expression (src/partialGrammar.ml[137,5019+8]..src/partialGrammar.ml[137,5019+19])
                                          Texp_ident "Dune__exe!.Error.error"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/partialGrammar.ml[138,5039+10]..src/partialGrammar.ml[138,5039+57])
                                              Texp_construct "::"
                                              [
                                                expression (src/partialGrammar.ml[138,5039+12]..src/partialGrammar.ml[138,5039+25])
                                                  Texp_field
                                                  expression (src/partialGrammar.ml[138,5039+12]..src/partialGrammar.ml[138,5039+16])
                                                    Texp_ident "decl/470"
                                                  "position"
                                                expression (src/partialGrammar.ml[138,5039+27]..src/partialGrammar.ml[138,5039+57]) ghost
                                                  Texp_construct "::"
                                                  [
                                                    expression (src/partialGrammar.ml[138,5039+27]..src/partialGrammar.ml[138,5039+55])
                                                      Texp_field
                                                      expression (src/partialGrammar.ml[138,5039+27]..src/partialGrammar.ml[138,5039+43])
                                                        Texp_ident "token_properties/698"
                                                      "tk_position"
                                                    expression (src/partialGrammar.ml[138,5039+56]..src/partialGrammar.ml[138,5039+57]) ghost
                                                      Texp_construct "[]"
                                                      []
                                                  ]
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/partialGrammar.ml[139,5097+10]..src/partialGrammar.ml[139,5097+68])
                                              Texp_construct "CamlinternalFormatBasics.Format"
                                              [
                                                expression (src/partialGrammar.ml[139,5097+10]..src/partialGrammar.ml[139,5097+68]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                  [
                                                    expression (src/partialGrammar.ml[139,5097+10]..src/partialGrammar.ml[139,5097+68]) ghost
                                                      Texp_constant Const_string("there are multiple precedence declarations for token ",(src/partialGrammar.ml[139,5097+10]..src/partialGrammar.ml[139,5097+68]) ghost,None)
                                                    expression (src/partialGrammar.ml[139,5097+10]..src/partialGrammar.ml[139,5097+68]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.String"
                                                      [
                                                        expression (src/partialGrammar.ml[139,5097+10]..src/partialGrammar.ml[139,5097+68]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                                          []
                                                        expression (src/partialGrammar.ml[139,5097+10]..src/partialGrammar.ml[139,5097+68]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                          [
                                                            expression (src/partialGrammar.ml[139,5097+10]..src/partialGrammar.ml[139,5097+68]) ghost
                                                              Texp_constant Const_char 2e
                                                            expression (src/partialGrammar.ml[139,5097+10]..src/partialGrammar.ml[139,5097+68]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                              []
                                                          ]
                                                      ]
                                                  ]
                                                expression (src/partialGrammar.ml[139,5097+10]..src/partialGrammar.ml[139,5097+68]) ghost
                                                  Texp_constant Const_string("there are multiple precedence declarations for token %s.",(src/partialGrammar.ml[139,5097+10]..src/partialGrammar.ml[139,5097+68]) ghost,None)
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/partialGrammar.ml[139,5097+69]..src/partialGrammar.ml[139,5097+77])
                                              Texp_ident "terminal/521"
                                        ]
                                      None
                                    expression (src/partialGrammar.ml[143,5218+6]..src/partialGrammar.ml[145,5314+13])
                                      Texp_sequence
                                      expression (src/partialGrammar.ml[143,5218+6]..src/partialGrammar.ml[143,5218+44])
                                        Texp_setfield
                                        expression (src/partialGrammar.ml[143,5218+6]..src/partialGrammar.ml[143,5218+22])
                                          Texp_ident "token_properties/698"
                                        "tk_precedence"
                                        expression (src/partialGrammar.ml[143,5218+40]..src/partialGrammar.ml[143,5218+44])
                                          Texp_ident "prec/523"
                                      expression (src/partialGrammar.ml[144,5264+6]..src/partialGrammar.ml[145,5314+13])
                                        Texp_sequence
                                        expression (src/partialGrammar.ml[144,5264+6]..src/partialGrammar.ml[144,5264+48])
                                          Texp_setfield
                                          expression (src/partialGrammar.ml[144,5264+6]..src/partialGrammar.ml[144,5264+22])
                                            Texp_ident "token_properties/698"
                                          "tk_associativity"
                                          expression (src/partialGrammar.ml[144,5264+43]..src/partialGrammar.ml[144,5264+48])
                                            Texp_ident "assoc/522"
                                        expression (src/partialGrammar.ml[145,5314+6]..src/partialGrammar.ml[145,5314+13])
                                          Texp_ident "grammar/699"
                              <case>
                                pattern (src/partialGrammar.ml[147,5329+4]..src/partialGrammar.ml[147,5329+26])
                                  Tpat_value
                                  pattern (src/partialGrammar.ml[147,5329+4]..src/partialGrammar.ml[147,5329+26])
                                    Tpat_construct "DGrammarAttribute"
                                    [
                                      pattern (src/partialGrammar.ml[147,5329+22]..src/partialGrammar.ml[147,5329+26])
                                        Tpat_var "attr/524"
                                    ]
                                    None
                                expression (src/partialGrammar.ml[148,5359+6]..src/partialGrammar.ml[149,5380+69])
                                  Texp_record
                                    fields =
                                      [
                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                        "p_grammar_attributes"
                                          expression (src/partialGrammar.ml[149,5380+31]..src/partialGrammar.ml[149,5380+67])
                                            Texp_construct "::"
                                            [
                                              expression (src/partialGrammar.ml[149,5380+31]..src/partialGrammar.ml[149,5380+35])
                                                Texp_ident "attr/524"
                                              expression (src/partialGrammar.ml[149,5380+39]..src/partialGrammar.ml[149,5380+67])
                                                Texp_field
                                                expression (src/partialGrammar.ml[149,5380+39]..src/partialGrammar.ml[149,5380+46])
                                                  Texp_ident "grammar/469"
                                                "p_grammar_attributes"
                                            ]
                                        <kept>                                        <kept>                                      ]
                                    representation =
                                      Record_regular
                                    extended_expression =
                                      Some
                                        expression (src/partialGrammar.ml[148,5359+8]..src/partialGrammar.ml[148,5359+15])
                                          Texp_ident "grammar/469"
                              <case>
                                pattern (src/partialGrammar.ml[151,5451+4]..src/partialGrammar.ml[151,5451+38])
                                  Tpat_value
                                  pattern (src/partialGrammar.ml[151,5451+4]..src/partialGrammar.ml[151,5451+38])
                                    Tpat_construct "DSymbolAttributes"
                                    [
                                      pattern (src/partialGrammar.ml[151,5451+23]..src/partialGrammar.ml[151,5451+30])
                                        Tpat_var "actuals/525"
                                      pattern (src/partialGrammar.ml[151,5451+32]..src/partialGrammar.ml[151,5451+37])
                                        Tpat_var "attrs/526"
                                    ]
                                    None
                                expression (src/partialGrammar.ml[152,5493+6]..src/partialGrammar.ml[153,5514+79])
                                  Texp_record
                                    fields =
                                      [
                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                        <kept>                                        "p_symbol_attributes"
                                          expression (src/partialGrammar.ml[153,5514+30]..src/partialGrammar.ml[153,5514+77])
                                            Texp_construct "::"
                                            [
                                              expression (src/partialGrammar.ml[153,5514+30]..src/partialGrammar.ml[153,5514+46])
                                                Texp_tuple
                                                [
                                                  expression (src/partialGrammar.ml[153,5514+31]..src/partialGrammar.ml[153,5514+38])
                                                    Texp_ident "actuals/525"
                                                  expression (src/partialGrammar.ml[153,5514+40]..src/partialGrammar.ml[153,5514+45])
                                                    Texp_ident "attrs/526"
                                                ]
                                              expression (src/partialGrammar.ml[153,5514+50]..src/partialGrammar.ml[153,5514+77])
                                                Texp_field
                                                expression (src/partialGrammar.ml[153,5514+50]..src/partialGrammar.ml[153,5514+57])
                                                  Texp_ident "grammar/469"
                                                "p_symbol_attributes"
                                            ]
                                        <kept>                                      ]
                                    representation =
                                      Record_regular
                                    extended_expression =
                                      Some
                                        expression (src/partialGrammar.ml[152,5493+8]..src/partialGrammar.ml[152,5493+15])
                                          Texp_ident "grammar/469"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[159,5778+0]..src/partialGrammar.ml[164,5884+68])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[159,5778+4]..src/partialGrammar.ml[159,5778+17])
          Tpat_var "join_postlude/719"
        expression (src/partialGrammar.ml[159,5778+18]..src/partialGrammar.ml[164,5884+68]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[159,5778+18]..src/partialGrammar.ml[159,5778+26])
                Tpat_var "postlude/721"
              expression (src/partialGrammar.ml[159,5778+27]..src/partialGrammar.ml[164,5884+68]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[159,5778+27]..src/partialGrammar.ml[159,5778+34])
                      Tpat_var "grammar/722"
                    expression (src/partialGrammar.ml[160,5815+2]..src/partialGrammar.ml[164,5884+68])
                      Texp_match
                      expression (src/partialGrammar.ml[160,5815+8]..src/partialGrammar.ml[160,5815+16])
                        Texp_ident "postlude/721"
                      [
                        <case>
                          pattern (src/partialGrammar.ml[161,5837+4]..src/partialGrammar.ml[161,5837+8])
                            Tpat_value
                            pattern (src/partialGrammar.ml[161,5837+4]..src/partialGrammar.ml[161,5837+8])
                              Tpat_construct "None"
                              []
                              None
                          expression (src/partialGrammar.ml[162,5849+6]..src/partialGrammar.ml[162,5849+13])
                            Texp_ident "grammar/722"
                        <case>
                          pattern (src/partialGrammar.ml[163,5863+4]..src/partialGrammar.ml[163,5863+17])
                            Tpat_value
                            pattern (src/partialGrammar.ml[163,5863+4]..src/partialGrammar.ml[163,5863+17])
                              Tpat_construct "Some"
                              [
                                pattern (src/partialGrammar.ml[163,5863+9]..src/partialGrammar.ml[163,5863+17])
                                  Tpat_var "postlude/723"
                              ]
                              None
                          expression (src/partialGrammar.ml[164,5884+6]..src/partialGrammar.ml[164,5884+68])
                            Texp_record
                              fields =
                                [
                                  <kept>                                  "p_postludes"
                                    expression (src/partialGrammar.ml[164,5884+35]..src/partialGrammar.ml[164,5884+66])
                                      Texp_construct "::"
                                      [
                                        expression (src/partialGrammar.ml[164,5884+35]..src/partialGrammar.ml[164,5884+43])
                                          Texp_ident "postlude/723"
                                        expression (src/partialGrammar.ml[164,5884+47]..src/partialGrammar.ml[164,5884+66])
                                          Texp_field
                                          expression (src/partialGrammar.ml[164,5884+47]..src/partialGrammar.ml[164,5884+54])
                                            Texp_ident "grammar/722"
                                          "p_postludes"
                                      ]
                                  <kept>                                  <kept>                                  <kept>                                  <kept>                                  <kept>                                  <kept>                                  <kept>                                  <kept>                                ]
                              representation =
                                Record_regular
                              extended_expression =
                                Some
                                  expression (src/partialGrammar.ml[164,5884+8]..src/partialGrammar.ml[164,5884+15])
                                    Texp_ident "grammar/722"
                      ]
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[170,6159+0]..src/partialGrammar.ml[171,6175+35])
    Tstr_type Rec
    [
      type_declaration renaming/724 (src/partialGrammar.ml[170,6159+0]..src/partialGrammar.ml[171,6175+35])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/partialGrammar.ml[171,6175+3]..src/partialGrammar.ml[171,6175+35])
              Ttyp_constr "list/9!"
              [
                core_type (src/partialGrammar.ml[171,6175+4]..src/partialGrammar.ml[171,6175+29])
                  Ttyp_tuple
                  [
                    core_type (src/partialGrammar.ml[171,6175+4]..src/partialGrammar.ml[171,6175+15])
                      Ttyp_constr "Dune__exe!.Syntax.nonterminal"
                      []
                    core_type (src/partialGrammar.ml[171,6175+18]..src/partialGrammar.ml[171,6175+29])
                      Ttyp_constr "Dune__exe!.Syntax.nonterminal"
                      []
                  ]
              ]
    ]
  structure_item (src/partialGrammar.ml[173,6212+0]..src/partialGrammar.ml[174,6236+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[173,6212+4]..src/partialGrammar.ml[173,6212+21])
          Tpat_var "identity_renaming/725"
        expression (src/partialGrammar.ml[174,6236+2]..src/partialGrammar.ml[174,6236+4])
          Texp_construct "[]"
          []
    ]
  structure_item (src/partialGrammar.ml[176,6242+0]..src/partialGrammar.ml[177,6297+36])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[176,6242+4]..src/partialGrammar.ml[176,6242+23])
          Tpat_var "rewrite_nonterminal/726"
        expression (src/partialGrammar.ml[176,6242+24]..src/partialGrammar.ml[177,6297+36]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[176,6242+25]..src/partialGrammar.ml[176,6242+28])
                extra
                  Tpat_extra_constraint
                  core_type (src/partialGrammar.ml[176,6242+31]..src/partialGrammar.ml[176,6242+39])
                    Ttyp_constr "renaming/724"
                    []
                Tpat_alias "phi/728"
                pattern (src/partialGrammar.ml[176,6242+25]..src/partialGrammar.ml[176,6242+28])
                  Tpat_any
              expression (src/partialGrammar.ml[176,6242+41]..src/partialGrammar.ml[177,6297+36]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[176,6242+41]..src/partialGrammar.ml[176,6242+52])
                      Tpat_var "nonterminal/729"
                    expression (src/partialGrammar.ml[177,6297+2]..src/partialGrammar.ml[177,6297+36])
                      Texp_apply
                      expression (src/partialGrammar.ml[177,6297+2]..src/partialGrammar.ml[177,6297+20])
                        Texp_ident "Dune__exe!.Misc.support_assoc"
                      [
                        <arg>
                          Nolabel
                          expression (src/partialGrammar.ml[177,6297+21]..src/partialGrammar.ml[177,6297+24])
                            Texp_ident "phi/728"
                        <arg>
                          Nolabel
                          expression (src/partialGrammar.ml[177,6297+25]..src/partialGrammar.ml[177,6297+36])
                            Texp_ident "nonterminal/729"
                      ]
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[179,6335+0]..src/partialGrammar.ml[180,6373+67])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[179,6335+4]..src/partialGrammar.ml[179,6335+21])
          Tpat_var "rewrite_parameter/766"
        expression (src/partialGrammar.ml[179,6335+22]..src/partialGrammar.ml[180,6373+67]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[179,6335+22]..src/partialGrammar.ml[179,6335+25])
                Tpat_var "phi/768"
              expression (src/partialGrammar.ml[179,6335+26]..src/partialGrammar.ml[180,6373+67]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[179,6335+26]..src/partialGrammar.ml[179,6335+35])
                      Tpat_var "parameter/769"
                    expression (src/partialGrammar.ml[180,6373+2]..src/partialGrammar.ml[180,6373+67])
                      Texp_apply
                      expression (src/partialGrammar.ml[180,6373+2]..src/partialGrammar.ml[180,6373+16])
                        Texp_ident "Dune__exe!.Parameters.map"
                      [
                        <arg>
                          Nolabel
                          expression (src/partialGrammar.ml[180,6373+17]..src/partialGrammar.ml[180,6373+57])
                            Texp_apply
                            expression (src/partialGrammar.ml[180,6373+18]..src/partialGrammar.ml[180,6373+31])
                              Texp_ident "Dune__exe!.Positions.map"
                            [
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[180,6373+32]..src/partialGrammar.ml[180,6373+56])
                                  Texp_apply
                                  expression (src/partialGrammar.ml[180,6373+33]..src/partialGrammar.ml[180,6373+51])
                                    Texp_ident "Dune__exe!.Misc.support_assoc"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[180,6373+52]..src/partialGrammar.ml[180,6373+55])
                                        Texp_ident "phi/768"
                                  ]
                            ]
                        <arg>
                          Nolabel
                          expression (src/partialGrammar.ml[180,6373+58]..src/partialGrammar.ml[180,6373+67])
                            Texp_ident "parameter/769"
                      ]
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[182,6442+0]..src/partialGrammar.ml[183,6506+45])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[182,6442+4]..src/partialGrammar.ml[182,6442+20])
          Tpat_var "rewrite_producer/785"
        expression (src/partialGrammar.ml[182,6442+21]..src/partialGrammar.ml[183,6506+45]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[182,6442+21]..src/partialGrammar.ml[182,6442+24])
                Tpat_var "phi/787"
              expression (src/partialGrammar.ml[182,6442+25]..src/partialGrammar.ml[183,6506+45]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[182,6442+26]..src/partialGrammar.ml[182,6442+49])
                      extra
                        Tpat_extra_constraint
                        core_type (src/partialGrammar.ml[182,6442+52]..src/partialGrammar.ml[182,6442+60])
                          Ttyp_constr "Dune__exe!.Syntax.producer"
                          []
                      Tpat_tuple
                      [
                        pattern (src/partialGrammar.ml[182,6442+27]..src/partialGrammar.ml[182,6442+30])
                          Tpat_var "ido/788"
                        pattern (src/partialGrammar.ml[182,6442+32]..src/partialGrammar.ml[182,6442+41])
                          Tpat_var "parameter/789"
                        pattern (src/partialGrammar.ml[182,6442+43]..src/partialGrammar.ml[182,6442+48])
                          Tpat_var "attrs/790"
                      ]
                    expression (src/partialGrammar.ml[183,6506+2]..src/partialGrammar.ml[183,6506+45])
                      Texp_tuple
                      [
                        expression (src/partialGrammar.ml[183,6506+2]..src/partialGrammar.ml[183,6506+5])
                          Texp_ident "ido/788"
                        expression (src/partialGrammar.ml[183,6506+7]..src/partialGrammar.ml[183,6506+38])
                          Texp_apply
                          expression (src/partialGrammar.ml[183,6506+7]..src/partialGrammar.ml[183,6506+24])
                            Texp_ident "rewrite_parameter/766"
                          [
                            <arg>
                              Nolabel
                              expression (src/partialGrammar.ml[183,6506+25]..src/partialGrammar.ml[183,6506+28])
                                Texp_ident "phi/787"
                            <arg>
                              Nolabel
                              expression (src/partialGrammar.ml[183,6506+29]..src/partialGrammar.ml[183,6506+38])
                                Texp_ident "parameter/789"
                          ]
                        expression (src/partialGrammar.ml[183,6506+40]..src/partialGrammar.ml[183,6506+45])
                          Texp_ident "attrs/790"
                      ]
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[185,6553+0]..src/partialGrammar.ml[186,6619+74])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[185,6553+4]..src/partialGrammar.ml[185,6553+18])
          Tpat_var "rewrite_branch/792"
        expression (src/partialGrammar.ml[185,6553+19]..src/partialGrammar.ml[186,6619+74]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[185,6553+19]..src/partialGrammar.ml[185,6553+22])
                Tpat_var "phi/794"
              expression (src/partialGrammar.ml[185,6553+23]..src/partialGrammar.ml[186,6619+74]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[185,6553+23]..src/partialGrammar.ml[185,6553+63])
                      Tpat_alias "branch/796"
                      pattern (src/partialGrammar.ml[185,6553+24]..src/partialGrammar.ml[185,6553+52])
                        Tpat_record
                        [
                          "pr_producers"
                            pattern (src/partialGrammar.ml[185,6553+41]..src/partialGrammar.ml[185,6553+50])
                              Tpat_var "producers/795"
                        ]
                    expression (src/partialGrammar.ml[186,6619+2]..src/partialGrammar.ml[186,6619+74])
                      Texp_record
                        fields =
                          [
                            <kept>                            "pr_producers"
                              expression (src/partialGrammar.ml[186,6619+31]..src/partialGrammar.ml[186,6619+72])
                                Texp_apply
                                expression (src/partialGrammar.ml[186,6619+31]..src/partialGrammar.ml[186,6619+39])
                                  Texp_ident "Stdlib!.List.map"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/partialGrammar.ml[186,6619+40]..src/partialGrammar.ml[186,6619+62])
                                      Texp_apply
                                      expression (src/partialGrammar.ml[186,6619+41]..src/partialGrammar.ml[186,6619+57])
                                        Texp_ident "rewrite_producer/785"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/partialGrammar.ml[186,6619+58]..src/partialGrammar.ml[186,6619+61])
                                            Texp_ident "phi/794"
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/partialGrammar.ml[186,6619+63]..src/partialGrammar.ml[186,6619+72])
                                      Texp_ident "producers/795"
                                ]
                            <kept>                            <kept>                            <kept>                          ]
                        representation =
                          Record_regular
                        extended_expression =
                          Some
                            expression (src/partialGrammar.ml[186,6619+4]..src/partialGrammar.ml[186,6619+10])
                              Texp_ident "branch/796"
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[188,6695+0]..src/partialGrammar.ml[193,6782+44])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[188,6695+4]..src/partialGrammar.ml[188,6695+20])
          Tpat_var "rewrite_branches/863"
        expression (src/partialGrammar.ml[188,6695+21]..src/partialGrammar.ml[193,6782+44]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[188,6695+21]..src/partialGrammar.ml[188,6695+24])
                Tpat_var "phi/865"
              expression (src/partialGrammar.ml[188,6695+25]..src/partialGrammar.ml[193,6782+44]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[188,6695+25]..src/partialGrammar.ml[188,6695+33])
                      Tpat_var "branches/866"
                    expression (src/partialGrammar.ml[189,6731+2]..src/partialGrammar.ml[193,6782+44])
                      Texp_match
                      expression (src/partialGrammar.ml[189,6731+8]..src/partialGrammar.ml[189,6731+11])
                        Texp_ident "phi/865"
                      [
                        <case>
                          pattern (src/partialGrammar.ml[190,6748+4]..src/partialGrammar.ml[190,6748+6])
                            Tpat_value
                            pattern (src/partialGrammar.ml[190,6748+4]..src/partialGrammar.ml[190,6748+6])
                              Tpat_construct "[]"
                              []
                              None
                          expression (src/partialGrammar.ml[191,6758+6]..src/partialGrammar.ml[191,6758+14])
                            Texp_ident "branches/866"
                        <case>
                          pattern (src/partialGrammar.ml[192,6773+4]..src/partialGrammar.ml[192,6773+5])
                            Tpat_value
                            pattern (src/partialGrammar.ml[192,6773+4]..src/partialGrammar.ml[192,6773+5])
                              Tpat_any
                          expression (src/partialGrammar.ml[193,6782+6]..src/partialGrammar.ml[193,6782+44])
                            Texp_apply
                            expression (src/partialGrammar.ml[193,6782+6]..src/partialGrammar.ml[193,6782+14])
                              Texp_ident "Stdlib!.List.map"
                            [
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[193,6782+15]..src/partialGrammar.ml[193,6782+35])
                                  Texp_apply
                                  expression (src/partialGrammar.ml[193,6782+16]..src/partialGrammar.ml[193,6782+30])
                                    Texp_ident "rewrite_branch/792"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[193,6782+31]..src/partialGrammar.ml[193,6782+34])
                                        Texp_ident "phi/865"
                                  ]
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[193,6782+36]..src/partialGrammar.ml[193,6782+44])
                                  Texp_ident "branches/866"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[195,6828+0]..src/partialGrammar.ml[195,6828+25])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[195,6828+4]..src/partialGrammar.ml[195,6828+17])
          Tpat_var "fresh_counter/867"
        expression (src/partialGrammar.ml[195,6828+20]..src/partialGrammar.ml[195,6828+25])
          Texp_apply
          expression (src/partialGrammar.ml[195,6828+20]..src/partialGrammar.ml[195,6828+23])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (src/partialGrammar.ml[195,6828+24]..src/partialGrammar.ml[195,6828+25])
                Texp_constant Const_int 0
          ]
    ]
  structure_item (src/partialGrammar.ml[197,6855+0]..src/partialGrammar.ml[197,6855+31])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[197,6855+4]..src/partialGrammar.ml[197,6855+9])
          Tpat_var "names/868"
        expression (src/partialGrammar.ml[197,6855+12]..src/partialGrammar.ml[197,6855+31])
          Texp_apply
          expression (src/partialGrammar.ml[197,6855+12]..src/partialGrammar.ml[197,6855+15])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (src/partialGrammar.ml[197,6855+16]..src/partialGrammar.ml[197,6855+31])
                Texp_ident "Dune__exe!.StringSet.empty"
          ]
    ]
  structure_item (src/partialGrammar.ml[199,6888+0]..src/partialGrammar.ml[200,6908+36])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[199,6888+4]..src/partialGrammar.ml[199,6888+12])
          Tpat_var "use_name/915"
        expression (src/partialGrammar.ml[199,6888+13]..src/partialGrammar.ml[200,6908+36]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[199,6888+13]..src/partialGrammar.ml[199,6888+17])
                Tpat_var "name/917"
              expression (src/partialGrammar.ml[200,6908+2]..src/partialGrammar.ml[200,6908+36])
                Texp_apply
                expression (src/partialGrammar.ml[200,6908+8]..src/partialGrammar.ml[200,6908+10])
                  Texp_ident "Stdlib!.:="
                [
                  <arg>
                    Nolabel
                    expression (src/partialGrammar.ml[200,6908+2]..src/partialGrammar.ml[200,6908+7])
                      Texp_ident "names/868"
                  <arg>
                    Nolabel
                    expression (src/partialGrammar.ml[200,6908+11]..src/partialGrammar.ml[200,6908+36])
                      Texp_apply
                      expression (src/partialGrammar.ml[200,6908+11]..src/partialGrammar.ml[200,6908+24])
                        Texp_ident "Dune__exe!.StringSet.add"
                      [
                        <arg>
                          Nolabel
                          expression (src/partialGrammar.ml[200,6908+25]..src/partialGrammar.ml[200,6908+29])
                            Texp_ident "name/917"
                        <arg>
                          Nolabel
                          expression (src/partialGrammar.ml[200,6908+30]..src/partialGrammar.ml[200,6908+36])
                            Texp_apply
                            expression (src/partialGrammar.ml[200,6908+30]..src/partialGrammar.ml[200,6908+31])
                              Texp_ident "Stdlib!.!"
                            [
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[200,6908+31]..src/partialGrammar.ml[200,6908+36])
                                  Texp_ident "names/868"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[202,6946+0]..src/partialGrammar.ml[203,6967+27])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[202,6946+4]..src/partialGrammar.ml[202,6946+13])
          Tpat_var "used_name/964"
        expression (src/partialGrammar.ml[202,6946+14]..src/partialGrammar.ml[203,6967+27]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[202,6946+14]..src/partialGrammar.ml[202,6946+18])
                Tpat_var "name/966"
              expression (src/partialGrammar.ml[203,6967+2]..src/partialGrammar.ml[203,6967+27])
                Texp_apply
                expression (src/partialGrammar.ml[203,6967+2]..src/partialGrammar.ml[203,6967+15])
                  Texp_ident "Dune__exe!.StringSet.mem"
                [
                  <arg>
                    Nolabel
                    expression (src/partialGrammar.ml[203,6967+16]..src/partialGrammar.ml[203,6967+20])
                      Texp_ident "name/966"
                  <arg>
                    Nolabel
                    expression (src/partialGrammar.ml[203,6967+21]..src/partialGrammar.ml[203,6967+27])
                      Texp_apply
                      expression (src/partialGrammar.ml[203,6967+21]..src/partialGrammar.ml[203,6967+22])
                        Texp_ident "Stdlib!.!"
                      [
                        <arg>
                          Nolabel
                          expression (src/partialGrammar.ml[203,6967+22]..src/partialGrammar.ml[203,6967+27])
                            Texp_ident "names/868"
                      ]
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[205,6996+0]..src/partialGrammar.ml[215,7202+5])
    Tstr_value Rec
    [
      <def>
        pattern (src/partialGrammar.ml[205,6996+8]..src/partialGrammar.ml[205,6996+13])
          Tpat_var "fresh/967"
        expression (src/partialGrammar.ml[205,6996+14]..src/partialGrammar.ml[215,7202+5]) ghost
          Texp_function
          Optional "hint"
          [
            <case>
              pattern (src/partialGrammar.ml[205,6996+16]..src/partialGrammar.ml[205,6996+26]) ghost
                Tpat_var "*opt*/968"
              expression (src/partialGrammar.ml[205,6996+14]..src/partialGrammar.ml[215,7202+5]) ghost
                attribute "#default"
                  []
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/partialGrammar.ml[205,6996+16]..src/partialGrammar.ml[205,6996+20])
                      Tpat_var "hint/969"
                    expression (src/partialGrammar.ml[205,6996+16]..src/partialGrammar.ml[205,6996+26]) ghost
                      Texp_match
                      expression (src/partialGrammar.ml[205,6996+14]..src/partialGrammar.ml[215,7202+5]) ghost
                        Texp_ident "*opt*/968"
                      [
                        <case>
                          pattern (src/partialGrammar.ml[205,6996+23]..src/partialGrammar.ml[205,6996+26]) ghost
                            Tpat_value
                            pattern (src/partialGrammar.ml[205,6996+23]..src/partialGrammar.ml[205,6996+26]) ghost
                              Tpat_construct "*predef*.Some"
                              [
                                pattern (src/partialGrammar.ml[205,6996+23]..src/partialGrammar.ml[205,6996+26]) ghost
                                  Tpat_var "*sth*/970"
                              ]
                              None
                          expression (src/partialGrammar.ml[205,6996+23]..src/partialGrammar.ml[205,6996+26]) ghost
                            Texp_ident "*sth*/970"
                        <case>
                          pattern (src/partialGrammar.ml[205,6996+23]..src/partialGrammar.ml[205,6996+26])
                            Tpat_value
                            pattern (src/partialGrammar.ml[205,6996+23]..src/partialGrammar.ml[205,6996+26])
                              Tpat_construct "*predef*.None"
                              []
                              None
                          expression (src/partialGrammar.ml[205,6996+23]..src/partialGrammar.ml[205,6996+26])
                            Texp_constant Const_string("v",(src/partialGrammar.ml[205,6996+24]..src/partialGrammar.ml[205,6996+25]),None)
                      ]
                ]
                expression (src/partialGrammar.ml[205,6996+28]..src/partialGrammar.ml[215,7202+5]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/partialGrammar.ml[205,6996+28]..src/partialGrammar.ml[205,6996+30])
                        Tpat_construct "()"
                        []
                        None
                      expression (src/partialGrammar.ml[206,7029+2]..src/partialGrammar.ml[215,7202+5])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/partialGrammar.ml[206,7029+6]..src/partialGrammar.ml[206,7029+10])
                              Tpat_var "name/971"
                            expression (src/partialGrammar.ml[207,7042+4]..src/partialGrammar.ml[208,7066+39])
                              Texp_sequence
                              expression (src/partialGrammar.ml[207,7042+4]..src/partialGrammar.ml[207,7042+22])
                                Texp_apply
                                expression (src/partialGrammar.ml[207,7042+4]..src/partialGrammar.ml[207,7042+8])
                                  Texp_ident "Stdlib!.incr"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/partialGrammar.ml[207,7042+9]..src/partialGrammar.ml[207,7042+22])
                                      Texp_ident "fresh_counter/867"
                                ]
                              expression (src/partialGrammar.ml[208,7066+4]..src/partialGrammar.ml[208,7066+39])
                                Texp_apply
                                expression (src/partialGrammar.ml[208,7066+9]..src/partialGrammar.ml[208,7066+10])
                                  Texp_ident "Stdlib!.^"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/partialGrammar.ml[208,7066+4]..src/partialGrammar.ml[208,7066+8])
                                      Texp_ident "hint/969"
                                  <arg>
                                    Nolabel
                                    expression (src/partialGrammar.ml[208,7066+11]..src/partialGrammar.ml[208,7066+39])
                                      Texp_apply
                                      expression (src/partialGrammar.ml[208,7066+11]..src/partialGrammar.ml[208,7066+24])
                                        Texp_ident "Stdlib!.string_of_int"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/partialGrammar.ml[208,7066+25]..src/partialGrammar.ml[208,7066+39])
                                            Texp_apply
                                            expression (src/partialGrammar.ml[208,7066+25]..src/partialGrammar.ml[208,7066+26])
                                              Texp_ident "Stdlib!.!"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/partialGrammar.ml[208,7066+26]..src/partialGrammar.ml[208,7066+39])
                                                  Texp_ident "fresh_counter/867"
                                            ]
                                      ]
                                ]
                        ]
                        expression (src/partialGrammar.ml[210,7111+4]..src/partialGrammar.ml[215,7202+5])
                          Texp_ifthenelse
                          expression (src/partialGrammar.ml[210,7111+7]..src/partialGrammar.ml[210,7111+21])
                            Texp_apply
                            expression (src/partialGrammar.ml[210,7111+7]..src/partialGrammar.ml[210,7111+16])
                              Texp_ident "used_name/964"
                            [
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[210,7111+17]..src/partialGrammar.ml[210,7111+21])
                                  Texp_ident "name/971"
                            ]
                          expression (src/partialGrammar.ml[211,7138+6]..src/partialGrammar.ml[211,7138+20])
                            Texp_apply
                            expression (src/partialGrammar.ml[211,7138+6]..src/partialGrammar.ml[211,7138+11])
                              Texp_ident "fresh/967"
                            [
                              <arg>
                                Optional "hint"
                                expression (src/partialGrammar.ml[211,7138+13]..src/partialGrammar.ml[211,7138+17])
                                  Texp_construct "Some"
                                  [
                                    expression (src/partialGrammar.ml[211,7138+13]..src/partialGrammar.ml[211,7138+17])
                                      Texp_ident "hint/969"
                                  ]
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[211,7138+18]..src/partialGrammar.ml[211,7138+20])
                                  Texp_construct "()"
                                  []
                            ]
                          Some
                            expression (src/partialGrammar.ml[212,7159+9]..src/partialGrammar.ml[215,7202+5])
                              Texp_sequence
                              expression (src/partialGrammar.ml[213,7170+6]..src/partialGrammar.ml[213,7170+19])
                                Texp_apply
                                expression (src/partialGrammar.ml[213,7170+6]..src/partialGrammar.ml[213,7170+14])
                                  Texp_ident "use_name/915"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/partialGrammar.ml[213,7170+15]..src/partialGrammar.ml[213,7170+19])
                                      Texp_ident "name/971"
                                ]
                              expression (src/partialGrammar.ml[214,7191+6]..src/partialGrammar.ml[214,7191+10])
                                Texp_ident "name/971"
                  ]
          ]
    ]
  structure_item (src/partialGrammar.ml[219,7293+0]..src/partialGrammar.ml[226,7590+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[219,7293+4]..src/partialGrammar.ml[219,7293+21])
          Tpat_var "alphaconvert_rule/973"
        expression (src/partialGrammar.ml[219,7293+22]..src/partialGrammar.ml[226,7590+5]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[219,7293+22]..src/partialGrammar.ml[219,7293+32])
                Tpat_var "parameters/975"
              expression (src/partialGrammar.ml[219,7293+33]..src/partialGrammar.ml[226,7590+5]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[219,7293+33]..src/partialGrammar.ml[219,7293+38])
                      Tpat_var "prule/976"
                    expression (src/partialGrammar.ml[220,7334+2]..src/partialGrammar.ml[226,7590+5])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/partialGrammar.ml[220,7334+6]..src/partialGrammar.ml[220,7334+9])
                            Tpat_var "phi/977"
                          expression (src/partialGrammar.ml[221,7346+4]..src/partialGrammar.ml[221,7346+77])
                            Texp_apply
                            expression (src/partialGrammar.ml[221,7346+4]..src/partialGrammar.ml[221,7346+16])
                              Texp_ident "Stdlib!.List.combine"
                            [
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[221,7346+17]..src/partialGrammar.ml[221,7346+27])
                                  Texp_ident "parameters/975"
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[221,7346+28]..src/partialGrammar.ml[221,7346+77])
                                  Texp_apply
                                  expression (src/partialGrammar.ml[221,7346+29]..src/partialGrammar.ml[221,7346+37])
                                    Texp_ident "Stdlib!.List.map"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[221,7346+38]..src/partialGrammar.ml[221,7346+65])
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/partialGrammar.ml[221,7346+43]..src/partialGrammar.ml[221,7346+44])
                                              Tpat_var "x/978"
                                            expression (src/partialGrammar.ml[221,7346+48]..src/partialGrammar.ml[221,7346+64])
                                              Texp_apply
                                              expression (src/partialGrammar.ml[221,7346+48]..src/partialGrammar.ml[221,7346+53])
                                                Texp_ident "fresh/967"
                                              [
                                                <arg>
                                                  Optional "hint"
                                                  expression (src/partialGrammar.ml[221,7346+60]..src/partialGrammar.ml[221,7346+61])
                                                    Texp_construct "Some"
                                                    [
                                                      expression (src/partialGrammar.ml[221,7346+60]..src/partialGrammar.ml[221,7346+61])
                                                        Texp_ident "x/978"
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (src/partialGrammar.ml[221,7346+62]..src/partialGrammar.ml[221,7346+64])
                                                    Texp_construct "()"
                                                    []
                                              ]
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[221,7346+66]..src/partialGrammar.ml[221,7346+76])
                                        Texp_ident "parameters/975"
                                  ]
                            ]
                      ]
                      expression (src/partialGrammar.ml[223,7429+4]..src/partialGrammar.ml[226,7590+5])
                        Texp_record
                          fields =
                            [
                              <kept>                              <kept>                              <kept>                              <kept>                              <kept>                              "pr_parameters"
                                expression (src/partialGrammar.ml[224,7446+25]..src/partialGrammar.ml[224,7446+78])
                                  Texp_apply
                                  expression (src/partialGrammar.ml[224,7446+25]..src/partialGrammar.ml[224,7446+33])
                                    Texp_ident "Stdlib!.List.map"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[224,7446+34]..src/partialGrammar.ml[224,7446+58])
                                        Texp_apply
                                        expression (src/partialGrammar.ml[224,7446+35]..src/partialGrammar.ml[224,7446+53])
                                          Texp_ident "Dune__exe!.Misc.support_assoc"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/partialGrammar.ml[224,7446+54]..src/partialGrammar.ml[224,7446+57])
                                              Texp_ident "phi/977"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[224,7446+59]..src/partialGrammar.ml[224,7446+78])
                                        Texp_field
                                        expression (src/partialGrammar.ml[224,7446+59]..src/partialGrammar.ml[224,7446+64])
                                          Texp_ident "prule/976"
                                        "pr_parameters"
                                  ]
                              "pr_branches"
                                expression (src/partialGrammar.ml[225,7526+25]..src/partialGrammar.ml[225,7526+63])
                                  Texp_apply
                                  expression (src/partialGrammar.ml[225,7526+25]..src/partialGrammar.ml[225,7526+41])
                                    Texp_ident "rewrite_branches/863"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[225,7526+42]..src/partialGrammar.ml[225,7526+45])
                                        Texp_ident "phi/977"
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[225,7526+46]..src/partialGrammar.ml[225,7526+63])
                                        Texp_field
                                        expression (src/partialGrammar.ml[225,7526+46]..src/partialGrammar.ml[225,7526+51])
                                          Texp_ident "prule/976"
                                        "pr_branches"
                                  ]
                            ]
                          representation =
                            Record_regular
                          extended_expression =
                            Some
                              expression (src/partialGrammar.ml[223,7429+6]..src/partialGrammar.ml[223,7429+11])
                                Texp_ident "prule/976"
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[230,7693+0]..src/partialGrammar.ml[243,8079+62])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[230,7693+4]..src/partialGrammar.ml[230,7693+16])
          Tpat_var "rewrite_rule/979"
        expression (src/partialGrammar.ml[230,7693+17]..src/partialGrammar.ml[243,8079+62]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[230,7693+17]..src/partialGrammar.ml[230,7693+20])
                Tpat_var "phi/981"
              expression (src/partialGrammar.ml[230,7693+21]..src/partialGrammar.ml[243,8079+62]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[230,7693+21]..src/partialGrammar.ml[230,7693+26])
                      Tpat_var "prule/982"
                    expression (src/partialGrammar.ml[231,7722+2]..src/partialGrammar.ml[243,8079+62])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/partialGrammar.ml[231,7722+6]..src/partialGrammar.ml[231,7722+9])
                            Tpat_var "ids/983"
                          expression (src/partialGrammar.ml[232,7734+4]..src/partialGrammar.ml[233,7811+25])
                            Texp_apply
                            expression (src/partialGrammar.ml[232,7734+4]..src/partialGrammar.ml[232,7734+18])
                              Texp_ident "Stdlib!.List.fold_left"
                            [
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[232,7734+19]..src/partialGrammar.ml[232,7734+76])
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/partialGrammar.ml[232,7734+24]..src/partialGrammar.ml[232,7734+27])
                                        Tpat_var "acu/984"
                                      expression (src/partialGrammar.ml[232,7734+28]..src/partialGrammar.ml[232,7734+75]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/partialGrammar.ml[232,7734+28]..src/partialGrammar.ml[232,7734+34])
                                              Tpat_tuple
                                              [
                                                pattern (src/partialGrammar.ml[232,7734+29]..src/partialGrammar.ml[232,7734+30])
                                                  Tpat_var "f/985"
                                                pattern (src/partialGrammar.ml[232,7734+32]..src/partialGrammar.ml[232,7734+33])
                                                  Tpat_var "d/986"
                                              ]
                                            expression (src/partialGrammar.ml[232,7734+38]..src/partialGrammar.ml[232,7734+75])
                                              Texp_apply
                                              expression (src/partialGrammar.ml[232,7734+38]..src/partialGrammar.ml[232,7734+51])
                                                Texp_ident "Dune__exe!.StringSet.add"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/partialGrammar.ml[232,7734+52]..src/partialGrammar.ml[232,7734+53])
                                                    Texp_ident "f/985"
                                                <arg>
                                                  Nolabel
                                                  expression (src/partialGrammar.ml[232,7734+54]..src/partialGrammar.ml[232,7734+75])
                                                    Texp_apply
                                                    expression (src/partialGrammar.ml[232,7734+55]..src/partialGrammar.ml[232,7734+68])
                                                      Texp_ident "Dune__exe!.StringSet.add"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/partialGrammar.ml[232,7734+69]..src/partialGrammar.ml[232,7734+70])
                                                          Texp_ident "d/986"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/partialGrammar.ml[232,7734+71]..src/partialGrammar.ml[232,7734+74])
                                                          Texp_ident "acu/984"
                                                    ]
                                              ]
                                        ]
                                  ]
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[233,7811+6]..src/partialGrammar.ml[233,7811+21])
                                  Texp_ident "Dune__exe!.StringSet.empty"
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[233,7811+22]..src/partialGrammar.ml[233,7811+25])
                                  Texp_ident "phi/981"
                            ]
                      ]
                      expression (src/partialGrammar.ml[235,7842+2]..src/partialGrammar.ml[243,8079+62])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/partialGrammar.ml[235,7842+6]..src/partialGrammar.ml[235,7842+25])
                              Tpat_var "captured_parameters/988"
                            expression (src/partialGrammar.ml[236,7870+4]..src/partialGrammar.ml[236,7870+66])
                              Texp_apply
                              expression (src/partialGrammar.ml[236,7870+4]..src/partialGrammar.ml[236,7870+15])
                                Texp_ident "Stdlib!.List.filter"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/partialGrammar.ml[236,7870+16]..src/partialGrammar.ml[236,7870+46])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/partialGrammar.ml[236,7870+21]..src/partialGrammar.ml[236,7870+22])
                                          Tpat_var "p/989"
                                        expression (src/partialGrammar.ml[236,7870+26]..src/partialGrammar.ml[236,7870+45])
                                          Texp_apply
                                          expression (src/partialGrammar.ml[236,7870+26]..src/partialGrammar.ml[236,7870+39])
                                            Texp_ident "Dune__exe!.StringSet.mem"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/partialGrammar.ml[236,7870+40]..src/partialGrammar.ml[236,7870+41])
                                                Texp_ident "p/989"
                                            <arg>
                                              Nolabel
                                              expression (src/partialGrammar.ml[236,7870+42]..src/partialGrammar.ml[236,7870+45])
                                                Texp_ident "ids/983"
                                          ]
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/partialGrammar.ml[236,7870+47]..src/partialGrammar.ml[236,7870+66])
                                    Texp_field
                                    expression (src/partialGrammar.ml[236,7870+47]..src/partialGrammar.ml[236,7870+52])
                                      Texp_ident "prule/982"
                                    "pr_parameters"
                              ]
                        ]
                        expression (src/partialGrammar.ml[238,7942+2]..src/partialGrammar.ml[243,8079+62])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (src/partialGrammar.ml[238,7942+6]..src/partialGrammar.ml[238,7942+11])
                                Tpat_var "prule/990"
                              expression (src/partialGrammar.ml[239,7956+4]..src/partialGrammar.ml[239,7956+47])
                                Texp_apply
                                expression (src/partialGrammar.ml[239,7956+4]..src/partialGrammar.ml[239,7956+21])
                                  Texp_ident "alphaconvert_rule/973"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/partialGrammar.ml[239,7956+22]..src/partialGrammar.ml[239,7956+41])
                                      Texp_ident "captured_parameters/988"
                                  <arg>
                                    Nolabel
                                    expression (src/partialGrammar.ml[239,7956+42]..src/partialGrammar.ml[239,7956+47])
                                      Texp_ident "prule/982"
                                ]
                          ]
                          expression (src/partialGrammar.ml[241,8009+4]..src/partialGrammar.ml[243,8079+62])
                            Texp_record
                              fields =
                                [
                                  <kept>                                  <kept>                                  "pr_nt"
                                    expression (src/partialGrammar.ml[242,8026+16]..src/partialGrammar.ml[242,8026+51])
                                      Texp_apply
                                      expression (src/partialGrammar.ml[242,8026+16]..src/partialGrammar.ml[242,8026+35])
                                        Texp_ident "rewrite_nonterminal/726"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/partialGrammar.ml[242,8026+36]..src/partialGrammar.ml[242,8026+39])
                                            Texp_ident "phi/981"
                                        <arg>
                                          Nolabel
                                          expression (src/partialGrammar.ml[242,8026+40]..src/partialGrammar.ml[242,8026+51])
                                            Texp_field
                                            expression (src/partialGrammar.ml[242,8026+40]..src/partialGrammar.ml[242,8026+45])
                                              Texp_ident "prule/990"
                                            "pr_nt"
                                      ]
                                  <kept>                                  <kept>                                  <kept>                                  "pr_branches"
                                    expression (src/partialGrammar.ml[243,8079+22]..src/partialGrammar.ml[243,8079+60])
                                      Texp_apply
                                      expression (src/partialGrammar.ml[243,8079+22]..src/partialGrammar.ml[243,8079+38])
                                        Texp_ident "rewrite_branches/863"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/partialGrammar.ml[243,8079+39]..src/partialGrammar.ml[243,8079+42])
                                            Texp_ident "phi/981"
                                        <arg>
                                          Nolabel
                                          expression (src/partialGrammar.ml[243,8079+43]..src/partialGrammar.ml[243,8079+60])
                                            Texp_field
                                            expression (src/partialGrammar.ml[243,8079+43]..src/partialGrammar.ml[243,8079+48])
                                              Texp_ident "prule/990"
                                            "pr_branches"
                                      ]
                                ]
                              representation =
                                Record_regular
                              extended_expression =
                                Some
                                  expression (src/partialGrammar.ml[241,8009+6]..src/partialGrammar.ml[241,8009+11])
                                    Texp_ident "prule/990"
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[245,8143+0]..src/partialGrammar.ml[246,8173+35])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[245,8143+4]..src/partialGrammar.ml[245,8143+17])
          Tpat_var "rewrite_rules/991"
        expression (src/partialGrammar.ml[245,8143+18]..src/partialGrammar.ml[246,8173+35]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[245,8143+18]..src/partialGrammar.ml[245,8143+21])
                Tpat_var "phi/993"
              expression (src/partialGrammar.ml[245,8143+22]..src/partialGrammar.ml[246,8173+35]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[245,8143+22]..src/partialGrammar.ml[245,8143+27])
                      Tpat_var "rules/994"
                    expression (src/partialGrammar.ml[246,8173+2]..src/partialGrammar.ml[246,8173+35])
                      Texp_apply
                      expression (src/partialGrammar.ml[246,8173+2]..src/partialGrammar.ml[246,8173+10])
                        Texp_ident "Stdlib!.List.map"
                      [
                        <arg>
                          Nolabel
                          expression (src/partialGrammar.ml[246,8173+11]..src/partialGrammar.ml[246,8173+29])
                            Texp_apply
                            expression (src/partialGrammar.ml[246,8173+12]..src/partialGrammar.ml[246,8173+24])
                              Texp_ident "rewrite_rule/979"
                            [
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[246,8173+25]..src/partialGrammar.ml[246,8173+28])
                                  Texp_ident "phi/993"
                            ]
                        <arg>
                          Nolabel
                          expression (src/partialGrammar.ml[246,8173+30]..src/partialGrammar.ml[246,8173+35])
                            Texp_ident "rules/994"
                      ]
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[248,8210+0]..src/partialGrammar.ml[254,8402+66])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[248,8210+4]..src/partialGrammar.ml[248,8210+19])
          Tpat_var "rewrite_grammar/995"
        expression (src/partialGrammar.ml[248,8210+20]..src/partialGrammar.ml[254,8402+66]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[248,8210+20]..src/partialGrammar.ml[248,8210+23])
                Tpat_var "phi/997"
              expression (src/partialGrammar.ml[248,8210+24]..src/partialGrammar.ml[254,8402+66]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[248,8210+24]..src/partialGrammar.ml[248,8210+31])
                      Tpat_var "grammar/998"
                    expression (src/partialGrammar.ml[251,8349+2]..src/partialGrammar.ml[254,8402+66])
                      Texp_ifthenelse
                      expression (src/partialGrammar.ml[251,8349+5]..src/partialGrammar.ml[251,8349+28])
                        Texp_apply
                        expression (src/partialGrammar.ml[251,8349+9]..src/partialGrammar.ml[251,8349+10])
                          Texp_ident "Stdlib!.="
                        [
                          <arg>
                            Nolabel
                            expression (src/partialGrammar.ml[251,8349+5]..src/partialGrammar.ml[251,8349+8])
                              Texp_ident "phi/997"
                          <arg>
                            Nolabel
                            expression (src/partialGrammar.ml[251,8349+11]..src/partialGrammar.ml[251,8349+28])
                              Texp_ident "identity_renaming/725"
                        ]
                      expression (src/partialGrammar.ml[252,8383+4]..src/partialGrammar.ml[252,8383+11])
                        Texp_ident "grammar/998"
                      Some
                        expression (src/partialGrammar.ml[254,8402+4]..src/partialGrammar.ml[254,8402+66])
                          Texp_record
                            fields =
                              [
                                <kept>                                <kept>                                <kept>                                "pg_rules"
                                  expression (src/partialGrammar.ml[254,8402+30]..src/partialGrammar.ml[254,8402+64])
                                    Texp_apply
                                    expression (src/partialGrammar.ml[254,8402+30]..src/partialGrammar.ml[254,8402+43])
                                      Texp_ident "rewrite_rules/991"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/partialGrammar.ml[254,8402+44]..src/partialGrammar.ml[254,8402+47])
                                          Texp_ident "phi/997"
                                      <arg>
                                        Nolabel
                                        expression (src/partialGrammar.ml[254,8402+48]..src/partialGrammar.ml[254,8402+64])
                                          Texp_field
                                          expression (src/partialGrammar.ml[254,8402+48]..src/partialGrammar.ml[254,8402+55])
                                            Texp_ident "grammar/998"
                                          "pg_rules"
                                    ]
                              ]
                            representation =
                              Record_regular
                            extended_expression =
                              Some
                                expression (src/partialGrammar.ml[254,8402+6]..src/partialGrammar.ml[254,8402+13])
                                  Texp_ident "grammar/998"
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[260,8670+0]..src/partialGrammar.ml[270,8855+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[260,8670+4]..src/partialGrammar.ml[260,8670+34])
          Tpat_var "is_valid_nonterminal_character/999"
        expression (src/partialGrammar.ml[260,8670+37]..src/partialGrammar.ml[270,8855+11])
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[267,8817+14])
                Tpat_or
                pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[266,8796+20])
                  Tpat_or
                  pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[265,8775+20])
                    Tpat_or
                    pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[264,8754+20])
                      Tpat_or
                      pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[263,8746+7])
                        Tpat_or
                        pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[262,8731+14])
                          Tpat_or
                          pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14])
                            Tpat_or
                            pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                              Tpat_constant Const_char 41
                            pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                              Tpat_or
                              pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                Tpat_constant Const_char 42
                              pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                Tpat_or
                                pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                  Tpat_constant Const_char 43
                                pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                  Tpat_or
                                  pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                    Tpat_constant Const_char 44
                                  pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                    Tpat_or
                                    pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                      Tpat_constant Const_char 45
                                    pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                      Tpat_or
                                      pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                        Tpat_constant Const_char 46
                                      pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                        Tpat_or
                                        pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                          Tpat_constant Const_char 47
                                        pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                          Tpat_or
                                          pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                            Tpat_constant Const_char 48
                                          pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                            Tpat_or
                                            pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                              Tpat_constant Const_char 49
                                            pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                              Tpat_or
                                              pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                Tpat_constant Const_char 4a
                                              pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                Tpat_or
                                                pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                  Tpat_constant Const_char 4b
                                                pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                  Tpat_or
                                                  pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                    Tpat_constant Const_char 4c
                                                  pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                    Tpat_or
                                                    pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                      Tpat_constant Const_char 4d
                                                    pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                      Tpat_or
                                                      pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                        Tpat_constant Const_char 4e
                                                      pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                        Tpat_or
                                                        pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                          Tpat_constant Const_char 4f
                                                        pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                          Tpat_or
                                                          pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                            Tpat_constant Const_char 50
                                                          pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                            Tpat_or
                                                            pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                              Tpat_constant Const_char 51
                                                            pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                              Tpat_or
                                                              pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                                Tpat_constant Const_char 52
                                                              pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                                Tpat_or
                                                                pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                                  Tpat_constant Const_char 53
                                                                pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                                  Tpat_or
                                                                  pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                                    Tpat_constant Const_char 54
                                                                  pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                                    Tpat_or
                                                                    pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                                      Tpat_constant Const_char 55
                                                                    pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                                      Tpat_or
                                                                      pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                                        Tpat_constant Const_char 56
                                                                      pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                                        Tpat_or
                                                                        pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                                          Tpat_constant Const_char 57
                                                                        pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                                          Tpat_or
                                                                          pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                                            Tpat_constant Const_char 58
                                                                          pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                                            Tpat_or
                                                                            pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                                              Tpat_constant Const_char 59
                                                                            pattern (src/partialGrammar.ml[261,8716+4]..src/partialGrammar.ml[261,8716+14]) ghost
                                                                              Tpat_constant Const_char 5a
                          pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14])
                            Tpat_or
                            pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                              Tpat_constant Const_char 61
                            pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                              Tpat_or
                              pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                Tpat_constant Const_char 62
                              pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                Tpat_or
                                pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                  Tpat_constant Const_char 63
                                pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                  Tpat_or
                                  pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                    Tpat_constant Const_char 64
                                  pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                    Tpat_or
                                    pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                      Tpat_constant Const_char 65
                                    pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                      Tpat_or
                                      pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                        Tpat_constant Const_char 66
                                      pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                        Tpat_or
                                        pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                          Tpat_constant Const_char 67
                                        pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                          Tpat_or
                                          pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                            Tpat_constant Const_char 68
                                          pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                            Tpat_or
                                            pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                              Tpat_constant Const_char 69
                                            pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                              Tpat_or
                                              pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                Tpat_constant Const_char 6a
                                              pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                Tpat_or
                                                pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                  Tpat_constant Const_char 6b
                                                pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                  Tpat_or
                                                  pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                    Tpat_constant Const_char 6c
                                                  pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                    Tpat_or
                                                    pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                      Tpat_constant Const_char 6d
                                                    pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                      Tpat_or
                                                      pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                        Tpat_constant Const_char 6e
                                                      pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                        Tpat_or
                                                        pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                          Tpat_constant Const_char 6f
                                                        pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                          Tpat_or
                                                          pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                            Tpat_constant Const_char 70
                                                          pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                            Tpat_or
                                                            pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                              Tpat_constant Const_char 71
                                                            pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                              Tpat_or
                                                              pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                                Tpat_constant Const_char 72
                                                              pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                                Tpat_or
                                                                pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                                  Tpat_constant Const_char 73
                                                                pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                                  Tpat_or
                                                                  pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                                    Tpat_constant Const_char 74
                                                                  pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                                    Tpat_or
                                                                    pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                                      Tpat_constant Const_char 75
                                                                    pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                                      Tpat_or
                                                                      pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                                        Tpat_constant Const_char 76
                                                                      pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                                        Tpat_or
                                                                        pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                                          Tpat_constant Const_char 77
                                                                        pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                                          Tpat_or
                                                                          pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                                            Tpat_constant Const_char 78
                                                                          pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                                            Tpat_or
                                                                            pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                                              Tpat_constant Const_char 79
                                                                            pattern (src/partialGrammar.ml[262,8731+4]..src/partialGrammar.ml[262,8731+14]) ghost
                                                                              Tpat_constant Const_char 7a
                        pattern (src/partialGrammar.ml[263,8746+4]..src/partialGrammar.ml[263,8746+7])
                          Tpat_constant Const_char 5f
                      pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20])
                        Tpat_or
                        pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                          Tpat_constant Const_char c0
                        pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                          Tpat_or
                          pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                            Tpat_constant Const_char c1
                          pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                            Tpat_or
                            pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                              Tpat_constant Const_char c2
                            pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                              Tpat_or
                              pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                Tpat_constant Const_char c3
                              pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                Tpat_or
                                pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                  Tpat_constant Const_char c4
                                pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                  Tpat_or
                                  pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                    Tpat_constant Const_char c5
                                  pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                    Tpat_or
                                    pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                      Tpat_constant Const_char c6
                                    pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                      Tpat_or
                                      pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                        Tpat_constant Const_char c7
                                      pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                        Tpat_or
                                        pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                          Tpat_constant Const_char c8
                                        pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                          Tpat_or
                                          pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                            Tpat_constant Const_char c9
                                          pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                            Tpat_or
                                            pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                              Tpat_constant Const_char ca
                                            pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                              Tpat_or
                                              pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                                Tpat_constant Const_char cb
                                              pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                                Tpat_or
                                                pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                                  Tpat_constant Const_char cc
                                                pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                                  Tpat_or
                                                  pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                                    Tpat_constant Const_char cd
                                                  pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                                    Tpat_or
                                                    pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                                      Tpat_constant Const_char ce
                                                    pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                                      Tpat_or
                                                      pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                                        Tpat_constant Const_char cf
                                                      pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                                        Tpat_or
                                                        pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                                          Tpat_constant Const_char d0
                                                        pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                                          Tpat_or
                                                          pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                                            Tpat_constant Const_char d1
                                                          pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                                            Tpat_or
                                                            pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                                              Tpat_constant Const_char d2
                                                            pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                                              Tpat_or
                                                              pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                                                Tpat_constant Const_char d3
                                                              pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                                                Tpat_or
                                                                pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                                                  Tpat_constant Const_char d4
                                                                pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                                                  Tpat_or
                                                                  pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                                                    Tpat_constant Const_char d5
                                                                  pattern (src/partialGrammar.ml[264,8754+4]..src/partialGrammar.ml[264,8754+20]) ghost
                                                                    Tpat_constant Const_char d6
                    pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20])
                      Tpat_or
                      pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                        Tpat_constant Const_char d8
                      pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                        Tpat_or
                        pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                          Tpat_constant Const_char d9
                        pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                          Tpat_or
                          pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                            Tpat_constant Const_char da
                          pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                            Tpat_or
                            pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                              Tpat_constant Const_char db
                            pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                              Tpat_or
                              pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                Tpat_constant Const_char dc
                              pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                Tpat_or
                                pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                  Tpat_constant Const_char dd
                                pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                  Tpat_or
                                  pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                    Tpat_constant Const_char de
                                  pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                    Tpat_or
                                    pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                      Tpat_constant Const_char df
                                    pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                      Tpat_or
                                      pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                        Tpat_constant Const_char e0
                                      pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                        Tpat_or
                                        pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                          Tpat_constant Const_char e1
                                        pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                          Tpat_or
                                          pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                            Tpat_constant Const_char e2
                                          pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                            Tpat_or
                                            pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                              Tpat_constant Const_char e3
                                            pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                              Tpat_or
                                              pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                Tpat_constant Const_char e4
                                              pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                Tpat_or
                                                pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                  Tpat_constant Const_char e5
                                                pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                  Tpat_or
                                                  pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                    Tpat_constant Const_char e6
                                                  pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                    Tpat_or
                                                    pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                      Tpat_constant Const_char e7
                                                    pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                      Tpat_or
                                                      pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                        Tpat_constant Const_char e8
                                                      pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                        Tpat_or
                                                        pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                          Tpat_constant Const_char e9
                                                        pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                          Tpat_or
                                                          pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                            Tpat_constant Const_char ea
                                                          pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                            Tpat_or
                                                            pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                              Tpat_constant Const_char eb
                                                            pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                              Tpat_or
                                                              pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                                Tpat_constant Const_char ec
                                                              pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                                Tpat_or
                                                                pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                                  Tpat_constant Const_char ed
                                                                pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                                  Tpat_or
                                                                  pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                                    Tpat_constant Const_char ee
                                                                  pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                                    Tpat_or
                                                                    pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                                      Tpat_constant Const_char ef
                                                                    pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                                      Tpat_or
                                                                      pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                                        Tpat_constant Const_char f0
                                                                      pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                                        Tpat_or
                                                                        pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                                          Tpat_constant Const_char f1
                                                                        pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                                          Tpat_or
                                                                          pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                                            Tpat_constant Const_char f2
                                                                          pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                                            Tpat_or
                                                                            pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                                              Tpat_constant Const_char f3
                                                                            pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                                              Tpat_or
                                                                              pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                                                Tpat_constant Const_char f4
                                                                              pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                                                Tpat_or
                                                                                pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                                                  Tpat_constant Const_char f5
                                                                                pattern (src/partialGrammar.ml[265,8775+4]..src/partialGrammar.ml[265,8775+20]) ghost
                                                                                  Tpat_constant Const_char f6
                  pattern (src/partialGrammar.ml[266,8796+4]..src/partialGrammar.ml[266,8796+20])
                    Tpat_or
                    pattern (src/partialGrammar.ml[266,8796+4]..src/partialGrammar.ml[266,8796+20]) ghost
                      Tpat_constant Const_char f8
                    pattern (src/partialGrammar.ml[266,8796+4]..src/partialGrammar.ml[266,8796+20]) ghost
                      Tpat_or
                      pattern (src/partialGrammar.ml[266,8796+4]..src/partialGrammar.ml[266,8796+20]) ghost
                        Tpat_constant Const_char f9
                      pattern (src/partialGrammar.ml[266,8796+4]..src/partialGrammar.ml[266,8796+20]) ghost
                        Tpat_or
                        pattern (src/partialGrammar.ml[266,8796+4]..src/partialGrammar.ml[266,8796+20]) ghost
                          Tpat_constant Const_char fa
                        pattern (src/partialGrammar.ml[266,8796+4]..src/partialGrammar.ml[266,8796+20]) ghost
                          Tpat_or
                          pattern (src/partialGrammar.ml[266,8796+4]..src/partialGrammar.ml[266,8796+20]) ghost
                            Tpat_constant Const_char fb
                          pattern (src/partialGrammar.ml[266,8796+4]..src/partialGrammar.ml[266,8796+20]) ghost
                            Tpat_or
                            pattern (src/partialGrammar.ml[266,8796+4]..src/partialGrammar.ml[266,8796+20]) ghost
                              Tpat_constant Const_char fc
                            pattern (src/partialGrammar.ml[266,8796+4]..src/partialGrammar.ml[266,8796+20]) ghost
                              Tpat_or
                              pattern (src/partialGrammar.ml[266,8796+4]..src/partialGrammar.ml[266,8796+20]) ghost
                                Tpat_constant Const_char fd
                              pattern (src/partialGrammar.ml[266,8796+4]..src/partialGrammar.ml[266,8796+20]) ghost
                                Tpat_or
                                pattern (src/partialGrammar.ml[266,8796+4]..src/partialGrammar.ml[266,8796+20]) ghost
                                  Tpat_constant Const_char fe
                                pattern (src/partialGrammar.ml[266,8796+4]..src/partialGrammar.ml[266,8796+20]) ghost
                                  Tpat_constant Const_char ff
                pattern (src/partialGrammar.ml[267,8817+4]..src/partialGrammar.ml[267,8817+14])
                  Tpat_or
                  pattern (src/partialGrammar.ml[267,8817+4]..src/partialGrammar.ml[267,8817+14]) ghost
                    Tpat_constant Const_char 30
                  pattern (src/partialGrammar.ml[267,8817+4]..src/partialGrammar.ml[267,8817+14]) ghost
                    Tpat_or
                    pattern (src/partialGrammar.ml[267,8817+4]..src/partialGrammar.ml[267,8817+14]) ghost
                      Tpat_constant Const_char 31
                    pattern (src/partialGrammar.ml[267,8817+4]..src/partialGrammar.ml[267,8817+14]) ghost
                      Tpat_or
                      pattern (src/partialGrammar.ml[267,8817+4]..src/partialGrammar.ml[267,8817+14]) ghost
                        Tpat_constant Const_char 32
                      pattern (src/partialGrammar.ml[267,8817+4]..src/partialGrammar.ml[267,8817+14]) ghost
                        Tpat_or
                        pattern (src/partialGrammar.ml[267,8817+4]..src/partialGrammar.ml[267,8817+14]) ghost
                          Tpat_constant Const_char 33
                        pattern (src/partialGrammar.ml[267,8817+4]..src/partialGrammar.ml[267,8817+14]) ghost
                          Tpat_or
                          pattern (src/partialGrammar.ml[267,8817+4]..src/partialGrammar.ml[267,8817+14]) ghost
                            Tpat_constant Const_char 34
                          pattern (src/partialGrammar.ml[267,8817+4]..src/partialGrammar.ml[267,8817+14]) ghost
                            Tpat_or
                            pattern (src/partialGrammar.ml[267,8817+4]..src/partialGrammar.ml[267,8817+14]) ghost
                              Tpat_constant Const_char 35
                            pattern (src/partialGrammar.ml[267,8817+4]..src/partialGrammar.ml[267,8817+14]) ghost
                              Tpat_or
                              pattern (src/partialGrammar.ml[267,8817+4]..src/partialGrammar.ml[267,8817+14]) ghost
                                Tpat_constant Const_char 36
                              pattern (src/partialGrammar.ml[267,8817+4]..src/partialGrammar.ml[267,8817+14]) ghost
                                Tpat_or
                                pattern (src/partialGrammar.ml[267,8817+4]..src/partialGrammar.ml[267,8817+14]) ghost
                                  Tpat_constant Const_char 37
                                pattern (src/partialGrammar.ml[267,8817+4]..src/partialGrammar.ml[267,8817+14]) ghost
                                  Tpat_or
                                  pattern (src/partialGrammar.ml[267,8817+4]..src/partialGrammar.ml[267,8817+14]) ghost
                                    Tpat_constant Const_char 38
                                  pattern (src/partialGrammar.ml[267,8817+4]..src/partialGrammar.ml[267,8817+14]) ghost
                                    Tpat_constant Const_char 39
              expression (src/partialGrammar.ml[268,8835+6]..src/partialGrammar.ml[268,8835+10])
                Texp_construct "true"
                []
            <case>
              pattern (src/partialGrammar.ml[269,8846+4]..src/partialGrammar.ml[269,8846+5])
                Tpat_any
              expression (src/partialGrammar.ml[270,8855+6]..src/partialGrammar.ml[270,8855+11])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (src/partialGrammar.ml[272,8868+0]..src/partialGrammar.ml[278,9128+26])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[272,8868+4]..src/partialGrammar.ml[272,8868+12])
          Tpat_var "restrict/1002"
        expression (src/partialGrammar.ml[272,8868+13]..src/partialGrammar.ml[278,9128+26]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[272,8868+13]..src/partialGrammar.ml[272,8868+21])
                Tpat_var "filename/1004"
              expression (src/partialGrammar.ml[273,8892+2]..src/partialGrammar.ml[278,9128+26])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/partialGrammar.ml[273,8892+6]..src/partialGrammar.ml[273,8892+7])
                      Tpat_var "m/1005"
                    expression (src/partialGrammar.ml[273,8892+10]..src/partialGrammar.ml[273,8892+98])
                      Texp_apply
                      expression (src/partialGrammar.ml[273,8892+10]..src/partialGrammar.ml[273,8892+25])
                        Texp_ident "Stdlib!.Bytes.of_string"
                      [
                        <arg>
                          Nolabel
                          expression (src/partialGrammar.ml[273,8892+26]..src/partialGrammar.ml[273,8892+98])
                            Texp_apply
                            expression (src/partialGrammar.ml[273,8892+27]..src/partialGrammar.ml[273,8892+47])
                              Texp_ident "Stdlib!.Filename.chop_suffix"
                            [
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[273,8892+48]..src/partialGrammar.ml[273,8892+56])
                                  Texp_ident "filename/1004"
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[273,8892+57]..src/partialGrammar.ml[273,8892+97])
                                  Texp_ifthenelse
                                  expression (src/partialGrammar.ml[273,8892+61]..src/partialGrammar.ml[273,8892+73])
                                    Texp_ident "Dune__exe!.Settings.coq"
                                  expression (src/partialGrammar.ml[273,8892+79]..src/partialGrammar.ml[273,8892+84])
                                    Texp_constant Const_string(".vy",(src/partialGrammar.ml[273,8892+80]..src/partialGrammar.ml[273,8892+83]),None)
                                  Some
                                    expression (src/partialGrammar.ml[273,8892+90]..src/partialGrammar.ml[273,8892+96])
                                      Texp_constant Const_string(".mly",(src/partialGrammar.ml[273,8892+91]..src/partialGrammar.ml[273,8892+95]),None)
                            ]
                      ]
                ]
                expression (src/partialGrammar.ml[274,8994+2]..src/partialGrammar.ml[278,9128+26])
                  Texp_sequence
                  expression (src/partialGrammar.ml[274,8994+2]..src/partialGrammar.ml[277,9120+6])
                    Texp_for "i/1185" Up
                    expression (src/partialGrammar.ml[274,8994+10]..src/partialGrammar.ml[274,8994+11])
                      Texp_constant Const_int 0
                    expression (src/partialGrammar.ml[274,8994+15]..src/partialGrammar.ml[274,8994+33])
                      Texp_apply
                      expression (src/partialGrammar.ml[274,8994+30]..src/partialGrammar.ml[274,8994+31])
                        Texp_ident "Stdlib!.-"
                      [
                        <arg>
                          Nolabel
                          expression (src/partialGrammar.ml[274,8994+15]..src/partialGrammar.ml[274,8994+29])
                            Texp_apply
                            expression (src/partialGrammar.ml[274,8994+15]..src/partialGrammar.ml[274,8994+27])
                              Texp_ident "Stdlib!.Bytes.length"
                            [
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[274,8994+28]..src/partialGrammar.ml[274,8994+29])
                                  Texp_ident "m/1005"
                            ]
                        <arg>
                          Nolabel
                          expression (src/partialGrammar.ml[274,8994+32]..src/partialGrammar.ml[274,8994+33])
                            Texp_constant Const_int 1
                      ]
                    expression (src/partialGrammar.ml[275,9031+4]..src/partialGrammar.ml[276,9096+23])
                      Texp_ifthenelse
                      expression (src/partialGrammar.ml[275,9031+7]..src/partialGrammar.ml[275,9031+59])
                        Texp_apply
                        expression (src/partialGrammar.ml[275,9031+7]..src/partialGrammar.ml[275,9031+10])
                          Texp_ident "Stdlib!.not"
                        [
                          <arg>
                            Nolabel
                            expression (src/partialGrammar.ml[275,9031+11]..src/partialGrammar.ml[275,9031+59])
                              Texp_apply
                              expression (src/partialGrammar.ml[275,9031+12]..src/partialGrammar.ml[275,9031+42])
                                Texp_ident "is_valid_nonterminal_character/999"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/partialGrammar.ml[275,9031+43]..src/partialGrammar.ml[275,9031+58])
                                    Texp_apply
                                    expression (src/partialGrammar.ml[275,9031+44]..src/partialGrammar.ml[275,9031+53])
                                      Texp_ident "Stdlib!.Bytes.get"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/partialGrammar.ml[275,9031+54]..src/partialGrammar.ml[275,9031+55])
                                          Texp_ident "m/1005"
                                      <arg>
                                        Nolabel
                                        expression (src/partialGrammar.ml[275,9031+56]..src/partialGrammar.ml[275,9031+57])
                                          Texp_ident "i/1185"
                                    ]
                              ]
                        ]
                      expression (src/partialGrammar.ml[276,9096+6]..src/partialGrammar.ml[276,9096+23])
                        Texp_apply
                        expression (src/partialGrammar.ml[276,9096+6]..src/partialGrammar.ml[276,9096+15])
                          Texp_ident "Stdlib!.Bytes.set"
                        [
                          <arg>
                            Nolabel
                            expression (src/partialGrammar.ml[276,9096+16]..src/partialGrammar.ml[276,9096+17])
                              Texp_ident "m/1005"
                          <arg>
                            Nolabel
                            expression (src/partialGrammar.ml[276,9096+18]..src/partialGrammar.ml[276,9096+19])
                              Texp_ident "i/1185"
                          <arg>
                            Nolabel
                            expression (src/partialGrammar.ml[276,9096+20]..src/partialGrammar.ml[276,9096+23])
                              Texp_constant Const_char 5f
                        ]
                      None
                  expression (src/partialGrammar.ml[278,9128+2]..src/partialGrammar.ml[278,9128+26])
                    Texp_apply
                    expression (src/partialGrammar.ml[278,9128+2]..src/partialGrammar.ml[278,9128+24])
                      Texp_ident "Stdlib!.Bytes.unsafe_to_string"
                    [
                      <arg>
                        Nolabel
                        expression (src/partialGrammar.ml[278,9128+25]..src/partialGrammar.ml[278,9128+26])
                          Texp_ident "m/1005"
                    ]
          ]
    ]
  structure_item (src/partialGrammar.ml[280,9156+0]..src/partialGrammar.ml[285,9306+27])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[280,9156+4]..src/partialGrammar.ml[280,9156+10])
          Tpat_var "rename/1186"
        expression (src/partialGrammar.ml[280,9156+11]..src/partialGrammar.ml[285,9306+27]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[280,9156+11]..src/partialGrammar.ml[280,9156+22])
                Tpat_var "nonterminal/1188"
              expression (src/partialGrammar.ml[280,9156+23]..src/partialGrammar.ml[285,9306+27]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[280,9156+23]..src/partialGrammar.ml[280,9156+31])
                      Tpat_var "filename/1189"
                    expression (src/partialGrammar.ml[281,9190+2]..src/partialGrammar.ml[285,9306+27])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/partialGrammar.ml[281,9190+6]..src/partialGrammar.ml[281,9190+10])
                            Tpat_var "name/1190"
                          expression (src/partialGrammar.ml[281,9190+13]..src/partialGrammar.ml[281,9190+50])
                            Texp_apply
                            expression (src/partialGrammar.ml[281,9190+31]..src/partialGrammar.ml[281,9190+32])
                              Texp_ident "Stdlib!.^"
                            [
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[281,9190+13]..src/partialGrammar.ml[281,9190+30])
                                  Texp_apply
                                  expression (src/partialGrammar.ml[281,9190+13]..src/partialGrammar.ml[281,9190+21])
                                    Texp_ident "restrict/1002"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[281,9190+22]..src/partialGrammar.ml[281,9190+30])
                                        Texp_ident "filename/1189"
                                  ]
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[281,9190+33]..src/partialGrammar.ml[281,9190+50])
                                  Texp_apply
                                  expression (src/partialGrammar.ml[281,9190+37]..src/partialGrammar.ml[281,9190+38])
                                    Texp_ident "Stdlib!.^"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[281,9190+33]..src/partialGrammar.ml[281,9190+36])
                                        Texp_constant Const_string("_",(src/partialGrammar.ml[281,9190+34]..src/partialGrammar.ml[281,9190+35]),None)
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[281,9190+39]..src/partialGrammar.ml[281,9190+50])
                                        Texp_ident "nonterminal/1188"
                                  ]
                            ]
                      ]
                      expression (src/partialGrammar.ml[282,9244+4]..src/partialGrammar.ml[285,9306+27])
                        Texp_ifthenelse
                        expression (src/partialGrammar.ml[282,9244+7]..src/partialGrammar.ml[282,9244+21])
                          Texp_apply
                          expression (src/partialGrammar.ml[282,9244+7]..src/partialGrammar.ml[282,9244+16])
                            Texp_ident "used_name/964"
                          [
                            <arg>
                              Nolabel
                              expression (src/partialGrammar.ml[282,9244+17]..src/partialGrammar.ml[282,9244+21])
                                Texp_ident "name/1190"
                          ]
                        expression (src/partialGrammar.ml[283,9271+6]..src/partialGrammar.ml[283,9271+25])
                          Texp_apply
                          expression (src/partialGrammar.ml[283,9271+6]..src/partialGrammar.ml[283,9271+11])
                            Texp_ident "fresh/967"
                          [
                            <arg>
                              Optional "hint"
                              expression (src/partialGrammar.ml[283,9271+18]..src/partialGrammar.ml[283,9271+22])
                                Texp_construct "Some"
                                [
                                  expression (src/partialGrammar.ml[283,9271+18]..src/partialGrammar.ml[283,9271+22])
                                    Texp_ident "name/1190"
                                ]
                            <arg>
                              Nolabel
                              expression (src/partialGrammar.ml[283,9271+23]..src/partialGrammar.ml[283,9271+25])
                                Texp_construct "()"
                                []
                          ]
                        Some
                          expression (src/partialGrammar.ml[285,9306+6]..src/partialGrammar.ml[285,9306+27])
                            Texp_sequence
                            expression (src/partialGrammar.ml[285,9306+7]..src/partialGrammar.ml[285,9306+20])
                              Texp_apply
                              expression (src/partialGrammar.ml[285,9306+7]..src/partialGrammar.ml[285,9306+15])
                                Texp_ident "use_name/915"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/partialGrammar.ml[285,9306+16]..src/partialGrammar.ml[285,9306+20])
                                    Texp_ident "name/1190"
                              ]
                            expression (src/partialGrammar.ml[285,9306+22]..src/partialGrammar.ml[285,9306+26])
                              Texp_ident "name/1190"
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[288,9415+0]..src/partialGrammar.ml[301,9840+27])
    Tstr_type Rec
    [
      type_declaration symbol_kind/1191 (src/partialGrammar.ml[288,9415+0]..src/partialGrammar.ml[301,9840+27])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (src/partialGrammar.ml[291,9504+2]..src/partialGrammar.ml[291,9504+36])
                PublicNonTerminal/1192
                [
                  core_type (src/partialGrammar.ml[291,9504+25]..src/partialGrammar.ml[291,9504+36])
                    Ttyp_constr "Dune__exe!.Positions.t"
                    []
                ]
                None
              (src/partialGrammar.ml[294,9616+2]..src/partialGrammar.ml[294,9616+37])
                PrivateNonTerminal/1193
                [
                  core_type (src/partialGrammar.ml[294,9616+26]..src/partialGrammar.ml[294,9616+37])
                    Ttyp_constr "Dune__exe!.Positions.t"
                    []
                ]
                None
              (src/partialGrammar.ml[297,9686+2]..src/partialGrammar.ml[297,9686+29])
                Token/1194
                [
                  core_type (src/partialGrammar.ml[297,9686+13]..src/partialGrammar.ml[297,9686+29])
                    Ttyp_constr "Dune__exe!.Syntax.token_properties"
                    []
                ]
                None
              (src/partialGrammar.ml[301,9840+2]..src/partialGrammar.ml[301,9840+27])
                DontKnow/1195
                [
                  core_type (src/partialGrammar.ml[301,9840+16]..src/partialGrammar.ml[301,9840+27])
                    Ttyp_constr "Dune__exe!.Positions.t"
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/partialGrammar.ml[303,9869+0]..src/partialGrammar.ml[304,9889+35])
    Tstr_type Rec
    [
      type_declaration symbol_table/1196 (src/partialGrammar.ml[303,9869+0]..src/partialGrammar.ml[304,9889+35])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/partialGrammar.ml[304,9889+4]..src/partialGrammar.ml[304,9889+35])
              Ttyp_constr "Stdlib!.Hashtbl.t"
              [
                core_type (src/partialGrammar.ml[304,9889+5]..src/partialGrammar.ml[304,9889+11])
                  Ttyp_constr "Dune__exe!.Syntax.symbol"
                  []
                core_type (src/partialGrammar.ml[304,9889+13]..src/partialGrammar.ml[304,9889+24])
                  Ttyp_constr "symbol_kind/1191"
                  []
              ]
    ]
  structure_item (src/partialGrammar.ml[306,9926+0]..src/partialGrammar.ml[307,9976+29])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[306,9926+4]..src/partialGrammar.ml[306,9926+15])
          Tpat_var "find_symbol/1277"
        expression (src/partialGrammar.ml[306,9926+16]..src/partialGrammar.ml[307,9976+29]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[306,9926+17]..src/partialGrammar.ml[306,9926+24])
                extra
                  Tpat_extra_constraint
                  core_type (src/partialGrammar.ml[306,9926+27]..src/partialGrammar.ml[306,9926+39])
                    Ttyp_constr "symbol_table/1196"
                    []
                Tpat_alias "symbols/1279"
                pattern (src/partialGrammar.ml[306,9926+17]..src/partialGrammar.ml[306,9926+24])
                  Tpat_any
              expression (src/partialGrammar.ml[306,9926+41]..src/partialGrammar.ml[307,9976+29]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[306,9926+41]..src/partialGrammar.ml[306,9926+47])
                      Tpat_var "symbol/1280"
                    expression (src/partialGrammar.ml[307,9976+2]..src/partialGrammar.ml[307,9976+29])
                      Texp_apply
                      expression (src/partialGrammar.ml[307,9976+2]..src/partialGrammar.ml[307,9976+14])
                        Texp_ident "Stdlib!.Hashtbl.find"
                      [
                        <arg>
                          Nolabel
                          expression (src/partialGrammar.ml[307,9976+15]..src/partialGrammar.ml[307,9976+22])
                            Texp_ident "symbols/1279"
                        <arg>
                          Nolabel
                          expression (src/partialGrammar.ml[307,9976+23]..src/partialGrammar.ml[307,9976+29])
                            Texp_ident "symbol/1280"
                      ]
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[309,10007+0]..src/partialGrammar.ml[312,10124+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[309,10007+4]..src/partialGrammar.ml[309,10007+23])
          Tpat_var "add_in_symbol_table/1281"
        expression (src/partialGrammar.ml[309,10007+24]..src/partialGrammar.ml[312,10124+9]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[309,10007+25]..src/partialGrammar.ml[309,10007+32])
                extra
                  Tpat_extra_constraint
                  core_type (src/partialGrammar.ml[309,10007+35]..src/partialGrammar.ml[309,10007+47])
                    Ttyp_constr "symbol_table/1196"
                    []
                Tpat_alias "symbols/1283"
                pattern (src/partialGrammar.ml[309,10007+25]..src/partialGrammar.ml[309,10007+32])
                  Tpat_any
              expression (src/partialGrammar.ml[309,10007+49]..src/partialGrammar.ml[312,10124+9]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[309,10007+49]..src/partialGrammar.ml[309,10007+55])
                      Tpat_var "symbol/1284"
                    expression (src/partialGrammar.ml[309,10007+56]..src/partialGrammar.ml[312,10124+9]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/partialGrammar.ml[309,10007+56]..src/partialGrammar.ml[309,10007+60])
                            Tpat_var "kind/1285"
                          expression (src/partialGrammar.ml[310,10070+2]..src/partialGrammar.ml[312,10124+9])
                            Texp_sequence
                            expression (src/partialGrammar.ml[310,10070+2]..src/partialGrammar.ml[310,10070+17])
                              Texp_apply
                              expression (src/partialGrammar.ml[310,10070+2]..src/partialGrammar.ml[310,10070+10])
                                Texp_ident "use_name/915"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/partialGrammar.ml[310,10070+11]..src/partialGrammar.ml[310,10070+17])
                                    Texp_ident "symbol/1284"
                              ]
                            expression (src/partialGrammar.ml[311,10089+2]..src/partialGrammar.ml[312,10124+9])
                              Texp_sequence
                              expression (src/partialGrammar.ml[311,10089+2]..src/partialGrammar.ml[311,10089+33])
                                Texp_apply
                                expression (src/partialGrammar.ml[311,10089+2]..src/partialGrammar.ml[311,10089+13])
                                  Texp_ident "Stdlib!.Hashtbl.add"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/partialGrammar.ml[311,10089+14]..src/partialGrammar.ml[311,10089+21])
                                      Texp_ident "symbols/1283"
                                  <arg>
                                    Nolabel
                                    expression (src/partialGrammar.ml[311,10089+22]..src/partialGrammar.ml[311,10089+28])
                                      Texp_ident "symbol/1284"
                                  <arg>
                                    Nolabel
                                    expression (src/partialGrammar.ml[311,10089+29]..src/partialGrammar.ml[311,10089+33])
                                      Texp_ident "kind/1285"
                                ]
                              expression (src/partialGrammar.ml[312,10124+2]..src/partialGrammar.ml[312,10124+9])
                                Texp_ident "symbols/1283"
                      ]
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[314,10135+0]..src/partialGrammar.ml[316,10241+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[314,10135+4]..src/partialGrammar.ml[314,10135+27])
          Tpat_var "replace_in_symbol_table/1286"
        expression (src/partialGrammar.ml[314,10135+28]..src/partialGrammar.ml[316,10241+9]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[314,10135+29]..src/partialGrammar.ml[314,10135+36])
                extra
                  Tpat_extra_constraint
                  core_type (src/partialGrammar.ml[314,10135+39]..src/partialGrammar.ml[314,10135+51])
                    Ttyp_constr "symbol_table/1196"
                    []
                Tpat_alias "symbols/1288"
                pattern (src/partialGrammar.ml[314,10135+29]..src/partialGrammar.ml[314,10135+36])
                  Tpat_any
              expression (src/partialGrammar.ml[314,10135+53]..src/partialGrammar.ml[316,10241+9]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[314,10135+53]..src/partialGrammar.ml[314,10135+59])
                      Tpat_var "symbol/1289"
                    expression (src/partialGrammar.ml[314,10135+60]..src/partialGrammar.ml[316,10241+9]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/partialGrammar.ml[314,10135+60]..src/partialGrammar.ml[314,10135+64])
                            Tpat_var "kind/1290"
                          expression (src/partialGrammar.ml[315,10202+2]..src/partialGrammar.ml[316,10241+9])
                            Texp_sequence
                            expression (src/partialGrammar.ml[315,10202+2]..src/partialGrammar.ml[315,10202+37])
                              Texp_apply
                              expression (src/partialGrammar.ml[315,10202+2]..src/partialGrammar.ml[315,10202+17])
                                Texp_ident "Stdlib!.Hashtbl.replace"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/partialGrammar.ml[315,10202+18]..src/partialGrammar.ml[315,10202+25])
                                    Texp_ident "symbols/1288"
                                <arg>
                                  Nolabel
                                  expression (src/partialGrammar.ml[315,10202+26]..src/partialGrammar.ml[315,10202+32])
                                    Texp_ident "symbol/1289"
                                <arg>
                                  Nolabel
                                  expression (src/partialGrammar.ml[315,10202+33]..src/partialGrammar.ml[315,10202+37])
                                    Texp_ident "kind/1290"
                              ]
                            expression (src/partialGrammar.ml[316,10241+2]..src/partialGrammar.ml[316,10241+9])
                              Texp_ident "symbols/1288"
                      ]
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[318,10252+0]..src/partialGrammar.ml[319,10295+19])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[318,10252+4]..src/partialGrammar.ml[318,10252+22])
          Tpat_var "empty_symbol_table/1291"
        expression (src/partialGrammar.ml[318,10252+23]..src/partialGrammar.ml[319,10295+19]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[318,10252+23]..src/partialGrammar.ml[318,10252+25])
                Tpat_construct "()"
                []
                None
              expression (src/partialGrammar.ml[319,10295+2]..src/partialGrammar.ml[319,10295+19])
                extra
                  Texp_constraint
                  core_type (src/partialGrammar.ml[318,10252+28]..src/partialGrammar.ml[318,10252+40])
                    Ttyp_constr "symbol_table/1196"
                    []
                Texp_apply
                expression (src/partialGrammar.ml[319,10295+2]..src/partialGrammar.ml[319,10295+16])
                  Texp_ident "Stdlib!.Hashtbl.create"
                [
                  <arg>
                    Optional "random"
                    expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                      Texp_construct "None"
                      []
                  <arg>
                    Nolabel
                    expression (src/partialGrammar.ml[319,10295+17]..src/partialGrammar.ml[319,10295+19])
                      Texp_constant Const_int 13
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[321,10316+0]..src/partialGrammar.ml[357,11771+49])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[321,10316+4]..src/partialGrammar.ml[321,10316+16])
          Tpat_var "store_symbol/1294"
        expression (src/partialGrammar.ml[321,10316+17]..src/partialGrammar.ml[357,11771+49]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[321,10316+18]..src/partialGrammar.ml[321,10316+25])
                extra
                  Tpat_extra_constraint
                  core_type (src/partialGrammar.ml[321,10316+28]..src/partialGrammar.ml[321,10316+40])
                    Ttyp_constr "symbol_table/1196"
                    []
                Tpat_alias "symbols/1296"
                pattern (src/partialGrammar.ml[321,10316+18]..src/partialGrammar.ml[321,10316+25])
                  Tpat_any
              expression (src/partialGrammar.ml[321,10316+42]..src/partialGrammar.ml[357,11771+49]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[321,10316+42]..src/partialGrammar.ml[321,10316+48])
                      Tpat_var "symbol/1297"
                    expression (src/partialGrammar.ml[321,10316+49]..src/partialGrammar.ml[357,11771+49]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/partialGrammar.ml[321,10316+49]..src/partialGrammar.ml[321,10316+53])
                            Tpat_var "kind/1298"
                          expression (src/partialGrammar.ml[322,10372+2]..src/partialGrammar.ml[357,11771+49])
                            Texp_match
                            expression (src/partialGrammar.ml[322,10372+8]..src/partialGrammar.ml[322,10372+40])
                              Texp_tuple
                              [
                                expression (src/partialGrammar.ml[322,10372+8]..src/partialGrammar.ml[322,10372+34])
                                  Texp_apply
                                  expression (src/partialGrammar.ml[322,10372+8]..src/partialGrammar.ml[322,10372+19])
                                    Texp_ident "find_symbol/1277"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[322,10372+20]..src/partialGrammar.ml[322,10372+27])
                                        Texp_ident "symbols/1296"
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[322,10372+28]..src/partialGrammar.ml[322,10372+34])
                                        Texp_ident "symbol/1297"
                                  ]
                                expression (src/partialGrammar.ml[322,10372+36]..src/partialGrammar.ml[322,10372+40])
                                  Texp_ident "kind/1298"
                              ]
                            [
                              <case>
                                pattern (src/partialGrammar.ml[325,10467+4]..src/partialGrammar.ml[325,10467+23])
                                  Tpat_exception
                                  pattern (src/partialGrammar.ml[325,10467+14]..src/partialGrammar.ml[325,10467+23])
                                    Tpat_construct "Not_found"
                                    []
                                    None
                                expression (src/partialGrammar.ml[326,10494+6]..src/partialGrammar.ml[326,10494+45])
                                  Texp_apply
                                  expression (src/partialGrammar.ml[326,10494+6]..src/partialGrammar.ml[326,10494+25])
                                    Texp_ident "add_in_symbol_table/1281"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[326,10494+26]..src/partialGrammar.ml[326,10494+33])
                                        Texp_ident "symbols/1296"
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[326,10494+34]..src/partialGrammar.ml[326,10494+40])
                                        Texp_ident "symbol/1297"
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[326,10494+41]..src/partialGrammar.ml[326,10494+45])
                                        Texp_ident "kind/1298"
                                  ]
                              <case>
                                pattern (src/partialGrammar.ml[331,10706+4]..src/partialGrammar.ml[333,10801+46])
                                  Tpat_or
                                  pattern (src/partialGrammar.ml[331,10706+4]..src/partialGrammar.ml[332,10754+46])
                                    Tpat_or
                                    pattern (src/partialGrammar.ml[331,10706+4]..src/partialGrammar.ml[331,10706+47])
                                      Tpat_value
                                      pattern (src/partialGrammar.ml[331,10706+4]..src/partialGrammar.ml[331,10706+47])
                                        Tpat_tuple
                                        [
                                          pattern (src/partialGrammar.ml[331,10706+4]..src/partialGrammar.ml[331,10706+24])
                                            Tpat_construct "PrivateNonTerminal"
                                            [
                                              pattern (src/partialGrammar.ml[331,10706+23]..src/partialGrammar.ml[331,10706+24])
                                                Tpat_var "p/1299"
                                            ]
                                            None
                                          pattern (src/partialGrammar.ml[331,10706+26]..src/partialGrammar.ml[331,10706+47])
                                            Tpat_construct "PrivateNonTerminal"
                                            [
                                              pattern (src/partialGrammar.ml[331,10706+45]..src/partialGrammar.ml[331,10706+47])
                                                Tpat_var "p'/1300"
                                            ]
                                            None
                                        ]
                                    pattern (src/partialGrammar.ml[332,10754+4]..src/partialGrammar.ml[332,10754+46])
                                      Tpat_value
                                      pattern (src/partialGrammar.ml[332,10754+4]..src/partialGrammar.ml[332,10754+46])
                                        Tpat_tuple
                                        [
                                          pattern (src/partialGrammar.ml[332,10754+4]..src/partialGrammar.ml[332,10754+23])
                                            Tpat_construct "PublicNonTerminal"
                                            [
                                              pattern (src/partialGrammar.ml[332,10754+22]..src/partialGrammar.ml[332,10754+23])
                                                Tpat_var "p/1299"
                                            ]
                                            None
                                          pattern (src/partialGrammar.ml[332,10754+25]..src/partialGrammar.ml[332,10754+46])
                                            Tpat_construct "PrivateNonTerminal"
                                            [
                                              pattern (src/partialGrammar.ml[332,10754+44]..src/partialGrammar.ml[332,10754+46])
                                                Tpat_var "p'/1300"
                                            ]
                                            None
                                        ]
                                  pattern (src/partialGrammar.ml[333,10801+4]..src/partialGrammar.ml[333,10801+46])
                                    Tpat_value
                                    pattern (src/partialGrammar.ml[333,10801+4]..src/partialGrammar.ml[333,10801+46])
                                      Tpat_tuple
                                      [
                                        pattern (src/partialGrammar.ml[333,10801+4]..src/partialGrammar.ml[333,10801+24])
                                          Tpat_construct "PrivateNonTerminal"
                                          [
                                            pattern (src/partialGrammar.ml[333,10801+23]..src/partialGrammar.ml[333,10801+24])
                                              Tpat_var "p/1299"
                                          ]
                                          None
                                        pattern (src/partialGrammar.ml[333,10801+26]..src/partialGrammar.ml[333,10801+46])
                                          Tpat_construct "PublicNonTerminal"
                                          [
                                            pattern (src/partialGrammar.ml[333,10801+44]..src/partialGrammar.ml[333,10801+46])
                                              Tpat_var "p'/1300"
                                          ]
                                          None
                                      ]
                                expression (src/partialGrammar.ml[334,10851+6]..src/partialGrammar.ml[337,10997+14])
                                  Texp_apply
                                  expression (src/partialGrammar.ml[334,10851+6]..src/partialGrammar.ml[334,10851+17])
                                    Texp_ident "Dune__exe!.Error.error"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[334,10851+18]..src/partialGrammar.ml[334,10851+26])
                                        Texp_construct "::"
                                        [
                                          expression (src/partialGrammar.ml[334,10851+20]..src/partialGrammar.ml[334,10851+21])
                                            Texp_ident "p/1299"
                                          expression (src/partialGrammar.ml[334,10851+23]..src/partialGrammar.ml[334,10851+26]) ghost
                                            Texp_construct "::"
                                            [
                                              expression (src/partialGrammar.ml[334,10851+23]..src/partialGrammar.ml[334,10851+25])
                                                Texp_ident "p'/1300"
                                              expression (src/partialGrammar.ml[334,10851+25]..src/partialGrammar.ml[334,10851+26]) ghost
                                                Texp_construct "[]"
                                                []
                                            ]
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[335,10878+8]..src/partialGrammar.ml[336,10937+59])
                                        Texp_construct "CamlinternalFormatBasics.Format"
                                        [
                                          expression (src/partialGrammar.ml[335,10878+8]..src/partialGrammar.ml[336,10937+59]) ghost
                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                            [
                                              expression (src/partialGrammar.ml[335,10878+8]..src/partialGrammar.ml[336,10937+59]) ghost
                                                Texp_constant Const_string("the nonterminal symbol ",(src/partialGrammar.ml[335,10878+8]..src/partialGrammar.ml[336,10937+59]) ghost,None)
                                              expression (src/partialGrammar.ml[335,10878+8]..src/partialGrammar.ml[336,10937+59]) ghost
                                                Texp_construct "CamlinternalFormatBasics.String"
                                                [
                                                  expression (src/partialGrammar.ml[335,10878+8]..src/partialGrammar.ml[336,10937+59]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                    []
                                                  expression (src/partialGrammar.ml[335,10878+8]..src/partialGrammar.ml[336,10937+59]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                    [
                                                      expression (src/partialGrammar.ml[335,10878+8]..src/partialGrammar.ml[336,10937+59]) ghost
                                                        Texp_constant Const_string(" is multiply defined.\nOnly ",(src/partialGrammar.ml[335,10878+8]..src/partialGrammar.ml[336,10937+59]) ghost,None)
                                                      expression (src/partialGrammar.ml[335,10878+8]..src/partialGrammar.ml[336,10937+59]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                        [
                                                          expression (src/partialGrammar.ml[335,10878+8]..src/partialGrammar.ml[336,10937+59]) ghost
                                                            Texp_constant Const_char 25
                                                          expression (src/partialGrammar.ml[335,10878+8]..src/partialGrammar.ml[336,10937+59]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                            [
                                                              expression (src/partialGrammar.ml[335,10878+8]..src/partialGrammar.ml[336,10937+59]) ghost
                                                                Texp_constant Const_string("public symbols can have split definitions.",(src/partialGrammar.ml[335,10878+8]..src/partialGrammar.ml[336,10937+59]) ghost,None)
                                                              expression (src/partialGrammar.ml[335,10878+8]..src/partialGrammar.ml[336,10937+59]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                []
                                                            ]
                                                        ]
                                                    ]
                                                ]
                                            ]
                                          expression (src/partialGrammar.ml[335,10878+8]..src/partialGrammar.ml[336,10937+59]) ghost
                                            Texp_constant Const_string("the nonterminal symbol %s is multiply defined.\nOnly %%public symbols can have split definitions.",(src/partialGrammar.ml[335,10878+8]..src/partialGrammar.ml[336,10937+59]) ghost,None)
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[337,10997+8]..src/partialGrammar.ml[337,10997+14])
                                        Texp_ident "symbol/1297"
                                  ]
                              <case>
                                pattern (src/partialGrammar.ml[340,11085+4]..src/partialGrammar.ml[341,11145+59])
                                  Tpat_or
                                  pattern (src/partialGrammar.ml[340,11085+4]..src/partialGrammar.ml[340,11085+59])
                                    Tpat_value
                                    pattern (src/partialGrammar.ml[340,11085+4]..src/partialGrammar.ml[340,11085+59])
                                      Tpat_tuple
                                      [
                                        pattern (src/partialGrammar.ml[340,11085+4]..src/partialGrammar.ml[340,11085+13])
                                          Tpat_construct "Token"
                                          [
                                            pattern (src/partialGrammar.ml[340,11085+10]..src/partialGrammar.ml[340,11085+13])
                                              Tpat_var "tkp/1305"
                                          ]
                                          None
                                        pattern (src/partialGrammar.ml[340,11085+15]..src/partialGrammar.ml[340,11085+59])
                                          Tpat_or
                                          pattern (src/partialGrammar.ml[340,11085+16]..src/partialGrammar.ml[340,11085+36])
                                            Tpat_construct "PrivateNonTerminal"
                                            [
                                              pattern (src/partialGrammar.ml[340,11085+35]..src/partialGrammar.ml[340,11085+36])
                                                Tpat_var "p/1306"
                                            ]
                                            None
                                          pattern (src/partialGrammar.ml[340,11085+39]..src/partialGrammar.ml[340,11085+58])
                                            Tpat_construct "PublicNonTerminal"
                                            [
                                              pattern (src/partialGrammar.ml[340,11085+57]..src/partialGrammar.ml[340,11085+58])
                                                Tpat_var "p/1306"
                                            ]
                                            None
                                      ]
                                  pattern (src/partialGrammar.ml[341,11145+4]..src/partialGrammar.ml[341,11145+59])
                                    Tpat_value
                                    pattern (src/partialGrammar.ml[341,11145+4]..src/partialGrammar.ml[341,11145+59])
                                      Tpat_tuple
                                      [
                                        pattern (src/partialGrammar.ml[341,11145+4]..src/partialGrammar.ml[341,11145+48])
                                          Tpat_or
                                          pattern (src/partialGrammar.ml[341,11145+5]..src/partialGrammar.ml[341,11145+25])
                                            Tpat_construct "PrivateNonTerminal"
                                            [
                                              pattern (src/partialGrammar.ml[341,11145+24]..src/partialGrammar.ml[341,11145+25])
                                                Tpat_var "p/1306"
                                            ]
                                            None
                                          pattern (src/partialGrammar.ml[341,11145+28]..src/partialGrammar.ml[341,11145+47])
                                            Tpat_construct "PublicNonTerminal"
                                            [
                                              pattern (src/partialGrammar.ml[341,11145+46]..src/partialGrammar.ml[341,11145+47])
                                                Tpat_var "p/1306"
                                            ]
                                            None
                                        pattern (src/partialGrammar.ml[341,11145+50]..src/partialGrammar.ml[341,11145+59])
                                          Tpat_construct "Token"
                                          [
                                            pattern (src/partialGrammar.ml[341,11145+56]..src/partialGrammar.ml[341,11145+59])
                                              Tpat_var "tkp/1305"
                                          ]
                                          None
                                      ]
                                expression (src/partialGrammar.ml[342,11208+6]..src/partialGrammar.ml[344,11307+17])
                                  Texp_apply
                                  expression (src/partialGrammar.ml[342,11208+6]..src/partialGrammar.ml[342,11208+17])
                                    Texp_ident "Dune__exe!.Error.error"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[342,11208+18]..src/partialGrammar.ml[342,11208+40])
                                        Texp_construct "::"
                                        [
                                          expression (src/partialGrammar.ml[342,11208+20]..src/partialGrammar.ml[342,11208+21])
                                            Texp_ident "p/1306"
                                          expression (src/partialGrammar.ml[342,11208+23]..src/partialGrammar.ml[342,11208+40]) ghost
                                            Texp_construct "::"
                                            [
                                              expression (src/partialGrammar.ml[342,11208+23]..src/partialGrammar.ml[342,11208+38])
                                                Texp_field
                                                expression (src/partialGrammar.ml[342,11208+23]..src/partialGrammar.ml[342,11208+26])
                                                  Texp_ident "tkp/1305"
                                                "tk_position"
                                              expression (src/partialGrammar.ml[342,11208+39]..src/partialGrammar.ml[342,11208+40]) ghost
                                                Texp_construct "[]"
                                                []
                                            ]
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[343,11249+11]..src/partialGrammar.ml[343,11249+57])
                                        Texp_construct "CamlinternalFormatBasics.Format"
                                        [
                                          expression (src/partialGrammar.ml[343,11249+11]..src/partialGrammar.ml[343,11249+57]) ghost
                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                            [
                                              expression (src/partialGrammar.ml[343,11249+11]..src/partialGrammar.ml[343,11249+57]) ghost
                                                Texp_constant Const_string("the identifier ",(src/partialGrammar.ml[343,11249+11]..src/partialGrammar.ml[343,11249+57]) ghost,None)
                                              expression (src/partialGrammar.ml[343,11249+11]..src/partialGrammar.ml[343,11249+57]) ghost
                                                Texp_construct "CamlinternalFormatBasics.String"
                                                [
                                                  expression (src/partialGrammar.ml[343,11249+11]..src/partialGrammar.ml[343,11249+57]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                    []
                                                  expression (src/partialGrammar.ml[343,11249+11]..src/partialGrammar.ml[343,11249+57]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                    [
                                                      expression (src/partialGrammar.ml[343,11249+11]..src/partialGrammar.ml[343,11249+57]) ghost
                                                        Texp_constant Const_string(" is a reference to a token.",(src/partialGrammar.ml[343,11249+11]..src/partialGrammar.ml[343,11249+57]) ghost,None)
                                                      expression (src/partialGrammar.ml[343,11249+11]..src/partialGrammar.ml[343,11249+57]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                        []
                                                    ]
                                                ]
                                            ]
                                          expression (src/partialGrammar.ml[343,11249+11]..src/partialGrammar.ml[343,11249+57]) ghost
                                            Texp_constant Const_string("the identifier %s is a reference to a token.",(src/partialGrammar.ml[343,11249+11]..src/partialGrammar.ml[343,11249+57]) ghost,None)
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[344,11307+11]..src/partialGrammar.ml[344,11307+17])
                                        Texp_ident "symbol/1297"
                                  ]
                              <case>
                                pattern (src/partialGrammar.ml[350,11586+4]..src/partialGrammar.ml[352,11625+44])
                                  Tpat_or
                                  pattern (src/partialGrammar.ml[350,11586+4]..src/partialGrammar.ml[351,11604+20])
                                    Tpat_or
                                    pattern (src/partialGrammar.ml[350,11586+4]..src/partialGrammar.ml[350,11586+17])
                                      Tpat_value
                                      pattern (src/partialGrammar.ml[350,11586+4]..src/partialGrammar.ml[350,11586+17])
                                        Tpat_tuple
                                        [
                                          pattern (src/partialGrammar.ml[350,11586+4]..src/partialGrammar.ml[350,11586+5])
                                            Tpat_any
                                          pattern (src/partialGrammar.ml[350,11586+7]..src/partialGrammar.ml[350,11586+17])
                                            Tpat_construct "DontKnow"
                                            [
                                              pattern (src/partialGrammar.ml[350,11586+16]..src/partialGrammar.ml[350,11586+17])
                                                Tpat_any
                                            ]
                                            None
                                        ]
                                    pattern (src/partialGrammar.ml[351,11604+4]..src/partialGrammar.ml[351,11604+20])
                                      Tpat_value
                                      pattern (src/partialGrammar.ml[351,11604+4]..src/partialGrammar.ml[351,11604+20])
                                        Tpat_tuple
                                        [
                                          pattern (src/partialGrammar.ml[351,11604+4]..src/partialGrammar.ml[351,11604+11])
                                            Tpat_construct "Token"
                                            [
                                              pattern (src/partialGrammar.ml[351,11604+10]..src/partialGrammar.ml[351,11604+11])
                                                Tpat_any
                                            ]
                                            None
                                          pattern (src/partialGrammar.ml[351,11604+13]..src/partialGrammar.ml[351,11604+20])
                                            Tpat_construct "Token"
                                            [
                                              pattern (src/partialGrammar.ml[351,11604+19]..src/partialGrammar.ml[351,11604+20])
                                                Tpat_any
                                            ]
                                            None
                                        ]
                                  pattern (src/partialGrammar.ml[352,11625+4]..src/partialGrammar.ml[352,11625+44])
                                    Tpat_value
                                    pattern (src/partialGrammar.ml[352,11625+4]..src/partialGrammar.ml[352,11625+44])
                                      Tpat_tuple
                                      [
                                        pattern (src/partialGrammar.ml[352,11625+4]..src/partialGrammar.ml[352,11625+23])
                                          Tpat_construct "PublicNonTerminal"
                                          [
                                            pattern (src/partialGrammar.ml[352,11625+22]..src/partialGrammar.ml[352,11625+23])
                                              Tpat_any
                                          ]
                                          None
                                        pattern (src/partialGrammar.ml[352,11625+25]..src/partialGrammar.ml[352,11625+44])
                                          Tpat_construct "PublicNonTerminal"
                                          [
                                            pattern (src/partialGrammar.ml[352,11625+43]..src/partialGrammar.ml[352,11625+44])
                                              Tpat_any
                                          ]
                                          None
                                      ]
                                expression (src/partialGrammar.ml[353,11673+6]..src/partialGrammar.ml[353,11673+13])
                                  Texp_ident "symbols/1296"
                              <case>
                                pattern (src/partialGrammar.ml[356,11750+4]..src/partialGrammar.ml[356,11750+17])
                                  Tpat_value
                                  pattern (src/partialGrammar.ml[356,11750+4]..src/partialGrammar.ml[356,11750+17])
                                    Tpat_tuple
                                    [
                                      pattern (src/partialGrammar.ml[356,11750+4]..src/partialGrammar.ml[356,11750+14])
                                        Tpat_construct "DontKnow"
                                        [
                                          pattern (src/partialGrammar.ml[356,11750+13]..src/partialGrammar.ml[356,11750+14])
                                            Tpat_any
                                        ]
                                        None
                                      pattern (src/partialGrammar.ml[356,11750+16]..src/partialGrammar.ml[356,11750+17])
                                        Tpat_any
                                    ]
                                expression (src/partialGrammar.ml[357,11771+6]..src/partialGrammar.ml[357,11771+49])
                                  Texp_apply
                                  expression (src/partialGrammar.ml[357,11771+6]..src/partialGrammar.ml[357,11771+29])
                                    Texp_ident "replace_in_symbol_table/1286"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[357,11771+30]..src/partialGrammar.ml[357,11771+37])
                                        Texp_ident "symbols/1296"
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[357,11771+38]..src/partialGrammar.ml[357,11771+44])
                                        Texp_ident "symbol/1297"
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[357,11771+45]..src/partialGrammar.ml[357,11771+49])
                                        Texp_ident "kind/1298"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[359,11822+0]..src/partialGrammar.ml[366,11992+34])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[359,11822+4]..src/partialGrammar.ml[359,11822+21])
          Tpat_var "store_used_symbol/1311"
        expression (src/partialGrammar.ml[359,11822+22]..src/partialGrammar.ml[366,11992+34]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[359,11822+22]..src/partialGrammar.ml[359,11822+30])
                Tpat_var "position/1313"
              expression (src/partialGrammar.ml[359,11822+31]..src/partialGrammar.ml[366,11992+34]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[359,11822+31]..src/partialGrammar.ml[359,11822+37])
                      Tpat_var "tokens/1314"
                    expression (src/partialGrammar.ml[359,11822+38]..src/partialGrammar.ml[366,11992+34]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/partialGrammar.ml[359,11822+38]..src/partialGrammar.ml[359,11822+45])
                            Tpat_var "symbols/1315"
                          expression (src/partialGrammar.ml[359,11822+46]..src/partialGrammar.ml[366,11992+34]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/partialGrammar.ml[359,11822+46]..src/partialGrammar.ml[359,11822+52])
                                  Tpat_var "symbol/1316"
                                expression (src/partialGrammar.ml[360,11877+2]..src/partialGrammar.ml[366,11992+34])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/partialGrammar.ml[360,11877+6]..src/partialGrammar.ml[360,11877+10])
                                        Tpat_var "kind/1317"
                                      expression (src/partialGrammar.ml[361,11890+4]..src/partialGrammar.ml[364,11963+23])
                                        Texp_try
                                        expression (src/partialGrammar.ml[362,11898+6]..src/partialGrammar.ml[362,11898+42])
                                          Texp_construct "Token"
                                          [
                                            expression (src/partialGrammar.ml[362,11898+12]..src/partialGrammar.ml[362,11898+42])
                                              Texp_apply
                                              expression (src/partialGrammar.ml[362,11898+13]..src/partialGrammar.ml[362,11898+27])
                                                Texp_ident "Dune__exe!.StringMap.find"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/partialGrammar.ml[362,11898+28]..src/partialGrammar.ml[362,11898+34])
                                                    Texp_ident "symbol/1316"
                                                <arg>
                                                  Nolabel
                                                  expression (src/partialGrammar.ml[362,11898+35]..src/partialGrammar.ml[362,11898+41])
                                                    Texp_ident "tokens/1314"
                                              ]
                                          ]
                                        [
                                          <case>
                                            pattern (src/partialGrammar.ml[363,11941+9]..src/partialGrammar.ml[363,11941+18])
                                              Tpat_construct "Not_found"
                                              []
                                              None
                                            expression (src/partialGrammar.ml[364,11963+6]..src/partialGrammar.ml[364,11963+23])
                                              Texp_construct "DontKnow"
                                              [
                                                expression (src/partialGrammar.ml[364,11963+15]..src/partialGrammar.ml[364,11963+23])
                                                  Texp_ident "position/1313"
                                              ]
                                        ]
                                  ]
                                  expression (src/partialGrammar.ml[366,11992+2]..src/partialGrammar.ml[366,11992+34])
                                    Texp_apply
                                    expression (src/partialGrammar.ml[366,11992+2]..src/partialGrammar.ml[366,11992+14])
                                      Texp_ident "store_symbol/1294"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/partialGrammar.ml[366,11992+15]..src/partialGrammar.ml[366,11992+22])
                                          Texp_ident "symbols/1315"
                                      <arg>
                                        Nolabel
                                        expression (src/partialGrammar.ml[366,11992+23]..src/partialGrammar.ml[366,11992+29])
                                          Texp_ident "symbol/1316"
                                      <arg>
                                        Nolabel
                                        expression (src/partialGrammar.ml[366,11992+30]..src/partialGrammar.ml[366,11992+34])
                                          Texp_ident "kind/1317"
                                    ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[368,12028+0]..src/partialGrammar.ml[372,12181+40])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[368,12028+4]..src/partialGrammar.ml[368,12028+32])
          Tpat_var "non_terminal_is_not_reserved/1318"
        expression (src/partialGrammar.ml[368,12028+33]..src/partialGrammar.ml[372,12181+40]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[368,12028+33]..src/partialGrammar.ml[368,12028+39])
                Tpat_var "symbol/1320"
              expression (src/partialGrammar.ml[368,12028+40]..src/partialGrammar.ml[372,12181+40]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[368,12028+40]..src/partialGrammar.ml[368,12028+49])
                      Tpat_var "positions/1321"
                    expression (src/partialGrammar.ml[369,12080+2]..src/partialGrammar.ml[372,12181+40])
                      Texp_ifthenelse
                      expression (src/partialGrammar.ml[369,12080+5]..src/partialGrammar.ml[369,12080+21])
                        Texp_apply
                        expression (src/partialGrammar.ml[369,12080+12]..src/partialGrammar.ml[369,12080+13])
                          Texp_ident "Stdlib!.="
                        [
                          <arg>
                            Nolabel
                            expression (src/partialGrammar.ml[369,12080+5]..src/partialGrammar.ml[369,12080+11])
                              Texp_ident "symbol/1320"
                          <arg>
                            Nolabel
                            expression (src/partialGrammar.ml[369,12080+14]..src/partialGrammar.ml[369,12080+21])
                              Texp_constant Const_string("error",(src/partialGrammar.ml[369,12080+15]..src/partialGrammar.ml[369,12080+20]),None)
                        ]
                      expression (src/partialGrammar.ml[370,12107+4]..src/partialGrammar.ml[372,12181+40])
                        Texp_apply
                        expression (src/partialGrammar.ml[370,12107+4]..src/partialGrammar.ml[370,12107+15])
                          Texp_ident "Dune__exe!.Error.error"
                        [
                          <arg>
                            Nolabel
                            expression (src/partialGrammar.ml[370,12107+16]..src/partialGrammar.ml[370,12107+25])
                              Texp_ident "positions/1321"
                          <arg>
                            Nolabel
                            expression (src/partialGrammar.ml[371,12133+6]..src/partialGrammar.ml[372,12181+33])
                              Texp_construct "CamlinternalFormatBasics.Format"
                              [
                                expression (src/partialGrammar.ml[371,12133+6]..src/partialGrammar.ml[372,12181+33]) ghost
                                  Texp_construct "CamlinternalFormatBasics.String"
                                  [
                                    expression (src/partialGrammar.ml[371,12133+6]..src/partialGrammar.ml[372,12181+33]) ghost
                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                      []
                                    expression (src/partialGrammar.ml[371,12133+6]..src/partialGrammar.ml[372,12181+33]) ghost
                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                      [
                                        expression (src/partialGrammar.ml[371,12133+6]..src/partialGrammar.ml[372,12181+33]) ghost
                                          Texp_constant Const_string(" is reserved and thus cannot be used as a non-terminal symbol.",(src/partialGrammar.ml[371,12133+6]..src/partialGrammar.ml[372,12181+33]) ghost,None)
                                        expression (src/partialGrammar.ml[371,12133+6]..src/partialGrammar.ml[372,12181+33]) ghost
                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                          []
                                      ]
                                  ]
                                expression (src/partialGrammar.ml[371,12133+6]..src/partialGrammar.ml[372,12181+33]) ghost
                                  Texp_constant Const_string("%s is reserved and thus cannot be used as a non-terminal symbol.",(src/partialGrammar.ml[371,12133+6]..src/partialGrammar.ml[372,12181+33]) ghost,None)
                              ]
                          <arg>
                            Nolabel
                            expression (src/partialGrammar.ml[372,12181+34]..src/partialGrammar.ml[372,12181+40])
                              Texp_ident "symbol/1320"
                        ]
                      None
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[374,12223+0]..src/partialGrammar.ml[380,12457+22])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[374,12223+4]..src/partialGrammar.ml[374,12223+31])
          Tpat_var "non_terminal_is_not_a_token/1322"
        expression (src/partialGrammar.ml[374,12223+32]..src/partialGrammar.ml[380,12457+22]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[374,12223+32]..src/partialGrammar.ml[374,12223+38])
                Tpat_var "tokens/1324"
              expression (src/partialGrammar.ml[374,12223+39]..src/partialGrammar.ml[380,12457+22]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[374,12223+39]..src/partialGrammar.ml[374,12223+45])
                      Tpat_var "symbol/1325"
                    expression (src/partialGrammar.ml[374,12223+46]..src/partialGrammar.ml[380,12457+22]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/partialGrammar.ml[374,12223+46]..src/partialGrammar.ml[374,12223+55])
                            Tpat_var "positions/1326"
                          expression (src/partialGrammar.ml[375,12281+2]..src/partialGrammar.ml[380,12457+22])
                            Texp_try
                            expression (src/partialGrammar.ml[376,12287+4]..src/partialGrammar.ml[379,12441+15])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/partialGrammar.ml[376,12287+8]..src/partialGrammar.ml[376,12287+11])
                                    Tpat_var "tkp/1327"
                                  expression (src/partialGrammar.ml[376,12287+14]..src/partialGrammar.ml[376,12287+42])
                                    Texp_apply
                                    expression (src/partialGrammar.ml[376,12287+14]..src/partialGrammar.ml[376,12287+28])
                                      Texp_ident "Dune__exe!.StringMap.find"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/partialGrammar.ml[376,12287+29]..src/partialGrammar.ml[376,12287+35])
                                          Texp_ident "symbol/1325"
                                      <arg>
                                        Nolabel
                                        expression (src/partialGrammar.ml[376,12287+36]..src/partialGrammar.ml[376,12287+42])
                                          Texp_ident "tokens/1324"
                                    ]
                              ]
                              expression (src/partialGrammar.ml[377,12333+6]..src/partialGrammar.ml[379,12441+15])
                                Texp_apply
                                expression (src/partialGrammar.ml[377,12333+6]..src/partialGrammar.ml[377,12333+17])
                                  Texp_ident "Dune__exe!.Error.error"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/partialGrammar.ml[377,12333+18]..src/partialGrammar.ml[377,12333+51])
                                      Texp_apply
                                      expression (src/partialGrammar.ml[377,12333+29]..src/partialGrammar.ml[377,12333+30])
                                        Texp_ident "Stdlib!.@"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/partialGrammar.ml[377,12333+19]..src/partialGrammar.ml[377,12333+28])
                                            Texp_ident "positions/1326"
                                        <arg>
                                          Nolabel
                                          expression (src/partialGrammar.ml[377,12333+31]..src/partialGrammar.ml[377,12333+50])
                                            Texp_construct "::"
                                            [
                                              expression (src/partialGrammar.ml[377,12333+33]..src/partialGrammar.ml[377,12333+48])
                                                Texp_field
                                                expression (src/partialGrammar.ml[377,12333+33]..src/partialGrammar.ml[377,12333+36])
                                                  Texp_ident "tkp/1327"
                                                "tk_position"
                                              expression (src/partialGrammar.ml[377,12333+49]..src/partialGrammar.ml[377,12333+50]) ghost
                                                Texp_construct "[]"
                                                []
                                            ]
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/partialGrammar.ml[378,12385+9]..src/partialGrammar.ml[378,12385+55])
                                      Texp_construct "CamlinternalFormatBasics.Format"
                                      [
                                        expression (src/partialGrammar.ml[378,12385+9]..src/partialGrammar.ml[378,12385+55]) ghost
                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                          [
                                            expression (src/partialGrammar.ml[378,12385+9]..src/partialGrammar.ml[378,12385+55]) ghost
                                              Texp_constant Const_string("the identifier ",(src/partialGrammar.ml[378,12385+9]..src/partialGrammar.ml[378,12385+55]) ghost,None)
                                            expression (src/partialGrammar.ml[378,12385+9]..src/partialGrammar.ml[378,12385+55]) ghost
                                              Texp_construct "CamlinternalFormatBasics.String"
                                              [
                                                expression (src/partialGrammar.ml[378,12385+9]..src/partialGrammar.ml[378,12385+55]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                  []
                                                expression (src/partialGrammar.ml[378,12385+9]..src/partialGrammar.ml[378,12385+55]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                  [
                                                    expression (src/partialGrammar.ml[378,12385+9]..src/partialGrammar.ml[378,12385+55]) ghost
                                                      Texp_constant Const_string(" is a reference to a token.",(src/partialGrammar.ml[378,12385+9]..src/partialGrammar.ml[378,12385+55]) ghost,None)
                                                    expression (src/partialGrammar.ml[378,12385+9]..src/partialGrammar.ml[378,12385+55]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                      []
                                                  ]
                                              ]
                                          ]
                                        expression (src/partialGrammar.ml[378,12385+9]..src/partialGrammar.ml[378,12385+55]) ghost
                                          Texp_constant Const_string("the identifier %s is a reference to a token.",(src/partialGrammar.ml[378,12385+9]..src/partialGrammar.ml[378,12385+55]) ghost,None)
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/partialGrammar.ml[379,12441+9]..src/partialGrammar.ml[379,12441+15])
                                      Texp_ident "symbol/1325"
                                ]
                            [
                              <case>
                                pattern (src/partialGrammar.ml[380,12457+7]..src/partialGrammar.ml[380,12457+16])
                                  Tpat_construct "Not_found"
                                  []
                                  None
                                expression (src/partialGrammar.ml[380,12457+20]..src/partialGrammar.ml[380,12457+22])
                                  Texp_construct "()"
                                  []
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[382,12481+0]..src/partialGrammar.ml[385,12648+69])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[382,12481+4]..src/partialGrammar.ml[382,12481+28])
          Tpat_var "store_public_nonterminal/1328"
        expression (src/partialGrammar.ml[382,12481+29]..src/partialGrammar.ml[385,12648+69]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[382,12481+29]..src/partialGrammar.ml[382,12481+35])
                Tpat_var "tokens/1330"
              expression (src/partialGrammar.ml[382,12481+36]..src/partialGrammar.ml[385,12648+69]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[382,12481+36]..src/partialGrammar.ml[382,12481+43])
                      Tpat_var "symbols/1331"
                    expression (src/partialGrammar.ml[382,12481+44]..src/partialGrammar.ml[385,12648+69]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/partialGrammar.ml[382,12481+44]..src/partialGrammar.ml[382,12481+50])
                            Tpat_var "symbol/1332"
                          expression (src/partialGrammar.ml[382,12481+51]..src/partialGrammar.ml[385,12648+69]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/partialGrammar.ml[382,12481+51]..src/partialGrammar.ml[382,12481+60])
                                  Tpat_var "positions/1333"
                                expression (src/partialGrammar.ml[383,12544+2]..src/partialGrammar.ml[385,12648+69])
                                  Texp_sequence
                                  expression (src/partialGrammar.ml[383,12544+2]..src/partialGrammar.ml[383,12544+47])
                                    Texp_apply
                                    expression (src/partialGrammar.ml[383,12544+2]..src/partialGrammar.ml[383,12544+30])
                                      Texp_ident "non_terminal_is_not_reserved/1318"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/partialGrammar.ml[383,12544+31]..src/partialGrammar.ml[383,12544+37])
                                          Texp_ident "symbol/1332"
                                      <arg>
                                        Nolabel
                                        expression (src/partialGrammar.ml[383,12544+38]..src/partialGrammar.ml[383,12544+47])
                                          Texp_ident "positions/1333"
                                    ]
                                  expression (src/partialGrammar.ml[384,12593+2]..src/partialGrammar.ml[385,12648+69])
                                    Texp_sequence
                                    expression (src/partialGrammar.ml[384,12593+2]..src/partialGrammar.ml[384,12593+53])
                                      Texp_apply
                                      expression (src/partialGrammar.ml[384,12593+2]..src/partialGrammar.ml[384,12593+29])
                                        Texp_ident "non_terminal_is_not_a_token/1322"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/partialGrammar.ml[384,12593+30]..src/partialGrammar.ml[384,12593+36])
                                            Texp_ident "tokens/1330"
                                        <arg>
                                          Nolabel
                                          expression (src/partialGrammar.ml[384,12593+37]..src/partialGrammar.ml[384,12593+43])
                                            Texp_ident "symbol/1332"
                                        <arg>
                                          Nolabel
                                          expression (src/partialGrammar.ml[384,12593+44]..src/partialGrammar.ml[384,12593+53])
                                            Texp_ident "positions/1333"
                                      ]
                                    expression (src/partialGrammar.ml[385,12648+2]..src/partialGrammar.ml[385,12648+69])
                                      Texp_apply
                                      expression (src/partialGrammar.ml[385,12648+2]..src/partialGrammar.ml[385,12648+14])
                                        Texp_ident "store_symbol/1294"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/partialGrammar.ml[385,12648+15]..src/partialGrammar.ml[385,12648+22])
                                            Texp_ident "symbols/1331"
                                        <arg>
                                          Nolabel
                                          expression (src/partialGrammar.ml[385,12648+23]..src/partialGrammar.ml[385,12648+29])
                                            Texp_ident "symbol/1332"
                                        <arg>
                                          Nolabel
                                          expression (src/partialGrammar.ml[385,12648+30]..src/partialGrammar.ml[385,12648+69])
                                            Texp_construct "PublicNonTerminal"
                                            [
                                              expression (src/partialGrammar.ml[385,12648+49]..src/partialGrammar.ml[385,12648+68])
                                                Texp_apply
                                                expression (src/partialGrammar.ml[385,12648+50]..src/partialGrammar.ml[385,12648+57])
                                                  Texp_ident "Stdlib!.List.hd"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/partialGrammar.ml[385,12648+58]..src/partialGrammar.ml[385,12648+67])
                                                      Texp_ident "positions/1333"
                                                ]
                                            ]
                                      ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[387,12719+0]..src/partialGrammar.ml[390,12887+70])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[387,12719+4]..src/partialGrammar.ml[387,12719+29])
          Tpat_var "store_private_nonterminal/1334"
        expression (src/partialGrammar.ml[387,12719+30]..src/partialGrammar.ml[390,12887+70]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[387,12719+30]..src/partialGrammar.ml[387,12719+36])
                Tpat_var "tokens/1336"
              expression (src/partialGrammar.ml[387,12719+37]..src/partialGrammar.ml[390,12887+70]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[387,12719+37]..src/partialGrammar.ml[387,12719+44])
                      Tpat_var "symbols/1337"
                    expression (src/partialGrammar.ml[387,12719+45]..src/partialGrammar.ml[390,12887+70]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/partialGrammar.ml[387,12719+45]..src/partialGrammar.ml[387,12719+51])
                            Tpat_var "symbol/1338"
                          expression (src/partialGrammar.ml[387,12719+52]..src/partialGrammar.ml[390,12887+70]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/partialGrammar.ml[387,12719+52]..src/partialGrammar.ml[387,12719+61])
                                  Tpat_var "positions/1339"
                                expression (src/partialGrammar.ml[388,12783+2]..src/partialGrammar.ml[390,12887+70])
                                  Texp_sequence
                                  expression (src/partialGrammar.ml[388,12783+2]..src/partialGrammar.ml[388,12783+47])
                                    Texp_apply
                                    expression (src/partialGrammar.ml[388,12783+2]..src/partialGrammar.ml[388,12783+30])
                                      Texp_ident "non_terminal_is_not_reserved/1318"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/partialGrammar.ml[388,12783+31]..src/partialGrammar.ml[388,12783+37])
                                          Texp_ident "symbol/1338"
                                      <arg>
                                        Nolabel
                                        expression (src/partialGrammar.ml[388,12783+38]..src/partialGrammar.ml[388,12783+47])
                                          Texp_ident "positions/1339"
                                    ]
                                  expression (src/partialGrammar.ml[389,12832+2]..src/partialGrammar.ml[390,12887+70])
                                    Texp_sequence
                                    expression (src/partialGrammar.ml[389,12832+2]..src/partialGrammar.ml[389,12832+53])
                                      Texp_apply
                                      expression (src/partialGrammar.ml[389,12832+2]..src/partialGrammar.ml[389,12832+29])
                                        Texp_ident "non_terminal_is_not_a_token/1322"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/partialGrammar.ml[389,12832+30]..src/partialGrammar.ml[389,12832+36])
                                            Texp_ident "tokens/1336"
                                        <arg>
                                          Nolabel
                                          expression (src/partialGrammar.ml[389,12832+37]..src/partialGrammar.ml[389,12832+43])
                                            Texp_ident "symbol/1338"
                                        <arg>
                                          Nolabel
                                          expression (src/partialGrammar.ml[389,12832+44]..src/partialGrammar.ml[389,12832+53])
                                            Texp_ident "positions/1339"
                                      ]
                                    expression (src/partialGrammar.ml[390,12887+2]..src/partialGrammar.ml[390,12887+70])
                                      Texp_apply
                                      expression (src/partialGrammar.ml[390,12887+2]..src/partialGrammar.ml[390,12887+14])
                                        Texp_ident "store_symbol/1294"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/partialGrammar.ml[390,12887+15]..src/partialGrammar.ml[390,12887+22])
                                            Texp_ident "symbols/1337"
                                        <arg>
                                          Nolabel
                                          expression (src/partialGrammar.ml[390,12887+23]..src/partialGrammar.ml[390,12887+29])
                                            Texp_ident "symbol/1338"
                                        <arg>
                                          Nolabel
                                          expression (src/partialGrammar.ml[390,12887+30]..src/partialGrammar.ml[390,12887+70])
                                            Texp_construct "PrivateNonTerminal"
                                            [
                                              expression (src/partialGrammar.ml[390,12887+50]..src/partialGrammar.ml[390,12887+69])
                                                Texp_apply
                                                expression (src/partialGrammar.ml[390,12887+51]..src/partialGrammar.ml[390,12887+58])
                                                  Texp_ident "Stdlib!.List.hd"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/partialGrammar.ml[390,12887+59]..src/partialGrammar.ml[390,12887+68])
                                                      Texp_ident "positions/1339"
                                                ]
                                            ]
                                      ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[421,13795+0]..src/partialGrammar.ml[429,13957+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[421,13795+4]..src/partialGrammar.ml[421,13795+21])
          Tpat_var "is_private_symbol/1340"
        expression (src/partialGrammar.ml[421,13795+22]..src/partialGrammar.ml[429,13957+9]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[421,13795+22]..src/partialGrammar.ml[421,13795+23])
                Tpat_var "t/1342"
              expression (src/partialGrammar.ml[421,13795+24]..src/partialGrammar.ml[429,13957+9]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[421,13795+24]..src/partialGrammar.ml[421,13795+25])
                      Tpat_var "x/1343"
                    expression (src/partialGrammar.ml[422,13823+2]..src/partialGrammar.ml[429,13957+9])
                      Texp_try
                      expression (src/partialGrammar.ml[423,13829+4]..src/partialGrammar.ml[427,13921+15])
                        Texp_match
                        expression (src/partialGrammar.ml[423,13829+10]..src/partialGrammar.ml[423,13829+26])
                          Texp_apply
                          expression (src/partialGrammar.ml[423,13829+10]..src/partialGrammar.ml[423,13829+22])
                            Texp_ident "Stdlib!.Hashtbl.find"
                          [
                            <arg>
                              Nolabel
                              expression (src/partialGrammar.ml[423,13829+23]..src/partialGrammar.ml[423,13829+24])
                                Texp_ident "t/1342"
                            <arg>
                              Nolabel
                              expression (src/partialGrammar.ml[423,13829+25]..src/partialGrammar.ml[423,13829+26])
                                Texp_ident "x/1343"
                          ]
                        [
                          <case>
                            pattern (src/partialGrammar.ml[424,13861+8]..src/partialGrammar.ml[424,13861+28])
                              Tpat_value
                              pattern (src/partialGrammar.ml[424,13861+8]..src/partialGrammar.ml[424,13861+28])
                                Tpat_construct "PrivateNonTerminal"
                                [
                                  pattern (src/partialGrammar.ml[424,13861+27]..src/partialGrammar.ml[424,13861+28])
                                    Tpat_any
                                ]
                                None
                            expression (src/partialGrammar.ml[425,13893+10]..src/partialGrammar.ml[425,13893+14])
                              Texp_construct "true"
                              []
                          <case>
                            pattern (src/partialGrammar.ml[426,13908+8]..src/partialGrammar.ml[426,13908+9])
                              Tpat_value
                              pattern (src/partialGrammar.ml[426,13908+8]..src/partialGrammar.ml[426,13908+9])
                                Tpat_any
                            expression (src/partialGrammar.ml[427,13921+10]..src/partialGrammar.ml[427,13921+15])
                              Texp_construct "false"
                              []
                        ]
                      [
                        <case>
                          pattern (src/partialGrammar.ml[428,13937+7]..src/partialGrammar.ml[428,13937+16])
                            Tpat_construct "Not_found"
                            []
                            None
                          expression (src/partialGrammar.ml[429,13957+4]..src/partialGrammar.ml[429,13957+9])
                            Texp_construct "false"
                            []
                      ]
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[431,13968+0]..src/partialGrammar.ml[435,14122+10])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[431,13968+4]..src/partialGrammar.ml[431,13968+27])
          Tpat_var "fold_on_private_symbols/1344"
        expression (src/partialGrammar.ml[431,13968+28]..src/partialGrammar.ml[435,14122+10]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[431,13968+28]..src/partialGrammar.ml[431,13968+29])
                Tpat_var "f/1346"
              expression (src/partialGrammar.ml[431,13968+30]..src/partialGrammar.ml[435,14122+10]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[431,13968+30]..src/partialGrammar.ml[431,13968+34])
                      Tpat_var "init/1347"
                    expression (src/partialGrammar.ml[431,13968+35]..src/partialGrammar.ml[435,14122+10]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/partialGrammar.ml[431,13968+35]..src/partialGrammar.ml[431,13968+36])
                            Tpat_var "t/1348"
                          expression (src/partialGrammar.ml[432,14007+2]..src/partialGrammar.ml[435,14122+10])
                            Texp_apply
                            expression (src/partialGrammar.ml[432,14007+2]..src/partialGrammar.ml[432,14007+14])
                              Texp_ident "Stdlib!.Hashtbl.fold"
                            [
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[433,14022+4]..src/partialGrammar.ml[434,14090+31])
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/partialGrammar.ml[433,14022+9]..src/partialGrammar.ml[433,14022+10])
                                        Tpat_var "k/1349"
                                      expression (src/partialGrammar.ml[433,14022+14]..src/partialGrammar.ml[434,14090+30])
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/partialGrammar.ml[433,14022+23]..src/partialGrammar.ml[433,14022+43])
                                              Tpat_construct "PrivateNonTerminal"
                                              [
                                                pattern (src/partialGrammar.ml[433,14022+42]..src/partialGrammar.ml[433,14022+43])
                                                  Tpat_any
                                              ]
                                              None
                                            expression (src/partialGrammar.ml[433,14022+47]..src/partialGrammar.ml[433,14022+67])
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/partialGrammar.ml[433,14022+52]..src/partialGrammar.ml[433,14022+55])
                                                    Tpat_var "acu/1350"
                                                  expression (src/partialGrammar.ml[433,14022+59]..src/partialGrammar.ml[433,14022+66])
                                                    Texp_apply
                                                    expression (src/partialGrammar.ml[433,14022+59]..src/partialGrammar.ml[433,14022+60])
                                                      Texp_ident "f/1346"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/partialGrammar.ml[433,14022+61]..src/partialGrammar.ml[433,14022+64])
                                                          Texp_ident "acu/1350"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/partialGrammar.ml[433,14022+65]..src/partialGrammar.ml[433,14022+66])
                                                          Texp_ident "k/1349"
                                                    ]
                                              ]
                                          <case>
                                            pattern (src/partialGrammar.ml[434,14090+9]..src/partialGrammar.ml[434,14090+10])
                                              Tpat_any
                                            expression (src/partialGrammar.ml[434,14090+14]..src/partialGrammar.ml[434,14090+30])
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/partialGrammar.ml[434,14090+19]..src/partialGrammar.ml[434,14090+22])
                                                    Tpat_var "acu/1351"
                                                  expression (src/partialGrammar.ml[434,14090+26]..src/partialGrammar.ml[434,14090+29])
                                                    Texp_ident "acu/1351"
                                              ]
                                        ]
                                  ]
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[435,14122+4]..src/partialGrammar.ml[435,14122+5])
                                  Texp_ident "t/1348"
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[435,14122+6]..src/partialGrammar.ml[435,14122+10])
                                  Texp_ident "init/1347"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[437,14134+0]..src/partialGrammar.ml[441,14286+10])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[437,14134+4]..src/partialGrammar.ml[437,14134+26])
          Tpat_var "fold_on_public_symbols/1353"
        expression (src/partialGrammar.ml[437,14134+27]..src/partialGrammar.ml[441,14286+10]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[437,14134+27]..src/partialGrammar.ml[437,14134+28])
                Tpat_var "f/1355"
              expression (src/partialGrammar.ml[437,14134+29]..src/partialGrammar.ml[441,14286+10]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[437,14134+29]..src/partialGrammar.ml[437,14134+33])
                      Tpat_var "init/1356"
                    expression (src/partialGrammar.ml[437,14134+34]..src/partialGrammar.ml[441,14286+10]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/partialGrammar.ml[437,14134+34]..src/partialGrammar.ml[437,14134+35])
                            Tpat_var "t/1357"
                          expression (src/partialGrammar.ml[438,14172+2]..src/partialGrammar.ml[441,14286+10])
                            Texp_apply
                            expression (src/partialGrammar.ml[438,14172+2]..src/partialGrammar.ml[438,14172+14])
                              Texp_ident "Stdlib!.Hashtbl.fold"
                            [
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[439,14187+4]..src/partialGrammar.ml[440,14254+31])
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/partialGrammar.ml[439,14187+9]..src/partialGrammar.ml[439,14187+10])
                                        Tpat_var "k/1358"
                                      expression (src/partialGrammar.ml[439,14187+14]..src/partialGrammar.ml[440,14254+30])
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/partialGrammar.ml[439,14187+23]..src/partialGrammar.ml[439,14187+42])
                                              Tpat_construct "PublicNonTerminal"
                                              [
                                                pattern (src/partialGrammar.ml[439,14187+41]..src/partialGrammar.ml[439,14187+42])
                                                  Tpat_any
                                              ]
                                              None
                                            expression (src/partialGrammar.ml[439,14187+46]..src/partialGrammar.ml[439,14187+66])
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/partialGrammar.ml[439,14187+51]..src/partialGrammar.ml[439,14187+54])
                                                    Tpat_var "acu/1359"
                                                  expression (src/partialGrammar.ml[439,14187+58]..src/partialGrammar.ml[439,14187+65])
                                                    Texp_apply
                                                    expression (src/partialGrammar.ml[439,14187+58]..src/partialGrammar.ml[439,14187+59])
                                                      Texp_ident "f/1355"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/partialGrammar.ml[439,14187+60]..src/partialGrammar.ml[439,14187+63])
                                                          Texp_ident "acu/1359"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/partialGrammar.ml[439,14187+64]..src/partialGrammar.ml[439,14187+65])
                                                          Texp_ident "k/1358"
                                                    ]
                                              ]
                                          <case>
                                            pattern (src/partialGrammar.ml[440,14254+9]..src/partialGrammar.ml[440,14254+10])
                                              Tpat_any
                                            expression (src/partialGrammar.ml[440,14254+14]..src/partialGrammar.ml[440,14254+30])
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/partialGrammar.ml[440,14254+19]..src/partialGrammar.ml[440,14254+22])
                                                    Tpat_var "acu/1360"
                                                  expression (src/partialGrammar.ml[440,14254+26]..src/partialGrammar.ml[440,14254+29])
                                                    Texp_ident "acu/1360"
                                              ]
                                        ]
                                  ]
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[441,14286+4]..src/partialGrammar.ml[441,14286+5])
                                  Texp_ident "t/1357"
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[441,14286+6]..src/partialGrammar.ml[441,14286+10])
                                  Texp_ident "init/1356"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[443,14298+0]..src/partialGrammar.ml[447,14414+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[443,14298+4]..src/partialGrammar.ml[443,14298+29])
          Tpat_var "iter_on_only_used_symbols/1362"
        expression (src/partialGrammar.ml[443,14298+30]..src/partialGrammar.ml[447,14414+5]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[443,14298+30]..src/partialGrammar.ml[443,14298+31])
                Tpat_var "f/1364"
              expression (src/partialGrammar.ml[443,14298+32]..src/partialGrammar.ml[447,14414+5]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[443,14298+32]..src/partialGrammar.ml[443,14298+33])
                      Tpat_var "t/1365"
                    expression (src/partialGrammar.ml[444,14334+2]..src/partialGrammar.ml[447,14414+5])
                      Texp_apply
                      expression (src/partialGrammar.ml[444,14334+2]..src/partialGrammar.ml[444,14334+14])
                        Texp_ident "Stdlib!.Hashtbl.iter"
                      [
                        <arg>
                          Nolabel
                          expression (src/partialGrammar.ml[445,14349+4]..src/partialGrammar.ml[446,14396+17])
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/partialGrammar.ml[445,14349+9]..src/partialGrammar.ml[445,14349+10])
                                  Tpat_var "k/1366"
                                expression (src/partialGrammar.ml[445,14349+14]..src/partialGrammar.ml[446,14396+16])
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/partialGrammar.ml[445,14349+23]..src/partialGrammar.ml[445,14349+35])
                                        Tpat_construct "DontKnow"
                                        [
                                          pattern (src/partialGrammar.ml[445,14349+32]..src/partialGrammar.ml[445,14349+35])
                                            Tpat_var "pos/1367"
                                        ]
                                        None
                                      expression (src/partialGrammar.ml[445,14349+39]..src/partialGrammar.ml[445,14349+46])
                                        Texp_apply
                                        expression (src/partialGrammar.ml[445,14349+39]..src/partialGrammar.ml[445,14349+40])
                                          Texp_ident "f/1364"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/partialGrammar.ml[445,14349+41]..src/partialGrammar.ml[445,14349+42])
                                              Texp_ident "k/1366"
                                          <arg>
                                            Nolabel
                                            expression (src/partialGrammar.ml[445,14349+43]..src/partialGrammar.ml[445,14349+46])
                                              Texp_ident "pos/1367"
                                        ]
                                    <case>
                                      pattern (src/partialGrammar.ml[446,14396+9]..src/partialGrammar.ml[446,14396+10])
                                        Tpat_any
                                      expression (src/partialGrammar.ml[446,14396+14]..src/partialGrammar.ml[446,14396+16])
                                        Texp_construct "()"
                                        []
                                  ]
                            ]
                        <arg>
                          Nolabel
                          expression (src/partialGrammar.ml[447,14414+4]..src/partialGrammar.ml[447,14414+5])
                            Texp_ident "t/1365"
                      ]
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[449,14421+0]..src/partialGrammar.ml[482,15789+76])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[449,14421+4]..src/partialGrammar.ml[449,14421+14])
          Tpat_var "symbols_of/1369"
        expression (src/partialGrammar.ml[449,14421+15]..src/partialGrammar.ml[482,15789+76]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[449,14421+15]..src/partialGrammar.ml[449,14421+22])
                Tpat_var "grammar/1371"
              expression (src/partialGrammar.ml[449,14421+23]..src/partialGrammar.ml[482,15789+76]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[449,14421+24]..src/partialGrammar.ml[449,14421+32])
                      extra
                        Tpat_extra_constraint
                        core_type (src/partialGrammar.ml[449,14421+35]..src/partialGrammar.ml[449,14421+57])
                          Ttyp_constr "Dune__exe!.Syntax.partial_grammar"
                          []
                      Tpat_alias "pgrammar/1372"
                      pattern (src/partialGrammar.ml[449,14421+24]..src/partialGrammar.ml[449,14421+32])
                        Tpat_any
                    expression (src/partialGrammar.ml[450,14482+2]..src/partialGrammar.ml[482,15789+76])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/partialGrammar.ml[450,14482+6]..src/partialGrammar.ml[450,14482+12])
                            Tpat_var "tokens/1373"
                          expression (src/partialGrammar.ml[450,14482+15]..src/partialGrammar.ml[450,14482+31])
                            Texp_field
                            expression (src/partialGrammar.ml[450,14482+15]..src/partialGrammar.ml[450,14482+22])
                              Texp_ident "grammar/1371"
                            "p_tokens"
                      ]
                      expression (src/partialGrammar.ml[451,14517+2]..src/partialGrammar.ml[482,15789+76])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/partialGrammar.ml[451,14517+6]..src/partialGrammar.ml[451,14517+21])
                              Tpat_var "symbols_of_rule/1374"
                            expression (src/partialGrammar.ml[451,14517+22]..src/partialGrammar.ml[480,15704+79]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/partialGrammar.ml[451,14517+22]..src/partialGrammar.ml[451,14517+29])
                                    Tpat_var "symbols/1376"
                                  expression (src/partialGrammar.ml[451,14517+30]..src/partialGrammar.ml[480,15704+79]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/partialGrammar.ml[451,14517+30]..src/partialGrammar.ml[451,14517+35])
                                          Tpat_var "prule/1377"
                                        expression (src/partialGrammar.ml[452,14555+4]..src/partialGrammar.ml[480,15704+79])
                                          Texp_let Rec
                                          [
                                            <def>
                                              pattern (src/partialGrammar.ml[452,14555+12]..src/partialGrammar.ml[452,14555+40])
                                                Tpat_var "store_except_rule_parameters/1378"
                                              expression (src/partialGrammar.ml[452,14555+41]..src/partialGrammar.ml[463,15037+68]) ghost
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (src/partialGrammar.ml[452,14555+41]..src/partialGrammar.ml[452,14555+48])
                                                      Tpat_var "symbols/1379"
                                                    expression (src/partialGrammar.ml[452,14555+49]..src/partialGrammar.ml[463,15037+68]) ghost
                                                      Texp_function
                                                      Nolabel
                                                      [
                                                        <case>
                                                          pattern (src/partialGrammar.ml[452,14555+49]..src/partialGrammar.ml[452,14555+58])
                                                            Tpat_var "parameter/1380"
                                                          expression (src/partialGrammar.ml[453,14616+6]..src/partialGrammar.ml[463,15037+68])
                                                            Texp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (src/partialGrammar.ml[453,14616+10]..src/partialGrammar.ml[453,14616+28])
                                                                  Tpat_tuple
                                                                  [
                                                                    pattern (src/partialGrammar.ml[453,14616+10]..src/partialGrammar.ml[453,14616+16])
                                                                      Tpat_var "symbol/1381"
                                                                    pattern (src/partialGrammar.ml[453,14616+18]..src/partialGrammar.ml[453,14616+28])
                                                                      Tpat_var "parameters/1382"
                                                                  ]
                                                                expression (src/partialGrammar.ml[453,14616+31]..src/partialGrammar.ml[453,14616+57])
                                                                  Texp_apply
                                                                  expression (src/partialGrammar.ml[453,14616+31]..src/partialGrammar.ml[453,14616+47])
                                                                    Texp_ident "Dune__exe!.Parameters.unapp"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/partialGrammar.ml[453,14616+48]..src/partialGrammar.ml[453,14616+57])
                                                                        Texp_ident "parameter/1380"
                                                                  ]
                                                            ]
                                                            expression (src/partialGrammar.ml[455,14724+6]..src/partialGrammar.ml[463,15037+68])
                                                              Texp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (src/partialGrammar.ml[455,14724+10]..src/partialGrammar.ml[455,14724+17])
                                                                    Tpat_var "symbols/1383"
                                                                  expression (src/partialGrammar.ml[456,14744+8]..src/partialGrammar.ml[460,14920+71])
                                                                    Texp_ifthenelse
                                                                    expression (src/partialGrammar.ml[456,14744+11]..src/partialGrammar.ml[456,14744+52])
                                                                      Texp_apply
                                                                      expression (src/partialGrammar.ml[456,14744+11]..src/partialGrammar.ml[456,14744+19])
                                                                        Texp_ident "Stdlib!.List.mem"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/partialGrammar.ml[456,14744+20]..src/partialGrammar.ml[456,14744+32])
                                                                            Texp_field
                                                                            expression (src/partialGrammar.ml[456,14744+20]..src/partialGrammar.ml[456,14744+26])
                                                                              Texp_ident "symbol/1381"
                                                                            "value"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/partialGrammar.ml[456,14744+33]..src/partialGrammar.ml[456,14744+52])
                                                                            Texp_field
                                                                            expression (src/partialGrammar.ml[456,14744+33]..src/partialGrammar.ml[456,14744+38])
                                                                              Texp_ident "prule/1377"
                                                                            "pr_parameters"
                                                                      ]
                                                                    expression (src/partialGrammar.ml[458,14889+10]..src/partialGrammar.ml[458,14889+17])
                                                                      Texp_ident "symbols/1379"
                                                                    Some
                                                                      expression (src/partialGrammar.ml[460,14920+10]..src/partialGrammar.ml[460,14920+71])
                                                                        Texp_apply
                                                                        expression (src/partialGrammar.ml[460,14920+10]..src/partialGrammar.ml[460,14920+27])
                                                                          Texp_ident "store_used_symbol/1311"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/partialGrammar.ml[460,14920+28]..src/partialGrammar.ml[460,14920+43])
                                                                              Texp_field
                                                                              expression (src/partialGrammar.ml[460,14920+28]..src/partialGrammar.ml[460,14920+34])
                                                                                Texp_ident "symbol/1381"
                                                                              "position"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/partialGrammar.ml[460,14920+44]..src/partialGrammar.ml[460,14920+50])
                                                                              Texp_ident "tokens/1373"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/partialGrammar.ml[460,14920+51]..src/partialGrammar.ml[460,14920+58])
                                                                              Texp_ident "symbols/1379"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/partialGrammar.ml[460,14920+59]..src/partialGrammar.ml[460,14920+71])
                                                                              Texp_field
                                                                              expression (src/partialGrammar.ml[460,14920+59]..src/partialGrammar.ml[460,14920+65])
                                                                                Texp_ident "symbol/1381"
                                                                              "value"
                                                                        ]
                                                              ]
                                                              expression (src/partialGrammar.ml[463,15037+6]..src/partialGrammar.ml[463,15037+68])
                                                                Texp_apply
                                                                expression (src/partialGrammar.ml[463,15037+6]..src/partialGrammar.ml[463,15037+20])
                                                                  Texp_ident "Stdlib!.List.fold_left"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/partialGrammar.ml[463,15037+21]..src/partialGrammar.ml[463,15037+49])
                                                                      Texp_ident "store_except_rule_parameters/1378"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/partialGrammar.ml[463,15037+50]..src/partialGrammar.ml[463,15037+57])
                                                                      Texp_ident "symbols/1383"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/partialGrammar.ml[463,15037+58]..src/partialGrammar.ml[463,15037+68])
                                                                      Texp_ident "parameters/1382"
                                                                ]
                                                      ]
                                                ]
                                          ]
                                          expression (src/partialGrammar.ml[467,15145+4]..src/partialGrammar.ml[480,15704+79])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/partialGrammar.ml[467,15145+8]..src/partialGrammar.ml[467,15145+15])
                                                  Tpat_var "symbols/1384"
                                                expression (src/partialGrammar.ml[467,15145+18]..src/partialGrammar.ml[471,15331+31])
                                                  Texp_apply
                                                  expression (src/partialGrammar.ml[467,15145+18]..src/partialGrammar.ml[467,15145+32])
                                                    Texp_ident "Stdlib!.List.fold_left"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/partialGrammar.ml[467,15145+33]..src/partialGrammar.ml[471,15331+5])
                                                        Texp_function
                                                        Nolabel
                                                        [
                                                          <case>
                                                            pattern (src/partialGrammar.ml[467,15145+38]..src/partialGrammar.ml[467,15145+45])
                                                              Tpat_var "symbols/1385"
                                                            expression (src/partialGrammar.ml[467,15145+46]..src/partialGrammar.ml[470,15295+35]) ghost
                                                              Texp_function
                                                              Nolabel
                                                              [
                                                                <case>
                                                                  pattern (src/partialGrammar.ml[467,15145+46]..src/partialGrammar.ml[467,15145+52])
                                                                    Tpat_var "branch/1386"
                                                                  expression (src/partialGrammar.ml[468,15201+6]..src/partialGrammar.ml[470,15295+35])
                                                                    Texp_apply
                                                                    expression (src/partialGrammar.ml[468,15201+6]..src/partialGrammar.ml[468,15201+20])
                                                                      Texp_ident "Stdlib!.List.fold_left"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/partialGrammar.ml[468,15201+21]..src/partialGrammar.ml[470,15295+7])
                                                                          Texp_function
                                                                          Nolabel
                                                                          [
                                                                            <case>
                                                                              pattern (src/partialGrammar.ml[468,15201+26]..src/partialGrammar.ml[468,15201+33])
                                                                                Tpat_var "symbols/1387"
                                                                              expression (src/partialGrammar.ml[468,15201+34]..src/partialGrammar.ml[469,15248+46]) ghost
                                                                                Texp_function
                                                                                Nolabel
                                                                                [
                                                                                  <case>
                                                                                    pattern (src/partialGrammar.ml[468,15201+34]..src/partialGrammar.ml[468,15201+43])
                                                                                      Tpat_tuple
                                                                                      [
                                                                                        pattern (src/partialGrammar.ml[468,15201+35]..src/partialGrammar.ml[468,15201+36])
                                                                                          Tpat_any
                                                                                        pattern (src/partialGrammar.ml[468,15201+38]..src/partialGrammar.ml[468,15201+39])
                                                                                          Tpat_var "p/1388"
                                                                                        pattern (src/partialGrammar.ml[468,15201+41]..src/partialGrammar.ml[468,15201+42])
                                                                                          Tpat_any
                                                                                      ]
                                                                                    expression (src/partialGrammar.ml[469,15248+8]..src/partialGrammar.ml[469,15248+46])
                                                                                      Texp_apply
                                                                                      expression (src/partialGrammar.ml[469,15248+8]..src/partialGrammar.ml[469,15248+36])
                                                                                        Texp_ident "store_except_rule_parameters/1378"
                                                                                      [
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/partialGrammar.ml[469,15248+37]..src/partialGrammar.ml[469,15248+44])
                                                                                            Texp_ident "symbols/1387"
                                                                                        <arg>
                                                                                          Nolabel
                                                                                          expression (src/partialGrammar.ml[469,15248+45]..src/partialGrammar.ml[469,15248+46])
                                                                                            Texp_ident "p/1388"
                                                                                      ]
                                                                                ]
                                                                          ]
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/partialGrammar.ml[470,15295+8]..src/partialGrammar.ml[470,15295+15])
                                                                          Texp_ident "symbols/1385"
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/partialGrammar.ml[470,15295+16]..src/partialGrammar.ml[470,15295+35])
                                                                          Texp_field
                                                                          expression (src/partialGrammar.ml[470,15295+16]..src/partialGrammar.ml[470,15295+22])
                                                                            Texp_ident "branch/1386"
                                                                          "pr_producers"
                                                                    ]
                                                              ]
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (src/partialGrammar.ml[471,15331+6]..src/partialGrammar.ml[471,15331+13])
                                                        Texp_ident "symbols/1376"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/partialGrammar.ml[471,15331+14]..src/partialGrammar.ml[471,15331+31])
                                                        Texp_field
                                                        expression (src/partialGrammar.ml[471,15331+14]..src/partialGrammar.ml[471,15331+19])
                                                          Texp_ident "prule/1377"
                                                        "pr_branches"
                                                  ]
                                            ]
                                            expression (src/partialGrammar.ml[476,15518+6]..src/partialGrammar.ml[480,15704+79])
                                              Texp_ifthenelse
                                              expression (src/partialGrammar.ml[476,15518+9]..src/partialGrammar.ml[477,15548+60])
                                                Texp_apply
                                                expression (src/partialGrammar.ml[477,15548+8]..src/partialGrammar.ml[477,15548+10])
                                                  Texp_ident "Stdlib!.||"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/partialGrammar.ml[476,15518+9]..src/partialGrammar.ml[476,15518+29])
                                                      Texp_field
                                                      expression (src/partialGrammar.ml[476,15518+9]..src/partialGrammar.ml[476,15518+14])
                                                        Texp_ident "prule/1377"
                                                      "pr_public_flag"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/partialGrammar.ml[477,15548+11]..src/partialGrammar.ml[477,15548+60])
                                                      Texp_apply
                                                      expression (src/partialGrammar.ml[477,15548+11]..src/partialGrammar.ml[477,15548+24])
                                                        Texp_ident "Dune__exe!.StringMap.mem"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/partialGrammar.ml[477,15548+25]..src/partialGrammar.ml[477,15548+36])
                                                            Texp_field
                                                            expression (src/partialGrammar.ml[477,15548+25]..src/partialGrammar.ml[477,15548+30])
                                                              Texp_ident "prule/1377"
                                                            "pr_nt"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/partialGrammar.ml[477,15548+37]..src/partialGrammar.ml[477,15548+60])
                                                            Texp_field
                                                            expression (src/partialGrammar.ml[477,15548+37]..src/partialGrammar.ml[477,15548+44])
                                                              Texp_ident "grammar/1371"
                                                            "p_start_symbols"
                                                      ]
                                                ]
                                              expression (src/partialGrammar.ml[478,15614+8]..src/partialGrammar.ml[478,15614+78])
                                                Texp_apply
                                                expression (src/partialGrammar.ml[478,15614+8]..src/partialGrammar.ml[478,15614+32])
                                                  Texp_ident "store_public_nonterminal/1328"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/partialGrammar.ml[478,15614+33]..src/partialGrammar.ml[478,15614+39])
                                                      Texp_ident "tokens/1373"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/partialGrammar.ml[478,15614+40]..src/partialGrammar.ml[478,15614+47])
                                                      Texp_ident "symbols/1384"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/partialGrammar.ml[478,15614+48]..src/partialGrammar.ml[478,15614+59])
                                                      Texp_field
                                                      expression (src/partialGrammar.ml[478,15614+48]..src/partialGrammar.ml[478,15614+53])
                                                        Texp_ident "prule/1377"
                                                      "pr_nt"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/partialGrammar.ml[478,15614+60]..src/partialGrammar.ml[478,15614+78])
                                                      Texp_field
                                                      expression (src/partialGrammar.ml[478,15614+60]..src/partialGrammar.ml[478,15614+65])
                                                        Texp_ident "prule/1377"
                                                      "pr_positions"
                                                ]
                                              Some
                                                expression (src/partialGrammar.ml[480,15704+8]..src/partialGrammar.ml[480,15704+79])
                                                  Texp_apply
                                                  expression (src/partialGrammar.ml[480,15704+8]..src/partialGrammar.ml[480,15704+33])
                                                    Texp_ident "store_private_nonterminal/1334"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/partialGrammar.ml[480,15704+34]..src/partialGrammar.ml[480,15704+40])
                                                        Texp_ident "tokens/1373"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/partialGrammar.ml[480,15704+41]..src/partialGrammar.ml[480,15704+48])
                                                        Texp_ident "symbols/1384"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/partialGrammar.ml[480,15704+49]..src/partialGrammar.ml[480,15704+60])
                                                        Texp_field
                                                        expression (src/partialGrammar.ml[480,15704+49]..src/partialGrammar.ml[480,15704+54])
                                                          Texp_ident "prule/1377"
                                                        "pr_nt"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/partialGrammar.ml[480,15704+61]..src/partialGrammar.ml[480,15704+79])
                                                        Texp_field
                                                        expression (src/partialGrammar.ml[480,15704+61]..src/partialGrammar.ml[480,15704+66])
                                                          Texp_ident "prule/1377"
                                                        "pr_positions"
                                                  ]
                                    ]
                              ]
                        ]
                        expression (src/partialGrammar.ml[482,15789+4]..src/partialGrammar.ml[482,15789+76])
                          Texp_apply
                          expression (src/partialGrammar.ml[482,15789+4]..src/partialGrammar.ml[482,15789+18])
                            Texp_ident "Stdlib!.List.fold_left"
                          [
                            <arg>
                              Nolabel
                              expression (src/partialGrammar.ml[482,15789+19]..src/partialGrammar.ml[482,15789+34])
                                Texp_ident "symbols_of_rule/1374"
                            <arg>
                              Nolabel
                              expression (src/partialGrammar.ml[482,15789+35]..src/partialGrammar.ml[482,15789+58])
                                Texp_apply
                                expression (src/partialGrammar.ml[482,15789+36]..src/partialGrammar.ml[482,15789+54])
                                  Texp_ident "empty_symbol_table/1291"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/partialGrammar.ml[482,15789+55]..src/partialGrammar.ml[482,15789+57])
                                      Texp_construct "()"
                                      []
                                ]
                            <arg>
                              Nolabel
                              expression (src/partialGrammar.ml[482,15789+59]..src/partialGrammar.ml[482,15789+76])
                                Texp_field
                                expression (src/partialGrammar.ml[482,15789+59]..src/partialGrammar.ml[482,15789+67])
                                  Texp_ident "pgrammar/1372"
                                "pg_rules"
                          ]
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[484,15867+0]..src/partialGrammar.ml[575,19506+26])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[484,15867+4]..src/partialGrammar.ml[484,15867+15])
          Tpat_var "merge_rules/1390"
        expression (src/partialGrammar.ml[484,15867+16]..src/partialGrammar.ml[575,19506+26]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[484,15867+16]..src/partialGrammar.ml[484,15867+23])
                Tpat_var "symbols/1392"
              expression (src/partialGrammar.ml[484,15867+24]..src/partialGrammar.ml[575,19506+26]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[484,15867+24]..src/partialGrammar.ml[484,15867+27])
                      Tpat_var "pgs/1393"
                    expression (src/partialGrammar.ml[487,15939+2]..src/partialGrammar.ml[575,19506+26])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/partialGrammar.ml[487,15939+6]..src/partialGrammar.ml[487,15939+20])
                            Tpat_var "public_symbols/1394"
                          expression (src/partialGrammar.ml[488,15962+4]..src/partialGrammar.ml[490,16073+13])
                            Texp_apply
                            expression (src/partialGrammar.ml[488,15962+4]..src/partialGrammar.ml[488,15962+18])
                              Texp_ident "Stdlib!.List.fold_left"
                            [
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[488,15962+19]..src/partialGrammar.ml[488,15962+74])
                                  Texp_apply
                                  expression (src/partialGrammar.ml[488,15962+20]..src/partialGrammar.ml[488,15962+42])
                                    Texp_ident "fold_on_public_symbols/1353"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[488,15962+43]..src/partialGrammar.ml[488,15962+73])
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/partialGrammar.ml[488,15962+48]..src/partialGrammar.ml[488,15962+49])
                                              Tpat_var "s/1395"
                                            expression (src/partialGrammar.ml[488,15962+50]..src/partialGrammar.ml[488,15962+72]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/partialGrammar.ml[488,15962+50]..src/partialGrammar.ml[488,15962+51])
                                                    Tpat_var "k/1396"
                                                  expression (src/partialGrammar.ml[488,15962+55]..src/partialGrammar.ml[488,15962+72])
                                                    Texp_apply
                                                    expression (src/partialGrammar.ml[488,15962+55]..src/partialGrammar.ml[488,15962+68])
                                                      Texp_ident "Dune__exe!.StringSet.add"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/partialGrammar.ml[488,15962+69]..src/partialGrammar.ml[488,15962+70])
                                                          Texp_ident "k/1396"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/partialGrammar.ml[488,15962+71]..src/partialGrammar.ml[488,15962+72])
                                                          Texp_ident "s/1395"
                                                    ]
                                              ]
                                        ]
                                  ]
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[489,16037+6]..src/partialGrammar.ml[489,16037+35])
                                  Texp_apply
                                  expression (src/partialGrammar.ml[489,16037+7]..src/partialGrammar.ml[489,16037+26])
                                    Texp_ident "Dune__exe!.StringSet.singleton"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[489,16037+27]..src/partialGrammar.ml[489,16037+34])
                                        Texp_constant Const_string("error",(src/partialGrammar.ml[489,16037+28]..src/partialGrammar.ml[489,16037+33]),None)
                                  ]
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[490,16073+6]..src/partialGrammar.ml[490,16073+13])
                                  Texp_ident "symbols/1392"
                            ]
                      ]
                      expression (src/partialGrammar.ml[495,16179+2]..src/partialGrammar.ml[575,19506+26])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/partialGrammar.ml[495,16179+6]..src/partialGrammar.ml[495,16179+7])
                              Tpat_any
                            expression (src/partialGrammar.ml[496,16189+4]..src/partialGrammar.ml[501,16373+13])
                              Texp_apply
                              expression (src/partialGrammar.ml[496,16189+4]..src/partialGrammar.ml[496,16189+13])
                                Texp_ident "Stdlib!.List.iter"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/partialGrammar.ml[497,16203+6]..src/partialGrammar.ml[500,16336+36])
                                    Texp_apply
                                    expression (src/partialGrammar.ml[497,16203+7]..src/partialGrammar.ml[497,16203+32])
                                      Texp_ident "iter_on_only_used_symbols/1362"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/partialGrammar.ml[498,16236+9]..src/partialGrammar.ml[500,16336+35])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/partialGrammar.ml[498,16236+14]..src/partialGrammar.ml[498,16236+15])
                                                Tpat_var "k/1397"
                                              expression (src/partialGrammar.ml[498,16236+16]..src/partialGrammar.ml[500,16336+34]) ghost
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (src/partialGrammar.ml[498,16236+16]..src/partialGrammar.ml[498,16236+19])
                                                      Tpat_var "pos/1398"
                                                    expression (src/partialGrammar.ml[498,16236+23]..src/partialGrammar.ml[500,16336+34])
                                                      Texp_ifthenelse
                                                      expression (src/partialGrammar.ml[498,16236+26]..src/partialGrammar.ml[498,16236+62])
                                                        Texp_apply
                                                        expression (src/partialGrammar.ml[498,16236+26]..src/partialGrammar.ml[498,16236+29])
                                                          Texp_ident "Stdlib!.not"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/partialGrammar.ml[498,16236+30]..src/partialGrammar.ml[498,16236+62])
                                                              Texp_apply
                                                              expression (src/partialGrammar.ml[498,16236+31]..src/partialGrammar.ml[498,16236+44])
                                                                Texp_ident "Dune__exe!.StringSet.mem"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/partialGrammar.ml[498,16236+45]..src/partialGrammar.ml[498,16236+46])
                                                                    Texp_ident "k/1397"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/partialGrammar.ml[498,16236+47]..src/partialGrammar.ml[498,16236+61])
                                                                    Texp_ident "public_symbols/1394"
                                                              ]
                                                        ]
                                                      expression (src/partialGrammar.ml[499,16304+12]..src/partialGrammar.ml[500,16336+34])
                                                        Texp_apply
                                                        expression (src/partialGrammar.ml[499,16304+12]..src/partialGrammar.ml[499,16304+23])
                                                          Texp_ident "Dune__exe!.Error.error"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/partialGrammar.ml[499,16304+24]..src/partialGrammar.ml[499,16304+31])
                                                              Texp_construct "::"
                                                              [
                                                                expression (src/partialGrammar.ml[499,16304+26]..src/partialGrammar.ml[499,16304+29])
                                                                  Texp_ident "pos/1398"
                                                                expression (src/partialGrammar.ml[499,16304+30]..src/partialGrammar.ml[499,16304+31]) ghost
                                                                  Texp_construct "[]"
                                                                  []
                                                              ]
                                                          <arg>
                                                            Nolabel
                                                            expression (src/partialGrammar.ml[500,16336+14]..src/partialGrammar.ml[500,16336+32])
                                                              Texp_construct "CamlinternalFormatBasics.Format"
                                                              [
                                                                expression (src/partialGrammar.ml[500,16336+14]..src/partialGrammar.ml[500,16336+32]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.String"
                                                                  [
                                                                    expression (src/partialGrammar.ml[500,16336+14]..src/partialGrammar.ml[500,16336+32]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                      []
                                                                    expression (src/partialGrammar.ml[500,16336+14]..src/partialGrammar.ml[500,16336+32]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                      [
                                                                        expression (src/partialGrammar.ml[500,16336+14]..src/partialGrammar.ml[500,16336+32]) ghost
                                                                          Texp_constant Const_string(" is undefined.",(src/partialGrammar.ml[500,16336+14]..src/partialGrammar.ml[500,16336+32]) ghost,None)
                                                                        expression (src/partialGrammar.ml[500,16336+14]..src/partialGrammar.ml[500,16336+32]) ghost
                                                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                          []
                                                                      ]
                                                                  ]
                                                                expression (src/partialGrammar.ml[500,16336+14]..src/partialGrammar.ml[500,16336+32]) ghost
                                                                  Texp_constant Const_string("%s is undefined.",(src/partialGrammar.ml[500,16336+14]..src/partialGrammar.ml[500,16336+32]) ghost,None)
                                                              ]
                                                          <arg>
                                                            Nolabel
                                                            expression (src/partialGrammar.ml[500,16336+33]..src/partialGrammar.ml[500,16336+34])
                                                              Texp_ident "k/1397"
                                                        ]
                                                      None
                                                ]
                                          ]
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/partialGrammar.ml[501,16373+6]..src/partialGrammar.ml[501,16373+13])
                                    Texp_ident "symbols/1392"
                              ]
                        ]
                        expression (src/partialGrammar.ml[504,16460+2]..src/partialGrammar.ml[575,19506+26])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (src/partialGrammar.ml[504,16460+6]..src/partialGrammar.ml[504,16460+35])
                                Tpat_var "detect_private_symbol_clashes/1399"
                              expression (src/partialGrammar.ml[505,16498+4]..src/partialGrammar.ml[511,16727+51])
                                Texp_apply
                                expression (src/partialGrammar.ml[505,16498+4]..src/partialGrammar.ml[505,16498+27])
                                  Texp_ident "fold_on_private_symbols/1344"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/partialGrammar.ml[506,16526+6]..src/partialGrammar.ml[511,16727+51])
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (src/partialGrammar.ml[506,16526+11]..src/partialGrammar.ml[506,16526+29])
                                            Tpat_tuple
                                            [
                                              pattern (src/partialGrammar.ml[506,16526+12]..src/partialGrammar.ml[506,16526+19])
                                                Tpat_var "defined/1400"
                                              pattern (src/partialGrammar.ml[506,16526+21]..src/partialGrammar.ml[506,16526+28])
                                                Tpat_var "clashes/1401"
                                            ]
                                          expression (src/partialGrammar.ml[506,16526+30]..src/partialGrammar.ml[511,16727+50]) ghost
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (src/partialGrammar.ml[506,16526+30]..src/partialGrammar.ml[506,16526+36])
                                                  Tpat_var "symbol/1402"
                                                expression (src/partialGrammar.ml[507,16566+9]..src/partialGrammar.ml[511,16727+50])
                                                  Texp_ifthenelse
                                                  expression (src/partialGrammar.ml[507,16566+12]..src/partialGrammar.ml[508,16607+49])
                                                    Texp_apply
                                                    expression (src/partialGrammar.ml[508,16607+11]..src/partialGrammar.ml[508,16607+13])
                                                      Texp_ident "Stdlib!.||"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/partialGrammar.ml[507,16566+12]..src/partialGrammar.ml[507,16566+40])
                                                          Texp_apply
                                                          expression (src/partialGrammar.ml[507,16566+12]..src/partialGrammar.ml[507,16566+25])
                                                            Texp_ident "Dune__exe!.StringSet.mem"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[507,16566+26]..src/partialGrammar.ml[507,16566+32])
                                                                Texp_ident "symbol/1402"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[507,16566+33]..src/partialGrammar.ml[507,16566+40])
                                                                Texp_ident "defined/1400"
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (src/partialGrammar.ml[508,16607+14]..src/partialGrammar.ml[508,16607+49])
                                                          Texp_apply
                                                          expression (src/partialGrammar.ml[508,16607+14]..src/partialGrammar.ml[508,16607+27])
                                                            Texp_ident "Dune__exe!.StringSet.mem"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[508,16607+28]..src/partialGrammar.ml[508,16607+34])
                                                                Texp_ident "symbol/1402"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[508,16607+35]..src/partialGrammar.ml[508,16607+49])
                                                                Texp_ident "public_symbols/1394"
                                                          ]
                                                    ]
                                                  expression (src/partialGrammar.ml[509,16662+11]..src/partialGrammar.ml[509,16662+50])
                                                    Texp_tuple
                                                    [
                                                      expression (src/partialGrammar.ml[509,16662+12]..src/partialGrammar.ml[509,16662+19])
                                                        Texp_ident "defined/1400"
                                                      expression (src/partialGrammar.ml[509,16662+21]..src/partialGrammar.ml[509,16662+49])
                                                        Texp_apply
                                                        expression (src/partialGrammar.ml[509,16662+21]..src/partialGrammar.ml[509,16662+34])
                                                          Texp_ident "Dune__exe!.StringSet.add"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/partialGrammar.ml[509,16662+35]..src/partialGrammar.ml[509,16662+41])
                                                              Texp_ident "symbol/1402"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/partialGrammar.ml[509,16662+42]..src/partialGrammar.ml[509,16662+49])
                                                              Texp_ident "clashes/1401"
                                                        ]
                                                    ]
                                                  Some
                                                    expression (src/partialGrammar.ml[511,16727+11]..src/partialGrammar.ml[511,16727+50])
                                                      Texp_tuple
                                                      [
                                                        expression (src/partialGrammar.ml[511,16727+12]..src/partialGrammar.ml[511,16727+40])
                                                          Texp_apply
                                                          expression (src/partialGrammar.ml[511,16727+12]..src/partialGrammar.ml[511,16727+25])
                                                            Texp_ident "Dune__exe!.StringSet.add"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[511,16727+26]..src/partialGrammar.ml[511,16727+32])
                                                                Texp_ident "symbol/1402"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[511,16727+33]..src/partialGrammar.ml[511,16727+40])
                                                                Texp_ident "defined/1400"
                                                          ]
                                                        expression (src/partialGrammar.ml[511,16727+42]..src/partialGrammar.ml[511,16727+49])
                                                          Texp_ident "clashes/1401"
                                                      ]
                                            ]
                                      ]
                                ]
                          ]
                          expression (src/partialGrammar.ml[513,16784+2]..src/partialGrammar.ml[575,19506+26])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/partialGrammar.ml[513,16784+6]..src/partialGrammar.ml[513,16784+31])
                                  Tpat_tuple
                                  [
                                    pattern (src/partialGrammar.ml[513,16784+6]..src/partialGrammar.ml[513,16784+22])
                                      Tpat_var "_private_symbols/1404"
                                    pattern (src/partialGrammar.ml[513,16784+24]..src/partialGrammar.ml[513,16784+31])
                                      Tpat_var "clashes/1405"
                                  ]
                                expression (src/partialGrammar.ml[514,16818+4]..src/partialGrammar.ml[514,16818+91])
                                  Texp_apply
                                  expression (src/partialGrammar.ml[514,16818+4]..src/partialGrammar.ml[514,16818+18])
                                    Texp_ident "Stdlib!.List.fold_left"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[514,16818+19]..src/partialGrammar.ml[514,16818+48])
                                        Texp_ident "detect_private_symbol_clashes/1399"
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[514,16818+49]..src/partialGrammar.ml[514,16818+83])
                                        Texp_tuple
                                        [
                                          expression (src/partialGrammar.ml[514,16818+50]..src/partialGrammar.ml[514,16818+65])
                                            Texp_ident "Dune__exe!.StringSet.empty"
                                          expression (src/partialGrammar.ml[514,16818+67]..src/partialGrammar.ml[514,16818+82])
                                            Texp_ident "Dune__exe!.StringSet.empty"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[514,16818+84]..src/partialGrammar.ml[514,16818+91])
                                        Texp_ident "symbols/1392"
                                  ]
                            ]
                            expression (src/partialGrammar.ml[516,16915+2]..src/partialGrammar.ml[575,19506+26])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/partialGrammar.ml[516,16915+6]..src/partialGrammar.ml[516,16915+10])
                                    Tpat_var "rpgs/1406"
                                  expression (src/partialGrammar.ml[516,16915+13]..src/partialGrammar.ml[532,17471+7])
                                    Texp_apply
                                    expression (src/partialGrammar.ml[516,16915+13]..src/partialGrammar.ml[516,16915+21])
                                      Texp_ident "Stdlib!.List.map"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/partialGrammar.ml[517,16937+4]..src/partialGrammar.ml[531,17433+37])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/partialGrammar.ml[517,16937+9]..src/partialGrammar.ml[517,16937+27])
                                                Tpat_tuple
                                                [
                                                  pattern (src/partialGrammar.ml[517,16937+10]..src/partialGrammar.ml[517,16937+22])
                                                    Tpat_var "symbol_table/1407"
                                                  pattern (src/partialGrammar.ml[517,16937+24]..src/partialGrammar.ml[517,16937+26])
                                                    Tpat_var "pg/1408"
                                                ]
                                              expression (src/partialGrammar.ml[518,16968+7]..src/partialGrammar.ml[531,17433+36])
                                                Texp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (src/partialGrammar.ml[518,16968+11]..src/partialGrammar.ml[518,16968+19])
                                                      Tpat_var "renaming/1409"
                                                    expression (src/partialGrammar.ml[519,16990+9]..src/partialGrammar.ml[529,17401+21])
                                                      Texp_apply
                                                      expression (src/partialGrammar.ml[519,16990+9]..src/partialGrammar.ml[519,16990+23])
                                                        Texp_ident "Dune__exe!.StringSet.fold"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/partialGrammar.ml[520,17014+11]..src/partialGrammar.ml[528,17377+23])
                                                            Texp_function
                                                            Nolabel
                                                            [
                                                              <case>
                                                                pattern (src/partialGrammar.ml[520,17014+16]..src/partialGrammar.ml[520,17014+17])
                                                                  Tpat_var "x/1410"
                                                                expression (src/partialGrammar.ml[520,17014+18]..src/partialGrammar.ml[528,17377+22]) ghost
                                                                  Texp_function
                                                                  Nolabel
                                                                  [
                                                                    <case>
                                                                      pattern (src/partialGrammar.ml[520,17014+18]..src/partialGrammar.ml[520,17014+21])
                                                                        Tpat_var "phi/1411"
                                                                      expression (src/partialGrammar.ml[521,17039+14]..src/partialGrammar.ml[528,17377+22])
                                                                        Texp_ifthenelse
                                                                        expression (src/partialGrammar.ml[521,17039+17]..src/partialGrammar.ml[521,17039+49])
                                                                          Texp_apply
                                                                          expression (src/partialGrammar.ml[521,17039+17]..src/partialGrammar.ml[521,17039+34])
                                                                            Texp_ident "is_private_symbol/1340"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/partialGrammar.ml[521,17039+35]..src/partialGrammar.ml[521,17039+47])
                                                                                Texp_ident "symbol_table/1407"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/partialGrammar.ml[521,17039+48]..src/partialGrammar.ml[521,17039+49])
                                                                                Texp_ident "x/1410"
                                                                          ]
                                                                        expression (src/partialGrammar.ml[521,17039+55]..src/partialGrammar.ml[527,17357+19])
                                                                          Texp_let Nonrec
                                                                          [
                                                                            <def>
                                                                              pattern (src/partialGrammar.ml[522,17100+22]..src/partialGrammar.ml[522,17100+24])
                                                                                Tpat_var "x'/1412"
                                                                              expression (src/partialGrammar.ml[522,17100+27]..src/partialGrammar.ml[522,17100+50])
                                                                                Texp_apply
                                                                                expression (src/partialGrammar.ml[522,17100+27]..src/partialGrammar.ml[522,17100+33])
                                                                                  Texp_ident "rename/1186"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/partialGrammar.ml[522,17100+34]..src/partialGrammar.ml[522,17100+35])
                                                                                      Texp_ident "x/1410"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/partialGrammar.ml[522,17100+36]..src/partialGrammar.ml[522,17100+50])
                                                                                      Texp_field
                                                                                      expression (src/partialGrammar.ml[522,17100+36]..src/partialGrammar.ml[522,17100+38])
                                                                                        Texp_ident "pg/1408"
                                                                                      "pg_filename"
                                                                                ]
                                                                          ]
                                                                          expression (src/partialGrammar.ml[523,17154+20]..src/partialGrammar.ml[526,17322+34])
                                                                            Texp_sequence
                                                                            expression (src/partialGrammar.ml[523,17154+20]..src/partialGrammar.ml[525,17279+41])
                                                                              Texp_apply
                                                                              expression (src/partialGrammar.ml[523,17154+20]..src/partialGrammar.ml[523,17154+34])
                                                                                Texp_ident "Stdlib!.Printf.fprintf"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/partialGrammar.ml[523,17154+35]..src/partialGrammar.ml[523,17154+41])
                                                                                    Texp_ident "Stdlib!.stderr"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/partialGrammar.ml[524,17196+22]..src/partialGrammar.ml[524,17196+82])
                                                                                    Texp_construct "CamlinternalFormatBasics.Format"
                                                                                    [
                                                                                      expression (src/partialGrammar.ml[524,17196+22]..src/partialGrammar.ml[524,17196+82]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                        [
                                                                                          expression (src/partialGrammar.ml[524,17196+22]..src/partialGrammar.ml[524,17196+82]) ghost
                                                                                            Texp_constant Const_string("Note: the nonterminal symbol ",(src/partialGrammar.ml[524,17196+22]..src/partialGrammar.ml[524,17196+82]) ghost,None)
                                                                                          expression (src/partialGrammar.ml[524,17196+22]..src/partialGrammar.ml[524,17196+82]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.String"
                                                                                            [
                                                                                              expression (src/partialGrammar.ml[524,17196+22]..src/partialGrammar.ml[524,17196+82]) ghost
                                                                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                []
                                                                                              expression (src/partialGrammar.ml[524,17196+22]..src/partialGrammar.ml[524,17196+82]) ghost
                                                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                [
                                                                                                  expression (src/partialGrammar.ml[524,17196+22]..src/partialGrammar.ml[524,17196+82]) ghost
                                                                                                    Texp_constant Const_string(" (from ",(src/partialGrammar.ml[524,17196+22]..src/partialGrammar.ml[524,17196+82]) ghost,None)
                                                                                                  expression (src/partialGrammar.ml[524,17196+22]..src/partialGrammar.ml[524,17196+82]) ghost
                                                                                                    Texp_construct "CamlinternalFormatBasics.String"
                                                                                                    [
                                                                                                      expression (src/partialGrammar.ml[524,17196+22]..src/partialGrammar.ml[524,17196+82]) ghost
                                                                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                        []
                                                                                                      expression (src/partialGrammar.ml[524,17196+22]..src/partialGrammar.ml[524,17196+82]) ghost
                                                                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                        [
                                                                                                          expression (src/partialGrammar.ml[524,17196+22]..src/partialGrammar.ml[524,17196+82]) ghost
                                                                                                            Texp_constant Const_string(") is renamed ",(src/partialGrammar.ml[524,17196+22]..src/partialGrammar.ml[524,17196+82]) ghost,None)
                                                                                                          expression (src/partialGrammar.ml[524,17196+22]..src/partialGrammar.ml[524,17196+82]) ghost
                                                                                                            Texp_construct "CamlinternalFormatBasics.String"
                                                                                                            [
                                                                                                              expression (src/partialGrammar.ml[524,17196+22]..src/partialGrammar.ml[524,17196+82]) ghost
                                                                                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                                []
                                                                                                              expression (src/partialGrammar.ml[524,17196+22]..src/partialGrammar.ml[524,17196+82]) ghost
                                                                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                                [
                                                                                                                  expression (src/partialGrammar.ml[524,17196+22]..src/partialGrammar.ml[524,17196+82]) ghost
                                                                                                                    Texp_constant Const_string(".\n",(src/partialGrammar.ml[524,17196+22]..src/partialGrammar.ml[524,17196+82]) ghost,None)
                                                                                                                  expression (src/partialGrammar.ml[524,17196+22]..src/partialGrammar.ml[524,17196+82]) ghost
                                                                                                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                                    []
                                                                                                                ]
                                                                                                            ]
                                                                                                        ]
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                      expression (src/partialGrammar.ml[524,17196+22]..src/partialGrammar.ml[524,17196+82]) ghost
                                                                                        Texp_constant Const_string("Note: the nonterminal symbol %s (from %s) is renamed %s.\n",(src/partialGrammar.ml[524,17196+22]..src/partialGrammar.ml[524,17196+82]) ghost,None)
                                                                                    ]
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/partialGrammar.ml[525,17279+22]..src/partialGrammar.ml[525,17279+23])
                                                                                    Texp_ident "x/1410"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/partialGrammar.ml[525,17279+24]..src/partialGrammar.ml[525,17279+38])
                                                                                    Texp_field
                                                                                    expression (src/partialGrammar.ml[525,17279+24]..src/partialGrammar.ml[525,17279+26])
                                                                                      Texp_ident "pg/1408"
                                                                                    "pg_filename"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/partialGrammar.ml[525,17279+39]..src/partialGrammar.ml[525,17279+41])
                                                                                    Texp_ident "x'/1412"
                                                                              ]
                                                                            expression (src/partialGrammar.ml[526,17322+20]..src/partialGrammar.ml[526,17322+34])
                                                                              Texp_construct "::"
                                                                              [
                                                                                expression (src/partialGrammar.ml[526,17322+20]..src/partialGrammar.ml[526,17322+27])
                                                                                  Texp_tuple
                                                                                  [
                                                                                    expression (src/partialGrammar.ml[526,17322+21]..src/partialGrammar.ml[526,17322+22])
                                                                                      Texp_ident "x/1410"
                                                                                    expression (src/partialGrammar.ml[526,17322+24]..src/partialGrammar.ml[526,17322+26])
                                                                                      Texp_ident "x'/1412"
                                                                                  ]
                                                                                expression (src/partialGrammar.ml[526,17322+31]..src/partialGrammar.ml[526,17322+34])
                                                                                  Texp_ident "phi/1411"
                                                                              ]
                                                                        Some
                                                                          expression (src/partialGrammar.ml[528,17377+19]..src/partialGrammar.ml[528,17377+22])
                                                                            Texp_ident "phi/1411"
                                                                  ]
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/partialGrammar.ml[529,17401+11]..src/partialGrammar.ml[529,17401+18])
                                                            Texp_ident "clashes/1405"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/partialGrammar.ml[529,17401+19]..src/partialGrammar.ml[529,17401+21])
                                                            Texp_construct "[]"
                                                            []
                                                      ]
                                                ]
                                                expression (src/partialGrammar.ml[531,17433+9]..src/partialGrammar.ml[531,17433+36])
                                                  Texp_apply
                                                  expression (src/partialGrammar.ml[531,17433+9]..src/partialGrammar.ml[531,17433+24])
                                                    Texp_ident "rewrite_grammar/995"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/partialGrammar.ml[531,17433+25]..src/partialGrammar.ml[531,17433+33])
                                                        Texp_ident "renaming/1409"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/partialGrammar.ml[531,17433+34]..src/partialGrammar.ml[531,17433+36])
                                                        Texp_ident "pg/1408"
                                                  ]
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/partialGrammar.ml[532,17471+4]..src/partialGrammar.ml[532,17471+7])
                                          Texp_ident "pgs/1393"
                                    ]
                              ]
                              expression (src/partialGrammar.ml[538,17679+4]..src/partialGrammar.ml[575,19506+26])
                                Texp_apply
                                expression (src/partialGrammar.ml[538,17679+4]..src/partialGrammar.ml[538,17679+18])
                                  Texp_ident "Stdlib!.List.fold_left"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/partialGrammar.ml[539,17698+6]..src/partialGrammar.ml[574,19441+64])
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (src/partialGrammar.ml[539,17698+11]..src/partialGrammar.ml[539,17698+16])
                                            Tpat_var "rules/1427"
                                          expression (src/partialGrammar.ml[539,17698+17]..src/partialGrammar.ml[574,19441+63]) ghost
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (src/partialGrammar.ml[539,17698+17]..src/partialGrammar.ml[539,17698+20])
                                                  Tpat_var "rpg/1428"
                                                expression (src/partialGrammar.ml[539,17698+24]..src/partialGrammar.ml[574,19441+63])
                                                  Texp_apply
                                                  expression (src/partialGrammar.ml[539,17698+24]..src/partialGrammar.ml[539,17698+38])
                                                    Texp_ident "Stdlib!.List.fold_left"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/partialGrammar.ml[540,17737+9]..src/partialGrammar.ml[574,19441+44])
                                                        Texp_function
                                                        Nolabel
                                                        [
                                                          <case>
                                                            pattern (src/partialGrammar.ml[540,17737+14]..src/partialGrammar.ml[540,17737+19])
                                                              Tpat_var "rules/1429"
                                                            expression (src/partialGrammar.ml[540,17737+20]..src/partialGrammar.ml[574,19441+43]) ghost
                                                              Texp_function
                                                              Nolabel
                                                              [
                                                                <case>
                                                                  pattern (src/partialGrammar.ml[540,17737+20]..src/partialGrammar.ml[540,17737+21])
                                                                    Tpat_var "r/1430"
                                                                  expression (src/partialGrammar.ml[541,17762+12]..src/partialGrammar.ml[574,19441+43])
                                                                    Texp_let Nonrec
                                                                    [
                                                                      <def>
                                                                        pattern (src/partialGrammar.ml[541,17762+16]..src/partialGrammar.ml[541,17762+17])
                                                                          Tpat_var "r/1431"
                                                                        expression (src/partialGrammar.ml[542,17782+14]..src/partialGrammar.ml[572,19374+51])
                                                                          Texp_try
                                                                          expression (src/partialGrammar.ml[543,17800+16]..src/partialGrammar.ml[568,19177+23])
                                                                            Texp_let Nonrec
                                                                            [
                                                                              <def>
                                                                                pattern (src/partialGrammar.ml[543,17800+20]..src/partialGrammar.ml[543,17800+22])
                                                                                  Tpat_var "r'/1432"
                                                                                expression (src/partialGrammar.ml[543,17800+25]..src/partialGrammar.ml[543,17800+53])
                                                                                  Texp_apply
                                                                                  expression (src/partialGrammar.ml[543,17800+25]..src/partialGrammar.ml[543,17800+39])
                                                                                    Texp_ident "Dune__exe!.StringMap.find"
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/partialGrammar.ml[543,17800+40]..src/partialGrammar.ml[543,17800+47])
                                                                                        Texp_field
                                                                                        expression (src/partialGrammar.ml[543,17800+40]..src/partialGrammar.ml[543,17800+41])
                                                                                          Texp_ident "r/1430"
                                                                                        "pr_nt"
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/partialGrammar.ml[543,17800+48]..src/partialGrammar.ml[543,17800+53])
                                                                                        Texp_ident "rules/1429"
                                                                                  ]
                                                                            ]
                                                                            expression (src/partialGrammar.ml[544,17857+16]..src/partialGrammar.ml[568,19177+23])
                                                                              Texp_let Nonrec
                                                                              [
                                                                                <def>
                                                                                  pattern (src/partialGrammar.ml[544,17857+20]..src/partialGrammar.ml[544,17857+29])
                                                                                    Tpat_var "positions/1433"
                                                                                  expression (src/partialGrammar.ml[544,17857+32]..src/partialGrammar.ml[544,17857+64])
                                                                                    Texp_apply
                                                                                    expression (src/partialGrammar.ml[544,17857+47]..src/partialGrammar.ml[544,17857+48])
                                                                                      Texp_ident "Stdlib!.@"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/partialGrammar.ml[544,17857+32]..src/partialGrammar.ml[544,17857+46])
                                                                                          Texp_field
                                                                                          expression (src/partialGrammar.ml[544,17857+32]..src/partialGrammar.ml[544,17857+33])
                                                                                            Texp_ident "r/1430"
                                                                                          "pr_positions"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/partialGrammar.ml[544,17857+49]..src/partialGrammar.ml[544,17857+64])
                                                                                          Texp_field
                                                                                          expression (src/partialGrammar.ml[544,17857+49]..src/partialGrammar.ml[544,17857+51])
                                                                                            Texp_ident "r'/1432"
                                                                                          "pr_positions"
                                                                                    ]
                                                                              ]
                                                                              expression (src/partialGrammar.ml[545,17925+16]..src/partialGrammar.ml[568,19177+23])
                                                                                Texp_let Nonrec
                                                                                [
                                                                                  <def>
                                                                                    pattern (src/partialGrammar.ml[545,17925+20]..src/partialGrammar.ml[545,17925+27])
                                                                                      Tpat_tuple
                                                                                      [
                                                                                        pattern (src/partialGrammar.ml[545,17925+20]..src/partialGrammar.ml[545,17925+22])
                                                                                          Tpat_var "ra/1434"
                                                                                        pattern (src/partialGrammar.ml[545,17925+24]..src/partialGrammar.ml[545,17925+27])
                                                                                          Tpat_var "ra'/1435"
                                                                                      ]
                                                                                    expression (src/partialGrammar.ml[546,17955+18]..src/partialGrammar.ml[547,18002+46])
                                                                                      Texp_tuple
                                                                                      [
                                                                                        expression (src/partialGrammar.ml[546,17955+18]..src/partialGrammar.ml[546,17955+45])
                                                                                          Texp_apply
                                                                                          expression (src/partialGrammar.ml[546,17955+18]..src/partialGrammar.ml[546,17955+29])
                                                                                            Texp_ident "Stdlib!.List.length"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/partialGrammar.ml[546,17955+30]..src/partialGrammar.ml[546,17955+45])
                                                                                                Texp_field
                                                                                                expression (src/partialGrammar.ml[546,17955+30]..src/partialGrammar.ml[546,17955+31])
                                                                                                  Texp_ident "r/1430"
                                                                                                "pr_parameters"
                                                                                          ]
                                                                                        expression (src/partialGrammar.ml[547,18002+18]..src/partialGrammar.ml[547,18002+46])
                                                                                          Texp_apply
                                                                                          expression (src/partialGrammar.ml[547,18002+18]..src/partialGrammar.ml[547,18002+29])
                                                                                            Texp_ident "Stdlib!.List.length"
                                                                                          [
                                                                                            <arg>
                                                                                              Nolabel
                                                                                              expression (src/partialGrammar.ml[547,18002+30]..src/partialGrammar.ml[547,18002+46])
                                                                                                Texp_field
                                                                                                expression (src/partialGrammar.ml[547,18002+30]..src/partialGrammar.ml[547,18002+32])
                                                                                                  Texp_ident "r'/1432"
                                                                                                "pr_parameters"
                                                                                          ]
                                                                                      ]
                                                                                ]
                                                                                expression (src/partialGrammar.ml[550,18148+18]..src/partialGrammar.ml[568,19177+23])
                                                                                  Texp_ifthenelse
                                                                                  expression (src/partialGrammar.ml[550,18148+21]..src/partialGrammar.ml[550,18148+30])
                                                                                    Texp_apply
                                                                                    expression (src/partialGrammar.ml[550,18148+24]..src/partialGrammar.ml[550,18148+26])
                                                                                      Texp_ident "Stdlib!.<>"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/partialGrammar.ml[550,18148+21]..src/partialGrammar.ml[550,18148+23])
                                                                                          Texp_ident "ra/1434"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/partialGrammar.ml[550,18148+27]..src/partialGrammar.ml[550,18148+30])
                                                                                          Texp_ident "ra'/1435"
                                                                                    ]
                                                                                  expression (src/partialGrammar.ml[551,18184+20]..src/partialGrammar.ml[553,18299+39])
                                                                                    Texp_apply
                                                                                    expression (src/partialGrammar.ml[551,18184+20]..src/partialGrammar.ml[551,18184+31])
                                                                                      Texp_ident "Dune__exe!.Error.error"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/partialGrammar.ml[551,18184+32]..src/partialGrammar.ml[551,18184+41])
                                                                                          Texp_ident "positions/1433"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/partialGrammar.ml[552,18226+22]..src/partialGrammar.ml[552,18226+72])
                                                                                          Texp_construct "CamlinternalFormatBasics.Format"
                                                                                          [
                                                                                            expression (src/partialGrammar.ml[552,18226+22]..src/partialGrammar.ml[552,18226+72]) ghost
                                                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                              [
                                                                                                expression (src/partialGrammar.ml[552,18226+22]..src/partialGrammar.ml[552,18226+72]) ghost
                                                                                                  Texp_constant Const_string("the symbol ",(src/partialGrammar.ml[552,18226+22]..src/partialGrammar.ml[552,18226+72]) ghost,None)
                                                                                                expression (src/partialGrammar.ml[552,18226+22]..src/partialGrammar.ml[552,18226+72]) ghost
                                                                                                  Texp_construct "CamlinternalFormatBasics.String"
                                                                                                  [
                                                                                                    expression (src/partialGrammar.ml[552,18226+22]..src/partialGrammar.ml[552,18226+72]) ghost
                                                                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                      []
                                                                                                    expression (src/partialGrammar.ml[552,18226+22]..src/partialGrammar.ml[552,18226+72]) ghost
                                                                                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                      [
                                                                                                        expression (src/partialGrammar.ml[552,18226+22]..src/partialGrammar.ml[552,18226+72]) ghost
                                                                                                          Texp_constant Const_string(" is defined with arities ",(src/partialGrammar.ml[552,18226+22]..src/partialGrammar.ml[552,18226+72]) ghost,None)
                                                                                                        expression (src/partialGrammar.ml[552,18226+22]..src/partialGrammar.ml[552,18226+72]) ghost
                                                                                                          Texp_construct "CamlinternalFormatBasics.Int"
                                                                                                          [
                                                                                                            expression (src/partialGrammar.ml[552,18226+22]..src/partialGrammar.ml[552,18226+72]) ghost
                                                                                                              Texp_construct "CamlinternalFormatBasics.Int_d"
                                                                                                              []
                                                                                                            expression (src/partialGrammar.ml[552,18226+22]..src/partialGrammar.ml[552,18226+72]) ghost
                                                                                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                              []
                                                                                                            expression (src/partialGrammar.ml[552,18226+22]..src/partialGrammar.ml[552,18226+72]) ghost
                                                                                                              Texp_construct "CamlinternalFormatBasics.No_precision"
                                                                                                              []
                                                                                                            expression (src/partialGrammar.ml[552,18226+22]..src/partialGrammar.ml[552,18226+72]) ghost
                                                                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                              [
                                                                                                                expression (src/partialGrammar.ml[552,18226+22]..src/partialGrammar.ml[552,18226+72]) ghost
                                                                                                                  Texp_constant Const_string(" and ",(src/partialGrammar.ml[552,18226+22]..src/partialGrammar.ml[552,18226+72]) ghost,None)
                                                                                                                expression (src/partialGrammar.ml[552,18226+22]..src/partialGrammar.ml[552,18226+72]) ghost
                                                                                                                  Texp_construct "CamlinternalFormatBasics.Int"
                                                                                                                  [
                                                                                                                    expression (src/partialGrammar.ml[552,18226+22]..src/partialGrammar.ml[552,18226+72]) ghost
                                                                                                                      Texp_construct "CamlinternalFormatBasics.Int_d"
                                                                                                                      []
                                                                                                                    expression (src/partialGrammar.ml[552,18226+22]..src/partialGrammar.ml[552,18226+72]) ghost
                                                                                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                                      []
                                                                                                                    expression (src/partialGrammar.ml[552,18226+22]..src/partialGrammar.ml[552,18226+72]) ghost
                                                                                                                      Texp_construct "CamlinternalFormatBasics.No_precision"
                                                                                                                      []
                                                                                                                    expression (src/partialGrammar.ml[552,18226+22]..src/partialGrammar.ml[552,18226+72]) ghost
                                                                                                                      Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                                                      [
                                                                                                                        expression (src/partialGrammar.ml[552,18226+22]..src/partialGrammar.ml[552,18226+72]) ghost
                                                                                                                          Texp_constant Const_char 2e
                                                                                                                        expression (src/partialGrammar.ml[552,18226+22]..src/partialGrammar.ml[552,18226+72]) ghost
                                                                                                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                                          []
                                                                                                                      ]
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ]
                                                                                                      ]
                                                                                                  ]
                                                                                              ]
                                                                                            expression (src/partialGrammar.ml[552,18226+22]..src/partialGrammar.ml[552,18226+72]) ghost
                                                                                              Texp_constant Const_string("the symbol %s is defined with arities %d and %d.",(src/partialGrammar.ml[552,18226+22]..src/partialGrammar.ml[552,18226+72]) ghost,None)
                                                                                          ]
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/partialGrammar.ml[553,18299+25]..src/partialGrammar.ml[553,18299+32])
                                                                                          Texp_field
                                                                                          expression (src/partialGrammar.ml[553,18299+25]..src/partialGrammar.ml[553,18299+26])
                                                                                            Texp_ident "r/1430"
                                                                                          "pr_nt"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/partialGrammar.ml[553,18299+33]..src/partialGrammar.ml[553,18299+35])
                                                                                          Texp_ident "ra/1434"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/partialGrammar.ml[553,18299+36]..src/partialGrammar.ml[553,18299+39])
                                                                                          Texp_ident "ra'/1435"
                                                                                    ]
                                                                                  Some
                                                                                    expression (src/partialGrammar.ml[554,18339+23]..src/partialGrammar.ml[568,19177+23])
                                                                                      Texp_ifthenelse
                                                                                      expression (src/partialGrammar.ml[554,18339+26]..src/partialGrammar.ml[554,18339+63])
                                                                                        Texp_apply
                                                                                        expression (src/partialGrammar.ml[554,18339+43]..src/partialGrammar.ml[554,18339+45])
                                                                                          Texp_ident "Stdlib!.<>"
                                                                                        [
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/partialGrammar.ml[554,18339+26]..src/partialGrammar.ml[554,18339+42])
                                                                                              Texp_field
                                                                                              expression (src/partialGrammar.ml[554,18339+26]..src/partialGrammar.ml[554,18339+27])
                                                                                                Texp_ident "r/1430"
                                                                                              "pr_inline_flag"
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/partialGrammar.ml[554,18339+46]..src/partialGrammar.ml[554,18339+63])
                                                                                              Texp_field
                                                                                              expression (src/partialGrammar.ml[554,18339+46]..src/partialGrammar.ml[554,18339+48])
                                                                                                Texp_ident "r'/1432"
                                                                                              "pr_inline_flag"
                                                                                        ]
                                                                                      expression (src/partialGrammar.ml[555,18408+20]..src/partialGrammar.ml[556,18450+81])
                                                                                        Texp_apply
                                                                                        expression (src/partialGrammar.ml[555,18408+20]..src/partialGrammar.ml[555,18408+31])
                                                                                          Texp_ident "Dune__exe!.Error.error"
                                                                                        [
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/partialGrammar.ml[555,18408+32]..src/partialGrammar.ml[555,18408+41])
                                                                                              Texp_ident "positions/1433"
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/partialGrammar.ml[556,18450+25]..src/partialGrammar.ml[556,18450+73])
                                                                                              Texp_construct "CamlinternalFormatBasics.Format"
                                                                                              [
                                                                                                expression (src/partialGrammar.ml[556,18450+25]..src/partialGrammar.ml[556,18450+73]) ghost
                                                                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                  [
                                                                                                    expression (src/partialGrammar.ml[556,18450+25]..src/partialGrammar.ml[556,18450+73]) ghost
                                                                                                      Texp_constant Const_string("not all definitions of ",(src/partialGrammar.ml[556,18450+25]..src/partialGrammar.ml[556,18450+73]) ghost,None)
                                                                                                    expression (src/partialGrammar.ml[556,18450+25]..src/partialGrammar.ml[556,18450+73]) ghost
                                                                                                      Texp_construct "CamlinternalFormatBasics.String"
                                                                                                      [
                                                                                                        expression (src/partialGrammar.ml[556,18450+25]..src/partialGrammar.ml[556,18450+73]) ghost
                                                                                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                          []
                                                                                                        expression (src/partialGrammar.ml[556,18450+25]..src/partialGrammar.ml[556,18450+73]) ghost
                                                                                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                          [
                                                                                                            expression (src/partialGrammar.ml[556,18450+25]..src/partialGrammar.ml[556,18450+73]) ghost
                                                                                                              Texp_constant Const_string(" are marked ",(src/partialGrammar.ml[556,18450+25]..src/partialGrammar.ml[556,18450+73]) ghost,None)
                                                                                                            expression (src/partialGrammar.ml[556,18450+25]..src/partialGrammar.ml[556,18450+73]) ghost
                                                                                                              Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                                              [
                                                                                                                expression (src/partialGrammar.ml[556,18450+25]..src/partialGrammar.ml[556,18450+73]) ghost
                                                                                                                  Texp_constant Const_char 25
                                                                                                                expression (src/partialGrammar.ml[556,18450+25]..src/partialGrammar.ml[556,18450+73]) ghost
                                                                                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                                  [
                                                                                                                    expression (src/partialGrammar.ml[556,18450+25]..src/partialGrammar.ml[556,18450+73]) ghost
                                                                                                                      Texp_constant Const_string("inline.",(src/partialGrammar.ml[556,18450+25]..src/partialGrammar.ml[556,18450+73]) ghost,None)
                                                                                                                    expression (src/partialGrammar.ml[556,18450+25]..src/partialGrammar.ml[556,18450+73]) ghost
                                                                                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                                      []
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ]
                                                                                                      ]
                                                                                                  ]
                                                                                                expression (src/partialGrammar.ml[556,18450+25]..src/partialGrammar.ml[556,18450+73]) ghost
                                                                                                  Texp_constant Const_string("not all definitions of %s are marked %%inline.",(src/partialGrammar.ml[556,18450+25]..src/partialGrammar.ml[556,18450+73]) ghost,None)
                                                                                              ]
                                                                                          <arg>
                                                                                            Nolabel
                                                                                            expression (src/partialGrammar.ml[556,18450+74]..src/partialGrammar.ml[556,18450+81])
                                                                                              Texp_field
                                                                                              expression (src/partialGrammar.ml[556,18450+74]..src/partialGrammar.ml[556,18450+75])
                                                                                                Texp_ident "r/1430"
                                                                                              "pr_nt"
                                                                                        ]
                                                                                      Some
                                                                                        expression (src/partialGrammar.ml[562,18805+20]..src/partialGrammar.ml[568,19177+23])
                                                                                          Texp_let Nonrec
                                                                                          [
                                                                                            <def>
                                                                                              pattern (src/partialGrammar.ml[562,18805+24]..src/partialGrammar.ml[562,18805+27])
                                                                                                Tpat_var "phi/1436"
                                                                                              expression (src/partialGrammar.ml[562,18805+30]..src/partialGrammar.ml[562,18805+75])
                                                                                                Texp_apply
                                                                                                expression (src/partialGrammar.ml[562,18805+30]..src/partialGrammar.ml[562,18805+42])
                                                                                                  Texp_ident "Stdlib!.List.combine"
                                                                                                [
                                                                                                  <arg>
                                                                                                    Nolabel
                                                                                                    expression (src/partialGrammar.ml[562,18805+43]..src/partialGrammar.ml[562,18805+58])
                                                                                                      Texp_field
                                                                                                      expression (src/partialGrammar.ml[562,18805+43]..src/partialGrammar.ml[562,18805+44])
                                                                                                        Texp_ident "r/1430"
                                                                                                      "pr_parameters"
                                                                                                  <arg>
                                                                                                    Nolabel
                                                                                                    expression (src/partialGrammar.ml[562,18805+59]..src/partialGrammar.ml[562,18805+75])
                                                                                                      Texp_field
                                                                                                      expression (src/partialGrammar.ml[562,18805+59]..src/partialGrammar.ml[562,18805+61])
                                                                                                        Texp_ident "r'/1432"
                                                                                                      "pr_parameters"
                                                                                                ]
                                                                                          ]
                                                                                          expression (src/partialGrammar.ml[563,18884+20]..src/partialGrammar.ml[568,19177+23])
                                                                                            Texp_let Nonrec
                                                                                            [
                                                                                              <def>
                                                                                                pattern (src/partialGrammar.ml[563,18884+24]..src/partialGrammar.ml[563,18884+27])
                                                                                                  Tpat_var "rbr/1437"
                                                                                                expression (src/partialGrammar.ml[563,18884+30]..src/partialGrammar.ml[563,18884+64])
                                                                                                  Texp_apply
                                                                                                  expression (src/partialGrammar.ml[563,18884+30]..src/partialGrammar.ml[563,18884+46])
                                                                                                    Texp_ident "rewrite_branches/863"
                                                                                                  [
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/partialGrammar.ml[563,18884+47]..src/partialGrammar.ml[563,18884+50])
                                                                                                        Texp_ident "phi/1436"
                                                                                                    <arg>
                                                                                                      Nolabel
                                                                                                      expression (src/partialGrammar.ml[563,18884+51]..src/partialGrammar.ml[563,18884+64])
                                                                                                        Texp_field
                                                                                                        expression (src/partialGrammar.ml[563,18884+51]..src/partialGrammar.ml[563,18884+52])
                                                                                                          Texp_ident "r/1430"
                                                                                                        "pr_branches"
                                                                                                  ]
                                                                                            ]
                                                                                            expression (src/partialGrammar.ml[564,18952+22]..src/partialGrammar.ml[568,19177+23])
                                                                                              Texp_record
                                                                                                fields =
                                                                                                  [
                                                                                                    <kept>                                                                                                    <kept>                                                                                                    <kept>                                                                                                    "pr_positions"
                                                                                                      expression (src/partialGrammar.ml[565,18984+41]..src/partialGrammar.ml[565,18984+50])
                                                                                                        Texp_ident "positions/1433"
                                                                                                    "pr_attributes"
                                                                                                      expression (src/partialGrammar.ml[567,19099+42]..src/partialGrammar.ml[567,19099+76])
                                                                                                        Texp_apply
                                                                                                        expression (src/partialGrammar.ml[567,19099+58]..src/partialGrammar.ml[567,19099+59])
                                                                                                          Texp_ident "Stdlib!.@"
                                                                                                        [
                                                                                                          <arg>
                                                                                                            Nolabel
                                                                                                            expression (src/partialGrammar.ml[567,19099+42]..src/partialGrammar.ml[567,19099+57])
                                                                                                              Texp_field
                                                                                                              expression (src/partialGrammar.ml[567,19099+42]..src/partialGrammar.ml[567,19099+43])
                                                                                                                Texp_ident "r/1430"
                                                                                                              "pr_attributes"
                                                                                                          <arg>
                                                                                                            Nolabel
                                                                                                            expression (src/partialGrammar.ml[567,19099+60]..src/partialGrammar.ml[567,19099+76])
                                                                                                              Texp_field
                                                                                                              expression (src/partialGrammar.ml[567,19099+60]..src/partialGrammar.ml[567,19099+62])
                                                                                                                Texp_ident "r'/1432"
                                                                                                              "pr_attributes"
                                                                                                        ]
                                                                                                    <kept>                                                                                                    "pr_branches"
                                                                                                      expression (src/partialGrammar.ml[566,19036+41]..src/partialGrammar.ml[566,19036+61])
                                                                                                        Texp_apply
                                                                                                        expression (src/partialGrammar.ml[566,19036+45]..src/partialGrammar.ml[566,19036+46])
                                                                                                          Texp_ident "Stdlib!.@"
                                                                                                        [
                                                                                                          <arg>
                                                                                                            Nolabel
                                                                                                            expression (src/partialGrammar.ml[566,19036+41]..src/partialGrammar.ml[566,19036+44])
                                                                                                              Texp_ident "rbr/1437"
                                                                                                          <arg>
                                                                                                            Nolabel
                                                                                                            expression (src/partialGrammar.ml[566,19036+47]..src/partialGrammar.ml[566,19036+61])
                                                                                                              Texp_field
                                                                                                              expression (src/partialGrammar.ml[566,19036+47]..src/partialGrammar.ml[566,19036+49])
                                                                                                                Texp_ident "r'/1432"
                                                                                                              "pr_branches"
                                                                                                        ]
                                                                                                  ]
                                                                                                representation =
                                                                                                  Record_regular
                                                                                                extended_expression =
                                                                                                  Some
                                                                                                    expression (src/partialGrammar.ml[564,18952+24]..src/partialGrammar.ml[564,18952+26])
                                                                                                      Texp_ident "r'/1432"
                                                                          [
                                                                            <case>
                                                                              pattern (src/partialGrammar.ml[569,19201+19]..src/partialGrammar.ml[569,19201+28])
                                                                                Tpat_construct "Not_found"
                                                                                []
                                                                                None
                                                                              expression (src/partialGrammar.ml[572,19374+16]..src/partialGrammar.ml[572,19374+51])
                                                                                Texp_apply
                                                                                expression (src/partialGrammar.ml[572,19374+16]..src/partialGrammar.ml[572,19374+33])
                                                                                  Texp_ident "alphaconvert_rule/973"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/partialGrammar.ml[572,19374+34]..src/partialGrammar.ml[572,19374+49])
                                                                                      Texp_field
                                                                                      expression (src/partialGrammar.ml[572,19374+34]..src/partialGrammar.ml[572,19374+35])
                                                                                        Texp_ident "r/1430"
                                                                                      "pr_parameters"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/partialGrammar.ml[572,19374+50]..src/partialGrammar.ml[572,19374+51])
                                                                                      Texp_ident "r/1430"
                                                                                ]
                                                                          ]
                                                                    ]
                                                                    expression (src/partialGrammar.ml[574,19441+14]..src/partialGrammar.ml[574,19441+43])
                                                                      Texp_apply
                                                                      expression (src/partialGrammar.ml[574,19441+14]..src/partialGrammar.ml[574,19441+27])
                                                                        Texp_ident "Dune__exe!.StringMap.add"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/partialGrammar.ml[574,19441+28]..src/partialGrammar.ml[574,19441+35])
                                                                            Texp_field
                                                                            expression (src/partialGrammar.ml[574,19441+28]..src/partialGrammar.ml[574,19441+29])
                                                                              Texp_ident "r/1431"
                                                                            "pr_nt"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/partialGrammar.ml[574,19441+36]..src/partialGrammar.ml[574,19441+37])
                                                                            Texp_ident "r/1431"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/partialGrammar.ml[574,19441+38]..src/partialGrammar.ml[574,19441+43])
                                                                            Texp_ident "rules/1429"
                                                                      ]
                                                              ]
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (src/partialGrammar.ml[574,19441+45]..src/partialGrammar.ml[574,19441+50])
                                                        Texp_ident "rules/1427"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/partialGrammar.ml[574,19441+51]..src/partialGrammar.ml[574,19441+63])
                                                        Texp_field
                                                        expression (src/partialGrammar.ml[574,19441+51]..src/partialGrammar.ml[574,19441+54])
                                                          Texp_ident "rpg/1428"
                                                        "pg_rules"
                                                  ]
                                            ]
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/partialGrammar.ml[575,19506+6]..src/partialGrammar.ml[575,19506+21])
                                      Texp_ident "Dune__exe!.StringMap.empty"
                                  <arg>
                                    Nolabel
                                    expression (src/partialGrammar.ml[575,19506+22]..src/partialGrammar.ml[575,19506+26])
                                      Texp_ident "rpgs/1406"
                                ]
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[577,19534+0]..src/partialGrammar.ml[589,19957+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[577,19534+4]..src/partialGrammar.ml[577,19534+17])
          Tpat_var "empty_grammar/1438"
        expression (src/partialGrammar.ml[578,19554+2]..src/partialGrammar.ml[589,19957+3])
          Texp_record
            fields =
              [
                "p_preludes"
                  expression (src/partialGrammar.ml[579,19558+32]..src/partialGrammar.ml[579,19558+34])
                    Texp_construct "[]"
                    []
                "p_postludes"
                  expression (src/partialGrammar.ml[580,19594+32]..src/partialGrammar.ml[580,19594+34])
                    Texp_construct "[]"
                    []
                "p_parameters"
                  expression (src/partialGrammar.ml[581,19630+32]..src/partialGrammar.ml[581,19630+34])
                    Texp_construct "[]"
                    []
                "p_start_symbols"
                  expression (src/partialGrammar.ml[582,19666+32]..src/partialGrammar.ml[582,19666+47])
                    Texp_ident "Dune__exe!.StringMap.empty"
                "p_types"
                  expression (src/partialGrammar.ml[583,19715+32]..src/partialGrammar.ml[583,19715+34])
                    Texp_construct "[]"
                    []
                "p_tokens"
                  expression (src/partialGrammar.ml[584,19751+32]..src/partialGrammar.ml[584,19751+47])
                    Texp_ident "Dune__exe!.StringMap.empty"
                "p_on_error_reduce"
                  expression (src/partialGrammar.ml[586,19849+32]..src/partialGrammar.ml[586,19849+34])
                    Texp_construct "[]"
                    []
                "p_grammar_attributes"
                  expression (src/partialGrammar.ml[587,19885+32]..src/partialGrammar.ml[587,19885+34])
                    Texp_construct "[]"
                    []
                "p_symbol_attributes"
                  expression (src/partialGrammar.ml[588,19921+32]..src/partialGrammar.ml[588,19921+34])
                    Texp_construct "[]"
                    []
                "p_rules"
                  expression (src/partialGrammar.ml[585,19800+32]..src/partialGrammar.ml[585,19800+47])
                    Texp_ident "Dune__exe!.StringMap.empty"
              ]
            representation =
              Record_regular
            extended_expression =
              None
    ]
  structure_item (src/partialGrammar.ml[591,19962+0]..src/partialGrammar.ml[594,20111+41])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[591,19962+4]..src/partialGrammar.ml[591,19962+8])
          Tpat_var "join/1439"
        expression (src/partialGrammar.ml[591,19962+9]..src/partialGrammar.ml[594,20111+41]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[591,19962+9]..src/partialGrammar.ml[591,19962+16])
                Tpat_var "grammar/1440"
              expression (src/partialGrammar.ml[591,19962+17]..src/partialGrammar.ml[594,20111+41]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[591,19962+17]..src/partialGrammar.ml[591,19962+25])
                      Tpat_var "pgrammar/1441"
                    expression (src/partialGrammar.ml[592,19990+2]..src/partialGrammar.ml[594,20111+41])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/partialGrammar.ml[592,19990+6]..src/partialGrammar.ml[592,19990+14])
                            Tpat_var "filename/1442"
                          expression (src/partialGrammar.ml[592,19990+17]..src/partialGrammar.ml[592,19990+37])
                            Texp_field
                            expression (src/partialGrammar.ml[592,19990+17]..src/partialGrammar.ml[592,19990+25])
                              Texp_ident "pgrammar/1441"
                            "pg_filename"
                      ]
                      expression (src/partialGrammar.ml[593,20031+4]..src/partialGrammar.ml[594,20111+41])
                        Texp_apply
                        expression (src/partialGrammar.ml[594,20111+7]..src/partialGrammar.ml[594,20111+41])
                          Texp_apply
                          expression (src/partialGrammar.ml[594,20111+7]..src/partialGrammar.ml[594,20111+20])
                            Texp_ident "join_postlude/719"
                          [
                            <arg>
                              Nolabel
                              expression (src/partialGrammar.ml[594,20111+21]..src/partialGrammar.ml[594,20111+41])
                                Texp_field
                                expression (src/partialGrammar.ml[594,20111+21]..src/partialGrammar.ml[594,20111+29])
                                  Texp_ident "pgrammar/1441"
                                "pg_postlude"
                          ]
                        [
                          <arg>
                            Nolabel
                            expression (src/partialGrammar.ml[593,20031+4]..src/partialGrammar.ml[593,20031+79])
                              Texp_apply
                              expression (src/partialGrammar.ml[593,20031+4]..src/partialGrammar.ml[593,20031+18])
                                Texp_ident "Stdlib!.List.fold_left"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/partialGrammar.ml[593,20031+19]..src/partialGrammar.ml[593,20031+46])
                                    Texp_apply
                                    expression (src/partialGrammar.ml[593,20031+20]..src/partialGrammar.ml[593,20031+36])
                                      Texp_ident "join_declaration/466"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/partialGrammar.ml[593,20031+37]..src/partialGrammar.ml[593,20031+45])
                                          Texp_ident "filename/1442"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/partialGrammar.ml[593,20031+47]..src/partialGrammar.ml[593,20031+54])
                                    Texp_ident "grammar/1440"
                                <arg>
                                  Nolabel
                                  expression (src/partialGrammar.ml[593,20031+55]..src/partialGrammar.ml[593,20031+79])
                                    Texp_field
                                    expression (src/partialGrammar.ml[593,20031+55]..src/partialGrammar.ml[593,20031+63])
                                      Texp_ident "pgrammar/1441"
                                    "pg_declarations"
                              ]
                        ]
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[597,20226+0]..src/partialGrammar.ml[607,20558+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[597,20226+4]..src/partialGrammar.ml[597,20226+26])
          Tpat_var "check_inline_attribute/1443"
        expression (src/partialGrammar.ml[597,20226+27]..src/partialGrammar.ml[607,20558+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[597,20226+27]..src/partialGrammar.ml[597,20226+32])
                Tpat_var "prule/1445"
              expression (src/partialGrammar.ml[598,20261+2]..src/partialGrammar.ml[607,20558+8])
                Texp_match
                expression (src/partialGrammar.ml[598,20261+8]..src/partialGrammar.ml[598,20261+49])
                  Texp_tuple
                  [
                    expression (src/partialGrammar.ml[598,20261+8]..src/partialGrammar.ml[598,20261+28])
                      Texp_field
                      expression (src/partialGrammar.ml[598,20261+8]..src/partialGrammar.ml[598,20261+13])
                        Texp_ident "prule/1445"
                      "pr_inline_flag"
                    expression (src/partialGrammar.ml[598,20261+30]..src/partialGrammar.ml[598,20261+49])
                      Texp_field
                      expression (src/partialGrammar.ml[598,20261+30]..src/partialGrammar.ml[598,20261+35])
                        Texp_ident "prule/1445"
                      "pr_attributes"
                  ]
                [
                  <case>
                    pattern (src/partialGrammar.ml[599,20316+4]..src/partialGrammar.ml[599,20316+39])
                      Tpat_value
                      pattern (src/partialGrammar.ml[599,20316+4]..src/partialGrammar.ml[599,20316+39])
                        Tpat_tuple
                        [
                          pattern (src/partialGrammar.ml[599,20316+4]..src/partialGrammar.ml[599,20316+8])
                            Tpat_construct "true"
                            []
                            None
                          pattern (src/partialGrammar.ml[599,20316+10]..src/partialGrammar.ml[599,20316+39])
                            Tpat_construct "::"
                            [
                              pattern (src/partialGrammar.ml[599,20316+10]..src/partialGrammar.ml[599,20316+24])
                                Tpat_tuple
                                [
                                  pattern (src/partialGrammar.ml[599,20316+11]..src/partialGrammar.ml[599,20316+13])
                                    Tpat_var "id/1446"
                                  pattern (src/partialGrammar.ml[599,20316+15]..src/partialGrammar.ml[599,20316+23])
                                    Tpat_var "_payload/1447"
                                ]
                              pattern (src/partialGrammar.ml[599,20316+28]..src/partialGrammar.ml[599,20316+39])
                                Tpat_var "_attributes/1448"
                            ]
                            None
                        ]
                    expression (src/partialGrammar.ml[600,20359+6]..src/partialGrammar.ml[604,20509+19])
                      Texp_apply
                      expression (src/partialGrammar.ml[600,20359+6]..src/partialGrammar.ml[600,20359+17])
                        Texp_ident "Dune__exe!.Error.error"
                      [
                        <arg>
                          Nolabel
                          expression (src/partialGrammar.ml[601,20377+8]..src/partialGrammar.ml[601,20377+31])
                            Texp_construct "::"
                            [
                              expression (src/partialGrammar.ml[601,20377+9]..src/partialGrammar.ml[601,20377+30])
                                Texp_apply
                                expression (src/partialGrammar.ml[601,20377+9]..src/partialGrammar.ml[601,20377+27])
                                  Texp_ident "Dune__exe!.Positions.position"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/partialGrammar.ml[601,20377+28]..src/partialGrammar.ml[601,20377+30])
                                      Texp_ident "id/1446"
                                ]
                              expression (src/partialGrammar.ml[601,20377+30]..src/partialGrammar.ml[601,20377+31]) ghost
                                Texp_construct "[]"
                                []
                            ]
                        <arg>
                          Nolabel
                          expression (src/partialGrammar.ml[602,20409+8]..src/partialGrammar.ml[603,20469+39])
                            Texp_construct "CamlinternalFormatBasics.Format"
                            [
                              expression (src/partialGrammar.ml[602,20409+8]..src/partialGrammar.ml[603,20469+39]) ghost
                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                [
                                  expression (src/partialGrammar.ml[602,20409+8]..src/partialGrammar.ml[603,20469+39]) ghost
                                    Texp_constant Const_string("the nonterminal symbol ",(src/partialGrammar.ml[602,20409+8]..src/partialGrammar.ml[603,20469+39]) ghost,None)
                                  expression (src/partialGrammar.ml[602,20409+8]..src/partialGrammar.ml[603,20469+39]) ghost
                                    Texp_construct "CamlinternalFormatBasics.String"
                                    [
                                      expression (src/partialGrammar.ml[602,20409+8]..src/partialGrammar.ml[603,20469+39]) ghost
                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                        []
                                      expression (src/partialGrammar.ml[602,20409+8]..src/partialGrammar.ml[603,20469+39]) ghost
                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                        [
                                          expression (src/partialGrammar.ml[602,20409+8]..src/partialGrammar.ml[603,20469+39]) ghost
                                            Texp_constant Const_string(" is declared ",(src/partialGrammar.ml[602,20409+8]..src/partialGrammar.ml[603,20469+39]) ghost,None)
                                          expression (src/partialGrammar.ml[602,20409+8]..src/partialGrammar.ml[603,20469+39]) ghost
                                            Texp_construct "CamlinternalFormatBasics.Char_literal"
                                            [
                                              expression (src/partialGrammar.ml[602,20409+8]..src/partialGrammar.ml[603,20469+39]) ghost
                                                Texp_constant Const_char 25
                                              expression (src/partialGrammar.ml[602,20409+8]..src/partialGrammar.ml[603,20469+39]) ghost
                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                [
                                                  expression (src/partialGrammar.ml[602,20409+8]..src/partialGrammar.ml[603,20469+39]) ghost
                                                    Texp_constant Const_string("inline.\nIt cannot carry an attribute.",(src/partialGrammar.ml[602,20409+8]..src/partialGrammar.ml[603,20469+39]) ghost,None)
                                                  expression (src/partialGrammar.ml[602,20409+8]..src/partialGrammar.ml[603,20469+39]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                    []
                                                ]
                                            ]
                                        ]
                                    ]
                                ]
                              expression (src/partialGrammar.ml[602,20409+8]..src/partialGrammar.ml[603,20469+39]) ghost
                                Texp_constant Const_string("the nonterminal symbol %s is declared %%inline.\nIt cannot carry an attribute.",(src/partialGrammar.ml[602,20409+8]..src/partialGrammar.ml[603,20469+39]) ghost,None)
                            ]
                        <arg>
                          Nolabel
                          expression (src/partialGrammar.ml[604,20509+8]..src/partialGrammar.ml[604,20509+19])
                            Texp_field
                            expression (src/partialGrammar.ml[604,20509+8]..src/partialGrammar.ml[604,20509+13])
                              Texp_ident "prule/1445"
                            "pr_nt"
                      ]
                  <case>
                    pattern (src/partialGrammar.ml[605,20529+4]..src/partialGrammar.ml[606,20542+12])
                      Tpat_or
                      pattern (src/partialGrammar.ml[605,20529+4]..src/partialGrammar.ml[605,20529+12])
                        Tpat_value
                        pattern (src/partialGrammar.ml[605,20529+4]..src/partialGrammar.ml[605,20529+12])
                          Tpat_tuple
                          [
                            pattern (src/partialGrammar.ml[605,20529+4]..src/partialGrammar.ml[605,20529+8])
                              Tpat_construct "true"
                              []
                              None
                            pattern (src/partialGrammar.ml[605,20529+10]..src/partialGrammar.ml[605,20529+12])
                              Tpat_construct "[]"
                              []
                              None
                          ]
                      pattern (src/partialGrammar.ml[606,20542+4]..src/partialGrammar.ml[606,20542+12])
                        Tpat_value
                        pattern (src/partialGrammar.ml[606,20542+4]..src/partialGrammar.ml[606,20542+12])
                          Tpat_tuple
                          [
                            pattern (src/partialGrammar.ml[606,20542+4]..src/partialGrammar.ml[606,20542+9])
                              Tpat_construct "false"
                              []
                              None
                            pattern (src/partialGrammar.ml[606,20542+11]..src/partialGrammar.ml[606,20542+12])
                              Tpat_any
                          ]
                    expression (src/partialGrammar.ml[607,20558+6]..src/partialGrammar.ml[607,20558+8])
                      Texp_construct "()"
                      []
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[609,20568+0]..src/partialGrammar.ml[610,20583+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[609,20568+4]..src/partialGrammar.ml[609,20568+12])
          Tpat_var "reserved/1449"
        expression (src/partialGrammar.ml[610,20583+2]..src/partialGrammar.ml[610,20583+13])
          Texp_construct "::"
          [
            expression (src/partialGrammar.ml[610,20583+4]..src/partialGrammar.ml[610,20583+11])
              Texp_constant Const_string("error",(src/partialGrammar.ml[610,20583+5]..src/partialGrammar.ml[610,20583+10]),None)
            expression (src/partialGrammar.ml[610,20583+12]..src/partialGrammar.ml[610,20583+13]) ghost
              Texp_construct "[]"
              []
          ]
    ]
  structure_item (src/partialGrammar.ml[612,20598+0]..src/partialGrammar.ml[638,21661+59])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[612,20598+4]..src/partialGrammar.ml[612,20598+30])
          Tpat_var "check_identifier_reference/1450"
        expression (src/partialGrammar.ml[612,20598+31]..src/partialGrammar.ml[638,21661+59]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[612,20598+31]..src/partialGrammar.ml[612,20598+49])
                Tpat_var "mark_token_as_used/1452"
              expression (src/partialGrammar.ml[612,20598+50]..src/partialGrammar.ml[638,21661+59]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/partialGrammar.ml[612,20598+50]..src/partialGrammar.ml[612,20598+57])
                      Tpat_var "grammar/1453"
                    expression (src/partialGrammar.ml[612,20598+58]..src/partialGrammar.ml[638,21661+59]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/partialGrammar.ml[612,20598+58]..src/partialGrammar.ml[612,20598+63])
                            Tpat_var "prule/1454"
                          expression (src/partialGrammar.ml[612,20598+64]..src/partialGrammar.ml[638,21661+59]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/partialGrammar.ml[612,20598+64]..src/partialGrammar.ml[612,20598+71])
                                  Tpat_var "is_prec/1455"
                                expression (src/partialGrammar.ml[612,20598+72]..src/partialGrammar.ml[638,21661+59]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/partialGrammar.ml[612,20598+72]..src/partialGrammar.ml[612,20598+73])
                                        Tpat_var "s/1456"
                                      expression (src/partialGrammar.ml[612,20598+74]..src/partialGrammar.ml[638,21661+59]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/partialGrammar.ml[612,20598+74]..src/partialGrammar.ml[612,20598+75])
                                              Tpat_var "p/1457"
                                            expression (src/partialGrammar.ml[613,20676+2]..src/partialGrammar.ml[638,21661+59])
                                              Texp_ifthenelse
                                              expression (src/partialGrammar.ml[613,20676+5]..src/partialGrammar.ml[613,20676+50])
                                                Texp_apply
                                                expression (src/partialGrammar.ml[613,20676+17]..src/partialGrammar.ml[613,20676+19])
                                                  Texp_ident "Stdlib!.&&"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/partialGrammar.ml[613,20676+5]..src/partialGrammar.ml[613,20676+16])
                                                      Texp_apply
                                                      expression (src/partialGrammar.ml[613,20676+5]..src/partialGrammar.ml[613,20676+8])
                                                        Texp_ident "Stdlib!.not"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/partialGrammar.ml[613,20676+9]..src/partialGrammar.ml[613,20676+16])
                                                            Texp_ident "is_prec/1455"
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (src/partialGrammar.ml[613,20676+20]..src/partialGrammar.ml[613,20676+50])
                                                      Texp_apply
                                                      expression (src/partialGrammar.ml[613,20676+20]..src/partialGrammar.ml[613,20676+28])
                                                        Texp_ident "Stdlib!.List.mem"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/partialGrammar.ml[613,20676+29]..src/partialGrammar.ml[613,20676+30])
                                                            Texp_ident "s/1456"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/partialGrammar.ml[613,20676+31]..src/partialGrammar.ml[613,20676+50])
                                                            Texp_field
                                                            expression (src/partialGrammar.ml[613,20676+31]..src/partialGrammar.ml[613,20676+36])
                                                              Texp_ident "prule/1454"
                                                            "pr_parameters"
                                                      ]
                                                ]
                                              expression (src/partialGrammar.ml[615,20768+4]..src/partialGrammar.ml[615,20768+6])
                                                Texp_construct "()"
                                                []
                                              Some
                                                expression (src/partialGrammar.ml[616,20775+7]..src/partialGrammar.ml[638,21661+59])
                                                  Texp_ifthenelse
                                                  expression (src/partialGrammar.ml[616,20775+10]..src/partialGrammar.ml[616,20775+44])
                                                    Texp_apply
                                                    expression (src/partialGrammar.ml[616,20775+22]..src/partialGrammar.ml[616,20775+24])
                                                      Texp_ident "Stdlib!.&&"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/partialGrammar.ml[616,20775+10]..src/partialGrammar.ml[616,20775+21])
                                                          Texp_apply
                                                          expression (src/partialGrammar.ml[616,20775+10]..src/partialGrammar.ml[616,20775+13])
                                                            Texp_ident "Stdlib!.not"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[616,20775+14]..src/partialGrammar.ml[616,20775+21])
                                                                Texp_ident "is_prec/1455"
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (src/partialGrammar.ml[616,20775+25]..src/partialGrammar.ml[616,20775+44])
                                                          Texp_apply
                                                          expression (src/partialGrammar.ml[616,20775+25]..src/partialGrammar.ml[616,20775+33])
                                                            Texp_ident "Stdlib!.List.mem"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[616,20775+34]..src/partialGrammar.ml[616,20775+35])
                                                                Texp_ident "s/1456"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[616,20775+36]..src/partialGrammar.ml[616,20775+44])
                                                                Texp_ident "reserved/1449"
                                                          ]
                                                    ]
                                                  expression (src/partialGrammar.ml[618,20853+4]..src/partialGrammar.ml[618,20853+24])
                                                    Texp_apply
                                                    expression (src/partialGrammar.ml[618,20853+4]..src/partialGrammar.ml[618,20853+22])
                                                      Texp_ident "mark_token_as_used/1452"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/partialGrammar.ml[618,20853+23]..src/partialGrammar.ml[618,20853+24])
                                                          Texp_ident "s/1456"
                                                    ]
                                                  Some
                                                    expression (src/partialGrammar.ml[619,20878+7]..src/partialGrammar.ml[638,21661+59])
                                                      Texp_ifthenelse
                                                      expression (src/partialGrammar.ml[619,20878+10]..src/partialGrammar.ml[619,20878+56])
                                                        Texp_apply
                                                        expression (src/partialGrammar.ml[619,20878+22]..src/partialGrammar.ml[619,20878+24])
                                                          Texp_ident "Stdlib!.&&"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/partialGrammar.ml[619,20878+10]..src/partialGrammar.ml[619,20878+21])
                                                              Texp_apply
                                                              expression (src/partialGrammar.ml[619,20878+10]..src/partialGrammar.ml[619,20878+13])
                                                                Texp_ident "Stdlib!.not"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/partialGrammar.ml[619,20878+14]..src/partialGrammar.ml[619,20878+21])
                                                                    Texp_ident "is_prec/1455"
                                                              ]
                                                          <arg>
                                                            Nolabel
                                                            expression (src/partialGrammar.ml[619,20878+25]..src/partialGrammar.ml[619,20878+56])
                                                              Texp_apply
                                                              expression (src/partialGrammar.ml[619,20878+25]..src/partialGrammar.ml[619,20878+38])
                                                                Texp_ident "Dune__exe!.StringMap.mem"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/partialGrammar.ml[619,20878+39]..src/partialGrammar.ml[619,20878+40])
                                                                    Texp_ident "s/1456"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/partialGrammar.ml[619,20878+41]..src/partialGrammar.ml[619,20878+56])
                                                                    Texp_field
                                                                    expression (src/partialGrammar.ml[619,20878+41]..src/partialGrammar.ml[619,20878+48])
                                                                      Texp_ident "grammar/1453"
                                                                    "p_rules"
                                                              ]
                                                        ]
                                                      expression (src/partialGrammar.ml[621,20972+4]..src/partialGrammar.ml[621,20972+6])
                                                        Texp_construct "()"
                                                        []
                                                      Some
                                                        expression (src/partialGrammar.ml[622,20979+7]..src/partialGrammar.ml[638,21661+59])
                                                          Texp_match
                                                          expression (src/partialGrammar.ml[622,20979+13]..src/partialGrammar.ml[622,20979+46])
                                                            Texp_apply
                                                            expression (src/partialGrammar.ml[622,20979+13]..src/partialGrammar.ml[622,20979+27])
                                                              Texp_ident "Dune__exe!.StringMap.find"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/partialGrammar.ml[622,20979+28]..src/partialGrammar.ml[622,20979+29])
                                                                  Texp_ident "s/1456"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/partialGrammar.ml[622,20979+30]..src/partialGrammar.ml[622,20979+46])
                                                                  Texp_field
                                                                  expression (src/partialGrammar.ml[622,20979+30]..src/partialGrammar.ml[622,20979+37])
                                                                    Texp_ident "grammar/1453"
                                                                  "p_tokens"
                                                            ]
                                                          [
                                                            <case>
                                                              pattern (src/partialGrammar.ml[623,21031+6]..src/partialGrammar.ml[623,21031+10])
                                                                Tpat_value
                                                                pattern (src/partialGrammar.ml[623,21031+6]..src/partialGrammar.ml[623,21031+10])
                                                                  Tpat_var "prop/1458"
                                                              expression (src/partialGrammar.ml[625,21101+8]..src/partialGrammar.ml[632,21453+39])
                                                                Texp_sequence
                                                                expression (src/partialGrammar.ml[625,21101+8]..src/partialGrammar.ml[625,21101+28])
                                                                  Texp_apply
                                                                  expression (src/partialGrammar.ml[625,21101+8]..src/partialGrammar.ml[625,21101+26])
                                                                    Texp_ident "mark_token_as_used/1452"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/partialGrammar.ml[625,21101+27]..src/partialGrammar.ml[625,21101+28])
                                                                        Texp_ident "s/1456"
                                                                  ]
                                                                expression (src/partialGrammar.ml[626,21131+8]..src/partialGrammar.ml[632,21453+39])
                                                                  Texp_ifthenelse
                                                                  expression (src/partialGrammar.ml[626,21131+11]..src/partialGrammar.ml[626,21131+49])
                                                                    Texp_apply
                                                                    expression (src/partialGrammar.ml[626,21131+23]..src/partialGrammar.ml[626,21131+25])
                                                                      Texp_ident "Stdlib!.&&"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/partialGrammar.ml[626,21131+11]..src/partialGrammar.ml[626,21131+22])
                                                                          Texp_apply
                                                                          expression (src/partialGrammar.ml[626,21131+11]..src/partialGrammar.ml[626,21131+14])
                                                                            Texp_ident "Stdlib!.not"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/partialGrammar.ml[626,21131+15]..src/partialGrammar.ml[626,21131+22])
                                                                                Texp_ident "is_prec/1455"
                                                                          ]
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/partialGrammar.ml[626,21131+26]..src/partialGrammar.ml[626,21131+49])
                                                                          Texp_apply
                                                                          expression (src/partialGrammar.ml[626,21131+26]..src/partialGrammar.ml[626,21131+29])
                                                                            Texp_ident "Stdlib!.not"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/partialGrammar.ml[626,21131+30]..src/partialGrammar.ml[626,21131+49])
                                                                                Texp_field
                                                                                expression (src/partialGrammar.ml[626,21131+30]..src/partialGrammar.ml[626,21131+34])
                                                                                  Texp_ident "prop/1458"
                                                                                "tk_is_declared"
                                                                          ]
                                                                    ]
                                                                  expression (src/partialGrammar.ml[630,21361+10]..src/partialGrammar.ml[632,21453+39])
                                                                    Texp_apply
                                                                    expression (src/partialGrammar.ml[630,21361+10]..src/partialGrammar.ml[630,21361+21])
                                                                      Texp_ident "Dune__exe!.Error.error"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/partialGrammar.ml[630,21361+22]..src/partialGrammar.ml[630,21361+27])
                                                                          Texp_construct "::"
                                                                          [
                                                                            expression (src/partialGrammar.ml[630,21361+24]..src/partialGrammar.ml[630,21361+25])
                                                                              Texp_ident "p/1457"
                                                                            expression (src/partialGrammar.ml[630,21361+26]..src/partialGrammar.ml[630,21361+27]) ghost
                                                                              Texp_construct "[]"
                                                                              []
                                                                          ]
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/partialGrammar.ml[631,21389+12]..src/partialGrammar.ml[632,21453+37])
                                                                          Texp_construct "CamlinternalFormatBasics.Format"
                                                                          [
                                                                            expression (src/partialGrammar.ml[631,21389+12]..src/partialGrammar.ml[632,21453+37]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                              [
                                                                                expression (src/partialGrammar.ml[631,21389+12]..src/partialGrammar.ml[632,21453+37]) ghost
                                                                                  Texp_constant Const_string("The symbol ",(src/partialGrammar.ml[631,21389+12]..src/partialGrammar.ml[632,21453+37]) ghost,None)
                                                                                expression (src/partialGrammar.ml[631,21389+12]..src/partialGrammar.ml[632,21453+37]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.String"
                                                                                  [
                                                                                    expression (src/partialGrammar.ml[631,21389+12]..src/partialGrammar.ml[632,21453+37]) ghost
                                                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                      []
                                                                                    expression (src/partialGrammar.ml[631,21389+12]..src/partialGrammar.ml[632,21453+37]) ghost
                                                                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                      [
                                                                                        expression (src/partialGrammar.ml[631,21389+12]..src/partialGrammar.ml[632,21453+37]) ghost
                                                                                          Texp_constant Const_string(" has not been declared by ",(src/partialGrammar.ml[631,21389+12]..src/partialGrammar.ml[632,21453+37]) ghost,None)
                                                                                        expression (src/partialGrammar.ml[631,21389+12]..src/partialGrammar.ml[632,21453+37]) ghost
                                                                                          Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                          [
                                                                                            expression (src/partialGrammar.ml[631,21389+12]..src/partialGrammar.ml[632,21453+37]) ghost
                                                                                              Texp_constant Const_char 25
                                                                                            expression (src/partialGrammar.ml[631,21389+12]..src/partialGrammar.ml[632,21453+37]) ghost
                                                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                              [
                                                                                                expression (src/partialGrammar.ml[631,21389+12]..src/partialGrammar.ml[632,21453+37]) ghost
                                                                                                  Texp_constant Const_string("token,\nso cannot be used here.",(src/partialGrammar.ml[631,21389+12]..src/partialGrammar.ml[632,21453+37]) ghost,None)
                                                                                                expression (src/partialGrammar.ml[631,21389+12]..src/partialGrammar.ml[632,21453+37]) ghost
                                                                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                  []
                                                                                              ]
                                                                                          ]
                                                                                      ]
                                                                                  ]
                                                                              ]
                                                                            expression (src/partialGrammar.ml[631,21389+12]..src/partialGrammar.ml[632,21453+37]) ghost
                                                                              Texp_constant Const_string("The symbol %s has not been declared by %%token,\nso cannot be used here.",(src/partialGrammar.ml[631,21389+12]..src/partialGrammar.ml[632,21453+37]) ghost,None)
                                                                          ]
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/partialGrammar.ml[632,21453+38]..src/partialGrammar.ml[632,21453+39])
                                                                          Texp_ident "s/1456"
                                                                    ]
                                                                  None
                                                            <case>
                                                              pattern (src/partialGrammar.ml[633,21493+6]..src/partialGrammar.ml[633,21493+25])
                                                                Tpat_exception
                                                                pattern (src/partialGrammar.ml[633,21493+16]..src/partialGrammar.ml[633,21493+25])
                                                                  Tpat_construct "Not_found"
                                                                  []
                                                                  None
                                                              expression (src/partialGrammar.ml[635,21555+8]..src/partialGrammar.ml[638,21661+59])
                                                                Texp_ifthenelse
                                                                expression (src/partialGrammar.ml[635,21555+11]..src/partialGrammar.ml[635,21555+18])
                                                                  Texp_ident "is_prec/1455"
                                                                expression (src/partialGrammar.ml[636,21579+10]..src/partialGrammar.ml[636,21579+68])
                                                                  Texp_apply
                                                                  expression (src/partialGrammar.ml[636,21579+10]..src/partialGrammar.ml[636,21579+21])
                                                                    Texp_ident "Dune__exe!.Error.error"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/partialGrammar.ml[636,21579+22]..src/partialGrammar.ml[636,21579+27])
                                                                        Texp_construct "::"
                                                                        [
                                                                          expression (src/partialGrammar.ml[636,21579+24]..src/partialGrammar.ml[636,21579+25])
                                                                            Texp_ident "p/1457"
                                                                          expression (src/partialGrammar.ml[636,21579+26]..src/partialGrammar.ml[636,21579+27]) ghost
                                                                            Texp_construct "[]"
                                                                            []
                                                                        ]
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/partialGrammar.ml[636,21579+28]..src/partialGrammar.ml[636,21579+66])
                                                                        Texp_construct "CamlinternalFormatBasics.Format"
                                                                        [
                                                                          expression (src/partialGrammar.ml[636,21579+28]..src/partialGrammar.ml[636,21579+66]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                            [
                                                                              expression (src/partialGrammar.ml[636,21579+28]..src/partialGrammar.ml[636,21579+66]) ghost
                                                                                Texp_constant Const_string("The terminal symbol ",(src/partialGrammar.ml[636,21579+28]..src/partialGrammar.ml[636,21579+66]) ghost,None)
                                                                              expression (src/partialGrammar.ml[636,21579+28]..src/partialGrammar.ml[636,21579+66]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.String"
                                                                                [
                                                                                  expression (src/partialGrammar.ml[636,21579+28]..src/partialGrammar.ml[636,21579+66]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                    []
                                                                                  expression (src/partialGrammar.ml[636,21579+28]..src/partialGrammar.ml[636,21579+66]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                    [
                                                                                      expression (src/partialGrammar.ml[636,21579+28]..src/partialGrammar.ml[636,21579+66]) ghost
                                                                                        Texp_constant Const_string(" is undefined.",(src/partialGrammar.ml[636,21579+28]..src/partialGrammar.ml[636,21579+66]) ghost,None)
                                                                                      expression (src/partialGrammar.ml[636,21579+28]..src/partialGrammar.ml[636,21579+66]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                        []
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                          expression (src/partialGrammar.ml[636,21579+28]..src/partialGrammar.ml[636,21579+66]) ghost
                                                                            Texp_constant Const_string("The terminal symbol %s is undefined.",(src/partialGrammar.ml[636,21579+28]..src/partialGrammar.ml[636,21579+66]) ghost,None)
                                                                        ]
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/partialGrammar.ml[636,21579+67]..src/partialGrammar.ml[636,21579+68])
                                                                        Texp_ident "s/1456"
                                                                  ]
                                                                Some
                                                                  expression (src/partialGrammar.ml[638,21661+10]..src/partialGrammar.ml[638,21661+59])
                                                                    Texp_apply
                                                                    expression (src/partialGrammar.ml[638,21661+10]..src/partialGrammar.ml[638,21661+21])
                                                                      Texp_ident "Dune__exe!.Error.error"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/partialGrammar.ml[638,21661+22]..src/partialGrammar.ml[638,21661+27])
                                                                          Texp_construct "::"
                                                                          [
                                                                            expression (src/partialGrammar.ml[638,21661+24]..src/partialGrammar.ml[638,21661+25])
                                                                              Texp_ident "p/1457"
                                                                            expression (src/partialGrammar.ml[638,21661+26]..src/partialGrammar.ml[638,21661+27]) ghost
                                                                              Texp_construct "[]"
                                                                              []
                                                                          ]
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/partialGrammar.ml[638,21661+28]..src/partialGrammar.ml[638,21661+57])
                                                                          Texp_construct "CamlinternalFormatBasics.Format"
                                                                          [
                                                                            expression (src/partialGrammar.ml[638,21661+28]..src/partialGrammar.ml[638,21661+57]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                              [
                                                                                expression (src/partialGrammar.ml[638,21661+28]..src/partialGrammar.ml[638,21661+57]) ghost
                                                                                  Texp_constant Const_string("The symbol ",(src/partialGrammar.ml[638,21661+28]..src/partialGrammar.ml[638,21661+57]) ghost,None)
                                                                                expression (src/partialGrammar.ml[638,21661+28]..src/partialGrammar.ml[638,21661+57]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.String"
                                                                                  [
                                                                                    expression (src/partialGrammar.ml[638,21661+28]..src/partialGrammar.ml[638,21661+57]) ghost
                                                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                      []
                                                                                    expression (src/partialGrammar.ml[638,21661+28]..src/partialGrammar.ml[638,21661+57]) ghost
                                                                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                      [
                                                                                        expression (src/partialGrammar.ml[638,21661+28]..src/partialGrammar.ml[638,21661+57]) ghost
                                                                                          Texp_constant Const_string(" is undefined.",(src/partialGrammar.ml[638,21661+28]..src/partialGrammar.ml[638,21661+57]) ghost,None)
                                                                                        expression (src/partialGrammar.ml[638,21661+28]..src/partialGrammar.ml[638,21661+57]) ghost
                                                                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                          []
                                                                                      ]
                                                                                  ]
                                                                              ]
                                                                            expression (src/partialGrammar.ml[638,21661+28]..src/partialGrammar.ml[638,21661+57]) ghost
                                                                              Texp_constant Const_string("The symbol %s is undefined.",(src/partialGrammar.ml[638,21661+28]..src/partialGrammar.ml[638,21661+57]) ghost,None)
                                                                          ]
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/partialGrammar.ml[638,21661+58]..src/partialGrammar.ml[638,21661+59])
                                                                          Texp_ident "s/1456"
                                                                    ]
                                                          ]
                                        ]
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/partialGrammar.ml[640,21722+0]..src/partialGrammar.ml[767,26752+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[640,21722+4]..src/partialGrammar.ml[640,21722+47])
          Tpat_var "check_parameterized_grammar_is_well_defined/1459"
        expression (src/partialGrammar.ml[640,21722+48]..src/partialGrammar.ml[767,26752+5]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[640,21722+48]..src/partialGrammar.ml[640,21722+55])
                Tpat_var "grammar/1461"
              expression (src/partialGrammar.ml[643,21848+2]..src/partialGrammar.ml[767,26752+5])
                Texp_sequence
                expression (src/partialGrammar.ml[643,21848+2]..src/partialGrammar.ml[652,22309+29])
                  Texp_apply
                  expression (src/partialGrammar.ml[643,21848+2]..src/partialGrammar.ml[643,21848+16])
                    Texp_ident "Dune__exe!.StringMap.iter"
                  [
                    <arg>
                      Nolabel
                      expression (src/partialGrammar.ml[644,21865+4]..src/partialGrammar.ml[652,22309+5])
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/partialGrammar.ml[644,21865+9]..src/partialGrammar.ml[644,21865+20])
                              Tpat_var "nonterminal/1462"
                            expression (src/partialGrammar.ml[644,21865+21]..src/partialGrammar.ml[651,22235+73]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/partialGrammar.ml[644,21865+21]..src/partialGrammar.ml[644,21865+22])
                                    Tpat_var "p/1463"
                                  expression (src/partialGrammar.ml[645,21891+7]..src/partialGrammar.ml[651,22235+73])
                                    Texp_sequence
                                    expression (src/partialGrammar.ml[645,21891+7]..src/partialGrammar.ml[646,21954+72])
                                      Texp_ifthenelse
                                      expression (src/partialGrammar.ml[645,21891+10]..src/partialGrammar.ml[645,21891+57])
                                        Texp_apply
                                        expression (src/partialGrammar.ml[645,21891+10]..src/partialGrammar.ml[645,21891+13])
                                          Texp_ident "Stdlib!.not"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/partialGrammar.ml[645,21891+14]..src/partialGrammar.ml[645,21891+57])
                                              Texp_apply
                                              expression (src/partialGrammar.ml[645,21891+15]..src/partialGrammar.ml[645,21891+28])
                                                Texp_ident "Dune__exe!.StringMap.mem"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/partialGrammar.ml[645,21891+29]..src/partialGrammar.ml[645,21891+40])
                                                    Texp_ident "nonterminal/1462"
                                                <arg>
                                                  Nolabel
                                                  expression (src/partialGrammar.ml[645,21891+41]..src/partialGrammar.ml[645,21891+56])
                                                    Texp_field
                                                    expression (src/partialGrammar.ml[645,21891+41]..src/partialGrammar.ml[645,21891+48])
                                                      Texp_ident "grammar/1461"
                                                    "p_rules"
                                              ]
                                        ]
                                      expression (src/partialGrammar.ml[646,21954+9]..src/partialGrammar.ml[646,21954+72])
                                        Texp_apply
                                        expression (src/partialGrammar.ml[646,21954+9]..src/partialGrammar.ml[646,21954+20])
                                          Texp_ident "Dune__exe!.Error.error"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/partialGrammar.ml[646,21954+21]..src/partialGrammar.ml[646,21954+24])
                                              Texp_construct "::"
                                              [
                                                expression (src/partialGrammar.ml[646,21954+22]..src/partialGrammar.ml[646,21954+23])
                                                  Texp_ident "p/1463"
                                                expression (src/partialGrammar.ml[646,21954+23]..src/partialGrammar.ml[646,21954+24]) ghost
                                                  Texp_construct "[]"
                                                  []
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/partialGrammar.ml[646,21954+25]..src/partialGrammar.ml[646,21954+60])
                                              Texp_construct "CamlinternalFormatBasics.Format"
                                              [
                                                expression (src/partialGrammar.ml[646,21954+25]..src/partialGrammar.ml[646,21954+60]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                  [
                                                    expression (src/partialGrammar.ml[646,21954+25]..src/partialGrammar.ml[646,21954+60]) ghost
                                                      Texp_constant Const_string("the start symbol ",(src/partialGrammar.ml[646,21954+25]..src/partialGrammar.ml[646,21954+60]) ghost,None)
                                                    expression (src/partialGrammar.ml[646,21954+25]..src/partialGrammar.ml[646,21954+60]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.String"
                                                      [
                                                        expression (src/partialGrammar.ml[646,21954+25]..src/partialGrammar.ml[646,21954+60]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                                          []
                                                        expression (src/partialGrammar.ml[646,21954+25]..src/partialGrammar.ml[646,21954+60]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                                          [
                                                            expression (src/partialGrammar.ml[646,21954+25]..src/partialGrammar.ml[646,21954+60]) ghost
                                                              Texp_constant Const_string(" is undefined.",(src/partialGrammar.ml[646,21954+25]..src/partialGrammar.ml[646,21954+60]) ghost,None)
                                                            expression (src/partialGrammar.ml[646,21954+25]..src/partialGrammar.ml[646,21954+60]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                              []
                                                          ]
                                                      ]
                                                  ]
                                                expression (src/partialGrammar.ml[646,21954+25]..src/partialGrammar.ml[646,21954+60]) ghost
                                                  Texp_constant Const_string("the start symbol %s is undefined.",(src/partialGrammar.ml[646,21954+25]..src/partialGrammar.ml[646,21954+60]) ghost,None)
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/partialGrammar.ml[646,21954+61]..src/partialGrammar.ml[646,21954+72])
                                              Texp_ident "nonterminal/1462"
                                        ]
                                      None
                                    expression (src/partialGrammar.ml[647,22028+7]..src/partialGrammar.ml[651,22235+72])
                                      Texp_ifthenelse
                                      expression (src/partialGrammar.ml[647,22028+10]..src/partialGrammar.ml[649,22146+58])
                                        Texp_apply
                                        expression (src/partialGrammar.ml[647,22028+10]..src/partialGrammar.ml[647,22028+13])
                                          Texp_ident "Stdlib!.not"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/partialGrammar.ml[647,22028+14]..src/partialGrammar.ml[649,22146+58])
                                              Texp_apply
                                              expression (src/partialGrammar.ml[647,22028+15]..src/partialGrammar.ml[647,22028+26])
                                                Texp_ident "Stdlib!.List.exists"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/partialGrammar.ml[647,22028+27]..src/partialGrammar.ml[649,22146+41])
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (src/partialGrammar.ml[648,22065+30]..src/partialGrammar.ml[648,22065+60])
                                                          Tpat_tuple
                                                          [
                                                            pattern (src/partialGrammar.ml[648,22065+30]..src/partialGrammar.ml[648,22065+57])
                                                              Tpat_construct "ParameterVar"
                                                              [
                                                                pattern (src/partialGrammar.ml[648,22065+43]..src/partialGrammar.ml[648,22065+57])
                                                                  Tpat_record
                                                                  [
                                                                    "value"
                                                                      pattern (src/partialGrammar.ml[648,22065+53]..src/partialGrammar.ml[648,22065+55])
                                                                        Tpat_var "id/1464"
                                                                  ]
                                                              ]
                                                              None
                                                            pattern (src/partialGrammar.ml[648,22065+59]..src/partialGrammar.ml[648,22065+60])
                                                              Tpat_any
                                                          ]
                                                        expression (src/partialGrammar.ml[648,22065+64]..src/partialGrammar.ml[648,22065+80])
                                                          Texp_apply
                                                          expression (src/partialGrammar.ml[648,22065+67]..src/partialGrammar.ml[648,22065+68])
                                                            Texp_ident "Stdlib!.="
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[648,22065+64]..src/partialGrammar.ml[648,22065+66])
                                                                Texp_ident "id/1464"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[648,22065+69]..src/partialGrammar.ml[648,22065+80])
                                                                Texp_ident "nonterminal/1462"
                                                          ]
                                                      <case>
                                                        pattern (src/partialGrammar.ml[649,22146+30]..src/partialGrammar.ml[649,22146+31])
                                                          Tpat_any
                                                        expression (src/partialGrammar.ml[649,22146+35]..src/partialGrammar.ml[649,22146+40])
                                                          Texp_construct "false"
                                                          []
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (src/partialGrammar.ml[649,22146+42]..src/partialGrammar.ml[649,22146+57])
                                                    Texp_field
                                                    expression (src/partialGrammar.ml[649,22146+42]..src/partialGrammar.ml[649,22146+49])
                                                      Texp_ident "grammar/1461"
                                                    "p_types"
                                              ]
                                        ]
                                      expression (src/partialGrammar.ml[650,22210+9]..src/partialGrammar.ml[651,22235+72])
                                        Texp_apply
                                        expression (src/partialGrammar.ml[650,22210+9]..src/partialGrammar.ml[650,22210+20])
                                          Texp_ident "Dune__exe!.Error.error"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/partialGrammar.ml[650,22210+21]..src/partialGrammar.ml[650,22210+24])
                                              Texp_construct "::"
                                              [
                                                expression (src/partialGrammar.ml[650,22210+22]..src/partialGrammar.ml[650,22210+23])
                                                  Texp_ident "p/1463"
                                                expression (src/partialGrammar.ml[650,22210+23]..src/partialGrammar.ml[650,22210+24]) ghost
                                                  Texp_construct "[]"
                                                  []
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/partialGrammar.ml[651,22235+11]..src/partialGrammar.ml[651,22235+60])
                                              Texp_construct "CamlinternalFormatBasics.Format"
                                              [
                                                expression (src/partialGrammar.ml[651,22235+11]..src/partialGrammar.ml[651,22235+60]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                  [
                                                    expression (src/partialGrammar.ml[651,22235+11]..src/partialGrammar.ml[651,22235+60]) ghost
                                                      Texp_constant Const_string("the type of the start symbol ",(src/partialGrammar.ml[651,22235+11]..src/partialGrammar.ml[651,22235+60]) ghost,None)
                                                    expression (src/partialGrammar.ml[651,22235+11]..src/partialGrammar.ml[651,22235+60]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.String"
                                                      [
                                                        expression (src/partialGrammar.ml[651,22235+11]..src/partialGrammar.ml[651,22235+60]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                                          []
                                                        expression (src/partialGrammar.ml[651,22235+11]..src/partialGrammar.ml[651,22235+60]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                                          [
                                                            expression (src/partialGrammar.ml[651,22235+11]..src/partialGrammar.ml[651,22235+60]) ghost
                                                              Texp_constant Const_string(" is unspecified.",(src/partialGrammar.ml[651,22235+11]..src/partialGrammar.ml[651,22235+60]) ghost,None)
                                                            expression (src/partialGrammar.ml[651,22235+11]..src/partialGrammar.ml[651,22235+60]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                              []
                                                          ]
                                                      ]
                                                  ]
                                                expression (src/partialGrammar.ml[651,22235+11]..src/partialGrammar.ml[651,22235+60]) ghost
                                                  Texp_constant Const_string("the type of the start symbol %s is unspecified.",(src/partialGrammar.ml[651,22235+11]..src/partialGrammar.ml[651,22235+60]) ghost,None)
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/partialGrammar.ml[651,22235+61]..src/partialGrammar.ml[651,22235+72])
                                              Texp_ident "nonterminal/1462"
                                        ]
                                      None
                              ]
                        ]
                    <arg>
                      Nolabel
                      expression (src/partialGrammar.ml[652,22309+6]..src/partialGrammar.ml[652,22309+29])
                        Texp_field
                        expression (src/partialGrammar.ml[652,22309+6]..src/partialGrammar.ml[652,22309+13])
                          Texp_ident "grammar/1461"
                        "p_start_symbols"
                  ]
                expression (src/partialGrammar.ml[658,22532+2]..src/partialGrammar.ml[767,26752+5])
                  Texp_let Rec
                  [
                    <def>
                      pattern (src/partialGrammar.ml[658,22532+10]..src/partialGrammar.ml[658,22532+15])
                        Tpat_var "check/1466"
                      expression (src/partialGrammar.ml[658,22532+16]..src/partialGrammar.ml[675,23417+35]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/partialGrammar.ml[658,22532+17]..src/partialGrammar.ml[658,22532+21])
                              extra
                                Tpat_extra_constraint
                                core_type (src/partialGrammar.ml[658,22532+24]..src/partialGrammar.ml[658,22532+30])
                                  Ttyp_constr "string/15!"
                                  []
                              Tpat_alias "kind/1467"
                              pattern (src/partialGrammar.ml[658,22532+17]..src/partialGrammar.ml[658,22532+21])
                                Tpat_any
                            expression (src/partialGrammar.ml[658,22532+32]..src/partialGrammar.ml[675,23417+35]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/partialGrammar.ml[658,22532+33]..src/partialGrammar.ml[658,22532+52])
                                    extra
                                      Tpat_extra_constraint
                                      core_type (src/partialGrammar.ml[658,22532+55]..src/partialGrammar.ml[658,22532+59])
                                        Ttyp_constr "bool/5!"
                                        []
                                    Tpat_alias "must_be_nonterminal/1468"
                                    pattern (src/partialGrammar.ml[658,22532+33]..src/partialGrammar.ml[658,22532+52])
                                      Tpat_any
                                  expression (src/partialGrammar.ml[658,22532+61]..src/partialGrammar.ml[675,23417+35]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/partialGrammar.ml[658,22532+62]..src/partialGrammar.ml[658,22532+63])
                                          extra
                                            Tpat_extra_constraint
                                            core_type (src/partialGrammar.ml[658,22532+66]..src/partialGrammar.ml[658,22532+82])
                                              Ttyp_constr "Dune__exe!.Syntax.parameter"
                                              []
                                          Tpat_alias "p/1469"
                                          pattern (src/partialGrammar.ml[658,22532+62]..src/partialGrammar.ml[658,22532+63])
                                            Tpat_any
                                        expression (src/partialGrammar.ml[660,22660+4]..src/partialGrammar.ml[675,23417+35])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/partialGrammar.ml[660,22660+8]..src/partialGrammar.ml[660,22660+16])
                                                Tpat_tuple
                                                [
                                                  pattern (src/partialGrammar.ml[660,22660+8]..src/partialGrammar.ml[660,22660+12])
                                                    Tpat_var "head/1470"
                                                  pattern (src/partialGrammar.ml[660,22660+14]..src/partialGrammar.ml[660,22660+16])
                                                    Tpat_var "ps/1471"
                                                ]
                                              expression (src/partialGrammar.ml[660,22660+19]..src/partialGrammar.ml[660,22660+37])
                                                Texp_apply
                                                expression (src/partialGrammar.ml[660,22660+19]..src/partialGrammar.ml[660,22660+35])
                                                  Texp_ident "Dune__exe!.Parameters.unapp"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/partialGrammar.ml[660,22660+36]..src/partialGrammar.ml[660,22660+37])
                                                      Texp_ident "p/1469"
                                                ]
                                          ]
                                          expression (src/partialGrammar.ml[661,22701+4]..src/partialGrammar.ml[675,23417+35])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/partialGrammar.ml[661,22701+8]..src/partialGrammar.ml[661,22701+12])
                                                  Tpat_var "head/1472"
                                                expression (src/partialGrammar.ml[661,22701+15]..src/partialGrammar.ml[661,22701+25])
                                                  Texp_apply
                                                  expression (src/partialGrammar.ml[661,22701+15]..src/partialGrammar.ml[661,22701+20])
                                                    Texp_ident "Dune__exe!.Positions.value"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/partialGrammar.ml[661,22701+21]..src/partialGrammar.ml[661,22701+25])
                                                        Texp_ident "head/1470"
                                                  ]
                                            ]
                                            expression (src/partialGrammar.ml[663,22793+4]..src/partialGrammar.ml[675,23417+35])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/partialGrammar.ml[663,22793+8]..src/partialGrammar.ml[663,22793+22])
                                                    Tpat_var "is_nonterminal/1473"
                                                  expression (src/partialGrammar.ml[663,22793+25]..src/partialGrammar.ml[663,22793+59])
                                                    Texp_apply
                                                    expression (src/partialGrammar.ml[663,22793+25]..src/partialGrammar.ml[663,22793+38])
                                                      Texp_ident "Dune__exe!.StringMap.mem"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/partialGrammar.ml[663,22793+39]..src/partialGrammar.ml[663,22793+43])
                                                          Texp_ident "head/1472"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/partialGrammar.ml[663,22793+44]..src/partialGrammar.ml[663,22793+59])
                                                          Texp_field
                                                          expression (src/partialGrammar.ml[663,22793+44]..src/partialGrammar.ml[663,22793+51])
                                                            Texp_ident "grammar/1461"
                                                          "p_rules"
                                                    ]
                                                <def>
                                                  pattern (src/partialGrammar.ml[664,22853+8]..src/partialGrammar.ml[664,22853+19])
                                                    Tpat_var "is_terminal/1474"
                                                  expression (src/partialGrammar.ml[664,22853+22]..src/partialGrammar.ml[664,22853+83])
                                                    Texp_apply
                                                    expression (src/partialGrammar.ml[664,22853+58]..src/partialGrammar.ml[664,22853+60])
                                                      Texp_ident "Stdlib!.||"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/partialGrammar.ml[664,22853+22]..src/partialGrammar.ml[664,22853+57])
                                                          Texp_apply
                                                          expression (src/partialGrammar.ml[664,22853+22]..src/partialGrammar.ml[664,22853+35])
                                                            Texp_ident "Dune__exe!.StringMap.mem"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[664,22853+36]..src/partialGrammar.ml[664,22853+40])
                                                                Texp_ident "head/1472"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[664,22853+41]..src/partialGrammar.ml[664,22853+57])
                                                                Texp_field
                                                                expression (src/partialGrammar.ml[664,22853+41]..src/partialGrammar.ml[664,22853+48])
                                                                  Texp_ident "grammar/1461"
                                                                "p_tokens"
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (src/partialGrammar.ml[664,22853+61]..src/partialGrammar.ml[664,22853+83])
                                                          Texp_apply
                                                          expression (src/partialGrammar.ml[664,22853+61]..src/partialGrammar.ml[664,22853+69])
                                                            Texp_ident "Stdlib!.List.mem"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[664,22853+70]..src/partialGrammar.ml[664,22853+74])
                                                                Texp_ident "head/1472"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[664,22853+75]..src/partialGrammar.ml[664,22853+83])
                                                                Texp_ident "reserved/1449"
                                                          ]
                                                    ]
                                              ]
                                              expression (src/partialGrammar.ml[666,22988+4]..src/partialGrammar.ml[675,23417+35])
                                                Texp_sequence
                                                expression (src/partialGrammar.ml[666,22988+4]..src/partialGrammar.ml[668,23078+36])
                                                  Texp_ifthenelse
                                                  expression (src/partialGrammar.ml[666,22988+7]..src/partialGrammar.ml[666,22988+42])
                                                    Texp_apply
                                                    expression (src/partialGrammar.ml[666,22988+7]..src/partialGrammar.ml[666,22988+10])
                                                      Texp_ident "Stdlib!.not"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/partialGrammar.ml[666,22988+11]..src/partialGrammar.ml[666,22988+42])
                                                          Texp_apply
                                                          expression (src/partialGrammar.ml[666,22988+24]..src/partialGrammar.ml[666,22988+26])
                                                            Texp_ident "Stdlib!.||"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[666,22988+12]..src/partialGrammar.ml[666,22988+23])
                                                                Texp_ident "is_terminal/1474"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[666,22988+27]..src/partialGrammar.ml[666,22988+41])
                                                                Texp_ident "is_nonterminal/1473"
                                                          ]
                                                    ]
                                                  expression (src/partialGrammar.ml[667,23036+6]..src/partialGrammar.ml[668,23078+36])
                                                    Texp_apply
                                                    expression (src/partialGrammar.ml[667,23036+6]..src/partialGrammar.ml[667,23036+17])
                                                      Texp_ident "Dune__exe!.Error.error"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/partialGrammar.ml[667,23036+18]..src/partialGrammar.ml[667,23036+41])
                                                          Texp_construct "::"
                                                          [
                                                            expression (src/partialGrammar.ml[667,23036+19]..src/partialGrammar.ml[667,23036+40])
                                                              Texp_apply
                                                              expression (src/partialGrammar.ml[667,23036+19]..src/partialGrammar.ml[667,23036+38])
                                                                Texp_ident "Dune__exe!.Parameters.position"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/partialGrammar.ml[667,23036+39]..src/partialGrammar.ml[667,23036+40])
                                                                    Texp_ident "p/1469"
                                                              ]
                                                            expression (src/partialGrammar.ml[667,23036+40]..src/partialGrammar.ml[667,23036+41]) ghost
                                                              Texp_construct "[]"
                                                              []
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (src/partialGrammar.ml[668,23078+13]..src/partialGrammar.ml[668,23078+31])
                                                          Texp_construct "CamlinternalFormatBasics.Format"
                                                          [
                                                            expression (src/partialGrammar.ml[668,23078+13]..src/partialGrammar.ml[668,23078+31]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.String"
                                                              [
                                                                expression (src/partialGrammar.ml[668,23078+13]..src/partialGrammar.ml[668,23078+31]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                  []
                                                                expression (src/partialGrammar.ml[668,23078+13]..src/partialGrammar.ml[668,23078+31]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                  [
                                                                    expression (src/partialGrammar.ml[668,23078+13]..src/partialGrammar.ml[668,23078+31]) ghost
                                                                      Texp_constant Const_string(" is undefined.",(src/partialGrammar.ml[668,23078+13]..src/partialGrammar.ml[668,23078+31]) ghost,None)
                                                                    expression (src/partialGrammar.ml[668,23078+13]..src/partialGrammar.ml[668,23078+31]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                      []
                                                                  ]
                                                              ]
                                                            expression (src/partialGrammar.ml[668,23078+13]..src/partialGrammar.ml[668,23078+31]) ghost
                                                              Texp_constant Const_string("%s is undefined.",(src/partialGrammar.ml[668,23078+13]..src/partialGrammar.ml[668,23078+31]) ghost,None)
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (src/partialGrammar.ml[668,23078+32]..src/partialGrammar.ml[668,23078+36])
                                                          Texp_ident "head/1472"
                                                    ]
                                                  None
                                                expression (src/partialGrammar.ml[669,23116+4]..src/partialGrammar.ml[675,23417+35])
                                                  Texp_sequence
                                                  expression (src/partialGrammar.ml[669,23116+4]..src/partialGrammar.ml[673,23335+43])
                                                    Texp_ifthenelse
                                                    expression (src/partialGrammar.ml[669,23116+7]..src/partialGrammar.ml[669,23116+50])
                                                      Texp_apply
                                                      expression (src/partialGrammar.ml[669,23116+28]..src/partialGrammar.ml[669,23116+30])
                                                        Texp_ident "Stdlib!.&&"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/partialGrammar.ml[669,23116+8]..src/partialGrammar.ml[669,23116+27])
                                                            Texp_ident "must_be_nonterminal/1468"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/partialGrammar.ml[669,23116+31]..src/partialGrammar.ml[669,23116+49])
                                                            Texp_apply
                                                            expression (src/partialGrammar.ml[669,23116+31]..src/partialGrammar.ml[669,23116+34])
                                                              Texp_ident "Stdlib!.not"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/partialGrammar.ml[669,23116+35]..src/partialGrammar.ml[669,23116+49])
                                                                  Texp_ident "is_nonterminal/1473"
                                                            ]
                                                      ]
                                                    expression (src/partialGrammar.ml[670,23172+6]..src/partialGrammar.ml[673,23335+43])
                                                      Texp_apply
                                                      expression (src/partialGrammar.ml[670,23172+6]..src/partialGrammar.ml[670,23172+17])
                                                        Texp_ident "Dune__exe!.Error.error"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/partialGrammar.ml[670,23172+18]..src/partialGrammar.ml[670,23172+41])
                                                            Texp_construct "::"
                                                            [
                                                              expression (src/partialGrammar.ml[670,23172+19]..src/partialGrammar.ml[670,23172+40])
                                                                Texp_apply
                                                                expression (src/partialGrammar.ml[670,23172+19]..src/partialGrammar.ml[670,23172+38])
                                                                  Texp_ident "Dune__exe!.Parameters.position"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/partialGrammar.ml[670,23172+39]..src/partialGrammar.ml[670,23172+40])
                                                                      Texp_ident "p/1469"
                                                                ]
                                                              expression (src/partialGrammar.ml[670,23172+40]..src/partialGrammar.ml[670,23172+41]) ghost
                                                                Texp_construct "[]"
                                                                []
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/partialGrammar.ml[671,23214+13]..src/partialGrammar.ml[672,23256+78])
                                                            Texp_construct "CamlinternalFormatBasics.Format"
                                                            [
                                                              expression (src/partialGrammar.ml[671,23214+13]..src/partialGrammar.ml[672,23256+78]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.String"
                                                                [
                                                                  expression (src/partialGrammar.ml[671,23214+13]..src/partialGrammar.ml[672,23256+78]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                    []
                                                                  expression (src/partialGrammar.ml[671,23214+13]..src/partialGrammar.ml[672,23256+78]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                    [
                                                                      expression (src/partialGrammar.ml[671,23214+13]..src/partialGrammar.ml[672,23256+78]) ghost
                                                                        Texp_constant Const_string(" is a terminal symbol,\nbut ",(src/partialGrammar.ml[671,23214+13]..src/partialGrammar.ml[672,23256+78]) ghost,None)
                                                                      expression (src/partialGrammar.ml[671,23214+13]..src/partialGrammar.ml[672,23256+78]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.String"
                                                                        [
                                                                          expression (src/partialGrammar.ml[671,23214+13]..src/partialGrammar.ml[672,23256+78]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                            []
                                                                          expression (src/partialGrammar.ml[671,23214+13]..src/partialGrammar.ml[672,23256+78]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                            [
                                                                              expression (src/partialGrammar.ml[671,23214+13]..src/partialGrammar.ml[672,23256+78]) ghost
                                                                                Texp_constant Const_string(" declarations are applicable only to nonterminal symbols.",(src/partialGrammar.ml[671,23214+13]..src/partialGrammar.ml[672,23256+78]) ghost,None)
                                                                              expression (src/partialGrammar.ml[671,23214+13]..src/partialGrammar.ml[672,23256+78]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                []
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                              expression (src/partialGrammar.ml[671,23214+13]..src/partialGrammar.ml[672,23256+78]) ghost
                                                                Texp_constant Const_string("%s is a terminal symbol,\nbut %s declarations are applicable only to nonterminal symbols.",(src/partialGrammar.ml[671,23214+13]..src/partialGrammar.ml[672,23256+78]) ghost,None)
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/partialGrammar.ml[673,23335+13]..src/partialGrammar.ml[673,23335+38])
                                                            Texp_apply
                                                            expression (src/partialGrammar.ml[673,23335+14]..src/partialGrammar.ml[673,23335+30])
                                                              Texp_ident "Dune__exe!.Parameters.print"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/partialGrammar.ml[673,23335+31]..src/partialGrammar.ml[673,23335+35])
                                                                  Texp_construct "true"
                                                                  []
                                                              <arg>
                                                                Nolabel
                                                                expression (src/partialGrammar.ml[673,23335+36]..src/partialGrammar.ml[673,23335+37])
                                                                  Texp_ident "p/1469"
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/partialGrammar.ml[673,23335+39]..src/partialGrammar.ml[673,23335+43])
                                                            Texp_ident "kind/1467"
                                                      ]
                                                    None
                                                  expression (src/partialGrammar.ml[675,23417+4]..src/partialGrammar.ml[675,23417+35])
                                                    Texp_apply
                                                    expression (src/partialGrammar.ml[675,23417+4]..src/partialGrammar.ml[675,23417+13])
                                                      Texp_ident "Stdlib!.List.iter"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/partialGrammar.ml[675,23417+14]..src/partialGrammar.ml[675,23417+32])
                                                          Texp_apply
                                                          expression (src/partialGrammar.ml[675,23417+15]..src/partialGrammar.ml[675,23417+20])
                                                            Texp_ident "check/1466"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[675,23417+21]..src/partialGrammar.ml[675,23417+25])
                                                                Texp_ident "kind/1467"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[675,23417+26]..src/partialGrammar.ml[675,23417+31])
                                                                Texp_construct "false"
                                                                []
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (src/partialGrammar.ml[675,23417+33]..src/partialGrammar.ml[675,23417+35])
                                                          Texp_ident "ps/1471"
                                                    ]
                                    ]
                              ]
                        ]
                  ]
                  expression (src/partialGrammar.ml[678,23459+2]..src/partialGrammar.ml[767,26752+5])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/partialGrammar.ml[678,23459+6]..src/partialGrammar.ml[678,23459+15])
                          Tpat_var "check_fst/1475"
                        expression (src/partialGrammar.ml[678,23459+16]..src/partialGrammar.ml[679,23509+36]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/partialGrammar.ml[678,23459+16]..src/partialGrammar.ml[678,23459+20])
                                Tpat_var "kind/1477"
                              expression (src/partialGrammar.ml[678,23459+21]..src/partialGrammar.ml[679,23509+36]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/partialGrammar.ml[678,23459+21]..src/partialGrammar.ml[678,23459+40])
                                      Tpat_var "must_be_nonterminal/1478"
                                    expression (src/partialGrammar.ml[678,23459+41]..src/partialGrammar.ml[679,23509+36]) ghost
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (src/partialGrammar.ml[678,23459+41]..src/partialGrammar.ml[678,23459+47])
                                            Tpat_tuple
                                            [
                                              pattern (src/partialGrammar.ml[678,23459+42]..src/partialGrammar.ml[678,23459+43])
                                                Tpat_var "p/1479"
                                              pattern (src/partialGrammar.ml[678,23459+45]..src/partialGrammar.ml[678,23459+46])
                                                Tpat_any
                                            ]
                                          expression (src/partialGrammar.ml[679,23509+4]..src/partialGrammar.ml[679,23509+36])
                                            Texp_apply
                                            expression (src/partialGrammar.ml[679,23509+4]..src/partialGrammar.ml[679,23509+9])
                                              Texp_ident "check/1466"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/partialGrammar.ml[679,23509+10]..src/partialGrammar.ml[679,23509+14])
                                                  Texp_ident "kind/1477"
                                              <arg>
                                                Nolabel
                                                expression (src/partialGrammar.ml[679,23509+15]..src/partialGrammar.ml[679,23509+34])
                                                  Texp_ident "must_be_nonterminal/1478"
                                              <arg>
                                                Nolabel
                                                expression (src/partialGrammar.ml[679,23509+35]..src/partialGrammar.ml[679,23509+36])
                                                  Texp_ident "p/1479"
                                            ]
                                      ]
                                ]
                          ]
                    ]
                    expression (src/partialGrammar.ml[682,23552+2]..src/partialGrammar.ml[767,26752+5])
                      Texp_sequence
                      expression (src/partialGrammar.ml[682,23552+2]..src/partialGrammar.ml[682,23552+52])
                        Texp_apply
                        expression (src/partialGrammar.ml[682,23552+2]..src/partialGrammar.ml[682,23552+11])
                          Texp_ident "Stdlib!.List.iter"
                        [
                          <arg>
                            Nolabel
                            expression (src/partialGrammar.ml[682,23552+12]..src/partialGrammar.ml[682,23552+36])
                              Texp_apply
                              expression (src/partialGrammar.ml[682,23552+13]..src/partialGrammar.ml[682,23552+22])
                                Texp_ident "check_fst/1475"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/partialGrammar.ml[682,23552+23]..src/partialGrammar.ml[682,23552+30])
                                    Texp_constant Const_string("%type",(src/partialGrammar.ml[682,23552+24]..src/partialGrammar.ml[682,23552+29]),None)
                                <arg>
                                  Nolabel
                                  expression (src/partialGrammar.ml[682,23552+31]..src/partialGrammar.ml[682,23552+35])
                                    Texp_construct "true"
                                    []
                              ]
                          <arg>
                            Nolabel
                            expression (src/partialGrammar.ml[682,23552+37]..src/partialGrammar.ml[682,23552+52])
                              Texp_field
                              expression (src/partialGrammar.ml[682,23552+37]..src/partialGrammar.ml[682,23552+44])
                                Texp_ident "grammar/1461"
                              "p_types"
                        ]
                      expression (src/partialGrammar.ml[683,23606+2]..src/partialGrammar.ml[767,26752+5])
                        Texp_sequence
                        expression (src/partialGrammar.ml[683,23606+2]..src/partialGrammar.ml[683,23606+73])
                          Texp_apply
                          expression (src/partialGrammar.ml[683,23606+2]..src/partialGrammar.ml[683,23606+11])
                            Texp_ident "Stdlib!.List.iter"
                          [
                            <arg>
                              Nolabel
                              expression (src/partialGrammar.ml[683,23606+12]..src/partialGrammar.ml[683,23606+47])
                                Texp_apply
                                expression (src/partialGrammar.ml[683,23606+13]..src/partialGrammar.ml[683,23606+22])
                                  Texp_ident "check_fst/1475"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/partialGrammar.ml[683,23606+23]..src/partialGrammar.ml[683,23606+41])
                                      Texp_constant Const_string("%on_error_reduce",(src/partialGrammar.ml[683,23606+24]..src/partialGrammar.ml[683,23606+40]),None)
                                  <arg>
                                    Nolabel
                                    expression (src/partialGrammar.ml[683,23606+42]..src/partialGrammar.ml[683,23606+46])
                                      Texp_construct "true"
                                      []
                                ]
                            <arg>
                              Nolabel
                              expression (src/partialGrammar.ml[683,23606+48]..src/partialGrammar.ml[683,23606+73])
                                Texp_field
                                expression (src/partialGrammar.ml[683,23606+48]..src/partialGrammar.ml[683,23606+55])
                                  Texp_ident "grammar/1461"
                                "p_on_error_reduce"
                          ]
                        expression (src/partialGrammar.ml[684,23681+2]..src/partialGrammar.ml[767,26752+5])
                          Texp_sequence
                          expression (src/partialGrammar.ml[684,23681+2]..src/partialGrammar.ml[686,23761+31])
                            Texp_apply
                            expression (src/partialGrammar.ml[684,23681+2]..src/partialGrammar.ml[684,23681+11])
                              Texp_ident "Stdlib!.List.iter"
                            [
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[684,23681+12]..src/partialGrammar.ml[686,23761+3])
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/partialGrammar.ml[684,23681+17]..src/partialGrammar.ml[684,23681+28])
                                        Tpat_tuple
                                        [
                                          pattern (src/partialGrammar.ml[684,23681+18]..src/partialGrammar.ml[684,23681+24])
                                            Tpat_var "params/1481"
                                          pattern (src/partialGrammar.ml[684,23681+26]..src/partialGrammar.ml[684,23681+27])
                                            Tpat_any
                                        ]
                                      expression (src/partialGrammar.ml[685,23713+4]..src/partialGrammar.ml[685,23713+47])
                                        Texp_apply
                                        expression (src/partialGrammar.ml[685,23713+4]..src/partialGrammar.ml[685,23713+13])
                                          Texp_ident "Stdlib!.List.iter"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/partialGrammar.ml[685,23713+14]..src/partialGrammar.ml[685,23713+40])
                                              Texp_apply
                                              expression (src/partialGrammar.ml[685,23713+15]..src/partialGrammar.ml[685,23713+20])
                                                Texp_ident "check/1466"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/partialGrammar.ml[685,23713+21]..src/partialGrammar.ml[685,23713+33])
                                                    Texp_constant Const_string("%attribute",(src/partialGrammar.ml[685,23713+22]..src/partialGrammar.ml[685,23713+32]),None)
                                                <arg>
                                                  Nolabel
                                                  expression (src/partialGrammar.ml[685,23713+34]..src/partialGrammar.ml[685,23713+39])
                                                    Texp_construct "false"
                                                    []
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/partialGrammar.ml[685,23713+41]..src/partialGrammar.ml[685,23713+47])
                                              Texp_ident "params/1481"
                                        ]
                                  ]
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[686,23761+4]..src/partialGrammar.ml[686,23761+31])
                                  Texp_field
                                  expression (src/partialGrammar.ml[686,23761+4]..src/partialGrammar.ml[686,23761+11])
                                    Texp_ident "grammar/1461"
                                  "p_symbol_attributes"
                            ]
                          expression (src/partialGrammar.ml[689,23848+2]..src/partialGrammar.ml[767,26752+5])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/partialGrammar.ml[689,23848+6]..src/partialGrammar.ml[689,23848+17])
                                  Tpat_var "used_tokens/1483"
                                expression (src/partialGrammar.ml[689,23848+20]..src/partialGrammar.ml[689,23848+39])
                                  Texp_apply
                                  expression (src/partialGrammar.ml[689,23848+20]..src/partialGrammar.ml[689,23848+23])
                                    Texp_ident "Stdlib!.ref"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[689,23848+24]..src/partialGrammar.ml[689,23848+39])
                                        Texp_ident "Dune__exe!.StringSet.empty"
                                  ]
                            ]
                            expression (src/partialGrammar.ml[690,23891+2]..src/partialGrammar.ml[767,26752+5])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/partialGrammar.ml[690,23891+6]..src/partialGrammar.ml[690,23891+24])
                                    Tpat_var "mark_token_as_used/1484"
                                  expression (src/partialGrammar.ml[690,23891+25]..src/partialGrammar.ml[691,23924+51]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/partialGrammar.ml[690,23891+25]..src/partialGrammar.ml[690,23891+30])
                                          Tpat_var "token/1486"
                                        expression (src/partialGrammar.ml[691,23924+4]..src/partialGrammar.ml[691,23924+51])
                                          Texp_apply
                                          expression (src/partialGrammar.ml[691,23924+16]..src/partialGrammar.ml[691,23924+18])
                                            Texp_ident "Stdlib!.:="
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/partialGrammar.ml[691,23924+4]..src/partialGrammar.ml[691,23924+15])
                                                Texp_ident "used_tokens/1483"
                                            <arg>
                                              Nolabel
                                              expression (src/partialGrammar.ml[691,23924+19]..src/partialGrammar.ml[691,23924+51])
                                                Texp_apply
                                                expression (src/partialGrammar.ml[691,23924+19]..src/partialGrammar.ml[691,23924+32])
                                                  Texp_ident "Dune__exe!.StringSet.add"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/partialGrammar.ml[691,23924+33]..src/partialGrammar.ml[691,23924+38])
                                                      Texp_ident "token/1486"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/partialGrammar.ml[691,23924+39]..src/partialGrammar.ml[691,23924+51])
                                                      Texp_apply
                                                      expression (src/partialGrammar.ml[691,23924+39]..src/partialGrammar.ml[691,23924+40])
                                                        Texp_ident "Stdlib!.!"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/partialGrammar.ml[691,23924+40]..src/partialGrammar.ml[691,23924+51])
                                                            Texp_ident "used_tokens/1483"
                                                      ]
                                                ]
                                          ]
                                    ]
                              ]
                              expression (src/partialGrammar.ml[693,23981+4]..src/partialGrammar.ml[767,26752+5])
                                Texp_sequence
                                expression (src/partialGrammar.ml[693,23981+4]..src/partialGrammar.ml[752,26202+23])
                                  Texp_apply
                                  expression (src/partialGrammar.ml[693,23981+4]..src/partialGrammar.ml[693,23981+18])
                                    Texp_ident "Dune__exe!.StringMap.iter"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[694,24000+6]..src/partialGrammar.ml[752,26202+7])
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/partialGrammar.ml[694,24000+11]..src/partialGrammar.ml[694,24000+12])
                                              Tpat_var "k/1487"
                                            expression (src/partialGrammar.ml[694,24000+13]..src/partialGrammar.ml[750,26163+37]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/partialGrammar.ml[694,24000+13]..src/partialGrammar.ml[694,24000+18])
                                                    Tpat_var "prule/1488"
                                                  expression (src/partialGrammar.ml[696,24023+9]..src/partialGrammar.ml[750,26163+37])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (src/partialGrammar.ml[696,24023+13]..src/partialGrammar.ml[696,24023+39])
                                                          Tpat_var "check_identifier_reference/1489"
                                                        expression (src/partialGrammar.ml[697,24065+11]..src/partialGrammar.ml[698,24103+45])
                                                          Texp_apply
                                                          expression (src/partialGrammar.ml[697,24065+11]..src/partialGrammar.ml[697,24065+37])
                                                            Texp_ident "check_identifier_reference/1450"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[698,24103+13]..src/partialGrammar.ml[698,24103+31])
                                                                Texp_ident "mark_token_as_used/1484"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[698,24103+32]..src/partialGrammar.ml[698,24103+39])
                                                                Texp_ident "grammar/1461"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[698,24103+40]..src/partialGrammar.ml[698,24103+45])
                                                                Texp_ident "prule/1488"
                                                          ]
                                                    ]
                                                    expression (src/partialGrammar.ml[702,24238+9]..src/partialGrammar.ml[750,26163+37])
                                                      Texp_sequence
                                                      expression (src/partialGrammar.ml[702,24238+9]..src/partialGrammar.ml[708,24485+15])
                                                        Texp_apply
                                                        expression (src/partialGrammar.ml[705,24330+14]..src/partialGrammar.ml[708,24485+15])
                                                          Texp_apply
                                                          expression (src/partialGrammar.ml[705,24330+14]..src/partialGrammar.ml[705,24330+25])
                                                            Texp_ident "Dune__exe!.Option.iter"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[705,24330+26]..src/partialGrammar.ml[708,24485+15])
                                                                Texp_function
                                                                Nolabel
                                                                [
                                                                  <case>
                                                                    pattern (src/partialGrammar.ml[705,24330+31]..src/partialGrammar.ml[705,24330+32])
                                                                      Tpat_var "x/1501"
                                                                    expression (src/partialGrammar.ml[706,24366+16]..src/partialGrammar.ml[707,24413+71])
                                                                      Texp_apply
                                                                      expression (src/partialGrammar.ml[706,24366+16]..src/partialGrammar.ml[706,24366+27])
                                                                        Texp_ident "Dune__exe!.Error.error"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/partialGrammar.ml[706,24366+28]..src/partialGrammar.ml[706,24366+46])
                                                                            Texp_field
                                                                            expression (src/partialGrammar.ml[706,24366+28]..src/partialGrammar.ml[706,24366+33])
                                                                              Texp_ident "prule/1488"
                                                                            "pr_positions"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/partialGrammar.ml[707,24413+18]..src/partialGrammar.ml[707,24413+69])
                                                                            Texp_construct "CamlinternalFormatBasics.Format"
                                                                            [
                                                                              expression (src/partialGrammar.ml[707,24413+18]..src/partialGrammar.ml[707,24413+69]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                [
                                                                                  expression (src/partialGrammar.ml[707,24413+18]..src/partialGrammar.ml[707,24413+69]) ghost
                                                                                    Texp_constant Const_string("several parameters of this rule are named \"",(src/partialGrammar.ml[707,24413+18]..src/partialGrammar.ml[707,24413+69]) ghost,None)
                                                                                  expression (src/partialGrammar.ml[707,24413+18]..src/partialGrammar.ml[707,24413+69]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.String"
                                                                                    [
                                                                                      expression (src/partialGrammar.ml[707,24413+18]..src/partialGrammar.ml[707,24413+69]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                        []
                                                                                      expression (src/partialGrammar.ml[707,24413+18]..src/partialGrammar.ml[707,24413+69]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                        [
                                                                                          expression (src/partialGrammar.ml[707,24413+18]..src/partialGrammar.ml[707,24413+69]) ghost
                                                                                            Texp_constant Const_string("\".",(src/partialGrammar.ml[707,24413+18]..src/partialGrammar.ml[707,24413+69]) ghost,None)
                                                                                          expression (src/partialGrammar.ml[707,24413+18]..src/partialGrammar.ml[707,24413+69]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                            []
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                              expression (src/partialGrammar.ml[707,24413+18]..src/partialGrammar.ml[707,24413+69]) ghost
                                                                                Texp_constant Const_string("several parameters of this rule are named \"%s\".",(src/partialGrammar.ml[707,24413+18]..src/partialGrammar.ml[707,24413+69]) ghost,None)
                                                                            ]
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/partialGrammar.ml[707,24413+70]..src/partialGrammar.ml[707,24413+71])
                                                                            Texp_ident "x/1501"
                                                                      ]
                                                                ]
                                                          ]
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/partialGrammar.ml[702,24238+9]..src/partialGrammar.ml[704,24299+30])
                                                              Texp_apply
                                                              expression (src/partialGrammar.ml[704,24299+14]..src/partialGrammar.ml[704,24299+30])
                                                                Texp_apply
                                                                expression (src/partialGrammar.ml[704,24299+14]..src/partialGrammar.ml[704,24299+22])
                                                                  Texp_ident "Dune__exe!.Misc.dup"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/partialGrammar.ml[704,24299+23]..src/partialGrammar.ml[704,24299+30])
                                                                      Texp_ident "Stdlib!.compare"
                                                                ]
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/partialGrammar.ml[702,24238+9]..src/partialGrammar.ml[703,24267+31])
                                                                    Texp_apply
                                                                    expression (src/partialGrammar.ml[703,24267+14]..src/partialGrammar.ml[703,24267+31])
                                                                      Texp_apply
                                                                      expression (src/partialGrammar.ml[703,24267+14]..src/partialGrammar.ml[703,24267+23])
                                                                        Texp_ident "Stdlib!.List.sort"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/partialGrammar.ml[703,24267+24]..src/partialGrammar.ml[703,24267+31])
                                                                            Texp_ident "Stdlib!.compare"
                                                                      ]
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/partialGrammar.ml[702,24238+9]..src/partialGrammar.ml[702,24238+28])
                                                                          Texp_field
                                                                          expression (src/partialGrammar.ml[702,24238+9]..src/partialGrammar.ml[702,24238+14])
                                                                            Texp_ident "prule/1488"
                                                                          "pr_parameters"
                                                                    ]
                                                              ]
                                                        ]
                                                      expression (src/partialGrammar.ml[711,24537+9]..src/partialGrammar.ml[750,26163+37])
                                                        Texp_sequence
                                                        expression (src/partialGrammar.ml[711,24537+9]..src/partialGrammar.ml[741,25781+26])
                                                          Texp_apply
                                                          expression (src/partialGrammar.ml[711,24537+9]..src/partialGrammar.ml[711,24537+18])
                                                            Texp_ident "Stdlib!.List.iter"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[711,24537+19]..src/partialGrammar.ml[739,25740+39])
                                                                Texp_function
                                                                Nolabel
                                                                [
                                                                  <case>
                                                                    pattern (src/partialGrammar.ml[711,24537+24]..src/partialGrammar.ml[713,24632+15])
                                                                      Tpat_record
                                                                      [
                                                                        "pr_producers"
                                                                          pattern (src/partialGrammar.ml[711,24537+41]..src/partialGrammar.ml[711,24537+50])
                                                                            Tpat_var "producers/1502"
                                                                        "pr_branch_prec_annotation"
                                                                          pattern (src/partialGrammar.ml[712,24589+16]..src/partialGrammar.ml[712,24589+41])
                                                                            Tpat_var "pr_branch_prec_annotation/1503"
                                                                      ]
                                                                    expression (src/partialGrammar.ml[713,24632+19]..src/partialGrammar.ml[739,25740+38])
                                                                      Texp_sequence
                                                                      expression (src/partialGrammar.ml[713,24632+19]..src/partialGrammar.ml[735,25579+40])
                                                                        Texp_apply
                                                                        expression (src/partialGrammar.ml[713,24632+19]..src/partialGrammar.ml[713,24632+25])
                                                                          Texp_ident "Stdlib!.ignore"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/partialGrammar.ml[713,24632+26]..src/partialGrammar.ml[735,25579+40])
                                                                              Texp_apply
                                                                              expression (src/partialGrammar.ml[713,24632+27]..src/partialGrammar.ml[713,24632+41])
                                                                                Texp_ident "Stdlib!.List.fold_left"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/partialGrammar.ml[716,24714+12]..src/partialGrammar.ml[735,25579+13])
                                                                                    Texp_function
                                                                                    Nolabel
                                                                                    [
                                                                                      <case>
                                                                                        pattern (src/partialGrammar.ml[716,24714+17]..src/partialGrammar.ml[716,24714+29])
                                                                                          Tpat_var "already_seen/1504"
                                                                                        expression (src/partialGrammar.ml[716,24714+30]..src/partialGrammar.ml[733,25548+29]) ghost
                                                                                          Texp_function
                                                                                          Nolabel
                                                                                          [
                                                                                            <case>
                                                                                              pattern (src/partialGrammar.ml[716,24714+30]..src/partialGrammar.ml[716,24714+40])
                                                                                                Tpat_tuple
                                                                                                [
                                                                                                  pattern (src/partialGrammar.ml[716,24714+31]..src/partialGrammar.ml[716,24714+33])
                                                                                                    Tpat_var "id/1505"
                                                                                                  pattern (src/partialGrammar.ml[716,24714+35]..src/partialGrammar.ml[716,24714+36])
                                                                                                    Tpat_var "p/1506"
                                                                                                  pattern (src/partialGrammar.ml[716,24714+38]..src/partialGrammar.ml[716,24714+39])
                                                                                                    Tpat_any
                                                                                                ]
                                                                                              expression (src/partialGrammar.ml[717,24758+15]..src/partialGrammar.ml[733,25548+29])
                                                                                                Texp_let Nonrec
                                                                                                [
                                                                                                  <def>
                                                                                                    pattern (src/partialGrammar.ml[717,24758+19]..src/partialGrammar.ml[717,24758+37])
                                                                                                      Tpat_tuple
                                                                                                      [
                                                                                                        pattern (src/partialGrammar.ml[717,24758+19]..src/partialGrammar.ml[717,24758+25])
                                                                                                          Tpat_var "symbol/1507"
                                                                                                        pattern (src/partialGrammar.ml[717,24758+27]..src/partialGrammar.ml[717,24758+37])
                                                                                                          Tpat_var "parameters/1508"
                                                                                                      ]
                                                                                                    expression (src/partialGrammar.ml[717,24758+40]..src/partialGrammar.ml[717,24758+58])
                                                                                                      Texp_apply
                                                                                                      expression (src/partialGrammar.ml[717,24758+40]..src/partialGrammar.ml[717,24758+56])
                                                                                                        Texp_ident "Dune__exe!.Parameters.unapp"
                                                                                                      [
                                                                                                        <arg>
                                                                                                          Nolabel
                                                                                                          expression (src/partialGrammar.ml[717,24758+57]..src/partialGrammar.ml[717,24758+58])
                                                                                                            Texp_ident "p/1506"
                                                                                                      ]
                                                                                                ]
                                                                                                expression (src/partialGrammar.ml[718,24820+15]..src/partialGrammar.ml[733,25548+29])
                                                                                                  Texp_let Nonrec
                                                                                                  [
                                                                                                    <def>
                                                                                                      pattern (src/partialGrammar.ml[718,24820+19]..src/partialGrammar.ml[718,24820+20])
                                                                                                        Tpat_var "s/1509"
                                                                                                      expression (src/partialGrammar.ml[718,24820+23]..src/partialGrammar.ml[718,24820+35])
                                                                                                        Texp_field
                                                                                                        expression (src/partialGrammar.ml[718,24820+23]..src/partialGrammar.ml[718,24820+29])
                                                                                                          Texp_ident "symbol/1507"
                                                                                                        "value"
                                                                                                    <def>
                                                                                                      pattern (src/partialGrammar.ml[718,24820+40]..src/partialGrammar.ml[718,24820+41])
                                                                                                        Tpat_var "p/1510"
                                                                                                      expression (src/partialGrammar.ml[718,24820+44]..src/partialGrammar.ml[718,24820+59])
                                                                                                        Texp_field
                                                                                                        expression (src/partialGrammar.ml[718,24820+44]..src/partialGrammar.ml[718,24820+50])
                                                                                                          Texp_ident "symbol/1507"
                                                                                                        "position"
                                                                                                  ]
                                                                                                  expression (src/partialGrammar.ml[719,24883+15]..src/partialGrammar.ml[733,25548+29])
                                                                                                    Texp_let Nonrec
                                                                                                    [
                                                                                                      <def>
                                                                                                        pattern (src/partialGrammar.ml[719,24883+19]..src/partialGrammar.ml[719,24883+31])
                                                                                                          Tpat_var "already_seen/1511"
                                                                                                        expression (src/partialGrammar.ml[721,24973+17]..src/partialGrammar.ml[725,25197+52])
                                                                                                          Texp_sequence
                                                                                                          expression (src/partialGrammar.ml[721,24973+17]..src/partialGrammar.ml[724,25163+32])
                                                                                                            Texp_ifthenelse
                                                                                                            expression (src/partialGrammar.ml[721,24973+20]..src/partialGrammar.ml[721,24973+55])
                                                                                                              Texp_apply
                                                                                                              expression (src/partialGrammar.ml[721,24973+20]..src/partialGrammar.ml[721,24973+33])
                                                                                                                Texp_ident "Dune__exe!.StringSet.mem"
                                                                                                              [
                                                                                                                <arg>
                                                                                                                  Nolabel
                                                                                                                  expression (src/partialGrammar.ml[721,24973+34]..src/partialGrammar.ml[721,24973+42])
                                                                                                                    Texp_field
                                                                                                                    expression (src/partialGrammar.ml[721,24973+34]..src/partialGrammar.ml[721,24973+36])
                                                                                                                      Texp_ident "id/1505"
                                                                                                                    "value"
                                                                                                                <arg>
                                                                                                                  Nolabel
                                                                                                                  expression (src/partialGrammar.ml[721,24973+43]..src/partialGrammar.ml[721,24973+55])
                                                                                                                    Texp_ident "already_seen/1504"
                                                                                                              ]
                                                                                                            expression (src/partialGrammar.ml[722,25034+19]..src/partialGrammar.ml[724,25163+32])
                                                                                                              Texp_apply
                                                                                                              expression (src/partialGrammar.ml[722,25034+19]..src/partialGrammar.ml[722,25034+30])
                                                                                                                Texp_ident "Dune__exe!.Error.error"
                                                                                                              [
                                                                                                                <arg>
                                                                                                                  Nolabel
                                                                                                                  expression (src/partialGrammar.ml[722,25034+31]..src/partialGrammar.ml[722,25034+46])
                                                                                                                    Texp_construct "::"
                                                                                                                    [
                                                                                                                      expression (src/partialGrammar.ml[722,25034+33]..src/partialGrammar.ml[722,25034+44])
                                                                                                                        Texp_field
                                                                                                                        expression (src/partialGrammar.ml[722,25034+33]..src/partialGrammar.ml[722,25034+35])
                                                                                                                          Texp_ident "id/1505"
                                                                                                                        "position"
                                                                                                                      expression (src/partialGrammar.ml[722,25034+45]..src/partialGrammar.ml[722,25034+46]) ghost
                                                                                                                        Texp_construct "[]"
                                                                                                                        []
                                                                                                                    ]
                                                                                                                <arg>
                                                                                                                  Nolabel
                                                                                                                  expression (src/partialGrammar.ml[723,25081+24]..src/partialGrammar.ml[723,25081+81])
                                                                                                                    Texp_construct "CamlinternalFormatBasics.Format"
                                                                                                                    [
                                                                                                                      expression (src/partialGrammar.ml[723,25081+24]..src/partialGrammar.ml[723,25081+81]) ghost
                                                                                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                                        [
                                                                                                                          expression (src/partialGrammar.ml[723,25081+24]..src/partialGrammar.ml[723,25081+81]) ghost
                                                                                                                            Texp_constant Const_string("there are multiple producers named ",(src/partialGrammar.ml[723,25081+24]..src/partialGrammar.ml[723,25081+81]) ghost,None)
                                                                                                                          expression (src/partialGrammar.ml[723,25081+24]..src/partialGrammar.ml[723,25081+81]) ghost
                                                                                                                            Texp_construct "CamlinternalFormatBasics.String"
                                                                                                                            [
                                                                                                                              expression (src/partialGrammar.ml[723,25081+24]..src/partialGrammar.ml[723,25081+81]) ghost
                                                                                                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                                                []
                                                                                                                              expression (src/partialGrammar.ml[723,25081+24]..src/partialGrammar.ml[723,25081+81]) ghost
                                                                                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                                                [
                                                                                                                                  expression (src/partialGrammar.ml[723,25081+24]..src/partialGrammar.ml[723,25081+81]) ghost
                                                                                                                                    Texp_constant Const_string(" in this sequence.",(src/partialGrammar.ml[723,25081+24]..src/partialGrammar.ml[723,25081+81]) ghost,None)
                                                                                                                                  expression (src/partialGrammar.ml[723,25081+24]..src/partialGrammar.ml[723,25081+81]) ghost
                                                                                                                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                                                    []
                                                                                                                                ]
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                      expression (src/partialGrammar.ml[723,25081+24]..src/partialGrammar.ml[723,25081+81]) ghost
                                                                                                                        Texp_constant Const_string("there are multiple producers named %s in this sequence.",(src/partialGrammar.ml[723,25081+24]..src/partialGrammar.ml[723,25081+81]) ghost,None)
                                                                                                                    ]
                                                                                                                <arg>
                                                                                                                  Nolabel
                                                                                                                  expression (src/partialGrammar.ml[724,25163+24]..src/partialGrammar.ml[724,25163+32])
                                                                                                                    Texp_field
                                                                                                                    expression (src/partialGrammar.ml[724,25163+24]..src/partialGrammar.ml[724,25163+26])
                                                                                                                      Texp_ident "id/1505"
                                                                                                                    "value"
                                                                                                              ]
                                                                                                            None
                                                                                                          expression (src/partialGrammar.ml[725,25197+17]..src/partialGrammar.ml[725,25197+52])
                                                                                                            Texp_apply
                                                                                                            expression (src/partialGrammar.ml[725,25197+17]..src/partialGrammar.ml[725,25197+30])
                                                                                                              Texp_ident "Dune__exe!.StringSet.add"
                                                                                                            [
                                                                                                              <arg>
                                                                                                                Nolabel
                                                                                                                expression (src/partialGrammar.ml[725,25197+31]..src/partialGrammar.ml[725,25197+39])
                                                                                                                  Texp_field
                                                                                                                  expression (src/partialGrammar.ml[725,25197+31]..src/partialGrammar.ml[725,25197+33])
                                                                                                                    Texp_ident "id/1505"
                                                                                                                  "value"
                                                                                                              <arg>
                                                                                                                Nolabel
                                                                                                                expression (src/partialGrammar.ml[725,25197+40]..src/partialGrammar.ml[725,25197+52])
                                                                                                                  Texp_ident "already_seen/1504"
                                                                                                            ]
                                                                                                    ]
                                                                                                    expression (src/partialGrammar.ml[729,25338+17]..src/partialGrammar.ml[733,25548+29])
                                                                                                      Texp_sequence
                                                                                                      expression (src/partialGrammar.ml[729,25338+17]..src/partialGrammar.ml[729,25338+53])
                                                                                                        Texp_apply
                                                                                                        expression (src/partialGrammar.ml[729,25338+17]..src/partialGrammar.ml[729,25338+43])
                                                                                                          Texp_ident "check_identifier_reference/1489"
                                                                                                        [
                                                                                                          <arg>
                                                                                                            Nolabel
                                                                                                            expression (src/partialGrammar.ml[729,25338+44]..src/partialGrammar.ml[729,25338+49])
                                                                                                              Texp_construct "false"
                                                                                                              []
                                                                                                          <arg>
                                                                                                            Nolabel
                                                                                                            expression (src/partialGrammar.ml[729,25338+50]..src/partialGrammar.ml[729,25338+51])
                                                                                                              Texp_ident "s/1509"
                                                                                                          <arg>
                                                                                                            Nolabel
                                                                                                            expression (src/partialGrammar.ml[729,25338+52]..src/partialGrammar.ml[729,25338+53])
                                                                                                              Texp_ident "p/1510"
                                                                                                        ]
                                                                                                      expression (src/partialGrammar.ml[730,25393+17]..src/partialGrammar.ml[733,25548+29])
                                                                                                        Texp_sequence
                                                                                                        expression (src/partialGrammar.ml[730,25393+17]..src/partialGrammar.ml[731,25460+85])
                                                                                                          Texp_apply
                                                                                                          expression (src/partialGrammar.ml[730,25393+17]..src/partialGrammar.ml[730,25393+31])
                                                                                                            Texp_ident "Dune__exe!.StringMap.iter"
                                                                                                          [
                                                                                                            <arg>
                                                                                                              Nolabel
                                                                                                              expression (src/partialGrammar.ml[730,25393+32]..src/partialGrammar.ml[730,25393+66])
                                                                                                                Texp_apply
                                                                                                                expression (src/partialGrammar.ml[730,25393+33]..src/partialGrammar.ml[730,25393+59])
                                                                                                                  Texp_ident "check_identifier_reference/1489"
                                                                                                                [
                                                                                                                  <arg>
                                                                                                                    Nolabel
                                                                                                                    expression (src/partialGrammar.ml[730,25393+60]..src/partialGrammar.ml[730,25393+65])
                                                                                                                      Texp_construct "false"
                                                                                                                      []
                                                                                                                ]
                                                                                                            <arg>
                                                                                                              Nolabel
                                                                                                              expression (src/partialGrammar.ml[731,25460+19]..src/partialGrammar.ml[731,25460+85])
                                                                                                                Texp_apply
                                                                                                                expression (src/partialGrammar.ml[731,25460+20]..src/partialGrammar.ml[731,25460+34])
                                                                                                                  Texp_ident "Stdlib!.List.fold_left"
                                                                                                                [
                                                                                                                  <arg>
                                                                                                                    Nolabel
                                                                                                                    expression (src/partialGrammar.ml[731,25460+35]..src/partialGrammar.ml[731,25460+57])
                                                                                                                      Texp_ident "Dune__exe!.Parameters.identifiers"
                                                                                                                  <arg>
                                                                                                                    Nolabel
                                                                                                                    expression (src/partialGrammar.ml[731,25460+58]..src/partialGrammar.ml[731,25460+73])
                                                                                                                      Texp_ident "Dune__exe!.StringMap.empty"
                                                                                                                  <arg>
                                                                                                                    Nolabel
                                                                                                                    expression (src/partialGrammar.ml[731,25460+74]..src/partialGrammar.ml[731,25460+84])
                                                                                                                      Texp_ident "parameters/1508"
                                                                                                                ]
                                                                                                          ]
                                                                                                        expression (src/partialGrammar.ml[733,25548+17]..src/partialGrammar.ml[733,25548+29])
                                                                                                          Texp_ident "already_seen/1511"
                                                                                          ]
                                                                                    ]
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/partialGrammar.ml[735,25579+14]..src/partialGrammar.ml[735,25579+29])
                                                                                    Texp_ident "Dune__exe!.StringSet.empty"
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/partialGrammar.ml[735,25579+30]..src/partialGrammar.ml[735,25579+39])
                                                                                    Texp_ident "producers/1502"
                                                                              ]
                                                                        ]
                                                                      expression (src/partialGrammar.ml[737,25622+11]..src/partialGrammar.ml[739,25740+38])
                                                                        Texp_apply
                                                                        expression (src/partialGrammar.ml[737,25622+11]..src/partialGrammar.ml[737,25622+22])
                                                                          Texp_ident "Dune__exe!.Option.iter"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/partialGrammar.ml[737,25622+23]..src/partialGrammar.ml[739,25740+12])
                                                                              Texp_function
                                                                              Nolabel
                                                                              [
                                                                                <case>
                                                                                  pattern (src/partialGrammar.ml[737,25622+28]..src/partialGrammar.ml[737,25622+36])
                                                                                    Tpat_var "terminal/1513"
                                                                                  expression (src/partialGrammar.ml[738,25662+13]..src/partialGrammar.ml[738,25662+77])
                                                                                    Texp_apply
                                                                                    expression (src/partialGrammar.ml[738,25662+13]..src/partialGrammar.ml[738,25662+39])
                                                                                      Texp_ident "check_identifier_reference/1489"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/partialGrammar.ml[738,25662+40]..src/partialGrammar.ml[738,25662+44])
                                                                                          Texp_construct "true"
                                                                                          []
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/partialGrammar.ml[738,25662+45]..src/partialGrammar.ml[738,25662+59])
                                                                                          Texp_field
                                                                                          expression (src/partialGrammar.ml[738,25662+45]..src/partialGrammar.ml[738,25662+53])
                                                                                            Texp_ident "terminal/1513"
                                                                                          "value"
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/partialGrammar.ml[738,25662+60]..src/partialGrammar.ml[738,25662+77])
                                                                                          Texp_field
                                                                                          expression (src/partialGrammar.ml[738,25662+60]..src/partialGrammar.ml[738,25662+68])
                                                                                            Texp_ident "terminal/1513"
                                                                                          "position"
                                                                                    ]
                                                                              ]
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/partialGrammar.ml[739,25740+13]..src/partialGrammar.ml[739,25740+38])
                                                                              Texp_ident "pr_branch_prec_annotation/1503"
                                                                        ]
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (src/partialGrammar.ml[741,25781+9]..src/partialGrammar.ml[741,25781+26])
                                                                Texp_field
                                                                expression (src/partialGrammar.ml[741,25781+9]..src/partialGrammar.ml[741,25781+14])
                                                                  Texp_ident "prule/1488"
                                                                "pr_branches"
                                                          ]
                                                        expression (src/partialGrammar.ml[744,25876+9]..src/partialGrammar.ml[750,26163+37])
                                                          Texp_sequence
                                                          expression (src/partialGrammar.ml[744,25876+9]..src/partialGrammar.ml[747,26014+65])
                                                            Texp_ifthenelse
                                                            expression (src/partialGrammar.ml[744,25876+12]..src/partialGrammar.ml[745,25910+56])
                                                              Texp_apply
                                                              expression (src/partialGrammar.ml[745,25910+13]..src/partialGrammar.ml[745,25910+15])
                                                                Texp_ident "Stdlib!.&&"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/partialGrammar.ml[744,25876+13]..src/partialGrammar.ml[744,25876+33])
                                                                    Texp_field
                                                                    expression (src/partialGrammar.ml[744,25876+13]..src/partialGrammar.ml[744,25876+18])
                                                                      Texp_ident "prule/1488"
                                                                    "pr_inline_flag"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/partialGrammar.ml[745,25910+16]..src/partialGrammar.ml[745,25910+55])
                                                                    Texp_apply
                                                                    expression (src/partialGrammar.ml[745,25910+16]..src/partialGrammar.ml[745,25910+29])
                                                                      Texp_ident "Dune__exe!.StringMap.mem"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/partialGrammar.ml[745,25910+30]..src/partialGrammar.ml[745,25910+31])
                                                                          Texp_ident "k/1487"
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/partialGrammar.ml[745,25910+32]..src/partialGrammar.ml[745,25910+55])
                                                                          Texp_field
                                                                          expression (src/partialGrammar.ml[745,25910+32]..src/partialGrammar.ml[745,25910+39])
                                                                            Texp_ident "grammar/1461"
                                                                          "p_start_symbols"
                                                                    ]
                                                              ]
                                                            expression (src/partialGrammar.ml[746,25972+11]..src/partialGrammar.ml[747,26014+65])
                                                              Texp_apply
                                                              expression (src/partialGrammar.ml[746,25972+11]..src/partialGrammar.ml[746,25972+22])
                                                                Texp_ident "Dune__exe!.Error.error"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/partialGrammar.ml[746,25972+23]..src/partialGrammar.ml[746,25972+41])
                                                                    Texp_field
                                                                    expression (src/partialGrammar.ml[746,25972+23]..src/partialGrammar.ml[746,25972+28])
                                                                      Texp_ident "prule/1488"
                                                                    "pr_positions"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/partialGrammar.ml[747,26014+16]..src/partialGrammar.ml[747,26014+63])
                                                                    Texp_construct "CamlinternalFormatBasics.Format"
                                                                    [
                                                                      expression (src/partialGrammar.ml[747,26014+16]..src/partialGrammar.ml[747,26014+63]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.String"
                                                                        [
                                                                          expression (src/partialGrammar.ml[747,26014+16]..src/partialGrammar.ml[747,26014+63]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                            []
                                                                          expression (src/partialGrammar.ml[747,26014+16]..src/partialGrammar.ml[747,26014+63]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                            [
                                                                              expression (src/partialGrammar.ml[747,26014+16]..src/partialGrammar.ml[747,26014+63]) ghost
                                                                                Texp_constant Const_string(" cannot be both a start symbol and inlined.",(src/partialGrammar.ml[747,26014+16]..src/partialGrammar.ml[747,26014+63]) ghost,None)
                                                                              expression (src/partialGrammar.ml[747,26014+16]..src/partialGrammar.ml[747,26014+63]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                []
                                                                            ]
                                                                        ]
                                                                      expression (src/partialGrammar.ml[747,26014+16]..src/partialGrammar.ml[747,26014+63]) ghost
                                                                        Texp_constant Const_string("%s cannot be both a start symbol and inlined.",(src/partialGrammar.ml[747,26014+16]..src/partialGrammar.ml[747,26014+63]) ghost,None)
                                                                    ]
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/partialGrammar.ml[747,26014+64]..src/partialGrammar.ml[747,26014+65])
                                                                    Texp_ident "k/1487"
                                                              ]
                                                            None
                                                          expression (src/partialGrammar.ml[750,26163+9]..src/partialGrammar.ml[750,26163+37])
                                                            Texp_apply
                                                            expression (src/partialGrammar.ml[750,26163+9]..src/partialGrammar.ml[750,26163+31])
                                                              Texp_ident "check_inline_attribute/1443"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/partialGrammar.ml[750,26163+32]..src/partialGrammar.ml[750,26163+37])
                                                                  Texp_ident "prule/1488"
                                                            ]
                                              ]
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/partialGrammar.ml[752,26202+8]..src/partialGrammar.ml[752,26202+23])
                                        Texp_field
                                        expression (src/partialGrammar.ml[752,26202+8]..src/partialGrammar.ml[752,26202+15])
                                          Texp_ident "grammar/1461"
                                        "p_rules"
                                  ]
                                expression (src/partialGrammar.ml[755,26268+2]..src/partialGrammar.ml[767,26752+5])
                                  Texp_ifthenelse
                                  expression (src/partialGrammar.ml[755,26268+5]..src/partialGrammar.ml[755,26268+42])
                                    Texp_apply
                                    expression (src/partialGrammar.ml[755,26268+5]..src/partialGrammar.ml[755,26268+8])
                                      Texp_ident "Stdlib!.not"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/partialGrammar.ml[755,26268+9]..src/partialGrammar.ml[755,26268+42])
                                          Texp_ident "Dune__exe!.Settings.ignore_all_unused_tokens"
                                    ]
                                  expression (src/partialGrammar.ml[755,26268+48]..src/partialGrammar.ml[767,26752+5])
                                    Texp_match
                                    expression (src/partialGrammar.ml[756,26322+10]..src/partialGrammar.ml[756,26322+34])
                                      Texp_ident "Dune__exe!.Settings.token_type_mode"
                                    [
                                      <case>
                                        pattern (src/partialGrammar.ml[757,26362+6]..src/partialGrammar.ml[757,26362+28])
                                          Tpat_value
                                          pattern (src/partialGrammar.ml[757,26362+6]..src/partialGrammar.ml[757,26362+28])
                                            Tpat_construct "Settings.TokenTypeOnly"
                                            []
                                            None
                                        expression (src/partialGrammar.ml[758,26394+8]..src/partialGrammar.ml[758,26394+10])
                                          Texp_construct "()"
                                          []
                                      <case>
                                        pattern (src/partialGrammar.ml[759,26405+6]..src/partialGrammar.ml[760,26437+25])
                                          Tpat_or
                                          pattern (src/partialGrammar.ml[759,26405+6]..src/partialGrammar.ml[759,26405+31])
                                            Tpat_value
                                            pattern (src/partialGrammar.ml[759,26405+6]..src/partialGrammar.ml[759,26405+31])
                                              Tpat_construct "Settings.TokenTypeAndCode"
                                              []
                                              None
                                          pattern (src/partialGrammar.ml[760,26437+6]..src/partialGrammar.ml[760,26437+25])
                                            Tpat_value
                                            pattern (src/partialGrammar.ml[760,26437+6]..src/partialGrammar.ml[760,26437+25])
                                              Tpat_construct "Settings.CodeOnly"
                                              [
                                                pattern (src/partialGrammar.ml[760,26437+24]..src/partialGrammar.ml[760,26437+25])
                                                  Tpat_any
                                              ]
                                              None
                                        expression (src/partialGrammar.ml[761,26466+8]..src/partialGrammar.ml[766,26725+26])
                                          Texp_apply
                                          expression (src/partialGrammar.ml[761,26466+8]..src/partialGrammar.ml[761,26466+22])
                                            Texp_ident "Dune__exe!.StringMap.iter"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/partialGrammar.ml[761,26466+23]..src/partialGrammar.ml[766,26725+9])
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (src/partialGrammar.ml[761,26466+28]..src/partialGrammar.ml[761,26466+33])
                                                      Tpat_var "token/1575"
                                                    expression (src/partialGrammar.ml[761,26466+34]..src/partialGrammar.ml[765,26679+45]) ghost
                                                      Texp_function
                                                      Nolabel
                                                      [
                                                        <case>
                                                          pattern (src/partialGrammar.ml[761,26466+34]..src/partialGrammar.ml[761,26466+53])
                                                            Tpat_record
                                                            [
                                                              "tk_position"
                                                                pattern (src/partialGrammar.ml[761,26466+50]..src/partialGrammar.ml[761,26466+51])
                                                                  Tpat_var "p/1576"
                                                            ]
                                                          expression (src/partialGrammar.ml[762,26523+10]..src/partialGrammar.ml[765,26679+45])
                                                            Texp_ifthenelse
                                                            expression (src/partialGrammar.ml[762,26523+13]..src/partialGrammar.ml[763,26574+69])
                                                              Texp_apply
                                                              expression (src/partialGrammar.ml[762,26523+13]..src/partialGrammar.ml[762,26523+16])
                                                                Texp_ident "Stdlib!.not"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/partialGrammar.ml[762,26523+17]..src/partialGrammar.ml[763,26574+69])
                                                                    Texp_apply
                                                                    expression (src/partialGrammar.ml[763,26574+15]..src/partialGrammar.ml[763,26574+17])
                                                                      Texp_ident "Stdlib!.||"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/partialGrammar.ml[762,26523+18]..src/partialGrammar.ml[762,26523+50])
                                                                          Texp_apply
                                                                          expression (src/partialGrammar.ml[762,26523+18]..src/partialGrammar.ml[762,26523+31])
                                                                            Texp_ident "Dune__exe!.StringSet.mem"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/partialGrammar.ml[762,26523+32]..src/partialGrammar.ml[762,26523+37])
                                                                                Texp_ident "token/1575"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/partialGrammar.ml[762,26523+38]..src/partialGrammar.ml[762,26523+50])
                                                                                Texp_apply
                                                                                expression (src/partialGrammar.ml[762,26523+38]..src/partialGrammar.ml[762,26523+39])
                                                                                  Texp_ident "Stdlib!.!"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/partialGrammar.ml[762,26523+39]..src/partialGrammar.ml[762,26523+50])
                                                                                      Texp_ident "used_tokens/1483"
                                                                                ]
                                                                          ]
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/partialGrammar.ml[763,26574+18]..src/partialGrammar.ml[763,26574+68])
                                                                          Texp_apply
                                                                          expression (src/partialGrammar.ml[763,26574+18]..src/partialGrammar.ml[763,26574+31])
                                                                            Texp_ident "Dune__exe!.StringSet.mem"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/partialGrammar.ml[763,26574+32]..src/partialGrammar.ml[763,26574+37])
                                                                                Texp_ident "token/1575"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/partialGrammar.ml[763,26574+38]..src/partialGrammar.ml[763,26574+68])
                                                                                Texp_ident "Dune__exe!.Settings.ignored_unused_tokens"
                                                                          ]
                                                                    ]
                                                              ]
                                                            expression (src/partialGrammar.ml[764,26649+12]..src/partialGrammar.ml[765,26679+45])
                                                              Texp_apply
                                                              expression (src/partialGrammar.ml[764,26649+12]..src/partialGrammar.ml[764,26649+25])
                                                                Texp_ident "Dune__exe!.Error.warning"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/partialGrammar.ml[764,26649+26]..src/partialGrammar.ml[764,26649+29])
                                                                    Texp_construct "::"
                                                                    [
                                                                      expression (src/partialGrammar.ml[764,26649+27]..src/partialGrammar.ml[764,26649+28])
                                                                        Texp_ident "p/1576"
                                                                      expression (src/partialGrammar.ml[764,26649+28]..src/partialGrammar.ml[764,26649+29]) ghost
                                                                        Texp_construct "[]"
                                                                        []
                                                                    ]
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/partialGrammar.ml[765,26679+14]..src/partialGrammar.ml[765,26679+39])
                                                                    Texp_construct "CamlinternalFormatBasics.Format"
                                                                    [
                                                                      expression (src/partialGrammar.ml[765,26679+14]..src/partialGrammar.ml[765,26679+39]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                        [
                                                                          expression (src/partialGrammar.ml[765,26679+14]..src/partialGrammar.ml[765,26679+39]) ghost
                                                                            Texp_constant Const_string("the token ",(src/partialGrammar.ml[765,26679+14]..src/partialGrammar.ml[765,26679+39]) ghost,None)
                                                                          expression (src/partialGrammar.ml[765,26679+14]..src/partialGrammar.ml[765,26679+39]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.String"
                                                                            [
                                                                              expression (src/partialGrammar.ml[765,26679+14]..src/partialGrammar.ml[765,26679+39]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                []
                                                                              expression (src/partialGrammar.ml[765,26679+14]..src/partialGrammar.ml[765,26679+39]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                [
                                                                                  expression (src/partialGrammar.ml[765,26679+14]..src/partialGrammar.ml[765,26679+39]) ghost
                                                                                    Texp_constant Const_string(" is unused.",(src/partialGrammar.ml[765,26679+14]..src/partialGrammar.ml[765,26679+39]) ghost,None)
                                                                                  expression (src/partialGrammar.ml[765,26679+14]..src/partialGrammar.ml[765,26679+39]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                    []
                                                                                ]
                                                                            ]
                                                                        ]
                                                                      expression (src/partialGrammar.ml[765,26679+14]..src/partialGrammar.ml[765,26679+39]) ghost
                                                                        Texp_constant Const_string("the token %s is unused.",(src/partialGrammar.ml[765,26679+14]..src/partialGrammar.ml[765,26679+39]) ghost,None)
                                                                    ]
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/partialGrammar.ml[765,26679+40]..src/partialGrammar.ml[765,26679+45])
                                                                    Texp_ident "token/1575"
                                                              ]
                                                            None
                                                      ]
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/partialGrammar.ml[766,26725+10]..src/partialGrammar.ml[766,26725+26])
                                                Texp_field
                                                expression (src/partialGrammar.ml[766,26725+10]..src/partialGrammar.ml[766,26725+17])
                                                  Texp_ident "grammar/1461"
                                                "p_tokens"
                                          ]
                                    ]
                                  None
          ]
    ]
  structure_item (src/partialGrammar.ml[769,26759+0]..src/partialGrammar.ml[780,27293+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/partialGrammar.ml[769,26759+4]..src/partialGrammar.ml[769,26759+25])
          Tpat_var "join_partial_grammars/1578"
        expression (src/partialGrammar.ml[769,26759+26]..src/partialGrammar.ml[780,27293+9]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/partialGrammar.ml[769,26759+26]..src/partialGrammar.ml[769,26759+29])
                Tpat_var "pgs/1580"
              expression (src/partialGrammar.ml[771,26872+2]..src/partialGrammar.ml[780,27293+9])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/partialGrammar.ml[771,26872+6]..src/partialGrammar.ml[771,26872+9])
                      Tpat_var "pgs/1581"
                    expression (src/partialGrammar.ml[771,26872+12]..src/partialGrammar.ml[771,26872+51])
                      Texp_apply
                      expression (src/partialGrammar.ml[771,26872+12]..src/partialGrammar.ml[771,26872+47])
                        Texp_ident "Dune__exe!.ExpandTokenAliases.dealias_grammars"
                      [
                        <arg>
                          Nolabel
                          expression (src/partialGrammar.ml[771,26872+48]..src/partialGrammar.ml[771,26872+51])
                            Texp_ident "pgs/1580"
                      ]
                ]
                expression (src/partialGrammar.ml[773,26962+2]..src/partialGrammar.ml[780,27293+9])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (src/partialGrammar.ml[773,26962+6]..src/partialGrammar.ml[773,26962+13])
                        Tpat_var "grammar/1583"
                      expression (src/partialGrammar.ml[773,26962+16]..src/partialGrammar.ml[773,26962+53])
                        Texp_apply
                        expression (src/partialGrammar.ml[773,26962+16]..src/partialGrammar.ml[773,26962+30])
                          Texp_ident "Stdlib!.List.fold_left"
                        [
                          <arg>
                            Nolabel
                            expression (src/partialGrammar.ml[773,26962+31]..src/partialGrammar.ml[773,26962+35])
                              Texp_ident "join/1439"
                          <arg>
                            Nolabel
                            expression (src/partialGrammar.ml[773,26962+36]..src/partialGrammar.ml[773,26962+49])
                              Texp_ident "empty_grammar/1438"
                          <arg>
                            Nolabel
                            expression (src/partialGrammar.ml[773,26962+50]..src/partialGrammar.ml[773,26962+53])
                              Texp_ident "pgs/1581"
                        ]
                  ]
                  expression (src/partialGrammar.ml[774,27019+2]..src/partialGrammar.ml[780,27293+9])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/partialGrammar.ml[774,27019+6]..src/partialGrammar.ml[774,27019+13])
                          Tpat_var "symbols/1584"
                        expression (src/partialGrammar.ml[774,27019+16]..src/partialGrammar.ml[774,27019+49])
                          Texp_apply
                          expression (src/partialGrammar.ml[774,27019+16]..src/partialGrammar.ml[774,27019+24])
                            Texp_ident "Stdlib!.List.map"
                          [
                            <arg>
                              Nolabel
                              expression (src/partialGrammar.ml[774,27019+25]..src/partialGrammar.ml[774,27019+45])
                                Texp_apply
                                expression (src/partialGrammar.ml[774,27019+26]..src/partialGrammar.ml[774,27019+36])
                                  Texp_ident "symbols_of/1369"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/partialGrammar.ml[774,27019+37]..src/partialGrammar.ml[774,27019+44])
                                      Texp_ident "grammar/1583"
                                ]
                            <arg>
                              Nolabel
                              expression (src/partialGrammar.ml[774,27019+46]..src/partialGrammar.ml[774,27019+49])
                                Texp_ident "pgs/1581"
                          ]
                    ]
                    expression (src/partialGrammar.ml[775,27072+2]..src/partialGrammar.ml[780,27293+9])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/partialGrammar.ml[775,27072+6]..src/partialGrammar.ml[775,27072+10])
                            Tpat_var "tpgs/1585"
                          expression (src/partialGrammar.ml[775,27072+13]..src/partialGrammar.ml[775,27072+37])
                            Texp_apply
                            expression (src/partialGrammar.ml[775,27072+13]..src/partialGrammar.ml[775,27072+25])
                              Texp_ident "Stdlib!.List.combine"
                            [
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[775,27072+26]..src/partialGrammar.ml[775,27072+33])
                                  Texp_ident "symbols/1584"
                              <arg>
                                Nolabel
                                expression (src/partialGrammar.ml[775,27072+34]..src/partialGrammar.ml[775,27072+37])
                                  Texp_ident "pgs/1581"
                            ]
                      ]
                      expression (src/partialGrammar.ml[776,27113+2]..src/partialGrammar.ml[780,27293+9])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/partialGrammar.ml[776,27113+6]..src/partialGrammar.ml[776,27113+11])
                              Tpat_var "rules/1586"
                            expression (src/partialGrammar.ml[776,27113+14]..src/partialGrammar.ml[776,27113+38])
                              Texp_apply
                              expression (src/partialGrammar.ml[776,27113+14]..src/partialGrammar.ml[776,27113+25])
                                Texp_ident "merge_rules/1390"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/partialGrammar.ml[776,27113+26]..src/partialGrammar.ml[776,27113+33])
                                    Texp_ident "symbols/1584"
                                <arg>
                                  Nolabel
                                  expression (src/partialGrammar.ml[776,27113+34]..src/partialGrammar.ml[776,27113+38])
                                    Texp_ident "tpgs/1585"
                              ]
                        ]
                        expression (src/partialGrammar.ml[777,27155+2]..src/partialGrammar.ml[780,27293+9])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (src/partialGrammar.ml[777,27155+6]..src/partialGrammar.ml[777,27155+13])
                                Tpat_var "grammar/1587"
                              expression (src/partialGrammar.ml[777,27155+16]..src/partialGrammar.ml[777,27155+48])
                                Texp_record
                                  fields =
                                    [
                                      <kept>                                      <kept>                                      <kept>                                      <kept>                                      <kept>                                      <kept>                                      <kept>                                      <kept>                                      <kept>                                      "p_rules"
                                        expression (src/partialGrammar.ml[777,27155+41]..src/partialGrammar.ml[777,27155+46])
                                          Texp_ident "rules/1586"
                                    ]
                                  representation =
                                    Record_regular
                                  extended_expression =
                                    Some
                                      expression (src/partialGrammar.ml[777,27155+18]..src/partialGrammar.ml[777,27155+25])
                                        Texp_ident "grammar/1583"
                          ]
                          expression (src/partialGrammar.ml[779,27238+2]..src/partialGrammar.ml[780,27293+9])
                            Texp_sequence
                            expression (src/partialGrammar.ml[779,27238+2]..src/partialGrammar.ml[779,27238+53])
                              Texp_apply
                              expression (src/partialGrammar.ml[779,27238+2]..src/partialGrammar.ml[779,27238+45])
                                Texp_ident "check_parameterized_grammar_is_well_defined/1459"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/partialGrammar.ml[779,27238+46]..src/partialGrammar.ml[779,27238+53])
                                    Texp_ident "grammar/1587"
                              ]
                            expression (src/partialGrammar.ml[780,27293+2]..src/partialGrammar.ml[780,27293+9])
                              Texp_ident "grammar/1587"
          ]
    ]
]

{<Dune__exe__PartialGrammar>
 "join_partial_grammars"[value] -> <Dune__exe__PartialGrammar.271>;
 }

(seq
  (let
    (join_declaration/466 =
       (function filename/468 grammar/469 decl/470
         (let (*match*/2604 = (field_imm 0 decl/470))
           (switch* *match*/2604
            case tag 0:
             (let
               (code/471 =a (field_imm 0 *match*/2604)
                init/2586 = grammar/469)
               (makeblock 0
                 (apply (field_imm 36 (global Stdlib!))
                   (field_imm 0 grammar/469) (makeblock 0 code/471 0))
                 (field_imm 1 init/2586) (field_imm 2 init/2586)
                 (field_imm 3 init/2586) (field_imm 4 init/2586)
                 (field_imm 5 init/2586) (field_imm 6 init/2586)
                 (field_imm 7 init/2586) (field_imm 8 init/2586)
                 (field_imm 9 init/2586)))
            case tag 1:
             (let (*match*/2605 =a (field_imm 0 *match*/2604))
               (switch* *match*/2605
                case tag 0:
                 (let
                   (stretch/511 =a (field_imm 0 *match*/2605)
                    init/2587 = grammar/469)
                   (makeblock 0 (field_imm 0 init/2587)
                     (field_imm 1 init/2587)
                     (apply (field_imm 36 (global Stdlib!))
                       (field_imm 2 grammar/469) (makeblock 0 stretch/511 0))
                     (field_imm 3 init/2587) (field_imm 4 init/2587)
                     (field_imm 5 init/2587) (field_imm 6 init/2587)
                     (field_imm 7 init/2587) (field_imm 8 init/2587)
                     (field_imm 9 init/2587)))
                case tag 1:
                 (let (*match*/2606 =a (field_imm 0 *match*/2605))
                   (raise
                     (makeblock 0 (global Assert_failure/28!)
                       [0: "src/partialGrammar.ml" 33 6])))))
            case tag 2:
             (let
               (attributes/515 =a (field_imm 3 *match*/2604)
                alias/514 =a (field_imm 2 *match*/2604)
                terminal/513 =a (field_imm 1 *match*/2604)
                ocamltype/512 =a (field_imm 0 *match*/2604)
                token_property/658 =
                  (try
                    (let
                      (token_property/659 =
                         (apply (field_imm 15 (global Dune__exe__StringMap!))
                           terminal/513 (field_imm 5 grammar/469)))
                      (seq
                        (if (field_int 7 token_property/659)
                          (apply (field_imm 6 (global Dune__exe__Error!))
                            decl/470
                            [0:
                             [11:
                              "the token "
                              [2: 0 [11: " has multiple definitions." 0]]]
                             "the token %s has multiple definitions."]
                            terminal/513)
                          0)
                        (let (init/2591 = token_property/659)
                          (makemutable 0 (*,*,*,*,*,int,*,int) filename/468
                            ocamltype/512 (field_imm 1 decl/470) alias/514
                            attributes/515 (field_int 5 init/2591)
                            (field_mut 6 init/2591) 1))))
                   with exn/2589
                    (catch
                      (if (== exn/2589 (field_imm 7 (global Stdlib!)))
                        (makemutable 0 (*,*,*,*,*,int,*,int) filename/468
                          ocamltype/512 (field_imm 1 decl/470) alias/514
                          attributes/515 3 0 1)
                        (exit 1))
                     with (1) (reraise exn/2589)))
                init/2588 = grammar/469)
               (makeblock 0 (field_imm 0 init/2588) (field_imm 1 init/2588)
                 (field_imm 2 init/2588) (field_imm 3 init/2588)
                 (field_imm 4 init/2588)
                 (apply (field_imm 1 (global Dune__exe__StringMap!))
                   terminal/513 token_property/658 (field_imm 5 grammar/469))
                 (field_imm 6 init/2588) (field_imm 7 init/2588)
                 (field_imm 8 init/2588) (field_imm 9 init/2588)))
            case tag 3:
             (let
               (nonterminal/516 =a (field_imm 0 *match*/2604)
                init/2592 = grammar/469)
               (makeblock 0 (field_imm 0 init/2592) (field_imm 1 init/2592)
                 (field_imm 2 init/2592)
                 (apply (field_imm 1 (global Dune__exe__StringMap!))
                   nonterminal/516 (field_imm 1 decl/470)
                   (field_imm 3 grammar/469))
                 (field_imm 4 init/2592) (field_imm 5 init/2592)
                 (field_imm 6 init/2592) (field_imm 7 init/2592)
                 (field_imm 8 init/2592) (field_imm 9 init/2592)))
            case tag 4:
             (let
               (prec/523 =a (field_imm 2 *match*/2604)
                assoc/522 =a (field_imm 1 *match*/2604)
                terminal/521 =a (field_imm 0 *match*/2604))
               (catch
                 (try
                   (let
                     (grammar/2601 =a grammar/469
                      token_properties/2600 =
                        (apply (field_imm 15 (global Dune__exe__StringMap!))
                          terminal/521 (field_imm 5 grammar/469)))
                     (exit 3 token_properties/2600 grammar/2601))
                  with exn/2595
                   (catch
                     (if (== exn/2595 (field_imm 7 (global Stdlib!)))
                       (let
                         (p/700 =
                            (makemutable 0 (*,*,*,*,*,int,*,int) filename/468
                              0 (field_imm 1 decl/470) 0 0 3 prec/523 0)
                          grammar/2599 =
                            (let (init/2596 = grammar/469)
                              (makeblock 0 (field_imm 0 init/2596)
                                (field_imm 1 init/2596)
                                (field_imm 2 init/2596)
                                (field_imm 3 init/2596)
                                (field_imm 4 init/2596)
                                (apply
                                  (field_imm 1
                                    (global Dune__exe__StringMap!))
                                  terminal/521 p/700
                                  (field_imm 5 grammar/469))
                                (field_imm 6 init/2596)
                                (field_imm 7 init/2596)
                                (field_imm 8 init/2596)
                                (field_imm 9 init/2596)))
                          token_properties/2598 =a p/700)
                         (exit 3 token_properties/2598 grammar/2599))
                       (exit 2))
                    with (2) (reraise exn/2595)))
                with (3 token_properties/698 grammar/699)
                 (seq
                   (if (!= (field_int 5 token_properties/698) 3)
                     (apply (field_imm 5 (global Dune__exe__Error!))
                       (makeblock 0 (field_imm 1 decl/470)
                         (makeblock 0 (field_imm 2 token_properties/698) 0))
                       [0:
                        [11:
                         "there are multiple precedence declarations for token "
                         [2: 0 [12: '.' 0]]]
                        "there are multiple precedence declarations for token %s."]
                       terminal/521)
                     0)
                   (setfield_ptr 6 token_properties/698 prec/523)
                   (setfield_imm 5 token_properties/698 assoc/522)
                   grammar/699)))
            case tag 5:
             (let
               (nonterminal/518 =a (field_imm 1 *match*/2604)
                ocamltype/517 =a (field_imm 0 *match*/2604)
                init/2593 = grammar/469)
               (makeblock 0 (field_imm 0 init/2593) (field_imm 1 init/2593)
                 (field_imm 2 init/2593) (field_imm 3 init/2593)
                 (makeblock 0
                   (makeblock 0 nonterminal/518
                     (apply (field_imm 3 (global Dune__exe__Positions!))
                       (apply (field_imm 1 (global Dune__exe__Positions!))
                         decl/470)
                       ocamltype/517))
                   (field_imm 4 grammar/469))
                 (field_imm 5 init/2593) (field_imm 6 init/2593)
                 (field_imm 7 init/2593) (field_imm 8 init/2593)
                 (field_imm 9 init/2593)))
            case tag 6:
             (let
               (attr/524 =a (field_imm 0 *match*/2604)
                init/2602 = grammar/469)
               (makeblock 0 (field_imm 0 init/2602) (field_imm 1 init/2602)
                 (field_imm 2 init/2602) (field_imm 3 init/2602)
                 (field_imm 4 init/2602) (field_imm 5 init/2602)
                 (field_imm 6 init/2602)
                 (makeblock 0 attr/524 (field_imm 7 grammar/469))
                 (field_imm 8 init/2602) (field_imm 9 init/2602)))
            case tag 7:
             (let
               (attrs/526 =a (field_imm 1 *match*/2604)
                actuals/525 =a (field_imm 0 *match*/2604)
                init/2603 = grammar/469)
               (makeblock 0 (field_imm 0 init/2603) (field_imm 1 init/2603)
                 (field_imm 2 init/2603) (field_imm 3 init/2603)
                 (field_imm 4 init/2603) (field_imm 5 init/2603)
                 (field_imm 6 init/2603) (field_imm 7 init/2603)
                 (makeblock 0 (makeblock 0 actuals/525 attrs/526)
                   (field_imm 8 grammar/469))
                 (field_imm 9 init/2603)))
            case tag 8:
             (let
               (prec/520 =a (field_imm 1 *match*/2604)
                nonterminal/519 =a (field_imm 0 *match*/2604)
                init/2594 = grammar/469)
               (makeblock 0 (field_imm 0 init/2594) (field_imm 1 init/2594)
                 (field_imm 2 init/2594) (field_imm 3 init/2594)
                 (field_imm 4 init/2594) (field_imm 5 init/2594)
                 (makeblock 0 (makeblock 0 nonterminal/519 prec/520)
                   (field_imm 6 grammar/469))
                 (field_imm 7 init/2594) (field_imm 8 init/2594)
                 (field_imm 9 init/2594)))))))
    (setfield_ptr(root-init) 1 (global Dune__exe__PartialGrammar!)
      join_declaration/466))
  (let
    (join_postlude/719 =
       (function postlude/721 grammar/722
         (if (isint postlude/721) grammar/722
           (let
             (postlude/723 =a (field_imm 0 postlude/721)
              init/2607 = grammar/722)
             (makeblock 0 (field_imm 0 init/2607)
               (makeblock 0 postlude/723 (field_imm 1 grammar/722))
               (field_imm 2 init/2607) (field_imm 3 init/2607)
               (field_imm 4 init/2607) (field_imm 5 init/2607)
               (field_imm 6 init/2607) (field_imm 7 init/2607)
               (field_imm 8 init/2607) (field_imm 9 init/2607))))))
    (setfield_ptr(root-init) 2 (global Dune__exe__PartialGrammar!)
      join_postlude/719))
  (let (identity_renaming/725 = 0)
    (setfield_ptr(root-init) 3 (global Dune__exe__PartialGrammar!)
      identity_renaming/725))
  (let
    (rewrite_nonterminal/726 =
       (function phi/728 nonterminal/729
         (apply (field_imm 8 (global Dune__exe__Misc!)) phi/728
           nonterminal/729)))
    (setfield_ptr(root-init) 4 (global Dune__exe__PartialGrammar!)
      rewrite_nonterminal/726))
  (let
    (rewrite_parameter/766 =
       (function phi/768 parameter/769
         (apply (field_imm 3 (global Dune__exe__Parameters!))
           (apply (field_imm 7 (global Dune__exe__Positions!))
             (apply (field_imm 8 (global Dune__exe__Misc!)) phi/768))
           parameter/769)))
    (setfield_ptr(root-init) 5 (global Dune__exe__PartialGrammar!)
      rewrite_parameter/766))
  (let
    (rewrite_producer/785 =
       (function phi/787 param/791
         (let
           (attrs/790 =a (field_imm 2 param/791)
            parameter/789 =a (field_imm 1 param/791)
            ido/788 =a (field_imm 0 param/791))
           (makeblock 0 ido/788
             (apply (field_imm 5 (global Dune__exe__PartialGrammar!)) phi/787
               parameter/789)
             attrs/790))))
    (setfield_ptr(root-init) 6 (global Dune__exe__PartialGrammar!)
      rewrite_producer/785))
  (let
    (rewrite_branch/792 =
       (function phi/794 branch/796
         (let
           (*match*/2612 =a (field_imm 4 branch/796)
            *match*/2611 =a (field_imm 3 branch/796)
            *match*/2610 =a (field_imm 2 branch/796)
            producers/795 =a (field_imm 1 branch/796)
            *match*/2609 =a (field_imm 0 branch/796)
            init/2608 = branch/796)
           (makeblock 0 (field_imm 0 init/2608)
             (apply (field_imm 19 (global Stdlib__List!))
               (apply (field_imm 6 (global Dune__exe__PartialGrammar!))
                 phi/794)
               producers/795)
             (field_imm 2 init/2608) (field_imm 3 init/2608)
             (field_imm 4 init/2608)))))
    (setfield_ptr(root-init) 7 (global Dune__exe__PartialGrammar!)
      rewrite_branch/792))
  (let
    (rewrite_branches/863 =
       (function phi/865 branches/866
         (catch (if (isint phi/865) branches/866 (exit 8)) with (8)
           (apply (field_imm 19 (global Stdlib__List!))
             (apply (field_imm 7 (global Dune__exe__PartialGrammar!))
               phi/865)
             branches/866))))
    (setfield_ptr(root-init) 8 (global Dune__exe__PartialGrammar!)
      rewrite_branches/863))
  (let (fresh_counter/867 = (makemutable 0 (int) 0))
    (setfield_ptr(root-init) 9 (global Dune__exe__PartialGrammar!)
      fresh_counter/867))
  (let
    (names/868 = (makemutable 0 (field_imm 0 (global Dune__exe__StringSet!))))
    (setfield_ptr(root-init) 10 (global Dune__exe__PartialGrammar!)
      names/868))
  (let
    (use_name/915 =
       (function name/917 : int
         (setfield_ptr 0 (field_imm 10 (global Dune__exe__PartialGrammar!))
           (apply (field_imm 1 (global Dune__exe__StringSet!)) name/917
             (field_mut 0 (field_imm 10 (global Dune__exe__PartialGrammar!)))))))
    (setfield_ptr(root-init) 11 (global Dune__exe__PartialGrammar!)
      use_name/915))
  (let
    (used_name/964 =
       (function name/966 : int
         (apply (field_imm 29 (global Dune__exe__StringSet!)) name/966
           (field_mut 0 (field_imm 10 (global Dune__exe__PartialGrammar!))))))
    (setfield_ptr(root-init) 12 (global Dune__exe__PartialGrammar!)
      used_name/964))
  (letrec
    (fresh/967
       (function *opt*/968 param/972[int]
         (let
           (hint/969 =
              (if (isint *opt*/968) "v"
                (let (*sth*/970 =a (field_imm 0 *opt*/968)) *sth*/970))
            name/971 =
              (seq (+:=1 (field_imm 9 (global Dune__exe__PartialGrammar!)))
                (apply (field_imm 27 (global Stdlib!)) hint/969
                  (apply (field_imm 32 (global Stdlib!))
                    (field_int 0
                      (field_imm 9 (global Dune__exe__PartialGrammar!)))))))
           (if
             (apply (field_imm 12 (global Dune__exe__PartialGrammar!))
               name/971)
             (apply fresh/967 (makeblock 0 hint/969) 0)
             (seq
               (apply (field_imm 11 (global Dune__exe__PartialGrammar!))
                 name/971)
               name/971)))))
    (setfield_ptr(root-init) 13 (global Dune__exe__PartialGrammar!)
      fresh/967))
  (let
    (alphaconvert_rule/973 =
       (function parameters/975 prule/976
         (let
           (phi/977 =
              (apply (field_imm 57 (global Stdlib__List!)) parameters/975
                (apply (field_imm 19 (global Stdlib__List!))
                  (function x/978
                    (apply (field_imm 13 (global Dune__exe__PartialGrammar!))
                      (makeblock 0 x/978) 0))
                  parameters/975))
            init/2613 = prule/976)
           (makeblock 0 (int,int,*,*,*,*,*) (field_int 0 init/2613)
             (field_int 1 init/2613) (field_imm 2 init/2613)
             (field_imm 3 init/2613) (field_imm 4 init/2613)
             (apply (field_imm 19 (global Stdlib__List!))
               (apply (field_imm 8 (global Dune__exe__Misc!)) phi/977)
               (field_imm 5 prule/976))
             (apply (field_imm 8 (global Dune__exe__PartialGrammar!)) phi/977
               (field_imm 6 prule/976))))))
    (setfield_ptr(root-init) 14 (global Dune__exe__PartialGrammar!)
      alphaconvert_rule/973))
  (let
    (rewrite_rule/979 =
       (function phi/981 prule/982
         (let
           (ids/983 =
              (apply (field_imm 25 (global Stdlib__List!))
                (function acu/984 param/987
                  (let
                    (d/986 =a (field_imm 1 param/987)
                     f/985 =a (field_imm 0 param/987))
                    (apply (field_imm 1 (global Dune__exe__StringSet!)) f/985
                      (apply (field_imm 1 (global Dune__exe__StringSet!))
                        d/986 acu/984))))
                (field_imm 0 (global Dune__exe__StringSet!)) phi/981)
            captured_parameters/988 =
              (apply (field_imm 43 (global Stdlib__List!))
                (function p/989 : int
                  (apply (field_imm 29 (global Dune__exe__StringSet!)) p/989
                    ids/983))
                (field_imm 5 prule/982))
            prule/990 =
              (apply (field_imm 14 (global Dune__exe__PartialGrammar!))
                captured_parameters/988 prule/982)
            init/2614 = prule/990)
           (makeblock 0 (int,int,*,*,*,*,*) (field_int 0 init/2614)
             (field_int 1 init/2614)
             (apply (field_imm 4 (global Dune__exe__PartialGrammar!)) phi/981
               (field_imm 2 prule/990))
             (field_imm 3 init/2614) (field_imm 4 init/2614)
             (field_imm 5 init/2614)
             (apply (field_imm 8 (global Dune__exe__PartialGrammar!)) phi/981
               (field_imm 6 prule/990))))))
    (setfield_ptr(root-init) 15 (global Dune__exe__PartialGrammar!)
      rewrite_rule/979))
  (let
    (rewrite_rules/991 =
       (function phi/993 rules/994
         (apply (field_imm 19 (global Stdlib__List!))
           (apply (field_imm 15 (global Dune__exe__PartialGrammar!)) phi/993)
           rules/994)))
    (setfield_ptr(root-init) 16 (global Dune__exe__PartialGrammar!)
      rewrite_rules/991))
  (let
    (rewrite_grammar/995 =
       (function phi/997 grammar/998
         (if
           (caml_equal phi/997
             (field_imm 3 (global Dune__exe__PartialGrammar!)))
           grammar/998
           (let (init/2615 = grammar/998)
             (makeblock 0 (field_imm 0 init/2615) (field_imm 1 init/2615)
               (field_imm 2 init/2615)
               (apply (field_imm 16 (global Dune__exe__PartialGrammar!))
                 phi/997 (field_imm 3 grammar/998)))))))
    (setfield_ptr(root-init) 17 (global Dune__exe__PartialGrammar!)
      rewrite_grammar/995))
  (let
    (is_valid_nonterminal_character/999 =
       (function param/1001[int] : int
         (catch
           (catch
             (if (>= param/1001 97)
               (let (switcher/2618 =a (-123+ param/1001))
                 (if (not (isout 92 switcher/2618))
                   (let (switcher/2619 =a (-69+ switcher/2618))
                     (if (isout 22 switcher/2619) (exit 10) (exit 9)))
                   (if (!= switcher/2618 124) (exit 9) (exit 10))))
               (let (switcher/2616 =a (-48+ param/1001))
                 (if (not (isout 42 switcher/2616))
                   (let (switcher/2617 =a (-10+ switcher/2616))
                     (if (isout 6 switcher/2617) (exit 9) (exit 10)))
                   (if (!= switcher/2616 47) (exit 10) (exit 9)))))
            with (10) 0)
          with (9) 1)))
    (setfield_ptr(root-init) 18 (global Dune__exe__PartialGrammar!)
      is_valid_nonterminal_character/999))
  (let
    (restrict/1002 =
       (function filename/1004
         (let
           (m/1005 =
              (apply (field_imm 4 (global Stdlib__Bytes!))
                (apply (field_imm 7 (global Stdlib__Filename!)) filename/1004
                  (if (field_imm 32 (global Dune__exe__Settings!)) ".vy"
                    ".mly"))))
           (seq
             (for i/1185 0 to (- (bytes.length m/1005) 1)
               (if
                 (not
                   (apply (field_imm 18 (global Dune__exe__PartialGrammar!))
                     (bytes.get m/1005 i/1185)))
                 (bytes.set m/1005 i/1185 '_') 0))
             (apply (field_imm 43 (global Stdlib__Bytes!)) m/1005)))))
    (setfield_ptr(root-init) 19 (global Dune__exe__PartialGrammar!)
      restrict/1002))
  (let
    (rename/1186 =
       (function nonterminal/1188 filename/1189
         (let
           (name/1190 =
              (apply (field_imm 27 (global Stdlib!))
                (apply (field_imm 19 (global Dune__exe__PartialGrammar!))
                  filename/1189)
                (apply (field_imm 27 (global Stdlib!)) "_" nonterminal/1188)))
           (if
             (apply (field_imm 12 (global Dune__exe__PartialGrammar!))
               name/1190)
             (apply (field_imm 13 (global Dune__exe__PartialGrammar!))
               (makeblock 0 name/1190) 0)
             (seq
               (apply (field_imm 11 (global Dune__exe__PartialGrammar!))
                 name/1190)
               name/1190)))))
    (setfield_ptr(root-init) 20 (global Dune__exe__PartialGrammar!)
      rename/1186))
  (let
    (find_symbol/1277 =
       (function symbols/1279 symbol/1280
         (apply (field_imm 5 (global Stdlib__Hashtbl!)) symbols/1279
           symbol/1280)))
    (setfield_ptr(root-init) 21 (global Dune__exe__PartialGrammar!)
      find_symbol/1277))
  (let
    (add_in_symbol_table/1281 =
       (function symbols/1283 symbol/1284 kind/1285
         (seq
           (apply (field_imm 11 (global Dune__exe__PartialGrammar!))
             symbol/1284)
           (apply (field_imm 4 (global Stdlib__Hashtbl!)) symbols/1283
             symbol/1284 kind/1285)
           symbols/1283)))
    (setfield_ptr(root-init) 22 (global Dune__exe__PartialGrammar!)
      add_in_symbol_table/1281))
  (let
    (replace_in_symbol_table/1286 =
       (function symbols/1288 symbol/1289 kind/1290
         (seq
           (apply (field_imm 10 (global Stdlib__Hashtbl!)) symbols/1288
             symbol/1289 kind/1290)
           symbols/1288)))
    (setfield_ptr(root-init) 23 (global Dune__exe__PartialGrammar!)
      replace_in_symbol_table/1286))
  (let
    (empty_symbol_table/1291 =
       (function param/1293[int]
         (apply (field_imm 0 (global Stdlib__Hashtbl!)) 0 13)))
    (setfield_ptr(root-init) 24 (global Dune__exe__PartialGrammar!)
      empty_symbol_table/1291))
  (let
    (store_symbol/1294 =
       (function symbols/1296 symbol/1297 kind/1298
         (catch
           (try
             (exit 22
               (apply (field_imm 21 (global Dune__exe__PartialGrammar!))
                 symbols/1296 symbol/1297)
               kind/1298)
            with exn/2642
             (catch
               (if (== exn/2642 (field_imm 7 (global Stdlib!)))
                 (apply (field_imm 22 (global Dune__exe__PartialGrammar!))
                   symbols/1296 symbol/1297 kind/1298)
                 (exit 23))
              with (23) (reraise exn/2642)))
          with (22 val/2620 val/2621)
           (catch
             (catch
               (catch
                 (catch
                   (catch
                     (catch
                       (switch* val/2620
                        case tag 0:
                         (let (p/2624 =a (field_imm 0 val/2620))
                           (switch* val/2621
                            case tag 0:
                             (let (*match*/2639 =a (field_imm 0 val/2621))
                               (exit 13))
                            case tag 1:
                             (let (p'/2625 =a (field_imm 0 val/2621))
                               (exit 11 p/2624 p'/2625))
                            case tag 2: (exit 15)
                            case tag 3: (exit 16)))
                        case tag 1:
                         (let (p/2626 =a (field_imm 0 val/2620))
                           (catch
                             (switch* val/2621
                              case tag 0: (exit 17)
                              case tag 1: (exit 17)
                              case tag 2: (exit 15)
                              case tag 3: (exit 16))
                            with (17)
                             (let
                               (p/2622 =a p/2626
                                p'/2623 =a (field_imm 0 val/2621))
                               (exit 11 p/2622 p'/2623))))
                        case tag 2:
                         (let (tkp/2630 =a (field_imm 0 val/2620))
                           (catch
                             (catch
                               (switch* val/2621
                                case tag 0: (exit 20)
                                case tag 1: (exit 20)
                                case tag 2:
                                 (let
                                   (*match*/2638 =a (field_imm 0 val/2621))
                                   (exit 13))
                                case tag 3: (exit 16))
                              with (20)
                               (let (p/2636 =a (field_imm 0 val/2621))
                                 (exit 19 p/2636)))
                            with (19 p/2631) (exit 12 tkp/2630 p/2631)))
                        case tag 3: (exit 16))
                      with (16)
                       (switch val/2621
                        case tag 3:
                         (let (*match*/2640 =a (field_imm 0 val/2621))
                           (exit 13))
                        default: (exit 15)))
                    with (15)
                     (catch
                       (switch* val/2620
                        case tag 0: (exit 21)
                        case tag 1: (exit 21)
                        case tag 3:
                         (let (*match*/2641 =a (field_imm 0 val/2620))
                           (apply
                             (field_imm 23
                               (global Dune__exe__PartialGrammar!))
                             symbols/1296 symbol/1297 kind/1298)))
                      with (21)
                       (let (p/2632 =a (field_imm 0 val/2620))
                         (exit 14 p/2632))))
                  with (14 p/2629)
                   (let (tkp/2628 =a (field_imm 0 val/2621))
                     (exit 12 tkp/2628 p/2629)))
                with (11 p/1299 p'/1300)
                 (apply (field_imm 5 (global Dune__exe__Error!))
                   (makeblock 0 p/1299 (makeblock 0 p'/1300 0))
                   [0:
                    [11:
                     "the nonterminal symbol "
                     [2:
                      0
                      [11:
                       " is multiply defined.\nOnly "
                       [12:
                        '%'
                        [11: "public symbols can have split definitions." 0]]]]]
                    "the nonterminal symbol %s is multiply defined.\nOnly %%public symbols can have split definitions."]
                   symbol/1297))
              with (12 tkp/1305 p/1306)
               (apply (field_imm 5 (global Dune__exe__Error!))
                 (makeblock 0 p/1306 (makeblock 0 (field_imm 2 tkp/1305) 0))
                 [0:
                  [11:
                   "the identifier "
                   [2: 0 [11: " is a reference to a token." 0]]]
                  "the identifier %s is a reference to a token."]
                 symbol/1297))
            with (13) symbols/1296))))
    (setfield_ptr(root-init) 25 (global Dune__exe__PartialGrammar!)
      store_symbol/1294))
  (let
    (store_used_symbol/1311 =
       (function position/1313 tokens/1314 symbols/1315 symbol/1316
         (let
           (kind/1317 =
              (try
                (makeblock 2
                  (apply (field_imm 15 (global Dune__exe__StringMap!))
                    symbol/1316 tokens/1314))
               with exn/2643
                (catch
                  (if (== exn/2643 (field_imm 7 (global Stdlib!)))
                    (makeblock 3 position/1313) (exit 24))
                 with (24) (reraise exn/2643))))
           (apply (field_imm 25 (global Dune__exe__PartialGrammar!))
             symbols/1315 symbol/1316 kind/1317))))
    (setfield_ptr(root-init) 26 (global Dune__exe__PartialGrammar!)
      store_used_symbol/1311))
  (let
    (non_terminal_is_not_reserved/1318 =
       (function symbol/1320 positions/1321 : int
         (if (caml_string_equal symbol/1320 "error")
           (apply (field_imm 5 (global Dune__exe__Error!)) positions/1321
             [0:
              [2:
               0
               [11:
                " is reserved and thus cannot be used as a non-terminal symbol."
                0]]
              "%s is reserved and thus cannot be used as a non-terminal symbol."]
             symbol/1320)
           0)))
    (setfield_ptr(root-init) 27 (global Dune__exe__PartialGrammar!)
      non_terminal_is_not_reserved/1318))
  (let
    (non_terminal_is_not_a_token/1322 =
       (function tokens/1324 symbol/1325 positions/1326 : int
         (try
           (let
             (tkp/1327 =
                (apply (field_imm 15 (global Dune__exe__StringMap!))
                  symbol/1325 tokens/1324))
             (apply (field_imm 5 (global Dune__exe__Error!))
               (apply (field_imm 36 (global Stdlib!)) positions/1326
                 (makeblock 0 (field_imm 2 tkp/1327) 0))
               [0:
                [11:
                 "the identifier "
                 [2: 0 [11: " is a reference to a token." 0]]]
                "the identifier %s is a reference to a token."]
               symbol/1325))
          with exn/2644
           (catch
             (if (== exn/2644 (field_imm 7 (global Stdlib!))) 0 (exit 25))
            with (25) (reraise exn/2644)))))
    (setfield_ptr(root-init) 28 (global Dune__exe__PartialGrammar!)
      non_terminal_is_not_a_token/1322))
  (let
    (store_public_nonterminal/1328 =
       (function tokens/1330 symbols/1331 symbol/1332 positions/1333
         (seq
           (apply (field_imm 27 (global Dune__exe__PartialGrammar!))
             symbol/1332 positions/1333)
           (apply (field_imm 28 (global Dune__exe__PartialGrammar!))
             tokens/1330 symbol/1332 positions/1333)
           (apply (field_imm 25 (global Dune__exe__PartialGrammar!))
             symbols/1331 symbol/1332
             (makeblock 0
               (apply (field_imm 5 (global Stdlib__List!)) positions/1333))))))
    (setfield_ptr(root-init) 29 (global Dune__exe__PartialGrammar!)
      store_public_nonterminal/1328))
  (let
    (store_private_nonterminal/1334 =
       (function tokens/1336 symbols/1337 symbol/1338 positions/1339
         (seq
           (apply (field_imm 27 (global Dune__exe__PartialGrammar!))
             symbol/1338 positions/1339)
           (apply (field_imm 28 (global Dune__exe__PartialGrammar!))
             tokens/1336 symbol/1338 positions/1339)
           (apply (field_imm 25 (global Dune__exe__PartialGrammar!))
             symbols/1337 symbol/1338
             (makeblock 1
               (apply (field_imm 5 (global Stdlib__List!)) positions/1339))))))
    (setfield_ptr(root-init) 30 (global Dune__exe__PartialGrammar!)
      store_private_nonterminal/1334))
  (let
    (is_private_symbol/1340 =
       (function t/1342 x/1343 : int
         (try
           (let
             (*match*/2646 =
                (apply (field_imm 5 (global Stdlib__Hashtbl!)) t/1342 x/1343))
             (catch
               (switch *match*/2646
                case tag 1:
                 (let (*match*/2647 =a (field_imm 0 *match*/2646)) 1)
                default: (exit 27))
              with (27) 0))
          with exn/2645
           (catch
             (if (== exn/2645 (field_imm 7 (global Stdlib!))) 0 (exit 26))
            with (26) (reraise exn/2645)))))
    (setfield_ptr(root-init) 31 (global Dune__exe__PartialGrammar!)
      is_private_symbol/1340))
  (let
    (fold_on_private_symbols/1344 =
       (function f/1346 init/1347 t/1348
         (apply (field_imm 13 (global Stdlib__Hashtbl!))
           (function k/1349 param/1352
             (catch
               (switch param/1352
                case tag 1:
                 (let (*match*/2648 =a (field_imm 0 param/1352))
                   (function acu/1350 (apply f/1346 acu/1350 k/1349)))
                default: (exit 28))
              with (28) (function acu/1351 acu/1351)))
           t/1348 init/1347)))
    (setfield_ptr(root-init) 32 (global Dune__exe__PartialGrammar!)
      fold_on_private_symbols/1344))
  (let
    (fold_on_public_symbols/1353 =
       (function f/1355 init/1356 t/1357
         (apply (field_imm 13 (global Stdlib__Hashtbl!))
           (function k/1358 param/1361
             (catch
               (switch param/1361
                case tag 0:
                 (let (*match*/2649 =a (field_imm 0 param/1361))
                   (function acu/1359 (apply f/1355 acu/1359 k/1358)))
                default: (exit 29))
              with (29) (function acu/1360 acu/1360)))
           t/1357 init/1356)))
    (setfield_ptr(root-init) 33 (global Dune__exe__PartialGrammar!)
      fold_on_public_symbols/1353))
  (let
    (iter_on_only_used_symbols/1362 =
       (function f/1364 t/1365 : int
         (apply (field_imm 11 (global Stdlib__Hashtbl!))
           (function k/1366 param/1368 : int
             (catch
               (switch param/1368
                case tag 3:
                 (let (pos/1367 =a (field_imm 0 param/1368))
                   (apply f/1364 k/1366 pos/1367))
                default: (exit 30))
              with (30) 0))
           t/1365)))
    (setfield_ptr(root-init) 34 (global Dune__exe__PartialGrammar!)
      iter_on_only_used_symbols/1362))
  (let
    (symbols_of/1369 =
       (function grammar/1371 pgrammar/1372
         (let
           (tokens/1373 = (field_imm 5 grammar/1371)
            symbols_of_rule/1374 =
              (function symbols/1376 prule/1377
                (letrec
                  (store_except_rule_parameters/1378
                     (function symbols/1379 parameter/1380
                       (let
                         (*match*/2655 =
                            (apply
                              (field_imm 1 (global Dune__exe__Parameters!))
                              parameter/1380)
                          parameters/1382 =a (field_imm 1 *match*/2655)
                          symbol/1381 =a (field_imm 0 *match*/2655)
                          symbols/1383 =
                            (if
                              (apply (field_imm 36 (global Stdlib__List!))
                                (field_imm 0 symbol/1381)
                                (field_imm 5 prule/1377))
                              symbols/1379
                              (apply
                                (field_imm 26
                                  (global Dune__exe__PartialGrammar!))
                                (field_imm 1 symbol/1381) tokens/1373
                                symbols/1379 (field_imm 0 symbol/1381))))
                         (apply (field_imm 25 (global Stdlib__List!))
                           store_except_rule_parameters/1378 symbols/1383
                           parameters/1382))))
                  (let
                    (symbols/1384 =
                       (apply (field_imm 25 (global Stdlib__List!))
                         (function symbols/1385 branch/1386
                           (apply (field_imm 25 (global Stdlib__List!))
                             (function symbols/1387 param/1389
                               (let
                                 (*match*/2651 =a (field_imm 2 param/1389)
                                  p/1388 =a (field_imm 1 param/1389)
                                  *match*/2650 =a (field_imm 0 param/1389))
                                 (apply store_except_rule_parameters/1378
                                   symbols/1387 p/1388)))
                             symbols/1385 (field_imm 1 branch/1386)))
                         symbols/1376 (field_imm 6 prule/1377)))
                    (if
                      (|| (field_int 0 prule/1377)
                        (apply (field_imm 29 (global Dune__exe__StringMap!))
                          (field_imm 2 prule/1377)
                          (field_imm 3 grammar/1371)))
                      (apply
                        (field_imm 29 (global Dune__exe__PartialGrammar!))
                        tokens/1373 symbols/1384 (field_imm 2 prule/1377)
                        (field_imm 3 prule/1377))
                      (apply
                        (field_imm 30 (global Dune__exe__PartialGrammar!))
                        tokens/1373 symbols/1384 (field_imm 2 prule/1377)
                        (field_imm 3 prule/1377)))))))
           (apply (field_imm 25 (global Stdlib__List!)) symbols_of_rule/1374
             (apply (field_imm 24 (global Dune__exe__PartialGrammar!)) 0)
             (field_imm 3 pgrammar/1372)))))
    (setfield_ptr(root-init) 35 (global Dune__exe__PartialGrammar!)
      symbols_of/1369))
  (let
    (merge_rules/1390 =
       (function symbols/1392 pgs/1393
         (let
           (public_symbols/1394 =
              (apply (field_imm 25 (global Stdlib__List!))
                (apply (field_imm 33 (global Dune__exe__PartialGrammar!))
                  (function s/1395 k/1396
                    (apply (field_imm 1 (global Dune__exe__StringSet!))
                      k/1396 s/1395)))
                (apply (field_imm 2 (global Dune__exe__StringSet!)) "error")
                symbols/1392))
           (seq
             (apply (field_imm 17 (global Stdlib__List!))
               (apply (field_imm 34 (global Dune__exe__PartialGrammar!))
                 (function k/1397 pos/1398 : int
                   (if
                     (not
                       (apply (field_imm 29 (global Dune__exe__StringSet!))
                         k/1397 public_symbols/1394))
                     (apply (field_imm 5 (global Dune__exe__Error!))
                       (makeblock 0 pos/1398 0)
                       [0:
                        [2: 0 [11: " is undefined." 0]] "%s is undefined."]
                       k/1397)
                     0)))
               symbols/1392)
             (let
               (detect_private_symbol_clashes/1399 =
                  (apply (field_imm 32 (global Dune__exe__PartialGrammar!))
                    (function param/1403 symbol/1402
                      (let
                        (clashes/1401 =a (field_imm 1 param/1403)
                         defined/1400 =a (field_imm 0 param/1403))
                        (if
                          (||
                            (apply
                              (field_imm 29 (global Dune__exe__StringSet!))
                              symbol/1402 defined/1400)
                            (apply
                              (field_imm 29 (global Dune__exe__StringSet!))
                              symbol/1402 public_symbols/1394))
                          (makeblock 0 defined/1400
                            (apply
                              (field_imm 1 (global Dune__exe__StringSet!))
                              symbol/1402 clashes/1401))
                          (makeblock 0
                            (apply
                              (field_imm 1 (global Dune__exe__StringSet!))
                              symbol/1402 defined/1400)
                            clashes/1401)))))
                *match*/2665 =
                  (apply (field_imm 25 (global Stdlib__List!))
                    detect_private_symbol_clashes/1399
                    (makeblock 0 (field_imm 0 (global Dune__exe__StringSet!))
                      (field_imm 0 (global Dune__exe__StringSet!)))
                    symbols/1392)
                clashes/1405 =a (field_imm 1 *match*/2665)
                _private_symbols/1404 =a (field_imm 0 *match*/2665)
                rpgs/1406 =
                  (apply (field_imm 19 (global Stdlib__List!))
                    (function (param/2660, param/2661)
                      (let
                        (pg/1408 =a param/2661
                         symbol_table/1407 =a param/2660
                         renaming/1409 =
                           (apply
                             (field_imm 23 (global Dune__exe__StringSet!))
                             (function x/1410 phi/1411
                               (if
                                 (apply
                                   (field_imm 31
                                     (global Dune__exe__PartialGrammar!))
                                   symbol_table/1407 x/1410)
                                 (let
                                   (x'/1412 =
                                      (apply
                                        (field_imm 20
                                          (global Dune__exe__PartialGrammar!))
                                        x/1410 (field_imm 0 pg/1408)))
                                   (seq
                                     (apply
                                       (field_imm 0 (global Stdlib__Printf!))
                                       (field_imm 39 (global Stdlib!))
                                       [0:
                                        [11:
                                         "Note: the nonterminal symbol "
                                         [2:
                                          0
                                          [11:
                                           " (from "
                                           [2:
                                            0
                                            [11:
                                             ") is renamed "
                                             [2: 0 [11: ".\n" 0]]]]]]]
                                        "Note: the nonterminal symbol %s (from %s) is renamed %s.\n"]
                                       x/1410 (field_imm 0 pg/1408) x'/1412)
                                     (makeblock 0
                                       (makeblock 0 x/1410 x'/1412) phi/1411)))
                                 phi/1411))
                             clashes/1405 0))
                        (apply
                          (field_imm 17 (global Dune__exe__PartialGrammar!))
                          renaming/1409 pg/1408)))
                    pgs/1393))
               (apply (field_imm 25 (global Stdlib__List!))
                 (function rules/1427 rpg/1428
                   (apply (field_imm 25 (global Stdlib__List!))
                     (function rules/1429 r/1430
                       (let
                         (r/1431 =
                            (try
                              (let
                                (r'/1432 =
                                   (apply
                                     (field_imm 15
                                       (global Dune__exe__StringMap!))
                                     (field_imm 2 r/1430) rules/1429)
                                 positions/1433 =
                                   (apply (field_imm 36 (global Stdlib!))
                                     (field_imm 3 r/1430)
                                     (field_imm 3 r'/1432)))
                                (catch
                                  (let
                                    (ra'/2659 =
                                       (apply
                                         (field_imm 0 (global Stdlib__List!))
                                         (field_imm 5 r'/1432))
                                     ra/2658 =
                                       (apply
                                         (field_imm 0 (global Stdlib__List!))
                                         (field_imm 5 r/1430)))
                                    (exit 35 ra/2658 ra'/2659))
                                 with (35 ra/1434[int] ra'/1435[int])
                                  (if (!= ra/1434 ra'/1435)
                                    (apply
                                      (field_imm 5
                                        (global Dune__exe__Error!))
                                      positions/1433
                                      [0:
                                       [11:
                                        "the symbol "
                                        [2:
                                         0
                                         [11:
                                          " is defined with arities "
                                          [4:
                                           0 0 0
                                           [11:
                                            " and " [4: 0 0 0 [12: '.' 0]]]]]]]
                                       "the symbol %s is defined with arities %d and %d."]
                                      (field_imm 2 r/1430) ra/1434 ra'/1435)
                                    (if
                                      (!= (field_int 1 r/1430)
                                        (field_int 1 r'/1432))
                                      (apply
                                        (field_imm 5
                                          (global Dune__exe__Error!))
                                        positions/1433
                                        [0:
                                         [11:
                                          "not all definitions of "
                                          [2:
                                           0
                                           [11:
                                            " are marked "
                                            [12: '%' [11: "inline." 0]]]]]
                                         "not all definitions of %s are marked %%inline."]
                                        (field_imm 2 r/1430))
                                      (let
                                        (phi/1436 =
                                           (apply
                                             (field_imm 57
                                               (global Stdlib__List!))
                                             (field_imm 5 r/1430)
                                             (field_imm 5 r'/1432))
                                         rbr/1437 =
                                           (apply
                                             (field_imm 8
                                               (global Dune__exe__PartialGrammar!))
                                             phi/1436 (field_imm 6 r/1430))
                                         init/2657 = r'/1432)
                                        (makeblock 0 (int,int,*,*,*,*,*)
                                          (field_int 0 init/2657)
                                          (field_int 1 init/2657)
                                          (field_imm 2 init/2657)
                                          positions/1433
                                          (apply
                                            (field_imm 36 (global Stdlib!))
                                            (field_imm 4 r/1430)
                                            (field_imm 4 r'/1432))
                                          (field_imm 5 init/2657)
                                          (apply
                                            (field_imm 36 (global Stdlib!))
                                            rbr/1437 (field_imm 6 r'/1432))))))))
                             with exn/2656
                              (catch
                                (if
                                  (== exn/2656
                                    (field_imm 7 (global Stdlib!)))
                                  (apply
                                    (field_imm 14
                                      (global Dune__exe__PartialGrammar!))
                                    (field_imm 5 r/1430) r/1430)
                                  (exit 34))
                               with (34) (reraise exn/2656))))
                         (apply (field_imm 1 (global Dune__exe__StringMap!))
                           (field_imm 2 r/1431) r/1431 rules/1429)))
                     rules/1427 (field_imm 3 rpg/1428)))
                 (field_imm 0 (global Dune__exe__StringMap!)) rpgs/1406))))))
    (setfield_ptr(root-init) 36 (global Dune__exe__PartialGrammar!)
      merge_rules/1390))
  (let
    (empty_grammar/1438 =
       (makeblock 0 0 0 0 (field_imm 0 (global Dune__exe__StringMap!)) 0
         (field_imm 0 (global Dune__exe__StringMap!)) 0 0 0
         (field_imm 0 (global Dune__exe__StringMap!))))
    (setfield_ptr(root-init) 37 (global Dune__exe__PartialGrammar!)
      empty_grammar/1438))
  (let
    (join/1439 =
       (function grammar/1440 pgrammar/1441
         (let (filename/1442 = (field_imm 0 pgrammar/1441))
           (apply (field_imm 2 (global Dune__exe__PartialGrammar!))
             (field_imm 1 pgrammar/1441)
             (apply (field_imm 25 (global Stdlib__List!))
               (apply (field_imm 1 (global Dune__exe__PartialGrammar!))
                 filename/1442)
               grammar/1440 (field_imm 2 pgrammar/1441))))))
    (setfield_ptr(root-init) 38 (global Dune__exe__PartialGrammar!)
      join/1439))
  (let
    (check_inline_attribute/1443 =
       (function prule/1445 : int
         (let
           (*match*/2667 = (field_int 1 prule/1445)
            *match*/2668 = (field_imm 4 prule/1445))
           (catch
             (if *match*/2667
               (if (isint *match*/2668) (exit 41)
                 (let
                   (_attributes/1448 =a (field_imm 1 *match*/2668)
                    *match*/2669 =a (field_imm 0 *match*/2668)
                    _payload/1447 =a (field_imm 1 *match*/2669)
                    id/1446 =a (field_imm 0 *match*/2669))
                   (apply (field_imm 5 (global Dune__exe__Error!))
                     (makeblock 0
                       (apply (field_imm 1 (global Dune__exe__Positions!))
                         id/1446)
                       0)
                     [0:
                      [11:
                       "the nonterminal symbol "
                       [2:
                        0
                        [11:
                         " is declared "
                         [12:
                          '%'
                          [11: "inline.\nIt cannot carry an attribute." 0]]]]]
                      "the nonterminal symbol %s is declared %%inline.\nIt cannot carry an attribute."]
                     (field_imm 2 prule/1445))))
               (exit 41))
            with (41) 0))))
    (setfield_ptr(root-init) 39 (global Dune__exe__PartialGrammar!)
      check_inline_attribute/1443))
  (let (reserved/1449 = [0: "error" 0])
    (setfield_ptr(root-init) 40 (global Dune__exe__PartialGrammar!)
      reserved/1449))
  (let
    (check_identifier_reference/1450 =
       (function mark_token_as_used/1452 grammar/1453 prule/1454
         is_prec/1455[int] s/1456 p/1457 : int
         (if
           (&& (not is_prec/1455)
             (apply (field_imm 36 (global Stdlib__List!)) s/1456
               (field_imm 5 prule/1454)))
           0
           (if
             (&& (not is_prec/1455)
               (apply (field_imm 36 (global Stdlib__List!)) s/1456
                 (field_imm 40 (global Dune__exe__PartialGrammar!))))
             (apply mark_token_as_used/1452 s/1456)
             (if
               (&& (not is_prec/1455)
                 (apply (field_imm 29 (global Dune__exe__StringMap!)) s/1456
                   (field_imm 9 grammar/1453)))
               0
               (catch
                 (try
                   (exit 42
                     (apply (field_imm 15 (global Dune__exe__StringMap!))
                       s/1456 (field_imm 5 grammar/1453)))
                  with exn/2670
                   (catch
                     (if (== exn/2670 (field_imm 7 (global Stdlib!)))
                       (if is_prec/1455
                         (apply (field_imm 5 (global Dune__exe__Error!))
                           (makeblock 0 p/1457 0)
                           [0:
                            [11:
                             "The terminal symbol "
                             [2: 0 [11: " is undefined." 0]]]
                            "The terminal symbol %s is undefined."]
                           s/1456)
                         (apply (field_imm 5 (global Dune__exe__Error!))
                           (makeblock 0 p/1457 0)
                           [0:
                            [11:
                             "The symbol " [2: 0 [11: " is undefined." 0]]]
                            "The symbol %s is undefined."]
                           s/1456))
                       (exit 43))
                    with (43) (reraise exn/2670)))
                with (42 prop/1458)
                 (seq (apply mark_token_as_used/1452 s/1456)
                   (if (&& (not is_prec/1455) (not (field_int 7 prop/1458)))
                     (apply (field_imm 5 (global Dune__exe__Error!))
                       (makeblock 0 p/1457 0)
                       [0:
                        [11:
                         "The symbol "
                         [2:
                          0
                          [11:
                           " has not been declared by "
                           [12:
                            '%' [11: "token,\nso cannot be used here." 0]]]]]
                        "The symbol %s has not been declared by %%token,\nso cannot be used here."]
                       s/1456)
                     0))))))))
    (setfield_ptr(root-init) 41 (global Dune__exe__PartialGrammar!)
      check_identifier_reference/1450))
  (let
    (check_parameterized_grammar_is_well_defined/1459 =
       (function grammar/1461 : int
         (seq
           (apply (field_imm 21 (global Dune__exe__StringMap!))
             (function nonterminal/1462 p/1463 : int
               (seq
                 (if
                   (not
                     (apply (field_imm 29 (global Dune__exe__StringMap!))
                       nonterminal/1462 (field_imm 9 grammar/1461)))
                   (apply (field_imm 5 (global Dune__exe__Error!))
                     (makeblock 0 p/1463 0)
                     [0:
                      [11:
                       "the start symbol " [2: 0 [11: " is undefined." 0]]]
                      "the start symbol %s is undefined."]
                     nonterminal/1462)
                   0)
                 (if
                   (not
                     (apply (field_imm 33 (global Stdlib__List!))
                       (function (param/2699, param/2700) : int
                         (catch
                           (switch* param/2699
                            case tag 0:
                             (let
                               (*match*/2701 =a (field_imm 0 param/2699)
                                *match*/2702 =a (field_imm 1 *match*/2701)
                                id/1464 =a (field_imm 0 *match*/2701))
                               (caml_string_equal id/1464 nonterminal/1462))
                            case tag 1: (exit 51)
                            case tag 2: (exit 51))
                          with (51) 0))
                       (field_imm 4 grammar/1461)))
                   (apply (field_imm 5 (global Dune__exe__Error!))
                     (makeblock 0 p/1463 0)
                     [0:
                      [11:
                       "the type of the start symbol "
                       [2: 0 [11: " is unspecified." 0]]]
                      "the type of the start symbol %s is unspecified."]
                     nonterminal/1462)
                   0)))
             (field_imm 3 grammar/1461))
           (letrec
             (check/1466
                (function kind/1467 must_be_nonterminal/1468[int] p/1469
                  : int
                  (let
                    (*match*/2698 =
                       (apply (field_imm 1 (global Dune__exe__Parameters!))
                         p/1469)
                     ps/1471 =a (field_imm 1 *match*/2698)
                     head/1470 =a (field_imm 0 *match*/2698)
                     head/1472 =
                       (apply (field_imm 0 (global Dune__exe__Positions!))
                         head/1470)
                     is_nonterminal/1473 =[int]
                       (apply (field_imm 29 (global Dune__exe__StringMap!))
                         head/1472 (field_imm 9 grammar/1461))
                     is_terminal/1474 =[int]
                       (||
                         (apply (field_imm 29 (global Dune__exe__StringMap!))
                           head/1472 (field_imm 5 grammar/1461))
                         (apply (field_imm 36 (global Stdlib__List!))
                           head/1472
                           (field_imm 40 (global Dune__exe__PartialGrammar!)))))
                    (seq
                      (if (not (|| is_terminal/1474 is_nonterminal/1473))
                        (apply (field_imm 5 (global Dune__exe__Error!))
                          (makeblock 0
                            (apply
                              (field_imm 11 (global Dune__exe__Parameters!))
                              p/1469)
                            0)
                          [0:
                           [2: 0 [11: " is undefined." 0]] "%s is undefined."]
                          head/1472)
                        0)
                      (if
                        (&& must_be_nonterminal/1468
                          (not is_nonterminal/1473))
                        (apply (field_imm 5 (global Dune__exe__Error!))
                          (makeblock 0
                            (apply
                              (field_imm 11 (global Dune__exe__Parameters!))
                              p/1469)
                            0)
                          [0:
                           [2:
                            0
                            [11:
                             " is a terminal symbol,\nbut "
                             [2:
                              0
                              [11:
                               " declarations are applicable only to nonterminal symbols."
                               0]]]]
                           "%s is a terminal symbol,\nbut %s declarations are applicable only to nonterminal symbols."]
                          (apply
                            (field_imm 13 (global Dune__exe__Parameters!)) 1
                            p/1469)
                          kind/1467)
                        0)
                      (apply (field_imm 17 (global Stdlib__List!))
                        (apply check/1466 kind/1467 0) ps/1471)))))
             (let
               (check_fst/1475 =
                  (function kind/1477 must_be_nonterminal/1478[int]
                    param/1480 : int
                    (let
                      (*match*/2694 =a (field_imm 1 param/1480)
                       p/1479 =a (field_imm 0 param/1480))
                      (apply check/1466 kind/1477 must_be_nonterminal/1478
                        p/1479))))
               (seq
                 (apply (field_imm 17 (global Stdlib__List!))
                   (apply check_fst/1475 "%type" 1)
                   (field_imm 4 grammar/1461))
                 (apply (field_imm 17 (global Stdlib__List!))
                   (apply check_fst/1475 "%on_error_reduce" 1)
                   (field_imm 6 grammar/1461))
                 (apply (field_imm 17 (global Stdlib__List!))
                   (function (param/2692, param/2693) : int
                     (let (params/1481 =a param/2692)
                       (apply (field_imm 17 (global Stdlib__List!))
                         (apply check/1466 "%attribute" 0) params/1481)))
                   (field_imm 8 grammar/1461))
                 (let
                   (used_tokens/1483 =
                      (makemutable 0
                        (field_imm 0 (global Dune__exe__StringSet!)))
                    mark_token_as_used/1484 =
                      (function token/1486 : int
                        (setfield_ptr 0 used_tokens/1483
                          (apply (field_imm 1 (global Dune__exe__StringSet!))
                            token/1486 (field_mut 0 used_tokens/1483)))))
                   (seq
                     (apply (field_imm 21 (global Dune__exe__StringMap!))
                       (function k/1487 prule/1488 : int
                         (let
                           (check_identifier_reference/1489 =
                              (apply
                                (field_imm 41
                                  (global Dune__exe__PartialGrammar!))
                                mark_token_as_used/1484 grammar/1461
                                prule/1488))
                           (seq
                             (apply (field_imm 2 (global Dune__exe__Option!))
                               (function x/1501 : int
                                 (apply
                                   (field_imm 5 (global Dune__exe__Error!))
                                   (field_imm 3 prule/1488)
                                   [0:
                                    [11:
                                     "several parameters of this rule are named \""
                                     [2: 0 [11: "\"." 0]]]
                                    "several parameters of this rule are named \"%s\"."]
                                   x/1501))
                               (apply
                                 (field_imm 28 (global Dune__exe__Misc!))
                                 (function prim/2689 prim/2688 stub
                                   (caml_string_compare prim/2689 prim/2688))
                                 (apply (field_imm 58 (global Stdlib__List!))
                                   (function prim/2691 prim/2690 stub
                                     (caml_string_compare prim/2691
                                       prim/2690))
                                   (field_imm 5 prule/1488))))
                             (apply (field_imm 17 (global Stdlib__List!))
                               (function param/1514 : int
                                 (let
                                   (*match*/2687 =a (field_imm 4 param/1514)
                                    pr_branch_prec_annotation/1503 =a
                                      (field_imm 3 param/1514)
                                    *match*/2686 =a (field_imm 2 param/1514)
                                    producers/1502 =a
                                      (field_imm 1 param/1514)
                                    *match*/2685 =a (field_imm 0 param/1514))
                                   (seq
                                     (ignore
                                       (apply
                                         (field_imm 25
                                           (global Stdlib__List!))
                                         (function already_seen/1504
                                           param/1512
                                           (let
                                             (*match*/2684 =a
                                                (field_imm 2 param/1512)
                                              p/1506 =a
                                                (field_imm 1 param/1512)
                                              id/1505 =a
                                                (field_imm 0 param/1512)
                                              *match*/2683 =
                                                (apply
                                                  (field_imm 1
                                                    (global Dune__exe__Parameters!))
                                                  p/1506)
                                              parameters/1508 =a
                                                (field_imm 1 *match*/2683)
                                              symbol/1507 =a
                                                (field_imm 0 *match*/2683)
                                              s/1509 =
                                                (field_imm 0 symbol/1507)
                                              p/1510 =
                                                (field_imm 1 symbol/1507)
                                              already_seen/1511 =
                                                (seq
                                                  (if
                                                    (apply
                                                      (field_imm 29
                                                        (global Dune__exe__StringSet!))
                                                      (field_imm 0 id/1505)
                                                      already_seen/1504)
                                                    (apply
                                                      (field_imm 5
                                                        (global Dune__exe__Error!))
                                                      (makeblock 0
                                                        (field_imm 1 id/1505)
                                                        0)
                                                      [0:
                                                       [11:
                                                        "there are multiple producers named "
                                                        [2:
                                                         0
                                                         [11:
                                                          " in this sequence."
                                                          0]]]
                                                       "there are multiple producers named %s in this sequence."]
                                                      (field_imm 0 id/1505))
                                                    0)
                                                  (apply
                                                    (field_imm 1
                                                      (global Dune__exe__StringSet!))
                                                    (field_imm 0 id/1505)
                                                    already_seen/1504)))
                                             (seq
                                               (apply
                                                 check_identifier_reference/1489
                                                 0 s/1509 p/1510)
                                               (apply
                                                 (field_imm 21
                                                   (global Dune__exe__StringMap!))
                                                 (apply
                                                   check_identifier_reference/1489
                                                   0)
                                                 (apply
                                                   (field_imm 25
                                                     (global Stdlib__List!))
                                                   (field_imm 5
                                                     (global Dune__exe__Parameters!))
                                                   (field_imm 0
                                                     (global Dune__exe__StringMap!))
                                                   parameters/1508))
                                               already_seen/1511)))
                                         (field_imm 0
                                           (global Dune__exe__StringSet!))
                                         producers/1502))
                                     (apply
                                       (field_imm 2
                                         (global Dune__exe__Option!))
                                       (function terminal/1513 : int
                                         (apply
                                           check_identifier_reference/1489 1
                                           (field_imm 0 terminal/1513)
                                           (field_imm 1 terminal/1513)))
                                       pr_branch_prec_annotation/1503))))
                               (field_imm 6 prule/1488))
                             (if
                               (&& (field_int 1 prule/1488)
                                 (apply
                                   (field_imm 29
                                     (global Dune__exe__StringMap!))
                                   k/1487 (field_imm 3 grammar/1461)))
                               (apply
                                 (field_imm 5 (global Dune__exe__Error!))
                                 (field_imm 3 prule/1488)
                                 [0:
                                  [2:
                                   0
                                   [11:
                                    " cannot be both a start symbol and inlined."
                                    0]]
                                  "%s cannot be both a start symbol and inlined."]
                                 k/1487)
                               0)
                             (apply
                               (field_imm 39
                                 (global Dune__exe__PartialGrammar!))
                               prule/1488))))
                       (field_imm 9 grammar/1461))
                     (if (not (field_imm 39 (global Dune__exe__Settings!)))
                       (let
                         (*match*/2678 =
                            (field_imm 1 (global Dune__exe__Settings!)))
                         (catch
                           (if (isint *match*/2678)
                             (if *match*/2678 0 (exit 44))
                             (let
                               (*match*/2679 =a (field_imm 0 *match*/2678))
                               (exit 44)))
                          with (44)
                           (apply
                             (field_imm 21 (global Dune__exe__StringMap!))
                             (function token/1575 param/1577 : int
                               (let
                                 (*match*/2674 =a (field_imm 4 param/1577)
                                  *match*/2673 =a (field_imm 3 param/1577)
                                  p/1576 =a (field_imm 2 param/1577)
                                  *match*/2672 =a (field_imm 1 param/1577)
                                  *match*/2671 =a (field_imm 0 param/1577)
                                  *match*/2675 =o (field_int 5 param/1577)
                                  *match*/2676 =o (field_mut 6 param/1577)
                                  *match*/2677 =o (field_int 7 param/1577))
                                 (if
                                   (not
                                     (||
                                       (apply
                                         (field_imm 29
                                           (global Dune__exe__StringSet!))
                                         token/1575
                                         (field_mut 0 used_tokens/1483))
                                       (apply
                                         (field_imm 29
                                           (global Dune__exe__StringSet!))
                                         token/1575
                                         (field_imm 38
                                           (global Dune__exe__Settings!)))))
                                   (apply
                                     (field_imm 7 (global Dune__exe__Error!))
                                     (makeblock 0 p/1576 0)
                                     [0:
                                      [11:
                                       "the token "
                                       [2: 0 [11: " is unused." 0]]]
                                      "the token %s is unused."]
                                     token/1575)
                                   0)))
                             (field_imm 5 grammar/1461))))
                       0)))))))))
    (setfield_ptr(root-init) 42 (global Dune__exe__PartialGrammar!)
      check_parameterized_grammar_is_well_defined/1459))
  (let
    (join_partial_grammars/1578 =
       (function pgs/1580
         (let
           (pgs/1581 =
              (apply (field_imm 0 (global Dune__exe__ExpandTokenAliases!))
                pgs/1580)
            grammar/1583 =
              (apply (field_imm 25 (global Stdlib__List!))
                (field_imm 38 (global Dune__exe__PartialGrammar!))
                (field_imm 37 (global Dune__exe__PartialGrammar!)) pgs/1581)
            symbols/1584 =
              (apply (field_imm 19 (global Stdlib__List!))
                (apply (field_imm 35 (global Dune__exe__PartialGrammar!))
                  grammar/1583)
                pgs/1581)
            tpgs/1585 =
              (apply (field_imm 57 (global Stdlib__List!)) symbols/1584
                pgs/1581)
            rules/1586 =
              (apply (field_imm 36 (global Dune__exe__PartialGrammar!))
                symbols/1584 tpgs/1585)
            grammar/1587 =
              (let (init/2703 = grammar/1583)
                (makeblock 0 (field_imm 0 init/2703) (field_imm 1 init/2703)
                  (field_imm 2 init/2703) (field_imm 3 init/2703)
                  (field_imm 4 init/2703) (field_imm 5 init/2703)
                  (field_imm 6 init/2703) (field_imm 7 init/2703)
                  (field_imm 8 init/2703) rules/1586)))
           (seq
             (apply (field_imm 42 (global Dune__exe__PartialGrammar!))
               grammar/1587)
             grammar/1587))))
    (setfield_ptr(root-init) 0 (global Dune__exe__PartialGrammar!)
      join_partial_grammars/1578))
  0)
(seq
  (let
    (join_declaration/466 =
       (function filename/468 grammar/469 decl/470
         (let (*match*/2604 = (field_imm 0 decl/470))
           (switch* *match*/2604
            case tag 0:
             (makeblock 0
               (apply (field_imm 36 (global Stdlib!))
                 (field_imm 0 grammar/469)
                 (makeblock 0 (field_imm 0 *match*/2604) 0))
               (field_imm 1 grammar/469) (field_imm 2 grammar/469)
               (field_imm 3 grammar/469) (field_imm 4 grammar/469)
               (field_imm 5 grammar/469) (field_imm 6 grammar/469)
               (field_imm 7 grammar/469) (field_imm 8 grammar/469)
               (field_imm 9 grammar/469))
            case tag 1:
             (let (*match*/2605 =a (field_imm 0 *match*/2604))
               (switch* *match*/2605
                case tag 0:
                 (makeblock 0 (field_imm 0 grammar/469)
                   (field_imm 1 grammar/469)
                   (apply (field_imm 36 (global Stdlib!))
                     (field_imm 2 grammar/469)
                     (makeblock 0 (field_imm 0 *match*/2605) 0))
                   (field_imm 3 grammar/469) (field_imm 4 grammar/469)
                   (field_imm 5 grammar/469) (field_imm 6 grammar/469)
                   (field_imm 7 grammar/469) (field_imm 8 grammar/469)
                   (field_imm 9 grammar/469))
                case tag 1:
                 (raise
                   (makeblock 0 (global Assert_failure/28!)
                     [0: "src/partialGrammar.ml" 33 6]))))
            case tag 2:
             (let
               (attributes/515 =a (field_imm 3 *match*/2604)
                alias/514 =a (field_imm 2 *match*/2604)
                terminal/513 =a (field_imm 1 *match*/2604)
                ocamltype/512 =a (field_imm 0 *match*/2604)
                token_property/658 =
                  (try
                    (let
                      (token_property/659 =
                         (apply (field_imm 15 (global Dune__exe__StringMap!))
                           terminal/513 (field_imm 5 grammar/469)))
                      (seq
                        (if (field_int 7 token_property/659)
                          (apply (field_imm 6 (global Dune__exe__Error!))
                            decl/470
                            [0:
                             [11:
                              "the token "
                              [2: 0 [11: " has multiple definitions." 0]]]
                             "the token %s has multiple definitions."]
                            terminal/513)
                          0)
                        (makemutable 0 (*,*,*,*,*,int,*,int) filename/468
                          ocamltype/512 (field_imm 1 decl/470) alias/514
                          attributes/515 (field_int 5 token_property/659)
                          (field_mut 6 token_property/659) 1)))
                   with exn/2589
                    (if (== exn/2589 (field_imm 7 (global Stdlib!)))
                      (makemutable 0 (*,*,*,*,*,int,*,int) filename/468
                        ocamltype/512 (field_imm 1 decl/470) alias/514
                        attributes/515 3 0 1)
                      (reraise exn/2589))))
               (makeblock 0 (field_imm 0 grammar/469)
                 (field_imm 1 grammar/469) (field_imm 2 grammar/469)
                 (field_imm 3 grammar/469) (field_imm 4 grammar/469)
                 (apply (field_imm 1 (global Dune__exe__StringMap!))
                   terminal/513 token_property/658 (field_imm 5 grammar/469))
                 (field_imm 6 grammar/469) (field_imm 7 grammar/469)
                 (field_imm 8 grammar/469) (field_imm 9 grammar/469)))
            case tag 3:
             (makeblock 0 (field_imm 0 grammar/469) (field_imm 1 grammar/469)
               (field_imm 2 grammar/469)
               (apply (field_imm 1 (global Dune__exe__StringMap!))
                 (field_imm 0 *match*/2604) (field_imm 1 decl/470)
                 (field_imm 3 grammar/469))
               (field_imm 4 grammar/469) (field_imm 5 grammar/469)
               (field_imm 6 grammar/469) (field_imm 7 grammar/469)
               (field_imm 8 grammar/469) (field_imm 9 grammar/469))
            case tag 4:
             (let
               (prec/523 =a (field_imm 2 *match*/2604)
                terminal/521 =a (field_imm 0 *match*/2604))
               (catch
                 (try
                   (let
                     (token_properties/2600 =
                        (apply (field_imm 15 (global Dune__exe__StringMap!))
                          terminal/521 (field_imm 5 grammar/469)))
                     (exit 3 token_properties/2600 grammar/469))
                  with exn/2595
                   (if (== exn/2595 (field_imm 7 (global Stdlib!)))
                     (let
                       (p/700 =
                          (makemutable 0 (*,*,*,*,*,int,*,int) filename/468 0
                            (field_imm 1 decl/470) 0 0 3 prec/523 0)
                        grammar/2599 =
                          (makeblock 0 (field_imm 0 grammar/469)
                            (field_imm 1 grammar/469)
                            (field_imm 2 grammar/469)
                            (field_imm 3 grammar/469)
                            (field_imm 4 grammar/469)
                            (apply
                              (field_imm 1 (global Dune__exe__StringMap!))
                              terminal/521 p/700 (field_imm 5 grammar/469))
                            (field_imm 6 grammar/469)
                            (field_imm 7 grammar/469)
                            (field_imm 8 grammar/469)
                            (field_imm 9 grammar/469)))
                       (exit 3 p/700 grammar/2599))
                     (reraise exn/2595)))
                with (3 token_properties/698 grammar/699)
                 (seq
                   (if (!= (field_int 5 token_properties/698) 3)
                     (apply (field_imm 5 (global Dune__exe__Error!))
                       (makeblock 0 (field_imm 1 decl/470)
                         (makeblock 0 (field_imm 2 token_properties/698) 0))
                       [0:
                        [11:
                         "there are multiple precedence declarations for token "
                         [2: 0 [12: '.' 0]]]
                        "there are multiple precedence declarations for token %s."]
                       terminal/521)
                     0)
                   (setfield_ptr 6 token_properties/698 prec/523)
                   (setfield_imm 5 token_properties/698
                     (field_imm 1 *match*/2604))
                   grammar/699)))
            case tag 5:
             (makeblock 0 (field_imm 0 grammar/469) (field_imm 1 grammar/469)
               (field_imm 2 grammar/469) (field_imm 3 grammar/469)
               (makeblock 0
                 (makeblock 0 (field_imm 1 *match*/2604)
                   (apply (field_imm 3 (global Dune__exe__Positions!))
                     (apply (field_imm 1 (global Dune__exe__Positions!))
                       decl/470)
                     (field_imm 0 *match*/2604)))
                 (field_imm 4 grammar/469))
               (field_imm 5 grammar/469) (field_imm 6 grammar/469)
               (field_imm 7 grammar/469) (field_imm 8 grammar/469)
               (field_imm 9 grammar/469))
            case tag 6:
             (makeblock 0 (field_imm 0 grammar/469) (field_imm 1 grammar/469)
               (field_imm 2 grammar/469) (field_imm 3 grammar/469)
               (field_imm 4 grammar/469) (field_imm 5 grammar/469)
               (field_imm 6 grammar/469)
               (makeblock 0 (field_imm 0 *match*/2604)
                 (field_imm 7 grammar/469))
               (field_imm 8 grammar/469) (field_imm 9 grammar/469))
            case tag 7:
             (makeblock 0 (field_imm 0 grammar/469) (field_imm 1 grammar/469)
               (field_imm 2 grammar/469) (field_imm 3 grammar/469)
               (field_imm 4 grammar/469) (field_imm 5 grammar/469)
               (field_imm 6 grammar/469) (field_imm 7 grammar/469)
               (makeblock 0
                 (makeblock 0 (field_imm 0 *match*/2604)
                   (field_imm 1 *match*/2604))
                 (field_imm 8 grammar/469))
               (field_imm 9 grammar/469))
            case tag 8:
             (makeblock 0 (field_imm 0 grammar/469) (field_imm 1 grammar/469)
               (field_imm 2 grammar/469) (field_imm 3 grammar/469)
               (field_imm 4 grammar/469) (field_imm 5 grammar/469)
               (makeblock 0
                 (makeblock 0 (field_imm 0 *match*/2604)
                   (field_imm 1 *match*/2604))
                 (field_imm 6 grammar/469))
               (field_imm 7 grammar/469) (field_imm 8 grammar/469)
               (field_imm 9 grammar/469))))))
    (setfield_ptr(root-init) 1 (global Dune__exe__PartialGrammar!)
      join_declaration/466))
  (let
    (join_postlude/719 =
       (function postlude/721 grammar/722
         (if (isint postlude/721) grammar/722
           (makeblock 0 (field_imm 0 grammar/722)
             (makeblock 0 (field_imm 0 postlude/721)
               (field_imm 1 grammar/722))
             (field_imm 2 grammar/722) (field_imm 3 grammar/722)
             (field_imm 4 grammar/722) (field_imm 5 grammar/722)
             (field_imm 6 grammar/722) (field_imm 7 grammar/722)
             (field_imm 8 grammar/722) (field_imm 9 grammar/722)))))
    (setfield_ptr(root-init) 2 (global Dune__exe__PartialGrammar!)
      join_postlude/719))
  (let (identity_renaming/725 = 0)
    (setfield_ptr(root-init) 3 (global Dune__exe__PartialGrammar!)
      identity_renaming/725))
  (let
    (rewrite_nonterminal/726 =
       (function phi/728 nonterminal/729
         (apply (field_imm 8 (global Dune__exe__Misc!)) phi/728
           nonterminal/729)))
    (setfield_ptr(root-init) 4 (global Dune__exe__PartialGrammar!)
      rewrite_nonterminal/726))
  (let
    (rewrite_parameter/766 =
       (function phi/768 parameter/769
         (apply (field_imm 3 (global Dune__exe__Parameters!))
           (apply (field_imm 7 (global Dune__exe__Positions!))
             (apply (field_imm 8 (global Dune__exe__Misc!)) phi/768))
           parameter/769)))
    (setfield_ptr(root-init) 5 (global Dune__exe__PartialGrammar!)
      rewrite_parameter/766))
  (let
    (rewrite_producer/785 =
       (function phi/787 param/791
         (makeblock 0 (field_imm 0 param/791)
           (apply (field_imm 5 (global Dune__exe__PartialGrammar!)) phi/787
             (field_imm 1 param/791))
           (field_imm 2 param/791))))
    (setfield_ptr(root-init) 6 (global Dune__exe__PartialGrammar!)
      rewrite_producer/785))
  (let
    (rewrite_branch/792 =
       (function phi/794 branch/796
         (makeblock 0 (field_imm 0 branch/796)
           (apply (field_imm 19 (global Stdlib__List!))
             (apply (field_imm 6 (global Dune__exe__PartialGrammar!))
               phi/794)
             (field_imm 1 branch/796))
           (field_imm 2 branch/796) (field_imm 3 branch/796)
           (field_imm 4 branch/796))))
    (setfield_ptr(root-init) 7 (global Dune__exe__PartialGrammar!)
      rewrite_branch/792))
  (let
    (rewrite_branches/863 =
       (function phi/865 branches/866
         (if (isint phi/865) branches/866
           (apply (field_imm 19 (global Stdlib__List!))
             (apply (field_imm 7 (global Dune__exe__PartialGrammar!))
               phi/865)
             branches/866))))
    (setfield_ptr(root-init) 8 (global Dune__exe__PartialGrammar!)
      rewrite_branches/863))
  (let (fresh_counter/867 = (makemutable 0 (int) 0))
    (setfield_ptr(root-init) 9 (global Dune__exe__PartialGrammar!)
      fresh_counter/867))
  (let
    (names/868 = (makemutable 0 (field_imm 0 (global Dune__exe__StringSet!))))
    (setfield_ptr(root-init) 10 (global Dune__exe__PartialGrammar!)
      names/868))
  (let
    (use_name/915 =
       (function name/917 : int
         (setfield_ptr 0 (field_imm 10 (global Dune__exe__PartialGrammar!))
           (apply (field_imm 1 (global Dune__exe__StringSet!)) name/917
             (field_mut 0 (field_imm 10 (global Dune__exe__PartialGrammar!)))))))
    (setfield_ptr(root-init) 11 (global Dune__exe__PartialGrammar!)
      use_name/915))
  (let
    (used_name/964 =
       (function name/966 : int
         (apply (field_imm 29 (global Dune__exe__StringSet!)) name/966
           (field_mut 0 (field_imm 10 (global Dune__exe__PartialGrammar!))))))
    (setfield_ptr(root-init) 12 (global Dune__exe__PartialGrammar!)
      used_name/964))
  (letrec
    (fresh/967
       (function *opt*/968 param/972[int]
         (let
           (hint/969 = (if (isint *opt*/968) "v" (field_imm 0 *opt*/968))
            name/971 =
              (seq (+:=1 (field_imm 9 (global Dune__exe__PartialGrammar!)))
                (apply (field_imm 27 (global Stdlib!)) hint/969
                  (apply (field_imm 32 (global Stdlib!))
                    (field_int 0
                      (field_imm 9 (global Dune__exe__PartialGrammar!)))))))
           (if
             (apply (field_imm 12 (global Dune__exe__PartialGrammar!))
               name/971)
             (apply fresh/967 (makeblock 0 hint/969) 0)
             (seq
               (apply (field_imm 11 (global Dune__exe__PartialGrammar!))
                 name/971)
               name/971)))))
    (setfield_ptr(root-init) 13 (global Dune__exe__PartialGrammar!)
      fresh/967))
  (let
    (alphaconvert_rule/973 =
       (function parameters/975 prule/976
         (let
           (phi/977 =
              (apply (field_imm 57 (global Stdlib__List!)) parameters/975
                (apply (field_imm 19 (global Stdlib__List!))
                  (function x/978
                    (apply (field_imm 13 (global Dune__exe__PartialGrammar!))
                      (makeblock 0 x/978) 0))
                  parameters/975)))
           (makeblock 0 (int,int,*,*,*,*,*) (field_int 0 prule/976)
             (field_int 1 prule/976) (field_imm 2 prule/976)
             (field_imm 3 prule/976) (field_imm 4 prule/976)
             (apply (field_imm 19 (global Stdlib__List!))
               (apply (field_imm 8 (global Dune__exe__Misc!)) phi/977)
               (field_imm 5 prule/976))
             (apply (field_imm 8 (global Dune__exe__PartialGrammar!)) phi/977
               (field_imm 6 prule/976))))))
    (setfield_ptr(root-init) 14 (global Dune__exe__PartialGrammar!)
      alphaconvert_rule/973))
  (let
    (rewrite_rule/979 =
       (function phi/981 prule/982
         (let
           (ids/983 =
              (apply (field_imm 25 (global Stdlib__List!))
                (function acu/984 param/987
                  (apply (field_imm 1 (global Dune__exe__StringSet!))
                    (field_imm 0 param/987)
                    (apply (field_imm 1 (global Dune__exe__StringSet!))
                      (field_imm 1 param/987) acu/984)))
                (field_imm 0 (global Dune__exe__StringSet!)) phi/981)
            captured_parameters/988 =
              (apply (field_imm 43 (global Stdlib__List!))
                (function p/989 : int
                  (apply (field_imm 29 (global Dune__exe__StringSet!)) p/989
                    ids/983))
                (field_imm 5 prule/982))
            prule/990 =
              (apply (field_imm 14 (global Dune__exe__PartialGrammar!))
                captured_parameters/988 prule/982))
           (makeblock 0 (int,int,*,*,*,*,*) (field_int 0 prule/990)
             (field_int 1 prule/990)
             (apply (field_imm 4 (global Dune__exe__PartialGrammar!)) phi/981
               (field_imm 2 prule/990))
             (field_imm 3 prule/990) (field_imm 4 prule/990)
             (field_imm 5 prule/990)
             (apply (field_imm 8 (global Dune__exe__PartialGrammar!)) phi/981
               (field_imm 6 prule/990))))))
    (setfield_ptr(root-init) 15 (global Dune__exe__PartialGrammar!)
      rewrite_rule/979))
  (let
    (rewrite_rules/991 =
       (function phi/993 rules/994
         (apply (field_imm 19 (global Stdlib__List!))
           (apply (field_imm 15 (global Dune__exe__PartialGrammar!)) phi/993)
           rules/994)))
    (setfield_ptr(root-init) 16 (global Dune__exe__PartialGrammar!)
      rewrite_rules/991))
  (let
    (rewrite_grammar/995 =
       (function phi/997 grammar/998
         (if
           (caml_equal phi/997
             (field_imm 3 (global Dune__exe__PartialGrammar!)))
           grammar/998
           (makeblock 0 (field_imm 0 grammar/998) (field_imm 1 grammar/998)
             (field_imm 2 grammar/998)
             (apply (field_imm 16 (global Dune__exe__PartialGrammar!))
               phi/997 (field_imm 3 grammar/998))))))
    (setfield_ptr(root-init) 17 (global Dune__exe__PartialGrammar!)
      rewrite_grammar/995))
  (let
    (is_valid_nonterminal_character/999 =
       (function param/1001[int] : int
         (catch
           (catch
             (if (>= param/1001 97)
               (let (switcher/2618 =a (-123+ param/1001))
                 (if (not (isout 92 switcher/2618))
                   (if (isout 22 (-69+ switcher/2618)) (exit 10) (exit 9))
                   (if (!= switcher/2618 124) (exit 9) (exit 10))))
               (let (switcher/2616 =a (-48+ param/1001))
                 (if (not (isout 42 switcher/2616))
                   (if (isout 6 (-10+ switcher/2616)) (exit 9) (exit 10))
                   (if (!= switcher/2616 47) (exit 10) (exit 9)))))
            with (10) 0)
          with (9) 1)))
    (setfield_ptr(root-init) 18 (global Dune__exe__PartialGrammar!)
      is_valid_nonterminal_character/999))
  (let
    (restrict/1002 =
       (function filename/1004
         (let
           (m/1005 =
              (apply (field_imm 4 (global Stdlib__Bytes!))
                (apply (field_imm 7 (global Stdlib__Filename!)) filename/1004
                  (if (field_imm 32 (global Dune__exe__Settings!)) ".vy"
                    ".mly"))))
           (seq
             (for i/1185 0 to (- (bytes.length m/1005) 1)
               (if
                 (not
                   (apply (field_imm 18 (global Dune__exe__PartialGrammar!))
                     (bytes.get m/1005 i/1185)))
                 (bytes.set m/1005 i/1185 '_') 0))
             (apply (field_imm 43 (global Stdlib__Bytes!)) m/1005)))))
    (setfield_ptr(root-init) 19 (global Dune__exe__PartialGrammar!)
      restrict/1002))
  (let
    (rename/1186 =
       (function nonterminal/1188 filename/1189
         (let
           (name/1190 =
              (apply (field_imm 27 (global Stdlib!))
                (apply (field_imm 19 (global Dune__exe__PartialGrammar!))
                  filename/1189)
                (apply (field_imm 27 (global Stdlib!)) "_" nonterminal/1188)))
           (if
             (apply (field_imm 12 (global Dune__exe__PartialGrammar!))
               name/1190)
             (apply (field_imm 13 (global Dune__exe__PartialGrammar!))
               (makeblock 0 name/1190) 0)
             (seq
               (apply (field_imm 11 (global Dune__exe__PartialGrammar!))
                 name/1190)
               name/1190)))))
    (setfield_ptr(root-init) 20 (global Dune__exe__PartialGrammar!)
      rename/1186))
  (let
    (find_symbol/1277 =
       (function symbols/1279 symbol/1280
         (apply (field_imm 5 (global Stdlib__Hashtbl!)) symbols/1279
           symbol/1280)))
    (setfield_ptr(root-init) 21 (global Dune__exe__PartialGrammar!)
      find_symbol/1277))
  (let
    (add_in_symbol_table/1281 =
       (function symbols/1283 symbol/1284 kind/1285
         (seq
           (apply (field_imm 11 (global Dune__exe__PartialGrammar!))
             symbol/1284)
           (apply (field_imm 4 (global Stdlib__Hashtbl!)) symbols/1283
             symbol/1284 kind/1285)
           symbols/1283)))
    (setfield_ptr(root-init) 22 (global Dune__exe__PartialGrammar!)
      add_in_symbol_table/1281))
  (let
    (replace_in_symbol_table/1286 =
       (function symbols/1288 symbol/1289 kind/1290
         (seq
           (apply (field_imm 10 (global Stdlib__Hashtbl!)) symbols/1288
             symbol/1289 kind/1290)
           symbols/1288)))
    (setfield_ptr(root-init) 23 (global Dune__exe__PartialGrammar!)
      replace_in_symbol_table/1286))
  (let
    (empty_symbol_table/1291 =
       (function param/1293[int]
         (apply (field_imm 0 (global Stdlib__Hashtbl!)) 0 13)))
    (setfield_ptr(root-init) 24 (global Dune__exe__PartialGrammar!)
      empty_symbol_table/1291))
  (let
    (store_symbol/1294 =
       (function symbols/1296 symbol/1297 kind/1298
         (catch
           (try
             (exit 22
               (apply (field_imm 21 (global Dune__exe__PartialGrammar!))
                 symbols/1296 symbol/1297)
               kind/1298)
            with exn/2642
             (if (== exn/2642 (field_imm 7 (global Stdlib!)))
               (apply (field_imm 22 (global Dune__exe__PartialGrammar!))
                 symbols/1296 symbol/1297 kind/1298)
               (reraise exn/2642)))
          with (22 val/2620 val/2621)
           (catch
             (catch
               (catch
                 (catch
                   (catch
                     (switch* val/2620
                      case tag 0:
                       (switch* val/2621
                        case tag 0: (exit 13)
                        case tag 1:
                         (exit 11 (field_imm 0 val/2620)
                           (field_imm 0 val/2621))
                        case tag 2: (exit 15)
                        case tag 3: (exit 16))
                      case tag 1:
                       (catch
                         (switch* val/2621
                          case tag 0: (exit 17)
                          case tag 1: (exit 17)
                          case tag 2: (exit 15)
                          case tag 3: (exit 16))
                        with (17)
                         (exit 11 (field_imm 0 val/2620)
                           (field_imm 0 val/2621)))
                      case tag 2:
                       (catch
                         (switch* val/2621
                          case tag 0: (exit 20)
                          case tag 1: (exit 20)
                          case tag 2: (exit 13)
                          case tag 3: (exit 16))
                        with (20)
                         (exit 12 (field_imm 0 val/2620)
                           (field_imm 0 val/2621)))
                      case tag 3: (exit 16))
                    with (16)
                     (switch val/2621
                      case tag 3: (exit 13)
                      default: (exit 15)))
                  with (15)
                   (catch
                     (switch* val/2620
                      case tag 0: (exit 21)
                      case tag 1: (exit 21)
                      case tag 3:
                       (apply
                         (field_imm 23 (global Dune__exe__PartialGrammar!))
                         symbols/1296 symbol/1297 kind/1298))
                    with (21)
                     (exit 12 (field_imm 0 val/2621) (field_imm 0 val/2620))))
                with (11 p/1299 p'/1300)
                 (apply (field_imm 5 (global Dune__exe__Error!))
                   (makeblock 0 p/1299 (makeblock 0 p'/1300 0))
                   [0:
                    [11:
                     "the nonterminal symbol "
                     [2:
                      0
                      [11:
                       " is multiply defined.\nOnly "
                       [12:
                        '%'
                        [11: "public symbols can have split definitions." 0]]]]]
                    "the nonterminal symbol %s is multiply defined.\nOnly %%public symbols can have split definitions."]
                   symbol/1297))
              with (12 tkp/1305 p/1306)
               (apply (field_imm 5 (global Dune__exe__Error!))
                 (makeblock 0 p/1306 (makeblock 0 (field_imm 2 tkp/1305) 0))
                 [0:
                  [11:
                   "the identifier "
                   [2: 0 [11: " is a reference to a token." 0]]]
                  "the identifier %s is a reference to a token."]
                 symbol/1297))
            with (13) symbols/1296))))
    (setfield_ptr(root-init) 25 (global Dune__exe__PartialGrammar!)
      store_symbol/1294))
  (let
    (store_used_symbol/1311 =
       (function position/1313 tokens/1314 symbols/1315 symbol/1316
         (let
           (kind/1317 =
              (try
                (makeblock 2
                  (apply (field_imm 15 (global Dune__exe__StringMap!))
                    symbol/1316 tokens/1314))
               with exn/2643
                (if (== exn/2643 (field_imm 7 (global Stdlib!)))
                  (makeblock 3 position/1313) (reraise exn/2643))))
           (apply (field_imm 25 (global Dune__exe__PartialGrammar!))
             symbols/1315 symbol/1316 kind/1317))))
    (setfield_ptr(root-init) 26 (global Dune__exe__PartialGrammar!)
      store_used_symbol/1311))
  (let
    (non_terminal_is_not_reserved/1318 =
       (function symbol/1320 positions/1321 : int
         (if (caml_string_equal symbol/1320 "error")
           (apply (field_imm 5 (global Dune__exe__Error!)) positions/1321
             [0:
              [2:
               0
               [11:
                " is reserved and thus cannot be used as a non-terminal symbol."
                0]]
              "%s is reserved and thus cannot be used as a non-terminal symbol."]
             symbol/1320)
           0)))
    (setfield_ptr(root-init) 27 (global Dune__exe__PartialGrammar!)
      non_terminal_is_not_reserved/1318))
  (let
    (non_terminal_is_not_a_token/1322 =
       (function tokens/1324 symbol/1325 positions/1326 : int
         (try
           (let
             (tkp/1327 =
                (apply (field_imm 15 (global Dune__exe__StringMap!))
                  symbol/1325 tokens/1324))
             (apply (field_imm 5 (global Dune__exe__Error!))
               (apply (field_imm 36 (global Stdlib!)) positions/1326
                 (makeblock 0 (field_imm 2 tkp/1327) 0))
               [0:
                [11:
                 "the identifier "
                 [2: 0 [11: " is a reference to a token." 0]]]
                "the identifier %s is a reference to a token."]
               symbol/1325))
          with exn/2644
           (if (== exn/2644 (field_imm 7 (global Stdlib!))) 0
             (reraise exn/2644)))))
    (setfield_ptr(root-init) 28 (global Dune__exe__PartialGrammar!)
      non_terminal_is_not_a_token/1322))
  (let
    (store_public_nonterminal/1328 =
       (function tokens/1330 symbols/1331 symbol/1332 positions/1333
         (seq
           (apply (field_imm 27 (global Dune__exe__PartialGrammar!))
             symbol/1332 positions/1333)
           (apply (field_imm 28 (global Dune__exe__PartialGrammar!))
             tokens/1330 symbol/1332 positions/1333)
           (apply (field_imm 25 (global Dune__exe__PartialGrammar!))
             symbols/1331 symbol/1332
             (makeblock 0
               (apply (field_imm 5 (global Stdlib__List!)) positions/1333))))))
    (setfield_ptr(root-init) 29 (global Dune__exe__PartialGrammar!)
      store_public_nonterminal/1328))
  (let
    (store_private_nonterminal/1334 =
       (function tokens/1336 symbols/1337 symbol/1338 positions/1339
         (seq
           (apply (field_imm 27 (global Dune__exe__PartialGrammar!))
             symbol/1338 positions/1339)
           (apply (field_imm 28 (global Dune__exe__PartialGrammar!))
             tokens/1336 symbol/1338 positions/1339)
           (apply (field_imm 25 (global Dune__exe__PartialGrammar!))
             symbols/1337 symbol/1338
             (makeblock 1
               (apply (field_imm 5 (global Stdlib__List!)) positions/1339))))))
    (setfield_ptr(root-init) 30 (global Dune__exe__PartialGrammar!)
      store_private_nonterminal/1334))
  (let
    (is_private_symbol/1340 =
       (function t/1342 x/1343 : int
         (try
           (let
             (*match*/2646 =
                (apply (field_imm 5 (global Stdlib__Hashtbl!)) t/1342 x/1343))
             (switch *match*/2646 case tag 1: 1
                                  default: 0))
          with exn/2645
           (if (== exn/2645 (field_imm 7 (global Stdlib!))) 0
             (reraise exn/2645)))))
    (setfield_ptr(root-init) 31 (global Dune__exe__PartialGrammar!)
      is_private_symbol/1340))
  (let
    (fold_on_private_symbols/1344 =
       (function f/1346 init/1347 t/1348
         (apply (field_imm 13 (global Stdlib__Hashtbl!))
           (function k/1349 param/1352
             (switch param/1352
              case tag 1: (function acu/1350 (apply f/1346 acu/1350 k/1349))
              default: (function acu/1351 acu/1351)))
           t/1348 init/1347)))
    (setfield_ptr(root-init) 32 (global Dune__exe__PartialGrammar!)
      fold_on_private_symbols/1344))
  (let
    (fold_on_public_symbols/1353 =
       (function f/1355 init/1356 t/1357
         (apply (field_imm 13 (global Stdlib__Hashtbl!))
           (function k/1358 param/1361
             (switch param/1361
              case tag 0: (function acu/1359 (apply f/1355 acu/1359 k/1358))
              default: (function acu/1360 acu/1360)))
           t/1357 init/1356)))
    (setfield_ptr(root-init) 33 (global Dune__exe__PartialGrammar!)
      fold_on_public_symbols/1353))
  (let
    (iter_on_only_used_symbols/1362 =
       (function f/1364 t/1365 : int
         (apply (field_imm 11 (global Stdlib__Hashtbl!))
           (function k/1366 param/1368 : int
             (switch param/1368
              case tag 3: (apply f/1364 k/1366 (field_imm 0 param/1368))
              default: 0))
           t/1365)))
    (setfield_ptr(root-init) 34 (global Dune__exe__PartialGrammar!)
      iter_on_only_used_symbols/1362))
  (let
    (symbols_of/1369 =
       (function grammar/1371 pgrammar/1372
         (let
           (tokens/1373 = (field_imm 5 grammar/1371)
            symbols_of_rule/1374 =
              (function symbols/1376 prule/1377
                (letrec
                  (store_except_rule_parameters/1378
                     (function symbols/1379 parameter/1380
                       (let
                         (*match*/2655 =
                            (apply
                              (field_imm 1 (global Dune__exe__Parameters!))
                              parameter/1380)
                          symbol/1381 =a (field_imm 0 *match*/2655)
                          symbols/1383 =
                            (if
                              (apply (field_imm 36 (global Stdlib__List!))
                                (field_imm 0 symbol/1381)
                                (field_imm 5 prule/1377))
                              symbols/1379
                              (apply
                                (field_imm 26
                                  (global Dune__exe__PartialGrammar!))
                                (field_imm 1 symbol/1381) tokens/1373
                                symbols/1379 (field_imm 0 symbol/1381))))
                         (apply (field_imm 25 (global Stdlib__List!))
                           store_except_rule_parameters/1378 symbols/1383
                           (field_imm 1 *match*/2655)))))
                  (let
                    (symbols/1384 =
                       (apply (field_imm 25 (global Stdlib__List!))
                         (function symbols/1385 branch/1386
                           (apply (field_imm 25 (global Stdlib__List!))
                             (function symbols/1387 param/1389
                               (apply store_except_rule_parameters/1378
                                 symbols/1387 (field_imm 1 param/1389)))
                             symbols/1385 (field_imm 1 branch/1386)))
                         symbols/1376 (field_imm 6 prule/1377)))
                    (if
                      (|| (field_int 0 prule/1377)
                        (apply (field_imm 29 (global Dune__exe__StringMap!))
                          (field_imm 2 prule/1377)
                          (field_imm 3 grammar/1371)))
                      (apply
                        (field_imm 29 (global Dune__exe__PartialGrammar!))
                        tokens/1373 symbols/1384 (field_imm 2 prule/1377)
                        (field_imm 3 prule/1377))
                      (apply
                        (field_imm 30 (global Dune__exe__PartialGrammar!))
                        tokens/1373 symbols/1384 (field_imm 2 prule/1377)
                        (field_imm 3 prule/1377)))))))
           (apply (field_imm 25 (global Stdlib__List!)) symbols_of_rule/1374
             (apply (field_imm 24 (global Dune__exe__PartialGrammar!)) 0)
             (field_imm 3 pgrammar/1372)))))
    (setfield_ptr(root-init) 35 (global Dune__exe__PartialGrammar!)
      symbols_of/1369))
  (let
    (merge_rules/1390 =
       (function symbols/1392 pgs/1393
         (let
           (public_symbols/1394 =
              (apply (field_imm 25 (global Stdlib__List!))
                (apply (field_imm 33 (global Dune__exe__PartialGrammar!))
                  (function s/1395 k/1396
                    (apply (field_imm 1 (global Dune__exe__StringSet!))
                      k/1396 s/1395)))
                (apply (field_imm 2 (global Dune__exe__StringSet!)) "error")
                symbols/1392))
           (seq
             (apply (field_imm 17 (global Stdlib__List!))
               (apply (field_imm 34 (global Dune__exe__PartialGrammar!))
                 (function k/1397 pos/1398 : int
                   (if
                     (not
                       (apply (field_imm 29 (global Dune__exe__StringSet!))
                         k/1397 public_symbols/1394))
                     (apply (field_imm 5 (global Dune__exe__Error!))
                       (makeblock 0 pos/1398 0)
                       [0:
                        [2: 0 [11: " is undefined." 0]] "%s is undefined."]
                       k/1397)
                     0)))
               symbols/1392)
             (let
               (detect_private_symbol_clashes/1399 =
                  (apply (field_imm 32 (global Dune__exe__PartialGrammar!))
                    (function param/1403 symbol/1402
                      (let
                        (clashes/1401 =a (field_imm 1 param/1403)
                         defined/1400 =a (field_imm 0 param/1403))
                        (if
                          (||
                            (apply
                              (field_imm 29 (global Dune__exe__StringSet!))
                              symbol/1402 defined/1400)
                            (apply
                              (field_imm 29 (global Dune__exe__StringSet!))
                              symbol/1402 public_symbols/1394))
                          (makeblock 0 defined/1400
                            (apply
                              (field_imm 1 (global Dune__exe__StringSet!))
                              symbol/1402 clashes/1401))
                          (makeblock 0
                            (apply
                              (field_imm 1 (global Dune__exe__StringSet!))
                              symbol/1402 defined/1400)
                            clashes/1401)))))
                *match*/2665 =
                  (apply (field_imm 25 (global Stdlib__List!))
                    detect_private_symbol_clashes/1399
                    (makeblock 0 (field_imm 0 (global Dune__exe__StringSet!))
                      (field_imm 0 (global Dune__exe__StringSet!)))
                    symbols/1392)
                clashes/1405 =a (field_imm 1 *match*/2665)
                rpgs/1406 =
                  (apply (field_imm 19 (global Stdlib__List!))
                    (function (param/2660, param/2661)
                      (let
                        (renaming/1409 =
                           (apply
                             (field_imm 23 (global Dune__exe__StringSet!))
                             (function x/1410 phi/1411
                               (if
                                 (apply
                                   (field_imm 31
                                     (global Dune__exe__PartialGrammar!))
                                   param/2660 x/1410)
                                 (let
                                   (x'/1412 =
                                      (apply
                                        (field_imm 20
                                          (global Dune__exe__PartialGrammar!))
                                        x/1410 (field_imm 0 param/2661)))
                                   (seq
                                     (apply
                                       (field_imm 0 (global Stdlib__Printf!))
                                       (field_imm 39 (global Stdlib!))
                                       [0:
                                        [11:
                                         "Note: the nonterminal symbol "
                                         [2:
                                          0
                                          [11:
                                           " (from "
                                           [2:
                                            0
                                            [11:
                                             ") is renamed "
                                             [2: 0 [11: ".\n" 0]]]]]]]
                                        "Note: the nonterminal symbol %s (from %s) is renamed %s.\n"]
                                       x/1410 (field_imm 0 param/2661)
                                       x'/1412)
                                     (makeblock 0
                                       (makeblock 0 x/1410 x'/1412) phi/1411)))
                                 phi/1411))
                             clashes/1405 0))
                        (apply
                          (field_imm 17 (global Dune__exe__PartialGrammar!))
                          renaming/1409 param/2661)))
                    pgs/1393))
               (apply (field_imm 25 (global Stdlib__List!))
                 (function rules/1427 rpg/1428
                   (apply (field_imm 25 (global Stdlib__List!))
                     (function rules/1429 r/1430
                       (let
                         (r/1431 =
                            (try
                              (let
                                (r'/1432 =
                                   (apply
                                     (field_imm 15
                                       (global Dune__exe__StringMap!))
                                     (field_imm 2 r/1430) rules/1429)
                                 positions/1433 =
                                   (apply (field_imm 36 (global Stdlib!))
                                     (field_imm 3 r/1430)
                                     (field_imm 3 r'/1432))
                                 ra'/2659 =
                                   (apply
                                     (field_imm 0 (global Stdlib__List!))
                                     (field_imm 5 r'/1432))
                                 ra/2658 =
                                   (apply
                                     (field_imm 0 (global Stdlib__List!))
                                     (field_imm 5 r/1430)))
                                (if (!= ra/2658 ra'/2659)
                                  (apply
                                    (field_imm 5 (global Dune__exe__Error!))
                                    positions/1433
                                    [0:
                                     [11:
                                      "the symbol "
                                      [2:
                                       0
                                       [11:
                                        " is defined with arities "
                                        [4:
                                         0 0 0
                                         [11: " and " [4: 0 0 0 [12: '.' 0]]]]]]]
                                     "the symbol %s is defined with arities %d and %d."]
                                    (field_imm 2 r/1430) ra/2658 ra'/2659)
                                  (if
                                    (!= (field_int 1 r/1430)
                                      (field_int 1 r'/1432))
                                    (apply
                                      (field_imm 5
                                        (global Dune__exe__Error!))
                                      positions/1433
                                      [0:
                                       [11:
                                        "not all definitions of "
                                        [2:
                                         0
                                         [11:
                                          " are marked "
                                          [12: '%' [11: "inline." 0]]]]]
                                       "not all definitions of %s are marked %%inline."]
                                      (field_imm 2 r/1430))
                                    (let
                                      (phi/1436 =
                                         (apply
                                           (field_imm 57
                                             (global Stdlib__List!))
                                           (field_imm 5 r/1430)
                                           (field_imm 5 r'/1432))
                                       rbr/1437 =
                                         (apply
                                           (field_imm 8
                                             (global Dune__exe__PartialGrammar!))
                                           phi/1436 (field_imm 6 r/1430)))
                                      (makeblock 0 (int,int,*,*,*,*,*)
                                        (field_int 0 r'/1432)
                                        (field_int 1 r'/1432)
                                        (field_imm 2 r'/1432) positions/1433
                                        (apply
                                          (field_imm 36 (global Stdlib!))
                                          (field_imm 4 r/1430)
                                          (field_imm 4 r'/1432))
                                        (field_imm 5 r'/1432)
                                        (apply
                                          (field_imm 36 (global Stdlib!))
                                          rbr/1437 (field_imm 6 r'/1432)))))))
                             with exn/2656
                              (if
                                (== exn/2656 (field_imm 7 (global Stdlib!)))
                                (apply
                                  (field_imm 14
                                    (global Dune__exe__PartialGrammar!))
                                  (field_imm 5 r/1430) r/1430)
                                (reraise exn/2656))))
                         (apply (field_imm 1 (global Dune__exe__StringMap!))
                           (field_imm 2 r/1431) r/1431 rules/1429)))
                     rules/1427 (field_imm 3 rpg/1428)))
                 (field_imm 0 (global Dune__exe__StringMap!)) rpgs/1406))))))
    (setfield_ptr(root-init) 36 (global Dune__exe__PartialGrammar!)
      merge_rules/1390))
  (let
    (empty_grammar/1438 =
       (makeblock 0 0 0 0 (field_imm 0 (global Dune__exe__StringMap!)) 0
         (field_imm 0 (global Dune__exe__StringMap!)) 0 0 0
         (field_imm 0 (global Dune__exe__StringMap!))))
    (setfield_ptr(root-init) 37 (global Dune__exe__PartialGrammar!)
      empty_grammar/1438))
  (let
    (join/1439 =
       (function grammar/1440 pgrammar/1441
         (let (filename/1442 = (field_imm 0 pgrammar/1441))
           (apply (field_imm 2 (global Dune__exe__PartialGrammar!))
             (field_imm 1 pgrammar/1441)
             (apply (field_imm 25 (global Stdlib__List!))
               (apply (field_imm 1 (global Dune__exe__PartialGrammar!))
                 filename/1442)
               grammar/1440 (field_imm 2 pgrammar/1441))))))
    (setfield_ptr(root-init) 38 (global Dune__exe__PartialGrammar!)
      join/1439))
  (let
    (check_inline_attribute/1443 =
       (function prule/1445 : int
         (let
           (*match*/2667 = (field_int 1 prule/1445)
            *match*/2668 = (field_imm 4 prule/1445))
           (catch
             (if *match*/2667
               (if (isint *match*/2668) (exit 41)
                 (apply (field_imm 5 (global Dune__exe__Error!))
                   (makeblock 0
                     (apply (field_imm 1 (global Dune__exe__Positions!))
                       (field_imm 0 (field_imm 0 *match*/2668)))
                     0)
                   [0:
                    [11:
                     "the nonterminal symbol "
                     [2:
                      0
                      [11:
                       " is declared "
                       [12:
                        '%' [11: "inline.\nIt cannot carry an attribute." 0]]]]]
                    "the nonterminal symbol %s is declared %%inline.\nIt cannot carry an attribute."]
                   (field_imm 2 prule/1445)))
               (exit 41))
            with (41) 0))))
    (setfield_ptr(root-init) 39 (global Dune__exe__PartialGrammar!)
      check_inline_attribute/1443))
  (let (reserved/1449 = [0: "error" 0])
    (setfield_ptr(root-init) 40 (global Dune__exe__PartialGrammar!)
      reserved/1449))
  (let
    (check_identifier_reference/1450 =
       (function mark_token_as_used/1452 grammar/1453 prule/1454
         is_prec/1455[int] s/1456 p/1457 : int
         (if
           (&& (not is_prec/1455)
             (apply (field_imm 36 (global Stdlib__List!)) s/1456
               (field_imm 5 prule/1454)))
           0
           (if
             (&& (not is_prec/1455)
               (apply (field_imm 36 (global Stdlib__List!)) s/1456
                 (field_imm 40 (global Dune__exe__PartialGrammar!))))
             (apply mark_token_as_used/1452 s/1456)
             (if
               (&& (not is_prec/1455)
                 (apply (field_imm 29 (global Dune__exe__StringMap!)) s/1456
                   (field_imm 9 grammar/1453)))
               0
               (catch
                 (try
                   (exit 42
                     (apply (field_imm 15 (global Dune__exe__StringMap!))
                       s/1456 (field_imm 5 grammar/1453)))
                  with exn/2670
                   (if (== exn/2670 (field_imm 7 (global Stdlib!)))
                     (if is_prec/1455
                       (apply (field_imm 5 (global Dune__exe__Error!))
                         (makeblock 0 p/1457 0)
                         [0:
                          [11:
                           "The terminal symbol "
                           [2: 0 [11: " is undefined." 0]]]
                          "The terminal symbol %s is undefined."]
                         s/1456)
                       (apply (field_imm 5 (global Dune__exe__Error!))
                         (makeblock 0 p/1457 0)
                         [0:
                          [11: "The symbol " [2: 0 [11: " is undefined." 0]]]
                          "The symbol %s is undefined."]
                         s/1456))
                     (reraise exn/2670)))
                with (42 prop/1458)
                 (seq (apply mark_token_as_used/1452 s/1456)
                   (if (&& (not is_prec/1455) (not (field_int 7 prop/1458)))
                     (apply (field_imm 5 (global Dune__exe__Error!))
                       (makeblock 0 p/1457 0)
                       [0:
                        [11:
                         "The symbol "
                         [2:
                          0
                          [11:
                           " has not been declared by "
                           [12:
                            '%' [11: "token,\nso cannot be used here." 0]]]]]
                        "The symbol %s has not been declared by %%token,\nso cannot be used here."]
                       s/1456)
                     0))))))))
    (setfield_ptr(root-init) 41 (global Dune__exe__PartialGrammar!)
      check_identifier_reference/1450))
  (let
    (check_parameterized_grammar_is_well_defined/1459 =
       (function grammar/1461 : int
         (seq
           (apply (field_imm 21 (global Dune__exe__StringMap!))
             (function nonterminal/1462 p/1463 : int
               (seq
                 (if
                   (not
                     (apply (field_imm 29 (global Dune__exe__StringMap!))
                       nonterminal/1462 (field_imm 9 grammar/1461)))
                   (apply (field_imm 5 (global Dune__exe__Error!))
                     (makeblock 0 p/1463 0)
                     [0:
                      [11:
                       "the start symbol " [2: 0 [11: " is undefined." 0]]]
                      "the start symbol %s is undefined."]
                     nonterminal/1462)
                   0)
                 (if
                   (not
                     (apply (field_imm 33 (global Stdlib__List!))
                       (function (param/2699, param/2700) : int
                         (catch
                           (switch* param/2699
                            case tag 0:
                             (caml_string_equal
                               (field_imm 0 (field_imm 0 param/2699))
                               nonterminal/1462)
                            case tag 1: (exit 51)
                            case tag 2: (exit 51))
                          with (51) 0))
                       (field_imm 4 grammar/1461)))
                   (apply (field_imm 5 (global Dune__exe__Error!))
                     (makeblock 0 p/1463 0)
                     [0:
                      [11:
                       "the type of the start symbol "
                       [2: 0 [11: " is unspecified." 0]]]
                      "the type of the start symbol %s is unspecified."]
                     nonterminal/1462)
                   0)))
             (field_imm 3 grammar/1461))
           (letrec
             (check/1466
                (function kind/1467 must_be_nonterminal/1468[int] p/1469
                  : int
                  (let
                    (*match*/2698 =
                       (apply (field_imm 1 (global Dune__exe__Parameters!))
                         p/1469)
                     head/1472 =
                       (apply (field_imm 0 (global Dune__exe__Positions!))
                         (field_imm 0 *match*/2698))
                     is_nonterminal/1473 =[int]
                       (apply (field_imm 29 (global Dune__exe__StringMap!))
                         head/1472 (field_imm 9 grammar/1461))
                     is_terminal/1474 =[int]
                       (||
                         (apply (field_imm 29 (global Dune__exe__StringMap!))
                           head/1472 (field_imm 5 grammar/1461))
                         (apply (field_imm 36 (global Stdlib__List!))
                           head/1472
                           (field_imm 40 (global Dune__exe__PartialGrammar!)))))
                    (seq
                      (if (not (|| is_terminal/1474 is_nonterminal/1473))
                        (apply (field_imm 5 (global Dune__exe__Error!))
                          (makeblock 0
                            (apply
                              (field_imm 11 (global Dune__exe__Parameters!))
                              p/1469)
                            0)
                          [0:
                           [2: 0 [11: " is undefined." 0]] "%s is undefined."]
                          head/1472)
                        0)
                      (if
                        (&& must_be_nonterminal/1468
                          (not is_nonterminal/1473))
                        (apply (field_imm 5 (global Dune__exe__Error!))
                          (makeblock 0
                            (apply
                              (field_imm 11 (global Dune__exe__Parameters!))
                              p/1469)
                            0)
                          [0:
                           [2:
                            0
                            [11:
                             " is a terminal symbol,\nbut "
                             [2:
                              0
                              [11:
                               " declarations are applicable only to nonterminal symbols."
                               0]]]]
                           "%s is a terminal symbol,\nbut %s declarations are applicable only to nonterminal symbols."]
                          (apply
                            (field_imm 13 (global Dune__exe__Parameters!)) 1
                            p/1469)
                          kind/1467)
                        0)
                      (apply (field_imm 17 (global Stdlib__List!))
                        (apply check/1466 kind/1467 0)
                        (field_imm 1 *match*/2698))))))
             (let
               (check_fst/1475 =
                  (function kind/1477 must_be_nonterminal/1478[int]
                    param/1480 : int
                    (apply check/1466 kind/1477 must_be_nonterminal/1478
                      (field_imm 0 param/1480))))
               (seq
                 (apply (field_imm 17 (global Stdlib__List!))
                   (apply check_fst/1475 "%type" 1)
                   (field_imm 4 grammar/1461))
                 (apply (field_imm 17 (global Stdlib__List!))
                   (apply check_fst/1475 "%on_error_reduce" 1)
                   (field_imm 6 grammar/1461))
                 (apply (field_imm 17 (global Stdlib__List!))
                   (function (param/2692, param/2693) : int
                     (apply (field_imm 17 (global Stdlib__List!))
                       (apply check/1466 "%attribute" 0) param/2692))
                   (field_imm 8 grammar/1461))
                 (let
                   (used_tokens/1483 =
                      (makemutable 0
                        (field_imm 0 (global Dune__exe__StringSet!)))
                    mark_token_as_used/1484 =
                      (function token/1486 : int
                        (setfield_ptr 0 used_tokens/1483
                          (apply (field_imm 1 (global Dune__exe__StringSet!))
                            token/1486 (field_mut 0 used_tokens/1483)))))
                   (seq
                     (apply (field_imm 21 (global Dune__exe__StringMap!))
                       (function k/1487 prule/1488 : int
                         (let
                           (check_identifier_reference/1489 =
                              (apply
                                (field_imm 41
                                  (global Dune__exe__PartialGrammar!))
                                mark_token_as_used/1484 grammar/1461
                                prule/1488))
                           (seq
                             (apply (field_imm 2 (global Dune__exe__Option!))
                               (function x/1501 : int
                                 (apply
                                   (field_imm 5 (global Dune__exe__Error!))
                                   (field_imm 3 prule/1488)
                                   [0:
                                    [11:
                                     "several parameters of this rule are named \""
                                     [2: 0 [11: "\"." 0]]]
                                    "several parameters of this rule are named \"%s\"."]
                                   x/1501))
                               (apply
                                 (field_imm 28 (global Dune__exe__Misc!))
                                 (function prim/2689 prim/2688 stub
                                   (caml_string_compare prim/2689 prim/2688))
                                 (apply (field_imm 58 (global Stdlib__List!))
                                   (function prim/2691 prim/2690 stub
                                     (caml_string_compare prim/2691
                                       prim/2690))
                                   (field_imm 5 prule/1488))))
                             (apply (field_imm 17 (global Stdlib__List!))
                               (function param/1514 : int
                                 (seq
                                   (ignore
                                     (apply
                                       (field_imm 25 (global Stdlib__List!))
                                       (function already_seen/1504 param/1512
                                         (let
                                           (id/1505 =a
                                              (field_imm 0 param/1512)
                                            *match*/2683 =
                                              (apply
                                                (field_imm 1
                                                  (global Dune__exe__Parameters!))
                                                (field_imm 1 param/1512))
                                            symbol/1507 =a
                                              (field_imm 0 *match*/2683)
                                            s/1509 =
                                              (field_imm 0 symbol/1507)
                                            p/1510 =
                                              (field_imm 1 symbol/1507)
                                            already_seen/1511 =
                                              (seq
                                                (if
                                                  (apply
                                                    (field_imm 29
                                                      (global Dune__exe__StringSet!))
                                                    (field_imm 0 id/1505)
                                                    already_seen/1504)
                                                  (apply
                                                    (field_imm 5
                                                      (global Dune__exe__Error!))
                                                    (makeblock 0
                                                      (field_imm 1 id/1505)
                                                      0)
                                                    [0:
                                                     [11:
                                                      "there are multiple producers named "
                                                      [2:
                                                       0
                                                       [11:
                                                        " in this sequence."
                                                        0]]]
                                                     "there are multiple producers named %s in this sequence."]
                                                    (field_imm 0 id/1505))
                                                  0)
                                                (apply
                                                  (field_imm 1
                                                    (global Dune__exe__StringSet!))
                                                  (field_imm 0 id/1505)
                                                  already_seen/1504)))
                                           (seq
                                             (apply
                                               check_identifier_reference/1489
                                               0 s/1509 p/1510)
                                             (apply
                                               (field_imm 21
                                                 (global Dune__exe__StringMap!))
                                               (apply
                                                 check_identifier_reference/1489
                                                 0)
                                               (apply
                                                 (field_imm 25
                                                   (global Stdlib__List!))
                                                 (field_imm 5
                                                   (global Dune__exe__Parameters!))
                                                 (field_imm 0
                                                   (global Dune__exe__StringMap!))
                                                 (field_imm 1 *match*/2683)))
                                             already_seen/1511)))
                                       (field_imm 0
                                         (global Dune__exe__StringSet!))
                                       (field_imm 1 param/1514)))
                                   (apply
                                     (field_imm 2
                                       (global Dune__exe__Option!))
                                     (function terminal/1513 : int
                                       (apply check_identifier_reference/1489
                                         1 (field_imm 0 terminal/1513)
                                         (field_imm 1 terminal/1513)))
                                     (field_imm 3 param/1514))))
                               (field_imm 6 prule/1488))
                             (if
                               (&& (field_int 1 prule/1488)
                                 (apply
                                   (field_imm 29
                                     (global Dune__exe__StringMap!))
                                   k/1487 (field_imm 3 grammar/1461)))
                               (apply
                                 (field_imm 5 (global Dune__exe__Error!))
                                 (field_imm 3 prule/1488)
                                 [0:
                                  [2:
                                   0
                                   [11:
                                    " cannot be both a start symbol and inlined."
                                    0]]
                                  "%s cannot be both a start symbol and inlined."]
                                 k/1487)
                               0)
                             (apply
                               (field_imm 39
                                 (global Dune__exe__PartialGrammar!))
                               prule/1488))))
                       (field_imm 9 grammar/1461))
                     (if (not (field_imm 39 (global Dune__exe__Settings!)))
                       (let
                         (*match*/2678 =
                            (field_imm 1 (global Dune__exe__Settings!)))
                         (catch
                           (if (isint *match*/2678)
                             (if *match*/2678 0 (exit 44)) (exit 44))
                          with (44)
                           (apply
                             (field_imm 21 (global Dune__exe__StringMap!))
                             (function token/1575 param/1577 : int
                               (if
                                 (not
                                   (||
                                     (apply
                                       (field_imm 29
                                         (global Dune__exe__StringSet!))
                                       token/1575
                                       (field_mut 0 used_tokens/1483))
                                     (apply
                                       (field_imm 29
                                         (global Dune__exe__StringSet!))
                                       token/1575
                                       (field_imm 38
                                         (global Dune__exe__Settings!)))))
                                 (apply
                                   (field_imm 7 (global Dune__exe__Error!))
                                   (makeblock 0 (field_imm 2 param/1577) 0)
                                   [0:
                                    [11:
                                     "the token "
                                     [2: 0 [11: " is unused." 0]]]
                                    "the token %s is unused."]
                                   token/1575)
                                 0))
                             (field_imm 5 grammar/1461))))
                       0)))))))))
    (setfield_ptr(root-init) 42 (global Dune__exe__PartialGrammar!)
      check_parameterized_grammar_is_well_defined/1459))
  (let
    (join_partial_grammars/1578 =
       (function pgs/1580
         (let
           (pgs/1581 =
              (apply (field_imm 0 (global Dune__exe__ExpandTokenAliases!))
                pgs/1580)
            grammar/1583 =
              (apply (field_imm 25 (global Stdlib__List!))
                (field_imm 38 (global Dune__exe__PartialGrammar!))
                (field_imm 37 (global Dune__exe__PartialGrammar!)) pgs/1581)
            symbols/1584 =
              (apply (field_imm 19 (global Stdlib__List!))
                (apply (field_imm 35 (global Dune__exe__PartialGrammar!))
                  grammar/1583)
                pgs/1581)
            tpgs/1585 =
              (apply (field_imm 57 (global Stdlib__List!)) symbols/1584
                pgs/1581)
            rules/1586 =
              (apply (field_imm 36 (global Dune__exe__PartialGrammar!))
                symbols/1584 tpgs/1585)
            grammar/1587 =
              (makeblock 0 (field_imm 0 grammar/1583)
                (field_imm 1 grammar/1583) (field_imm 2 grammar/1583)
                (field_imm 3 grammar/1583) (field_imm 4 grammar/1583)
                (field_imm 5 grammar/1583) (field_imm 6 grammar/1583)
                (field_imm 7 grammar/1583) (field_imm 8 grammar/1583)
                rules/1586))
           (seq
             (apply (field_imm 42 (global Dune__exe__PartialGrammar!))
               grammar/1587)
             grammar/1587))))
    (setfield_ptr(root-init) 0 (global Dune__exe__PartialGrammar!)
      join_partial_grammars/1578))
  0)
