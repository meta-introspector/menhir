[
  structure_item (src/misc.ml[14,994+0]..[18,1046+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[14,994+4]..[14,994+10])
          Ppat_var "single" (src/misc.ml[14,994+4]..[14,994+10])
        expression (src/misc.ml[14,994+13]..[18,1046+18])
          Pexp_function
          [
            <case>
              pattern (src/misc.ml[15,1016+4]..[15,1016+9])
                Ppat_construct "::" (src/misc.ml[15,1016+6]..[15,1016+9]) ghost
                Some
                  []
                  pattern (src/misc.ml[15,1016+6]..[15,1016+9]) ghost
                    Ppat_tuple
                    [
                      pattern (src/misc.ml[15,1016+6]..[15,1016+7])
                        Ppat_var "x" (src/misc.ml[15,1016+6]..[15,1016+7])
                      pattern (src/misc.ml[15,1016+8]..[15,1016+9]) ghost
                        Ppat_construct "[]" (src/misc.ml[15,1016+8]..[15,1016+9]) ghost
                        None
                    ]
              expression (src/misc.ml[16,1029+6]..[16,1029+7])
                Pexp_ident "x" (src/misc.ml[16,1029+6]..[16,1029+7])
            <case>
              pattern (src/misc.ml[17,1037+4]..[17,1037+5])
                Ppat_any
              expression (src/misc.ml[18,1046+6]..[18,1046+18])
                Pexp_assert
                expression (src/misc.ml[18,1046+13]..[18,1046+18])
                  Pexp_construct "false" (src/misc.ml[18,1046+13]..[18,1046+18])
                  None
          ]
    ]
  structure_item (src/misc.ml[20,1066+0]..[25,1152+27])
    Pstr_value Rec
    [
      <def>
        pattern (src/misc.ml[20,1066+8]..[20,1066+12])
          Ppat_var "mapd" (src/misc.ml[20,1066+8]..[20,1066+12])
        expression (src/misc.ml[20,1066+13]..[25,1152+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[20,1066+13]..[20,1066+14])
            Ppat_var "f" (src/misc.ml[20,1066+13]..[20,1066+14])
          expression (src/misc.ml[20,1066+17]..[25,1152+27])
            Pexp_function
            [
              <case>
                pattern (src/misc.ml[21,1092+4]..[21,1092+6])
                  Ppat_construct "[]" (src/misc.ml[21,1092+4]..[21,1092+6])
                  None
                expression (src/misc.ml[22,1102+6]..[22,1102+8])
                  Pexp_construct "[]" (src/misc.ml[22,1102+6]..[22,1102+8])
                  None
              <case>
                pattern (src/misc.ml[23,1111+4]..[23,1111+11])
                  Ppat_construct "::" (src/misc.ml[23,1111+6]..[23,1111+8])
                  Some
                    []
                    pattern (src/misc.ml[23,1111+4]..[23,1111+11]) ghost
                      Ppat_tuple
                      [
                        pattern (src/misc.ml[23,1111+4]..[23,1111+5])
                          Ppat_var "x" (src/misc.ml[23,1111+4]..[23,1111+5])
                        pattern (src/misc.ml[23,1111+9]..[23,1111+11])
                          Ppat_var "xs" (src/misc.ml[23,1111+9]..[23,1111+11])
                      ]
                expression (src/misc.ml[24,1126+6]..[25,1152+27])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/misc.ml[24,1126+10]..[24,1126+16])
                        Ppat_tuple
                        [
                          pattern (src/misc.ml[24,1126+10]..[24,1126+12])
                            Ppat_var "y1" (src/misc.ml[24,1126+10]..[24,1126+12])
                          pattern (src/misc.ml[24,1126+14]..[24,1126+16])
                            Ppat_var "y2" (src/misc.ml[24,1126+14]..[24,1126+16])
                        ]
                      expression (src/misc.ml[24,1126+19]..[24,1126+22])
                        Pexp_apply
                        expression (src/misc.ml[24,1126+19]..[24,1126+20])
                          Pexp_ident "f" (src/misc.ml[24,1126+19]..[24,1126+20])
                        [
                          <arg>
                          Nolabel
                            expression (src/misc.ml[24,1126+21]..[24,1126+22])
                              Pexp_ident "x" (src/misc.ml[24,1126+21]..[24,1126+22])
                        ]
                  ]
                  expression (src/misc.ml[25,1152+6]..[25,1152+27])
                    Pexp_construct "::" (src/misc.ml[25,1152+9]..[25,1152+11])
                    Some
                      expression (src/misc.ml[25,1152+6]..[25,1152+27]) ghost
                        Pexp_tuple
                        [
                          expression (src/misc.ml[25,1152+6]..[25,1152+8])
                            Pexp_ident "y1" (src/misc.ml[25,1152+6]..[25,1152+8])
                          expression (src/misc.ml[25,1152+12]..[25,1152+27])
                            Pexp_construct "::" (src/misc.ml[25,1152+15]..[25,1152+17])
                            Some
                              expression (src/misc.ml[25,1152+12]..[25,1152+27]) ghost
                                Pexp_tuple
                                [
                                  expression (src/misc.ml[25,1152+12]..[25,1152+14])
                                    Pexp_ident "y2" (src/misc.ml[25,1152+12]..[25,1152+14])
                                  expression (src/misc.ml[25,1152+18]..[25,1152+27])
                                    Pexp_apply
                                    expression (src/misc.ml[25,1152+18]..[25,1152+22])
                                      Pexp_ident "mapd" (src/misc.ml[25,1152+18]..[25,1152+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/misc.ml[25,1152+23]..[25,1152+24])
                                          Pexp_ident "f" (src/misc.ml[25,1152+23]..[25,1152+24])
                                      <arg>
                                      Nolabel
                                        expression (src/misc.ml[25,1152+25]..[25,1152+27])
                                          Pexp_ident "xs" (src/misc.ml[25,1152+25]..[25,1152+27])
                                    ]
                                ]
                        ]
            ]
    ]
  structure_item (src/misc.ml[27,1181+0]..[29,1228+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[27,1181+4]..[27,1181+12])
          Ppat_var "tabulate" (src/misc.ml[27,1181+4]..[27,1181+12])
        expression (src/misc.ml[27,1181+13]..[29,1228+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[27,1181+13]..[27,1181+14])
            Ppat_var "n" (src/misc.ml[27,1181+13]..[27,1181+14])
          expression (src/misc.ml[27,1181+15]..[29,1228+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[27,1181+15]..[27,1181+16])
              Ppat_var "f" (src/misc.ml[27,1181+15]..[27,1181+16])
            expression (src/misc.ml[28,1200+2]..[29,1228+13])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/misc.ml[28,1200+6]..[28,1200+7])
                    Ppat_var "a" (src/misc.ml[28,1200+6]..[28,1200+7])
                  expression (src/misc.ml[28,1200+10]..[28,1200+24])
                    Pexp_apply
                    expression (src/misc.ml[28,1200+10]..[28,1200+20])
                      Pexp_ident "Array.init" (src/misc.ml[28,1200+10]..[28,1200+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/misc.ml[28,1200+21]..[28,1200+22])
                          Pexp_ident "n" (src/misc.ml[28,1200+21]..[28,1200+22])
                      <arg>
                      Nolabel
                        expression (src/misc.ml[28,1200+23]..[28,1200+24])
                          Pexp_ident "f" (src/misc.ml[28,1200+23]..[28,1200+24])
                    ]
              ]
              expression (src/misc.ml[29,1228+2]..[29,1228+13])
                Pexp_apply
                expression (src/misc.ml[29,1228+2]..[29,1228+11])
                  Pexp_ident "Array.get" (src/misc.ml[29,1228+2]..[29,1228+11])
                [
                  <arg>
                  Nolabel
                    expression (src/misc.ml[29,1228+12]..[29,1228+13])
                      Pexp_ident "a" (src/misc.ml[29,1228+12]..[29,1228+13])
                ]
    ]
  structure_item (src/misc.ml[31,1243+0]..[36,1353+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[31,1243+4]..[31,1243+7])
          Ppat_var "sum" (src/misc.ml[31,1243+4]..[31,1243+7])
        expression (src/misc.ml[31,1243+8]..[36,1353+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[31,1243+8]..[31,1243+9])
            Ppat_var "n" (src/misc.ml[31,1243+8]..[31,1243+9])
          expression (src/misc.ml[31,1243+10]..[36,1353+6]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[31,1243+10]..[31,1243+26])
              Ppat_constraint
              pattern (src/misc.ml[31,1243+11]..[31,1243+12])
                Ppat_var "f" (src/misc.ml[31,1243+11]..[31,1243+12])
              core_type (src/misc.ml[31,1243+15]..[31,1243+25])
                Ptyp_arrow
                Nolabel
                core_type (src/misc.ml[31,1243+15]..[31,1243+18])
                  Ptyp_constr "int" (src/misc.ml[31,1243+15]..[31,1243+18])
                  []
                core_type (src/misc.ml[31,1243+22]..[31,1243+25])
                  Ptyp_constr "int" (src/misc.ml[31,1243+22]..[31,1243+25])
                  []
            expression (src/misc.ml[31,1243+27]..[36,1353+6])
              Pexp_constraint
              expression (src/misc.ml[32,1278+2]..[36,1353+6])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/misc.ml[32,1278+6]..[32,1278+9])
                      Ppat_var "sum" (src/misc.ml[32,1278+6]..[32,1278+9])
                    expression (src/misc.ml[32,1278+12]..[32,1278+17])
                      Pexp_apply
                      expression (src/misc.ml[32,1278+12]..[32,1278+15])
                        Pexp_ident "ref" (src/misc.ml[32,1278+12]..[32,1278+15])
                      [
                        <arg>
                        Nolabel
                          expression (src/misc.ml[32,1278+16]..[32,1278+17])
                            Pexp_constant PConst_int (0,None)
                      ]
                ]
                expression (src/misc.ml[33,1299+2]..[36,1353+6])
                  Pexp_sequence
                  expression (src/misc.ml[33,1299+2]..[35,1345+6])
                    Pexp_for Up
                    pattern (src/misc.ml[33,1299+6]..[33,1299+7])
                      Ppat_var "x" (src/misc.ml[33,1299+6]..[33,1299+7])
                    expression (src/misc.ml[33,1299+10]..[33,1299+11])
                      Pexp_constant PConst_int (0,None)
                    expression (src/misc.ml[33,1299+15]..[33,1299+20])
                      Pexp_apply
                      expression (src/misc.ml[33,1299+17]..[33,1299+18])
                        Pexp_ident "-" (src/misc.ml[33,1299+17]..[33,1299+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/misc.ml[33,1299+15]..[33,1299+16])
                            Pexp_ident "n" (src/misc.ml[33,1299+15]..[33,1299+16])
                        <arg>
                        Nolabel
                          expression (src/misc.ml[33,1299+19]..[33,1299+20])
                            Pexp_constant PConst_int (1,None)
                      ]
                    expression (src/misc.ml[34,1323+4]..[34,1323+21])
                      Pexp_apply
                      expression (src/misc.ml[34,1323+8]..[34,1323+10])
                        Pexp_ident ":=" (src/misc.ml[34,1323+8]..[34,1323+10])
                      [
                        <arg>
                        Nolabel
                          expression (src/misc.ml[34,1323+4]..[34,1323+7])
                            Pexp_ident "sum" (src/misc.ml[34,1323+4]..[34,1323+7])
                        <arg>
                        Nolabel
                          expression (src/misc.ml[34,1323+11]..[34,1323+21])
                            Pexp_apply
                            expression (src/misc.ml[34,1323+16]..[34,1323+17])
                              Pexp_ident "+" (src/misc.ml[34,1323+16]..[34,1323+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/misc.ml[34,1323+11]..[34,1323+15])
                                  Pexp_apply
                                  expression (src/misc.ml[34,1323+11]..[34,1323+12])
                                    Pexp_ident "!" (src/misc.ml[34,1323+11]..[34,1323+12])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/misc.ml[34,1323+12]..[34,1323+15])
                                        Pexp_ident "sum" (src/misc.ml[34,1323+12]..[34,1323+15])
                                  ]
                              <arg>
                              Nolabel
                                expression (src/misc.ml[34,1323+18]..[34,1323+21])
                                  Pexp_apply
                                  expression (src/misc.ml[34,1323+18]..[34,1323+19])
                                    Pexp_ident "f" (src/misc.ml[34,1323+18]..[34,1323+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/misc.ml[34,1323+20]..[34,1323+21])
                                        Pexp_ident "x" (src/misc.ml[34,1323+20]..[34,1323+21])
                                  ]
                            ]
                      ]
                  expression (src/misc.ml[36,1353+2]..[36,1353+6])
                    Pexp_apply
                    expression (src/misc.ml[36,1353+2]..[36,1353+3])
                      Pexp_ident "!" (src/misc.ml[36,1353+2]..[36,1353+3])
                    [
                      <arg>
                      Nolabel
                        expression (src/misc.ml[36,1353+3]..[36,1353+6])
                          Pexp_ident "sum" (src/misc.ml[36,1353+3]..[36,1353+6])
                    ]
              core_type (src/misc.ml[31,1243+29]..[31,1243+32])
                Ptyp_constr "int" (src/misc.ml[31,1243+29]..[31,1243+32])
                []
    ]
  structure_item (src/misc.ml[38,1361+0]..[41,1419+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[38,1361+4]..[38,1361+15])
          Ppat_var "with_buffer" (src/misc.ml[38,1361+4]..[38,1361+15])
        expression (src/misc.ml[38,1361+16]..[41,1419+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[38,1361+16]..[38,1361+17])
            Ppat_var "n" (src/misc.ml[38,1361+16]..[38,1361+17])
          expression (src/misc.ml[38,1361+18]..[41,1419+19]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[38,1361+18]..[38,1361+19])
              Ppat_var "f" (src/misc.ml[38,1361+18]..[38,1361+19])
            expression (src/misc.ml[39,1383+2]..[41,1419+19])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/misc.ml[39,1383+6]..[39,1383+7])
                    Ppat_var "b" (src/misc.ml[39,1383+6]..[39,1383+7])
                  expression (src/misc.ml[39,1383+10]..[39,1383+25])
                    Pexp_apply
                    expression (src/misc.ml[39,1383+10]..[39,1383+23])
                      Pexp_ident "Buffer.create" (src/misc.ml[39,1383+10]..[39,1383+23])
                    [
                      <arg>
                      Nolabel
                        expression (src/misc.ml[39,1383+24]..[39,1383+25])
                          Pexp_ident "n" (src/misc.ml[39,1383+24]..[39,1383+25])
                    ]
              ]
              expression (src/misc.ml[40,1412+2]..[41,1419+19])
                Pexp_sequence
                expression (src/misc.ml[40,1412+2]..[40,1412+5])
                  Pexp_apply
                  expression (src/misc.ml[40,1412+2]..[40,1412+3])
                    Pexp_ident "f" (src/misc.ml[40,1412+2]..[40,1412+3])
                  [
                    <arg>
                    Nolabel
                      expression (src/misc.ml[40,1412+4]..[40,1412+5])
                        Pexp_ident "b" (src/misc.ml[40,1412+4]..[40,1412+5])
                  ]
                expression (src/misc.ml[41,1419+2]..[41,1419+19])
                  Pexp_apply
                  expression (src/misc.ml[41,1419+2]..[41,1419+17])
                    Pexp_ident "Buffer.contents" (src/misc.ml[41,1419+2]..[41,1419+17])
                  [
                    <arg>
                    Nolabel
                      expression (src/misc.ml[41,1419+18]..[41,1419+19])
                        Pexp_ident "b" (src/misc.ml[41,1419+18]..[41,1419+19])
                  ]
    ]
  structure_item (src/misc.ml[43,1440+0]..[43,1440+35])
    Pstr_type Rec
    [
      type_declaration "iter" (src/misc.ml[43,1440+8]..[43,1440+12]) (src/misc.ml[43,1440+0]..[43,1440+35])
        ptype_params =
          [
            core_type (src/misc.ml[43,1440+5]..[43,1440+7])
              Ptyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/misc.ml[43,1440+15]..[43,1440+35])
              Ptyp_arrow
              Nolabel
              core_type (src/misc.ml[43,1440+16]..[43,1440+26])
                Ptyp_arrow
                Nolabel
                core_type (src/misc.ml[43,1440+16]..[43,1440+18])
                  Ptyp_var a
                core_type (src/misc.ml[43,1440+22]..[43,1440+26])
                  Ptyp_constr "unit" (src/misc.ml[43,1440+22]..[43,1440+26])
                  []
              core_type (src/misc.ml[43,1440+31]..[43,1440+35])
                Ptyp_constr "unit" (src/misc.ml[43,1440+31]..[43,1440+35])
                []
    ]
  structure_item (src/misc.ml[45,1477+0]..[58,1818+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[45,1477+4]..[45,1477+28])
          Ppat_var "separated_iter_to_string" (src/misc.ml[45,1477+4]..[45,1477+28])
        expression (src/misc.ml[45,1477+29]..[58,1818+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[45,1477+29]..[45,1477+36])
            Ppat_var "printer" (src/misc.ml[45,1477+29]..[45,1477+36])
          expression (src/misc.ml[45,1477+37]..[58,1818+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[45,1477+37]..[45,1477+46])
              Ppat_var "separator" (src/misc.ml[45,1477+37]..[45,1477+46])
            expression (src/misc.ml[45,1477+47]..[58,1818+3]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/misc.ml[45,1477+47]..[45,1477+51])
                Ppat_var "iter" (src/misc.ml[45,1477+47]..[45,1477+51])
              expression (src/misc.ml[46,1531+2]..[58,1818+3])
                Pexp_apply
                expression (src/misc.ml[46,1531+2]..[46,1531+13])
                  Pexp_ident "with_buffer" (src/misc.ml[46,1531+2]..[46,1531+13])
                [
                  <arg>
                  Nolabel
                    expression (src/misc.ml[46,1531+14]..[46,1531+16])
                      Pexp_constant PConst_int (32,None)
                  <arg>
                  Nolabel
                    expression (src/misc.ml[46,1531+17]..[58,1818+3])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/misc.ml[46,1531+22]..[46,1531+23])
                        Ppat_var "b" (src/misc.ml[46,1531+22]..[46,1531+23])
                      expression (src/misc.ml[47,1558+4]..[57,1812+5])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/misc.ml[47,1558+8]..[47,1558+13])
                              Ppat_var "first" (src/misc.ml[47,1558+8]..[47,1558+13])
                            expression (src/misc.ml[47,1558+16]..[47,1558+24])
                              Pexp_apply
                              expression (src/misc.ml[47,1558+16]..[47,1558+19])
                                Pexp_ident "ref" (src/misc.ml[47,1558+16]..[47,1558+19])
                              [
                                <arg>
                                Nolabel
                                  expression (src/misc.ml[47,1558+20]..[47,1558+24])
                                    Pexp_construct "true" (src/misc.ml[47,1558+20]..[47,1558+24])
                                    None
                              ]
                        ]
                        expression (src/misc.ml[48,1586+4]..[57,1812+5])
                          Pexp_apply
                          expression (src/misc.ml[48,1586+4]..[48,1586+8])
                            Pexp_ident "iter" (src/misc.ml[48,1586+4]..[48,1586+8])
                          [
                            <arg>
                            Nolabel
                              expression (src/misc.ml[48,1586+9]..[57,1812+5])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/misc.ml[48,1586+14]..[48,1586+15])
                                  Ppat_var "x" (src/misc.ml[48,1586+14]..[48,1586+15])
                                expression (src/misc.ml[49,1605+6]..[56,1802+9])
                                  Pexp_ifthenelse
                                  expression (src/misc.ml[49,1605+9]..[49,1605+15])
                                    Pexp_apply
                                    expression (src/misc.ml[49,1605+9]..[49,1605+10])
                                      Pexp_ident "!" (src/misc.ml[49,1605+9]..[49,1605+10])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/misc.ml[49,1605+10]..[49,1605+15])
                                          Pexp_ident "first" (src/misc.ml[49,1605+10]..[49,1605+15])
                                    ]
                                  expression (src/misc.ml[49,1605+21]..[52,1696+9])
                                    Pexp_sequence
                                    expression (src/misc.ml[50,1632+8]..[50,1632+39])
                                      Pexp_apply
                                      expression (src/misc.ml[50,1632+8]..[50,1632+25])
                                        Pexp_ident "Buffer.add_string" (src/misc.ml[50,1632+8]..[50,1632+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/misc.ml[50,1632+26]..[50,1632+27])
                                            Pexp_ident "b" (src/misc.ml[50,1632+26]..[50,1632+27])
                                        <arg>
                                        Nolabel
                                          expression (src/misc.ml[50,1632+28]..[50,1632+39])
                                            Pexp_apply
                                            expression (src/misc.ml[50,1632+29]..[50,1632+36])
                                              Pexp_ident "printer" (src/misc.ml[50,1632+29]..[50,1632+36])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/misc.ml[50,1632+37]..[50,1632+38])
                                                  Pexp_ident "x" (src/misc.ml[50,1632+37]..[50,1632+38])
                                            ]
                                      ]
                                    expression (src/misc.ml[51,1673+8]..[51,1673+22])
                                      Pexp_apply
                                      expression (src/misc.ml[51,1673+14]..[51,1673+16])
                                        Pexp_ident ":=" (src/misc.ml[51,1673+14]..[51,1673+16])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/misc.ml[51,1673+8]..[51,1673+13])
                                            Pexp_ident "first" (src/misc.ml[51,1673+8]..[51,1673+13])
                                        <arg>
                                        Nolabel
                                          expression (src/misc.ml[51,1673+17]..[51,1673+22])
                                            Pexp_construct "false" (src/misc.ml[51,1673+17]..[51,1673+22])
                                            None
                                      ]
                                  Some
                                    expression (src/misc.ml[53,1706+11]..[56,1802+9])
                                      Pexp_sequence
                                      expression (src/misc.ml[54,1723+8]..[54,1723+37])
                                        Pexp_apply
                                        expression (src/misc.ml[54,1723+8]..[54,1723+25])
                                          Pexp_ident "Buffer.add_string" (src/misc.ml[54,1723+8]..[54,1723+25])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/misc.ml[54,1723+26]..[54,1723+27])
                                              Pexp_ident "b" (src/misc.ml[54,1723+26]..[54,1723+27])
                                          <arg>
                                          Nolabel
                                            expression (src/misc.ml[54,1723+28]..[54,1723+37])
                                              Pexp_ident "separator" (src/misc.ml[54,1723+28]..[54,1723+37])
                                        ]
                                      expression (src/misc.ml[55,1762+8]..[55,1762+39])
                                        Pexp_apply
                                        expression (src/misc.ml[55,1762+8]..[55,1762+25])
                                          Pexp_ident "Buffer.add_string" (src/misc.ml[55,1762+8]..[55,1762+25])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/misc.ml[55,1762+26]..[55,1762+27])
                                              Pexp_ident "b" (src/misc.ml[55,1762+26]..[55,1762+27])
                                          <arg>
                                          Nolabel
                                            expression (src/misc.ml[55,1762+28]..[55,1762+39])
                                              Pexp_apply
                                              expression (src/misc.ml[55,1762+29]..[55,1762+36])
                                                Pexp_ident "printer" (src/misc.ml[55,1762+29]..[55,1762+36])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/misc.ml[55,1762+37]..[55,1762+38])
                                                    Pexp_ident "x" (src/misc.ml[55,1762+37]..[55,1762+38])
                                              ]
                                        ]
                          ]
                ]
    ]
  structure_item (src/misc.ml[60,1823+0]..[61,1875+70])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[60,1823+4]..[60,1823+28])
          Ppat_var "separated_list_to_string" (src/misc.ml[60,1823+4]..[60,1823+28])
        expression (src/misc.ml[60,1823+29]..[61,1875+70]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[60,1823+29]..[60,1823+36])
            Ppat_var "printer" (src/misc.ml[60,1823+29]..[60,1823+36])
          expression (src/misc.ml[60,1823+37]..[61,1875+70]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[60,1823+37]..[60,1823+46])
              Ppat_var "separator" (src/misc.ml[60,1823+37]..[60,1823+46])
            expression (src/misc.ml[60,1823+47]..[61,1875+70]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/misc.ml[60,1823+47]..[60,1823+49])
                Ppat_var "xs" (src/misc.ml[60,1823+47]..[60,1823+49])
              expression (src/misc.ml[61,1875+2]..[61,1875+70])
                Pexp_apply
                expression (src/misc.ml[61,1875+2]..[61,1875+26])
                  Pexp_ident "separated_iter_to_string" (src/misc.ml[61,1875+2]..[61,1875+26])
                [
                  <arg>
                  Nolabel
                    expression (src/misc.ml[61,1875+27]..[61,1875+34])
                      Pexp_ident "printer" (src/misc.ml[61,1875+27]..[61,1875+34])
                  <arg>
                  Nolabel
                    expression (src/misc.ml[61,1875+35]..[61,1875+44])
                      Pexp_ident "separator" (src/misc.ml[61,1875+35]..[61,1875+44])
                  <arg>
                  Nolabel
                    expression (src/misc.ml[61,1875+45]..[61,1875+70])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/misc.ml[61,1875+50]..[61,1875+51])
                        Ppat_var "f" (src/misc.ml[61,1875+50]..[61,1875+51])
                      expression (src/misc.ml[61,1875+55]..[61,1875+69])
                        Pexp_apply
                        expression (src/misc.ml[61,1875+55]..[61,1875+64])
                          Pexp_ident "List.iter" (src/misc.ml[61,1875+55]..[61,1875+64])
                        [
                          <arg>
                          Nolabel
                            expression (src/misc.ml[61,1875+65]..[61,1875+66])
                              Pexp_ident "f" (src/misc.ml[61,1875+65]..[61,1875+66])
                          <arg>
                          Nolabel
                            expression (src/misc.ml[61,1875+67]..[61,1875+69])
                              Pexp_ident "xs" (src/misc.ml[61,1875+67]..[61,1875+69])
                        ]
                ]
    ]
  structure_item (src/misc.ml[63,1947+0]..[73,2219+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[63,1947+4]..[63,1947+11])
          Ppat_var "inverse" (src/misc.ml[63,1947+4]..[63,1947+11])
        expression (src/misc.ml[63,1947+12]..[73,2219+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[63,1947+12]..[63,1947+26])
            Ppat_constraint
            pattern (src/misc.ml[63,1947+13]..[63,1947+14])
              Ppat_var "a" (src/misc.ml[63,1947+13]..[63,1947+14])
            core_type (src/misc.ml[63,1947+17]..[63,1947+25])
              Ptyp_constr "array" (src/misc.ml[63,1947+20]..[63,1947+25])
              [
                core_type (src/misc.ml[63,1947+17]..[63,1947+19])
                  Ptyp_var a
              ]
          expression (src/misc.ml[63,1947+27]..[73,2219+18])
            Pexp_constraint
            expression (src/misc.ml[64,1988+2]..[73,2219+18])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/misc.ml[64,1988+6]..[64,1988+11])
                    Ppat_var "table" (src/misc.ml[64,1988+6]..[64,1988+11])
                  expression (src/misc.ml[64,1988+14]..[64,1988+45])
                    Pexp_apply
                    expression (src/misc.ml[64,1988+14]..[64,1988+28])
                      Pexp_ident "Hashtbl.create" (src/misc.ml[64,1988+14]..[64,1988+28])
                    [
                      <arg>
                      Nolabel
                        expression (src/misc.ml[64,1988+29]..[64,1988+45])
                          Pexp_apply
                          expression (src/misc.ml[64,1988+30]..[64,1988+42])
                            Pexp_ident "Array.length" (src/misc.ml[64,1988+30]..[64,1988+42])
                          [
                            <arg>
                            Nolabel
                              expression (src/misc.ml[64,1988+43]..[64,1988+44])
                                Pexp_ident "a" (src/misc.ml[64,1988+43]..[64,1988+44])
                          ]
                    ]
              ]
              expression (src/misc.ml[65,2037+2]..[73,2219+18])
                Pexp_sequence
                expression (src/misc.ml[65,2037+2]..[68,2138+5])
                  Pexp_apply
                  expression (src/misc.ml[65,2037+2]..[65,2037+13])
                    Pexp_ident "Array.iteri" (src/misc.ml[65,2037+2]..[65,2037+13])
                  [
                    <arg>
                    Nolabel
                      expression (src/misc.ml[65,2037+14]..[68,2138+3])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/misc.ml[65,2037+19]..[65,2037+20])
                          Ppat_var "i" (src/misc.ml[65,2037+19]..[65,2037+20])
                        expression (src/misc.ml[65,2037+21]..[67,2109+28]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/misc.ml[65,2037+21]..[65,2037+25])
                            Ppat_var "data" (src/misc.ml[65,2037+21]..[65,2037+25])
                          expression (src/misc.ml[66,2066+4]..[67,2109+28])
                            Pexp_sequence
                            expression (src/misc.ml[66,2066+4]..[66,2066+41])
                              Pexp_assert
                              expression (src/misc.ml[66,2066+11]..[66,2066+41])
                                Pexp_apply
                                expression (src/misc.ml[66,2066+12]..[66,2066+15])
                                  Pexp_ident "not" (src/misc.ml[66,2066+12]..[66,2066+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/misc.ml[66,2066+16]..[66,2066+40])
                                      Pexp_apply
                                      expression (src/misc.ml[66,2066+17]..[66,2066+28])
                                        Pexp_ident "Hashtbl.mem" (src/misc.ml[66,2066+17]..[66,2066+28])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/misc.ml[66,2066+29]..[66,2066+34])
                                            Pexp_ident "table" (src/misc.ml[66,2066+29]..[66,2066+34])
                                        <arg>
                                        Nolabel
                                          expression (src/misc.ml[66,2066+35]..[66,2066+39])
                                            Pexp_ident "data" (src/misc.ml[66,2066+35]..[66,2066+39])
                                      ]
                                ]
                            expression (src/misc.ml[67,2109+4]..[67,2109+28])
                              Pexp_apply
                              expression (src/misc.ml[67,2109+4]..[67,2109+15])
                                Pexp_ident "Hashtbl.add" (src/misc.ml[67,2109+4]..[67,2109+15])
                              [
                                <arg>
                                Nolabel
                                  expression (src/misc.ml[67,2109+16]..[67,2109+21])
                                    Pexp_ident "table" (src/misc.ml[67,2109+16]..[67,2109+21])
                                <arg>
                                Nolabel
                                  expression (src/misc.ml[67,2109+22]..[67,2109+26])
                                    Pexp_ident "data" (src/misc.ml[67,2109+22]..[67,2109+26])
                                <arg>
                                Nolabel
                                  expression (src/misc.ml[67,2109+27]..[67,2109+28])
                                    Pexp_ident "i" (src/misc.ml[67,2109+27]..[67,2109+28])
                              ]
                    <arg>
                    Nolabel
                      expression (src/misc.ml[68,2138+4]..[68,2138+5])
                        Pexp_ident "a" (src/misc.ml[68,2138+4]..[68,2138+5])
                  ]
                expression (src/misc.ml[69,2145+2]..[73,2219+18])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/misc.ml[69,2145+6]..[69,2145+10])
                    Ppat_var "data" (src/misc.ml[69,2145+6]..[69,2145+10])
                  expression (src/misc.ml[70,2159+4]..[73,2219+18])
                    Pexp_try
                    expression (src/misc.ml[71,2167+6]..[71,2167+29])
                      Pexp_apply
                      expression (src/misc.ml[71,2167+6]..[71,2167+18])
                        Pexp_ident "Hashtbl.find" (src/misc.ml[71,2167+6]..[71,2167+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/misc.ml[71,2167+19]..[71,2167+24])
                            Pexp_ident "table" (src/misc.ml[71,2167+19]..[71,2167+24])
                        <arg>
                        Nolabel
                          expression (src/misc.ml[71,2167+25]..[71,2167+29])
                            Pexp_ident "data" (src/misc.ml[71,2167+25]..[71,2167+29])
                      ]
                    [
                      <case>
                        pattern (src/misc.ml[72,2197+9]..[72,2197+18])
                          Ppat_construct "Not_found" (src/misc.ml[72,2197+9]..[72,2197+18])
                          None
                        expression (src/misc.ml[73,2219+6]..[73,2219+18])
                          Pexp_assert
                          expression (src/misc.ml[73,2219+13]..[73,2219+18])
                            Pexp_construct "false" (src/misc.ml[73,2219+13]..[73,2219+18])
                            None
                    ]
            core_type (src/misc.ml[63,1947+29]..[63,1947+38])
              Ptyp_arrow
              Nolabel
              core_type (src/misc.ml[63,1947+29]..[63,1947+31])
                Ptyp_var a
              core_type (src/misc.ml[63,1947+35]..[63,1947+38])
                Ptyp_constr "int" (src/misc.ml[63,1947+35]..[63,1947+38])
                []
    ]
  structure_item (src/misc.ml[75,2239+0]..[78,2288+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[75,2239+4]..[75,2239+17])
          Ppat_var "support_assoc" (src/misc.ml[75,2239+4]..[75,2239+17])
        expression (src/misc.ml[75,2239+18]..[78,2288+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[75,2239+18]..[75,2239+19])
            Ppat_var "l" (src/misc.ml[75,2239+18]..[75,2239+19])
          expression (src/misc.ml[75,2239+20]..[78,2288+21]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[75,2239+20]..[75,2239+21])
              Ppat_var "x" (src/misc.ml[75,2239+20]..[75,2239+21])
            expression (src/misc.ml[76,2263+2]..[78,2288+21])
              Pexp_try
              expression (src/misc.ml[77,2269+4]..[77,2269+18])
                Pexp_apply
                expression (src/misc.ml[77,2269+4]..[77,2269+14])
                  Pexp_ident "List.assoc" (src/misc.ml[77,2269+4]..[77,2269+14])
                [
                  <arg>
                  Nolabel
                    expression (src/misc.ml[77,2269+15]..[77,2269+16])
                      Pexp_ident "x" (src/misc.ml[77,2269+15]..[77,2269+16])
                  <arg>
                  Nolabel
                    expression (src/misc.ml[77,2269+17]..[77,2269+18])
                      Pexp_ident "l" (src/misc.ml[77,2269+17]..[77,2269+18])
                ]
              [
                <case>
                  pattern (src/misc.ml[78,2288+7]..[78,2288+16])
                    Ppat_construct "Not_found" (src/misc.ml[78,2288+7]..[78,2288+16])
                    None
                  expression (src/misc.ml[78,2288+20]..[78,2288+21])
                    Pexp_ident "x" (src/misc.ml[78,2288+20]..[78,2288+21])
              ]
    ]
  structure_item (src/misc.ml[84,2485+0]..[92,2679+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[84,2485+4]..[84,2485+15])
          Ppat_var "materialize" (src/misc.ml[84,2485+4]..[84,2485+15])
        expression (src/misc.ml[84,2485+16]..[92,2679+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[84,2485+16]..[84,2485+51])
            Ppat_constraint
            pattern (src/misc.ml[84,2485+17]..[84,2485+22])
              Ppat_var "table" (src/misc.ml[84,2485+17]..[84,2485+22])
            core_type (src/misc.ml[84,2485+25]..[84,2485+50])
              Ptyp_constr "Hashtbl.t" (src/misc.ml[84,2485+41]..[84,2485+50])
              [
                core_type (src/misc.ml[84,2485+26]..[84,2485+28])
                  Ptyp_var a
                core_type (src/misc.ml[84,2485+30]..[84,2485+39])
                  Ptyp_constr "option" (src/misc.ml[84,2485+33]..[84,2485+39])
                  [
                    core_type (src/misc.ml[84,2485+30]..[84,2485+32])
                      Ptyp_var a
                  ]
              ]
          expression (src/misc.ml[84,2485+52]..[92,2679+8]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[84,2485+52]..[84,2485+60])
              Ppat_constraint
              pattern (src/misc.ml[84,2485+53]..[84,2485+54])
                Ppat_var "x" (src/misc.ml[84,2485+53]..[84,2485+54])
              core_type (src/misc.ml[84,2485+57]..[84,2485+59])
                Ptyp_var a
            expression (src/misc.ml[84,2485+61]..[92,2679+8])
              Pexp_constraint
              expression (src/misc.ml[85,2558+2]..[92,2679+8])
                Pexp_let Rec
                [
                  <def>
                    pattern (src/misc.ml[85,2558+10]..[85,2558+14])
                      Ppat_var "loop" (src/misc.ml[85,2558+10]..[85,2558+14])
                    expression (src/misc.ml[85,2558+15]..[90,2654+19]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/misc.ml[85,2558+15]..[85,2558+16])
                        Ppat_var "x" (src/misc.ml[85,2558+15]..[85,2558+16])
                      expression (src/misc.ml[86,2577+4]..[90,2654+19])
                        Pexp_match
                        expression (src/misc.ml[86,2577+10]..[86,2577+30])
                          Pexp_apply
                          expression (src/misc.ml[86,2577+10]..[86,2577+22])
                            Pexp_ident "Hashtbl.find" (src/misc.ml[86,2577+10]..[86,2577+22])
                          [
                            <arg>
                            Nolabel
                              expression (src/misc.ml[86,2577+23]..[86,2577+28])
                                Pexp_ident "table" (src/misc.ml[86,2577+23]..[86,2577+28])
                            <arg>
                            Nolabel
                              expression (src/misc.ml[86,2577+29]..[86,2577+30])
                                Pexp_ident "x" (src/misc.ml[86,2577+29]..[86,2577+30])
                          ]
                        [
                          <case>
                            pattern (src/misc.ml[87,2613+6]..[87,2613+10])
                              Ppat_construct "None" (src/misc.ml[87,2613+6]..[87,2613+10])
                              None
                            expression (src/misc.ml[88,2627+8]..[88,2627+10])
                              Pexp_construct "[]" (src/misc.ml[88,2627+8]..[88,2627+10])
                              None
                          <case>
                            pattern (src/misc.ml[89,2638+6]..[89,2638+12])
                              Ppat_construct "Some" (src/misc.ml[89,2638+6]..[89,2638+10])
                              Some
                                []
                                pattern (src/misc.ml[89,2638+11]..[89,2638+12])
                                  Ppat_var "x" (src/misc.ml[89,2638+11]..[89,2638+12])
                            expression (src/misc.ml[90,2654+8]..[90,2654+19])
                              Pexp_construct "::" (src/misc.ml[90,2654+10]..[90,2654+12])
                              Some
                                expression (src/misc.ml[90,2654+8]..[90,2654+19]) ghost
                                  Pexp_tuple
                                  [
                                    expression (src/misc.ml[90,2654+8]..[90,2654+9])
                                      Pexp_ident "x" (src/misc.ml[90,2654+8]..[90,2654+9])
                                    expression (src/misc.ml[90,2654+13]..[90,2654+19])
                                      Pexp_apply
                                      expression (src/misc.ml[90,2654+13]..[90,2654+17])
                                        Pexp_ident "loop" (src/misc.ml[90,2654+13]..[90,2654+17])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/misc.ml[90,2654+18]..[90,2654+19])
                                            Pexp_ident "x" (src/misc.ml[90,2654+18]..[90,2654+19])
                                      ]
                                  ]
                        ]
                ]
                expression (src/misc.ml[92,2679+2]..[92,2679+8])
                  Pexp_apply
                  expression (src/misc.ml[92,2679+2]..[92,2679+6])
                    Pexp_ident "loop" (src/misc.ml[92,2679+2]..[92,2679+6])
                  [
                    <arg>
                    Nolabel
                      expression (src/misc.ml[92,2679+7]..[92,2679+8])
                        Pexp_ident "x" (src/misc.ml[92,2679+7]..[92,2679+8])
                  ]
              core_type (src/misc.ml[84,2485+63]..[84,2485+70])
                Ptyp_constr "list" (src/misc.ml[84,2485+66]..[84,2485+70])
                [
                  core_type (src/misc.ml[84,2485+63]..[84,2485+65])
                    Ptyp_var a
                ]
    ]
  structure_item (src/misc.ml[97,2763+0]..[100,2814+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[97,2763+4]..[97,2763+10])
          Ppat_var "iterij" (src/misc.ml[97,2763+4]..[97,2763+10])
        expression (src/misc.ml[97,2763+11]..[100,2814+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[97,2763+11]..[97,2763+12])
            Ppat_var "i" (src/misc.ml[97,2763+11]..[97,2763+12])
          expression (src/misc.ml[97,2763+13]..[100,2814+6]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[97,2763+13]..[97,2763+14])
              Ppat_var "j" (src/misc.ml[97,2763+13]..[97,2763+14])
            expression (src/misc.ml[97,2763+15]..[100,2814+6]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/misc.ml[97,2763+15]..[97,2763+16])
                Ppat_var "f" (src/misc.ml[97,2763+15]..[97,2763+16])
              expression (src/misc.ml[98,2782+2]..[100,2814+6])
                Pexp_for Up
                pattern (src/misc.ml[98,2782+6]..[98,2782+7])
                  Ppat_var "x" (src/misc.ml[98,2782+6]..[98,2782+7])
                expression (src/misc.ml[98,2782+10]..[98,2782+11])
                  Pexp_ident "i" (src/misc.ml[98,2782+10]..[98,2782+11])
                expression (src/misc.ml[98,2782+15]..[98,2782+20])
                  Pexp_apply
                  expression (src/misc.ml[98,2782+17]..[98,2782+18])
                    Pexp_ident "-" (src/misc.ml[98,2782+17]..[98,2782+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/misc.ml[98,2782+15]..[98,2782+16])
                        Pexp_ident "j" (src/misc.ml[98,2782+15]..[98,2782+16])
                    <arg>
                    Nolabel
                      expression (src/misc.ml[98,2782+19]..[98,2782+20])
                        Pexp_constant PConst_int (1,None)
                  ]
                expression (src/misc.ml[99,2806+4]..[99,2806+7])
                  Pexp_apply
                  expression (src/misc.ml[99,2806+4]..[99,2806+5])
                    Pexp_ident "f" (src/misc.ml[99,2806+4]..[99,2806+5])
                  [
                    <arg>
                    Nolabel
                      expression (src/misc.ml[99,2806+6]..[99,2806+7])
                        Pexp_ident "x" (src/misc.ml[99,2806+6]..[99,2806+7])
                  ]
    ]
  structure_item (src/misc.ml[102,2822+0]..[103,2838+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[102,2822+4]..[102,2822+9])
          Ppat_var "iteri" (src/misc.ml[102,2822+4]..[102,2822+9])
        expression (src/misc.ml[102,2822+10]..[103,2838+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[102,2822+10]..[102,2822+11])
            Ppat_var "n" (src/misc.ml[102,2822+10]..[102,2822+11])
          expression (src/misc.ml[102,2822+12]..[103,2838+14]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[102,2822+12]..[102,2822+13])
              Ppat_var "f" (src/misc.ml[102,2822+12]..[102,2822+13])
            expression (src/misc.ml[103,2838+2]..[103,2838+14])
              Pexp_apply
              expression (src/misc.ml[103,2838+2]..[103,2838+8])
                Pexp_ident "iterij" (src/misc.ml[103,2838+2]..[103,2838+8])
              [
                <arg>
                Nolabel
                  expression (src/misc.ml[103,2838+9]..[103,2838+10])
                    Pexp_constant PConst_int (0,None)
                <arg>
                Nolabel
                  expression (src/misc.ml[103,2838+11]..[103,2838+12])
                    Pexp_ident "n" (src/misc.ml[103,2838+11]..[103,2838+12])
                <arg>
                Nolabel
                  expression (src/misc.ml[103,2838+13]..[103,2838+14])
                    Pexp_ident "f" (src/misc.ml[103,2838+13]..[103,2838+14])
              ]
    ]
  structure_item (src/misc.ml[105,2854+0]..[109,2939+8])
    Pstr_value Rec
    [
      <def>
        pattern (src/misc.ml[105,2854+8]..[105,2854+14])
          Ppat_var "foldij" (src/misc.ml[105,2854+8]..[105,2854+14])
        expression (src/misc.ml[105,2854+15]..[109,2939+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[105,2854+15]..[105,2854+16])
            Ppat_var "i" (src/misc.ml[105,2854+15]..[105,2854+16])
          expression (src/misc.ml[105,2854+17]..[109,2939+8]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[105,2854+17]..[105,2854+18])
              Ppat_var "j" (src/misc.ml[105,2854+17]..[105,2854+18])
            expression (src/misc.ml[105,2854+19]..[109,2939+8]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/misc.ml[105,2854+19]..[105,2854+20])
                Ppat_var "f" (src/misc.ml[105,2854+19]..[105,2854+20])
              expression (src/misc.ml[105,2854+21]..[109,2939+8]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/misc.ml[105,2854+21]..[105,2854+25])
                  Ppat_var "accu" (src/misc.ml[105,2854+21]..[105,2854+25])
                expression (src/misc.ml[106,2882+2]..[109,2939+8])
                  Pexp_ifthenelse
                  expression (src/misc.ml[106,2882+5]..[106,2882+10])
                    Pexp_apply
                    expression (src/misc.ml[106,2882+7]..[106,2882+8])
                      Pexp_ident "<" (src/misc.ml[106,2882+7]..[106,2882+8])
                    [
                      <arg>
                      Nolabel
                        expression (src/misc.ml[106,2882+5]..[106,2882+6])
                          Pexp_ident "i" (src/misc.ml[106,2882+5]..[106,2882+6])
                      <arg>
                      Nolabel
                        expression (src/misc.ml[106,2882+9]..[106,2882+10])
                          Pexp_ident "j" (src/misc.ml[106,2882+9]..[106,2882+10])
                    ]
                  expression (src/misc.ml[107,2898+4]..[107,2898+33])
                    Pexp_apply
                    expression (src/misc.ml[107,2898+4]..[107,2898+10])
                      Pexp_ident "foldij" (src/misc.ml[107,2898+4]..[107,2898+10])
                    [
                      <arg>
                      Nolabel
                        expression (src/misc.ml[107,2898+11]..[107,2898+18])
                          Pexp_apply
                          expression (src/misc.ml[107,2898+14]..[107,2898+15])
                            Pexp_ident "+" (src/misc.ml[107,2898+14]..[107,2898+15])
                          [
                            <arg>
                            Nolabel
                              expression (src/misc.ml[107,2898+12]..[107,2898+13])
                                Pexp_ident "i" (src/misc.ml[107,2898+12]..[107,2898+13])
                            <arg>
                            Nolabel
                              expression (src/misc.ml[107,2898+16]..[107,2898+17])
                                Pexp_constant PConst_int (1,None)
                          ]
                      <arg>
                      Nolabel
                        expression (src/misc.ml[107,2898+19]..[107,2898+20])
                          Pexp_ident "j" (src/misc.ml[107,2898+19]..[107,2898+20])
                      <arg>
                      Nolabel
                        expression (src/misc.ml[107,2898+21]..[107,2898+22])
                          Pexp_ident "f" (src/misc.ml[107,2898+21]..[107,2898+22])
                      <arg>
                      Nolabel
                        expression (src/misc.ml[107,2898+23]..[107,2898+33])
                          Pexp_apply
                          expression (src/misc.ml[107,2898+24]..[107,2898+25])
                            Pexp_ident "f" (src/misc.ml[107,2898+24]..[107,2898+25])
                          [
                            <arg>
                            Nolabel
                              expression (src/misc.ml[107,2898+26]..[107,2898+27])
                                Pexp_ident "i" (src/misc.ml[107,2898+26]..[107,2898+27])
                            <arg>
                            Nolabel
                              expression (src/misc.ml[107,2898+28]..[107,2898+32])
                                Pexp_ident "accu" (src/misc.ml[107,2898+28]..[107,2898+32])
                          ]
                    ]
                  Some
                    expression (src/misc.ml[109,2939+4]..[109,2939+8])
                      Pexp_ident "accu" (src/misc.ml[109,2939+4]..[109,2939+8])
    ]
  structure_item (src/misc.ml[111,2949+0]..[112,2970+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[111,2949+4]..[111,2949+9])
          Ppat_var "foldi" (src/misc.ml[111,2949+4]..[111,2949+9])
        expression (src/misc.ml[111,2949+10]..[112,2970+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[111,2949+10]..[111,2949+11])
            Ppat_var "n" (src/misc.ml[111,2949+10]..[111,2949+11])
          expression (src/misc.ml[111,2949+12]..[112,2970+19]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[111,2949+12]..[111,2949+13])
              Ppat_var "f" (src/misc.ml[111,2949+12]..[111,2949+13])
            expression (src/misc.ml[111,2949+14]..[112,2970+19]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/misc.ml[111,2949+14]..[111,2949+18])
                Ppat_var "accu" (src/misc.ml[111,2949+14]..[111,2949+18])
              expression (src/misc.ml[112,2970+2]..[112,2970+19])
                Pexp_apply
                expression (src/misc.ml[112,2970+2]..[112,2970+8])
                  Pexp_ident "foldij" (src/misc.ml[112,2970+2]..[112,2970+8])
                [
                  <arg>
                  Nolabel
                    expression (src/misc.ml[112,2970+9]..[112,2970+10])
                      Pexp_constant PConst_int (0,None)
                  <arg>
                  Nolabel
                    expression (src/misc.ml[112,2970+11]..[112,2970+12])
                      Pexp_ident "n" (src/misc.ml[112,2970+11]..[112,2970+12])
                  <arg>
                  Nolabel
                    expression (src/misc.ml[112,2970+13]..[112,2970+14])
                      Pexp_ident "f" (src/misc.ml[112,2970+13]..[112,2970+14])
                  <arg>
                  Nolabel
                    expression (src/misc.ml[112,2970+15]..[112,2970+19])
                      Pexp_ident "accu" (src/misc.ml[112,2970+15]..[112,2970+19])
                ]
    ]
  structure_item (src/misc.ml[114,2991+0]..[118,3096+8])
    Pstr_value Rec
    [
      <def>
        pattern (src/misc.ml[114,2991+8]..[114,2991+19])
          Ppat_var "foldij_lazy" (src/misc.ml[114,2991+8]..[114,2991+19])
        expression (src/misc.ml[114,2991+20]..[118,3096+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[114,2991+20]..[114,2991+21])
            Ppat_var "i" (src/misc.ml[114,2991+20]..[114,2991+21])
          expression (src/misc.ml[114,2991+22]..[118,3096+8]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[114,2991+22]..[114,2991+23])
              Ppat_var "j" (src/misc.ml[114,2991+22]..[114,2991+23])
            expression (src/misc.ml[114,2991+24]..[118,3096+8]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/misc.ml[114,2991+24]..[114,2991+25])
                Ppat_var "f" (src/misc.ml[114,2991+24]..[114,2991+25])
              expression (src/misc.ml[114,2991+26]..[118,3096+8]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/misc.ml[114,2991+26]..[114,2991+30])
                  Ppat_var "accu" (src/misc.ml[114,2991+26]..[114,2991+30])
                expression (src/misc.ml[115,3024+2]..[118,3096+8])
                  Pexp_ifthenelse
                  expression (src/misc.ml[115,3024+5]..[115,3024+10])
                    Pexp_apply
                    expression (src/misc.ml[115,3024+7]..[115,3024+8])
                      Pexp_ident "<" (src/misc.ml[115,3024+7]..[115,3024+8])
                    [
                      <arg>
                      Nolabel
                        expression (src/misc.ml[115,3024+5]..[115,3024+6])
                          Pexp_ident "i" (src/misc.ml[115,3024+5]..[115,3024+6])
                      <arg>
                      Nolabel
                        expression (src/misc.ml[115,3024+9]..[115,3024+10])
                          Pexp_ident "j" (src/misc.ml[115,3024+9]..[115,3024+10])
                    ]
                  expression (src/misc.ml[116,3040+4]..[116,3040+48])
                    Pexp_apply
                    expression (src/misc.ml[116,3040+4]..[116,3040+5])
                      Pexp_ident "f" (src/misc.ml[116,3040+4]..[116,3040+5])
                    [
                      <arg>
                      Nolabel
                        expression (src/misc.ml[116,3040+6]..[116,3040+7])
                          Pexp_ident "i" (src/misc.ml[116,3040+6]..[116,3040+7])
                      <arg>
                      Nolabel
                        expression (src/misc.ml[116,3040+8]..[116,3040+48])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/misc.ml[116,3040+13]..[116,3040+15])
                            Ppat_construct "()" (src/misc.ml[116,3040+13]..[116,3040+15])
                            None
                          expression (src/misc.ml[116,3040+19]..[116,3040+47])
                            Pexp_apply
                            expression (src/misc.ml[116,3040+19]..[116,3040+30])
                              Pexp_ident "foldij_lazy" (src/misc.ml[116,3040+19]..[116,3040+30])
                            [
                              <arg>
                              Nolabel
                                expression (src/misc.ml[116,3040+31]..[116,3040+38])
                                  Pexp_apply
                                  expression (src/misc.ml[116,3040+34]..[116,3040+35])
                                    Pexp_ident "+" (src/misc.ml[116,3040+34]..[116,3040+35])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/misc.ml[116,3040+32]..[116,3040+33])
                                        Pexp_ident "i" (src/misc.ml[116,3040+32]..[116,3040+33])
                                    <arg>
                                    Nolabel
                                      expression (src/misc.ml[116,3040+36]..[116,3040+37])
                                        Pexp_constant PConst_int (1,None)
                                  ]
                              <arg>
                              Nolabel
                                expression (src/misc.ml[116,3040+39]..[116,3040+40])
                                  Pexp_ident "j" (src/misc.ml[116,3040+39]..[116,3040+40])
                              <arg>
                              Nolabel
                                expression (src/misc.ml[116,3040+41]..[116,3040+42])
                                  Pexp_ident "f" (src/misc.ml[116,3040+41]..[116,3040+42])
                              <arg>
                              Nolabel
                                expression (src/misc.ml[116,3040+43]..[116,3040+47])
                                  Pexp_ident "accu" (src/misc.ml[116,3040+43]..[116,3040+47])
                            ]
                    ]
                  Some
                    expression (src/misc.ml[118,3096+4]..[118,3096+8])
                      Pexp_ident "accu" (src/misc.ml[118,3096+4]..[118,3096+8])
    ]
  structure_item (src/misc.ml[122,3175+0]..[127,3271+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[122,3175+4]..[122,3175+9])
          Ppat_var "mapij" (src/misc.ml[122,3175+4]..[122,3175+9])
        expression (src/misc.ml[122,3175+10]..[127,3271+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[122,3175+10]..[122,3175+15])
            Ppat_var "start" (src/misc.ml[122,3175+10]..[122,3175+15])
          expression (src/misc.ml[122,3175+16]..[127,3271+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[122,3175+16]..[122,3175+17])
              Ppat_var "n" (src/misc.ml[122,3175+16]..[122,3175+17])
            expression (src/misc.ml[122,3175+18]..[127,3271+3]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/misc.ml[122,3175+18]..[122,3175+19])
                Ppat_var "f" (src/misc.ml[122,3175+18]..[122,3175+19])
              expression (src/misc.ml[123,3197+2]..[127,3271+3])
                Pexp_apply
                expression (src/misc.ml[123,3197+2]..[123,3197+10])
                  Pexp_ident "List.rev" (src/misc.ml[123,3197+2]..[123,3197+10])
                [
                  <arg>
                  Nolabel
                    expression (src/misc.ml[123,3197+11]..[127,3271+3])
                      Pexp_apply
                      expression (src/misc.ml[124,3210+4]..[124,3210+10])
                        Pexp_ident "foldij" (src/misc.ml[124,3210+4]..[124,3210+10])
                      [
                        <arg>
                        Nolabel
                          expression (src/misc.ml[124,3210+11]..[124,3210+16])
                            Pexp_ident "start" (src/misc.ml[124,3210+11]..[124,3210+16])
                        <arg>
                        Nolabel
                          expression (src/misc.ml[124,3210+17]..[124,3210+18])
                            Pexp_ident "n" (src/misc.ml[124,3210+17]..[124,3210+18])
                        <arg>
                        Nolabel
                          expression (src/misc.ml[124,3210+19]..[126,3262+5])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/misc.ml[124,3210+24]..[124,3210+25])
                              Ppat_var "i" (src/misc.ml[124,3210+24]..[124,3210+25])
                            expression (src/misc.ml[124,3210+26]..[125,3244+17]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/misc.ml[124,3210+26]..[124,3210+30])
                                Ppat_var "accu" (src/misc.ml[124,3210+26]..[124,3210+30])
                              expression (src/misc.ml[125,3244+6]..[125,3244+17])
                                Pexp_construct "::" (src/misc.ml[125,3244+10]..[125,3244+12])
                                Some
                                  expression (src/misc.ml[125,3244+6]..[125,3244+17]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/misc.ml[125,3244+6]..[125,3244+9])
                                        Pexp_apply
                                        expression (src/misc.ml[125,3244+6]..[125,3244+7])
                                          Pexp_ident "f" (src/misc.ml[125,3244+6]..[125,3244+7])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/misc.ml[125,3244+8]..[125,3244+9])
                                              Pexp_ident "i" (src/misc.ml[125,3244+8]..[125,3244+9])
                                        ]
                                      expression (src/misc.ml[125,3244+13]..[125,3244+17])
                                        Pexp_ident "accu" (src/misc.ml[125,3244+13]..[125,3244+17])
                                    ]
                        <arg>
                        Nolabel
                          expression (src/misc.ml[126,3262+6]..[126,3262+8])
                            Pexp_construct "[]" (src/misc.ml[126,3262+6]..[126,3262+8])
                            None
                      ]
                ]
    ]
  structure_item (src/misc.ml[131,3334+0]..[132,3349+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[131,3334+4]..[131,3334+8])
          Ppat_var "mapi" (src/misc.ml[131,3334+4]..[131,3334+8])
        expression (src/misc.ml[131,3334+9]..[132,3349+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[131,3334+9]..[131,3334+10])
            Ppat_var "n" (src/misc.ml[131,3334+9]..[131,3334+10])
          expression (src/misc.ml[131,3334+11]..[132,3349+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[131,3334+11]..[131,3334+12])
              Ppat_var "f" (src/misc.ml[131,3334+11]..[131,3334+12])
            expression (src/misc.ml[132,3349+2]..[132,3349+13])
              Pexp_apply
              expression (src/misc.ml[132,3349+2]..[132,3349+7])
                Pexp_ident "mapij" (src/misc.ml[132,3349+2]..[132,3349+7])
              [
                <arg>
                Nolabel
                  expression (src/misc.ml[132,3349+8]..[132,3349+9])
                    Pexp_constant PConst_int (0,None)
                <arg>
                Nolabel
                  expression (src/misc.ml[132,3349+10]..[132,3349+11])
                    Pexp_ident "n" (src/misc.ml[132,3349+10]..[132,3349+11])
                <arg>
                Nolabel
                  expression (src/misc.ml[132,3349+12]..[132,3349+13])
                    Pexp_ident "f" (src/misc.ml[132,3349+12]..[132,3349+13])
              ]
    ]
  structure_item (src/misc.ml[140,3641+0]..[150,3803+10])
    Pstr_value Rec
    [
      <def>
        pattern (src/misc.ml[140,3641+8]..[140,3641+13])
          Ppat_var "qfold" (src/misc.ml[140,3641+8]..[140,3641+13])
        expression (src/misc.ml[140,3641+14]..[150,3803+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[140,3641+14]..[140,3641+15])
            Ppat_var "f" (src/misc.ml[140,3641+14]..[140,3641+15])
          expression (src/misc.ml[140,3641+16]..[150,3803+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[140,3641+16]..[140,3641+20])
              Ppat_var "accu" (src/misc.ml[140,3641+16]..[140,3641+20])
            expression (src/misc.ml[140,3641+21]..[150,3803+10]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/misc.ml[140,3641+21]..[140,3641+22])
                Ppat_var "q" (src/misc.ml[140,3641+21]..[140,3641+22])
              expression (src/misc.ml[141,3666+2]..[150,3803+10])
                Pexp_match
                expression (src/misc.ml[142,3674+4]..[145,3732+10])
                  Pexp_try
                  expression (src/misc.ml[143,3682+6]..[143,3682+25])
                    Pexp_construct "Some" (src/misc.ml[143,3682+6]..[143,3682+10])
                    Some
                      expression (src/misc.ml[143,3682+11]..[143,3682+25])
                        Pexp_apply
                        expression (src/misc.ml[143,3682+12]..[143,3682+22])
                          Pexp_ident "Queue.take" (src/misc.ml[143,3682+12]..[143,3682+22])
                        [
                          <arg>
                          Nolabel
                            expression (src/misc.ml[143,3682+23]..[143,3682+24])
                              Pexp_ident "q" (src/misc.ml[143,3682+23]..[143,3682+24])
                        ]
                  [
                    <case>
                      pattern (src/misc.ml[144,3708+9]..[144,3708+20])
                        Ppat_construct "Queue.Empty" (src/misc.ml[144,3708+9]..[144,3708+20])
                        None
                      expression (src/misc.ml[145,3732+6]..[145,3732+10])
                        Pexp_construct "None" (src/misc.ml[145,3732+6]..[145,3732+10])
                        None
                  ]
                [
                  <case>
                    pattern (src/misc.ml[147,3750+4]..[147,3750+10])
                      Ppat_construct "Some" (src/misc.ml[147,3750+4]..[147,3750+8])
                      Some
                        []
                        pattern (src/misc.ml[147,3750+9]..[147,3750+10])
                          Ppat_var "x" (src/misc.ml[147,3750+9]..[147,3750+10])
                    expression (src/misc.ml[148,3764+6]..[148,3764+26])
                      Pexp_apply
                      expression (src/misc.ml[148,3764+6]..[148,3764+11])
                        Pexp_ident "qfold" (src/misc.ml[148,3764+6]..[148,3764+11])
                      [
                        <arg>
                        Nolabel
                          expression (src/misc.ml[148,3764+12]..[148,3764+13])
                            Pexp_ident "f" (src/misc.ml[148,3764+12]..[148,3764+13])
                        <arg>
                        Nolabel
                          expression (src/misc.ml[148,3764+14]..[148,3764+24])
                            Pexp_apply
                            expression (src/misc.ml[148,3764+15]..[148,3764+16])
                              Pexp_ident "f" (src/misc.ml[148,3764+15]..[148,3764+16])
                            [
                              <arg>
                              Nolabel
                                expression (src/misc.ml[148,3764+17]..[148,3764+21])
                                  Pexp_ident "accu" (src/misc.ml[148,3764+17]..[148,3764+21])
                              <arg>
                              Nolabel
                                expression (src/misc.ml[148,3764+22]..[148,3764+23])
                                  Pexp_ident "x" (src/misc.ml[148,3764+22]..[148,3764+23])
                            ]
                        <arg>
                        Nolabel
                          expression (src/misc.ml[148,3764+25]..[148,3764+26])
                            Pexp_ident "q" (src/misc.ml[148,3764+25]..[148,3764+26])
                      ]
                  <case>
                    pattern (src/misc.ml[149,3791+4]..[149,3791+8])
                      Ppat_construct "None" (src/misc.ml[149,3791+4]..[149,3791+8])
                      None
                    expression (src/misc.ml[150,3803+6]..[150,3803+10])
                      Pexp_ident "accu" (src/misc.ml[150,3803+6]..[150,3803+10])
                ]
    ]
  structure_item (src/misc.ml[156,3996+0]..[162,4090+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[156,3996+4]..[156,3996+9])
          Ppat_var "qiter" (src/misc.ml[156,3996+4]..[156,3996+9])
        expression (src/misc.ml[156,3996+10]..[162,4090+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[156,3996+10]..[156,3996+11])
            Ppat_var "f" (src/misc.ml[156,3996+10]..[156,3996+11])
          expression (src/misc.ml[156,3996+12]..[162,4090+6]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[156,3996+12]..[156,3996+13])
              Ppat_var "q" (src/misc.ml[156,3996+12]..[156,3996+13])
            expression (src/misc.ml[157,4012+2]..[162,4090+6])
              Pexp_try
              expression (src/misc.ml[158,4018+4]..[160,4059+8])
                Pexp_while
                expression (src/misc.ml[158,4018+10]..[158,4018+14])
                  Pexp_construct "true" (src/misc.ml[158,4018+10]..[158,4018+14])
                  None
                expression (src/misc.ml[159,4036+6]..[159,4036+22])
                  Pexp_apply
                  expression (src/misc.ml[159,4036+6]..[159,4036+7])
                    Pexp_ident "f" (src/misc.ml[159,4036+6]..[159,4036+7])
                  [
                    <arg>
                    Nolabel
                      expression (src/misc.ml[159,4036+8]..[159,4036+22])
                        Pexp_apply
                        expression (src/misc.ml[159,4036+9]..[159,4036+19])
                          Pexp_ident "Queue.take" (src/misc.ml[159,4036+9]..[159,4036+19])
                        [
                          <arg>
                          Nolabel
                            expression (src/misc.ml[159,4036+20]..[159,4036+21])
                              Pexp_ident "q" (src/misc.ml[159,4036+20]..[159,4036+21])
                        ]
                  ]
              [
                <case>
                  pattern (src/misc.ml[161,4068+7]..[161,4068+18])
                    Ppat_construct "Queue.Empty" (src/misc.ml[161,4068+7]..[161,4068+18])
                    None
                  expression (src/misc.ml[162,4090+4]..[162,4090+6])
                    Pexp_construct "()" (src/misc.ml[162,4090+4]..[162,4090+6])
                    None
              ]
    ]
  structure_item (src/misc.ml[164,4098+0]..[173,4269+17])
    Pstr_value Rec
    [
      <def>
        pattern (src/misc.ml[164,4098+8]..[164,4098+12])
          Ppat_var "smap" (src/misc.ml[164,4098+8]..[164,4098+12])
        expression (src/misc.ml[164,4098+13]..[173,4269+17]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[164,4098+13]..[164,4098+14])
            Ppat_var "f" (src/misc.ml[164,4098+13]..[164,4098+14])
          expression (src/misc.ml[164,4098+17]..[173,4269+17])
            Pexp_function
            [
              <case>
                pattern (src/misc.ml[165,4124+4]..[165,4124+6])
                  Ppat_construct "[]" (src/misc.ml[165,4124+4]..[165,4124+6])
                  None
                expression (src/misc.ml[166,4134+6]..[166,4134+8])
                  Pexp_construct "[]" (src/misc.ml[166,4134+6]..[166,4134+8])
                  None
              <case>
                pattern (src/misc.ml[167,4143+4]..[167,4143+18])
                  Ppat_alias "l" (src/misc.ml[167,4143+17]..[167,4143+18])
                  pattern (src/misc.ml[167,4143+4]..[167,4143+13])
                    Ppat_construct "::" (src/misc.ml[167,4143+7]..[167,4143+9])
                    Some
                      []
                      pattern (src/misc.ml[167,4143+5]..[167,4143+12]) ghost
                        Ppat_tuple
                        [
                          pattern (src/misc.ml[167,4143+5]..[167,4143+6])
                            Ppat_var "x" (src/misc.ml[167,4143+5]..[167,4143+6])
                          pattern (src/misc.ml[167,4143+10]..[167,4143+12])
                            Ppat_var "xs" (src/misc.ml[167,4143+10]..[167,4143+12])
                        ]
                expression (src/misc.ml[168,4165+6]..[173,4269+17])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/misc.ml[168,4165+10]..[168,4165+12])
                        Ppat_var "x'" (src/misc.ml[168,4165+10]..[168,4165+12])
                      expression (src/misc.ml[168,4165+15]..[168,4165+18])
                        Pexp_apply
                        expression (src/misc.ml[168,4165+15]..[168,4165+16])
                          Pexp_ident "f" (src/misc.ml[168,4165+15]..[168,4165+16])
                        [
                          <arg>
                          Nolabel
                            expression (src/misc.ml[168,4165+17]..[168,4165+18])
                              Pexp_ident "x" (src/misc.ml[168,4165+17]..[168,4165+18])
                        ]
                    <def>
                      pattern (src/misc.ml[169,4184+10]..[169,4184+13])
                        Ppat_var "xs'" (src/misc.ml[169,4184+10]..[169,4184+13])
                      expression (src/misc.ml[169,4184+16]..[169,4184+25])
                        Pexp_apply
                        expression (src/misc.ml[169,4184+16]..[169,4184+20])
                          Pexp_ident "smap" (src/misc.ml[169,4184+16]..[169,4184+20])
                        [
                          <arg>
                          Nolabel
                            expression (src/misc.ml[169,4184+21]..[169,4184+22])
                              Pexp_ident "f" (src/misc.ml[169,4184+21]..[169,4184+22])
                          <arg>
                          Nolabel
                            expression (src/misc.ml[169,4184+23]..[169,4184+25])
                              Pexp_ident "xs" (src/misc.ml[169,4184+23]..[169,4184+25])
                        ]
                  ]
                  expression (src/misc.ml[170,4213+6]..[173,4269+17])
                    Pexp_ifthenelse
                    expression (src/misc.ml[170,4213+9]..[170,4213+29])
                      Pexp_apply
                      expression (src/misc.ml[170,4213+17]..[170,4213+19])
                        Pexp_ident "&&" (src/misc.ml[170,4213+17]..[170,4213+19])
                      [
                        <arg>
                        Nolabel
                          expression (src/misc.ml[170,4213+9]..[170,4213+16])
                            Pexp_apply
                            expression (src/misc.ml[170,4213+11]..[170,4213+13])
                              Pexp_ident "==" (src/misc.ml[170,4213+11]..[170,4213+13])
                            [
                              <arg>
                              Nolabel
                                expression (src/misc.ml[170,4213+9]..[170,4213+10])
                                  Pexp_ident "x" (src/misc.ml[170,4213+9]..[170,4213+10])
                              <arg>
                              Nolabel
                                expression (src/misc.ml[170,4213+14]..[170,4213+16])
                                  Pexp_ident "x'" (src/misc.ml[170,4213+14]..[170,4213+16])
                            ]
                        <arg>
                        Nolabel
                          expression (src/misc.ml[170,4213+20]..[170,4213+29])
                            Pexp_apply
                            expression (src/misc.ml[170,4213+23]..[170,4213+25])
                              Pexp_ident "==" (src/misc.ml[170,4213+23]..[170,4213+25])
                            [
                              <arg>
                              Nolabel
                                expression (src/misc.ml[170,4213+20]..[170,4213+22])
                                  Pexp_ident "xs" (src/misc.ml[170,4213+20]..[170,4213+22])
                              <arg>
                              Nolabel
                                expression (src/misc.ml[170,4213+26]..[170,4213+29])
                                  Pexp_ident "xs'" (src/misc.ml[170,4213+26]..[170,4213+29])
                            ]
                      ]
                    expression (src/misc.ml[171,4248+8]..[171,4248+9])
                      Pexp_ident "l" (src/misc.ml[171,4248+8]..[171,4248+9])
                    Some
                      expression (src/misc.ml[173,4269+8]..[173,4269+17])
                        Pexp_construct "::" (src/misc.ml[173,4269+11]..[173,4269+13])
                        Some
                          expression (src/misc.ml[173,4269+8]..[173,4269+17]) ghost
                            Pexp_tuple
                            [
                              expression (src/misc.ml[173,4269+8]..[173,4269+10])
                                Pexp_ident "x'" (src/misc.ml[173,4269+8]..[173,4269+10])
                              expression (src/misc.ml[173,4269+14]..[173,4269+17])
                                Pexp_ident "xs'" (src/misc.ml[173,4269+14]..[173,4269+17])
                            ]
            ]
    ]
  structure_item (src/misc.ml[175,4288+0]..[185,4509+17])
    Pstr_value Rec
    [
      <def>
        pattern (src/misc.ml[175,4288+8]..[175,4288+13])
          Ppat_var "smapa" (src/misc.ml[175,4288+8]..[175,4288+13])
        expression (src/misc.ml[175,4288+14]..[185,4509+17]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[175,4288+14]..[175,4288+15])
            Ppat_var "f" (src/misc.ml[175,4288+14]..[175,4288+15])
          expression (src/misc.ml[175,4288+16]..[185,4509+17]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[175,4288+16]..[175,4288+20])
              Ppat_var "accu" (src/misc.ml[175,4288+16]..[175,4288+20])
            expression (src/misc.ml[175,4288+23]..[185,4509+17])
              Pexp_function
              [
                <case>
                  pattern (src/misc.ml[176,4320+4]..[176,4320+6])
                    Ppat_construct "[]" (src/misc.ml[176,4320+4]..[176,4320+6])
                    None
                  expression (src/misc.ml[177,4330+6]..[177,4330+14])
                    Pexp_tuple
                    [
                      expression (src/misc.ml[177,4330+6]..[177,4330+10])
                        Pexp_ident "accu" (src/misc.ml[177,4330+6]..[177,4330+10])
                      expression (src/misc.ml[177,4330+12]..[177,4330+14])
                        Pexp_construct "[]" (src/misc.ml[177,4330+12]..[177,4330+14])
                        None
                    ]
                <case>
                  pattern (src/misc.ml[178,4345+4]..[178,4345+18])
                    Ppat_alias "l" (src/misc.ml[178,4345+17]..[178,4345+18])
                    pattern (src/misc.ml[178,4345+4]..[178,4345+13])
                      Ppat_construct "::" (src/misc.ml[178,4345+7]..[178,4345+9])
                      Some
                        []
                        pattern (src/misc.ml[178,4345+5]..[178,4345+12]) ghost
                          Ppat_tuple
                          [
                            pattern (src/misc.ml[178,4345+5]..[178,4345+6])
                              Ppat_var "x" (src/misc.ml[178,4345+5]..[178,4345+6])
                            pattern (src/misc.ml[178,4345+10]..[178,4345+12])
                              Ppat_var "xs" (src/misc.ml[178,4345+10]..[178,4345+12])
                          ]
                  expression (src/misc.ml[179,4367+6]..[185,4509+17])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/misc.ml[179,4367+10]..[179,4367+18])
                          Ppat_tuple
                          [
                            pattern (src/misc.ml[179,4367+10]..[179,4367+14])
                              Ppat_var "accu" (src/misc.ml[179,4367+10]..[179,4367+14])
                            pattern (src/misc.ml[179,4367+16]..[179,4367+18])
                              Ppat_var "x'" (src/misc.ml[179,4367+16]..[179,4367+18])
                          ]
                        expression (src/misc.ml[179,4367+21]..[179,4367+29])
                          Pexp_apply
                          expression (src/misc.ml[179,4367+21]..[179,4367+22])
                            Pexp_ident "f" (src/misc.ml[179,4367+21]..[179,4367+22])
                          [
                            <arg>
                            Nolabel
                              expression (src/misc.ml[179,4367+23]..[179,4367+27])
                                Pexp_ident "accu" (src/misc.ml[179,4367+23]..[179,4367+27])
                            <arg>
                            Nolabel
                              expression (src/misc.ml[179,4367+28]..[179,4367+29])
                                Pexp_ident "x" (src/misc.ml[179,4367+28]..[179,4367+29])
                          ]
                    ]
                    expression (src/misc.ml[180,4400+6]..[185,4509+17])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/misc.ml[180,4400+10]..[180,4400+19])
                            Ppat_tuple
                            [
                              pattern (src/misc.ml[180,4400+10]..[180,4400+14])
                                Ppat_var "accu" (src/misc.ml[180,4400+10]..[180,4400+14])
                              pattern (src/misc.ml[180,4400+16]..[180,4400+19])
                                Ppat_var "xs'" (src/misc.ml[180,4400+16]..[180,4400+19])
                            ]
                          expression (src/misc.ml[180,4400+22]..[180,4400+37])
                            Pexp_apply
                            expression (src/misc.ml[180,4400+22]..[180,4400+27])
                              Pexp_ident "smapa" (src/misc.ml[180,4400+22]..[180,4400+27])
                            [
                              <arg>
                              Nolabel
                                expression (src/misc.ml[180,4400+28]..[180,4400+29])
                                  Pexp_ident "f" (src/misc.ml[180,4400+28]..[180,4400+29])
                              <arg>
                              Nolabel
                                expression (src/misc.ml[180,4400+30]..[180,4400+34])
                                  Pexp_ident "accu" (src/misc.ml[180,4400+30]..[180,4400+34])
                              <arg>
                              Nolabel
                                expression (src/misc.ml[180,4400+35]..[180,4400+37])
                                  Pexp_ident "xs" (src/misc.ml[180,4400+35]..[180,4400+37])
                            ]
                      ]
                      expression (src/misc.ml[181,4441+6]..[185,4509+17])
                        Pexp_tuple
                        [
                          expression (src/misc.ml[181,4441+6]..[181,4441+10])
                            Pexp_ident "accu" (src/misc.ml[181,4441+6]..[181,4441+10])
                          expression (src/misc.ml[182,4453+6]..[185,4509+17])
                            Pexp_ifthenelse
                            expression (src/misc.ml[182,4453+9]..[182,4453+29])
                              Pexp_apply
                              expression (src/misc.ml[182,4453+17]..[182,4453+19])
                                Pexp_ident "&&" (src/misc.ml[182,4453+17]..[182,4453+19])
                              [
                                <arg>
                                Nolabel
                                  expression (src/misc.ml[182,4453+9]..[182,4453+16])
                                    Pexp_apply
                                    expression (src/misc.ml[182,4453+11]..[182,4453+13])
                                      Pexp_ident "==" (src/misc.ml[182,4453+11]..[182,4453+13])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/misc.ml[182,4453+9]..[182,4453+10])
                                          Pexp_ident "x" (src/misc.ml[182,4453+9]..[182,4453+10])
                                      <arg>
                                      Nolabel
                                        expression (src/misc.ml[182,4453+14]..[182,4453+16])
                                          Pexp_ident "x'" (src/misc.ml[182,4453+14]..[182,4453+16])
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/misc.ml[182,4453+20]..[182,4453+29])
                                    Pexp_apply
                                    expression (src/misc.ml[182,4453+23]..[182,4453+25])
                                      Pexp_ident "==" (src/misc.ml[182,4453+23]..[182,4453+25])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/misc.ml[182,4453+20]..[182,4453+22])
                                          Pexp_ident "xs" (src/misc.ml[182,4453+20]..[182,4453+22])
                                      <arg>
                                      Nolabel
                                        expression (src/misc.ml[182,4453+26]..[182,4453+29])
                                          Pexp_ident "xs'" (src/misc.ml[182,4453+26]..[182,4453+29])
                                    ]
                              ]
                            expression (src/misc.ml[183,4488+8]..[183,4488+9])
                              Pexp_ident "l" (src/misc.ml[183,4488+8]..[183,4488+9])
                            Some
                              expression (src/misc.ml[185,4509+8]..[185,4509+17])
                                Pexp_construct "::" (src/misc.ml[185,4509+11]..[185,4509+13])
                                Some
                                  expression (src/misc.ml[185,4509+8]..[185,4509+17]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/misc.ml[185,4509+8]..[185,4509+10])
                                        Pexp_ident "x'" (src/misc.ml[185,4509+8]..[185,4509+10])
                                      expression (src/misc.ml[185,4509+14]..[185,4509+17])
                                        Pexp_ident "xs'" (src/misc.ml[185,4509+14]..[185,4509+17])
                                    ]
                        ]
              ]
    ]
  structure_item (src/misc.ml[187,4528+0]..[199,4747+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[187,4528+4]..[187,4528+13])
          Ppat_var "normalize" (src/misc.ml[187,4528+4]..[187,4528+13])
        expression (src/misc.ml[187,4528+14]..[199,4747+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[187,4528+14]..[187,4528+15])
            Ppat_var "s" (src/misc.ml[187,4528+14]..[187,4528+15])
          expression (src/misc.ml[188,4546+2]..[199,4747+26])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/misc.ml[188,4546+6]..[188,4546+7])
                  Ppat_var "s" (src/misc.ml[188,4546+6]..[188,4546+7])
                expression (src/misc.ml[188,4546+10]..[188,4546+27])
                  Pexp_apply
                  expression (src/misc.ml[188,4546+10]..[188,4546+25])
                    Pexp_ident "Bytes.of_string" (src/misc.ml[188,4546+10]..[188,4546+25])
                  [
                    <arg>
                    Nolabel
                      expression (src/misc.ml[188,4546+26]..[188,4546+27])
                        Pexp_ident "s" (src/misc.ml[188,4546+26]..[188,4546+27])
                  ]
            ]
            expression (src/misc.ml[189,4577+2]..[199,4747+26])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/misc.ml[189,4577+6]..[189,4577+7])
                    Ppat_var "n" (src/misc.ml[189,4577+6]..[189,4577+7])
                  expression (src/misc.ml[189,4577+10]..[189,4577+24])
                    Pexp_apply
                    expression (src/misc.ml[189,4577+10]..[189,4577+22])
                      Pexp_ident "Bytes.length" (src/misc.ml[189,4577+10]..[189,4577+22])
                    [
                      <arg>
                      Nolabel
                        expression (src/misc.ml[189,4577+23]..[189,4577+24])
                          Pexp_ident "s" (src/misc.ml[189,4577+23]..[189,4577+24])
                    ]
              ]
              expression (src/misc.ml[190,4605+2]..[199,4747+26])
                Pexp_sequence
                expression (src/misc.ml[190,4605+2]..[198,4739+6])
                  Pexp_for Up
                  pattern (src/misc.ml[190,4605+6]..[190,4605+7])
                    Ppat_var "i" (src/misc.ml[190,4605+6]..[190,4605+7])
                  expression (src/misc.ml[190,4605+10]..[190,4605+11])
                    Pexp_constant PConst_int (0,None)
                  expression (src/misc.ml[190,4605+15]..[190,4605+20])
                    Pexp_apply
                    expression (src/misc.ml[190,4605+17]..[190,4605+18])
                      Pexp_ident "-" (src/misc.ml[190,4605+17]..[190,4605+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/misc.ml[190,4605+15]..[190,4605+16])
                          Pexp_ident "n" (src/misc.ml[190,4605+15]..[190,4605+16])
                      <arg>
                      Nolabel
                        expression (src/misc.ml[190,4605+19]..[190,4605+20])
                          Pexp_constant PConst_int (1,None)
                    ]
                  expression (src/misc.ml[191,4629+4]..[197,4728+10])
                    Pexp_match
                    expression (src/misc.ml[191,4629+10]..[191,4629+23])
                      Pexp_apply
                      expression (src/misc.ml[191,4629+10]..[191,4629+19])
                        Pexp_ident "Bytes.get" (src/misc.ml[191,4629+10]..[191,4629+19])
                      [
                        <arg>
                        Nolabel
                          expression (src/misc.ml[191,4629+20]..[191,4629+21])
                            Pexp_ident "s" (src/misc.ml[191,4629+20]..[191,4629+21])
                        <arg>
                        Nolabel
                          expression (src/misc.ml[191,4629+22]..[191,4629+23])
                            Pexp_ident "i" (src/misc.ml[191,4629+22]..[191,4629+23])
                      ]
                    [
                      <case>
                        pattern (src/misc.ml[192,4658+6]..[194,4678+9])
                          Ppat_or
                          pattern (src/misc.ml[192,4658+6]..[193,4668+9])
                            Ppat_or
                            pattern (src/misc.ml[192,4658+6]..[192,4658+9])
                              Ppat_constant PConst_char 28
                            pattern (src/misc.ml[193,4668+6]..[193,4668+9])
                              Ppat_constant PConst_char 29
                          pattern (src/misc.ml[194,4678+6]..[194,4678+9])
                            Ppat_constant PConst_char 2c
                        expression (src/misc.ml[195,4691+8]..[195,4691+25])
                          Pexp_apply
                          expression (src/misc.ml[195,4691+8]..[195,4691+17])
                            Pexp_ident "Bytes.set" (src/misc.ml[195,4691+8]..[195,4691+17])
                          [
                            <arg>
                            Nolabel
                              expression (src/misc.ml[195,4691+18]..[195,4691+19])
                                Pexp_ident "s" (src/misc.ml[195,4691+18]..[195,4691+19])
                            <arg>
                            Nolabel
                              expression (src/misc.ml[195,4691+20]..[195,4691+21])
                                Pexp_ident "i" (src/misc.ml[195,4691+20]..[195,4691+21])
                            <arg>
                            Nolabel
                              expression (src/misc.ml[195,4691+22]..[195,4691+25])
                                Pexp_constant PConst_char 5f
                          ]
                      <case>
                        pattern (src/misc.ml[196,4717+6]..[196,4717+7])
                          Ppat_any
                        expression (src/misc.ml[197,4728+8]..[197,4728+10])
                          Pexp_construct "()" (src/misc.ml[197,4728+8]..[197,4728+10])
                          None
                    ]
                expression (src/misc.ml[199,4747+2]..[199,4747+26])
                  Pexp_apply
                  expression (src/misc.ml[199,4747+2]..[199,4747+24])
                    Pexp_ident "Bytes.unsafe_to_string" (src/misc.ml[199,4747+2]..[199,4747+24])
                  [
                    <arg>
                    Nolabel
                      expression (src/misc.ml[199,4747+25]..[199,4747+26])
                        Pexp_ident "s" (src/misc.ml[199,4747+25]..[199,4747+26])
                  ]
    ]
  structure_item (src/misc.ml[203,4847+0]..[206,4899+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[203,4847+4]..[203,4847+17])
          Ppat_var "postincrement" (src/misc.ml[203,4847+4]..[203,4847+17])
        expression (src/misc.ml[203,4847+18]..[206,4899+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[203,4847+18]..[203,4847+19])
            Ppat_var "r" (src/misc.ml[203,4847+18]..[203,4847+19])
          expression (src/misc.ml[204,4869+2]..[206,4899+3])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/misc.ml[204,4869+6]..[204,4869+7])
                  Ppat_var "x" (src/misc.ml[204,4869+6]..[204,4869+7])
                expression (src/misc.ml[204,4869+10]..[204,4869+12])
                  Pexp_apply
                  expression (src/misc.ml[204,4869+10]..[204,4869+11])
                    Pexp_ident "!" (src/misc.ml[204,4869+10]..[204,4869+11])
                  [
                    <arg>
                    Nolabel
                      expression (src/misc.ml[204,4869+11]..[204,4869+12])
                        Pexp_ident "r" (src/misc.ml[204,4869+11]..[204,4869+12])
                  ]
            ]
            expression (src/misc.ml[205,4885+2]..[206,4899+3])
              Pexp_sequence
              expression (src/misc.ml[205,4885+2]..[205,4885+12])
                Pexp_apply
                expression (src/misc.ml[205,4885+4]..[205,4885+6])
                  Pexp_ident ":=" (src/misc.ml[205,4885+4]..[205,4885+6])
                [
                  <arg>
                  Nolabel
                    expression (src/misc.ml[205,4885+2]..[205,4885+3])
                      Pexp_ident "r" (src/misc.ml[205,4885+2]..[205,4885+3])
                  <arg>
                  Nolabel
                    expression (src/misc.ml[205,4885+7]..[205,4885+12])
                      Pexp_apply
                      expression (src/misc.ml[205,4885+9]..[205,4885+10])
                        Pexp_ident "+" (src/misc.ml[205,4885+9]..[205,4885+10])
                      [
                        <arg>
                        Nolabel
                          expression (src/misc.ml[205,4885+7]..[205,4885+8])
                            Pexp_ident "x" (src/misc.ml[205,4885+7]..[205,4885+8])
                        <arg>
                        Nolabel
                          expression (src/misc.ml[205,4885+11]..[205,4885+12])
                            Pexp_constant PConst_int (1,None)
                      ]
                ]
              expression (src/misc.ml[206,4899+2]..[206,4899+3])
                Pexp_ident "x" (src/misc.ml[206,4899+2]..[206,4899+3])
    ]
  structure_item (src/misc.ml[210,5042+0]..[215,5163+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[210,5042+4]..[210,5042+14])
          Ppat_var "filter_map" (src/misc.ml[210,5042+4]..[210,5042+14])
        expression (src/misc.ml[210,5042+15]..[215,5163+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[210,5042+15]..[210,5042+16])
            Ppat_var "f" (src/misc.ml[210,5042+15]..[210,5042+16])
          expression (src/misc.ml[210,5042+17]..[215,5163+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[210,5042+17]..[210,5042+18])
              Ppat_var "l" (src/misc.ml[210,5042+17]..[210,5042+18])
            expression (src/misc.ml[211,5063+2]..[215,5163+10])
              Pexp_open Fresh
              module_expr (src/misc.ml[211,5063+2]..[211,5063+6])
                Pmod_ident "List" (src/misc.ml[211,5063+2]..[211,5063+6])
              expression (src/misc.ml[211,5063+8]..[215,5163+9])
                Pexp_apply
                expression (src/misc.ml[211,5063+8]..[211,5063+11])
                  Pexp_ident "rev" (src/misc.ml[211,5063+8]..[211,5063+11])
                [
                  <arg>
                  Nolabel
                    expression (src/misc.ml[211,5063+12]..[215,5163+9])
                      Pexp_apply
                      expression (src/misc.ml[211,5063+13]..[211,5063+22])
                        Pexp_ident "fold_left" (src/misc.ml[211,5063+13]..[211,5063+22])
                      [
                        <arg>
                        Nolabel
                          expression (src/misc.ml[211,5063+23]..[215,5163+3])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/misc.ml[211,5063+28]..[211,5063+30])
                              Ppat_var "ys" (src/misc.ml[211,5063+28]..[211,5063+30])
                            expression (src/misc.ml[211,5063+31]..[214,5137+25]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/misc.ml[211,5063+31]..[211,5063+32])
                                Ppat_var "x" (src/misc.ml[211,5063+31]..[211,5063+32])
                              expression (src/misc.ml[212,5099+4]..[214,5137+25])
                                Pexp_match
                                expression (src/misc.ml[212,5099+10]..[212,5099+13])
                                  Pexp_apply
                                  expression (src/misc.ml[212,5099+10]..[212,5099+11])
                                    Pexp_ident "f" (src/misc.ml[212,5099+10]..[212,5099+11])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/misc.ml[212,5099+12]..[212,5099+13])
                                        Pexp_ident "x" (src/misc.ml[212,5099+12]..[212,5099+13])
                                  ]
                                [
                                  <case>
                                    pattern (src/misc.ml[213,5118+8]..[213,5118+12])
                                      Ppat_construct "None" (src/misc.ml[213,5118+8]..[213,5118+12])
                                      None
                                    expression (src/misc.ml[213,5118+16]..[213,5118+18])
                                      Pexp_ident "ys" (src/misc.ml[213,5118+16]..[213,5118+18])
                                  <case>
                                    pattern (src/misc.ml[214,5137+8]..[214,5137+14])
                                      Ppat_construct "Some" (src/misc.ml[214,5137+8]..[214,5137+12])
                                      Some
                                        []
                                        pattern (src/misc.ml[214,5137+13]..[214,5137+14])
                                          Ppat_var "y" (src/misc.ml[214,5137+13]..[214,5137+14])
                                    expression (src/misc.ml[214,5137+18]..[214,5137+25])
                                      Pexp_construct "::" (src/misc.ml[214,5137+20]..[214,5137+22])
                                      Some
                                        expression (src/misc.ml[214,5137+18]..[214,5137+25]) ghost
                                          Pexp_tuple
                                          [
                                            expression (src/misc.ml[214,5137+18]..[214,5137+19])
                                              Pexp_ident "y" (src/misc.ml[214,5137+18]..[214,5137+19])
                                            expression (src/misc.ml[214,5137+23]..[214,5137+25])
                                              Pexp_ident "ys" (src/misc.ml[214,5137+23]..[214,5137+25])
                                          ]
                                ]
                        <arg>
                        Nolabel
                          expression (src/misc.ml[215,5163+4]..[215,5163+6])
                            Pexp_construct "[]" (src/misc.ml[215,5163+4]..[215,5163+6])
                            None
                        <arg>
                        Nolabel
                          expression (src/misc.ml[215,5163+7]..[215,5163+8])
                            Pexp_ident "l" (src/misc.ml[215,5163+7]..[215,5163+8])
                      ]
                ]
    ]
  structure_item (src/misc.ml[217,5175+0]..[249,6240+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[217,5175+4]..[217,5175+21])
          Ppat_var "new_encode_decode" (src/misc.ml[217,5175+4]..[217,5175+21])
        expression (src/misc.ml[217,5175+22]..[249,6240+25]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[217,5175+22]..[217,5175+30])
            Ppat_var "capacity" (src/misc.ml[217,5175+22]..[217,5175+30])
          expression (src/misc.ml[219,5275+2]..[249,6240+25])
            Pexp_letmodule "H" (src/misc.ml[219,5275+13]..[219,5275+14])
            module_expr (src/misc.ml[219,5275+17]..[223,5380+6])
              Pmod_apply
              module_expr (src/misc.ml[219,5275+17]..[219,5275+29])
                Pmod_ident "Hashtbl.Make" (src/misc.ml[219,5275+17]..[219,5275+29])
              module_expr (src/misc.ml[219,5275+30]..[223,5380+5])
                Pmod_structure
                [
                  structure_item (src/misc.ml[220,5312+4]..[220,5312+19])
                    Pstr_type Rec
                    [
                      type_declaration "t" (src/misc.ml[220,5312+9]..[220,5312+10]) (src/misc.ml[220,5312+4]..[220,5312+19])
                        ptype_params =
                          []
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ptype_abstract
                        ptype_private = Public
                        ptype_manifest =
                          Some
                            core_type (src/misc.ml[220,5312+13]..[220,5312+19])
                              Ptyp_constr "string" (src/misc.ml[220,5312+13]..[220,5312+19])
                              []
                    ]
                  structure_item (src/misc.ml[221,5332+4]..[221,5332+19])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (src/misc.ml[221,5332+8]..[221,5332+13])
                          Ppat_var "equal" (src/misc.ml[221,5332+8]..[221,5332+13])
                        expression (src/misc.ml[221,5332+16]..[221,5332+19])
                          Pexp_ident "=" (src/misc.ml[221,5332+16]..[221,5332+19])
                    ]
                  structure_item (src/misc.ml[222,5352+4]..[222,5352+27])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (src/misc.ml[222,5352+8]..[222,5352+12])
                          Ppat_var "hash" (src/misc.ml[222,5352+8]..[222,5352+12])
                        expression (src/misc.ml[222,5352+15]..[222,5352+27])
                          Pexp_ident "Hashtbl.hash" (src/misc.ml[222,5352+15]..[222,5352+27])
                    ]
                ]
            expression (src/misc.ml[224,5390+2]..[249,6240+25])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/misc.ml[224,5390+6]..[224,5390+11])
                    Ppat_var "table" (src/misc.ml[224,5390+6]..[224,5390+11])
                  expression (src/misc.ml[224,5390+14]..[224,5390+31])
                    Pexp_apply
                    expression (src/misc.ml[224,5390+14]..[224,5390+22])
                      Pexp_ident "H.create" (src/misc.ml[224,5390+14]..[224,5390+22])
                    [
                      <arg>
                      Nolabel
                        expression (src/misc.ml[224,5390+23]..[224,5390+31])
                          Pexp_ident "capacity" (src/misc.ml[224,5390+23]..[224,5390+31])
                    ]
              ]
              expression (src/misc.ml[226,5488+2]..[249,6240+25])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/misc.ml[226,5488+6]..[226,5488+10])
                      Ppat_var "text" (src/misc.ml[226,5488+6]..[226,5488+10])
                    expression (src/misc.ml[226,5488+13]..[226,5488+44])
                      Pexp_apply
                      expression (src/misc.ml[226,5488+13]..[226,5488+41])
                        Pexp_ident "MenhirLib.InfiniteArray.make" (src/misc.ml[226,5488+13]..[226,5488+41])
                      [
                        <arg>
                        Nolabel
                          expression (src/misc.ml[226,5488+42]..[226,5488+44])
                            Pexp_constant PConst_string("",(src/misc.ml[226,5488+43]..[226,5488+43]),None)
                      ]
                ]
                expression (src/misc.ml[228,5579+2]..[249,6240+25])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/misc.ml[228,5579+6]..[228,5579+7])
                        Ppat_var "c" (src/misc.ml[228,5579+6]..[228,5579+7])
                      expression (src/misc.ml[228,5579+10]..[228,5579+15])
                        Pexp_apply
                        expression (src/misc.ml[228,5579+10]..[228,5579+13])
                          Pexp_ident "ref" (src/misc.ml[228,5579+10]..[228,5579+13])
                        [
                          <arg>
                          Nolabel
                            expression (src/misc.ml[228,5579+14]..[228,5579+15])
                              Pexp_constant PConst_int (0,None)
                        ]
                  ]
                  expression (src/misc.ml[230,5658+2]..[249,6240+25])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/misc.ml[230,5658+6]..[230,5658+12])
                          Ppat_var "encode" (src/misc.ml[230,5658+6]..[230,5658+12])
                        expression (src/misc.ml[230,5658+13]..[240,5964+7]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/misc.ml[230,5658+13]..[230,5658+25])
                            Ppat_constraint
                            pattern (src/misc.ml[230,5658+14]..[230,5658+15])
                              Ppat_var "s" (src/misc.ml[230,5658+14]..[230,5658+15])
                            core_type (src/misc.ml[230,5658+18]..[230,5658+24])
                              Ptyp_constr "string" (src/misc.ml[230,5658+18]..[230,5658+24])
                              []
                          expression (src/misc.ml[230,5658+26]..[240,5964+7])
                            Pexp_constraint
                            expression (src/misc.ml[231,5692+4]..[240,5964+7])
                              Pexp_sequence
                              expression (src/misc.ml[231,5692+4]..[231,5692+15])
                                Pexp_apply
                                expression (src/misc.ml[231,5692+6]..[231,5692+8])
                                  Pexp_ident ":=" (src/misc.ml[231,5692+6]..[231,5692+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/misc.ml[231,5692+4]..[231,5692+5])
                                      Pexp_ident "c" (src/misc.ml[231,5692+4]..[231,5692+5])
                                  <arg>
                                  Nolabel
                                    expression (src/misc.ml[231,5692+9]..[231,5692+15])
                                      Pexp_apply
                                      expression (src/misc.ml[231,5692+12]..[231,5692+13])
                                        Pexp_ident "+" (src/misc.ml[231,5692+12]..[231,5692+13])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/misc.ml[231,5692+9]..[231,5692+11])
                                            Pexp_apply
                                            expression (src/misc.ml[231,5692+9]..[231,5692+10])
                                              Pexp_ident "!" (src/misc.ml[231,5692+9]..[231,5692+10])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/misc.ml[231,5692+10]..[231,5692+11])
                                                  Pexp_ident "c" (src/misc.ml[231,5692+10]..[231,5692+11])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (src/misc.ml[231,5692+14]..[231,5692+15])
                                            Pexp_constant PConst_int (1,None)
                                      ]
                                ]
                              expression (src/misc.ml[232,5709+4]..[240,5964+7])
                                Pexp_try
                                expression (src/misc.ml[233,5717+6]..[233,5717+20])
                                  Pexp_apply
                                  expression (src/misc.ml[233,5717+6]..[233,5717+12])
                                    Pexp_ident "H.find" (src/misc.ml[233,5717+6]..[233,5717+12])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/misc.ml[233,5717+13]..[233,5717+18])
                                        Pexp_ident "table" (src/misc.ml[233,5717+13]..[233,5717+18])
                                    <arg>
                                    Nolabel
                                      expression (src/misc.ml[233,5717+19]..[233,5717+20])
                                        Pexp_ident "s" (src/misc.ml[233,5717+19]..[233,5717+20])
                                  ]
                                [
                                  <case>
                                    pattern (src/misc.ml[234,5738+9]..[234,5738+18])
                                      Ppat_construct "Not_found" (src/misc.ml[234,5738+9]..[234,5738+18])
                                      None
                                    expression (src/misc.ml[237,5865+6]..[240,5964+7])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/misc.ml[237,5865+10]..[237,5865+11])
                                            Ppat_var "i" (src/misc.ml[237,5865+10]..[237,5865+11])
                                          expression (src/misc.ml[237,5865+14]..[237,5865+28])
                                            Pexp_apply
                                            expression (src/misc.ml[237,5865+14]..[237,5865+22])
                                              Pexp_ident "H.length" (src/misc.ml[237,5865+14]..[237,5865+22])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/misc.ml[237,5865+23]..[237,5865+28])
                                                  Pexp_ident "table" (src/misc.ml[237,5865+23]..[237,5865+28])
                                            ]
                                      ]
                                      expression (src/misc.ml[238,5897+6]..[240,5964+7])
                                        Pexp_sequence
                                        expression (src/misc.ml[238,5897+6]..[238,5897+21])
                                          Pexp_apply
                                          expression (src/misc.ml[238,5897+6]..[238,5897+11])
                                            Pexp_ident "H.add" (src/misc.ml[238,5897+6]..[238,5897+11])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/misc.ml[238,5897+12]..[238,5897+17])
                                                Pexp_ident "table" (src/misc.ml[238,5897+12]..[238,5897+17])
                                            <arg>
                                            Nolabel
                                              expression (src/misc.ml[238,5897+18]..[238,5897+19])
                                                Pexp_ident "s" (src/misc.ml[238,5897+18]..[238,5897+19])
                                            <arg>
                                            Nolabel
                                              expression (src/misc.ml[238,5897+20]..[238,5897+21])
                                                Pexp_ident "i" (src/misc.ml[238,5897+20]..[238,5897+21])
                                          ]
                                        expression (src/misc.ml[239,5920+6]..[240,5964+7])
                                          Pexp_sequence
                                          expression (src/misc.ml[239,5920+6]..[239,5920+42])
                                            Pexp_apply
                                            expression (src/misc.ml[239,5920+6]..[239,5920+33])
                                              Pexp_ident "MenhirLib.InfiniteArray.set" (src/misc.ml[239,5920+6]..[239,5920+33])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/misc.ml[239,5920+34]..[239,5920+38])
                                                  Pexp_ident "text" (src/misc.ml[239,5920+34]..[239,5920+38])
                                              <arg>
                                              Nolabel
                                                expression (src/misc.ml[239,5920+39]..[239,5920+40])
                                                  Pexp_ident "i" (src/misc.ml[239,5920+39]..[239,5920+40])
                                              <arg>
                                              Nolabel
                                                expression (src/misc.ml[239,5920+41]..[239,5920+42])
                                                  Pexp_ident "s" (src/misc.ml[239,5920+41]..[239,5920+42])
                                            ]
                                          expression (src/misc.ml[240,5964+6]..[240,5964+7])
                                            Pexp_ident "i" (src/misc.ml[240,5964+6]..[240,5964+7])
                                ]
                            core_type (src/misc.ml[230,5658+28]..[230,5658+31])
                              Ptyp_constr "int" (src/misc.ml[230,5658+28]..[230,5658+31])
                              []
                      <def>
                        pattern (src/misc.ml[242,6040+6]..[242,6040+12])
                          Ppat_var "decode" (src/misc.ml[242,6040+6]..[242,6040+12])
                        expression (src/misc.ml[242,6040+13]..[243,6074+38]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/misc.ml[242,6040+13]..[242,6040+22])
                            Ppat_constraint
                            pattern (src/misc.ml[242,6040+14]..[242,6040+15])
                              Ppat_var "i" (src/misc.ml[242,6040+14]..[242,6040+15])
                            core_type (src/misc.ml[242,6040+18]..[242,6040+21])
                              Ptyp_constr "int" (src/misc.ml[242,6040+18]..[242,6040+21])
                              []
                          expression (src/misc.ml[242,6040+23]..[243,6074+38])
                            Pexp_constraint
                            expression (src/misc.ml[243,6074+4]..[243,6074+38])
                              Pexp_apply
                              expression (src/misc.ml[243,6074+4]..[243,6074+31])
                                Pexp_ident "MenhirLib.InfiniteArray.get" (src/misc.ml[243,6074+4]..[243,6074+31])
                              [
                                <arg>
                                Nolabel
                                  expression (src/misc.ml[243,6074+32]..[243,6074+36])
                                    Pexp_ident "text" (src/misc.ml[243,6074+32]..[243,6074+36])
                                <arg>
                                Nolabel
                                  expression (src/misc.ml[243,6074+37]..[243,6074+38])
                                    Pexp_ident "i" (src/misc.ml[243,6074+37]..[243,6074+38])
                              ]
                            core_type (src/misc.ml[242,6040+25]..[242,6040+31])
                              Ptyp_constr "string" (src/misc.ml[242,6040+25]..[242,6040+31])
                              []
                      <def>
                        pattern (src/misc.ml[244,6113+6]..[244,6113+13])
                          Ppat_var "verbose" (src/misc.ml[244,6113+6]..[244,6113+13])
                        expression (src/misc.ml[244,6113+14]..[247,6209+25]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/misc.ml[244,6113+14]..[244,6113+16])
                            Ppat_construct "()" (src/misc.ml[244,6113+14]..[244,6113+16])
                            None
                          expression (src/misc.ml[245,6132+4]..[247,6209+25])
                            Pexp_apply
                            expression (src/misc.ml[245,6132+4]..[245,6132+18])
                              Pexp_ident "Printf.fprintf" (src/misc.ml[245,6132+4]..[245,6132+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/misc.ml[245,6132+19]..[245,6132+25])
                                  Pexp_ident "stderr" (src/misc.ml[245,6132+19]..[245,6132+25])
                              <arg>
                              Nolabel
                                expression (src/misc.ml[246,6158+6]..[246,6158+50])
                                  Pexp_constant PConst_string("%d calls to intern; %d unique strings.\n%!",(src/misc.ml[246,6158+7]..[246,6158+49]),None)
                              <arg>
                              Nolabel
                                expression (src/misc.ml[247,6209+6]..[247,6209+8])
                                  Pexp_apply
                                  expression (src/misc.ml[247,6209+6]..[247,6209+7])
                                    Pexp_ident "!" (src/misc.ml[247,6209+6]..[247,6209+7])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/misc.ml[247,6209+7]..[247,6209+8])
                                        Pexp_ident "c" (src/misc.ml[247,6209+7]..[247,6209+8])
                                  ]
                              <arg>
                              Nolabel
                                expression (src/misc.ml[247,6209+9]..[247,6209+25])
                                  Pexp_apply
                                  expression (src/misc.ml[247,6209+10]..[247,6209+18])
                                    Pexp_ident "H.length" (src/misc.ml[247,6209+10]..[247,6209+18])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/misc.ml[247,6209+19]..[247,6209+24])
                                        Pexp_ident "table" (src/misc.ml[247,6209+19]..[247,6209+24])
                                  ]
                            ]
                    ]
                    expression (src/misc.ml[249,6240+2]..[249,6240+25])
                      Pexp_tuple
                      [
                        expression (src/misc.ml[249,6240+2]..[249,6240+8])
                          Pexp_ident "encode" (src/misc.ml[249,6240+2]..[249,6240+8])
                        expression (src/misc.ml[249,6240+10]..[249,6240+16])
                          Pexp_ident "decode" (src/misc.ml[249,6240+10]..[249,6240+16])
                        expression (src/misc.ml[249,6240+18]..[249,6240+25])
                          Pexp_ident "verbose" (src/misc.ml[249,6240+18]..[249,6240+25])
                      ]
    ]
  structure_item (src/misc.ml[251,6267+0]..[277,7193+16])
    Pstr_value Rec
    [
      <def>
        pattern (src/misc.ml[251,6267+8]..[251,6267+12])
          Ppat_var "best" (src/misc.ml[251,6267+8]..[251,6267+12])
        expression (src/misc.ml[251,6267+13]..[277,7193+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[251,6267+13]..[251,6267+44])
            Ppat_constraint
            pattern (src/misc.ml[251,6267+14]..[251,6267+24])
              Ppat_var "preferable" (src/misc.ml[251,6267+14]..[251,6267+24])
            core_type (src/misc.ml[251,6267+27]..[251,6267+43])
              Ptyp_arrow
              Nolabel
              core_type (src/misc.ml[251,6267+27]..[251,6267+29])
                Ptyp_var a
              core_type (src/misc.ml[251,6267+33]..[251,6267+43])
                Ptyp_arrow
                Nolabel
                core_type (src/misc.ml[251,6267+33]..[251,6267+35])
                  Ptyp_var a
                core_type (src/misc.ml[251,6267+39]..[251,6267+43])
                  Ptyp_constr "bool" (src/misc.ml[251,6267+39]..[251,6267+43])
                  []
          expression (src/misc.ml[251,6267+45]..[277,7193+16]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[251,6267+45]..[251,6267+59])
              Ppat_constraint
              pattern (src/misc.ml[251,6267+46]..[251,6267+48])
                Ppat_var "xs" (src/misc.ml[251,6267+46]..[251,6267+48])
              core_type (src/misc.ml[251,6267+51]..[251,6267+58])
                Ptyp_constr "list" (src/misc.ml[251,6267+54]..[251,6267+58])
                [
                  core_type (src/misc.ml[251,6267+51]..[251,6267+53])
                    Ptyp_var a
                ]
            expression (src/misc.ml[251,6267+60]..[277,7193+16])
              Pexp_constraint
              expression (src/misc.ml[252,6341+2]..[277,7193+16])
                Pexp_match
                expression (src/misc.ml[252,6341+8]..[252,6341+10])
                  Pexp_ident "xs" (src/misc.ml[252,6341+8]..[252,6341+10])
                [
                  <case>
                    pattern (src/misc.ml[253,6357+4]..[253,6357+6])
                      Ppat_construct "[]" (src/misc.ml[253,6357+4]..[253,6357+6])
                      None
                    expression (src/misc.ml[256,6491+6]..[256,6491+10])
                      Pexp_construct "None" (src/misc.ml[256,6491+6]..[256,6491+10])
                      None
                  <case>
                    pattern (src/misc.ml[257,6502+4]..[257,6502+7])
                      Ppat_construct "::" (src/misc.ml[257,6502+5]..[257,6502+7]) ghost
                      Some
                        []
                        pattern (src/misc.ml[257,6502+5]..[257,6502+7]) ghost
                          Ppat_tuple
                          [
                            pattern (src/misc.ml[257,6502+5]..[257,6502+6])
                              Ppat_var "x" (src/misc.ml[257,6502+5]..[257,6502+6])
                            pattern (src/misc.ml[257,6502+6]..[257,6502+7]) ghost
                              Ppat_construct "[]" (src/misc.ml[257,6502+6]..[257,6502+7]) ghost
                              None
                          ]
                    expression (src/misc.ml[258,6513+6]..[258,6513+12])
                      Pexp_construct "Some" (src/misc.ml[258,6513+6]..[258,6513+10])
                      Some
                        expression (src/misc.ml[258,6513+11]..[258,6513+12])
                          Pexp_ident "x" (src/misc.ml[258,6513+11]..[258,6513+12])
                  <case>
                    pattern (src/misc.ml[259,6526+4]..[259,6526+11])
                      Ppat_construct "::" (src/misc.ml[259,6526+6]..[259,6526+8])
                      Some
                        []
                        pattern (src/misc.ml[259,6526+4]..[259,6526+11]) ghost
                          Ppat_tuple
                          [
                            pattern (src/misc.ml[259,6526+4]..[259,6526+5])
                              Ppat_var "x" (src/misc.ml[259,6526+4]..[259,6526+5])
                            pattern (src/misc.ml[259,6526+9]..[259,6526+11])
                              Ppat_var "xs" (src/misc.ml[259,6526+9]..[259,6526+11])
                          ]
                    expression (src/misc.ml[262,6651+6]..[277,7193+16])
                      Pexp_ifthenelse
                      expression (src/misc.ml[262,6651+9]..[262,6651+39])
                        Pexp_apply
                        expression (src/misc.ml[262,6651+9]..[262,6651+21])
                          Pexp_ident "List.for_all" (src/misc.ml[262,6651+9]..[262,6651+21])
                        [
                          <arg>
                          Nolabel
                            expression (src/misc.ml[262,6651+22]..[262,6651+36])
                              Pexp_apply
                              expression (src/misc.ml[262,6651+23]..[262,6651+33])
                                Pexp_ident "preferable" (src/misc.ml[262,6651+23]..[262,6651+33])
                              [
                                <arg>
                                Nolabel
                                  expression (src/misc.ml[262,6651+34]..[262,6651+35])
                                    Pexp_ident "x" (src/misc.ml[262,6651+34]..[262,6651+35])
                              ]
                          <arg>
                          Nolabel
                            expression (src/misc.ml[262,6651+37]..[262,6651+39])
                              Pexp_ident "xs" (src/misc.ml[262,6651+37]..[262,6651+39])
                        ]
                      expression (src/misc.ml[263,6696+8]..[263,6696+14])
                        Pexp_construct "Some" (src/misc.ml[263,6696+8]..[263,6696+12])
                        Some
                          expression (src/misc.ml[263,6696+13]..[263,6696+14])
                            Pexp_ident "x" (src/misc.ml[263,6696+13]..[263,6696+14])
                      Some
                        expression (src/misc.ml[266,6790+8]..[277,7193+16])
                          Pexp_match
                          expression (src/misc.ml[266,6790+14]..[266,6790+32])
                            Pexp_apply
                            expression (src/misc.ml[266,6790+14]..[266,6790+18])
                              Pexp_ident "best" (src/misc.ml[266,6790+14]..[266,6790+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/misc.ml[266,6790+19]..[266,6790+29])
                                  Pexp_ident "preferable" (src/misc.ml[266,6790+19]..[266,6790+29])
                              <arg>
                              Nolabel
                                expression (src/misc.ml[266,6790+30]..[266,6790+32])
                                  Pexp_ident "xs" (src/misc.ml[266,6790+30]..[266,6790+32])
                            ]
                          [
                            <case>
                              pattern (src/misc.ml[267,6828+10]..[267,6828+16])
                                Ppat_construct "Some" (src/misc.ml[267,6828+10]..[267,6828+14])
                                Some
                                  []
                                  pattern (src/misc.ml[267,6828+15]..[267,6828+16])
                                    Ppat_var "y" (src/misc.ml[267,6828+15]..[267,6828+16])
                              expression (src/misc.ml[268,6848+12]..[274,7112+18])
                                Pexp_ifthenelse
                                expression (src/misc.ml[268,6848+15]..[268,6848+29])
                                  Pexp_apply
                                  expression (src/misc.ml[268,6848+15]..[268,6848+25])
                                    Pexp_ident "preferable" (src/misc.ml[268,6848+15]..[268,6848+25])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/misc.ml[268,6848+26]..[268,6848+27])
                                        Pexp_ident "y" (src/misc.ml[268,6848+26]..[268,6848+27])
                                    <arg>
                                    Nolabel
                                      expression (src/misc.ml[268,6848+28]..[268,6848+29])
                                        Pexp_ident "x" (src/misc.ml[268,6848+28]..[268,6848+29])
                                  ]
                                expression (src/misc.ml[271,7028+14]..[271,7028+20])
                                  Pexp_construct "Some" (src/misc.ml[271,7028+14]..[271,7028+18])
                                  Some
                                    expression (src/misc.ml[271,7028+19]..[271,7028+20])
                                      Pexp_ident "y" (src/misc.ml[271,7028+19]..[271,7028+20])
                                Some
                                  expression (src/misc.ml[274,7112+14]..[274,7112+18])
                                    Pexp_construct "None" (src/misc.ml[274,7112+14]..[274,7112+18])
                                    None
                            <case>
                              pattern (src/misc.ml[275,7131+10]..[275,7131+14])
                                Ppat_construct "None" (src/misc.ml[275,7131+10]..[275,7131+14])
                                None
                              expression (src/misc.ml[277,7193+12]..[277,7193+16])
                                Pexp_construct "None" (src/misc.ml[277,7193+12]..[277,7193+16])
                                None
                          ]
                ]
              core_type (src/misc.ml[251,6267+62]..[251,6267+71])
                Ptyp_constr "option" (src/misc.ml[251,6267+65]..[251,6267+71])
                [
                  core_type (src/misc.ml[251,6267+62]..[251,6267+64])
                    Ptyp_var a
                ]
    ]
  structure_item (src/misc.ml[279,7211+0]..[288,7400+24])
    Pstr_value Rec
    [
      <def>
        pattern (src/misc.ml[279,7211+8]..[279,7211+15])
          Ppat_var "levels1" (src/misc.ml[279,7211+8]..[279,7211+15])
        expression (src/misc.ml[279,7211+16]..[288,7400+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[279,7211+16]..[279,7211+19])
            Ppat_var "cmp" (src/misc.ml[279,7211+16]..[279,7211+19])
          expression (src/misc.ml[279,7211+20]..[288,7400+24]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[279,7211+20]..[279,7211+22])
              Ppat_var "x1" (src/misc.ml[279,7211+20]..[279,7211+22])
            expression (src/misc.ml[279,7211+23]..[288,7400+24]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/misc.ml[279,7211+23]..[279,7211+25])
                Ppat_var "xs" (src/misc.ml[279,7211+23]..[279,7211+25])
              expression (src/misc.ml[280,7239+2]..[288,7400+24])
                Pexp_match
                expression (src/misc.ml[280,7239+8]..[280,7239+10])
                  Pexp_ident "xs" (src/misc.ml[280,7239+8]..[280,7239+10])
                [
                  <case>
                    pattern (src/misc.ml[281,7255+4]..[281,7255+6])
                      Ppat_construct "[]" (src/misc.ml[281,7255+4]..[281,7255+6])
                      None
                    expression (src/misc.ml[282,7265+6]..[282,7265+14])
                      Pexp_tuple
                      [
                        expression (src/misc.ml[282,7265+6]..[282,7265+10])
                          Pexp_construct "::" (src/misc.ml[282,7265+7]..[282,7265+10]) ghost
                          Some
                            expression (src/misc.ml[282,7265+7]..[282,7265+10]) ghost
                              Pexp_tuple
                              [
                                expression (src/misc.ml[282,7265+7]..[282,7265+9])
                                  Pexp_ident "x1" (src/misc.ml[282,7265+7]..[282,7265+9])
                                expression (src/misc.ml[282,7265+9]..[282,7265+10]) ghost
                                  Pexp_construct "[]" (src/misc.ml[282,7265+9]..[282,7265+10]) ghost
                                  None
                              ]
                        expression (src/misc.ml[282,7265+12]..[282,7265+14])
                          Pexp_construct "[]" (src/misc.ml[282,7265+12]..[282,7265+14])
                          None
                      ]
                  <case>
                    pattern (src/misc.ml[283,7280+4]..[283,7280+12])
                      Ppat_construct "::" (src/misc.ml[283,7280+7]..[283,7280+9])
                      Some
                        []
                        pattern (src/misc.ml[283,7280+4]..[283,7280+12]) ghost
                          Ppat_tuple
                          [
                            pattern (src/misc.ml[283,7280+4]..[283,7280+6])
                              Ppat_var "x2" (src/misc.ml[283,7280+4]..[283,7280+6])
                            pattern (src/misc.ml[283,7280+10]..[283,7280+12])
                              Ppat_var "xs" (src/misc.ml[283,7280+10]..[283,7280+12])
                          ]
                    expression (src/misc.ml[284,7296+6]..[288,7400+24])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/misc.ml[284,7296+10]..[284,7296+18])
                            Ppat_tuple
                            [
                              pattern (src/misc.ml[284,7296+10]..[284,7296+13])
                                Ppat_var "ys1" (src/misc.ml[284,7296+10]..[284,7296+13])
                              pattern (src/misc.ml[284,7296+15]..[284,7296+18])
                                Ppat_var "yss" (src/misc.ml[284,7296+15]..[284,7296+18])
                            ]
                          expression (src/misc.ml[284,7296+21]..[284,7296+38])
                            Pexp_apply
                            expression (src/misc.ml[284,7296+21]..[284,7296+28])
                              Pexp_ident "levels1" (src/misc.ml[284,7296+21]..[284,7296+28])
                            [
                              <arg>
                              Nolabel
                                expression (src/misc.ml[284,7296+29]..[284,7296+32])
                                  Pexp_ident "cmp" (src/misc.ml[284,7296+29]..[284,7296+32])
                              <arg>
                              Nolabel
                                expression (src/misc.ml[284,7296+33]..[284,7296+35])
                                  Pexp_ident "x2" (src/misc.ml[284,7296+33]..[284,7296+35])
                              <arg>
                              Nolabel
                                expression (src/misc.ml[284,7296+36]..[284,7296+38])
                                  Pexp_ident "xs" (src/misc.ml[284,7296+36]..[284,7296+38])
                            ]
                      ]
                      expression (src/misc.ml[285,7338+6]..[288,7400+24])
                        Pexp_ifthenelse
                        expression (src/misc.ml[285,7338+9]..[285,7338+22])
                          Pexp_apply
                          expression (src/misc.ml[285,7338+19]..[285,7338+20])
                            Pexp_ident "=" (src/misc.ml[285,7338+19]..[285,7338+20])
                          [
                            <arg>
                            Nolabel
                              expression (src/misc.ml[285,7338+9]..[285,7338+18])
                                Pexp_apply
                                expression (src/misc.ml[285,7338+9]..[285,7338+12])
                                  Pexp_ident "cmp" (src/misc.ml[285,7338+9]..[285,7338+12])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/misc.ml[285,7338+13]..[285,7338+15])
                                      Pexp_ident "x1" (src/misc.ml[285,7338+13]..[285,7338+15])
                                  <arg>
                                  Nolabel
                                    expression (src/misc.ml[285,7338+16]..[285,7338+18])
                                      Pexp_ident "x2" (src/misc.ml[285,7338+16]..[285,7338+18])
                                ]
                            <arg>
                            Nolabel
                              expression (src/misc.ml[285,7338+21]..[285,7338+22])
                                Pexp_constant PConst_int (0,None)
                          ]
                        expression (src/misc.ml[286,7366+8]..[286,7366+22])
                          Pexp_tuple
                          [
                            expression (src/misc.ml[286,7366+8]..[286,7366+17])
                              Pexp_construct "::" (src/misc.ml[286,7366+11]..[286,7366+13])
                              Some
                                expression (src/misc.ml[286,7366+8]..[286,7366+17]) ghost
                                  Pexp_tuple
                                  [
                                    expression (src/misc.ml[286,7366+8]..[286,7366+10])
                                      Pexp_ident "x1" (src/misc.ml[286,7366+8]..[286,7366+10])
                                    expression (src/misc.ml[286,7366+14]..[286,7366+17])
                                      Pexp_ident "ys1" (src/misc.ml[286,7366+14]..[286,7366+17])
                                  ]
                            expression (src/misc.ml[286,7366+19]..[286,7366+22])
                              Pexp_ident "yss" (src/misc.ml[286,7366+19]..[286,7366+22])
                          ]
                        Some
                          expression (src/misc.ml[288,7400+8]..[288,7400+24])
                            Pexp_tuple
                            [
                              expression (src/misc.ml[288,7400+8]..[288,7400+12])
                                Pexp_construct "::" (src/misc.ml[288,7400+9]..[288,7400+12]) ghost
                                Some
                                  expression (src/misc.ml[288,7400+9]..[288,7400+12]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/misc.ml[288,7400+9]..[288,7400+11])
                                        Pexp_ident "x1" (src/misc.ml[288,7400+9]..[288,7400+11])
                                      expression (src/misc.ml[288,7400+11]..[288,7400+12]) ghost
                                        Pexp_construct "[]" (src/misc.ml[288,7400+11]..[288,7400+12]) ghost
                                        None
                                    ]
                              expression (src/misc.ml[288,7400+14]..[288,7400+24])
                                Pexp_construct "::" (src/misc.ml[288,7400+18]..[288,7400+20])
                                Some
                                  expression (src/misc.ml[288,7400+14]..[288,7400+24]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/misc.ml[288,7400+14]..[288,7400+17])
                                        Pexp_ident "ys1" (src/misc.ml[288,7400+14]..[288,7400+17])
                                      expression (src/misc.ml[288,7400+21]..[288,7400+24])
                                        Pexp_ident "yss" (src/misc.ml[288,7400+21]..[288,7400+24])
                                    ]
                            ]
                ]
    ]
  structure_item (src/misc.ml[290,7426+0]..[296,7539+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[290,7426+4]..[290,7426+10])
          Ppat_var "levels" (src/misc.ml[290,7426+4]..[290,7426+10])
        expression (src/misc.ml[290,7426+11]..[296,7539+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[290,7426+11]..[290,7426+14])
            Ppat_var "cmp" (src/misc.ml[290,7426+11]..[290,7426+14])
          expression (src/misc.ml[290,7426+15]..[296,7539+16]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[290,7426+15]..[290,7426+17])
              Ppat_var "xs" (src/misc.ml[290,7426+15]..[290,7426+17])
            expression (src/misc.ml[291,7446+2]..[296,7539+16])
              Pexp_match
              expression (src/misc.ml[291,7446+8]..[291,7446+10])
                Pexp_ident "xs" (src/misc.ml[291,7446+8]..[291,7446+10])
              [
                <case>
                  pattern (src/misc.ml[292,7462+4]..[292,7462+6])
                    Ppat_construct "[]" (src/misc.ml[292,7462+4]..[292,7462+6])
                    None
                  expression (src/misc.ml[293,7472+6]..[293,7472+8])
                    Pexp_construct "[]" (src/misc.ml[293,7472+6]..[293,7472+8])
                    None
                <case>
                  pattern (src/misc.ml[294,7481+4]..[294,7481+12])
                    Ppat_construct "::" (src/misc.ml[294,7481+7]..[294,7481+9])
                    Some
                      []
                      pattern (src/misc.ml[294,7481+4]..[294,7481+12]) ghost
                        Ppat_tuple
                        [
                          pattern (src/misc.ml[294,7481+4]..[294,7481+6])
                            Ppat_var "x1" (src/misc.ml[294,7481+4]..[294,7481+6])
                          pattern (src/misc.ml[294,7481+10]..[294,7481+12])
                            Ppat_var "xs" (src/misc.ml[294,7481+10]..[294,7481+12])
                        ]
                  expression (src/misc.ml[295,7497+6]..[296,7539+16])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/misc.ml[295,7497+10]..[295,7497+18])
                          Ppat_tuple
                          [
                            pattern (src/misc.ml[295,7497+10]..[295,7497+13])
                              Ppat_var "ys1" (src/misc.ml[295,7497+10]..[295,7497+13])
                            pattern (src/misc.ml[295,7497+15]..[295,7497+18])
                              Ppat_var "yss" (src/misc.ml[295,7497+15]..[295,7497+18])
                          ]
                        expression (src/misc.ml[295,7497+21]..[295,7497+38])
                          Pexp_apply
                          expression (src/misc.ml[295,7497+21]..[295,7497+28])
                            Pexp_ident "levels1" (src/misc.ml[295,7497+21]..[295,7497+28])
                          [
                            <arg>
                            Nolabel
                              expression (src/misc.ml[295,7497+29]..[295,7497+32])
                                Pexp_ident "cmp" (src/misc.ml[295,7497+29]..[295,7497+32])
                            <arg>
                            Nolabel
                              expression (src/misc.ml[295,7497+33]..[295,7497+35])
                                Pexp_ident "x1" (src/misc.ml[295,7497+33]..[295,7497+35])
                            <arg>
                            Nolabel
                              expression (src/misc.ml[295,7497+36]..[295,7497+38])
                                Pexp_ident "xs" (src/misc.ml[295,7497+36]..[295,7497+38])
                          ]
                    ]
                    expression (src/misc.ml[296,7539+6]..[296,7539+16])
                      Pexp_construct "::" (src/misc.ml[296,7539+10]..[296,7539+12])
                      Some
                        expression (src/misc.ml[296,7539+6]..[296,7539+16]) ghost
                          Pexp_tuple
                          [
                            expression (src/misc.ml[296,7539+6]..[296,7539+9])
                              Pexp_ident "ys1" (src/misc.ml[296,7539+6]..[296,7539+9])
                            expression (src/misc.ml[296,7539+13]..[296,7539+16])
                              Pexp_ident "yss" (src/misc.ml[296,7539+13]..[296,7539+16])
                          ]
              ]
    ]
  structure_item (src/misc.ml[304,7867+0]..[313,8265+47])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[304,7867+4]..[304,7867+10])
          Ppat_var "insert" (src/misc.ml[304,7867+4]..[304,7867+10])
        expression (src/misc.ml[304,7867+11]..[313,8265+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[304,7867+11]..[304,7867+15])
            Ppat_var "<=" (src/misc.ml[304,7867+11]..[304,7867+15])
          expression (src/misc.ml[304,7867+16]..[313,8265+47]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[304,7867+16]..[304,7867+17])
              Ppat_var "x" (src/misc.ml[304,7867+16]..[304,7867+17])
            expression (src/misc.ml[304,7867+18]..[313,8265+47]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/misc.ml[304,7867+18]..[304,7867+20])
                Ppat_var "ys" (src/misc.ml[304,7867+18]..[304,7867+20])
              expression (src/misc.ml[308,8101+2]..[313,8265+47])
                Pexp_ifthenelse
                expression (src/misc.ml[308,8101+5]..[308,8101+37])
                  Pexp_apply
                  expression (src/misc.ml[308,8101+5]..[308,8101+16])
                    Pexp_ident "List.exists" (src/misc.ml[308,8101+5]..[308,8101+16])
                  [
                    <arg>
                    Nolabel
                      expression (src/misc.ml[308,8101+17]..[308,8101+34])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/misc.ml[308,8101+22]..[308,8101+23])
                          Ppat_var "y" (src/misc.ml[308,8101+22]..[308,8101+23])
                        expression (src/misc.ml[308,8101+27]..[308,8101+33])
                          Pexp_apply
                          expression (src/misc.ml[308,8101+29]..[308,8101+31])
                            Pexp_ident "<=" (src/misc.ml[308,8101+29]..[308,8101+31])
                          [
                            <arg>
                            Nolabel
                              expression (src/misc.ml[308,8101+27]..[308,8101+28])
                                Pexp_ident "x" (src/misc.ml[308,8101+27]..[308,8101+28])
                            <arg>
                            Nolabel
                              expression (src/misc.ml[308,8101+32]..[308,8101+33])
                                Pexp_ident "y" (src/misc.ml[308,8101+32]..[308,8101+33])
                          ]
                    <arg>
                    Nolabel
                      expression (src/misc.ml[308,8101+35]..[308,8101+37])
                        Pexp_ident "ys" (src/misc.ml[308,8101+35]..[308,8101+37])
                  ]
                expression (src/misc.ml[309,8144+4]..[309,8144+6])
                  Pexp_ident "ys" (src/misc.ml[309,8144+4]..[309,8144+6])
                Some
                  expression (src/misc.ml[313,8265+4]..[313,8265+47])
                    Pexp_construct "::" (src/misc.ml[313,8265+6]..[313,8265+8])
                    Some
                      expression (src/misc.ml[313,8265+4]..[313,8265+47]) ghost
                        Pexp_tuple
                        [
                          expression (src/misc.ml[313,8265+4]..[313,8265+5])
                            Pexp_ident "x" (src/misc.ml[313,8265+4]..[313,8265+5])
                          expression (src/misc.ml[313,8265+9]..[313,8265+47])
                            Pexp_apply
                            expression (src/misc.ml[313,8265+9]..[313,8265+20])
                              Pexp_ident "List.filter" (src/misc.ml[313,8265+9]..[313,8265+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/misc.ml[313,8265+21]..[313,8265+44])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/misc.ml[313,8265+26]..[313,8265+27])
                                    Ppat_var "y" (src/misc.ml[313,8265+26]..[313,8265+27])
                                  expression (src/misc.ml[313,8265+31]..[313,8265+43])
                                    Pexp_apply
                                    expression (src/misc.ml[313,8265+31]..[313,8265+34])
                                      Pexp_ident "not" (src/misc.ml[313,8265+31]..[313,8265+34])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/misc.ml[313,8265+35]..[313,8265+43])
                                          Pexp_apply
                                          expression (src/misc.ml[313,8265+38]..[313,8265+40])
                                            Pexp_ident "<=" (src/misc.ml[313,8265+38]..[313,8265+40])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/misc.ml[313,8265+36]..[313,8265+37])
                                                Pexp_ident "y" (src/misc.ml[313,8265+36]..[313,8265+37])
                                            <arg>
                                            Nolabel
                                              expression (src/misc.ml[313,8265+41]..[313,8265+42])
                                                Pexp_ident "x" (src/misc.ml[313,8265+41]..[313,8265+42])
                                          ]
                                    ]
                              <arg>
                              Nolabel
                                expression (src/misc.ml[313,8265+45]..[313,8265+47])
                                  Pexp_ident "ys" (src/misc.ml[313,8265+45]..[313,8265+47])
                            ]
                        ]
    ]
  structure_item (src/misc.ml[325,8844+0]..[326,8863+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[325,8844+4]..[325,8844+8])
          Ppat_var "trim" (src/misc.ml[325,8844+4]..[325,8844+8])
        expression (src/misc.ml[325,8844+9]..[326,8863+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[325,8844+9]..[325,8844+13])
            Ppat_var "<=" (src/misc.ml[325,8844+9]..[325,8844+13])
          expression (src/misc.ml[325,8844+14]..[326,8863+37]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[325,8844+14]..[325,8844+16])
              Ppat_var "xs" (src/misc.ml[325,8844+14]..[325,8844+16])
            expression (src/misc.ml[326,8863+2]..[326,8863+37])
              Pexp_apply
              expression (src/misc.ml[326,8863+2]..[326,8863+17])
                Pexp_ident "List.fold_right" (src/misc.ml[326,8863+2]..[326,8863+17])
              [
                <arg>
                Nolabel
                  expression (src/misc.ml[326,8863+18]..[326,8863+31])
                    Pexp_apply
                    expression (src/misc.ml[326,8863+19]..[326,8863+25])
                      Pexp_ident "insert" (src/misc.ml[326,8863+19]..[326,8863+25])
                    [
                      <arg>
                      Nolabel
                        expression (src/misc.ml[326,8863+26]..[326,8863+30])
                          Pexp_ident "<=" (src/misc.ml[326,8863+26]..[326,8863+30])
                    ]
                <arg>
                Nolabel
                  expression (src/misc.ml[326,8863+32]..[326,8863+34])
                    Pexp_ident "xs" (src/misc.ml[326,8863+32]..[326,8863+34])
                <arg>
                Nolabel
                  expression (src/misc.ml[326,8863+35]..[326,8863+37])
                    Pexp_construct "[]" (src/misc.ml[326,8863+35]..[326,8863+37])
                    None
              ]
    ]
  structure_item (src/misc.ml[328,8902+0]..[336,9030+21])
    Pstr_value Rec
    [
      <def>
        pattern (src/misc.ml[328,8902+8]..[328,8902+12])
          Ppat_var "dup1" (src/misc.ml[328,8902+8]..[328,8902+12])
        expression (src/misc.ml[328,8902+13]..[336,9030+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[328,8902+13]..[328,8902+16])
            Ppat_var "cmp" (src/misc.ml[328,8902+13]..[328,8902+16])
          expression (src/misc.ml[328,8902+17]..[336,9030+21]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[328,8902+17]..[328,8902+18])
              Ppat_var "x" (src/misc.ml[328,8902+17]..[328,8902+18])
            expression (src/misc.ml[328,8902+19]..[336,9030+21]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/misc.ml[328,8902+19]..[328,8902+21])
                Ppat_var "ys" (src/misc.ml[328,8902+19]..[328,8902+21])
              expression (src/misc.ml[329,8926+2]..[336,9030+21])
                Pexp_match
                expression (src/misc.ml[329,8926+8]..[329,8926+10])
                  Pexp_ident "ys" (src/misc.ml[329,8926+8]..[329,8926+10])
                [
                  <case>
                    pattern (src/misc.ml[330,8942+4]..[330,8942+6])
                      Ppat_construct "[]" (src/misc.ml[330,8942+4]..[330,8942+6])
                      None
                    expression (src/misc.ml[331,8952+6]..[331,8952+10])
                      Pexp_construct "None" (src/misc.ml[331,8952+6]..[331,8952+10])
                      None
                  <case>
                    pattern (src/misc.ml[332,8963+4]..[332,8963+11])
                      Ppat_construct "::" (src/misc.ml[332,8963+6]..[332,8963+8])
                      Some
                        []
                        pattern (src/misc.ml[332,8963+4]..[332,8963+11]) ghost
                          Ppat_tuple
                          [
                            pattern (src/misc.ml[332,8963+4]..[332,8963+5])
                              Ppat_var "y" (src/misc.ml[332,8963+4]..[332,8963+5])
                            pattern (src/misc.ml[332,8963+9]..[332,8963+11])
                              Ppat_var "ys" (src/misc.ml[332,8963+9]..[332,8963+11])
                          ]
                    expression (src/misc.ml[333,8978+6]..[336,9030+21])
                      Pexp_ifthenelse
                      expression (src/misc.ml[333,8978+9]..[333,8978+20])
                        Pexp_apply
                        expression (src/misc.ml[333,8978+17]..[333,8978+18])
                          Pexp_ident "=" (src/misc.ml[333,8978+17]..[333,8978+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/misc.ml[333,8978+9]..[333,8978+16])
                              Pexp_apply
                              expression (src/misc.ml[333,8978+9]..[333,8978+12])
                                Pexp_ident "cmp" (src/misc.ml[333,8978+9]..[333,8978+12])
                              [
                                <arg>
                                Nolabel
                                  expression (src/misc.ml[333,8978+13]..[333,8978+14])
                                    Pexp_ident "x" (src/misc.ml[333,8978+13]..[333,8978+14])
                                <arg>
                                Nolabel
                                  expression (src/misc.ml[333,8978+15]..[333,8978+16])
                                    Pexp_ident "y" (src/misc.ml[333,8978+15]..[333,8978+16])
                              ]
                          <arg>
                          Nolabel
                            expression (src/misc.ml[333,8978+19]..[333,8978+20])
                              Pexp_constant PConst_int (0,None)
                        ]
                      expression (src/misc.ml[334,9004+8]..[334,9004+14])
                        Pexp_construct "Some" (src/misc.ml[334,9004+8]..[334,9004+12])
                        Some
                          expression (src/misc.ml[334,9004+13]..[334,9004+14])
                            Pexp_ident "x" (src/misc.ml[334,9004+13]..[334,9004+14])
                      Some
                        expression (src/misc.ml[336,9030+8]..[336,9030+21])
                          Pexp_apply
                          expression (src/misc.ml[336,9030+8]..[336,9030+12])
                            Pexp_ident "dup1" (src/misc.ml[336,9030+8]..[336,9030+12])
                          [
                            <arg>
                            Nolabel
                              expression (src/misc.ml[336,9030+13]..[336,9030+16])
                                Pexp_ident "cmp" (src/misc.ml[336,9030+13]..[336,9030+16])
                            <arg>
                            Nolabel
                              expression (src/misc.ml[336,9030+17]..[336,9030+18])
                                Pexp_ident "y" (src/misc.ml[336,9030+17]..[336,9030+18])
                            <arg>
                            Nolabel
                              expression (src/misc.ml[336,9030+19]..[336,9030+21])
                                Pexp_ident "ys" (src/misc.ml[336,9030+19]..[336,9030+21])
                          ]
                ]
    ]
  structure_item (src/misc.ml[338,9053+0]..[343,9122+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[338,9053+4]..[338,9053+7])
          Ppat_var "dup" (src/misc.ml[338,9053+4]..[338,9053+7])
        expression (src/misc.ml[338,9053+8]..[343,9122+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[338,9053+8]..[338,9053+11])
            Ppat_var "cmp" (src/misc.ml[338,9053+8]..[338,9053+11])
          expression (src/misc.ml[338,9053+12]..[343,9122+19]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[338,9053+12]..[338,9053+14])
              Ppat_var "xs" (src/misc.ml[338,9053+12]..[338,9053+14])
            expression (src/misc.ml[339,9070+2]..[343,9122+19])
              Pexp_match
              expression (src/misc.ml[339,9070+8]..[339,9070+10])
                Pexp_ident "xs" (src/misc.ml[339,9070+8]..[339,9070+10])
              [
                <case>
                  pattern (src/misc.ml[340,9086+4]..[340,9086+6])
                    Ppat_construct "[]" (src/misc.ml[340,9086+4]..[340,9086+6])
                    None
                  expression (src/misc.ml[341,9096+6]..[341,9096+10])
                    Pexp_construct "None" (src/misc.ml[341,9096+6]..[341,9096+10])
                    None
                <case>
                  pattern (src/misc.ml[342,9107+4]..[342,9107+11])
                    Ppat_construct "::" (src/misc.ml[342,9107+6]..[342,9107+8])
                    Some
                      []
                      pattern (src/misc.ml[342,9107+4]..[342,9107+11]) ghost
                        Ppat_tuple
                        [
                          pattern (src/misc.ml[342,9107+4]..[342,9107+5])
                            Ppat_var "x" (src/misc.ml[342,9107+4]..[342,9107+5])
                          pattern (src/misc.ml[342,9107+9]..[342,9107+11])
                            Ppat_var "xs" (src/misc.ml[342,9107+9]..[342,9107+11])
                        ]
                  expression (src/misc.ml[343,9122+6]..[343,9122+19])
                    Pexp_apply
                    expression (src/misc.ml[343,9122+6]..[343,9122+10])
                      Pexp_ident "dup1" (src/misc.ml[343,9122+6]..[343,9122+10])
                    [
                      <arg>
                      Nolabel
                        expression (src/misc.ml[343,9122+11]..[343,9122+14])
                          Pexp_ident "cmp" (src/misc.ml[343,9122+11]..[343,9122+14])
                      <arg>
                      Nolabel
                        expression (src/misc.ml[343,9122+15]..[343,9122+16])
                          Pexp_ident "x" (src/misc.ml[343,9122+15]..[343,9122+16])
                      <arg>
                      Nolabel
                        expression (src/misc.ml[343,9122+17]..[343,9122+19])
                          Pexp_ident "xs" (src/misc.ml[343,9122+17]..[343,9122+19])
                    ]
              ]
    ]
  structure_item (src/misc.ml[345,9143+0]..[350,9224+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[345,9143+4]..[345,9143+8])
          Ppat_var "once" (src/misc.ml[345,9143+4]..[345,9143+8])
        expression (src/misc.ml[345,9143+9]..[350,9224+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[345,9143+9]..[345,9143+10])
            Ppat_var "x" (src/misc.ml[345,9143+9]..[345,9143+10])
          expression (src/misc.ml[345,9143+11]..[350,9224+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[345,9143+11]..[345,9143+12])
              Ppat_var "y" (src/misc.ml[345,9143+11]..[345,9143+12])
            expression (src/misc.ml[346,9158+2]..[350,9224+10])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/misc.ml[346,9158+6]..[346,9158+7])
                    Ppat_var "s" (src/misc.ml[346,9158+6]..[346,9158+7])
                  expression (src/misc.ml[346,9158+10]..[346,9158+15])
                    Pexp_apply
                    expression (src/misc.ml[346,9158+10]..[346,9158+13])
                      Pexp_ident "ref" (src/misc.ml[346,9158+10]..[346,9158+13])
                    [
                      <arg>
                      Nolabel
                        expression (src/misc.ml[346,9158+14]..[346,9158+15])
                          Pexp_ident "x" (src/misc.ml[346,9158+14]..[346,9158+15])
                    ]
              ]
              expression (src/misc.ml[347,9177+2]..[350,9224+10])
                Pexp_fun
                Nolabel
                None
                pattern (src/misc.ml[347,9177+6]..[347,9177+8])
                  Ppat_construct "()" (src/misc.ml[347,9177+6]..[347,9177+8])
                  None
                expression (src/misc.ml[348,9189+4]..[350,9224+10])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/misc.ml[348,9189+8]..[348,9189+14])
                        Ppat_var "result" (src/misc.ml[348,9189+8]..[348,9189+14])
                      expression (src/misc.ml[348,9189+17]..[348,9189+19])
                        Pexp_apply
                        expression (src/misc.ml[348,9189+17]..[348,9189+18])
                          Pexp_ident "!" (src/misc.ml[348,9189+17]..[348,9189+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/misc.ml[348,9189+18]..[348,9189+19])
                              Pexp_ident "s" (src/misc.ml[348,9189+18]..[348,9189+19])
                        ]
                  ]
                  expression (src/misc.ml[349,9212+4]..[350,9224+10])
                    Pexp_sequence
                    expression (src/misc.ml[349,9212+4]..[349,9212+10])
                      Pexp_apply
                      expression (src/misc.ml[349,9212+6]..[349,9212+8])
                        Pexp_ident ":=" (src/misc.ml[349,9212+6]..[349,9212+8])
                      [
                        <arg>
                        Nolabel
                          expression (src/misc.ml[349,9212+4]..[349,9212+5])
                            Pexp_ident "s" (src/misc.ml[349,9212+4]..[349,9212+5])
                        <arg>
                        Nolabel
                          expression (src/misc.ml[349,9212+9]..[349,9212+10])
                            Pexp_ident "y" (src/misc.ml[349,9212+9]..[349,9212+10])
                      ]
                    expression (src/misc.ml[350,9224+4]..[350,9224+10])
                      Pexp_ident "result" (src/misc.ml[350,9224+4]..[350,9224+10])
    ]
  structure_item (src/misc.ml[352,9236+0]..[364,9509+3])
    Pstr_module
    "ListExtras" (src/misc.ml[352,9236+7]..[352,9236+17])
      module_expr (src/misc.ml[352,9236+20]..[364,9509+3])
        Pmod_structure
        [
          structure_item (src/misc.ml[353,9263+2]..[361,9438+13])
            Pstr_value Rec
            [
              <def>
                pattern (src/misc.ml[353,9263+10]..[353,9263+15])
                  Ppat_var "equal" (src/misc.ml[353,9263+10]..[353,9263+15])
                expression (src/misc.ml[353,9263+16]..[361,9438+13]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/misc.ml[353,9263+16]..[353,9263+19])
                    Ppat_var "=" (src/misc.ml[353,9263+16]..[353,9263+19])
                  expression (src/misc.ml[353,9263+20]..[361,9438+13]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/misc.ml[353,9263+20]..[353,9263+22])
                      Ppat_var "xs" (src/misc.ml[353,9263+20]..[353,9263+22])
                    expression (src/misc.ml[353,9263+23]..[361,9438+13]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/misc.ml[353,9263+23]..[353,9263+25])
                        Ppat_var "ys" (src/misc.ml[353,9263+23]..[353,9263+25])
                      expression (src/misc.ml[354,9291+4]..[361,9438+13])
                        Pexp_match
                        expression (src/misc.ml[354,9291+10]..[354,9291+16])
                          Pexp_tuple
                          [
                            expression (src/misc.ml[354,9291+10]..[354,9291+12])
                              Pexp_ident "xs" (src/misc.ml[354,9291+10]..[354,9291+12])
                            expression (src/misc.ml[354,9291+14]..[354,9291+16])
                              Pexp_ident "ys" (src/misc.ml[354,9291+14]..[354,9291+16])
                          ]
                        [
                          <case>
                            pattern (src/misc.ml[355,9313+6]..[355,9313+12])
                              Ppat_tuple
                              [
                                pattern (src/misc.ml[355,9313+6]..[355,9313+8])
                                  Ppat_construct "[]" (src/misc.ml[355,9313+6]..[355,9313+8])
                                  None
                                pattern (src/misc.ml[355,9313+10]..[355,9313+12])
                                  Ppat_construct "[]" (src/misc.ml[355,9313+10]..[355,9313+12])
                                  None
                              ]
                            expression (src/misc.ml[356,9329+8]..[356,9329+12])
                              Pexp_construct "true" (src/misc.ml[356,9329+8]..[356,9329+12])
                              None
                          <case>
                            pattern (src/misc.ml[357,9342+6]..[357,9342+22])
                              Ppat_tuple
                              [
                                pattern (src/misc.ml[357,9342+6]..[357,9342+13])
                                  Ppat_construct "::" (src/misc.ml[357,9342+8]..[357,9342+10])
                                  Some
                                    []
                                    pattern (src/misc.ml[357,9342+6]..[357,9342+13]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (src/misc.ml[357,9342+6]..[357,9342+7])
                                          Ppat_var "x" (src/misc.ml[357,9342+6]..[357,9342+7])
                                        pattern (src/misc.ml[357,9342+11]..[357,9342+13])
                                          Ppat_var "xs" (src/misc.ml[357,9342+11]..[357,9342+13])
                                      ]
                                pattern (src/misc.ml[357,9342+15]..[357,9342+22])
                                  Ppat_construct "::" (src/misc.ml[357,9342+17]..[357,9342+19])
                                  Some
                                    []
                                    pattern (src/misc.ml[357,9342+15]..[357,9342+22]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (src/misc.ml[357,9342+15]..[357,9342+16])
                                          Ppat_var "y" (src/misc.ml[357,9342+15]..[357,9342+16])
                                        pattern (src/misc.ml[357,9342+20]..[357,9342+22])
                                          Ppat_var "ys" (src/misc.ml[357,9342+20]..[357,9342+22])
                                      ]
                              ]
                            expression (src/misc.ml[358,9368+8]..[358,9368+32])
                              Pexp_apply
                              expression (src/misc.ml[358,9368+14]..[358,9368+16])
                                Pexp_ident "&&" (src/misc.ml[358,9368+14]..[358,9368+16])
                              [
                                <arg>
                                Nolabel
                                  expression (src/misc.ml[358,9368+8]..[358,9368+13])
                                    Pexp_apply
                                    expression (src/misc.ml[358,9368+10]..[358,9368+11])
                                      Pexp_ident "=" (src/misc.ml[358,9368+10]..[358,9368+11])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/misc.ml[358,9368+8]..[358,9368+9])
                                          Pexp_ident "x" (src/misc.ml[358,9368+8]..[358,9368+9])
                                      <arg>
                                      Nolabel
                                        expression (src/misc.ml[358,9368+12]..[358,9368+13])
                                          Pexp_ident "y" (src/misc.ml[358,9368+12]..[358,9368+13])
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/misc.ml[358,9368+17]..[358,9368+32])
                                    Pexp_apply
                                    expression (src/misc.ml[358,9368+17]..[358,9368+22])
                                      Pexp_ident "equal" (src/misc.ml[358,9368+17]..[358,9368+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/misc.ml[358,9368+23]..[358,9368+26])
                                          Pexp_ident "=" (src/misc.ml[358,9368+23]..[358,9368+26])
                                      <arg>
                                      Nolabel
                                        expression (src/misc.ml[358,9368+27]..[358,9368+29])
                                          Pexp_ident "xs" (src/misc.ml[358,9368+27]..[358,9368+29])
                                      <arg>
                                      Nolabel
                                        expression (src/misc.ml[358,9368+30]..[358,9368+32])
                                          Pexp_ident "ys" (src/misc.ml[358,9368+30]..[358,9368+32])
                                    ]
                              ]
                          <case>
                            pattern (src/misc.ml[359,9401+6]..[360,9418+16])
                              Ppat_or
                              pattern (src/misc.ml[359,9401+6]..[359,9401+16])
                                Ppat_tuple
                                [
                                  pattern (src/misc.ml[359,9401+6]..[359,9401+12])
                                    Ppat_construct "::" (src/misc.ml[359,9401+8]..[359,9401+10])
                                    Some
                                      []
                                      pattern (src/misc.ml[359,9401+6]..[359,9401+12]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (src/misc.ml[359,9401+6]..[359,9401+7])
                                            Ppat_any
                                          pattern (src/misc.ml[359,9401+11]..[359,9401+12])
                                            Ppat_any
                                        ]
                                  pattern (src/misc.ml[359,9401+14]..[359,9401+16])
                                    Ppat_construct "[]" (src/misc.ml[359,9401+14]..[359,9401+16])
                                    None
                                ]
                              pattern (src/misc.ml[360,9418+6]..[360,9418+16])
                                Ppat_tuple
                                [
                                  pattern (src/misc.ml[360,9418+6]..[360,9418+8])
                                    Ppat_construct "[]" (src/misc.ml[360,9418+6]..[360,9418+8])
                                    None
                                  pattern (src/misc.ml[360,9418+10]..[360,9418+16])
                                    Ppat_construct "::" (src/misc.ml[360,9418+12]..[360,9418+14])
                                    Some
                                      []
                                      pattern (src/misc.ml[360,9418+10]..[360,9418+16]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (src/misc.ml[360,9418+10]..[360,9418+11])
                                            Ppat_any
                                          pattern (src/misc.ml[360,9418+15]..[360,9418+16])
                                            Ppat_any
                                        ]
                                ]
                            expression (src/misc.ml[361,9438+8]..[361,9438+13])
                              Pexp_construct "false" (src/misc.ml[361,9438+8]..[361,9438+13])
                              None
                        ]
            ]
          structure_item (src/misc.ml[362,9452+2]..[363,9473+35])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/misc.ml[362,9452+6]..[362,9452+10])
                  Ppat_var "hash" (src/misc.ml[362,9452+6]..[362,9452+10])
                expression (src/misc.ml[362,9452+11]..[363,9473+35]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/misc.ml[362,9452+11]..[362,9452+15])
                    Ppat_var "hash" (src/misc.ml[362,9452+11]..[362,9452+15])
                  expression (src/misc.ml[362,9452+16]..[363,9473+35]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/misc.ml[362,9452+16]..[362,9452+18])
                      Ppat_var "xs" (src/misc.ml[362,9452+16]..[362,9452+18])
                    expression (src/misc.ml[363,9473+4]..[363,9473+35])
                      Pexp_apply
                      expression (src/misc.ml[363,9473+4]..[363,9473+16])
                        Pexp_ident "Hashtbl.hash" (src/misc.ml[363,9473+4]..[363,9473+16])
                      [
                        <arg>
                        Nolabel
                          expression (src/misc.ml[363,9473+17]..[363,9473+35])
                            Pexp_apply
                            expression (src/misc.ml[363,9473+18]..[363,9473+26])
                              Pexp_ident "List.map" (src/misc.ml[363,9473+18]..[363,9473+26])
                            [
                              <arg>
                              Nolabel
                                expression (src/misc.ml[363,9473+27]..[363,9473+31])
                                  Pexp_ident "hash" (src/misc.ml[363,9473+27]..[363,9473+31])
                              <arg>
                              Nolabel
                                expression (src/misc.ml[363,9473+32]..[363,9473+34])
                                  Pexp_ident "xs" (src/misc.ml[363,9473+32]..[363,9473+34])
                            ]
                      ]
            ]
        ]
  structure_item (src/misc.ml[366,9514+0]..[370,9585+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[366,9514+4]..[366,9514+7])
          Ppat_var "nth" (src/misc.ml[366,9514+4]..[366,9514+7])
        expression (src/misc.ml[366,9514+10]..[370,9585+32])
          Pexp_function
          [
            <case>
              pattern (src/misc.ml[367,9533+4]..[367,9533+5])
                Ppat_constant PConst_int (1,None)
              expression (src/misc.ml[367,9533+9]..[367,9533+16])
                Pexp_constant PConst_string("first",(src/misc.ml[367,9533+10]..[367,9533+15]),None)
            <case>
              pattern (src/misc.ml[368,9550+4]..[368,9550+5])
                Ppat_constant PConst_int (2,None)
              expression (src/misc.ml[368,9550+9]..[368,9550+17])
                Pexp_constant PConst_string("second",(src/misc.ml[368,9550+10]..[368,9550+16]),None)
            <case>
              pattern (src/misc.ml[369,9568+4]..[369,9568+5])
                Ppat_constant PConst_int (3,None)
              expression (src/misc.ml[369,9568+9]..[369,9568+16])
                Pexp_constant PConst_string("third",(src/misc.ml[369,9568+10]..[369,9568+15]),None)
            <case>
              pattern (src/misc.ml[370,9585+4]..[370,9585+5])
                Ppat_var "i" (src/misc.ml[370,9585+4]..[370,9585+5])
              expression (src/misc.ml[370,9585+9]..[370,9585+32])
                Pexp_apply
                expression (src/misc.ml[370,9585+9]..[370,9585+23])
                  Pexp_ident "Printf.sprintf" (src/misc.ml[370,9585+9]..[370,9585+23])
                [
                  <arg>
                  Nolabel
                    expression (src/misc.ml[370,9585+24]..[370,9585+30])
                      Pexp_constant PConst_string("%dth",(src/misc.ml[370,9585+25]..[370,9585+29]),None)
                  <arg>
                  Nolabel
                    expression (src/misc.ml[370,9585+31]..[370,9585+32])
                      Pexp_ident "i" (src/misc.ml[370,9585+31]..[370,9585+32])
                ]
          ]
    ]
  structure_item (src/misc.ml[372,9619+0]..[376,9687+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[372,9619+4]..[372,9619+9])
          Ppat_var "count" (src/misc.ml[372,9619+4]..[372,9619+9])
        expression (src/misc.ml[372,9619+12]..[376,9687+30])
          Pexp_function
          [
            <case>
              pattern (src/misc.ml[373,9640+4]..[373,9640+5])
                Ppat_constant PConst_int (1,None)
              expression (src/misc.ml[373,9640+9]..[373,9640+14])
                Pexp_constant PConst_string("one",(src/misc.ml[373,9640+10]..[373,9640+13]),None)
            <case>
              pattern (src/misc.ml[374,9655+4]..[374,9655+5])
                Ppat_constant PConst_int (2,None)
              expression (src/misc.ml[374,9655+9]..[374,9655+14])
                Pexp_constant PConst_string("two",(src/misc.ml[374,9655+10]..[374,9655+13]),None)
            <case>
              pattern (src/misc.ml[375,9670+4]..[375,9670+5])
                Ppat_constant PConst_int (3,None)
              expression (src/misc.ml[375,9670+9]..[375,9670+16])
                Pexp_constant PConst_string("three",(src/misc.ml[375,9670+10]..[375,9670+15]),None)
            <case>
              pattern (src/misc.ml[376,9687+4]..[376,9687+5])
                Ppat_var "i" (src/misc.ml[376,9687+4]..[376,9687+5])
              expression (src/misc.ml[376,9687+9]..[376,9687+30])
                Pexp_apply
                expression (src/misc.ml[376,9687+9]..[376,9687+23])
                  Pexp_ident "Printf.sprintf" (src/misc.ml[376,9687+9]..[376,9687+23])
                [
                  <arg>
                  Nolabel
                    expression (src/misc.ml[376,9687+24]..[376,9687+28])
                      Pexp_constant PConst_string("%d",(src/misc.ml[376,9687+25]..[376,9687+27]),None)
                  <arg>
                  Nolabel
                    expression (src/misc.ml[376,9687+29]..[376,9687+30])
                      Pexp_ident "i" (src/misc.ml[376,9687+29]..[376,9687+30])
                ]
          ]
    ]
  structure_item (src/misc.ml[378,9719+0]..[379,9743+48])
    Pstr_value Rec
    [
      <def>
        pattern (src/misc.ml[378,9719+8]..[378,9719+17])
          Ppat_var "list_make" (src/misc.ml[378,9719+8]..[378,9719+17])
        expression (src/misc.ml[378,9719+18]..[379,9743+48]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[378,9719+18]..[378,9719+19])
            Ppat_var "n" (src/misc.ml[378,9719+18]..[378,9719+19])
          expression (src/misc.ml[378,9719+20]..[379,9743+48]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[378,9719+20]..[378,9719+21])
              Ppat_var "x" (src/misc.ml[378,9719+20]..[378,9719+21])
            expression (src/misc.ml[379,9743+2]..[379,9743+48])
              Pexp_ifthenelse
              expression (src/misc.ml[379,9743+5]..[379,9743+10])
                Pexp_apply
                expression (src/misc.ml[379,9743+7]..[379,9743+8])
                  Pexp_ident "=" (src/misc.ml[379,9743+7]..[379,9743+8])
                [
                  <arg>
                  Nolabel
                    expression (src/misc.ml[379,9743+5]..[379,9743+6])
                      Pexp_ident "n" (src/misc.ml[379,9743+5]..[379,9743+6])
                  <arg>
                  Nolabel
                    expression (src/misc.ml[379,9743+9]..[379,9743+10])
                      Pexp_constant PConst_int (0,None)
                ]
              expression (src/misc.ml[379,9743+16]..[379,9743+18])
                Pexp_construct "[]" (src/misc.ml[379,9743+16]..[379,9743+18])
                None
              Some
                expression (src/misc.ml[379,9743+24]..[379,9743+48])
                  Pexp_construct "::" (src/misc.ml[379,9743+26]..[379,9743+28])
                  Some
                    expression (src/misc.ml[379,9743+24]..[379,9743+48]) ghost
                      Pexp_tuple
                      [
                        expression (src/misc.ml[379,9743+24]..[379,9743+25])
                          Pexp_ident "x" (src/misc.ml[379,9743+24]..[379,9743+25])
                        expression (src/misc.ml[379,9743+29]..[379,9743+48])
                          Pexp_apply
                          expression (src/misc.ml[379,9743+29]..[379,9743+38])
                            Pexp_ident "list_make" (src/misc.ml[379,9743+29]..[379,9743+38])
                          [
                            <arg>
                            Nolabel
                              expression (src/misc.ml[379,9743+39]..[379,9743+46])
                                Pexp_apply
                                expression (src/misc.ml[379,9743+42]..[379,9743+43])
                                  Pexp_ident "-" (src/misc.ml[379,9743+42]..[379,9743+43])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/misc.ml[379,9743+40]..[379,9743+41])
                                      Pexp_ident "n" (src/misc.ml[379,9743+40]..[379,9743+41])
                                  <arg>
                                  Nolabel
                                    expression (src/misc.ml[379,9743+44]..[379,9743+45])
                                      Pexp_constant PConst_int (1,None)
                                ]
                            <arg>
                            Nolabel
                              expression (src/misc.ml[379,9743+47]..[379,9743+48])
                                Pexp_ident "x" (src/misc.ml[379,9743+47]..[379,9743+48])
                          ]
                      ]
    ]
  structure_item (src/misc.ml[384,9910+0]..[391,10028+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[384,9910+4]..[384,9910+10])
          Ppat_var "digits" (src/misc.ml[384,9910+4]..[384,9910+10])
        expression (src/misc.ml[384,9910+11]..[391,10028+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[384,9910+11]..[384,9910+12])
            Ppat_var "n" (src/misc.ml[384,9910+11]..[384,9910+12])
          expression (src/misc.ml[385,9925+2]..[391,10028+10])
            Pexp_let Rec
            [
              <def>
                pattern (src/misc.ml[385,9925+10]..[385,9925+14])
                  Ppat_var "loop" (src/misc.ml[385,9925+10]..[385,9925+14])
                expression (src/misc.ml[385,9925+15]..[389,9992+30]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/misc.ml[385,9925+15]..[385,9925+19])
                    Ppat_var "accu" (src/misc.ml[385,9925+15]..[385,9925+19])
                  expression (src/misc.ml[385,9925+20]..[389,9992+30]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/misc.ml[385,9925+20]..[385,9925+21])
                      Ppat_var "n" (src/misc.ml[385,9925+20]..[385,9925+21])
                    expression (src/misc.ml[386,9949+4]..[389,9992+30])
                      Pexp_ifthenelse
                      expression (src/misc.ml[386,9949+7]..[386,9949+13])
                        Pexp_apply
                        expression (src/misc.ml[386,9949+9]..[386,9949+10])
                          Pexp_ident "<" (src/misc.ml[386,9949+9]..[386,9949+10])
                        [
                          <arg>
                          Nolabel
                            expression (src/misc.ml[386,9949+7]..[386,9949+8])
                              Pexp_ident "n" (src/misc.ml[386,9949+7]..[386,9949+8])
                          <arg>
                          Nolabel
                            expression (src/misc.ml[386,9949+11]..[386,9949+13])
                              Pexp_constant PConst_int (10,None)
                        ]
                      expression (src/misc.ml[387,9968+6]..[387,9968+14])
                        Pexp_apply
                        expression (src/misc.ml[387,9968+11]..[387,9968+12])
                          Pexp_ident "+" (src/misc.ml[387,9968+11]..[387,9968+12])
                        [
                          <arg>
                          Nolabel
                            expression (src/misc.ml[387,9968+6]..[387,9968+10])
                              Pexp_ident "accu" (src/misc.ml[387,9968+6]..[387,9968+10])
                          <arg>
                          Nolabel
                            expression (src/misc.ml[387,9968+13]..[387,9968+14])
                              Pexp_constant PConst_int (1,None)
                        ]
                      Some
                        expression (src/misc.ml[389,9992+6]..[389,9992+30])
                          Pexp_apply
                          expression (src/misc.ml[389,9992+6]..[389,9992+10])
                            Pexp_ident "loop" (src/misc.ml[389,9992+6]..[389,9992+10])
                          [
                            <arg>
                            Nolabel
                              expression (src/misc.ml[389,9992+11]..[389,9992+21])
                                Pexp_apply
                                expression (src/misc.ml[389,9992+17]..[389,9992+18])
                                  Pexp_ident "+" (src/misc.ml[389,9992+17]..[389,9992+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/misc.ml[389,9992+12]..[389,9992+16])
                                      Pexp_ident "accu" (src/misc.ml[389,9992+12]..[389,9992+16])
                                  <arg>
                                  Nolabel
                                    expression (src/misc.ml[389,9992+19]..[389,9992+20])
                                      Pexp_constant PConst_int (1,None)
                                ]
                            <arg>
                            Nolabel
                              expression (src/misc.ml[389,9992+22]..[389,9992+30])
                                Pexp_apply
                                expression (src/misc.ml[389,9992+25]..[389,9992+26])
                                  Pexp_ident "/" (src/misc.ml[389,9992+25]..[389,9992+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/misc.ml[389,9992+23]..[389,9992+24])
                                      Pexp_ident "n" (src/misc.ml[389,9992+23]..[389,9992+24])
                                  <arg>
                                  Nolabel
                                    expression (src/misc.ml[389,9992+27]..[389,9992+29])
                                      Pexp_constant PConst_int (10,None)
                                ]
                          ]
            ]
            expression (src/misc.ml[391,10028+2]..[391,10028+10])
              Pexp_apply
              expression (src/misc.ml[391,10028+2]..[391,10028+6])
                Pexp_ident "loop" (src/misc.ml[391,10028+2]..[391,10028+6])
              [
                <arg>
                Nolabel
                  expression (src/misc.ml[391,10028+7]..[391,10028+8])
                    Pexp_constant PConst_int (0,None)
                <arg>
                Nolabel
                  expression (src/misc.ml[391,10028+9]..[391,10028+10])
                    Pexp_ident "n" (src/misc.ml[391,10028+9]..[391,10028+10])
              ]
    ]
  structure_item (src/misc.ml[396,10128+0]..[397,10142+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[396,10128+4]..[396,10128+7])
          Ppat_var "pad" (src/misc.ml[396,10128+4]..[396,10128+7])
        expression (src/misc.ml[396,10128+8]..[397,10142+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[396,10128+8]..[396,10128+9])
            Ppat_var "n" (src/misc.ml[396,10128+8]..[396,10128+9])
          expression (src/misc.ml[396,10128+10]..[397,10142+43]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[396,10128+10]..[396,10128+11])
              Ppat_var "s" (src/misc.ml[396,10128+10]..[396,10128+11])
            expression (src/misc.ml[397,10142+2]..[397,10142+43])
              Pexp_apply
              expression (src/misc.ml[397,10142+40]..[397,10142+41])
                Pexp_ident "^" (src/misc.ml[397,10142+40]..[397,10142+41])
              [
                <arg>
                Nolabel
                  expression (src/misc.ml[397,10142+2]..[397,10142+39])
                    Pexp_apply
                    expression (src/misc.ml[397,10142+2]..[397,10142+13])
                      Pexp_ident "String.make" (src/misc.ml[397,10142+2]..[397,10142+13])
                    [
                      <arg>
                      Nolabel
                        expression (src/misc.ml[397,10142+14]..[397,10142+35])
                          Pexp_apply
                          expression (src/misc.ml[397,10142+17]..[397,10142+18])
                            Pexp_ident "-" (src/misc.ml[397,10142+17]..[397,10142+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/misc.ml[397,10142+15]..[397,10142+16])
                                Pexp_ident "n" (src/misc.ml[397,10142+15]..[397,10142+16])
                            <arg>
                            Nolabel
                              expression (src/misc.ml[397,10142+19]..[397,10142+34])
                                Pexp_apply
                                expression (src/misc.ml[397,10142+19]..[397,10142+32])
                                  Pexp_ident "String.length" (src/misc.ml[397,10142+19]..[397,10142+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/misc.ml[397,10142+33]..[397,10142+34])
                                      Pexp_ident "s" (src/misc.ml[397,10142+33]..[397,10142+34])
                                ]
                          ]
                      <arg>
                      Nolabel
                        expression (src/misc.ml[397,10142+36]..[397,10142+39])
                          Pexp_constant PConst_char 30
                    ]
                <arg>
                Nolabel
                  expression (src/misc.ml[397,10142+42]..[397,10142+43])
                    Pexp_ident "s" (src/misc.ml[397,10142+42]..[397,10142+43])
              ]
    ]
  structure_item (src/misc.ml[399,10187+0]..[400,10210+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[399,10187+4]..[399,10187+16])
          Ppat_var "padded_index" (src/misc.ml[399,10187+4]..[399,10187+16])
        expression (src/misc.ml[399,10187+17]..[400,10210+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/misc.ml[399,10187+17]..[399,10187+18])
            Ppat_var "n" (src/misc.ml[399,10187+17]..[399,10187+18])
          expression (src/misc.ml[399,10187+19]..[400,10210+40]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/misc.ml[399,10187+19]..[399,10187+20])
              Ppat_var "i" (src/misc.ml[399,10187+19]..[399,10187+20])
            expression (src/misc.ml[400,10210+2]..[400,10210+40])
              Pexp_apply
              expression (src/misc.ml[400,10210+2]..[400,10210+5])
                Pexp_ident "pad" (src/misc.ml[400,10210+2]..[400,10210+5])
              [
                <arg>
                Nolabel
                  expression (src/misc.ml[400,10210+6]..[400,10210+16])
                    Pexp_apply
                    expression (src/misc.ml[400,10210+7]..[400,10210+13])
                      Pexp_ident "digits" (src/misc.ml[400,10210+7]..[400,10210+13])
                    [
                      <arg>
                      Nolabel
                        expression (src/misc.ml[400,10210+14]..[400,10210+15])
                          Pexp_ident "n" (src/misc.ml[400,10210+14]..[400,10210+15])
                    ]
                <arg>
                Nolabel
                  expression (src/misc.ml[400,10210+17]..[400,10210+40])
                    Pexp_apply
                    expression (src/misc.ml[400,10210+18]..[400,10210+32])
                      Pexp_ident "Printf.sprintf" (src/misc.ml[400,10210+18]..[400,10210+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/misc.ml[400,10210+33]..[400,10210+37])
                          Pexp_constant PConst_string("%d",(src/misc.ml[400,10210+34]..[400,10210+36]),None)
                      <arg>
                      Nolabel
                        expression (src/misc.ml[400,10210+38]..[400,10210+39])
                          Pexp_ident "i" (src/misc.ml[400,10210+38]..[400,10210+39])
                    ]
              ]
    ]
]

let single = function | x::[] -> x | _ -> assert false
let rec mapd f =
  function
  | [] -> []
  | x::xs -> let (y1, y2) = f x in y1 :: y2 :: (mapd f xs)
let tabulate n f = let a = Array.init n f in Array.get a
let sum n (f : int -> int) =
  (let sum = ref 0 in
   for x = 0 to n - 1 do sum := ((!sum) + (f x)) done; !sum : int)
let with_buffer n f = let b = Buffer.create n in f b; Buffer.contents b
type 'a iter = ('a -> unit) -> unit
let separated_iter_to_string printer separator iter =
  with_buffer 32
    (fun b ->
       let first = ref true in
       iter
         (fun x ->
            if !first
            then (Buffer.add_string b (printer x); first := false)
            else
              (Buffer.add_string b separator; Buffer.add_string b (printer x))))
let separated_list_to_string printer separator xs =
  separated_iter_to_string printer separator (fun f -> List.iter f xs)
let inverse (a : 'a array) =
  (let table = Hashtbl.create (Array.length a) in
   Array.iteri
     (fun i ->
        fun data ->
          assert (not (Hashtbl.mem table data)); Hashtbl.add table data i) a;
   (fun data -> try Hashtbl.find table data with | Not_found -> assert false) : 
  'a -> int)
let support_assoc l x = try List.assoc x l with | Not_found -> x
let materialize (table : ('a, 'a option) Hashtbl.t) (x : 'a) =
  (let rec loop x =
     match Hashtbl.find table x with | None -> [] | Some x -> x :: (loop x) in
   loop x : 'a list)
let iterij i j f = for x = i to j - 1 do f x done
let iteri n f = iterij 0 n f
let rec foldij i j f accu =
  if i < j then foldij (i + 1) j f (f i accu) else accu
let foldi n f accu = foldij 0 n f accu
let rec foldij_lazy i j f accu =
  if i < j then f i (fun () -> foldij_lazy (i + 1) j f accu) else accu
let mapij start n f =
  List.rev (foldij start n (fun i -> fun accu -> (f i) :: accu) [])
let mapi n f = mapij 0 n f
let rec qfold f accu q =
  match try Some (Queue.take q) with | Queue.Empty -> None with
  | Some x -> qfold f (f accu x) q
  | None -> accu
let qiter f q =
  try while true do f (Queue.take q) done with | Queue.Empty -> ()
let rec smap f =
  function
  | [] -> []
  | x::xs as l ->
      let x' = f x
      and xs' = smap f xs in
      if (x == x') && (xs == xs') then l else x' :: xs'
let rec smapa f accu =
  function
  | [] -> (accu, [])
  | x::xs as l ->
      let (accu, x') = f accu x in
      let (accu, xs') = smapa f accu xs in
      (accu, (if (x == x') && (xs == xs') then l else x' :: xs'))
let normalize s =
  let s = Bytes.of_string s in
  let n = Bytes.length s in
  for i = 0 to n - 1 do
    (match Bytes.get s i with
     | '(' | ')' | ',' -> Bytes.set s i '_'
     | _ -> ())
  done;
  Bytes.unsafe_to_string s
let postincrement r = let x = !r in r := (x + 1); x
let filter_map f l =
  let open List in
    rev
      (fold_left
         (fun ys -> fun x -> match f x with | None -> ys | Some y -> y :: ys)
         [] l)
let new_encode_decode capacity =
  let module H =
    (Hashtbl.Make)(struct
                     type t = string
                     let equal = (=)
                     let hash = Hashtbl.hash
                   end) in
    let table = H.create capacity in
    let text = MenhirLib.InfiniteArray.make "" in
    let c = ref 0 in
    let encode (s : string) =
      (c := ((!c) + 1);
       (try H.find table s
        with
        | Not_found ->
            let i = H.length table in
            (H.add table s i; MenhirLib.InfiniteArray.set text i s; i)) : 
      int)
    and decode (i : int) = (MenhirLib.InfiniteArray.get text i : string)
    and verbose () =
      Printf.fprintf stderr "%d calls to intern; %d unique strings.\n%!" (
        !c) (H.length table) in
    (encode, decode, verbose)
let rec best (preferable : 'a -> 'a -> bool) (xs : 'a list) =
  (match xs with
   | [] -> None
   | x::[] -> Some x
   | x::xs ->
       if List.for_all (preferable x) xs
       then Some x
       else
         (match best preferable xs with
          | Some y -> if preferable y x then Some y else None
          | None -> None) : 'a option)
let rec levels1 cmp x1 xs =
  match xs with
  | [] -> ([x1], [])
  | x2::xs ->
      let (ys1, yss) = levels1 cmp x2 xs in
      if (cmp x1 x2) = 0 then ((x1 :: ys1), yss) else ([x1], (ys1 :: yss))
let levels cmp xs =
  match xs with
  | [] -> []
  | x1::xs -> let (ys1, yss) = levels1 cmp x1 xs in ys1 :: yss
let insert (<=) x ys =
  if List.exists (fun y -> x <= y) ys
  then ys
  else x :: (List.filter (fun y -> not (y <= x)) ys)
let trim (<=) xs = List.fold_right (insert (<=)) xs []
let rec dup1 cmp x ys =
  match ys with
  | [] -> None
  | y::ys -> if (cmp x y) = 0 then Some x else dup1 cmp y ys
let dup cmp xs = match xs with | [] -> None | x::xs -> dup1 cmp x xs
let once x y = let s = ref x in fun () -> let result = !s in s := y; result
module ListExtras =
  struct
    let rec equal (=) xs ys =
      match (xs, ys) with
      | ([], []) -> true
      | (x::xs, y::ys) -> (x = y) && (equal (=) xs ys)
      | (_::_, []) | ([], _::_) -> false
    let hash hash xs = Hashtbl.hash (List.map hash xs)
  end
let nth =
  function
  | 1 -> "first"
  | 2 -> "second"
  | 3 -> "third"
  | i -> Printf.sprintf "%dth" i
let count =
  function
  | 1 -> "one"
  | 2 -> "two"
  | 3 -> "three"
  | i -> Printf.sprintf "%d" i
let rec list_make n x = if n = 0 then [] else x :: (list_make (n - 1) x)
let digits n =
  let rec loop accu n = if n < 10 then accu + 1 else loop (accu + 1) (n / 10) in
  loop 0 n
let pad n s = (String.make (n - (String.length s)) '0') ^ s
let padded_index n i = pad (digits n) (Printf.sprintf "%d" i)
[
  structure_item (src/misc.ml[14,994+0]..src/misc.ml[18,1046+18])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[14,994+4]..src/misc.ml[14,994+10])
          Tpat_var "single/396"
        expression (src/misc.ml[14,994+13]..src/misc.ml[18,1046+18])
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[15,1016+4]..src/misc.ml[15,1016+9])
                Tpat_construct "::"
                [
                  pattern (src/misc.ml[15,1016+6]..src/misc.ml[15,1016+7])
                    Tpat_var "x/398"
                  pattern (src/misc.ml[15,1016+8]..src/misc.ml[15,1016+9]) ghost
                    Tpat_construct "[]"
                    []
                    None
                ]
                None
              expression (src/misc.ml[16,1029+6]..src/misc.ml[16,1029+7])
                Texp_ident "x/398"
            <case>
              pattern (src/misc.ml[17,1037+4]..src/misc.ml[17,1037+5])
                Tpat_any
              expression (src/misc.ml[18,1046+6]..src/misc.ml[18,1046+18])
                Texp_assert                expression (src/misc.ml[18,1046+13]..src/misc.ml[18,1046+18])
                  Texp_construct "false"
                  []
          ]
    ]
  structure_item (src/misc.ml[20,1066+0]..src/misc.ml[25,1152+27])
    Tstr_value Rec
    [
      <def>
        pattern (src/misc.ml[20,1066+8]..src/misc.ml[20,1066+12])
          Tpat_var "mapd/400"
        expression (src/misc.ml[20,1066+13]..src/misc.ml[25,1152+27]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[20,1066+13]..src/misc.ml[20,1066+14])
                Tpat_var "f/401"
              expression (src/misc.ml[20,1066+17]..src/misc.ml[25,1152+27])
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[21,1092+4]..src/misc.ml[21,1092+6])
                      Tpat_construct "[]"
                      []
                      None
                    expression (src/misc.ml[22,1102+6]..src/misc.ml[22,1102+8])
                      Texp_construct "[]"
                      []
                  <case>
                    pattern (src/misc.ml[23,1111+4]..src/misc.ml[23,1111+11])
                      Tpat_construct "::"
                      [
                        pattern (src/misc.ml[23,1111+4]..src/misc.ml[23,1111+5])
                          Tpat_var "x/402"
                        pattern (src/misc.ml[23,1111+9]..src/misc.ml[23,1111+11])
                          Tpat_var "xs/403"
                      ]
                      None
                    expression (src/misc.ml[24,1126+6]..src/misc.ml[25,1152+27])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/misc.ml[24,1126+10]..src/misc.ml[24,1126+16])
                            Tpat_tuple
                            [
                              pattern (src/misc.ml[24,1126+10]..src/misc.ml[24,1126+12])
                                Tpat_var "y1/404"
                              pattern (src/misc.ml[24,1126+14]..src/misc.ml[24,1126+16])
                                Tpat_var "y2/405"
                            ]
                          expression (src/misc.ml[24,1126+19]..src/misc.ml[24,1126+22])
                            Texp_apply
                            expression (src/misc.ml[24,1126+19]..src/misc.ml[24,1126+20])
                              Texp_ident "f/401"
                            [
                              <arg>
                                Nolabel
                                expression (src/misc.ml[24,1126+21]..src/misc.ml[24,1126+22])
                                  Texp_ident "x/402"
                            ]
                      ]
                      expression (src/misc.ml[25,1152+6]..src/misc.ml[25,1152+27])
                        Texp_construct "::"
                        [
                          expression (src/misc.ml[25,1152+6]..src/misc.ml[25,1152+8])
                            Texp_ident "y1/404"
                          expression (src/misc.ml[25,1152+12]..src/misc.ml[25,1152+27])
                            Texp_construct "::"
                            [
                              expression (src/misc.ml[25,1152+12]..src/misc.ml[25,1152+14])
                                Texp_ident "y2/405"
                              expression (src/misc.ml[25,1152+18]..src/misc.ml[25,1152+27])
                                Texp_apply
                                expression (src/misc.ml[25,1152+18]..src/misc.ml[25,1152+22])
                                  Texp_ident "mapd/400"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/misc.ml[25,1152+23]..src/misc.ml[25,1152+24])
                                      Texp_ident "f/401"
                                  <arg>
                                    Nolabel
                                    expression (src/misc.ml[25,1152+25]..src/misc.ml[25,1152+27])
                                      Texp_ident "xs/403"
                                ]
                            ]
                        ]
                ]
          ]
    ]
  structure_item (src/misc.ml[27,1181+0]..src/misc.ml[29,1228+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[27,1181+4]..src/misc.ml[27,1181+12])
          Tpat_var "tabulate/407"
        expression (src/misc.ml[27,1181+13]..src/misc.ml[29,1228+13]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[27,1181+13]..src/misc.ml[27,1181+14])
                Tpat_var "n/409"
              expression (src/misc.ml[27,1181+15]..src/misc.ml[29,1228+13]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[27,1181+15]..src/misc.ml[27,1181+16])
                      Tpat_var "f/410"
                    expression (src/misc.ml[28,1200+2]..src/misc.ml[29,1228+13])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/misc.ml[28,1200+6]..src/misc.ml[28,1200+7])
                            Tpat_var "a/411"
                          expression (src/misc.ml[28,1200+10]..src/misc.ml[28,1200+24])
                            Texp_apply
                            expression (src/misc.ml[28,1200+10]..src/misc.ml[28,1200+20])
                              Texp_ident "Stdlib!.Array.init"
                            [
                              <arg>
                                Nolabel
                                expression (src/misc.ml[28,1200+21]..src/misc.ml[28,1200+22])
                                  Texp_ident "n/409"
                              <arg>
                                Nolabel
                                expression (src/misc.ml[28,1200+23]..src/misc.ml[28,1200+24])
                                  Texp_ident "f/410"
                            ]
                      ]
                      expression (src/misc.ml[29,1228+2]..src/misc.ml[29,1228+13])
                        Texp_apply
                        expression (src/misc.ml[29,1228+2]..src/misc.ml[29,1228+11])
                          Texp_ident "Stdlib!.Array.get"
                        [
                          <arg>
                            Nolabel
                            expression (src/misc.ml[29,1228+12]..src/misc.ml[29,1228+13])
                              Texp_ident "a/411"
                        ]
                ]
          ]
    ]
  structure_item (src/misc.ml[31,1243+0]..src/misc.ml[36,1353+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[31,1243+4]..src/misc.ml[31,1243+7])
          Tpat_var "sum/460"
        expression (src/misc.ml[31,1243+8]..src/misc.ml[36,1353+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[31,1243+8]..src/misc.ml[31,1243+9])
                Tpat_var "n/462"
              expression (src/misc.ml[31,1243+10]..src/misc.ml[36,1353+6]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[31,1243+11]..src/misc.ml[31,1243+12])
                      extra
                        Tpat_extra_constraint
                        core_type (src/misc.ml[31,1243+15]..src/misc.ml[31,1243+25])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/misc.ml[31,1243+15]..src/misc.ml[31,1243+18])
                            Ttyp_constr "int/1!"
                            []
                          core_type (src/misc.ml[31,1243+22]..src/misc.ml[31,1243+25])
                            Ttyp_constr "int/1!"
                            []
                      Tpat_alias "f/463"
                      pattern (src/misc.ml[31,1243+11]..src/misc.ml[31,1243+12])
                        Tpat_any
                    expression (src/misc.ml[32,1278+2]..src/misc.ml[36,1353+6])
                      extra
                        Texp_constraint
                        core_type (src/misc.ml[31,1243+29]..src/misc.ml[31,1243+32])
                          Ttyp_constr "int/1!"
                          []
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/misc.ml[32,1278+6]..src/misc.ml[32,1278+9])
                            Tpat_var "sum/464"
                          expression (src/misc.ml[32,1278+12]..src/misc.ml[32,1278+17])
                            Texp_apply
                            expression (src/misc.ml[32,1278+12]..src/misc.ml[32,1278+15])
                              Texp_ident "Stdlib!.ref"
                            [
                              <arg>
                                Nolabel
                                expression (src/misc.ml[32,1278+16]..src/misc.ml[32,1278+17])
                                  Texp_constant Const_int 0
                            ]
                      ]
                      expression (src/misc.ml[33,1299+2]..src/misc.ml[36,1353+6])
                        Texp_sequence
                        expression (src/misc.ml[33,1299+2]..src/misc.ml[35,1345+6])
                          Texp_for "x/465" Up
                          expression (src/misc.ml[33,1299+10]..src/misc.ml[33,1299+11])
                            Texp_constant Const_int 0
                          expression (src/misc.ml[33,1299+15]..src/misc.ml[33,1299+20])
                            Texp_apply
                            expression (src/misc.ml[33,1299+17]..src/misc.ml[33,1299+18])
                              Texp_ident "Stdlib!.-"
                            [
                              <arg>
                                Nolabel
                                expression (src/misc.ml[33,1299+15]..src/misc.ml[33,1299+16])
                                  Texp_ident "n/462"
                              <arg>
                                Nolabel
                                expression (src/misc.ml[33,1299+19]..src/misc.ml[33,1299+20])
                                  Texp_constant Const_int 1
                            ]
                          expression (src/misc.ml[34,1323+4]..src/misc.ml[34,1323+21])
                            Texp_apply
                            expression (src/misc.ml[34,1323+8]..src/misc.ml[34,1323+10])
                              Texp_ident "Stdlib!.:="
                            [
                              <arg>
                                Nolabel
                                expression (src/misc.ml[34,1323+4]..src/misc.ml[34,1323+7])
                                  Texp_ident "sum/464"
                              <arg>
                                Nolabel
                                expression (src/misc.ml[34,1323+11]..src/misc.ml[34,1323+21])
                                  Texp_apply
                                  expression (src/misc.ml[34,1323+16]..src/misc.ml[34,1323+17])
                                    Texp_ident "Stdlib!.+"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/misc.ml[34,1323+11]..src/misc.ml[34,1323+15])
                                        Texp_apply
                                        expression (src/misc.ml[34,1323+11]..src/misc.ml[34,1323+12])
                                          Texp_ident "Stdlib!.!"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/misc.ml[34,1323+12]..src/misc.ml[34,1323+15])
                                              Texp_ident "sum/464"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/misc.ml[34,1323+18]..src/misc.ml[34,1323+21])
                                        Texp_apply
                                        expression (src/misc.ml[34,1323+18]..src/misc.ml[34,1323+19])
                                          Texp_ident "f/463"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/misc.ml[34,1323+20]..src/misc.ml[34,1323+21])
                                              Texp_ident "x/465"
                                        ]
                                  ]
                            ]
                        expression (src/misc.ml[36,1353+2]..src/misc.ml[36,1353+6])
                          Texp_apply
                          expression (src/misc.ml[36,1353+2]..src/misc.ml[36,1353+3])
                            Texp_ident "Stdlib!.!"
                          [
                            <arg>
                              Nolabel
                              expression (src/misc.ml[36,1353+3]..src/misc.ml[36,1353+6])
                                Texp_ident "sum/464"
                          ]
                ]
          ]
    ]
  structure_item (src/misc.ml[38,1361+0]..src/misc.ml[41,1419+19])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[38,1361+4]..src/misc.ml[38,1361+15])
          Tpat_var "with_buffer/466"
        expression (src/misc.ml[38,1361+16]..src/misc.ml[41,1419+19]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[38,1361+16]..src/misc.ml[38,1361+17])
                Tpat_var "n/468"
              expression (src/misc.ml[38,1361+18]..src/misc.ml[41,1419+19]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[38,1361+18]..src/misc.ml[38,1361+19])
                      Tpat_var "f/469"
                    expression (src/misc.ml[39,1383+2]..src/misc.ml[41,1419+19])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/misc.ml[39,1383+6]..src/misc.ml[39,1383+7])
                            Tpat_var "b/470"
                          expression (src/misc.ml[39,1383+10]..src/misc.ml[39,1383+25])
                            Texp_apply
                            expression (src/misc.ml[39,1383+10]..src/misc.ml[39,1383+23])
                              Texp_ident "Stdlib!.Buffer.create"
                            [
                              <arg>
                                Nolabel
                                expression (src/misc.ml[39,1383+24]..src/misc.ml[39,1383+25])
                                  Texp_ident "n/468"
                            ]
                      ]
                      expression (src/misc.ml[40,1412+2]..src/misc.ml[41,1419+19])
                        Texp_sequence
                        expression (src/misc.ml[40,1412+2]..src/misc.ml[40,1412+5])
                          Texp_apply
                          expression (src/misc.ml[40,1412+2]..src/misc.ml[40,1412+3])
                            Texp_ident "f/469"
                          [
                            <arg>
                              Nolabel
                              expression (src/misc.ml[40,1412+4]..src/misc.ml[40,1412+5])
                                Texp_ident "b/470"
                          ]
                        expression (src/misc.ml[41,1419+2]..src/misc.ml[41,1419+19])
                          Texp_apply
                          expression (src/misc.ml[41,1419+2]..src/misc.ml[41,1419+17])
                            Texp_ident "Stdlib!.Buffer.contents"
                          [
                            <arg>
                              Nolabel
                              expression (src/misc.ml[41,1419+18]..src/misc.ml[41,1419+19])
                                Texp_ident "b/470"
                          ]
                ]
          ]
    ]
  structure_item (src/misc.ml[43,1440+0]..src/misc.ml[43,1440+35])
    Tstr_type Rec
    [
      type_declaration iter/553 (src/misc.ml[43,1440+0]..src/misc.ml[43,1440+35])
        ptype_params =
          [
            core_type (src/misc.ml[43,1440+5]..src/misc.ml[43,1440+7])
              Ttyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/misc.ml[43,1440+15]..src/misc.ml[43,1440+35])
              Ttyp_arrow
              Nolabel
              core_type (src/misc.ml[43,1440+16]..src/misc.ml[43,1440+26])
                Ttyp_arrow
                Nolabel
                core_type (src/misc.ml[43,1440+16]..src/misc.ml[43,1440+18])
                  Ttyp_var a
                core_type (src/misc.ml[43,1440+22]..src/misc.ml[43,1440+26])
                  Ttyp_constr "unit/6!"
                  []
              core_type (src/misc.ml[43,1440+31]..src/misc.ml[43,1440+35])
                Ttyp_constr "unit/6!"
                []
    ]
  structure_item (src/misc.ml[45,1477+0]..src/misc.ml[58,1818+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[45,1477+4]..src/misc.ml[45,1477+28])
          Tpat_var "separated_iter_to_string/554"
        expression (src/misc.ml[45,1477+29]..src/misc.ml[58,1818+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[45,1477+29]..src/misc.ml[45,1477+36])
                Tpat_var "printer/556"
              expression (src/misc.ml[45,1477+37]..src/misc.ml[58,1818+3]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[45,1477+37]..src/misc.ml[45,1477+46])
                      Tpat_var "separator/557"
                    expression (src/misc.ml[45,1477+47]..src/misc.ml[58,1818+3]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/misc.ml[45,1477+47]..src/misc.ml[45,1477+51])
                            Tpat_var "iter/558"
                          expression (src/misc.ml[46,1531+2]..src/misc.ml[58,1818+3])
                            Texp_apply
                            expression (src/misc.ml[46,1531+2]..src/misc.ml[46,1531+13])
                              Texp_ident "with_buffer/466"
                            [
                              <arg>
                                Nolabel
                                expression (src/misc.ml[46,1531+14]..src/misc.ml[46,1531+16])
                                  Texp_constant Const_int 32
                              <arg>
                                Nolabel
                                expression (src/misc.ml[46,1531+17]..src/misc.ml[58,1818+3])
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/misc.ml[46,1531+22]..src/misc.ml[46,1531+23])
                                        Tpat_var "b/559"
                                      expression (src/misc.ml[47,1558+4]..src/misc.ml[57,1812+5])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/misc.ml[47,1558+8]..src/misc.ml[47,1558+13])
                                              Tpat_var "first/560"
                                            expression (src/misc.ml[47,1558+16]..src/misc.ml[47,1558+24])
                                              Texp_apply
                                              expression (src/misc.ml[47,1558+16]..src/misc.ml[47,1558+19])
                                                Texp_ident "Stdlib!.ref"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/misc.ml[47,1558+20]..src/misc.ml[47,1558+24])
                                                    Texp_construct "true"
                                                    []
                                              ]
                                        ]
                                        expression (src/misc.ml[48,1586+4]..src/misc.ml[57,1812+5])
                                          Texp_apply
                                          expression (src/misc.ml[48,1586+4]..src/misc.ml[48,1586+8])
                                            Texp_ident "iter/558"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/misc.ml[48,1586+9]..src/misc.ml[57,1812+5])
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (src/misc.ml[48,1586+14]..src/misc.ml[48,1586+15])
                                                      Tpat_var "x/561"
                                                    expression (src/misc.ml[49,1605+6]..src/misc.ml[56,1802+9])
                                                      Texp_ifthenelse
                                                      expression (src/misc.ml[49,1605+9]..src/misc.ml[49,1605+15])
                                                        Texp_apply
                                                        expression (src/misc.ml[49,1605+9]..src/misc.ml[49,1605+10])
                                                          Texp_ident "Stdlib!.!"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/misc.ml[49,1605+10]..src/misc.ml[49,1605+15])
                                                              Texp_ident "first/560"
                                                        ]
                                                      expression (src/misc.ml[49,1605+21]..src/misc.ml[52,1696+9])
                                                        Texp_sequence
                                                        expression (src/misc.ml[50,1632+8]..src/misc.ml[50,1632+39])
                                                          Texp_apply
                                                          expression (src/misc.ml[50,1632+8]..src/misc.ml[50,1632+25])
                                                            Texp_ident "Stdlib!.Buffer.add_string"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/misc.ml[50,1632+26]..src/misc.ml[50,1632+27])
                                                                Texp_ident "b/559"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/misc.ml[50,1632+28]..src/misc.ml[50,1632+39])
                                                                Texp_apply
                                                                expression (src/misc.ml[50,1632+29]..src/misc.ml[50,1632+36])
                                                                  Texp_ident "printer/556"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/misc.ml[50,1632+37]..src/misc.ml[50,1632+38])
                                                                      Texp_ident "x/561"
                                                                ]
                                                          ]
                                                        expression (src/misc.ml[51,1673+8]..src/misc.ml[51,1673+22])
                                                          Texp_apply
                                                          expression (src/misc.ml[51,1673+14]..src/misc.ml[51,1673+16])
                                                            Texp_ident "Stdlib!.:="
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/misc.ml[51,1673+8]..src/misc.ml[51,1673+13])
                                                                Texp_ident "first/560"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/misc.ml[51,1673+17]..src/misc.ml[51,1673+22])
                                                                Texp_construct "false"
                                                                []
                                                          ]
                                                      Some
                                                        expression (src/misc.ml[53,1706+11]..src/misc.ml[56,1802+9])
                                                          Texp_sequence
                                                          expression (src/misc.ml[54,1723+8]..src/misc.ml[54,1723+37])
                                                            Texp_apply
                                                            expression (src/misc.ml[54,1723+8]..src/misc.ml[54,1723+25])
                                                              Texp_ident "Stdlib!.Buffer.add_string"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/misc.ml[54,1723+26]..src/misc.ml[54,1723+27])
                                                                  Texp_ident "b/559"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/misc.ml[54,1723+28]..src/misc.ml[54,1723+37])
                                                                  Texp_ident "separator/557"
                                                            ]
                                                          expression (src/misc.ml[55,1762+8]..src/misc.ml[55,1762+39])
                                                            Texp_apply
                                                            expression (src/misc.ml[55,1762+8]..src/misc.ml[55,1762+25])
                                                              Texp_ident "Stdlib!.Buffer.add_string"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/misc.ml[55,1762+26]..src/misc.ml[55,1762+27])
                                                                  Texp_ident "b/559"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/misc.ml[55,1762+28]..src/misc.ml[55,1762+39])
                                                                  Texp_apply
                                                                  expression (src/misc.ml[55,1762+29]..src/misc.ml[55,1762+36])
                                                                    Texp_ident "printer/556"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/misc.ml[55,1762+37]..src/misc.ml[55,1762+38])
                                                                        Texp_ident "x/561"
                                                                  ]
                                                            ]
                                                ]
                                          ]
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/misc.ml[60,1823+0]..src/misc.ml[61,1875+70])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[60,1823+4]..src/misc.ml[60,1823+28])
          Tpat_var "separated_list_to_string/562"
        expression (src/misc.ml[60,1823+29]..src/misc.ml[61,1875+70]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[60,1823+29]..src/misc.ml[60,1823+36])
                Tpat_var "printer/564"
              expression (src/misc.ml[60,1823+37]..src/misc.ml[61,1875+70]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[60,1823+37]..src/misc.ml[60,1823+46])
                      Tpat_var "separator/565"
                    expression (src/misc.ml[60,1823+47]..src/misc.ml[61,1875+70]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/misc.ml[60,1823+47]..src/misc.ml[60,1823+49])
                            Tpat_var "xs/566"
                          expression (src/misc.ml[61,1875+2]..src/misc.ml[61,1875+70])
                            Texp_apply
                            expression (src/misc.ml[61,1875+2]..src/misc.ml[61,1875+26])
                              Texp_ident "separated_iter_to_string/554"
                            [
                              <arg>
                                Nolabel
                                expression (src/misc.ml[61,1875+27]..src/misc.ml[61,1875+34])
                                  Texp_ident "printer/564"
                              <arg>
                                Nolabel
                                expression (src/misc.ml[61,1875+35]..src/misc.ml[61,1875+44])
                                  Texp_ident "separator/565"
                              <arg>
                                Nolabel
                                expression (src/misc.ml[61,1875+45]..src/misc.ml[61,1875+70])
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/misc.ml[61,1875+50]..src/misc.ml[61,1875+51])
                                        Tpat_var "f/567"
                                      expression (src/misc.ml[61,1875+55]..src/misc.ml[61,1875+69])
                                        Texp_apply
                                        expression (src/misc.ml[61,1875+55]..src/misc.ml[61,1875+64])
                                          Texp_ident "Stdlib!.List.iter"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/misc.ml[61,1875+65]..src/misc.ml[61,1875+66])
                                              Texp_ident "f/567"
                                          <arg>
                                            Nolabel
                                            expression (src/misc.ml[61,1875+67]..src/misc.ml[61,1875+69])
                                              Texp_ident "xs/566"
                                        ]
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/misc.ml[63,1947+0]..src/misc.ml[73,2219+18])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[63,1947+4]..src/misc.ml[63,1947+11])
          Tpat_var "inverse/634"
        expression (src/misc.ml[63,1947+12]..src/misc.ml[73,2219+18]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[63,1947+13]..src/misc.ml[63,1947+14])
                extra
                  Tpat_extra_constraint
                  core_type (src/misc.ml[63,1947+17]..src/misc.ml[63,1947+25])
                    Ttyp_constr "array/8!"
                    [
                      core_type (src/misc.ml[63,1947+17]..src/misc.ml[63,1947+19])
                        Ttyp_var a
                    ]
                Tpat_alias "a/636"
                pattern (src/misc.ml[63,1947+13]..src/misc.ml[63,1947+14])
                  Tpat_any
              expression (src/misc.ml[64,1988+2]..src/misc.ml[73,2219+18])
                extra
                  Texp_constraint
                  core_type (src/misc.ml[63,1947+29]..src/misc.ml[63,1947+38])
                    Ttyp_arrow
                    Nolabel
                    core_type (src/misc.ml[63,1947+29]..src/misc.ml[63,1947+31])
                      Ttyp_var a
                    core_type (src/misc.ml[63,1947+35]..src/misc.ml[63,1947+38])
                      Ttyp_constr "int/1!"
                      []
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/misc.ml[64,1988+6]..src/misc.ml[64,1988+11])
                      Tpat_var "table/637"
                    expression (src/misc.ml[64,1988+14]..src/misc.ml[64,1988+45])
                      Texp_apply
                      expression (src/misc.ml[64,1988+14]..src/misc.ml[64,1988+28])
                        Texp_ident "Stdlib!.Hashtbl.create"
                      [
                        <arg>
                          Optional "random"
                          expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                            Texp_construct "None"
                            []
                        <arg>
                          Nolabel
                          expression (src/misc.ml[64,1988+29]..src/misc.ml[64,1988+45])
                            Texp_apply
                            expression (src/misc.ml[64,1988+30]..src/misc.ml[64,1988+42])
                              Texp_ident "Stdlib!.Array.length"
                            [
                              <arg>
                                Nolabel
                                expression (src/misc.ml[64,1988+43]..src/misc.ml[64,1988+44])
                                  Texp_ident "a/636"
                            ]
                      ]
                ]
                expression (src/misc.ml[65,2037+2]..src/misc.ml[73,2219+18])
                  Texp_sequence
                  expression (src/misc.ml[65,2037+2]..src/misc.ml[68,2138+5])
                    Texp_apply
                    expression (src/misc.ml[65,2037+2]..src/misc.ml[65,2037+13])
                      Texp_ident "Stdlib!.Array.iteri"
                    [
                      <arg>
                        Nolabel
                        expression (src/misc.ml[65,2037+14]..src/misc.ml[68,2138+3])
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/misc.ml[65,2037+19]..src/misc.ml[65,2037+20])
                                Tpat_var "i/718"
                              expression (src/misc.ml[65,2037+21]..src/misc.ml[67,2109+28]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/misc.ml[65,2037+21]..src/misc.ml[65,2037+25])
                                      Tpat_var "data/719"
                                    expression (src/misc.ml[66,2066+4]..src/misc.ml[67,2109+28])
                                      Texp_sequence
                                      expression (src/misc.ml[66,2066+4]..src/misc.ml[66,2066+41])
                                        Texp_assert                                        expression (src/misc.ml[66,2066+11]..src/misc.ml[66,2066+41])
                                          Texp_apply
                                          expression (src/misc.ml[66,2066+12]..src/misc.ml[66,2066+15])
                                            Texp_ident "Stdlib!.not"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/misc.ml[66,2066+16]..src/misc.ml[66,2066+40])
                                                Texp_apply
                                                expression (src/misc.ml[66,2066+17]..src/misc.ml[66,2066+28])
                                                  Texp_ident "Stdlib!.Hashtbl.mem"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/misc.ml[66,2066+29]..src/misc.ml[66,2066+34])
                                                      Texp_ident "table/637"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/misc.ml[66,2066+35]..src/misc.ml[66,2066+39])
                                                      Texp_ident "data/719"
                                                ]
                                          ]
                                      expression (src/misc.ml[67,2109+4]..src/misc.ml[67,2109+28])
                                        Texp_apply
                                        expression (src/misc.ml[67,2109+4]..src/misc.ml[67,2109+15])
                                          Texp_ident "Stdlib!.Hashtbl.add"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/misc.ml[67,2109+16]..src/misc.ml[67,2109+21])
                                              Texp_ident "table/637"
                                          <arg>
                                            Nolabel
                                            expression (src/misc.ml[67,2109+22]..src/misc.ml[67,2109+26])
                                              Texp_ident "data/719"
                                          <arg>
                                            Nolabel
                                            expression (src/misc.ml[67,2109+27]..src/misc.ml[67,2109+28])
                                              Texp_ident "i/718"
                                        ]
                                ]
                          ]
                      <arg>
                        Nolabel
                        expression (src/misc.ml[68,2138+4]..src/misc.ml[68,2138+5])
                          Texp_ident "a/636"
                    ]
                  expression (src/misc.ml[69,2145+2]..src/misc.ml[73,2219+18])
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/misc.ml[69,2145+6]..src/misc.ml[69,2145+10])
                          Tpat_var "data/720"
                        expression (src/misc.ml[70,2159+4]..src/misc.ml[73,2219+18])
                          Texp_try
                          expression (src/misc.ml[71,2167+6]..src/misc.ml[71,2167+29])
                            Texp_apply
                            expression (src/misc.ml[71,2167+6]..src/misc.ml[71,2167+18])
                              Texp_ident "Stdlib!.Hashtbl.find"
                            [
                              <arg>
                                Nolabel
                                expression (src/misc.ml[71,2167+19]..src/misc.ml[71,2167+24])
                                  Texp_ident "table/637"
                              <arg>
                                Nolabel
                                expression (src/misc.ml[71,2167+25]..src/misc.ml[71,2167+29])
                                  Texp_ident "data/720"
                            ]
                          [
                            <case>
                              pattern (src/misc.ml[72,2197+9]..src/misc.ml[72,2197+18])
                                Tpat_construct "Not_found"
                                []
                                None
                              expression (src/misc.ml[73,2219+6]..src/misc.ml[73,2219+18])
                                Texp_assert                                expression (src/misc.ml[73,2219+13]..src/misc.ml[73,2219+18])
                                  Texp_construct "false"
                                  []
                          ]
                    ]
          ]
    ]
  structure_item (src/misc.ml[75,2239+0]..src/misc.ml[78,2288+21])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[75,2239+4]..src/misc.ml[75,2239+17])
          Tpat_var "support_assoc/721"
        expression (src/misc.ml[75,2239+18]..src/misc.ml[78,2288+21]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[75,2239+18]..src/misc.ml[75,2239+19])
                Tpat_var "l/723"
              expression (src/misc.ml[75,2239+20]..src/misc.ml[78,2288+21]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[75,2239+20]..src/misc.ml[75,2239+21])
                      Tpat_var "x/724"
                    expression (src/misc.ml[76,2263+2]..src/misc.ml[78,2288+21])
                      Texp_try
                      expression (src/misc.ml[77,2269+4]..src/misc.ml[77,2269+18])
                        Texp_apply
                        expression (src/misc.ml[77,2269+4]..src/misc.ml[77,2269+14])
                          Texp_ident "Stdlib!.List.assoc"
                        [
                          <arg>
                            Nolabel
                            expression (src/misc.ml[77,2269+15]..src/misc.ml[77,2269+16])
                              Texp_ident "x/724"
                          <arg>
                            Nolabel
                            expression (src/misc.ml[77,2269+17]..src/misc.ml[77,2269+18])
                              Texp_ident "l/723"
                        ]
                      [
                        <case>
                          pattern (src/misc.ml[78,2288+7]..src/misc.ml[78,2288+16])
                            Tpat_construct "Not_found"
                            []
                            None
                          expression (src/misc.ml[78,2288+20]..src/misc.ml[78,2288+21])
                            Texp_ident "x/724"
                      ]
                ]
          ]
    ]
  structure_item (src/misc.ml[84,2485+0]..src/misc.ml[92,2679+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[84,2485+4]..src/misc.ml[84,2485+15])
          Tpat_var "materialize/725"
        expression (src/misc.ml[84,2485+16]..src/misc.ml[92,2679+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[84,2485+17]..src/misc.ml[84,2485+22])
                extra
                  Tpat_extra_constraint
                  core_type (src/misc.ml[84,2485+25]..src/misc.ml[84,2485+50])
                    Ttyp_constr "Stdlib!.Hashtbl.t"
                    [
                      core_type (src/misc.ml[84,2485+26]..src/misc.ml[84,2485+28])
                        Ttyp_var a
                      core_type (src/misc.ml[84,2485+30]..src/misc.ml[84,2485+39])
                        Ttyp_constr "option/10!"
                        [
                          core_type (src/misc.ml[84,2485+30]..src/misc.ml[84,2485+32])
                            Ttyp_var a
                        ]
                    ]
                Tpat_alias "table/727"
                pattern (src/misc.ml[84,2485+17]..src/misc.ml[84,2485+22])
                  Tpat_any
              expression (src/misc.ml[84,2485+52]..src/misc.ml[92,2679+8]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[84,2485+53]..src/misc.ml[84,2485+54])
                      extra
                        Tpat_extra_constraint
                        core_type (src/misc.ml[84,2485+57]..src/misc.ml[84,2485+59])
                          Ttyp_var a
                      Tpat_alias "x/728"
                      pattern (src/misc.ml[84,2485+53]..src/misc.ml[84,2485+54])
                        Tpat_any
                    expression (src/misc.ml[85,2558+2]..src/misc.ml[92,2679+8])
                      extra
                        Texp_constraint
                        core_type (src/misc.ml[84,2485+63]..src/misc.ml[84,2485+70])
                          Ttyp_constr "list/9!"
                          [
                            core_type (src/misc.ml[84,2485+63]..src/misc.ml[84,2485+65])
                              Ttyp_var a
                          ]
                      Texp_let Rec
                      [
                        <def>
                          pattern (src/misc.ml[85,2558+10]..src/misc.ml[85,2558+14])
                            Tpat_var "loop/729"
                          expression (src/misc.ml[85,2558+15]..src/misc.ml[90,2654+19]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/misc.ml[85,2558+15]..src/misc.ml[85,2558+16])
                                  Tpat_var "x/730"
                                expression (src/misc.ml[86,2577+4]..src/misc.ml[90,2654+19])
                                  Texp_match
                                  expression (src/misc.ml[86,2577+10]..src/misc.ml[86,2577+30])
                                    Texp_apply
                                    expression (src/misc.ml[86,2577+10]..src/misc.ml[86,2577+22])
                                      Texp_ident "Stdlib!.Hashtbl.find"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[86,2577+23]..src/misc.ml[86,2577+28])
                                          Texp_ident "table/727"
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[86,2577+29]..src/misc.ml[86,2577+30])
                                          Texp_ident "x/730"
                                    ]
                                  [
                                    <case>
                                      pattern (src/misc.ml[87,2613+6]..src/misc.ml[87,2613+10])
                                        Tpat_value
                                        pattern (src/misc.ml[87,2613+6]..src/misc.ml[87,2613+10])
                                          Tpat_construct "None"
                                          []
                                          None
                                      expression (src/misc.ml[88,2627+8]..src/misc.ml[88,2627+10])
                                        Texp_construct "[]"
                                        []
                                    <case>
                                      pattern (src/misc.ml[89,2638+6]..src/misc.ml[89,2638+12])
                                        Tpat_value
                                        pattern (src/misc.ml[89,2638+6]..src/misc.ml[89,2638+12])
                                          Tpat_construct "Some"
                                          [
                                            pattern (src/misc.ml[89,2638+11]..src/misc.ml[89,2638+12])
                                              Tpat_var "x/731"
                                          ]
                                          None
                                      expression (src/misc.ml[90,2654+8]..src/misc.ml[90,2654+19])
                                        Texp_construct "::"
                                        [
                                          expression (src/misc.ml[90,2654+8]..src/misc.ml[90,2654+9])
                                            Texp_ident "x/731"
                                          expression (src/misc.ml[90,2654+13]..src/misc.ml[90,2654+19])
                                            Texp_apply
                                            expression (src/misc.ml[90,2654+13]..src/misc.ml[90,2654+17])
                                              Texp_ident "loop/729"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/misc.ml[90,2654+18]..src/misc.ml[90,2654+19])
                                                  Texp_ident "x/731"
                                            ]
                                        ]
                                  ]
                            ]
                      ]
                      expression (src/misc.ml[92,2679+2]..src/misc.ml[92,2679+8])
                        Texp_apply
                        expression (src/misc.ml[92,2679+2]..src/misc.ml[92,2679+6])
                          Texp_ident "loop/729"
                        [
                          <arg>
                            Nolabel
                            expression (src/misc.ml[92,2679+7]..src/misc.ml[92,2679+8])
                              Texp_ident "x/728"
                        ]
                ]
          ]
    ]
  structure_item (src/misc.ml[97,2763+0]..src/misc.ml[100,2814+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[97,2763+4]..src/misc.ml[97,2763+10])
          Tpat_var "iterij/732"
        expression (src/misc.ml[97,2763+11]..src/misc.ml[100,2814+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[97,2763+11]..src/misc.ml[97,2763+12])
                Tpat_var "i/734"
              expression (src/misc.ml[97,2763+13]..src/misc.ml[100,2814+6]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[97,2763+13]..src/misc.ml[97,2763+14])
                      Tpat_var "j/735"
                    expression (src/misc.ml[97,2763+15]..src/misc.ml[100,2814+6]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/misc.ml[97,2763+15]..src/misc.ml[97,2763+16])
                            Tpat_var "f/736"
                          expression (src/misc.ml[98,2782+2]..src/misc.ml[100,2814+6])
                            Texp_for "x/737" Up
                            expression (src/misc.ml[98,2782+10]..src/misc.ml[98,2782+11])
                              Texp_ident "i/734"
                            expression (src/misc.ml[98,2782+15]..src/misc.ml[98,2782+20])
                              Texp_apply
                              expression (src/misc.ml[98,2782+17]..src/misc.ml[98,2782+18])
                                Texp_ident "Stdlib!.-"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/misc.ml[98,2782+15]..src/misc.ml[98,2782+16])
                                    Texp_ident "j/735"
                                <arg>
                                  Nolabel
                                  expression (src/misc.ml[98,2782+19]..src/misc.ml[98,2782+20])
                                    Texp_constant Const_int 1
                              ]
                            expression (src/misc.ml[99,2806+4]..src/misc.ml[99,2806+7])
                              Texp_apply
                              expression (src/misc.ml[99,2806+4]..src/misc.ml[99,2806+5])
                                Texp_ident "f/736"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/misc.ml[99,2806+6]..src/misc.ml[99,2806+7])
                                    Texp_ident "x/737"
                              ]
                      ]
                ]
          ]
    ]
  structure_item (src/misc.ml[102,2822+0]..src/misc.ml[103,2838+14])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[102,2822+4]..src/misc.ml[102,2822+9])
          Tpat_var "iteri/738"
        expression (src/misc.ml[102,2822+10]..src/misc.ml[103,2838+14]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[102,2822+10]..src/misc.ml[102,2822+11])
                Tpat_var "n/740"
              expression (src/misc.ml[102,2822+12]..src/misc.ml[103,2838+14]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[102,2822+12]..src/misc.ml[102,2822+13])
                      Tpat_var "f/741"
                    expression (src/misc.ml[103,2838+2]..src/misc.ml[103,2838+14])
                      Texp_apply
                      expression (src/misc.ml[103,2838+2]..src/misc.ml[103,2838+8])
                        Texp_ident "iterij/732"
                      [
                        <arg>
                          Nolabel
                          expression (src/misc.ml[103,2838+9]..src/misc.ml[103,2838+10])
                            Texp_constant Const_int 0
                        <arg>
                          Nolabel
                          expression (src/misc.ml[103,2838+11]..src/misc.ml[103,2838+12])
                            Texp_ident "n/740"
                        <arg>
                          Nolabel
                          expression (src/misc.ml[103,2838+13]..src/misc.ml[103,2838+14])
                            Texp_ident "f/741"
                      ]
                ]
          ]
    ]
  structure_item (src/misc.ml[105,2854+0]..src/misc.ml[109,2939+8])
    Tstr_value Rec
    [
      <def>
        pattern (src/misc.ml[105,2854+8]..src/misc.ml[105,2854+14])
          Tpat_var "foldij/742"
        expression (src/misc.ml[105,2854+15]..src/misc.ml[109,2939+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[105,2854+15]..src/misc.ml[105,2854+16])
                Tpat_var "i/743"
              expression (src/misc.ml[105,2854+17]..src/misc.ml[109,2939+8]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[105,2854+17]..src/misc.ml[105,2854+18])
                      Tpat_var "j/744"
                    expression (src/misc.ml[105,2854+19]..src/misc.ml[109,2939+8]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/misc.ml[105,2854+19]..src/misc.ml[105,2854+20])
                            Tpat_var "f/745"
                          expression (src/misc.ml[105,2854+21]..src/misc.ml[109,2939+8]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/misc.ml[105,2854+21]..src/misc.ml[105,2854+25])
                                  Tpat_var "accu/746"
                                expression (src/misc.ml[106,2882+2]..src/misc.ml[109,2939+8])
                                  Texp_ifthenelse
                                  expression (src/misc.ml[106,2882+5]..src/misc.ml[106,2882+10])
                                    Texp_apply
                                    expression (src/misc.ml[106,2882+7]..src/misc.ml[106,2882+8])
                                      Texp_ident "Stdlib!.<"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[106,2882+5]..src/misc.ml[106,2882+6])
                                          Texp_ident "i/743"
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[106,2882+9]..src/misc.ml[106,2882+10])
                                          Texp_ident "j/744"
                                    ]
                                  expression (src/misc.ml[107,2898+4]..src/misc.ml[107,2898+33])
                                    Texp_apply
                                    expression (src/misc.ml[107,2898+4]..src/misc.ml[107,2898+10])
                                      Texp_ident "foldij/742"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[107,2898+11]..src/misc.ml[107,2898+18])
                                          Texp_apply
                                          expression (src/misc.ml[107,2898+14]..src/misc.ml[107,2898+15])
                                            Texp_ident "Stdlib!.+"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/misc.ml[107,2898+12]..src/misc.ml[107,2898+13])
                                                Texp_ident "i/743"
                                            <arg>
                                              Nolabel
                                              expression (src/misc.ml[107,2898+16]..src/misc.ml[107,2898+17])
                                                Texp_constant Const_int 1
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[107,2898+19]..src/misc.ml[107,2898+20])
                                          Texp_ident "j/744"
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[107,2898+21]..src/misc.ml[107,2898+22])
                                          Texp_ident "f/745"
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[107,2898+23]..src/misc.ml[107,2898+33])
                                          Texp_apply
                                          expression (src/misc.ml[107,2898+24]..src/misc.ml[107,2898+25])
                                            Texp_ident "f/745"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/misc.ml[107,2898+26]..src/misc.ml[107,2898+27])
                                                Texp_ident "i/743"
                                            <arg>
                                              Nolabel
                                              expression (src/misc.ml[107,2898+28]..src/misc.ml[107,2898+32])
                                                Texp_ident "accu/746"
                                          ]
                                    ]
                                  Some
                                    expression (src/misc.ml[109,2939+4]..src/misc.ml[109,2939+8])
                                      Texp_ident "accu/746"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/misc.ml[111,2949+0]..src/misc.ml[112,2970+19])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[111,2949+4]..src/misc.ml[111,2949+9])
          Tpat_var "foldi/747"
        expression (src/misc.ml[111,2949+10]..src/misc.ml[112,2970+19]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[111,2949+10]..src/misc.ml[111,2949+11])
                Tpat_var "n/749"
              expression (src/misc.ml[111,2949+12]..src/misc.ml[112,2970+19]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[111,2949+12]..src/misc.ml[111,2949+13])
                      Tpat_var "f/750"
                    expression (src/misc.ml[111,2949+14]..src/misc.ml[112,2970+19]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/misc.ml[111,2949+14]..src/misc.ml[111,2949+18])
                            Tpat_var "accu/751"
                          expression (src/misc.ml[112,2970+2]..src/misc.ml[112,2970+19])
                            Texp_apply
                            expression (src/misc.ml[112,2970+2]..src/misc.ml[112,2970+8])
                              Texp_ident "foldij/742"
                            [
                              <arg>
                                Nolabel
                                expression (src/misc.ml[112,2970+9]..src/misc.ml[112,2970+10])
                                  Texp_constant Const_int 0
                              <arg>
                                Nolabel
                                expression (src/misc.ml[112,2970+11]..src/misc.ml[112,2970+12])
                                  Texp_ident "n/749"
                              <arg>
                                Nolabel
                                expression (src/misc.ml[112,2970+13]..src/misc.ml[112,2970+14])
                                  Texp_ident "f/750"
                              <arg>
                                Nolabel
                                expression (src/misc.ml[112,2970+15]..src/misc.ml[112,2970+19])
                                  Texp_ident "accu/751"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/misc.ml[114,2991+0]..src/misc.ml[118,3096+8])
    Tstr_value Rec
    [
      <def>
        pattern (src/misc.ml[114,2991+8]..src/misc.ml[114,2991+19])
          Tpat_var "foldij_lazy/752"
        expression (src/misc.ml[114,2991+20]..src/misc.ml[118,3096+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[114,2991+20]..src/misc.ml[114,2991+21])
                Tpat_var "i/753"
              expression (src/misc.ml[114,2991+22]..src/misc.ml[118,3096+8]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[114,2991+22]..src/misc.ml[114,2991+23])
                      Tpat_var "j/754"
                    expression (src/misc.ml[114,2991+24]..src/misc.ml[118,3096+8]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/misc.ml[114,2991+24]..src/misc.ml[114,2991+25])
                            Tpat_var "f/755"
                          expression (src/misc.ml[114,2991+26]..src/misc.ml[118,3096+8]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/misc.ml[114,2991+26]..src/misc.ml[114,2991+30])
                                  Tpat_var "accu/756"
                                expression (src/misc.ml[115,3024+2]..src/misc.ml[118,3096+8])
                                  Texp_ifthenelse
                                  expression (src/misc.ml[115,3024+5]..src/misc.ml[115,3024+10])
                                    Texp_apply
                                    expression (src/misc.ml[115,3024+7]..src/misc.ml[115,3024+8])
                                      Texp_ident "Stdlib!.<"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[115,3024+5]..src/misc.ml[115,3024+6])
                                          Texp_ident "i/753"
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[115,3024+9]..src/misc.ml[115,3024+10])
                                          Texp_ident "j/754"
                                    ]
                                  expression (src/misc.ml[116,3040+4]..src/misc.ml[116,3040+48])
                                    Texp_apply
                                    expression (src/misc.ml[116,3040+4]..src/misc.ml[116,3040+5])
                                      Texp_ident "f/755"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[116,3040+6]..src/misc.ml[116,3040+7])
                                          Texp_ident "i/753"
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[116,3040+8]..src/misc.ml[116,3040+48])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/misc.ml[116,3040+13]..src/misc.ml[116,3040+15])
                                                Tpat_construct "()"
                                                []
                                                None
                                              expression (src/misc.ml[116,3040+19]..src/misc.ml[116,3040+47])
                                                Texp_apply
                                                expression (src/misc.ml[116,3040+19]..src/misc.ml[116,3040+30])
                                                  Texp_ident "foldij_lazy/752"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/misc.ml[116,3040+31]..src/misc.ml[116,3040+38])
                                                      Texp_apply
                                                      expression (src/misc.ml[116,3040+34]..src/misc.ml[116,3040+35])
                                                        Texp_ident "Stdlib!.+"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/misc.ml[116,3040+32]..src/misc.ml[116,3040+33])
                                                            Texp_ident "i/753"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/misc.ml[116,3040+36]..src/misc.ml[116,3040+37])
                                                            Texp_constant Const_int 1
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (src/misc.ml[116,3040+39]..src/misc.ml[116,3040+40])
                                                      Texp_ident "j/754"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/misc.ml[116,3040+41]..src/misc.ml[116,3040+42])
                                                      Texp_ident "f/755"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/misc.ml[116,3040+43]..src/misc.ml[116,3040+47])
                                                      Texp_ident "accu/756"
                                                ]
                                          ]
                                    ]
                                  Some
                                    expression (src/misc.ml[118,3096+4]..src/misc.ml[118,3096+8])
                                      Texp_ident "accu/756"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/misc.ml[122,3175+0]..src/misc.ml[127,3271+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[122,3175+4]..src/misc.ml[122,3175+9])
          Tpat_var "mapij/758"
        expression (src/misc.ml[122,3175+10]..src/misc.ml[127,3271+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[122,3175+10]..src/misc.ml[122,3175+15])
                Tpat_var "start/760"
              expression (src/misc.ml[122,3175+16]..src/misc.ml[127,3271+3]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[122,3175+16]..src/misc.ml[122,3175+17])
                      Tpat_var "n/761"
                    expression (src/misc.ml[122,3175+18]..src/misc.ml[127,3271+3]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/misc.ml[122,3175+18]..src/misc.ml[122,3175+19])
                            Tpat_var "f/762"
                          expression (src/misc.ml[123,3197+2]..src/misc.ml[127,3271+3])
                            Texp_apply
                            expression (src/misc.ml[123,3197+2]..src/misc.ml[123,3197+10])
                              Texp_ident "Stdlib!.List.rev"
                            [
                              <arg>
                                Nolabel
                                expression (src/misc.ml[123,3197+11]..src/misc.ml[127,3271+3])
                                  Texp_apply
                                  expression (src/misc.ml[124,3210+4]..src/misc.ml[124,3210+10])
                                    Texp_ident "foldij/742"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/misc.ml[124,3210+11]..src/misc.ml[124,3210+16])
                                        Texp_ident "start/760"
                                    <arg>
                                      Nolabel
                                      expression (src/misc.ml[124,3210+17]..src/misc.ml[124,3210+18])
                                        Texp_ident "n/761"
                                    <arg>
                                      Nolabel
                                      expression (src/misc.ml[124,3210+19]..src/misc.ml[126,3262+5])
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/misc.ml[124,3210+24]..src/misc.ml[124,3210+25])
                                              Tpat_var "i/763"
                                            expression (src/misc.ml[124,3210+26]..src/misc.ml[125,3244+17]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/misc.ml[124,3210+26]..src/misc.ml[124,3210+30])
                                                    Tpat_var "accu/764"
                                                  expression (src/misc.ml[125,3244+6]..src/misc.ml[125,3244+17])
                                                    Texp_construct "::"
                                                    [
                                                      expression (src/misc.ml[125,3244+6]..src/misc.ml[125,3244+9])
                                                        Texp_apply
                                                        expression (src/misc.ml[125,3244+6]..src/misc.ml[125,3244+7])
                                                          Texp_ident "f/762"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/misc.ml[125,3244+8]..src/misc.ml[125,3244+9])
                                                              Texp_ident "i/763"
                                                        ]
                                                      expression (src/misc.ml[125,3244+13]..src/misc.ml[125,3244+17])
                                                        Texp_ident "accu/764"
                                                    ]
                                              ]
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/misc.ml[126,3262+6]..src/misc.ml[126,3262+8])
                                        Texp_construct "[]"
                                        []
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/misc.ml[131,3334+0]..src/misc.ml[132,3349+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[131,3334+4]..src/misc.ml[131,3334+8])
          Tpat_var "mapi/765"
        expression (src/misc.ml[131,3334+9]..src/misc.ml[132,3349+13]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[131,3334+9]..src/misc.ml[131,3334+10])
                Tpat_var "n/767"
              expression (src/misc.ml[131,3334+11]..src/misc.ml[132,3349+13]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[131,3334+11]..src/misc.ml[131,3334+12])
                      Tpat_var "f/768"
                    expression (src/misc.ml[132,3349+2]..src/misc.ml[132,3349+13])
                      Texp_apply
                      expression (src/misc.ml[132,3349+2]..src/misc.ml[132,3349+7])
                        Texp_ident "mapij/758"
                      [
                        <arg>
                          Nolabel
                          expression (src/misc.ml[132,3349+8]..src/misc.ml[132,3349+9])
                            Texp_constant Const_int 0
                        <arg>
                          Nolabel
                          expression (src/misc.ml[132,3349+10]..src/misc.ml[132,3349+11])
                            Texp_ident "n/767"
                        <arg>
                          Nolabel
                          expression (src/misc.ml[132,3349+12]..src/misc.ml[132,3349+13])
                            Texp_ident "f/768"
                      ]
                ]
          ]
    ]
  structure_item (src/misc.ml[140,3641+0]..src/misc.ml[150,3803+10])
    Tstr_value Rec
    [
      <def>
        pattern (src/misc.ml[140,3641+8]..src/misc.ml[140,3641+13])
          Tpat_var "qfold/769"
        expression (src/misc.ml[140,3641+14]..src/misc.ml[150,3803+10]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[140,3641+14]..src/misc.ml[140,3641+15])
                Tpat_var "f/770"
              expression (src/misc.ml[140,3641+16]..src/misc.ml[150,3803+10]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[140,3641+16]..src/misc.ml[140,3641+20])
                      Tpat_var "accu/771"
                    expression (src/misc.ml[140,3641+21]..src/misc.ml[150,3803+10]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/misc.ml[140,3641+21]..src/misc.ml[140,3641+22])
                            Tpat_var "q/772"
                          expression (src/misc.ml[141,3666+2]..src/misc.ml[150,3803+10])
                            Texp_match
                            expression (src/misc.ml[142,3674+4]..src/misc.ml[145,3732+10])
                              Texp_try
                              expression (src/misc.ml[143,3682+6]..src/misc.ml[143,3682+25])
                                Texp_construct "Some"
                                [
                                  expression (src/misc.ml[143,3682+11]..src/misc.ml[143,3682+25])
                                    Texp_apply
                                    expression (src/misc.ml[143,3682+12]..src/misc.ml[143,3682+22])
                                      Texp_ident "Stdlib!.Queue.take"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[143,3682+23]..src/misc.ml[143,3682+24])
                                          Texp_ident "q/772"
                                    ]
                                ]
                              [
                                <case>
                                  pattern (src/misc.ml[144,3708+9]..src/misc.ml[144,3708+20])
                                    Tpat_construct "Queue.Empty"
                                    []
                                    None
                                  expression (src/misc.ml[145,3732+6]..src/misc.ml[145,3732+10])
                                    Texp_construct "None"
                                    []
                              ]
                            [
                              <case>
                                pattern (src/misc.ml[147,3750+4]..src/misc.ml[147,3750+10])
                                  Tpat_value
                                  pattern (src/misc.ml[147,3750+4]..src/misc.ml[147,3750+10])
                                    Tpat_construct "Some"
                                    [
                                      pattern (src/misc.ml[147,3750+9]..src/misc.ml[147,3750+10])
                                        Tpat_var "x/815"
                                    ]
                                    None
                                expression (src/misc.ml[148,3764+6]..src/misc.ml[148,3764+26])
                                  Texp_apply
                                  expression (src/misc.ml[148,3764+6]..src/misc.ml[148,3764+11])
                                    Texp_ident "qfold/769"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/misc.ml[148,3764+12]..src/misc.ml[148,3764+13])
                                        Texp_ident "f/770"
                                    <arg>
                                      Nolabel
                                      expression (src/misc.ml[148,3764+14]..src/misc.ml[148,3764+24])
                                        Texp_apply
                                        expression (src/misc.ml[148,3764+15]..src/misc.ml[148,3764+16])
                                          Texp_ident "f/770"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/misc.ml[148,3764+17]..src/misc.ml[148,3764+21])
                                              Texp_ident "accu/771"
                                          <arg>
                                            Nolabel
                                            expression (src/misc.ml[148,3764+22]..src/misc.ml[148,3764+23])
                                              Texp_ident "x/815"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/misc.ml[148,3764+25]..src/misc.ml[148,3764+26])
                                        Texp_ident "q/772"
                                  ]
                              <case>
                                pattern (src/misc.ml[149,3791+4]..src/misc.ml[149,3791+8])
                                  Tpat_value
                                  pattern (src/misc.ml[149,3791+4]..src/misc.ml[149,3791+8])
                                    Tpat_construct "None"
                                    []
                                    None
                                expression (src/misc.ml[150,3803+6]..src/misc.ml[150,3803+10])
                                  Texp_ident "accu/771"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/misc.ml[156,3996+0]..src/misc.ml[162,4090+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[156,3996+4]..src/misc.ml[156,3996+9])
          Tpat_var "qiter/816"
        expression (src/misc.ml[156,3996+10]..src/misc.ml[162,4090+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[156,3996+10]..src/misc.ml[156,3996+11])
                Tpat_var "f/818"
              expression (src/misc.ml[156,3996+12]..src/misc.ml[162,4090+6]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[156,3996+12]..src/misc.ml[156,3996+13])
                      Tpat_var "q/819"
                    expression (src/misc.ml[157,4012+2]..src/misc.ml[162,4090+6])
                      Texp_try
                      expression (src/misc.ml[158,4018+4]..src/misc.ml[160,4059+8])
                        Texp_while
                        expression (src/misc.ml[158,4018+10]..src/misc.ml[158,4018+14])
                          Texp_construct "true"
                          []
                        expression (src/misc.ml[159,4036+6]..src/misc.ml[159,4036+22])
                          Texp_apply
                          expression (src/misc.ml[159,4036+6]..src/misc.ml[159,4036+7])
                            Texp_ident "f/818"
                          [
                            <arg>
                              Nolabel
                              expression (src/misc.ml[159,4036+8]..src/misc.ml[159,4036+22])
                                Texp_apply
                                expression (src/misc.ml[159,4036+9]..src/misc.ml[159,4036+19])
                                  Texp_ident "Stdlib!.Queue.take"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/misc.ml[159,4036+20]..src/misc.ml[159,4036+21])
                                      Texp_ident "q/819"
                                ]
                          ]
                      [
                        <case>
                          pattern (src/misc.ml[161,4068+7]..src/misc.ml[161,4068+18])
                            Tpat_construct "Queue.Empty"
                            []
                            None
                          expression (src/misc.ml[162,4090+4]..src/misc.ml[162,4090+6])
                            Texp_construct "()"
                            []
                      ]
                ]
          ]
    ]
  structure_item (src/misc.ml[164,4098+0]..src/misc.ml[173,4269+17])
    Tstr_value Rec
    [
      <def>
        pattern (src/misc.ml[164,4098+8]..src/misc.ml[164,4098+12])
          Tpat_var "smap/820"
        expression (src/misc.ml[164,4098+13]..src/misc.ml[173,4269+17]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[164,4098+13]..src/misc.ml[164,4098+14])
                Tpat_var "f/821"
              expression (src/misc.ml[164,4098+17]..src/misc.ml[173,4269+17])
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[165,4124+4]..src/misc.ml[165,4124+6])
                      Tpat_construct "[]"
                      []
                      None
                    expression (src/misc.ml[166,4134+6]..src/misc.ml[166,4134+8])
                      Texp_construct "[]"
                      []
                  <case>
                    pattern (src/misc.ml[167,4143+4]..src/misc.ml[167,4143+18])
                      Tpat_alias "l/824"
                      pattern (src/misc.ml[167,4143+4]..src/misc.ml[167,4143+13])
                        Tpat_construct "::"
                        [
                          pattern (src/misc.ml[167,4143+5]..src/misc.ml[167,4143+6])
                            Tpat_var "x/822"
                          pattern (src/misc.ml[167,4143+10]..src/misc.ml[167,4143+12])
                            Tpat_var "xs/823"
                        ]
                        None
                    expression (src/misc.ml[168,4165+6]..src/misc.ml[173,4269+17])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/misc.ml[168,4165+10]..src/misc.ml[168,4165+12])
                            Tpat_var "x'/825"
                          expression (src/misc.ml[168,4165+15]..src/misc.ml[168,4165+18])
                            Texp_apply
                            expression (src/misc.ml[168,4165+15]..src/misc.ml[168,4165+16])
                              Texp_ident "f/821"
                            [
                              <arg>
                                Nolabel
                                expression (src/misc.ml[168,4165+17]..src/misc.ml[168,4165+18])
                                  Texp_ident "x/822"
                            ]
                        <def>
                          pattern (src/misc.ml[169,4184+10]..src/misc.ml[169,4184+13])
                            Tpat_var "xs'/826"
                          expression (src/misc.ml[169,4184+16]..src/misc.ml[169,4184+25])
                            Texp_apply
                            expression (src/misc.ml[169,4184+16]..src/misc.ml[169,4184+20])
                              Texp_ident "smap/820"
                            [
                              <arg>
                                Nolabel
                                expression (src/misc.ml[169,4184+21]..src/misc.ml[169,4184+22])
                                  Texp_ident "f/821"
                              <arg>
                                Nolabel
                                expression (src/misc.ml[169,4184+23]..src/misc.ml[169,4184+25])
                                  Texp_ident "xs/823"
                            ]
                      ]
                      expression (src/misc.ml[170,4213+6]..src/misc.ml[173,4269+17])
                        Texp_ifthenelse
                        expression (src/misc.ml[170,4213+9]..src/misc.ml[170,4213+29])
                          Texp_apply
                          expression (src/misc.ml[170,4213+17]..src/misc.ml[170,4213+19])
                            Texp_ident "Stdlib!.&&"
                          [
                            <arg>
                              Nolabel
                              expression (src/misc.ml[170,4213+9]..src/misc.ml[170,4213+16])
                                Texp_apply
                                expression (src/misc.ml[170,4213+11]..src/misc.ml[170,4213+13])
                                  Texp_ident "Stdlib!.=="
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/misc.ml[170,4213+9]..src/misc.ml[170,4213+10])
                                      Texp_ident "x/822"
                                  <arg>
                                    Nolabel
                                    expression (src/misc.ml[170,4213+14]..src/misc.ml[170,4213+16])
                                      Texp_ident "x'/825"
                                ]
                            <arg>
                              Nolabel
                              expression (src/misc.ml[170,4213+20]..src/misc.ml[170,4213+29])
                                Texp_apply
                                expression (src/misc.ml[170,4213+23]..src/misc.ml[170,4213+25])
                                  Texp_ident "Stdlib!.=="
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/misc.ml[170,4213+20]..src/misc.ml[170,4213+22])
                                      Texp_ident "xs/823"
                                  <arg>
                                    Nolabel
                                    expression (src/misc.ml[170,4213+26]..src/misc.ml[170,4213+29])
                                      Texp_ident "xs'/826"
                                ]
                          ]
                        expression (src/misc.ml[171,4248+8]..src/misc.ml[171,4248+9])
                          Texp_ident "l/824"
                        Some
                          expression (src/misc.ml[173,4269+8]..src/misc.ml[173,4269+17])
                            Texp_construct "::"
                            [
                              expression (src/misc.ml[173,4269+8]..src/misc.ml[173,4269+10])
                                Texp_ident "x'/825"
                              expression (src/misc.ml[173,4269+14]..src/misc.ml[173,4269+17])
                                Texp_ident "xs'/826"
                            ]
                ]
          ]
    ]
  structure_item (src/misc.ml[175,4288+0]..src/misc.ml[185,4509+17])
    Tstr_value Rec
    [
      <def>
        pattern (src/misc.ml[175,4288+8]..src/misc.ml[175,4288+13])
          Tpat_var "smapa/827"
        expression (src/misc.ml[175,4288+14]..src/misc.ml[185,4509+17]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[175,4288+14]..src/misc.ml[175,4288+15])
                Tpat_var "f/828"
              expression (src/misc.ml[175,4288+16]..src/misc.ml[185,4509+17]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[175,4288+16]..src/misc.ml[175,4288+20])
                      Tpat_var "accu/829"
                    expression (src/misc.ml[175,4288+23]..src/misc.ml[185,4509+17])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/misc.ml[176,4320+4]..src/misc.ml[176,4320+6])
                            Tpat_construct "[]"
                            []
                            None
                          expression (src/misc.ml[177,4330+6]..src/misc.ml[177,4330+14])
                            Texp_tuple
                            [
                              expression (src/misc.ml[177,4330+6]..src/misc.ml[177,4330+10])
                                Texp_ident "accu/829"
                              expression (src/misc.ml[177,4330+12]..src/misc.ml[177,4330+14])
                                Texp_construct "[]"
                                []
                            ]
                        <case>
                          pattern (src/misc.ml[178,4345+4]..src/misc.ml[178,4345+18])
                            Tpat_alias "l/832"
                            pattern (src/misc.ml[178,4345+4]..src/misc.ml[178,4345+13])
                              Tpat_construct "::"
                              [
                                pattern (src/misc.ml[178,4345+5]..src/misc.ml[178,4345+6])
                                  Tpat_var "x/830"
                                pattern (src/misc.ml[178,4345+10]..src/misc.ml[178,4345+12])
                                  Tpat_var "xs/831"
                              ]
                              None
                          expression (src/misc.ml[179,4367+6]..src/misc.ml[185,4509+17])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/misc.ml[179,4367+10]..src/misc.ml[179,4367+18])
                                  Tpat_tuple
                                  [
                                    pattern (src/misc.ml[179,4367+10]..src/misc.ml[179,4367+14])
                                      Tpat_var "accu/833"
                                    pattern (src/misc.ml[179,4367+16]..src/misc.ml[179,4367+18])
                                      Tpat_var "x'/834"
                                  ]
                                expression (src/misc.ml[179,4367+21]..src/misc.ml[179,4367+29])
                                  Texp_apply
                                  expression (src/misc.ml[179,4367+21]..src/misc.ml[179,4367+22])
                                    Texp_ident "f/828"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/misc.ml[179,4367+23]..src/misc.ml[179,4367+27])
                                        Texp_ident "accu/829"
                                    <arg>
                                      Nolabel
                                      expression (src/misc.ml[179,4367+28]..src/misc.ml[179,4367+29])
                                        Texp_ident "x/830"
                                  ]
                            ]
                            expression (src/misc.ml[180,4400+6]..src/misc.ml[185,4509+17])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/misc.ml[180,4400+10]..src/misc.ml[180,4400+19])
                                    Tpat_tuple
                                    [
                                      pattern (src/misc.ml[180,4400+10]..src/misc.ml[180,4400+14])
                                        Tpat_var "accu/835"
                                      pattern (src/misc.ml[180,4400+16]..src/misc.ml[180,4400+19])
                                        Tpat_var "xs'/836"
                                    ]
                                  expression (src/misc.ml[180,4400+22]..src/misc.ml[180,4400+37])
                                    Texp_apply
                                    expression (src/misc.ml[180,4400+22]..src/misc.ml[180,4400+27])
                                      Texp_ident "smapa/827"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[180,4400+28]..src/misc.ml[180,4400+29])
                                          Texp_ident "f/828"
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[180,4400+30]..src/misc.ml[180,4400+34])
                                          Texp_ident "accu/833"
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[180,4400+35]..src/misc.ml[180,4400+37])
                                          Texp_ident "xs/831"
                                    ]
                              ]
                              expression (src/misc.ml[181,4441+6]..src/misc.ml[185,4509+17])
                                Texp_tuple
                                [
                                  expression (src/misc.ml[181,4441+6]..src/misc.ml[181,4441+10])
                                    Texp_ident "accu/835"
                                  expression (src/misc.ml[182,4453+6]..src/misc.ml[185,4509+17])
                                    Texp_ifthenelse
                                    expression (src/misc.ml[182,4453+9]..src/misc.ml[182,4453+29])
                                      Texp_apply
                                      expression (src/misc.ml[182,4453+17]..src/misc.ml[182,4453+19])
                                        Texp_ident "Stdlib!.&&"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/misc.ml[182,4453+9]..src/misc.ml[182,4453+16])
                                            Texp_apply
                                            expression (src/misc.ml[182,4453+11]..src/misc.ml[182,4453+13])
                                              Texp_ident "Stdlib!.=="
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/misc.ml[182,4453+9]..src/misc.ml[182,4453+10])
                                                  Texp_ident "x/830"
                                              <arg>
                                                Nolabel
                                                expression (src/misc.ml[182,4453+14]..src/misc.ml[182,4453+16])
                                                  Texp_ident "x'/834"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/misc.ml[182,4453+20]..src/misc.ml[182,4453+29])
                                            Texp_apply
                                            expression (src/misc.ml[182,4453+23]..src/misc.ml[182,4453+25])
                                              Texp_ident "Stdlib!.=="
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/misc.ml[182,4453+20]..src/misc.ml[182,4453+22])
                                                  Texp_ident "xs/831"
                                              <arg>
                                                Nolabel
                                                expression (src/misc.ml[182,4453+26]..src/misc.ml[182,4453+29])
                                                  Texp_ident "xs'/836"
                                            ]
                                      ]
                                    expression (src/misc.ml[183,4488+8]..src/misc.ml[183,4488+9])
                                      Texp_ident "l/832"
                                    Some
                                      expression (src/misc.ml[185,4509+8]..src/misc.ml[185,4509+17])
                                        Texp_construct "::"
                                        [
                                          expression (src/misc.ml[185,4509+8]..src/misc.ml[185,4509+10])
                                            Texp_ident "x'/834"
                                          expression (src/misc.ml[185,4509+14]..src/misc.ml[185,4509+17])
                                            Texp_ident "xs'/836"
                                        ]
                                ]
                      ]
                ]
          ]
    ]
  structure_item (src/misc.ml[187,4528+0]..src/misc.ml[199,4747+26])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[187,4528+4]..src/misc.ml[187,4528+13])
          Tpat_var "normalize/837"
        expression (src/misc.ml[187,4528+14]..src/misc.ml[199,4747+26]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[187,4528+14]..src/misc.ml[187,4528+15])
                Tpat_var "s/839"
              expression (src/misc.ml[188,4546+2]..src/misc.ml[199,4747+26])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/misc.ml[188,4546+6]..src/misc.ml[188,4546+7])
                      Tpat_var "s/840"
                    expression (src/misc.ml[188,4546+10]..src/misc.ml[188,4546+27])
                      Texp_apply
                      expression (src/misc.ml[188,4546+10]..src/misc.ml[188,4546+25])
                        Texp_ident "Stdlib!.Bytes.of_string"
                      [
                        <arg>
                          Nolabel
                          expression (src/misc.ml[188,4546+26]..src/misc.ml[188,4546+27])
                            Texp_ident "s/839"
                      ]
                ]
                expression (src/misc.ml[189,4577+2]..src/misc.ml[199,4747+26])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (src/misc.ml[189,4577+6]..src/misc.ml[189,4577+7])
                        Tpat_var "n/938"
                      expression (src/misc.ml[189,4577+10]..src/misc.ml[189,4577+24])
                        Texp_apply
                        expression (src/misc.ml[189,4577+10]..src/misc.ml[189,4577+22])
                          Texp_ident "Stdlib!.Bytes.length"
                        [
                          <arg>
                            Nolabel
                            expression (src/misc.ml[189,4577+23]..src/misc.ml[189,4577+24])
                              Texp_ident "s/840"
                        ]
                  ]
                  expression (src/misc.ml[190,4605+2]..src/misc.ml[199,4747+26])
                    Texp_sequence
                    expression (src/misc.ml[190,4605+2]..src/misc.ml[198,4739+6])
                      Texp_for "i/939" Up
                      expression (src/misc.ml[190,4605+10]..src/misc.ml[190,4605+11])
                        Texp_constant Const_int 0
                      expression (src/misc.ml[190,4605+15]..src/misc.ml[190,4605+20])
                        Texp_apply
                        expression (src/misc.ml[190,4605+17]..src/misc.ml[190,4605+18])
                          Texp_ident "Stdlib!.-"
                        [
                          <arg>
                            Nolabel
                            expression (src/misc.ml[190,4605+15]..src/misc.ml[190,4605+16])
                              Texp_ident "n/938"
                          <arg>
                            Nolabel
                            expression (src/misc.ml[190,4605+19]..src/misc.ml[190,4605+20])
                              Texp_constant Const_int 1
                        ]
                      expression (src/misc.ml[191,4629+4]..src/misc.ml[197,4728+10])
                        Texp_match
                        expression (src/misc.ml[191,4629+10]..src/misc.ml[191,4629+23])
                          Texp_apply
                          expression (src/misc.ml[191,4629+10]..src/misc.ml[191,4629+19])
                            Texp_ident "Stdlib!.Bytes.get"
                          [
                            <arg>
                              Nolabel
                              expression (src/misc.ml[191,4629+20]..src/misc.ml[191,4629+21])
                                Texp_ident "s/840"
                            <arg>
                              Nolabel
                              expression (src/misc.ml[191,4629+22]..src/misc.ml[191,4629+23])
                                Texp_ident "i/939"
                          ]
                        [
                          <case>
                            pattern (src/misc.ml[192,4658+6]..src/misc.ml[194,4678+9])
                              Tpat_or
                              pattern (src/misc.ml[192,4658+6]..src/misc.ml[193,4668+9])
                                Tpat_or
                                pattern (src/misc.ml[192,4658+6]..src/misc.ml[192,4658+9])
                                  Tpat_value
                                  pattern (src/misc.ml[192,4658+6]..src/misc.ml[192,4658+9])
                                    Tpat_constant Const_char 28
                                pattern (src/misc.ml[193,4668+6]..src/misc.ml[193,4668+9])
                                  Tpat_value
                                  pattern (src/misc.ml[193,4668+6]..src/misc.ml[193,4668+9])
                                    Tpat_constant Const_char 29
                              pattern (src/misc.ml[194,4678+6]..src/misc.ml[194,4678+9])
                                Tpat_value
                                pattern (src/misc.ml[194,4678+6]..src/misc.ml[194,4678+9])
                                  Tpat_constant Const_char 2c
                            expression (src/misc.ml[195,4691+8]..src/misc.ml[195,4691+25])
                              Texp_apply
                              expression (src/misc.ml[195,4691+8]..src/misc.ml[195,4691+17])
                                Texp_ident "Stdlib!.Bytes.set"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/misc.ml[195,4691+18]..src/misc.ml[195,4691+19])
                                    Texp_ident "s/840"
                                <arg>
                                  Nolabel
                                  expression (src/misc.ml[195,4691+20]..src/misc.ml[195,4691+21])
                                    Texp_ident "i/939"
                                <arg>
                                  Nolabel
                                  expression (src/misc.ml[195,4691+22]..src/misc.ml[195,4691+25])
                                    Texp_constant Const_char 5f
                              ]
                          <case>
                            pattern (src/misc.ml[196,4717+6]..src/misc.ml[196,4717+7])
                              Tpat_value
                              pattern (src/misc.ml[196,4717+6]..src/misc.ml[196,4717+7])
                                Tpat_any
                            expression (src/misc.ml[197,4728+8]..src/misc.ml[197,4728+10])
                              Texp_construct "()"
                              []
                        ]
                    expression (src/misc.ml[199,4747+2]..src/misc.ml[199,4747+26])
                      Texp_apply
                      expression (src/misc.ml[199,4747+2]..src/misc.ml[199,4747+24])
                        Texp_ident "Stdlib!.Bytes.unsafe_to_string"
                      [
                        <arg>
                          Nolabel
                          expression (src/misc.ml[199,4747+25]..src/misc.ml[199,4747+26])
                            Texp_ident "s/840"
                      ]
          ]
    ]
  structure_item (src/misc.ml[203,4847+0]..src/misc.ml[206,4899+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[203,4847+4]..src/misc.ml[203,4847+17])
          Tpat_var "postincrement/940"
        expression (src/misc.ml[203,4847+18]..src/misc.ml[206,4899+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[203,4847+18]..src/misc.ml[203,4847+19])
                Tpat_var "r/942"
              expression (src/misc.ml[204,4869+2]..src/misc.ml[206,4899+3])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/misc.ml[204,4869+6]..src/misc.ml[204,4869+7])
                      Tpat_var "x/943"
                    expression (src/misc.ml[204,4869+10]..src/misc.ml[204,4869+12])
                      Texp_apply
                      expression (src/misc.ml[204,4869+10]..src/misc.ml[204,4869+11])
                        Texp_ident "Stdlib!.!"
                      [
                        <arg>
                          Nolabel
                          expression (src/misc.ml[204,4869+11]..src/misc.ml[204,4869+12])
                            Texp_ident "r/942"
                      ]
                ]
                expression (src/misc.ml[205,4885+2]..src/misc.ml[206,4899+3])
                  Texp_sequence
                  expression (src/misc.ml[205,4885+2]..src/misc.ml[205,4885+12])
                    Texp_apply
                    expression (src/misc.ml[205,4885+4]..src/misc.ml[205,4885+6])
                      Texp_ident "Stdlib!.:="
                    [
                      <arg>
                        Nolabel
                        expression (src/misc.ml[205,4885+2]..src/misc.ml[205,4885+3])
                          Texp_ident "r/942"
                      <arg>
                        Nolabel
                        expression (src/misc.ml[205,4885+7]..src/misc.ml[205,4885+12])
                          Texp_apply
                          expression (src/misc.ml[205,4885+9]..src/misc.ml[205,4885+10])
                            Texp_ident "Stdlib!.+"
                          [
                            <arg>
                              Nolabel
                              expression (src/misc.ml[205,4885+7]..src/misc.ml[205,4885+8])
                                Texp_ident "x/943"
                            <arg>
                              Nolabel
                              expression (src/misc.ml[205,4885+11]..src/misc.ml[205,4885+12])
                                Texp_constant Const_int 1
                          ]
                    ]
                  expression (src/misc.ml[206,4899+2]..src/misc.ml[206,4899+3])
                    Texp_ident "x/943"
          ]
    ]
  structure_item (src/misc.ml[210,5042+0]..src/misc.ml[215,5163+10])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[210,5042+4]..src/misc.ml[210,5042+14])
          Tpat_var "filter_map/944"
        expression (src/misc.ml[210,5042+15]..src/misc.ml[215,5163+10]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[210,5042+15]..src/misc.ml[210,5042+16])
                Tpat_var "f/946"
              expression (src/misc.ml[210,5042+17]..src/misc.ml[215,5163+10]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[210,5042+17]..src/misc.ml[210,5042+18])
                      Tpat_var "l/947"
                    expression (src/misc.ml[211,5063+2]..src/misc.ml[215,5163+10])
                      Texp_open Fresh
                      module_expr (src/misc.ml[211,5063+2]..src/misc.ml[211,5063+6])
                        Tmod_ident "Stdlib!.List"
                      expression (src/misc.ml[211,5063+8]..src/misc.ml[215,5163+9])
                        Texp_apply
                        expression (src/misc.ml[211,5063+8]..src/misc.ml[211,5063+11])
                          Texp_ident "Stdlib!.List.rev"
                        [
                          <arg>
                            Nolabel
                            expression (src/misc.ml[211,5063+12]..src/misc.ml[215,5163+9])
                              Texp_apply
                              expression (src/misc.ml[211,5063+13]..src/misc.ml[211,5063+22])
                                Texp_ident "Stdlib!.List.fold_left"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/misc.ml[211,5063+23]..src/misc.ml[215,5163+3])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/misc.ml[211,5063+28]..src/misc.ml[211,5063+30])
                                          Tpat_var "ys/948"
                                        expression (src/misc.ml[211,5063+31]..src/misc.ml[214,5137+25]) ghost
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/misc.ml[211,5063+31]..src/misc.ml[211,5063+32])
                                                Tpat_var "x/949"
                                              expression (src/misc.ml[212,5099+4]..src/misc.ml[214,5137+25])
                                                Texp_match
                                                expression (src/misc.ml[212,5099+10]..src/misc.ml[212,5099+13])
                                                  Texp_apply
                                                  expression (src/misc.ml[212,5099+10]..src/misc.ml[212,5099+11])
                                                    Texp_ident "f/946"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/misc.ml[212,5099+12]..src/misc.ml[212,5099+13])
                                                        Texp_ident "x/949"
                                                  ]
                                                [
                                                  <case>
                                                    pattern (src/misc.ml[213,5118+8]..src/misc.ml[213,5118+12])
                                                      Tpat_value
                                                      pattern (src/misc.ml[213,5118+8]..src/misc.ml[213,5118+12])
                                                        Tpat_construct "None"
                                                        []
                                                        None
                                                    expression (src/misc.ml[213,5118+16]..src/misc.ml[213,5118+18])
                                                      Texp_ident "ys/948"
                                                  <case>
                                                    pattern (src/misc.ml[214,5137+8]..src/misc.ml[214,5137+14])
                                                      Tpat_value
                                                      pattern (src/misc.ml[214,5137+8]..src/misc.ml[214,5137+14])
                                                        Tpat_construct "Some"
                                                        [
                                                          pattern (src/misc.ml[214,5137+13]..src/misc.ml[214,5137+14])
                                                            Tpat_var "y/950"
                                                        ]
                                                        None
                                                    expression (src/misc.ml[214,5137+18]..src/misc.ml[214,5137+25])
                                                      Texp_construct "::"
                                                      [
                                                        expression (src/misc.ml[214,5137+18]..src/misc.ml[214,5137+19])
                                                          Texp_ident "y/950"
                                                        expression (src/misc.ml[214,5137+23]..src/misc.ml[214,5137+25])
                                                          Texp_ident "ys/948"
                                                      ]
                                                ]
                                          ]
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/misc.ml[215,5163+4]..src/misc.ml[215,5163+6])
                                    Texp_construct "[]"
                                    []
                                <arg>
                                  Nolabel
                                  expression (src/misc.ml[215,5163+7]..src/misc.ml[215,5163+8])
                                    Texp_ident "l/947"
                              ]
                        ]
                ]
          ]
    ]
  structure_item (src/misc.ml[217,5175+0]..src/misc.ml[249,6240+25])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[217,5175+4]..src/misc.ml[217,5175+21])
          Tpat_var "new_encode_decode/951"
        expression (src/misc.ml[217,5175+22]..src/misc.ml[249,6240+25]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[217,5175+22]..src/misc.ml[217,5175+30])
                Tpat_var "capacity/953"
              expression (src/misc.ml[219,5275+2]..src/misc.ml[249,6240+25])
                Texp_letmodule "H/1130"
                module_expr (src/misc.ml[219,5275+17]..src/misc.ml[223,5380+6])
                  Tmod_apply
                  module_expr (src/misc.ml[219,5275+17]..src/misc.ml[219,5275+29])
                    module_expr (src/misc.ml[219,5275+17]..src/misc.ml[219,5275+29])
                      Tmod_ident "Stdlib!.Hashtbl.Make"
                  module_expr (src/misc.ml[219,5275+30]..src/misc.ml[223,5380+5])
                    Tmod_structure
                    [
                      structure_item (src/misc.ml[220,5312+4]..src/misc.ml[220,5312+19])
                        Tstr_type Rec
                        [
                          type_declaration t/954 (src/misc.ml[220,5312+4]..src/misc.ml[220,5312+19])
                            ptype_params =
                              []
                            ptype_cstrs =
                              []
                            ptype_kind =
                              Ttype_abstract
                            ptype_private = Public
                            ptype_manifest =
                              Some
                                core_type (src/misc.ml[220,5312+13]..src/misc.ml[220,5312+19])
                                  Ttyp_constr "string/15!"
                                  []
                        ]
                      structure_item (src/misc.ml[221,5332+4]..src/misc.ml[221,5332+19])
                        Tstr_value Nonrec
                        [
                          <def>
                            pattern (src/misc.ml[221,5332+8]..src/misc.ml[221,5332+13])
                              Tpat_var "equal/955"
                            expression (src/misc.ml[221,5332+16]..src/misc.ml[221,5332+19])
                              Texp_ident "Stdlib!.="
                        ]
                      structure_item (src/misc.ml[222,5352+4]..src/misc.ml[222,5352+27])
                        Tstr_value Nonrec
                        [
                          <def>
                            pattern (src/misc.ml[222,5352+8]..src/misc.ml[222,5352+12])
                              Tpat_var "hash/956"
                            expression (src/misc.ml[222,5352+15]..src/misc.ml[222,5352+27])
                              Texp_ident "Stdlib!.Hashtbl.hash"
                        ]
                    ]
                expression (src/misc.ml[224,5390+2]..src/misc.ml[249,6240+25])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (src/misc.ml[224,5390+6]..src/misc.ml[224,5390+11])
                        Tpat_var "table/1131"
                      expression (src/misc.ml[224,5390+14]..src/misc.ml[224,5390+31])
                        Texp_apply
                        expression (src/misc.ml[224,5390+14]..src/misc.ml[224,5390+22])
                          Texp_ident "H/1130.create"
                        [
                          <arg>
                            Nolabel
                            expression (src/misc.ml[224,5390+23]..src/misc.ml[224,5390+31])
                              Texp_ident "capacity/953"
                        ]
                  ]
                  expression (src/misc.ml[226,5488+2]..src/misc.ml[249,6240+25])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/misc.ml[226,5488+6]..src/misc.ml[226,5488+10])
                          Tpat_var "text/1132"
                        expression (src/misc.ml[226,5488+13]..src/misc.ml[226,5488+44])
                          Texp_apply
                          expression (src/misc.ml[226,5488+13]..src/misc.ml[226,5488+41])
                            Texp_ident "MenhirLib!.InfiniteArray.make"
                          [
                            <arg>
                              Nolabel
                              expression (src/misc.ml[226,5488+42]..src/misc.ml[226,5488+44])
                                Texp_constant Const_string("",(src/misc.ml[226,5488+43]..src/misc.ml[226,5488+43]),None)
                          ]
                    ]
                    expression (src/misc.ml[228,5579+2]..src/misc.ml[249,6240+25])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/misc.ml[228,5579+6]..src/misc.ml[228,5579+7])
                            Tpat_var "c/1156"
                          expression (src/misc.ml[228,5579+10]..src/misc.ml[228,5579+15])
                            Texp_apply
                            expression (src/misc.ml[228,5579+10]..src/misc.ml[228,5579+13])
                              Texp_ident "Stdlib!.ref"
                            [
                              <arg>
                                Nolabel
                                expression (src/misc.ml[228,5579+14]..src/misc.ml[228,5579+15])
                                  Texp_constant Const_int 0
                            ]
                      ]
                      expression (src/misc.ml[230,5658+2]..src/misc.ml[249,6240+25])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/misc.ml[230,5658+6]..src/misc.ml[230,5658+12])
                              Tpat_var "encode/1157"
                            expression (src/misc.ml[230,5658+13]..src/misc.ml[240,5964+7]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/misc.ml[230,5658+14]..src/misc.ml[230,5658+15])
                                    extra
                                      Tpat_extra_constraint
                                      core_type (src/misc.ml[230,5658+18]..src/misc.ml[230,5658+24])
                                        Ttyp_constr "string/15!"
                                        []
                                    Tpat_alias "s/1163"
                                    pattern (src/misc.ml[230,5658+14]..src/misc.ml[230,5658+15])
                                      Tpat_any
                                  expression (src/misc.ml[231,5692+4]..src/misc.ml[240,5964+7])
                                    extra
                                      Texp_constraint
                                      core_type (src/misc.ml[230,5658+28]..src/misc.ml[230,5658+31])
                                        Ttyp_constr "int/1!"
                                        []
                                    Texp_sequence
                                    expression (src/misc.ml[231,5692+4]..src/misc.ml[231,5692+15])
                                      Texp_apply
                                      expression (src/misc.ml[231,5692+6]..src/misc.ml[231,5692+8])
                                        Texp_ident "Stdlib!.:="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/misc.ml[231,5692+4]..src/misc.ml[231,5692+5])
                                            Texp_ident "c/1156"
                                        <arg>
                                          Nolabel
                                          expression (src/misc.ml[231,5692+9]..src/misc.ml[231,5692+15])
                                            Texp_apply
                                            expression (src/misc.ml[231,5692+12]..src/misc.ml[231,5692+13])
                                              Texp_ident "Stdlib!.+"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/misc.ml[231,5692+9]..src/misc.ml[231,5692+11])
                                                  Texp_apply
                                                  expression (src/misc.ml[231,5692+9]..src/misc.ml[231,5692+10])
                                                    Texp_ident "Stdlib!.!"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/misc.ml[231,5692+10]..src/misc.ml[231,5692+11])
                                                        Texp_ident "c/1156"
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (src/misc.ml[231,5692+14]..src/misc.ml[231,5692+15])
                                                  Texp_constant Const_int 1
                                            ]
                                      ]
                                    expression (src/misc.ml[232,5709+4]..src/misc.ml[240,5964+7])
                                      Texp_try
                                      expression (src/misc.ml[233,5717+6]..src/misc.ml[233,5717+20])
                                        Texp_apply
                                        expression (src/misc.ml[233,5717+6]..src/misc.ml[233,5717+12])
                                          Texp_ident "H/1130.find"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/misc.ml[233,5717+13]..src/misc.ml[233,5717+18])
                                              Texp_ident "table/1131"
                                          <arg>
                                            Nolabel
                                            expression (src/misc.ml[233,5717+19]..src/misc.ml[233,5717+20])
                                              Texp_ident "s/1163"
                                        ]
                                      [
                                        <case>
                                          pattern (src/misc.ml[234,5738+9]..src/misc.ml[234,5738+18])
                                            Tpat_construct "Not_found"
                                            []
                                            None
                                          expression (src/misc.ml[237,5865+6]..src/misc.ml[240,5964+7])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/misc.ml[237,5865+10]..src/misc.ml[237,5865+11])
                                                  Tpat_var "i/1164"
                                                expression (src/misc.ml[237,5865+14]..src/misc.ml[237,5865+28])
                                                  Texp_apply
                                                  expression (src/misc.ml[237,5865+14]..src/misc.ml[237,5865+22])
                                                    Texp_ident "H/1130.length"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/misc.ml[237,5865+23]..src/misc.ml[237,5865+28])
                                                        Texp_ident "table/1131"
                                                  ]
                                            ]
                                            expression (src/misc.ml[238,5897+6]..src/misc.ml[240,5964+7])
                                              Texp_sequence
                                              expression (src/misc.ml[238,5897+6]..src/misc.ml[238,5897+21])
                                                Texp_apply
                                                expression (src/misc.ml[238,5897+6]..src/misc.ml[238,5897+11])
                                                  Texp_ident "H/1130.add"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/misc.ml[238,5897+12]..src/misc.ml[238,5897+17])
                                                      Texp_ident "table/1131"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/misc.ml[238,5897+18]..src/misc.ml[238,5897+19])
                                                      Texp_ident "s/1163"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/misc.ml[238,5897+20]..src/misc.ml[238,5897+21])
                                                      Texp_ident "i/1164"
                                                ]
                                              expression (src/misc.ml[239,5920+6]..src/misc.ml[240,5964+7])
                                                Texp_sequence
                                                expression (src/misc.ml[239,5920+6]..src/misc.ml[239,5920+42])
                                                  Texp_apply
                                                  expression (src/misc.ml[239,5920+6]..src/misc.ml[239,5920+33])
                                                    Texp_ident "MenhirLib!.InfiniteArray.set"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/misc.ml[239,5920+34]..src/misc.ml[239,5920+38])
                                                        Texp_ident "text/1132"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/misc.ml[239,5920+39]..src/misc.ml[239,5920+40])
                                                        Texp_ident "i/1164"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/misc.ml[239,5920+41]..src/misc.ml[239,5920+42])
                                                        Texp_ident "s/1163"
                                                  ]
                                                expression (src/misc.ml[240,5964+6]..src/misc.ml[240,5964+7])
                                                  Texp_ident "i/1164"
                                      ]
                              ]
                          <def>
                            pattern (src/misc.ml[242,6040+6]..src/misc.ml[242,6040+12])
                              Tpat_var "decode/1158"
                            expression (src/misc.ml[242,6040+13]..src/misc.ml[243,6074+38]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/misc.ml[242,6040+14]..src/misc.ml[242,6040+15])
                                    extra
                                      Tpat_extra_constraint
                                      core_type (src/misc.ml[242,6040+18]..src/misc.ml[242,6040+21])
                                        Ttyp_constr "int/1!"
                                        []
                                    Tpat_alias "i/1165"
                                    pattern (src/misc.ml[242,6040+14]..src/misc.ml[242,6040+15])
                                      Tpat_any
                                  expression (src/misc.ml[243,6074+4]..src/misc.ml[243,6074+38])
                                    extra
                                      Texp_constraint
                                      core_type (src/misc.ml[242,6040+25]..src/misc.ml[242,6040+31])
                                        Ttyp_constr "string/15!"
                                        []
                                    Texp_apply
                                    expression (src/misc.ml[243,6074+4]..src/misc.ml[243,6074+31])
                                      Texp_ident "MenhirLib!.InfiniteArray.get"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[243,6074+32]..src/misc.ml[243,6074+36])
                                          Texp_ident "text/1132"
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[243,6074+37]..src/misc.ml[243,6074+38])
                                          Texp_ident "i/1165"
                                    ]
                              ]
                          <def>
                            pattern (src/misc.ml[244,6113+6]..src/misc.ml[244,6113+13])
                              Tpat_var "verbose/1159"
                            expression (src/misc.ml[244,6113+14]..src/misc.ml[247,6209+25]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/misc.ml[244,6113+14]..src/misc.ml[244,6113+16])
                                    Tpat_construct "()"
                                    []
                                    None
                                  expression (src/misc.ml[245,6132+4]..src/misc.ml[247,6209+25])
                                    Texp_apply
                                    expression (src/misc.ml[245,6132+4]..src/misc.ml[245,6132+18])
                                      Texp_ident "Stdlib!.Printf.fprintf"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[245,6132+19]..src/misc.ml[245,6132+25])
                                          Texp_ident "Stdlib!.stderr"
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[246,6158+6]..src/misc.ml[246,6158+50])
                                          Texp_construct "CamlinternalFormatBasics.Format"
                                          [
                                            expression (src/misc.ml[246,6158+6]..src/misc.ml[246,6158+50]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Int"
                                              [
                                                expression (src/misc.ml[246,6158+6]..src/misc.ml[246,6158+50]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Int_d"
                                                  []
                                                expression (src/misc.ml[246,6158+6]..src/misc.ml[246,6158+50]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                  []
                                                expression (src/misc.ml[246,6158+6]..src/misc.ml[246,6158+50]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_precision"
                                                  []
                                                expression (src/misc.ml[246,6158+6]..src/misc.ml[246,6158+50]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                  [
                                                    expression (src/misc.ml[246,6158+6]..src/misc.ml[246,6158+50]) ghost
                                                      Texp_constant Const_string(" calls to intern; ",(src/misc.ml[246,6158+6]..src/misc.ml[246,6158+50]) ghost,None)
                                                    expression (src/misc.ml[246,6158+6]..src/misc.ml[246,6158+50]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.Int"
                                                      [
                                                        expression (src/misc.ml[246,6158+6]..src/misc.ml[246,6158+50]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.Int_d"
                                                          []
                                                        expression (src/misc.ml[246,6158+6]..src/misc.ml[246,6158+50]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                                          []
                                                        expression (src/misc.ml[246,6158+6]..src/misc.ml[246,6158+50]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.No_precision"
                                                          []
                                                        expression (src/misc.ml[246,6158+6]..src/misc.ml[246,6158+50]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                                          [
                                                            expression (src/misc.ml[246,6158+6]..src/misc.ml[246,6158+50]) ghost
                                                              Texp_constant Const_string(" unique strings.\n",(src/misc.ml[246,6158+6]..src/misc.ml[246,6158+50]) ghost,None)
                                                            expression (src/misc.ml[246,6158+6]..src/misc.ml[246,6158+50]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.Flush"
                                                              [
                                                                expression (src/misc.ml[246,6158+6]..src/misc.ml[246,6158+50]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                  []
                                                              ]
                                                          ]
                                                      ]
                                                  ]
                                              ]
                                            expression (src/misc.ml[246,6158+6]..src/misc.ml[246,6158+50]) ghost
                                              Texp_constant Const_string("%d calls to intern; %d unique strings.\n%!",(src/misc.ml[246,6158+6]..src/misc.ml[246,6158+50]) ghost,None)
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[247,6209+6]..src/misc.ml[247,6209+8])
                                          Texp_apply
                                          expression (src/misc.ml[247,6209+6]..src/misc.ml[247,6209+7])
                                            Texp_ident "Stdlib!.!"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/misc.ml[247,6209+7]..src/misc.ml[247,6209+8])
                                                Texp_ident "c/1156"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[247,6209+9]..src/misc.ml[247,6209+25])
                                          Texp_apply
                                          expression (src/misc.ml[247,6209+10]..src/misc.ml[247,6209+18])
                                            Texp_ident "H/1130.length"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/misc.ml[247,6209+19]..src/misc.ml[247,6209+24])
                                                Texp_ident "table/1131"
                                          ]
                                    ]
                              ]
                        ]
                        expression (src/misc.ml[249,6240+2]..src/misc.ml[249,6240+25])
                          Texp_tuple
                          [
                            expression (src/misc.ml[249,6240+2]..src/misc.ml[249,6240+8])
                              Texp_ident "encode/1157"
                            expression (src/misc.ml[249,6240+10]..src/misc.ml[249,6240+16])
                              Texp_ident "decode/1158"
                            expression (src/misc.ml[249,6240+18]..src/misc.ml[249,6240+25])
                              Texp_ident "verbose/1159"
                          ]
          ]
    ]
  structure_item (src/misc.ml[251,6267+0]..src/misc.ml[277,7193+16])
    Tstr_value Rec
    [
      <def>
        pattern (src/misc.ml[251,6267+8]..src/misc.ml[251,6267+12])
          Tpat_var "best/1203"
        expression (src/misc.ml[251,6267+13]..src/misc.ml[277,7193+16]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[251,6267+14]..src/misc.ml[251,6267+24])
                extra
                  Tpat_extra_constraint
                  core_type (src/misc.ml[251,6267+27]..src/misc.ml[251,6267+43])
                    Ttyp_arrow
                    Nolabel
                    core_type (src/misc.ml[251,6267+27]..src/misc.ml[251,6267+29])
                      Ttyp_var a
                    core_type (src/misc.ml[251,6267+33]..src/misc.ml[251,6267+43])
                      Ttyp_arrow
                      Nolabel
                      core_type (src/misc.ml[251,6267+33]..src/misc.ml[251,6267+35])
                        Ttyp_var a
                      core_type (src/misc.ml[251,6267+39]..src/misc.ml[251,6267+43])
                        Ttyp_constr "bool/5!"
                        []
                Tpat_alias "preferable/1204"
                pattern (src/misc.ml[251,6267+14]..src/misc.ml[251,6267+24])
                  Tpat_any
              expression (src/misc.ml[251,6267+45]..src/misc.ml[277,7193+16]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[251,6267+46]..src/misc.ml[251,6267+48])
                      extra
                        Tpat_extra_constraint
                        core_type (src/misc.ml[251,6267+51]..src/misc.ml[251,6267+58])
                          Ttyp_constr "list/9!"
                          [
                            core_type (src/misc.ml[251,6267+51]..src/misc.ml[251,6267+53])
                              Ttyp_var a
                          ]
                      Tpat_alias "xs/1205"
                      pattern (src/misc.ml[251,6267+46]..src/misc.ml[251,6267+48])
                        Tpat_any
                    expression (src/misc.ml[252,6341+2]..src/misc.ml[277,7193+16])
                      extra
                        Texp_constraint
                        core_type (src/misc.ml[251,6267+62]..src/misc.ml[251,6267+71])
                          Ttyp_constr "option/10!"
                          [
                            core_type (src/misc.ml[251,6267+62]..src/misc.ml[251,6267+64])
                              Ttyp_var a
                          ]
                      Texp_match
                      expression (src/misc.ml[252,6341+8]..src/misc.ml[252,6341+10])
                        Texp_ident "xs/1205"
                      [
                        <case>
                          pattern (src/misc.ml[253,6357+4]..src/misc.ml[253,6357+6])
                            Tpat_value
                            pattern (src/misc.ml[253,6357+4]..src/misc.ml[253,6357+6])
                              Tpat_construct "[]"
                              []
                              None
                          expression (src/misc.ml[256,6491+6]..src/misc.ml[256,6491+10])
                            Texp_construct "None"
                            []
                        <case>
                          pattern (src/misc.ml[257,6502+4]..src/misc.ml[257,6502+7])
                            Tpat_value
                            pattern (src/misc.ml[257,6502+4]..src/misc.ml[257,6502+7])
                              Tpat_construct "::"
                              [
                                pattern (src/misc.ml[257,6502+5]..src/misc.ml[257,6502+6])
                                  Tpat_var "x/1206"
                                pattern (src/misc.ml[257,6502+6]..src/misc.ml[257,6502+7]) ghost
                                  Tpat_construct "[]"
                                  []
                                  None
                              ]
                              None
                          expression (src/misc.ml[258,6513+6]..src/misc.ml[258,6513+12])
                            Texp_construct "Some"
                            [
                              expression (src/misc.ml[258,6513+11]..src/misc.ml[258,6513+12])
                                Texp_ident "x/1206"
                            ]
                        <case>
                          pattern (src/misc.ml[259,6526+4]..src/misc.ml[259,6526+11])
                            Tpat_value
                            pattern (src/misc.ml[259,6526+4]..src/misc.ml[259,6526+11])
                              Tpat_construct "::"
                              [
                                pattern (src/misc.ml[259,6526+4]..src/misc.ml[259,6526+5])
                                  Tpat_var "x/1207"
                                pattern (src/misc.ml[259,6526+9]..src/misc.ml[259,6526+11])
                                  Tpat_var "xs/1208"
                              ]
                              None
                          expression (src/misc.ml[262,6651+6]..src/misc.ml[277,7193+16])
                            Texp_ifthenelse
                            expression (src/misc.ml[262,6651+9]..src/misc.ml[262,6651+39])
                              Texp_apply
                              expression (src/misc.ml[262,6651+9]..src/misc.ml[262,6651+21])
                                Texp_ident "Stdlib!.List.for_all"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/misc.ml[262,6651+22]..src/misc.ml[262,6651+36])
                                    Texp_apply
                                    expression (src/misc.ml[262,6651+23]..src/misc.ml[262,6651+33])
                                      Texp_ident "preferable/1204"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[262,6651+34]..src/misc.ml[262,6651+35])
                                          Texp_ident "x/1207"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/misc.ml[262,6651+37]..src/misc.ml[262,6651+39])
                                    Texp_ident "xs/1208"
                              ]
                            expression (src/misc.ml[263,6696+8]..src/misc.ml[263,6696+14])
                              Texp_construct "Some"
                              [
                                expression (src/misc.ml[263,6696+13]..src/misc.ml[263,6696+14])
                                  Texp_ident "x/1207"
                              ]
                            Some
                              expression (src/misc.ml[266,6790+8]..src/misc.ml[277,7193+16])
                                Texp_match
                                expression (src/misc.ml[266,6790+14]..src/misc.ml[266,6790+32])
                                  Texp_apply
                                  expression (src/misc.ml[266,6790+14]..src/misc.ml[266,6790+18])
                                    Texp_ident "best/1203"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/misc.ml[266,6790+19]..src/misc.ml[266,6790+29])
                                        Texp_ident "preferable/1204"
                                    <arg>
                                      Nolabel
                                      expression (src/misc.ml[266,6790+30]..src/misc.ml[266,6790+32])
                                        Texp_ident "xs/1208"
                                  ]
                                [
                                  <case>
                                    pattern (src/misc.ml[267,6828+10]..src/misc.ml[267,6828+16])
                                      Tpat_value
                                      pattern (src/misc.ml[267,6828+10]..src/misc.ml[267,6828+16])
                                        Tpat_construct "Some"
                                        [
                                          pattern (src/misc.ml[267,6828+15]..src/misc.ml[267,6828+16])
                                            Tpat_var "y/1209"
                                        ]
                                        None
                                    expression (src/misc.ml[268,6848+12]..src/misc.ml[274,7112+18])
                                      Texp_ifthenelse
                                      expression (src/misc.ml[268,6848+15]..src/misc.ml[268,6848+29])
                                        Texp_apply
                                        expression (src/misc.ml[268,6848+15]..src/misc.ml[268,6848+25])
                                          Texp_ident "preferable/1204"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/misc.ml[268,6848+26]..src/misc.ml[268,6848+27])
                                              Texp_ident "y/1209"
                                          <arg>
                                            Nolabel
                                            expression (src/misc.ml[268,6848+28]..src/misc.ml[268,6848+29])
                                              Texp_ident "x/1207"
                                        ]
                                      expression (src/misc.ml[271,7028+14]..src/misc.ml[271,7028+20])
                                        Texp_construct "Some"
                                        [
                                          expression (src/misc.ml[271,7028+19]..src/misc.ml[271,7028+20])
                                            Texp_ident "y/1209"
                                        ]
                                      Some
                                        expression (src/misc.ml[274,7112+14]..src/misc.ml[274,7112+18])
                                          Texp_construct "None"
                                          []
                                  <case>
                                    pattern (src/misc.ml[275,7131+10]..src/misc.ml[275,7131+14])
                                      Tpat_value
                                      pattern (src/misc.ml[275,7131+10]..src/misc.ml[275,7131+14])
                                        Tpat_construct "None"
                                        []
                                        None
                                    expression (src/misc.ml[277,7193+12]..src/misc.ml[277,7193+16])
                                      Texp_construct "None"
                                      []
                                ]
                      ]
                ]
          ]
    ]
  structure_item (src/misc.ml[279,7211+0]..src/misc.ml[288,7400+24])
    Tstr_value Rec
    [
      <def>
        pattern (src/misc.ml[279,7211+8]..src/misc.ml[279,7211+15])
          Tpat_var "levels1/1210"
        expression (src/misc.ml[279,7211+16]..src/misc.ml[288,7400+24]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[279,7211+16]..src/misc.ml[279,7211+19])
                Tpat_var "cmp/1211"
              expression (src/misc.ml[279,7211+20]..src/misc.ml[288,7400+24]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[279,7211+20]..src/misc.ml[279,7211+22])
                      Tpat_var "x1/1212"
                    expression (src/misc.ml[279,7211+23]..src/misc.ml[288,7400+24]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/misc.ml[279,7211+23]..src/misc.ml[279,7211+25])
                            Tpat_var "xs/1213"
                          expression (src/misc.ml[280,7239+2]..src/misc.ml[288,7400+24])
                            Texp_match
                            expression (src/misc.ml[280,7239+8]..src/misc.ml[280,7239+10])
                              Texp_ident "xs/1213"
                            [
                              <case>
                                pattern (src/misc.ml[281,7255+4]..src/misc.ml[281,7255+6])
                                  Tpat_value
                                  pattern (src/misc.ml[281,7255+4]..src/misc.ml[281,7255+6])
                                    Tpat_construct "[]"
                                    []
                                    None
                                expression (src/misc.ml[282,7265+6]..src/misc.ml[282,7265+14])
                                  Texp_tuple
                                  [
                                    expression (src/misc.ml[282,7265+6]..src/misc.ml[282,7265+10])
                                      Texp_construct "::"
                                      [
                                        expression (src/misc.ml[282,7265+7]..src/misc.ml[282,7265+9])
                                          Texp_ident "x1/1212"
                                        expression (src/misc.ml[282,7265+9]..src/misc.ml[282,7265+10]) ghost
                                          Texp_construct "[]"
                                          []
                                      ]
                                    expression (src/misc.ml[282,7265+12]..src/misc.ml[282,7265+14])
                                      Texp_construct "[]"
                                      []
                                  ]
                              <case>
                                pattern (src/misc.ml[283,7280+4]..src/misc.ml[283,7280+12])
                                  Tpat_value
                                  pattern (src/misc.ml[283,7280+4]..src/misc.ml[283,7280+12])
                                    Tpat_construct "::"
                                    [
                                      pattern (src/misc.ml[283,7280+4]..src/misc.ml[283,7280+6])
                                        Tpat_var "x2/1214"
                                      pattern (src/misc.ml[283,7280+10]..src/misc.ml[283,7280+12])
                                        Tpat_var "xs/1215"
                                    ]
                                    None
                                expression (src/misc.ml[284,7296+6]..src/misc.ml[288,7400+24])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/misc.ml[284,7296+10]..src/misc.ml[284,7296+18])
                                        Tpat_tuple
                                        [
                                          pattern (src/misc.ml[284,7296+10]..src/misc.ml[284,7296+13])
                                            Tpat_var "ys1/1216"
                                          pattern (src/misc.ml[284,7296+15]..src/misc.ml[284,7296+18])
                                            Tpat_var "yss/1217"
                                        ]
                                      expression (src/misc.ml[284,7296+21]..src/misc.ml[284,7296+38])
                                        Texp_apply
                                        expression (src/misc.ml[284,7296+21]..src/misc.ml[284,7296+28])
                                          Texp_ident "levels1/1210"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/misc.ml[284,7296+29]..src/misc.ml[284,7296+32])
                                              Texp_ident "cmp/1211"
                                          <arg>
                                            Nolabel
                                            expression (src/misc.ml[284,7296+33]..src/misc.ml[284,7296+35])
                                              Texp_ident "x2/1214"
                                          <arg>
                                            Nolabel
                                            expression (src/misc.ml[284,7296+36]..src/misc.ml[284,7296+38])
                                              Texp_ident "xs/1215"
                                        ]
                                  ]
                                  expression (src/misc.ml[285,7338+6]..src/misc.ml[288,7400+24])
                                    Texp_ifthenelse
                                    expression (src/misc.ml[285,7338+9]..src/misc.ml[285,7338+22])
                                      Texp_apply
                                      expression (src/misc.ml[285,7338+19]..src/misc.ml[285,7338+20])
                                        Texp_ident "Stdlib!.="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/misc.ml[285,7338+9]..src/misc.ml[285,7338+18])
                                            Texp_apply
                                            expression (src/misc.ml[285,7338+9]..src/misc.ml[285,7338+12])
                                              Texp_ident "cmp/1211"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/misc.ml[285,7338+13]..src/misc.ml[285,7338+15])
                                                  Texp_ident "x1/1212"
                                              <arg>
                                                Nolabel
                                                expression (src/misc.ml[285,7338+16]..src/misc.ml[285,7338+18])
                                                  Texp_ident "x2/1214"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/misc.ml[285,7338+21]..src/misc.ml[285,7338+22])
                                            Texp_constant Const_int 0
                                      ]
                                    expression (src/misc.ml[286,7366+8]..src/misc.ml[286,7366+22])
                                      Texp_tuple
                                      [
                                        expression (src/misc.ml[286,7366+8]..src/misc.ml[286,7366+17])
                                          Texp_construct "::"
                                          [
                                            expression (src/misc.ml[286,7366+8]..src/misc.ml[286,7366+10])
                                              Texp_ident "x1/1212"
                                            expression (src/misc.ml[286,7366+14]..src/misc.ml[286,7366+17])
                                              Texp_ident "ys1/1216"
                                          ]
                                        expression (src/misc.ml[286,7366+19]..src/misc.ml[286,7366+22])
                                          Texp_ident "yss/1217"
                                      ]
                                    Some
                                      expression (src/misc.ml[288,7400+8]..src/misc.ml[288,7400+24])
                                        Texp_tuple
                                        [
                                          expression (src/misc.ml[288,7400+8]..src/misc.ml[288,7400+12])
                                            Texp_construct "::"
                                            [
                                              expression (src/misc.ml[288,7400+9]..src/misc.ml[288,7400+11])
                                                Texp_ident "x1/1212"
                                              expression (src/misc.ml[288,7400+11]..src/misc.ml[288,7400+12]) ghost
                                                Texp_construct "[]"
                                                []
                                            ]
                                          expression (src/misc.ml[288,7400+14]..src/misc.ml[288,7400+24])
                                            Texp_construct "::"
                                            [
                                              expression (src/misc.ml[288,7400+14]..src/misc.ml[288,7400+17])
                                                Texp_ident "ys1/1216"
                                              expression (src/misc.ml[288,7400+21]..src/misc.ml[288,7400+24])
                                                Texp_ident "yss/1217"
                                            ]
                                        ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/misc.ml[290,7426+0]..src/misc.ml[296,7539+16])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[290,7426+4]..src/misc.ml[290,7426+10])
          Tpat_var "levels/1218"
        expression (src/misc.ml[290,7426+11]..src/misc.ml[296,7539+16]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[290,7426+11]..src/misc.ml[290,7426+14])
                Tpat_var "cmp/1220"
              expression (src/misc.ml[290,7426+15]..src/misc.ml[296,7539+16]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[290,7426+15]..src/misc.ml[290,7426+17])
                      Tpat_var "xs/1221"
                    expression (src/misc.ml[291,7446+2]..src/misc.ml[296,7539+16])
                      Texp_match
                      expression (src/misc.ml[291,7446+8]..src/misc.ml[291,7446+10])
                        Texp_ident "xs/1221"
                      [
                        <case>
                          pattern (src/misc.ml[292,7462+4]..src/misc.ml[292,7462+6])
                            Tpat_value
                            pattern (src/misc.ml[292,7462+4]..src/misc.ml[292,7462+6])
                              Tpat_construct "[]"
                              []
                              None
                          expression (src/misc.ml[293,7472+6]..src/misc.ml[293,7472+8])
                            Texp_construct "[]"
                            []
                        <case>
                          pattern (src/misc.ml[294,7481+4]..src/misc.ml[294,7481+12])
                            Tpat_value
                            pattern (src/misc.ml[294,7481+4]..src/misc.ml[294,7481+12])
                              Tpat_construct "::"
                              [
                                pattern (src/misc.ml[294,7481+4]..src/misc.ml[294,7481+6])
                                  Tpat_var "x1/1222"
                                pattern (src/misc.ml[294,7481+10]..src/misc.ml[294,7481+12])
                                  Tpat_var "xs/1223"
                              ]
                              None
                          expression (src/misc.ml[295,7497+6]..src/misc.ml[296,7539+16])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/misc.ml[295,7497+10]..src/misc.ml[295,7497+18])
                                  Tpat_tuple
                                  [
                                    pattern (src/misc.ml[295,7497+10]..src/misc.ml[295,7497+13])
                                      Tpat_var "ys1/1224"
                                    pattern (src/misc.ml[295,7497+15]..src/misc.ml[295,7497+18])
                                      Tpat_var "yss/1225"
                                  ]
                                expression (src/misc.ml[295,7497+21]..src/misc.ml[295,7497+38])
                                  Texp_apply
                                  expression (src/misc.ml[295,7497+21]..src/misc.ml[295,7497+28])
                                    Texp_ident "levels1/1210"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/misc.ml[295,7497+29]..src/misc.ml[295,7497+32])
                                        Texp_ident "cmp/1220"
                                    <arg>
                                      Nolabel
                                      expression (src/misc.ml[295,7497+33]..src/misc.ml[295,7497+35])
                                        Texp_ident "x1/1222"
                                    <arg>
                                      Nolabel
                                      expression (src/misc.ml[295,7497+36]..src/misc.ml[295,7497+38])
                                        Texp_ident "xs/1223"
                                  ]
                            ]
                            expression (src/misc.ml[296,7539+6]..src/misc.ml[296,7539+16])
                              Texp_construct "::"
                              [
                                expression (src/misc.ml[296,7539+6]..src/misc.ml[296,7539+9])
                                  Texp_ident "ys1/1224"
                                expression (src/misc.ml[296,7539+13]..src/misc.ml[296,7539+16])
                                  Texp_ident "yss/1225"
                              ]
                      ]
                ]
          ]
    ]
  structure_item (src/misc.ml[304,7867+0]..src/misc.ml[313,8265+47])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[304,7867+4]..src/misc.ml[304,7867+10])
          Tpat_var "insert/1226"
        expression (src/misc.ml[304,7867+11]..src/misc.ml[313,8265+47]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[304,7867+11]..src/misc.ml[304,7867+15])
                Tpat_var "<=/1228"
              expression (src/misc.ml[304,7867+16]..src/misc.ml[313,8265+47]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[304,7867+16]..src/misc.ml[304,7867+17])
                      Tpat_var "x/1229"
                    expression (src/misc.ml[304,7867+18]..src/misc.ml[313,8265+47]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/misc.ml[304,7867+18]..src/misc.ml[304,7867+20])
                            Tpat_var "ys/1230"
                          expression (src/misc.ml[308,8101+2]..src/misc.ml[313,8265+47])
                            Texp_ifthenelse
                            expression (src/misc.ml[308,8101+5]..src/misc.ml[308,8101+37])
                              Texp_apply
                              expression (src/misc.ml[308,8101+5]..src/misc.ml[308,8101+16])
                                Texp_ident "Stdlib!.List.exists"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/misc.ml[308,8101+17]..src/misc.ml[308,8101+34])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/misc.ml[308,8101+22]..src/misc.ml[308,8101+23])
                                          Tpat_var "y/1231"
                                        expression (src/misc.ml[308,8101+27]..src/misc.ml[308,8101+33])
                                          Texp_apply
                                          expression (src/misc.ml[308,8101+29]..src/misc.ml[308,8101+31])
                                            Texp_ident "<=/1228"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/misc.ml[308,8101+27]..src/misc.ml[308,8101+28])
                                                Texp_ident "x/1229"
                                            <arg>
                                              Nolabel
                                              expression (src/misc.ml[308,8101+32]..src/misc.ml[308,8101+33])
                                                Texp_ident "y/1231"
                                          ]
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/misc.ml[308,8101+35]..src/misc.ml[308,8101+37])
                                    Texp_ident "ys/1230"
                              ]
                            expression (src/misc.ml[309,8144+4]..src/misc.ml[309,8144+6])
                              Texp_ident "ys/1230"
                            Some
                              expression (src/misc.ml[313,8265+4]..src/misc.ml[313,8265+47])
                                Texp_construct "::"
                                [
                                  expression (src/misc.ml[313,8265+4]..src/misc.ml[313,8265+5])
                                    Texp_ident "x/1229"
                                  expression (src/misc.ml[313,8265+9]..src/misc.ml[313,8265+47])
                                    Texp_apply
                                    expression (src/misc.ml[313,8265+9]..src/misc.ml[313,8265+20])
                                      Texp_ident "Stdlib!.List.filter"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[313,8265+21]..src/misc.ml[313,8265+44])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/misc.ml[313,8265+26]..src/misc.ml[313,8265+27])
                                                Tpat_var "y/1232"
                                              expression (src/misc.ml[313,8265+31]..src/misc.ml[313,8265+43])
                                                Texp_apply
                                                expression (src/misc.ml[313,8265+31]..src/misc.ml[313,8265+34])
                                                  Texp_ident "Stdlib!.not"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/misc.ml[313,8265+35]..src/misc.ml[313,8265+43])
                                                      Texp_apply
                                                      expression (src/misc.ml[313,8265+38]..src/misc.ml[313,8265+40])
                                                        Texp_ident "<=/1228"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/misc.ml[313,8265+36]..src/misc.ml[313,8265+37])
                                                            Texp_ident "y/1232"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/misc.ml[313,8265+41]..src/misc.ml[313,8265+42])
                                                            Texp_ident "x/1229"
                                                      ]
                                                ]
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[313,8265+45]..src/misc.ml[313,8265+47])
                                          Texp_ident "ys/1230"
                                    ]
                                ]
                      ]
                ]
          ]
    ]
  structure_item (src/misc.ml[325,8844+0]..src/misc.ml[326,8863+37])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[325,8844+4]..src/misc.ml[325,8844+8])
          Tpat_var "trim/1233"
        expression (src/misc.ml[325,8844+9]..src/misc.ml[326,8863+37]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[325,8844+9]..src/misc.ml[325,8844+13])
                Tpat_var "<=/1235"
              expression (src/misc.ml[325,8844+14]..src/misc.ml[326,8863+37]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[325,8844+14]..src/misc.ml[325,8844+16])
                      Tpat_var "xs/1236"
                    expression (src/misc.ml[326,8863+2]..src/misc.ml[326,8863+37])
                      Texp_apply
                      expression (src/misc.ml[326,8863+2]..src/misc.ml[326,8863+17])
                        Texp_ident "Stdlib!.List.fold_right"
                      [
                        <arg>
                          Nolabel
                          expression (src/misc.ml[326,8863+18]..src/misc.ml[326,8863+31])
                            Texp_apply
                            expression (src/misc.ml[326,8863+19]..src/misc.ml[326,8863+25])
                              Texp_ident "insert/1226"
                            [
                              <arg>
                                Nolabel
                                expression (src/misc.ml[326,8863+26]..src/misc.ml[326,8863+30])
                                  Texp_ident "<=/1235"
                            ]
                        <arg>
                          Nolabel
                          expression (src/misc.ml[326,8863+32]..src/misc.ml[326,8863+34])
                            Texp_ident "xs/1236"
                        <arg>
                          Nolabel
                          expression (src/misc.ml[326,8863+35]..src/misc.ml[326,8863+37])
                            Texp_construct "[]"
                            []
                      ]
                ]
          ]
    ]
  structure_item (src/misc.ml[328,8902+0]..src/misc.ml[336,9030+21])
    Tstr_value Rec
    [
      <def>
        pattern (src/misc.ml[328,8902+8]..src/misc.ml[328,8902+12])
          Tpat_var "dup1/1237"
        expression (src/misc.ml[328,8902+13]..src/misc.ml[336,9030+21]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[328,8902+13]..src/misc.ml[328,8902+16])
                Tpat_var "cmp/1238"
              expression (src/misc.ml[328,8902+17]..src/misc.ml[336,9030+21]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[328,8902+17]..src/misc.ml[328,8902+18])
                      Tpat_var "x/1239"
                    expression (src/misc.ml[328,8902+19]..src/misc.ml[336,9030+21]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/misc.ml[328,8902+19]..src/misc.ml[328,8902+21])
                            Tpat_var "ys/1240"
                          expression (src/misc.ml[329,8926+2]..src/misc.ml[336,9030+21])
                            Texp_match
                            expression (src/misc.ml[329,8926+8]..src/misc.ml[329,8926+10])
                              Texp_ident "ys/1240"
                            [
                              <case>
                                pattern (src/misc.ml[330,8942+4]..src/misc.ml[330,8942+6])
                                  Tpat_value
                                  pattern (src/misc.ml[330,8942+4]..src/misc.ml[330,8942+6])
                                    Tpat_construct "[]"
                                    []
                                    None
                                expression (src/misc.ml[331,8952+6]..src/misc.ml[331,8952+10])
                                  Texp_construct "None"
                                  []
                              <case>
                                pattern (src/misc.ml[332,8963+4]..src/misc.ml[332,8963+11])
                                  Tpat_value
                                  pattern (src/misc.ml[332,8963+4]..src/misc.ml[332,8963+11])
                                    Tpat_construct "::"
                                    [
                                      pattern (src/misc.ml[332,8963+4]..src/misc.ml[332,8963+5])
                                        Tpat_var "y/1241"
                                      pattern (src/misc.ml[332,8963+9]..src/misc.ml[332,8963+11])
                                        Tpat_var "ys/1242"
                                    ]
                                    None
                                expression (src/misc.ml[333,8978+6]..src/misc.ml[336,9030+21])
                                  Texp_ifthenelse
                                  expression (src/misc.ml[333,8978+9]..src/misc.ml[333,8978+20])
                                    Texp_apply
                                    expression (src/misc.ml[333,8978+17]..src/misc.ml[333,8978+18])
                                      Texp_ident "Stdlib!.="
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[333,8978+9]..src/misc.ml[333,8978+16])
                                          Texp_apply
                                          expression (src/misc.ml[333,8978+9]..src/misc.ml[333,8978+12])
                                            Texp_ident "cmp/1238"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/misc.ml[333,8978+13]..src/misc.ml[333,8978+14])
                                                Texp_ident "x/1239"
                                            <arg>
                                              Nolabel
                                              expression (src/misc.ml[333,8978+15]..src/misc.ml[333,8978+16])
                                                Texp_ident "y/1241"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[333,8978+19]..src/misc.ml[333,8978+20])
                                          Texp_constant Const_int 0
                                    ]
                                  expression (src/misc.ml[334,9004+8]..src/misc.ml[334,9004+14])
                                    Texp_construct "Some"
                                    [
                                      expression (src/misc.ml[334,9004+13]..src/misc.ml[334,9004+14])
                                        Texp_ident "x/1239"
                                    ]
                                  Some
                                    expression (src/misc.ml[336,9030+8]..src/misc.ml[336,9030+21])
                                      Texp_apply
                                      expression (src/misc.ml[336,9030+8]..src/misc.ml[336,9030+12])
                                        Texp_ident "dup1/1237"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/misc.ml[336,9030+13]..src/misc.ml[336,9030+16])
                                            Texp_ident "cmp/1238"
                                        <arg>
                                          Nolabel
                                          expression (src/misc.ml[336,9030+17]..src/misc.ml[336,9030+18])
                                            Texp_ident "y/1241"
                                        <arg>
                                          Nolabel
                                          expression (src/misc.ml[336,9030+19]..src/misc.ml[336,9030+21])
                                            Texp_ident "ys/1242"
                                      ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/misc.ml[338,9053+0]..src/misc.ml[343,9122+19])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[338,9053+4]..src/misc.ml[338,9053+7])
          Tpat_var "dup/1243"
        expression (src/misc.ml[338,9053+8]..src/misc.ml[343,9122+19]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[338,9053+8]..src/misc.ml[338,9053+11])
                Tpat_var "cmp/1245"
              expression (src/misc.ml[338,9053+12]..src/misc.ml[343,9122+19]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[338,9053+12]..src/misc.ml[338,9053+14])
                      Tpat_var "xs/1246"
                    expression (src/misc.ml[339,9070+2]..src/misc.ml[343,9122+19])
                      Texp_match
                      expression (src/misc.ml[339,9070+8]..src/misc.ml[339,9070+10])
                        Texp_ident "xs/1246"
                      [
                        <case>
                          pattern (src/misc.ml[340,9086+4]..src/misc.ml[340,9086+6])
                            Tpat_value
                            pattern (src/misc.ml[340,9086+4]..src/misc.ml[340,9086+6])
                              Tpat_construct "[]"
                              []
                              None
                          expression (src/misc.ml[341,9096+6]..src/misc.ml[341,9096+10])
                            Texp_construct "None"
                            []
                        <case>
                          pattern (src/misc.ml[342,9107+4]..src/misc.ml[342,9107+11])
                            Tpat_value
                            pattern (src/misc.ml[342,9107+4]..src/misc.ml[342,9107+11])
                              Tpat_construct "::"
                              [
                                pattern (src/misc.ml[342,9107+4]..src/misc.ml[342,9107+5])
                                  Tpat_var "x/1247"
                                pattern (src/misc.ml[342,9107+9]..src/misc.ml[342,9107+11])
                                  Tpat_var "xs/1248"
                              ]
                              None
                          expression (src/misc.ml[343,9122+6]..src/misc.ml[343,9122+19])
                            Texp_apply
                            expression (src/misc.ml[343,9122+6]..src/misc.ml[343,9122+10])
                              Texp_ident "dup1/1237"
                            [
                              <arg>
                                Nolabel
                                expression (src/misc.ml[343,9122+11]..src/misc.ml[343,9122+14])
                                  Texp_ident "cmp/1245"
                              <arg>
                                Nolabel
                                expression (src/misc.ml[343,9122+15]..src/misc.ml[343,9122+16])
                                  Texp_ident "x/1247"
                              <arg>
                                Nolabel
                                expression (src/misc.ml[343,9122+17]..src/misc.ml[343,9122+19])
                                  Texp_ident "xs/1248"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/misc.ml[345,9143+0]..src/misc.ml[350,9224+10])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[345,9143+4]..src/misc.ml[345,9143+8])
          Tpat_var "once/1249"
        expression (src/misc.ml[345,9143+9]..src/misc.ml[350,9224+10]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[345,9143+9]..src/misc.ml[345,9143+10])
                Tpat_var "x/1251"
              expression (src/misc.ml[345,9143+11]..src/misc.ml[350,9224+10]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[345,9143+11]..src/misc.ml[345,9143+12])
                      Tpat_var "y/1252"
                    expression (src/misc.ml[346,9158+2]..src/misc.ml[350,9224+10])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/misc.ml[346,9158+6]..src/misc.ml[346,9158+7])
                            Tpat_var "s/1253"
                          expression (src/misc.ml[346,9158+10]..src/misc.ml[346,9158+15])
                            Texp_apply
                            expression (src/misc.ml[346,9158+10]..src/misc.ml[346,9158+13])
                              Texp_ident "Stdlib!.ref"
                            [
                              <arg>
                                Nolabel
                                expression (src/misc.ml[346,9158+14]..src/misc.ml[346,9158+15])
                                  Texp_ident "x/1251"
                            ]
                      ]
                      expression (src/misc.ml[347,9177+2]..src/misc.ml[350,9224+10])
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/misc.ml[347,9177+6]..src/misc.ml[347,9177+8])
                              Tpat_construct "()"
                              []
                              None
                            expression (src/misc.ml[348,9189+4]..src/misc.ml[350,9224+10])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/misc.ml[348,9189+8]..src/misc.ml[348,9189+14])
                                    Tpat_var "result/1254"
                                  expression (src/misc.ml[348,9189+17]..src/misc.ml[348,9189+19])
                                    Texp_apply
                                    expression (src/misc.ml[348,9189+17]..src/misc.ml[348,9189+18])
                                      Texp_ident "Stdlib!.!"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[348,9189+18]..src/misc.ml[348,9189+19])
                                          Texp_ident "s/1253"
                                    ]
                              ]
                              expression (src/misc.ml[349,9212+4]..src/misc.ml[350,9224+10])
                                Texp_sequence
                                expression (src/misc.ml[349,9212+4]..src/misc.ml[349,9212+10])
                                  Texp_apply
                                  expression (src/misc.ml[349,9212+6]..src/misc.ml[349,9212+8])
                                    Texp_ident "Stdlib!.:="
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/misc.ml[349,9212+4]..src/misc.ml[349,9212+5])
                                        Texp_ident "s/1253"
                                    <arg>
                                      Nolabel
                                      expression (src/misc.ml[349,9212+9]..src/misc.ml[349,9212+10])
                                        Texp_ident "y/1252"
                                  ]
                                expression (src/misc.ml[350,9224+4]..src/misc.ml[350,9224+10])
                                  Texp_ident "result/1254"
                        ]
                ]
          ]
    ]
  structure_item (src/misc.ml[352,9236+0]..src/misc.ml[364,9509+3])
    Tstr_module
    ListExtras/1268
      module_expr (src/misc.ml[352,9236+20]..src/misc.ml[364,9509+3])
        Tmod_structure
        [
          structure_item (src/misc.ml[353,9263+2]..src/misc.ml[361,9438+13])
            Tstr_value Rec
            [
              <def>
                pattern (src/misc.ml[353,9263+10]..src/misc.ml[353,9263+15])
                  Tpat_var "equal/1256"
                expression (src/misc.ml[353,9263+16]..src/misc.ml[361,9438+13]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/misc.ml[353,9263+16]..src/misc.ml[353,9263+19])
                        Tpat_var "=/1257"
                      expression (src/misc.ml[353,9263+20]..src/misc.ml[361,9438+13]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/misc.ml[353,9263+20]..src/misc.ml[353,9263+22])
                              Tpat_var "xs/1258"
                            expression (src/misc.ml[353,9263+23]..src/misc.ml[361,9438+13]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/misc.ml[353,9263+23]..src/misc.ml[353,9263+25])
                                    Tpat_var "ys/1259"
                                  expression (src/misc.ml[354,9291+4]..src/misc.ml[361,9438+13])
                                    Texp_match
                                    expression (src/misc.ml[354,9291+10]..src/misc.ml[354,9291+16])
                                      Texp_tuple
                                      [
                                        expression (src/misc.ml[354,9291+10]..src/misc.ml[354,9291+12])
                                          Texp_ident "xs/1258"
                                        expression (src/misc.ml[354,9291+14]..src/misc.ml[354,9291+16])
                                          Texp_ident "ys/1259"
                                      ]
                                    [
                                      <case>
                                        pattern (src/misc.ml[355,9313+6]..src/misc.ml[355,9313+12])
                                          Tpat_value
                                          pattern (src/misc.ml[355,9313+6]..src/misc.ml[355,9313+12])
                                            Tpat_tuple
                                            [
                                              pattern (src/misc.ml[355,9313+6]..src/misc.ml[355,9313+8])
                                                Tpat_construct "[]"
                                                []
                                                None
                                              pattern (src/misc.ml[355,9313+10]..src/misc.ml[355,9313+12])
                                                Tpat_construct "[]"
                                                []
                                                None
                                            ]
                                        expression (src/misc.ml[356,9329+8]..src/misc.ml[356,9329+12])
                                          Texp_construct "true"
                                          []
                                      <case>
                                        pattern (src/misc.ml[357,9342+6]..src/misc.ml[357,9342+22])
                                          Tpat_value
                                          pattern (src/misc.ml[357,9342+6]..src/misc.ml[357,9342+22])
                                            Tpat_tuple
                                            [
                                              pattern (src/misc.ml[357,9342+6]..src/misc.ml[357,9342+13])
                                                Tpat_construct "::"
                                                [
                                                  pattern (src/misc.ml[357,9342+6]..src/misc.ml[357,9342+7])
                                                    Tpat_var "x/1260"
                                                  pattern (src/misc.ml[357,9342+11]..src/misc.ml[357,9342+13])
                                                    Tpat_var "xs/1261"
                                                ]
                                                None
                                              pattern (src/misc.ml[357,9342+15]..src/misc.ml[357,9342+22])
                                                Tpat_construct "::"
                                                [
                                                  pattern (src/misc.ml[357,9342+15]..src/misc.ml[357,9342+16])
                                                    Tpat_var "y/1262"
                                                  pattern (src/misc.ml[357,9342+20]..src/misc.ml[357,9342+22])
                                                    Tpat_var "ys/1263"
                                                ]
                                                None
                                            ]
                                        expression (src/misc.ml[358,9368+8]..src/misc.ml[358,9368+32])
                                          Texp_apply
                                          expression (src/misc.ml[358,9368+14]..src/misc.ml[358,9368+16])
                                            Texp_ident "Stdlib!.&&"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/misc.ml[358,9368+8]..src/misc.ml[358,9368+13])
                                                Texp_apply
                                                expression (src/misc.ml[358,9368+10]..src/misc.ml[358,9368+11])
                                                  Texp_ident "=/1257"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/misc.ml[358,9368+8]..src/misc.ml[358,9368+9])
                                                      Texp_ident "x/1260"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/misc.ml[358,9368+12]..src/misc.ml[358,9368+13])
                                                      Texp_ident "y/1262"
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/misc.ml[358,9368+17]..src/misc.ml[358,9368+32])
                                                Texp_apply
                                                expression (src/misc.ml[358,9368+17]..src/misc.ml[358,9368+22])
                                                  Texp_ident "equal/1256"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/misc.ml[358,9368+23]..src/misc.ml[358,9368+26])
                                                      Texp_ident "=/1257"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/misc.ml[358,9368+27]..src/misc.ml[358,9368+29])
                                                      Texp_ident "xs/1261"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/misc.ml[358,9368+30]..src/misc.ml[358,9368+32])
                                                      Texp_ident "ys/1263"
                                                ]
                                          ]
                                      <case>
                                        pattern (src/misc.ml[359,9401+6]..src/misc.ml[360,9418+16])
                                          Tpat_or
                                          pattern (src/misc.ml[359,9401+6]..src/misc.ml[359,9401+16])
                                            Tpat_value
                                            pattern (src/misc.ml[359,9401+6]..src/misc.ml[359,9401+16])
                                              Tpat_tuple
                                              [
                                                pattern (src/misc.ml[359,9401+6]..src/misc.ml[359,9401+12])
                                                  Tpat_construct "::"
                                                  [
                                                    pattern (src/misc.ml[359,9401+6]..src/misc.ml[359,9401+7])
                                                      Tpat_any
                                                    pattern (src/misc.ml[359,9401+11]..src/misc.ml[359,9401+12])
                                                      Tpat_any
                                                  ]
                                                  None
                                                pattern (src/misc.ml[359,9401+14]..src/misc.ml[359,9401+16])
                                                  Tpat_construct "[]"
                                                  []
                                                  None
                                              ]
                                          pattern (src/misc.ml[360,9418+6]..src/misc.ml[360,9418+16])
                                            Tpat_value
                                            pattern (src/misc.ml[360,9418+6]..src/misc.ml[360,9418+16])
                                              Tpat_tuple
                                              [
                                                pattern (src/misc.ml[360,9418+6]..src/misc.ml[360,9418+8])
                                                  Tpat_construct "[]"
                                                  []
                                                  None
                                                pattern (src/misc.ml[360,9418+10]..src/misc.ml[360,9418+16])
                                                  Tpat_construct "::"
                                                  [
                                                    pattern (src/misc.ml[360,9418+10]..src/misc.ml[360,9418+11])
                                                      Tpat_any
                                                    pattern (src/misc.ml[360,9418+15]..src/misc.ml[360,9418+16])
                                                      Tpat_any
                                                  ]
                                                  None
                                              ]
                                        expression (src/misc.ml[361,9438+8]..src/misc.ml[361,9438+13])
                                          Texp_construct "false"
                                          []
                                    ]
                              ]
                        ]
                  ]
            ]
          structure_item (src/misc.ml[362,9452+2]..src/misc.ml[363,9473+35])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/misc.ml[362,9452+6]..src/misc.ml[362,9452+10])
                  Tpat_var "hash/1264"
                expression (src/misc.ml[362,9452+11]..src/misc.ml[363,9473+35]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/misc.ml[362,9452+11]..src/misc.ml[362,9452+15])
                        Tpat_var "hash/1266"
                      expression (src/misc.ml[362,9452+16]..src/misc.ml[363,9473+35]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/misc.ml[362,9452+16]..src/misc.ml[362,9452+18])
                              Tpat_var "xs/1267"
                            expression (src/misc.ml[363,9473+4]..src/misc.ml[363,9473+35])
                              Texp_apply
                              expression (src/misc.ml[363,9473+4]..src/misc.ml[363,9473+16])
                                Texp_ident "Stdlib!.Hashtbl.hash"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/misc.ml[363,9473+17]..src/misc.ml[363,9473+35])
                                    Texp_apply
                                    expression (src/misc.ml[363,9473+18]..src/misc.ml[363,9473+26])
                                      Texp_ident "Stdlib!.List.map"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[363,9473+27]..src/misc.ml[363,9473+31])
                                          Texp_ident "hash/1266"
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[363,9473+32]..src/misc.ml[363,9473+34])
                                          Texp_ident "xs/1267"
                                    ]
                              ]
                        ]
                  ]
            ]
        ]
  structure_item (src/misc.ml[366,9514+0]..src/misc.ml[370,9585+32])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[366,9514+4]..src/misc.ml[366,9514+7])
          Tpat_var "nth/1269"
        expression (src/misc.ml[366,9514+10]..src/misc.ml[370,9585+32])
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[367,9533+4]..src/misc.ml[367,9533+5])
                Tpat_constant Const_int 1
              expression (src/misc.ml[367,9533+9]..src/misc.ml[367,9533+16])
                Texp_constant Const_string("first",(src/misc.ml[367,9533+10]..src/misc.ml[367,9533+15]),None)
            <case>
              pattern (src/misc.ml[368,9550+4]..src/misc.ml[368,9550+5])
                Tpat_constant Const_int 2
              expression (src/misc.ml[368,9550+9]..src/misc.ml[368,9550+17])
                Texp_constant Const_string("second",(src/misc.ml[368,9550+10]..src/misc.ml[368,9550+16]),None)
            <case>
              pattern (src/misc.ml[369,9568+4]..src/misc.ml[369,9568+5])
                Tpat_constant Const_int 3
              expression (src/misc.ml[369,9568+9]..src/misc.ml[369,9568+16])
                Texp_constant Const_string("third",(src/misc.ml[369,9568+10]..src/misc.ml[369,9568+15]),None)
            <case>
              pattern (src/misc.ml[370,9585+4]..src/misc.ml[370,9585+5])
                Tpat_var "i/1271"
              expression (src/misc.ml[370,9585+9]..src/misc.ml[370,9585+32])
                Texp_apply
                expression (src/misc.ml[370,9585+9]..src/misc.ml[370,9585+23])
                  Texp_ident "Stdlib!.Printf.sprintf"
                [
                  <arg>
                    Nolabel
                    expression (src/misc.ml[370,9585+24]..src/misc.ml[370,9585+30])
                      Texp_construct "CamlinternalFormatBasics.Format"
                      [
                        expression (src/misc.ml[370,9585+24]..src/misc.ml[370,9585+30]) ghost
                          Texp_construct "CamlinternalFormatBasics.Int"
                          [
                            expression (src/misc.ml[370,9585+24]..src/misc.ml[370,9585+30]) ghost
                              Texp_construct "CamlinternalFormatBasics.Int_d"
                              []
                            expression (src/misc.ml[370,9585+24]..src/misc.ml[370,9585+30]) ghost
                              Texp_construct "CamlinternalFormatBasics.No_padding"
                              []
                            expression (src/misc.ml[370,9585+24]..src/misc.ml[370,9585+30]) ghost
                              Texp_construct "CamlinternalFormatBasics.No_precision"
                              []
                            expression (src/misc.ml[370,9585+24]..src/misc.ml[370,9585+30]) ghost
                              Texp_construct "CamlinternalFormatBasics.String_literal"
                              [
                                expression (src/misc.ml[370,9585+24]..src/misc.ml[370,9585+30]) ghost
                                  Texp_constant Const_string("th",(src/misc.ml[370,9585+24]..src/misc.ml[370,9585+30]) ghost,None)
                                expression (src/misc.ml[370,9585+24]..src/misc.ml[370,9585+30]) ghost
                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                  []
                              ]
                          ]
                        expression (src/misc.ml[370,9585+24]..src/misc.ml[370,9585+30]) ghost
                          Texp_constant Const_string("%dth",(src/misc.ml[370,9585+24]..src/misc.ml[370,9585+30]) ghost,None)
                      ]
                  <arg>
                    Nolabel
                    expression (src/misc.ml[370,9585+31]..src/misc.ml[370,9585+32])
                      Texp_ident "i/1271"
                ]
          ]
    ]
  structure_item (src/misc.ml[372,9619+0]..src/misc.ml[376,9687+30])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[372,9619+4]..src/misc.ml[372,9619+9])
          Tpat_var "count/1272"
        expression (src/misc.ml[372,9619+12]..src/misc.ml[376,9687+30])
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[373,9640+4]..src/misc.ml[373,9640+5])
                Tpat_constant Const_int 1
              expression (src/misc.ml[373,9640+9]..src/misc.ml[373,9640+14])
                Texp_constant Const_string("one",(src/misc.ml[373,9640+10]..src/misc.ml[373,9640+13]),None)
            <case>
              pattern (src/misc.ml[374,9655+4]..src/misc.ml[374,9655+5])
                Tpat_constant Const_int 2
              expression (src/misc.ml[374,9655+9]..src/misc.ml[374,9655+14])
                Texp_constant Const_string("two",(src/misc.ml[374,9655+10]..src/misc.ml[374,9655+13]),None)
            <case>
              pattern (src/misc.ml[375,9670+4]..src/misc.ml[375,9670+5])
                Tpat_constant Const_int 3
              expression (src/misc.ml[375,9670+9]..src/misc.ml[375,9670+16])
                Texp_constant Const_string("three",(src/misc.ml[375,9670+10]..src/misc.ml[375,9670+15]),None)
            <case>
              pattern (src/misc.ml[376,9687+4]..src/misc.ml[376,9687+5])
                Tpat_var "i/1274"
              expression (src/misc.ml[376,9687+9]..src/misc.ml[376,9687+30])
                Texp_apply
                expression (src/misc.ml[376,9687+9]..src/misc.ml[376,9687+23])
                  Texp_ident "Stdlib!.Printf.sprintf"
                [
                  <arg>
                    Nolabel
                    expression (src/misc.ml[376,9687+24]..src/misc.ml[376,9687+28])
                      Texp_construct "CamlinternalFormatBasics.Format"
                      [
                        expression (src/misc.ml[376,9687+24]..src/misc.ml[376,9687+28]) ghost
                          Texp_construct "CamlinternalFormatBasics.Int"
                          [
                            expression (src/misc.ml[376,9687+24]..src/misc.ml[376,9687+28]) ghost
                              Texp_construct "CamlinternalFormatBasics.Int_d"
                              []
                            expression (src/misc.ml[376,9687+24]..src/misc.ml[376,9687+28]) ghost
                              Texp_construct "CamlinternalFormatBasics.No_padding"
                              []
                            expression (src/misc.ml[376,9687+24]..src/misc.ml[376,9687+28]) ghost
                              Texp_construct "CamlinternalFormatBasics.No_precision"
                              []
                            expression (src/misc.ml[376,9687+24]..src/misc.ml[376,9687+28]) ghost
                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                              []
                          ]
                        expression (src/misc.ml[376,9687+24]..src/misc.ml[376,9687+28]) ghost
                          Texp_constant Const_string("%d",(src/misc.ml[376,9687+24]..src/misc.ml[376,9687+28]) ghost,None)
                      ]
                  <arg>
                    Nolabel
                    expression (src/misc.ml[376,9687+29]..src/misc.ml[376,9687+30])
                      Texp_ident "i/1274"
                ]
          ]
    ]
  structure_item (src/misc.ml[378,9719+0]..src/misc.ml[379,9743+48])
    Tstr_value Rec
    [
      <def>
        pattern (src/misc.ml[378,9719+8]..src/misc.ml[378,9719+17])
          Tpat_var "list_make/1275"
        expression (src/misc.ml[378,9719+18]..src/misc.ml[379,9743+48]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[378,9719+18]..src/misc.ml[378,9719+19])
                Tpat_var "n/1276"
              expression (src/misc.ml[378,9719+20]..src/misc.ml[379,9743+48]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[378,9719+20]..src/misc.ml[378,9719+21])
                      Tpat_var "x/1277"
                    expression (src/misc.ml[379,9743+2]..src/misc.ml[379,9743+48])
                      Texp_ifthenelse
                      expression (src/misc.ml[379,9743+5]..src/misc.ml[379,9743+10])
                        Texp_apply
                        expression (src/misc.ml[379,9743+7]..src/misc.ml[379,9743+8])
                          Texp_ident "Stdlib!.="
                        [
                          <arg>
                            Nolabel
                            expression (src/misc.ml[379,9743+5]..src/misc.ml[379,9743+6])
                              Texp_ident "n/1276"
                          <arg>
                            Nolabel
                            expression (src/misc.ml[379,9743+9]..src/misc.ml[379,9743+10])
                              Texp_constant Const_int 0
                        ]
                      expression (src/misc.ml[379,9743+16]..src/misc.ml[379,9743+18])
                        Texp_construct "[]"
                        []
                      Some
                        expression (src/misc.ml[379,9743+24]..src/misc.ml[379,9743+48])
                          Texp_construct "::"
                          [
                            expression (src/misc.ml[379,9743+24]..src/misc.ml[379,9743+25])
                              Texp_ident "x/1277"
                            expression (src/misc.ml[379,9743+29]..src/misc.ml[379,9743+48])
                              Texp_apply
                              expression (src/misc.ml[379,9743+29]..src/misc.ml[379,9743+38])
                                Texp_ident "list_make/1275"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/misc.ml[379,9743+39]..src/misc.ml[379,9743+46])
                                    Texp_apply
                                    expression (src/misc.ml[379,9743+42]..src/misc.ml[379,9743+43])
                                      Texp_ident "Stdlib!.-"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[379,9743+40]..src/misc.ml[379,9743+41])
                                          Texp_ident "n/1276"
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[379,9743+44]..src/misc.ml[379,9743+45])
                                          Texp_constant Const_int 1
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/misc.ml[379,9743+47]..src/misc.ml[379,9743+48])
                                    Texp_ident "x/1277"
                              ]
                          ]
                ]
          ]
    ]
  structure_item (src/misc.ml[384,9910+0]..src/misc.ml[391,10028+10])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[384,9910+4]..src/misc.ml[384,9910+10])
          Tpat_var "digits/1278"
        expression (src/misc.ml[384,9910+11]..src/misc.ml[391,10028+10]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[384,9910+11]..src/misc.ml[384,9910+12])
                Tpat_var "n/1280"
              expression (src/misc.ml[385,9925+2]..src/misc.ml[391,10028+10])
                Texp_let Rec
                [
                  <def>
                    pattern (src/misc.ml[385,9925+10]..src/misc.ml[385,9925+14])
                      Tpat_var "loop/1281"
                    expression (src/misc.ml[385,9925+15]..src/misc.ml[389,9992+30]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/misc.ml[385,9925+15]..src/misc.ml[385,9925+19])
                            Tpat_var "accu/1282"
                          expression (src/misc.ml[385,9925+20]..src/misc.ml[389,9992+30]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/misc.ml[385,9925+20]..src/misc.ml[385,9925+21])
                                  Tpat_var "n/1283"
                                expression (src/misc.ml[386,9949+4]..src/misc.ml[389,9992+30])
                                  Texp_ifthenelse
                                  expression (src/misc.ml[386,9949+7]..src/misc.ml[386,9949+13])
                                    Texp_apply
                                    expression (src/misc.ml[386,9949+9]..src/misc.ml[386,9949+10])
                                      Texp_ident "Stdlib!.<"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[386,9949+7]..src/misc.ml[386,9949+8])
                                          Texp_ident "n/1283"
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[386,9949+11]..src/misc.ml[386,9949+13])
                                          Texp_constant Const_int 10
                                    ]
                                  expression (src/misc.ml[387,9968+6]..src/misc.ml[387,9968+14])
                                    Texp_apply
                                    expression (src/misc.ml[387,9968+11]..src/misc.ml[387,9968+12])
                                      Texp_ident "Stdlib!.+"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[387,9968+6]..src/misc.ml[387,9968+10])
                                          Texp_ident "accu/1282"
                                      <arg>
                                        Nolabel
                                        expression (src/misc.ml[387,9968+13]..src/misc.ml[387,9968+14])
                                          Texp_constant Const_int 1
                                    ]
                                  Some
                                    expression (src/misc.ml[389,9992+6]..src/misc.ml[389,9992+30])
                                      Texp_apply
                                      expression (src/misc.ml[389,9992+6]..src/misc.ml[389,9992+10])
                                        Texp_ident "loop/1281"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/misc.ml[389,9992+11]..src/misc.ml[389,9992+21])
                                            Texp_apply
                                            expression (src/misc.ml[389,9992+17]..src/misc.ml[389,9992+18])
                                              Texp_ident "Stdlib!.+"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/misc.ml[389,9992+12]..src/misc.ml[389,9992+16])
                                                  Texp_ident "accu/1282"
                                              <arg>
                                                Nolabel
                                                expression (src/misc.ml[389,9992+19]..src/misc.ml[389,9992+20])
                                                  Texp_constant Const_int 1
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/misc.ml[389,9992+22]..src/misc.ml[389,9992+30])
                                            Texp_apply
                                            expression (src/misc.ml[389,9992+25]..src/misc.ml[389,9992+26])
                                              Texp_ident "Stdlib!./"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/misc.ml[389,9992+23]..src/misc.ml[389,9992+24])
                                                  Texp_ident "n/1283"
                                              <arg>
                                                Nolabel
                                                expression (src/misc.ml[389,9992+27]..src/misc.ml[389,9992+29])
                                                  Texp_constant Const_int 10
                                            ]
                                      ]
                            ]
                      ]
                ]
                expression (src/misc.ml[391,10028+2]..src/misc.ml[391,10028+10])
                  Texp_apply
                  expression (src/misc.ml[391,10028+2]..src/misc.ml[391,10028+6])
                    Texp_ident "loop/1281"
                  [
                    <arg>
                      Nolabel
                      expression (src/misc.ml[391,10028+7]..src/misc.ml[391,10028+8])
                        Texp_constant Const_int 0
                    <arg>
                      Nolabel
                      expression (src/misc.ml[391,10028+9]..src/misc.ml[391,10028+10])
                        Texp_ident "n/1280"
                  ]
          ]
    ]
  structure_item (src/misc.ml[396,10128+0]..src/misc.ml[397,10142+43])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[396,10128+4]..src/misc.ml[396,10128+7])
          Tpat_var "pad/1284"
        expression (src/misc.ml[396,10128+8]..src/misc.ml[397,10142+43]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[396,10128+8]..src/misc.ml[396,10128+9])
                Tpat_var "n/1286"
              expression (src/misc.ml[396,10128+10]..src/misc.ml[397,10142+43]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[396,10128+10]..src/misc.ml[396,10128+11])
                      Tpat_var "s/1287"
                    expression (src/misc.ml[397,10142+2]..src/misc.ml[397,10142+43])
                      Texp_apply
                      expression (src/misc.ml[397,10142+40]..src/misc.ml[397,10142+41])
                        Texp_ident "Stdlib!.^"
                      [
                        <arg>
                          Nolabel
                          expression (src/misc.ml[397,10142+2]..src/misc.ml[397,10142+39])
                            Texp_apply
                            expression (src/misc.ml[397,10142+2]..src/misc.ml[397,10142+13])
                              Texp_ident "Stdlib!.String.make"
                            [
                              <arg>
                                Nolabel
                                expression (src/misc.ml[397,10142+14]..src/misc.ml[397,10142+35])
                                  Texp_apply
                                  expression (src/misc.ml[397,10142+17]..src/misc.ml[397,10142+18])
                                    Texp_ident "Stdlib!.-"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/misc.ml[397,10142+15]..src/misc.ml[397,10142+16])
                                        Texp_ident "n/1286"
                                    <arg>
                                      Nolabel
                                      expression (src/misc.ml[397,10142+19]..src/misc.ml[397,10142+34])
                                        Texp_apply
                                        expression (src/misc.ml[397,10142+19]..src/misc.ml[397,10142+32])
                                          Texp_ident "Stdlib!.String.length"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/misc.ml[397,10142+33]..src/misc.ml[397,10142+34])
                                              Texp_ident "s/1287"
                                        ]
                                  ]
                              <arg>
                                Nolabel
                                expression (src/misc.ml[397,10142+36]..src/misc.ml[397,10142+39])
                                  Texp_constant Const_char 30
                            ]
                        <arg>
                          Nolabel
                          expression (src/misc.ml[397,10142+42]..src/misc.ml[397,10142+43])
                            Texp_ident "s/1287"
                      ]
                ]
          ]
    ]
  structure_item (src/misc.ml[399,10187+0]..src/misc.ml[400,10210+40])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/misc.ml[399,10187+4]..src/misc.ml[399,10187+16])
          Tpat_var "padded_index/1357"
        expression (src/misc.ml[399,10187+17]..src/misc.ml[400,10210+40]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/misc.ml[399,10187+17]..src/misc.ml[399,10187+18])
                Tpat_var "n/1359"
              expression (src/misc.ml[399,10187+19]..src/misc.ml[400,10210+40]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/misc.ml[399,10187+19]..src/misc.ml[399,10187+20])
                      Tpat_var "i/1360"
                    expression (src/misc.ml[400,10210+2]..src/misc.ml[400,10210+40])
                      Texp_apply
                      expression (src/misc.ml[400,10210+2]..src/misc.ml[400,10210+5])
                        Texp_ident "pad/1284"
                      [
                        <arg>
                          Nolabel
                          expression (src/misc.ml[400,10210+6]..src/misc.ml[400,10210+16])
                            Texp_apply
                            expression (src/misc.ml[400,10210+7]..src/misc.ml[400,10210+13])
                              Texp_ident "digits/1278"
                            [
                              <arg>
                                Nolabel
                                expression (src/misc.ml[400,10210+14]..src/misc.ml[400,10210+15])
                                  Texp_ident "n/1359"
                            ]
                        <arg>
                          Nolabel
                          expression (src/misc.ml[400,10210+17]..src/misc.ml[400,10210+40])
                            Texp_apply
                            expression (src/misc.ml[400,10210+18]..src/misc.ml[400,10210+32])
                              Texp_ident "Stdlib!.Printf.sprintf"
                            [
                              <arg>
                                Nolabel
                                expression (src/misc.ml[400,10210+33]..src/misc.ml[400,10210+37])
                                  Texp_construct "CamlinternalFormatBasics.Format"
                                  [
                                    expression (src/misc.ml[400,10210+33]..src/misc.ml[400,10210+37]) ghost
                                      Texp_construct "CamlinternalFormatBasics.Int"
                                      [
                                        expression (src/misc.ml[400,10210+33]..src/misc.ml[400,10210+37]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Int_d"
                                          []
                                        expression (src/misc.ml[400,10210+33]..src/misc.ml[400,10210+37]) ghost
                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                          []
                                        expression (src/misc.ml[400,10210+33]..src/misc.ml[400,10210+37]) ghost
                                          Texp_construct "CamlinternalFormatBasics.No_precision"
                                          []
                                        expression (src/misc.ml[400,10210+33]..src/misc.ml[400,10210+37]) ghost
                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                          []
                                      ]
                                    expression (src/misc.ml[400,10210+33]..src/misc.ml[400,10210+37]) ghost
                                      Texp_constant Const_string("%d",(src/misc.ml[400,10210+33]..src/misc.ml[400,10210+37]) ghost,None)
                                  ]
                              <arg>
                                Nolabel
                                expression (src/misc.ml[400,10210+38]..src/misc.ml[400,10210+39])
                                  Texp_ident "i/1360"
                            ]
                      ]
                ]
          ]
    ]
]

{<Dune__exe__Misc>
 "ListExtras"[module] ->
   {<Dune__exe__Misc.192>
    "equal"[value] -> <Dune__exe__Misc.181>;
    "hash"[value] -> <Dune__exe__Misc.189>;
    };
 "best"[value] -> <Dune__exe__Misc.134>;
 "count"[value] -> <Dune__exe__Misc.195>;
 "dup"[value] -> <Dune__exe__Misc.171>;
 "filter_map"[value] -> <Dune__exe__Misc.113>;
 "foldi"[value] -> <Dune__exe__Misc.62>;
 "foldij"[value] -> <Dune__exe__Misc.57>;
 "foldij_lazy"[value] -> <Dune__exe__Misc.66>;
 "inverse"[value] -> <Dune__exe__Misc.34>;
 "iter"[type] -> <Dune__exe__Misc.21>;
 "iteri"[value] -> <Dune__exe__Misc.54>;
 "iterij"[value] -> <Dune__exe__Misc.49>;
 "levels"[value] -> <Dune__exe__Misc.149>;
 "list_make"[value] -> <Dune__exe__Misc.197>;
 "mapd"[value] -> <Dune__exe__Misc.2>;
 "mapi"[value] -> <Dune__exe__Misc.77>;
 "mapij"[value] -> <Dune__exe__Misc.71>;
 "materialize"[value] -> <Dune__exe__Misc.43>;
 "new_encode_decode"[value] -> <Dune__exe__Misc.119>;
 "normalize"[value] -> <Dune__exe__Misc.105>;
 "nth"[value] -> <Dune__exe__Misc.193>;
 "once"[value] -> <Dune__exe__Misc.176>;
 "padded_index"[value] -> <Dune__exe__Misc.208>;
 "postincrement"[value] -> <Dune__exe__Misc.110>;
 "qfold"[value] -> <Dune__exe__Misc.80>;
 "qiter"[value] -> <Dune__exe__Misc.85>;
 "separated_iter_to_string"[value] -> <Dune__exe__Misc.22>;
 "separated_list_to_string"[value] -> <Dune__exe__Misc.29>;
 "single"[value] -> <Dune__exe__Misc.0>;
 "smap"[value] -> <Dune__exe__Misc.88>;
 "smapa"[value] -> <Dune__exe__Misc.95>;
 "sum"[value] -> <Dune__exe__Misc.12>;
 "support_assoc"[value] -> <Dune__exe__Misc.40>;
 "tabulate"[value] -> <Dune__exe__Misc.8>;
 "trim"[value] -> <Dune__exe__Misc.162>;
 "with_buffer"[value] -> <Dune__exe__Misc.17>;
 }

(seq
  (let
    (single/396 =
       (function param/399
         (catch
           (if (isint param/399) (exit 1)
             (let (*match*/3108 =a (field_imm 1 param/399))
               (if (isint *match*/3108)
                 (let (x/398 =a (field_imm 0 param/399)) x/398) (exit 1))))
          with (1)
           (raise
             (makeblock 0 (global Assert_failure/28!)
               [0: "src/misc.ml" 18 6])))))
    (setfield_ptr(root-init) 0 (global Dune__exe__Misc!) single/396))
  (letrec
    (mapd/400
       (function f/401 param/406
         (if (isint param/406) 0
           (let
             (xs/403 =a (field_imm 1 param/406)
              x/402 =a (field_imm 0 param/406)
              *match*/3112 = (apply f/401 x/402)
              y2/405 =a (field_imm 1 *match*/3112)
              y1/404 =a (field_imm 0 *match*/3112))
             (makeblock 0 y1/404
               (makeblock 0 y2/405 (apply mapd/400 f/401 xs/403)))))))
    (setfield_ptr(root-init) 1 (global Dune__exe__Misc!) mapd/400))
  (let
    (tabulate/407 =
       (function n/409[int] f/410
         (let
           (a/411 = (apply (field_imm 0 (global Stdlib__Array!)) n/409 f/410))
           (apply
             (function prim/3114 prim/3113 stub
               (array.get[gen] prim/3114 prim/3113))
             a/411))))
    (setfield_ptr(root-init) 2 (global Dune__exe__Misc!) tabulate/407))
  (let
    (sum/460 =
       (function n/462[int] f/463 : int
         (let (sum/464 = (makemutable 0 (int) 0))
           (seq
             (for x/465 0 to (- n/462 1)
               (setfield_imm 0 sum/464
                 (+ (field_int 0 sum/464) (apply f/463 x/465))))
             (field_int 0 sum/464)))))
    (setfield_ptr(root-init) 3 (global Dune__exe__Misc!) sum/460))
  (let
    (with_buffer/466 =
       (function n/468[int] f/469
         (let (b/470 = (apply (field_imm 0 (global Stdlib__Buffer!)) n/468))
           (seq (apply f/469 b/470)
             (apply (field_imm 1 (global Stdlib__Buffer!)) b/470)))))
    (setfield_ptr(root-init) 4 (global Dune__exe__Misc!) with_buffer/466))
  (let
    (separated_iter_to_string/554 =
       (function printer/556 separator/557 iter/558
         (apply (field_imm 4 (global Dune__exe__Misc!)) 32
           (function b/559 : int
             (let (first/560 = (makemutable 0 (int) 1))
               (apply iter/558
                 (function x/561 : int
                   (if (field_int 0 first/560)
                     (seq
                       (apply (field_imm 15 (global Stdlib__Buffer!)) b/559
                         (apply printer/556 x/561))
                       (setfield_imm 0 first/560 0))
                     (seq
                       (apply (field_imm 15 (global Stdlib__Buffer!)) b/559
                         separator/557)
                       (apply (field_imm 15 (global Stdlib__Buffer!)) b/559
                         (apply printer/556 x/561)))))))))))
    (setfield_ptr(root-init) 5 (global Dune__exe__Misc!)
      separated_iter_to_string/554))
  (let
    (separated_list_to_string/562 =
       (function printer/564 separator/565 xs/566
         (apply (field_imm 5 (global Dune__exe__Misc!)) printer/564
           separator/565
           (function f/567 : int
             (apply (field_imm 17 (global Stdlib__List!)) f/567 xs/566)))))
    (setfield_ptr(root-init) 6 (global Dune__exe__Misc!)
      separated_list_to_string/562))
  (let
    (inverse/634 =
       (function a/636
         (let
           (table/637 =
              (apply (field_imm 0 (global Stdlib__Hashtbl!)) 0
                (array.length[gen] a/636)))
           (seq
             (apply (field_imm 11 (global Stdlib__Array!))
               (function i/718[int] data/719 : int
                 (seq
                   (if
                     (not
                       (apply (field_imm 8 (global Stdlib__Hashtbl!))
                         table/637 data/719))
                     0
                     (raise
                       (makeblock 0 (global Assert_failure/28!)
                         [0: "src/misc.ml" 66 4])))
                   (apply (field_imm 4 (global Stdlib__Hashtbl!)) table/637
                     data/719 i/718)))
               a/636)
             (function data/720 : int
               (try
                 (apply (field_imm 5 (global Stdlib__Hashtbl!)) table/637
                   data/720)
                with exn/3115
                 (catch
                   (if (== exn/3115 (field_imm 7 (global Stdlib!)))
                     (raise
                       (makeblock 0 (global Assert_failure/28!)
                         [0: "src/misc.ml" 73 6]))
                     (exit 5))
                  with (5) (reraise exn/3115))))))))
    (setfield_ptr(root-init) 7 (global Dune__exe__Misc!) inverse/634))
  (let
    (support_assoc/721 =
       (function l/723 x/724
         (try (apply (field_imm 48 (global Stdlib__List!)) x/724 l/723)
          with exn/3116
           (catch
             (if (== exn/3116 (field_imm 7 (global Stdlib!))) x/724 (exit 6))
            with (6) (reraise exn/3116)))))
    (setfield_ptr(root-init) 8 (global Dune__exe__Misc!) support_assoc/721))
  (let
    (materialize/725 =
       (function table/727 x/728
         (letrec
           (loop/729
              (function x/730
                (let
                  (*match*/3117 =
                     (apply (field_imm 5 (global Stdlib__Hashtbl!)) table/727
                       x/730))
                  (if (isint *match*/3117) 0
                    (let (x/731 =a (field_imm 0 *match*/3117))
                      (makeblock 0 x/731 (apply loop/729 x/731)))))))
           (apply loop/729 x/728))))
    (setfield_ptr(root-init) 9 (global Dune__exe__Misc!) materialize/725))
  (let
    (iterij/732 =
       (function i/734[int] j/735[int] f/736 : int
         (for x/737 i/734 to (- j/735 1) (apply f/736 x/737))))
    (setfield_ptr(root-init) 11 (global Dune__exe__Misc!) iterij/732))
  (let
    (iteri/738 =
       (function n/740[int] f/741 : int
         (apply (field_imm 11 (global Dune__exe__Misc!)) 0 n/740 f/741)))
    (setfield_ptr(root-init) 10 (global Dune__exe__Misc!) iteri/738))
  (letrec
    (foldij/742
       (function i/743[int] j/744[int] f/745 accu/746
         (if (< i/743 j/744)
           (apply foldij/742 (+ i/743 1) j/744 f/745
             (apply f/745 i/743 accu/746))
           accu/746)))
    (setfield_ptr(root-init) 13 (global Dune__exe__Misc!) foldij/742))
  (let
    (foldi/747 =
       (function n/749[int] f/750 accu/751
         (apply (field_imm 13 (global Dune__exe__Misc!)) 0 n/749 f/750
           accu/751)))
    (setfield_ptr(root-init) 12 (global Dune__exe__Misc!) foldi/747))
  (letrec
    (foldij_lazy/752
       (function i/753[int] j/754[int] f/755 accu/756
         (if (< i/753 j/754)
           (apply f/755 i/753
             (function param/757[int]
               (apply foldij_lazy/752 (+ i/753 1) j/754 f/755 accu/756)))
           accu/756)))
    (setfield_ptr(root-init) 14 (global Dune__exe__Misc!) foldij_lazy/752))
  (let
    (mapij/758 =
       (function start/760[int] n/761[int] f/762
         (apply (field_imm 9 (global Stdlib__List!))
           (apply (field_imm 13 (global Dune__exe__Misc!)) start/760 n/761
             (function i/763[int] accu/764
               (makeblock 0 (apply f/762 i/763) accu/764))
             0))))
    (setfield_ptr(root-init) 15 (global Dune__exe__Misc!) mapij/758))
  (let
    (mapi/765 =
       (function n/767[int] f/768
         (apply (field_imm 15 (global Dune__exe__Misc!)) 0 n/767 f/768)))
    (setfield_ptr(root-init) 16 (global Dune__exe__Misc!) mapi/765))
  (letrec
    (qfold/769
       (function f/770 accu/771 q/772
         (let
           (*match*/3119 =
              (try
                (makeblock 0
                  (apply (field_imm 4 (global Stdlib__Queue!)) q/772))
               with exn/3118
                (catch
                  (if (== exn/3118 (field_imm 0 (global Stdlib__Queue!))) 0
                    (exit 7))
                 with (7) (reraise exn/3118))))
           (if (isint *match*/3119) accu/771
             (let (x/815 =a (field_imm 0 *match*/3119))
               (apply qfold/769 f/770 (apply f/770 accu/771 x/815) q/772))))))
    (setfield_ptr(root-init) 17 (global Dune__exe__Misc!) qfold/769))
  (let
    (qiter/816 =
       (function f/818 q/819 : int
         (try
           (while 1
             (apply f/818
               (apply (field_imm 4 (global Stdlib__Queue!)) q/819)))
          with exn/3120
           (catch
             (if (== exn/3120 (field_imm 0 (global Stdlib__Queue!))) 0
               (exit 8))
            with (8) (reraise exn/3120)))))
    (setfield_ptr(root-init) 18 (global Dune__exe__Misc!) qiter/816))
  (letrec
    (smap/820
       (function f/821 l/824
         (if (isint l/824) 0
           (let
             (xs/823 =a (field_imm 1 l/824)
              x/822 =a (field_imm 0 l/824)
              x'/825 = (apply f/821 x/822)
              xs'/826 = (apply smap/820 f/821 xs/823))
             (if (&& (== x/822 x'/825) (== xs/823 xs'/826)) l/824
               (makeblock 0 x'/825 xs'/826))))))
    (setfield_ptr(root-init) 19 (global Dune__exe__Misc!) smap/820))
  (letrec
    (smapa/827
       (function f/828 accu/829 l/832
         (if (isint l/832) (makeblock 0 accu/829 0)
           (let
             (xs/831 =a (field_imm 1 l/832)
              x/830 =a (field_imm 0 l/832)
              *match*/3128 = (apply f/828 accu/829 x/830)
              x'/834 =a (field_imm 1 *match*/3128)
              accu/833 =a (field_imm 0 *match*/3128)
              *match*/3124 = (apply smapa/827 f/828 accu/833 xs/831)
              xs'/836 =a (field_imm 1 *match*/3124)
              accu/835 =a (field_imm 0 *match*/3124))
             (makeblock 0 accu/835
               (if (&& (== x/830 x'/834) (== xs/831 xs'/836)) l/832
                 (makeblock 0 x'/834 xs'/836)))))))
    (setfield_ptr(root-init) 20 (global Dune__exe__Misc!) smapa/827))
  (let
    (normalize/837 =
       (function s/839
         (let
           (s/840 = (apply (field_imm 4 (global Stdlib__Bytes!)) s/839)
            n/938 =[int] (bytes.length s/840))
           (seq
             (for i/939 0 to (- n/938 1)
               (let (*match*/3129 = (bytes.get s/840 i/939))
                 (catch
                   (catch
                     (if (>= *match*/3129 42)
                       (if (!= *match*/3129 44) (exit 16) (exit 15))
                       (if (>= *match*/3129 40) (exit 15) (exit 16)))
                    with (16) 0)
                  with (15) (bytes.set s/840 i/939 '_'))))
             (apply (field_imm 43 (global Stdlib__Bytes!)) s/840)))))
    (setfield_ptr(root-init) 21 (global Dune__exe__Misc!) normalize/837))
  (let
    (postincrement/940 =
       (function r/942 : int
         (let (x/943 =[int] (field_int 0 r/942))
           (seq (setfield_imm 0 r/942 (+ x/943 1)) x/943))))
    (setfield_ptr(root-init) 22 (global Dune__exe__Misc!) postincrement/940))
  (let
    (filter_map/944 =
       (function f/946 l/947
         (apply (field_imm 9 (global Stdlib__List!))
           (apply (field_imm 25 (global Stdlib__List!))
             (function ys/948 x/949
               (let (*match*/3130 = (apply f/946 x/949))
                 (if (isint *match*/3130) ys/948
                   (let (y/950 =a (field_imm 0 *match*/3130))
                     (makeblock 0 y/950 ys/948)))))
             0 l/947))))
    (setfield_ptr(root-init) 23 (global Dune__exe__Misc!) filter_map/944))
  (let
    (new_encode_decode/951 =
       (function capacity/953[int]
         (let
           (H/1130 =
              (apply
                (let (let/3133 = (field_imm 25 (global Stdlib__Hashtbl!)))
                  (field_imm 25 (global Stdlib__Hashtbl!)))
                (let
                  (equal/955 =
                     (function prim/3132 prim/3131 stub
                       (caml_equal prim/3132 prim/3131))
                   hash/956 = (field_imm 27 (global Stdlib__Hashtbl!)))
                  (makeblock 0 equal/955 hash/956)))
            table/1131 = (apply (field_imm 0 H/1130) capacity/953)
            text/1132 =
              (apply (field_imm 0 (field_imm 8 (global MenhirLib!))) "")
            c/1156 = (makemutable 0 (int) 0)
            encode/1157 =
              (function s/1163 : int
                (seq (setfield_imm 0 c/1156 (+ (field_int 0 c/1156) 1))
                  (try (apply (field_imm 6 H/1130) table/1131 s/1163)
                   with exn/3134
                    (catch
                      (if (== exn/3134 (field_imm 7 (global Stdlib!)))
                        (let
                          (i/1164 =[int]
                             (apply (field_imm 14 H/1130) table/1131))
                          (seq
                            (apply (field_imm 4 H/1130) table/1131 s/1163
                              i/1164)
                            (apply
                              (field_imm 2 (field_imm 8 (global MenhirLib!)))
                              text/1132 i/1164 s/1163)
                            i/1164))
                        (exit 17))
                     with (17) (reraise exn/3134)))))
            decode/1158 =
              (function i/1165[int]
                (apply (field_imm 1 (field_imm 8 (global MenhirLib!)))
                  text/1132 i/1165))
            verbose/1159 =
              (function param/1202[int] : int
                (apply (field_imm 0 (global Stdlib__Printf!))
                  (field_imm 39 (global Stdlib!))
                  [0:
                   [4:
                    0 0 0
                    [11:
                     " calls to intern; "
                     [4: 0 0 0 [11: " unique strings.\n" [10: 0]]]]]
                   "%d calls to intern; %d unique strings.\n%!"]
                  (field_int 0 c/1156)
                  (apply (field_imm 14 H/1130) table/1131))))
           (makeblock 0 encode/1157 decode/1158 verbose/1159))))
    (setfield_ptr(root-init) 24 (global Dune__exe__Misc!)
      new_encode_decode/951))
  (letrec
    (best/1203
       (function preferable/1204 xs/1205
         (if (isint xs/1205) 0
           (let (x/1206 =a (field_imm 0 xs/1205))
             (catch
               (let (*match*/3136 =a (field_imm 1 xs/1205))
                 (if (isint *match*/3136) (makeblock 0 x/1206) (exit 18)))
              with (18)
               (let (x/1207 =a x/1206 xs/1208 =a (field_imm 1 xs/1205))
                 (if
                   (apply (field_imm 32 (global Stdlib__List!))
                     (apply preferable/1204 x/1207) xs/1208)
                   (makeblock 0 x/1207)
                   (let
                     (*match*/3135 =
                        (apply best/1203 preferable/1204 xs/1208))
                     (if (isint *match*/3135) 0
                       (let (y/1209 =a (field_imm 0 *match*/3135))
                         (if (apply preferable/1204 y/1209 x/1207)
                           (makeblock 0 y/1209) 0)))))))))))
    (setfield_ptr(root-init) 25 (global Dune__exe__Misc!) best/1203))
  (letrec
    (levels1/1210
       (function cmp/1211 x1/1212 xs/1213
         (if (isint xs/1213) (makeblock 0 (makeblock 0 x1/1212 0) 0)
           (let
             (xs/1215 =a (field_imm 1 xs/1213)
              x2/1214 =a (field_imm 0 xs/1213)
              *match*/3140 = (apply levels1/1210 cmp/1211 x2/1214 xs/1215)
              yss/1217 =a (field_imm 1 *match*/3140)
              ys1/1216 =a (field_imm 0 *match*/3140))
             (if (== (apply cmp/1211 x1/1212 x2/1214) 0)
               (makeblock 0 (makeblock 0 x1/1212 ys1/1216) yss/1217)
               (makeblock 0 (makeblock 0 x1/1212 0)
                 (makeblock 0 ys1/1216 yss/1217)))))))
    (setfield_ptr(root-init) 35 (global Dune__exe__Misc!) levels1/1210))
  (let
    (levels/1218 =
       (function cmp/1220 xs/1221
         (if (isint xs/1221) 0
           (let
             (xs/1223 =a (field_imm 1 xs/1221)
              x1/1222 =a (field_imm 0 xs/1221)
              *match*/3144 =
                (apply (field_imm 35 (global Dune__exe__Misc!)) cmp/1220
                  x1/1222 xs/1223)
              yss/1225 =a (field_imm 1 *match*/3144)
              ys1/1224 =a (field_imm 0 *match*/3144))
             (makeblock 0 ys1/1224 yss/1225)))))
    (setfield_ptr(root-init) 26 (global Dune__exe__Misc!) levels/1218))
  (let
    (insert/1226 =
       (function <=/1228 x/1229 ys/1230
         (if
           (apply (field_imm 33 (global Stdlib__List!))
             (function y/1231 : int (apply <=/1228 x/1229 y/1231)) ys/1230)
           ys/1230
           (makeblock 0 x/1229
             (apply (field_imm 43 (global Stdlib__List!))
               (function y/1232 : int (not (apply <=/1228 y/1232 x/1229)))
               ys/1230)))))
    (setfield_ptr(root-init) 36 (global Dune__exe__Misc!) insert/1226))
  (let
    (trim/1233 =
       (function <=/1235 xs/1236
         (apply (field_imm 26 (global Stdlib__List!))
           (apply (field_imm 36 (global Dune__exe__Misc!)) <=/1235) xs/1236
           0)))
    (setfield_ptr(root-init) 27 (global Dune__exe__Misc!) trim/1233))
  (letrec
    (dup1/1237
       (function cmp/1238 x/1239 ys/1240
         (if (isint ys/1240) 0
           (let
             (ys/1242 =a (field_imm 1 ys/1240)
              y/1241 =a (field_imm 0 ys/1240))
             (if (== (apply cmp/1238 x/1239 y/1241) 0) (makeblock 0 x/1239)
               (apply dup1/1237 cmp/1238 y/1241 ys/1242))))))
    (setfield_ptr(root-init) 37 (global Dune__exe__Misc!) dup1/1237))
  (let
    (dup/1243 =
       (function cmp/1245 xs/1246
         (if (isint xs/1246) 0
           (let
             (xs/1248 =a (field_imm 1 xs/1246)
              x/1247 =a (field_imm 0 xs/1246))
             (apply (field_imm 37 (global Dune__exe__Misc!)) cmp/1245 x/1247
               xs/1248)))))
    (setfield_ptr(root-init) 28 (global Dune__exe__Misc!) dup/1243))
  (let
    (once/1249 =
       (function x/1251 y/1252
         (let (s/1253 = (makemutable 0 x/1251))
           (function param/1255[int]
             (let (result/1254 = (field_mut 0 s/1253))
               (seq (setfield_ptr 0 s/1253 y/1252) result/1254))))))
    (setfield_ptr(root-init) 29 (global Dune__exe__Misc!) once/1249))
  (letrec
    (equal/1256
       (function =/1257 xs/1258 ys/1259 : int
         (catch
           (if (isint xs/1258)
             (if (isint ys/1259) 1
               (let
                 (*match*/3146 =a (field_imm 1 ys/1259)
                  *match*/3145 =a (field_imm 0 ys/1259))
                 (exit 25)))
             (if (isint ys/1259) (exit 25)
               (let
                 (ys/1263 =a (field_imm 1 ys/1259)
                  y/1262 =a (field_imm 0 ys/1259)
                  xs/1261 =a (field_imm 1 xs/1258)
                  x/1260 =a (field_imm 0 xs/1258))
                 (&& (apply =/1257 x/1260 y/1262)
                   (apply equal/1256 =/1257 xs/1261 ys/1263)))))
          with (25) 0)))
    (setfield_ptr(root-init) 40 (global Dune__exe__Misc!) equal/1256))
  (let
    (hash/1264 =
       (function hash/1266 xs/1267 : int
         (apply (field_imm 27 (global Stdlib__Hashtbl!))
           (apply (field_imm 19 (global Stdlib__List!)) hash/1266 xs/1267))))
    (setfield_ptr(root-init) 41 (global Dune__exe__Misc!) hash/1264))
  0
  (let
    (ListExtras/1268 =
       (makeblock 0 (field_imm 40 (global Dune__exe__Misc!))
         (field_imm 41 (global Dune__exe__Misc!))))
    (seq
      (setfield_ptr(root-init) 30 (global Dune__exe__Misc!) ListExtras/1268)
      (let
        (nth/1269 =
           (function i/1271[int]
             (catch
               (let (switcher/3147 =a (-1+ i/1271))
                 (if (isout 2 switcher/3147) (exit 26)
                   (switch* switcher/3147
                    case int 0: "first"
                    case int 1: "second"
                    case int 2: "third")))
              with (26)
               (apply (field_imm 3 (global Stdlib__Printf!))
                 [0: [4: 0 0 0 [11: "th" 0]] "%dth"] i/1271))))
        (setfield_ptr(root-init) 32 (global Dune__exe__Misc!) nth/1269))
      (let
        (count/1272 =
           (function i/1274[int]
             (catch
               (let (switcher/3148 =a (-1+ i/1274))
                 (if (isout 2 switcher/3148) (exit 27)
                   (switch* switcher/3148
                    case int 0: "one"
                    case int 1: "two"
                    case int 2: "three")))
              with (27)
               (apply (field_imm 3 (global Stdlib__Printf!))
                 [0: [4: 0 0 0 0] "%d"] i/1274))))
        (setfield_ptr(root-init) 31 (global Dune__exe__Misc!) count/1272))
      (letrec
        (list_make/1275
           (function n/1276[int] x/1277
             (if (== n/1276 0) 0
               (makeblock 0 x/1277
                 (apply list_make/1275 (- n/1276 1) x/1277)))))
        (setfield_ptr(root-init) 33 (global Dune__exe__Misc!) list_make/1275))
      (let
        (digits/1278 =
           (function n/1280[int] : int
             (letrec
               (loop/1281
                  (function accu/1282[int] n/1283[int] : int
                    (if (< n/1283 10) (+ accu/1282 1)
                      (apply loop/1281 (+ accu/1282 1) (/ n/1283 10)))))
               (apply loop/1281 0 n/1280))))
        (setfield_ptr(root-init) 38 (global Dune__exe__Misc!) digits/1278))
      (let
        (pad/1284 =
           (function n/1286[int] s/1287
             (apply (field_imm 27 (global Stdlib!))
               (apply (field_imm 0 (global Stdlib__String!))
                 (- n/1286 (string.length s/1287)) '0')
               s/1287)))
        (setfield_ptr(root-init) 39 (global Dune__exe__Misc!) pad/1284))
      (let
        (padded_index/1357 =
           (function n/1359[int] i/1360[int]
             (apply (field_imm 39 (global Dune__exe__Misc!))
               (apply (field_imm 38 (global Dune__exe__Misc!)) n/1359)
               (apply (field_imm 3 (global Stdlib__Printf!))
                 [0: [4: 0 0 0 0] "%d"] i/1360))))
        (setfield_ptr(root-init) 34 (global Dune__exe__Misc!)
          padded_index/1357))
      0)))
(seq
  (let
    (single/396 =
       (function param/399
         (catch
           (if (isint param/399) (exit 1)
             (if (isint (field_imm 1 param/399)) (field_imm 0 param/399)
               (exit 1)))
          with (1)
           (raise
             (makeblock 0 (global Assert_failure/28!)
               [0: "src/misc.ml" 18 6])))))
    (setfield_ptr(root-init) 0 (global Dune__exe__Misc!) single/396))
  (letrec
    (mapd/400
       (function f/401 param/406
         (if (isint param/406) 0
           (let (*match*/3112 = (apply f/401 (field_imm 0 param/406)))
             (makeblock 0 (field_imm 0 *match*/3112)
               (makeblock 0 (field_imm 1 *match*/3112)
                 (apply mapd/400 f/401 (field_imm 1 param/406))))))))
    (setfield_ptr(root-init) 1 (global Dune__exe__Misc!) mapd/400))
  (let
    (tabulate/407 =
       (function n/409[int] f/410
         (let
           (a/411 = (apply (field_imm 0 (global Stdlib__Array!)) n/409 f/410))
           (apply
             (function prim/3114 prim/3113 stub
               (array.get[gen] prim/3114 prim/3113))
             a/411))))
    (setfield_ptr(root-init) 2 (global Dune__exe__Misc!) tabulate/407))
  (let
    (sum/460 =
       (function n/462[int] f/463 : int
         (let (sum/464 =mut[int] 0)
           (seq
             (for x/465 0 to (- n/462 1)
               (assign sum/464 (+ *sum/464 (apply f/463 x/465))))
             *sum/464))))
    (setfield_ptr(root-init) 3 (global Dune__exe__Misc!) sum/460))
  (let
    (with_buffer/466 =
       (function n/468[int] f/469
         (let (b/470 = (apply (field_imm 0 (global Stdlib__Buffer!)) n/468))
           (seq (apply f/469 b/470)
             (apply (field_imm 1 (global Stdlib__Buffer!)) b/470)))))
    (setfield_ptr(root-init) 4 (global Dune__exe__Misc!) with_buffer/466))
  (let
    (separated_iter_to_string/554 =
       (function printer/556 separator/557 iter/558
         (apply (field_imm 4 (global Dune__exe__Misc!)) 32
           (function b/559 : int
             (let (first/560 = (makemutable 0 (int) 1))
               (apply iter/558
                 (function x/561 : int
                   (if (field_int 0 first/560)
                     (seq
                       (apply (field_imm 15 (global Stdlib__Buffer!)) b/559
                         (apply printer/556 x/561))
                       (setfield_imm 0 first/560 0))
                     (seq
                       (apply (field_imm 15 (global Stdlib__Buffer!)) b/559
                         separator/557)
                       (apply (field_imm 15 (global Stdlib__Buffer!)) b/559
                         (apply printer/556 x/561)))))))))))
    (setfield_ptr(root-init) 5 (global Dune__exe__Misc!)
      separated_iter_to_string/554))
  (let
    (separated_list_to_string/562 =
       (function printer/564 separator/565 xs/566
         (apply (field_imm 5 (global Dune__exe__Misc!)) printer/564
           separator/565
           (function f/567 : int
             (apply (field_imm 17 (global Stdlib__List!)) f/567 xs/566)))))
    (setfield_ptr(root-init) 6 (global Dune__exe__Misc!)
      separated_list_to_string/562))
  (let
    (inverse/634 =
       (function a/636
         (let
           (table/637 =
              (apply (field_imm 0 (global Stdlib__Hashtbl!)) 0
                (array.length[gen] a/636)))
           (seq
             (apply (field_imm 11 (global Stdlib__Array!))
               (function i/718[int] data/719 : int
                 (seq
                   (if
                     (not
                       (apply (field_imm 8 (global Stdlib__Hashtbl!))
                         table/637 data/719))
                     0
                     (raise
                       (makeblock 0 (global Assert_failure/28!)
                         [0: "src/misc.ml" 66 4])))
                   (apply (field_imm 4 (global Stdlib__Hashtbl!)) table/637
                     data/719 i/718)))
               a/636)
             (function data/720 : int
               (try
                 (apply (field_imm 5 (global Stdlib__Hashtbl!)) table/637
                   data/720)
                with exn/3115
                 (if (== exn/3115 (field_imm 7 (global Stdlib!)))
                   (raise
                     (makeblock 0 (global Assert_failure/28!)
                       [0: "src/misc.ml" 73 6]))
                   (reraise exn/3115))))))))
    (setfield_ptr(root-init) 7 (global Dune__exe__Misc!) inverse/634))
  (let
    (support_assoc/721 =
       (function l/723 x/724
         (try (apply (field_imm 48 (global Stdlib__List!)) x/724 l/723)
          with exn/3116
           (if (== exn/3116 (field_imm 7 (global Stdlib!))) x/724
             (reraise exn/3116)))))
    (setfield_ptr(root-init) 8 (global Dune__exe__Misc!) support_assoc/721))
  (let
    (materialize/725 =
       (function table/727 x/728
         (letrec
           (loop/729
              (function x/730
                (let
                  (*match*/3117 =
                     (apply (field_imm 5 (global Stdlib__Hashtbl!)) table/727
                       x/730))
                  (if (isint *match*/3117) 0
                    (let (x/731 =a (field_imm 0 *match*/3117))
                      (makeblock 0 x/731 (apply loop/729 x/731)))))))
           (apply loop/729 x/728))))
    (setfield_ptr(root-init) 9 (global Dune__exe__Misc!) materialize/725))
  (let
    (iterij/732 =
       (function i/734[int] j/735[int] f/736 : int
         (for x/737 i/734 to (- j/735 1) (apply f/736 x/737))))
    (setfield_ptr(root-init) 11 (global Dune__exe__Misc!) iterij/732))
  (let
    (iteri/738 =
       (function n/740[int] f/741 : int
         (apply (field_imm 11 (global Dune__exe__Misc!)) 0 n/740 f/741)))
    (setfield_ptr(root-init) 10 (global Dune__exe__Misc!) iteri/738))
  (letrec
    (foldij/742
       (function i/743[int] j/744[int] f/745 accu/746
         (if (< i/743 j/744)
           (apply foldij/742 (+ i/743 1) j/744 f/745
             (apply f/745 i/743 accu/746))
           accu/746)))
    (setfield_ptr(root-init) 13 (global Dune__exe__Misc!) foldij/742))
  (let
    (foldi/747 =
       (function n/749[int] f/750 accu/751
         (apply (field_imm 13 (global Dune__exe__Misc!)) 0 n/749 f/750
           accu/751)))
    (setfield_ptr(root-init) 12 (global Dune__exe__Misc!) foldi/747))
  (letrec
    (foldij_lazy/752
       (function i/753[int] j/754[int] f/755 accu/756
         (if (< i/753 j/754)
           (apply f/755 i/753
             (function param/757[int]
               (apply foldij_lazy/752 (+ i/753 1) j/754 f/755 accu/756)))
           accu/756)))
    (setfield_ptr(root-init) 14 (global Dune__exe__Misc!) foldij_lazy/752))
  (let
    (mapij/758 =
       (function start/760[int] n/761[int] f/762
         (apply (field_imm 9 (global Stdlib__List!))
           (apply (field_imm 13 (global Dune__exe__Misc!)) start/760 n/761
             (function i/763[int] accu/764
               (makeblock 0 (apply f/762 i/763) accu/764))
             0))))
    (setfield_ptr(root-init) 15 (global Dune__exe__Misc!) mapij/758))
  (let
    (mapi/765 =
       (function n/767[int] f/768
         (apply (field_imm 15 (global Dune__exe__Misc!)) 0 n/767 f/768)))
    (setfield_ptr(root-init) 16 (global Dune__exe__Misc!) mapi/765))
  (letrec
    (qfold/769
       (function f/770 accu/771 q/772
         (let
           (*match*/3119 =
              (try
                (makeblock 0
                  (apply (field_imm 4 (global Stdlib__Queue!)) q/772))
               with exn/3118
                (if (== exn/3118 (field_imm 0 (global Stdlib__Queue!))) 0
                  (reraise exn/3118))))
           (if (isint *match*/3119) accu/771
             (apply qfold/769 f/770
               (apply f/770 accu/771 (field_imm 0 *match*/3119)) q/772)))))
    (setfield_ptr(root-init) 17 (global Dune__exe__Misc!) qfold/769))
  (let
    (qiter/816 =
       (function f/818 q/819 : int
         (try
           (while 1
             (apply f/818
               (apply (field_imm 4 (global Stdlib__Queue!)) q/819)))
          with exn/3120
           (if (== exn/3120 (field_imm 0 (global Stdlib__Queue!))) 0
             (reraise exn/3120)))))
    (setfield_ptr(root-init) 18 (global Dune__exe__Misc!) qiter/816))
  (letrec
    (smap/820
       (function f/821 l/824
         (if (isint l/824) 0
           (let
             (xs/823 =a (field_imm 1 l/824)
              x/822 =a (field_imm 0 l/824)
              x'/825 = (apply f/821 x/822)
              xs'/826 = (apply smap/820 f/821 xs/823))
             (if (&& (== x/822 x'/825) (== xs/823 xs'/826)) l/824
               (makeblock 0 x'/825 xs'/826))))))
    (setfield_ptr(root-init) 19 (global Dune__exe__Misc!) smap/820))
  (letrec
    (smapa/827
       (function f/828 accu/829 l/832
         (if (isint l/832) (makeblock 0 accu/829 0)
           (let
             (xs/831 =a (field_imm 1 l/832)
              x/830 =a (field_imm 0 l/832)
              *match*/3128 = (apply f/828 accu/829 x/830)
              x'/834 =a (field_imm 1 *match*/3128)
              *match*/3124 =
                (apply smapa/827 f/828 (field_imm 0 *match*/3128) xs/831)
              xs'/836 =a (field_imm 1 *match*/3124))
             (makeblock 0 (field_imm 0 *match*/3124)
               (if (&& (== x/830 x'/834) (== xs/831 xs'/836)) l/832
                 (makeblock 0 x'/834 xs'/836)))))))
    (setfield_ptr(root-init) 20 (global Dune__exe__Misc!) smapa/827))
  (let
    (normalize/837 =
       (function s/839
         (let
           (s/840 = (apply (field_imm 4 (global Stdlib__Bytes!)) s/839)
            n/938 =[int] (bytes.length s/840))
           (seq
             (for i/939 0 to (- n/938 1)
               (let (*match*/3129 = (bytes.get s/840 i/939))
                 (catch
                   (catch
                     (if (>= *match*/3129 42)
                       (if (!= *match*/3129 44) (exit 16) (exit 15))
                       (if (>= *match*/3129 40) (exit 15) (exit 16)))
                    with (16) 0)
                  with (15) (bytes.set s/840 i/939 '_'))))
             (apply (field_imm 43 (global Stdlib__Bytes!)) s/840)))))
    (setfield_ptr(root-init) 21 (global Dune__exe__Misc!) normalize/837))
  (let
    (postincrement/940 =
       (function r/942 : int
         (let (x/943 =[int] (field_int 0 r/942))
           (seq (setfield_imm 0 r/942 (+ x/943 1)) x/943))))
    (setfield_ptr(root-init) 22 (global Dune__exe__Misc!) postincrement/940))
  (let
    (filter_map/944 =
       (function f/946 l/947
         (apply (field_imm 9 (global Stdlib__List!))
           (apply (field_imm 25 (global Stdlib__List!))
             (function ys/948 x/949
               (let (*match*/3130 = (apply f/946 x/949))
                 (if (isint *match*/3130) ys/948
                   (makeblock 0 (field_imm 0 *match*/3130) ys/948))))
             0 l/947))))
    (setfield_ptr(root-init) 23 (global Dune__exe__Misc!) filter_map/944))
  (let
    (new_encode_decode/951 =
       (function capacity/953[int]
         (let
           (H/1130 =
              (apply
                (let (let/3133 = (field_imm 25 (global Stdlib__Hashtbl!)))
                  (field_imm 25 (global Stdlib__Hashtbl!)))
                (let
                  (equal/955 =
                     (function prim/3132 prim/3131 stub
                       (caml_equal prim/3132 prim/3131))
                   hash/956 = (field_imm 27 (global Stdlib__Hashtbl!)))
                  (makeblock 0 equal/955 hash/956)))
            table/1131 = (apply (field_imm 0 H/1130) capacity/953)
            text/1132 =
              (apply (field_imm 0 (field_imm 8 (global MenhirLib!))) "")
            c/1156 = (makemutable 0 (int) 0)
            encode/1157 =
              (function s/1163 : int
                (seq (setfield_imm 0 c/1156 (+ (field_int 0 c/1156) 1))
                  (try (apply (field_imm 6 H/1130) table/1131 s/1163)
                   with exn/3134
                    (if (== exn/3134 (field_imm 7 (global Stdlib!)))
                      (let
                        (i/1164 =[int]
                           (apply (field_imm 14 H/1130) table/1131))
                        (seq
                          (apply (field_imm 4 H/1130) table/1131 s/1163
                            i/1164)
                          (apply
                            (field_imm 2 (field_imm 8 (global MenhirLib!)))
                            text/1132 i/1164 s/1163)
                          i/1164))
                      (reraise exn/3134)))))
            decode/1158 =
              (function i/1165[int]
                (apply (field_imm 1 (field_imm 8 (global MenhirLib!)))
                  text/1132 i/1165))
            verbose/1159 =
              (function param/1202[int] : int
                (apply (field_imm 0 (global Stdlib__Printf!))
                  (field_imm 39 (global Stdlib!))
                  [0:
                   [4:
                    0 0 0
                    [11:
                     " calls to intern; "
                     [4: 0 0 0 [11: " unique strings.\n" [10: 0]]]]]
                   "%d calls to intern; %d unique strings.\n%!"]
                  (field_int 0 c/1156)
                  (apply (field_imm 14 H/1130) table/1131))))
           (makeblock 0 encode/1157 decode/1158 verbose/1159))))
    (setfield_ptr(root-init) 24 (global Dune__exe__Misc!)
      new_encode_decode/951))
  (letrec
    (best/1203
       (function preferable/1204 xs/1205
         (if (isint xs/1205) 0
           (let (x/1206 =a (field_imm 0 xs/1205))
             (if (isint (field_imm 1 xs/1205)) (makeblock 0 x/1206)
               (let (xs/1208 =a (field_imm 1 xs/1205))
                 (if
                   (apply (field_imm 32 (global Stdlib__List!))
                     (apply preferable/1204 x/1206) xs/1208)
                   (makeblock 0 x/1206)
                   (let
                     (*match*/3135 =
                        (apply best/1203 preferable/1204 xs/1208))
                     (if (isint *match*/3135) 0
                       (let (y/1209 =a (field_imm 0 *match*/3135))
                         (if (apply preferable/1204 y/1209 x/1206)
                           (makeblock 0 y/1209) 0)))))))))))
    (setfield_ptr(root-init) 25 (global Dune__exe__Misc!) best/1203))
  (letrec
    (levels1/1210
       (function cmp/1211 x1/1212 xs/1213
         (if (isint xs/1213) (makeblock 0 (makeblock 0 x1/1212 0) 0)
           (let
             (x2/1214 =a (field_imm 0 xs/1213)
              *match*/3140 =
                (apply levels1/1210 cmp/1211 x2/1214 (field_imm 1 xs/1213))
              yss/1217 =a (field_imm 1 *match*/3140)
              ys1/1216 =a (field_imm 0 *match*/3140))
             (if (== (apply cmp/1211 x1/1212 x2/1214) 0)
               (makeblock 0 (makeblock 0 x1/1212 ys1/1216) yss/1217)
               (makeblock 0 (makeblock 0 x1/1212 0)
                 (makeblock 0 ys1/1216 yss/1217)))))))
    (setfield_ptr(root-init) 35 (global Dune__exe__Misc!) levels1/1210))
  (let
    (levels/1218 =
       (function cmp/1220 xs/1221
         (if (isint xs/1221) 0
           (let
             (*match*/3144 =
                (apply (field_imm 35 (global Dune__exe__Misc!)) cmp/1220
                  (field_imm 0 xs/1221) (field_imm 1 xs/1221)))
             (makeblock 0 (field_imm 0 *match*/3144)
               (field_imm 1 *match*/3144))))))
    (setfield_ptr(root-init) 26 (global Dune__exe__Misc!) levels/1218))
  (let
    (insert/1226 =
       (function <=/1228 x/1229 ys/1230
         (if
           (apply (field_imm 33 (global Stdlib__List!))
             (function y/1231 : int (apply <=/1228 x/1229 y/1231)) ys/1230)
           ys/1230
           (makeblock 0 x/1229
             (apply (field_imm 43 (global Stdlib__List!))
               (function y/1232 : int (not (apply <=/1228 y/1232 x/1229)))
               ys/1230)))))
    (setfield_ptr(root-init) 36 (global Dune__exe__Misc!) insert/1226))
  (let
    (trim/1233 =
       (function <=/1235 xs/1236
         (apply (field_imm 26 (global Stdlib__List!))
           (apply (field_imm 36 (global Dune__exe__Misc!)) <=/1235) xs/1236
           0)))
    (setfield_ptr(root-init) 27 (global Dune__exe__Misc!) trim/1233))
  (letrec
    (dup1/1237
       (function cmp/1238 x/1239 ys/1240
         (if (isint ys/1240) 0
           (let (y/1241 =a (field_imm 0 ys/1240))
             (if (== (apply cmp/1238 x/1239 y/1241) 0) (makeblock 0 x/1239)
               (apply dup1/1237 cmp/1238 y/1241 (field_imm 1 ys/1240)))))))
    (setfield_ptr(root-init) 37 (global Dune__exe__Misc!) dup1/1237))
  (let
    (dup/1243 =
       (function cmp/1245 xs/1246
         (if (isint xs/1246) 0
           (apply (field_imm 37 (global Dune__exe__Misc!)) cmp/1245
             (field_imm 0 xs/1246) (field_imm 1 xs/1246)))))
    (setfield_ptr(root-init) 28 (global Dune__exe__Misc!) dup/1243))
  (let
    (once/1249 =
       (function x/1251 y/1252
         (let (s/1253 = (makemutable 0 x/1251))
           (function param/1255[int]
             (let (result/1254 = (field_mut 0 s/1253))
               (seq (setfield_ptr 0 s/1253 y/1252) result/1254))))))
    (setfield_ptr(root-init) 29 (global Dune__exe__Misc!) once/1249))
  (letrec
    (equal/1256
       (function =/1257 xs/1258 ys/1259 : int
         (catch
           (if (isint xs/1258) (if (isint ys/1259) 1 (exit 25))
             (if (isint ys/1259) (exit 25)
               (&& (apply =/1257 (field_imm 0 xs/1258) (field_imm 0 ys/1259))
                 (apply equal/1256 =/1257 (field_imm 1 xs/1258)
                   (field_imm 1 ys/1259)))))
          with (25) 0)))
    (setfield_ptr(root-init) 40 (global Dune__exe__Misc!) equal/1256))
  (let
    (hash/1264 =
       (function hash/1266 xs/1267 : int
         (apply (field_imm 27 (global Stdlib__Hashtbl!))
           (apply (field_imm 19 (global Stdlib__List!)) hash/1266 xs/1267))))
    (setfield_ptr(root-init) 41 (global Dune__exe__Misc!) hash/1264))
  0
  (let
    (ListExtras/1268 =
       (makeblock 0 (field_imm 40 (global Dune__exe__Misc!))
         (field_imm 41 (global Dune__exe__Misc!))))
    (seq
      (setfield_ptr(root-init) 30 (global Dune__exe__Misc!) ListExtras/1268)
      (let
        (nth/1269 =
           (function i/1271[int]
             (let (switcher/3147 =a (-1+ i/1271))
               (if (isout 2 switcher/3147)
                 (apply (field_imm 3 (global Stdlib__Printf!))
                   [0: [4: 0 0 0 [11: "th" 0]] "%dth"] i/1271)
                 (switch* switcher/3147
                  case int 0: "first"
                  case int 1: "second"
                  case int 2: "third")))))
        (setfield_ptr(root-init) 32 (global Dune__exe__Misc!) nth/1269))
      (let
        (count/1272 =
           (function i/1274[int]
             (let (switcher/3148 =a (-1+ i/1274))
               (if (isout 2 switcher/3148)
                 (apply (field_imm 3 (global Stdlib__Printf!))
                   [0: [4: 0 0 0 0] "%d"] i/1274)
                 (switch* switcher/3148
                  case int 0: "one"
                  case int 1: "two"
                  case int 2: "three")))))
        (setfield_ptr(root-init) 31 (global Dune__exe__Misc!) count/1272))
      (letrec
        (list_make/1275
           (function n/1276[int] x/1277
             (if (== n/1276 0) 0
               (makeblock 0 x/1277
                 (apply list_make/1275 (- n/1276 1) x/1277)))))
        (setfield_ptr(root-init) 33 (global Dune__exe__Misc!) list_make/1275))
      (let
        (digits/1278 =
           (function n/1280[int] : int
             (letrec
               (loop/1281
                  (function accu/1282[int] n/1283[int] : int
                    (if (< n/1283 10) (+ accu/1282 1)
                      (apply loop/1281 (+ accu/1282 1) (/ n/1283 10)))))
               (apply loop/1281 0 n/1280))))
        (setfield_ptr(root-init) 38 (global Dune__exe__Misc!) digits/1278))
      (let
        (pad/1284 =
           (function n/1286[int] s/1287
             (apply (field_imm 27 (global Stdlib!))
               (apply (field_imm 0 (global Stdlib__String!))
                 (- n/1286 (string.length s/1287)) '0')
               s/1287)))
        (setfield_ptr(root-init) 39 (global Dune__exe__Misc!) pad/1284))
      (let
        (padded_index/1357 =
           (function n/1359[int] i/1360[int]
             (apply (field_imm 39 (global Dune__exe__Misc!))
               (apply (field_imm 38 (global Dune__exe__Misc!)) n/1359)
               (apply (field_imm 3 (global Stdlib__Printf!))
                 [0: [4: 0 0 0 0] "%d"] i/1360))))
        (setfield_ptr(root-init) 34 (global Dune__exe__Misc!)
          padded_index/1357))
      0)))
