[
  structure_item (src/LR1Canonical.ml[17,1115+0]..[18,1131+10])
    Pstr_type Rec
    [
      type_declaration "lr0state" (src/LR1Canonical.ml[17,1115+5]..[17,1115+13]) (src/LR1Canonical.ml[17,1115+0]..[18,1131+10])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/LR1Canonical.ml[18,1131+2]..[18,1131+10])
              Ptyp_constr "Lr0.node" (src/LR1Canonical.ml[18,1131+2]..[18,1131+10])
              []
    ]
  structure_item (src/LR1Canonical.ml[20,1143+0]..[21,1159+14])
    Pstr_type Rec
    [
      type_declaration "lr1state" (src/LR1Canonical.ml[20,1143+5]..[20,1143+13]) (src/LR1Canonical.ml[20,1143+0]..[21,1159+14])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/LR1Canonical.ml[21,1159+2]..[21,1159+14])
              Ptyp_constr "Lr0.lr1state" (src/LR1Canonical.ml[21,1159+2]..[21,1159+14])
              []
    ]
  structure_item (src/LR1Canonical.ml[23,1175+0]..[23,1175+12])
    Pstr_open Fresh
    module_expr (src/LR1Canonical.ml[23,1175+5]..[23,1175+12])
      Pmod_ident "Grammar" (src/LR1Canonical.ml[23,1175+5]..[23,1175+12])
  structure_item (src/LR1Canonical.ml[25,1189+0]..[103,3213+3])
    Pstr_module
    "Run" (src/LR1Canonical.ml[25,1189+7]..[25,1189+10])
      module_expr (src/LR1Canonical.ml[25,1189+11]..[103,3213+3])
        Pmod_functor ()
        module_expr (src/LR1Canonical.ml[25,1189+16]..[103,3213+3])
          Pmod_structure
          [
            structure_item (src/LR1Canonical.ml[31,1369+0]..[47,1744+3])
              Pstr_module
              "G" (src/LR1Canonical.ml[31,1369+7]..[31,1369+8])
                module_expr (src/LR1Canonical.ml[31,1369+11]..[47,1744+3])
                  Pmod_structure
                  [
                    structure_item (src/LR1Canonical.ml[33,1388+2]..[33,1388+19])
                      Pstr_type Rec
                      [
                        type_declaration "t" (src/LR1Canonical.ml[33,1388+7]..[33,1388+8]) (src/LR1Canonical.ml[33,1388+2]..[33,1388+19])
                          ptype_params =
                            []
                          ptype_cstrs =
                            []
                          ptype_kind =
                            Ptype_abstract
                          ptype_private = Public
                          ptype_manifest =
                            Some
                              core_type (src/LR1Canonical.ml[33,1388+11]..[33,1388+19])
                                Ptyp_constr "lr1state" (src/LR1Canonical.ml[33,1388+11]..[33,1388+19])
                                []
                      ]
                    structure_item (src/LR1Canonical.ml[35,1409+2]..[38,1506+15])
                      Pstr_value Nonrec
                      [
                        <def>
                          pattern (src/LR1Canonical.ml[35,1409+6]..[35,1409+18])
                            Ppat_var "foreach_root" (src/LR1Canonical.ml[35,1409+6]..[35,1409+18])
                          expression (src/LR1Canonical.ml[35,1409+19]..[38,1506+15]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/LR1Canonical.ml[35,1409+19]..[35,1409+20])
                              Ppat_var "f" (src/LR1Canonical.ml[35,1409+19]..[35,1409+20])
                            expression (src/LR1Canonical.ml[36,1432+4]..[38,1506+15])
                              Pexp_apply
                              expression (src/LR1Canonical.ml[36,1432+4]..[36,1432+22])
                                Pexp_ident "ProductionMap.iter" (src/LR1Canonical.ml[36,1432+4]..[36,1432+22])
                              [
                                <arg>
                                Nolabel
                                  expression (src/LR1Canonical.ml[36,1432+23]..[38,1506+5])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/LR1Canonical.ml[36,1432+28]..[36,1432+33])
                                      Ppat_var "_prod" (src/LR1Canonical.ml[36,1432+28]..[36,1432+33])
                                    expression (src/LR1Canonical.ml[36,1432+34]..[37,1484+21]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (src/LR1Canonical.ml[36,1432+34]..[36,1432+48])
                                        Ppat_constraint
                                        pattern (src/LR1Canonical.ml[36,1432+35]..[36,1432+36])
                                          Ppat_var "c" (src/LR1Canonical.ml[36,1432+35]..[36,1432+36])
                                        core_type (src/LR1Canonical.ml[36,1432+39]..[36,1432+47])
                                          Ptyp_constr "lr0state" (src/LR1Canonical.ml[36,1432+39]..[36,1432+47])
                                          []
                                      expression (src/LR1Canonical.ml[37,1484+6]..[37,1484+21])
                                        Pexp_apply
                                        expression (src/LR1Canonical.ml[37,1484+6]..[37,1484+7])
                                          Pexp_ident "f" (src/LR1Canonical.ml[37,1484+6]..[37,1484+7])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/LR1Canonical.ml[37,1484+8]..[37,1484+21])
                                              Pexp_apply
                                              expression (src/LR1Canonical.ml[37,1484+9]..[37,1484+18])
                                                Pexp_ident "Lr0.start" (src/LR1Canonical.ml[37,1484+9]..[37,1484+18])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/LR1Canonical.ml[37,1484+19]..[37,1484+20])
                                                    Pexp_ident "c" (src/LR1Canonical.ml[37,1484+19]..[37,1484+20])
                                              ]
                                        ]
                                <arg>
                                Nolabel
                                  expression (src/LR1Canonical.ml[38,1506+6]..[38,1506+15])
                                    Pexp_ident "Lr0.entry" (src/LR1Canonical.ml[38,1506+6]..[38,1506+15])
                              ]
                      ]
                    structure_item (src/LR1Canonical.ml[40,1523+2]..[45,1729+13])
                      Pstr_value Nonrec
                      [
                        <def>
                          pattern (src/LR1Canonical.ml[40,1523+6]..[40,1523+23])
                            Ppat_var "foreach_successor" (src/LR1Canonical.ml[40,1523+6]..[40,1523+23])
                          expression (src/LR1Canonical.ml[40,1523+24]..[45,1729+13]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/LR1Canonical.ml[40,1523+24]..[40,1523+42])
                              Ppat_constraint
                              pattern (src/LR1Canonical.ml[40,1523+25]..[40,1523+30])
                                Ppat_var "state" (src/LR1Canonical.ml[40,1523+25]..[40,1523+30])
                              core_type (src/LR1Canonical.ml[40,1523+33]..[40,1523+41])
                                Ptyp_constr "lr1state" (src/LR1Canonical.ml[40,1523+33]..[40,1523+41])
                                []
                            expression (src/LR1Canonical.ml[40,1523+43]..[45,1729+13]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/LR1Canonical.ml[40,1523+43]..[40,1523+44])
                                Ppat_var "f" (src/LR1Canonical.ml[40,1523+43]..[40,1523+44])
                              expression (src/LR1Canonical.ml[41,1570+4]..[45,1729+13])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/LR1Canonical.ml[41,1570+8]..[41,1570+15])
                                      Ppat_var "symbols" (src/LR1Canonical.ml[41,1570+8]..[41,1570+15])
                                    expression (src/LR1Canonical.ml[41,1570+18]..[41,1570+55])
                                      Pexp_apply
                                      expression (src/LR1Canonical.ml[41,1570+18]..[41,1570+38])
                                        Pexp_ident "Lr0.outgoing_symbols" (src/LR1Canonical.ml[41,1570+18]..[41,1570+38])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/LR1Canonical.ml[41,1570+39]..[41,1570+55])
                                            Pexp_apply
                                            expression (src/LR1Canonical.ml[41,1570+40]..[41,1570+48])
                                              Pexp_ident "Lr0.core" (src/LR1Canonical.ml[41,1570+40]..[41,1570+48])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/LR1Canonical.ml[41,1570+49]..[41,1570+54])
                                                  Pexp_ident "state" (src/LR1Canonical.ml[41,1570+49]..[41,1570+54])
                                            ]
                                      ]
                                ]
                                expression (src/LR1Canonical.ml[42,1629+4]..[45,1729+13])
                                  Pexp_apply
                                  expression (src/LR1Canonical.ml[42,1629+4]..[42,1629+13])
                                    Pexp_ident "List.iter" (src/LR1Canonical.ml[42,1629+4]..[42,1629+13])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/LR1Canonical.ml[42,1629+14]..[45,1729+5])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/LR1Canonical.ml[42,1629+19]..[42,1629+25])
                                          Ppat_var "symbol" (src/LR1Canonical.ml[42,1629+19]..[42,1629+25])
                                        expression (src/LR1Canonical.ml[43,1658+6]..[44,1711+17])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/LR1Canonical.ml[43,1658+10]..[43,1658+19])
                                                Ppat_var "successor" (src/LR1Canonical.ml[43,1658+10]..[43,1658+19])
                                              expression (src/LR1Canonical.ml[43,1658+22]..[43,1658+49])
                                                Pexp_apply
                                                expression (src/LR1Canonical.ml[43,1658+22]..[43,1658+36])
                                                  Pexp_ident "Lr0.transition" (src/LR1Canonical.ml[43,1658+22]..[43,1658+36])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/LR1Canonical.ml[43,1658+37]..[43,1658+43])
                                                      Pexp_ident "symbol" (src/LR1Canonical.ml[43,1658+37]..[43,1658+43])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/LR1Canonical.ml[43,1658+44]..[43,1658+49])
                                                      Pexp_ident "state" (src/LR1Canonical.ml[43,1658+44]..[43,1658+49])
                                                ]
                                          ]
                                          expression (src/LR1Canonical.ml[44,1711+6]..[44,1711+17])
                                            Pexp_apply
                                            expression (src/LR1Canonical.ml[44,1711+6]..[44,1711+7])
                                              Pexp_ident "f" (src/LR1Canonical.ml[44,1711+6]..[44,1711+7])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/LR1Canonical.ml[44,1711+8]..[44,1711+17])
                                                  Pexp_ident "successor" (src/LR1Canonical.ml[44,1711+8]..[44,1711+17])
                                            ]
                                    <arg>
                                    Nolabel
                                      expression (src/LR1Canonical.ml[45,1729+6]..[45,1729+13])
                                        Pexp_ident "symbols" (src/LR1Canonical.ml[45,1729+6]..[45,1729+13])
                                  ]
                      ]
                  ]
            structure_item (src/LR1Canonical.ml[54,1930+0]..[55,1942+5])
              Pstr_type Rec
              [
                type_declaration "node" (src/LR1Canonical.ml[54,1930+5]..[54,1930+9]) (src/LR1Canonical.ml[54,1930+0]..[55,1942+5])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (src/LR1Canonical.ml[55,1942+2]..[55,1942+5])
                        Ptyp_constr "int" (src/LR1Canonical.ml[55,1942+2]..[55,1942+5])
                        []
              ]
            structure_item (src/LR1Canonical.ml[57,1949+0]..[57,1949+71])
              Pstr_include              module_expr (src/LR1Canonical.ml[57,1949+8]..[57,1949+71])
                Pmod_apply
                module_expr (src/LR1Canonical.ml[57,1949+8]..[57,1949+68])
                  Pmod_apply
                  module_expr (src/LR1Canonical.ml[57,1949+8]..[57,1949+41])
                    Pmod_ident "Fix.GraphNumbering.ForOrderedType" (src/LR1Canonical.ml[57,1949+8]..[57,1949+41])
                  module_expr (src/LR1Canonical.ml[57,1949+42]..[57,1949+67])
                    Pmod_ident "Lr0.Lr1StateAsOrderedType" (src/LR1Canonical.ml[57,1949+42]..[57,1949+67])
                module_expr (src/LR1Canonical.ml[57,1949+69]..[57,1949+70])
                  Pmod_ident "G" (src/LR1Canonical.ml[57,1949+69]..[57,1949+70])
            structure_item (src/LR1Canonical.ml[66,2282+0]..[67,2313+8])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Canonical.ml[66,2282+4]..[66,2282+9])
                    Ppat_var "state" (src/LR1Canonical.ml[66,2282+4]..[66,2282+9])
                  core_type (src/LR1Canonical.ml[66,2282+12]..[66,2282+28])
                    Ptyp_arrow
                    Nolabel
                    core_type (src/LR1Canonical.ml[66,2282+12]..[66,2282+16])
                      Ptyp_constr "node" (src/LR1Canonical.ml[66,2282+12]..[66,2282+16])
                      []
                    core_type (src/LR1Canonical.ml[66,2282+20]..[66,2282+28])
                      Ptyp_constr "lr1state" (src/LR1Canonical.ml[66,2282+20]..[66,2282+28])
                      []
                  expression (src/LR1Canonical.ml[67,2313+2]..[67,2313+8])
                    Pexp_ident "decode" (src/LR1Canonical.ml[67,2313+2]..[67,2313+8])
              ]
            structure_item (src/LR1Canonical.ml[73,2459+0]..[76,2562+13])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Canonical.ml[73,2459+4]..[73,2459+9])
                    Ppat_var "entry" (src/LR1Canonical.ml[73,2459+4]..[73,2459+9])
                  core_type (src/LR1Canonical.ml[73,2459+12]..[73,2459+32])
                    Ptyp_constr "ProductionMap.t" (src/LR1Canonical.ml[73,2459+17]..[73,2459+32])
                    [
                      core_type (src/LR1Canonical.ml[73,2459+12]..[73,2459+16])
                        Ptyp_constr "node" (src/LR1Canonical.ml[73,2459+12]..[73,2459+16])
                        []
                    ]
                  expression (src/LR1Canonical.ml[74,2494+2]..[76,2562+13])
                    Pexp_apply
                    expression (src/LR1Canonical.ml[74,2494+2]..[74,2494+19])
                      Pexp_ident "ProductionMap.map" (src/LR1Canonical.ml[74,2494+2]..[74,2494+19])
                    [
                      <arg>
                      Nolabel
                        expression (src/LR1Canonical.ml[74,2494+20]..[76,2562+3])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/LR1Canonical.ml[74,2494+25]..[74,2494+39])
                            Ppat_constraint
                            pattern (src/LR1Canonical.ml[74,2494+26]..[74,2494+27])
                              Ppat_var "c" (src/LR1Canonical.ml[74,2494+26]..[74,2494+27])
                            core_type (src/LR1Canonical.ml[74,2494+30]..[74,2494+38])
                              Ptyp_constr "lr0state" (src/LR1Canonical.ml[74,2494+30]..[74,2494+38])
                              []
                          expression (src/LR1Canonical.ml[75,2537+4]..[75,2537+24])
                            Pexp_apply
                            expression (src/LR1Canonical.ml[75,2537+4]..[75,2537+10])
                              Pexp_ident "encode" (src/LR1Canonical.ml[75,2537+4]..[75,2537+10])
                            [
                              <arg>
                              Nolabel
                                expression (src/LR1Canonical.ml[75,2537+11]..[75,2537+24])
                                  Pexp_apply
                                  expression (src/LR1Canonical.ml[75,2537+12]..[75,2537+21])
                                    Pexp_ident "Lr0.start" (src/LR1Canonical.ml[75,2537+12]..[75,2537+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/LR1Canonical.ml[75,2537+22]..[75,2537+23])
                                        Pexp_ident "c" (src/LR1Canonical.ml[75,2537+22]..[75,2537+23])
                                  ]
                            ]
                      <arg>
                      Nolabel
                        expression (src/LR1Canonical.ml[76,2562+4]..[76,2562+13])
                          Pexp_ident "Lr0.entry" (src/LR1Canonical.ml[76,2562+4]..[76,2562+13])
                    ]
              ]
            structure_item (src/LR1Canonical.ml[82,2713+0]..[83,2755+42])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Canonical.ml[82,2713+4]..[82,2713+14])
                    Ppat_var "transition" (src/LR1Canonical.ml[82,2713+4]..[82,2713+14])
                  expression (src/LR1Canonical.ml[82,2713+15]..[83,2755+42]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LR1Canonical.ml[82,2713+15]..[82,2713+21])
                      Ppat_var "symbol" (src/LR1Canonical.ml[82,2713+15]..[82,2713+21])
                    expression (src/LR1Canonical.ml[82,2713+22]..[83,2755+42]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/LR1Canonical.ml[82,2713+22]..[82,2713+32])
                        Ppat_constraint
                        pattern (src/LR1Canonical.ml[82,2713+23]..[82,2713+24])
                          Ppat_var "i" (src/LR1Canonical.ml[82,2713+23]..[82,2713+24])
                        core_type (src/LR1Canonical.ml[82,2713+27]..[82,2713+31])
                          Ptyp_constr "node" (src/LR1Canonical.ml[82,2713+27]..[82,2713+31])
                          []
                      expression (src/LR1Canonical.ml[82,2713+33]..[83,2755+42])
                        Pexp_constraint
                        expression (src/LR1Canonical.ml[83,2755+2]..[83,2755+42])
                          Pexp_apply
                          expression (src/LR1Canonical.ml[83,2755+2]..[83,2755+8])
                            Pexp_ident "encode" (src/LR1Canonical.ml[83,2755+2]..[83,2755+8])
                          [
                            <arg>
                            Nolabel
                              expression (src/LR1Canonical.ml[83,2755+9]..[83,2755+42])
                                Pexp_apply
                                expression (src/LR1Canonical.ml[83,2755+10]..[83,2755+24])
                                  Pexp_ident "Lr0.transition" (src/LR1Canonical.ml[83,2755+10]..[83,2755+24])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/LR1Canonical.ml[83,2755+25]..[83,2755+31])
                                      Pexp_ident "symbol" (src/LR1Canonical.ml[83,2755+25]..[83,2755+31])
                                  <arg>
                                  Nolabel
                                    expression (src/LR1Canonical.ml[83,2755+32]..[83,2755+41])
                                      Pexp_apply
                                      expression (src/LR1Canonical.ml[83,2755+33]..[83,2755+38])
                                        Pexp_ident "state" (src/LR1Canonical.ml[83,2755+33]..[83,2755+38])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/LR1Canonical.ml[83,2755+39]..[83,2755+40])
                                            Pexp_ident "i" (src/LR1Canonical.ml[83,2755+39]..[83,2755+40])
                                      ]
                                ]
                          ]
                        core_type (src/LR1Canonical.ml[82,2713+35]..[82,2713+39])
                          Ptyp_constr "node" (src/LR1Canonical.ml[82,2713+35]..[82,2713+39])
                          []
              ]
            structure_item (src/LR1Canonical.ml[85,2799+0]..[86,2833+43])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Canonical.ml[85,2799+4]..[85,2799+20])
                    Ppat_var "outgoing_symbols" (src/LR1Canonical.ml[85,2799+4]..[85,2799+20])
                  expression (src/LR1Canonical.ml[85,2799+21]..[86,2833+43]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LR1Canonical.ml[85,2799+21]..[85,2799+31])
                      Ppat_constraint
                      pattern (src/LR1Canonical.ml[85,2799+22]..[85,2799+23])
                        Ppat_var "i" (src/LR1Canonical.ml[85,2799+22]..[85,2799+23])
                      core_type (src/LR1Canonical.ml[85,2799+26]..[85,2799+30])
                        Ptyp_constr "node" (src/LR1Canonical.ml[85,2799+26]..[85,2799+30])
                        []
                    expression (src/LR1Canonical.ml[86,2833+2]..[86,2833+43])
                      Pexp_apply
                      expression (src/LR1Canonical.ml[86,2833+2]..[86,2833+22])
                        Pexp_ident "Lr0.outgoing_symbols" (src/LR1Canonical.ml[86,2833+2]..[86,2833+22])
                      [
                        <arg>
                        Nolabel
                          expression (src/LR1Canonical.ml[86,2833+23]..[86,2833+43])
                            Pexp_apply
                            expression (src/LR1Canonical.ml[86,2833+24]..[86,2833+32])
                              Pexp_ident "Lr0.core" (src/LR1Canonical.ml[86,2833+24]..[86,2833+32])
                            [
                              <arg>
                              Nolabel
                                expression (src/LR1Canonical.ml[86,2833+33]..[86,2833+42])
                                  Pexp_apply
                                  expression (src/LR1Canonical.ml[86,2833+34]..[86,2833+39])
                                    Pexp_ident "state" (src/LR1Canonical.ml[86,2833+34]..[86,2833+39])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/LR1Canonical.ml[86,2833+40]..[86,2833+41])
                                        Pexp_ident "i" (src/LR1Canonical.ml[86,2833+40]..[86,2833+41])
                                  ]
                            ]
                      ]
              ]
            structure_item (src/LR1Canonical.ml[88,2878+0]..[91,2982+24])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Canonical.ml[88,2878+4]..[88,2878+15])
                    Ppat_var "transitions" (src/LR1Canonical.ml[88,2878+4]..[88,2878+15])
                  expression (src/LR1Canonical.ml[88,2878+16]..[91,2982+24]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LR1Canonical.ml[88,2878+16]..[88,2878+26])
                      Ppat_constraint
                      pattern (src/LR1Canonical.ml[88,2878+17]..[88,2878+18])
                        Ppat_var "i" (src/LR1Canonical.ml[88,2878+17]..[88,2878+18])
                      core_type (src/LR1Canonical.ml[88,2878+21]..[88,2878+25])
                        Ptyp_constr "node" (src/LR1Canonical.ml[88,2878+21]..[88,2878+25])
                        []
                    expression (src/LR1Canonical.ml[88,2878+27]..[91,2982+24])
                      Pexp_constraint
                      expression (src/LR1Canonical.ml[89,2926+2]..[91,2982+24])
                        Pexp_apply
                        expression (src/LR1Canonical.ml[89,2926+2]..[89,2926+16])
                          Pexp_ident "SymbolMap.init" (src/LR1Canonical.ml[89,2926+2]..[89,2926+16])
                        [
                          <arg>
                          Nolabel
                            expression (src/LR1Canonical.ml[89,2926+17]..[91,2982+3])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/LR1Canonical.ml[89,2926+22]..[89,2926+28])
                                Ppat_var "symbol" (src/LR1Canonical.ml[89,2926+22]..[89,2926+28])
                              expression (src/LR1Canonical.ml[90,2958+4]..[90,2958+23])
                                Pexp_apply
                                expression (src/LR1Canonical.ml[90,2958+4]..[90,2958+14])
                                  Pexp_ident "transition" (src/LR1Canonical.ml[90,2958+4]..[90,2958+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/LR1Canonical.ml[90,2958+15]..[90,2958+21])
                                      Pexp_ident "symbol" (src/LR1Canonical.ml[90,2958+15]..[90,2958+21])
                                  <arg>
                                  Nolabel
                                    expression (src/LR1Canonical.ml[90,2958+22]..[90,2958+23])
                                      Pexp_ident "i" (src/LR1Canonical.ml[90,2958+22]..[90,2958+23])
                                ]
                          <arg>
                          Nolabel
                            expression (src/LR1Canonical.ml[91,2982+4]..[91,2982+24])
                              Pexp_apply
                              expression (src/LR1Canonical.ml[91,2982+5]..[91,2982+21])
                                Pexp_ident "outgoing_symbols" (src/LR1Canonical.ml[91,2982+5]..[91,2982+21])
                              [
                                <arg>
                                Nolabel
                                  expression (src/LR1Canonical.ml[91,2982+22]..[91,2982+23])
                                    Pexp_ident "i" (src/LR1Canonical.ml[91,2982+22]..[91,2982+23])
                              ]
                        ]
                      core_type (src/LR1Canonical.ml[88,2878+29]..[88,2878+45])
                        Ptyp_constr "SymbolMap.t" (src/LR1Canonical.ml[88,2878+34]..[88,2878+45])
                        [
                          core_type (src/LR1Canonical.ml[88,2878+29]..[88,2878+33])
                            Ptyp_constr "node" (src/LR1Canonical.ml[88,2878+29]..[88,2878+33])
                            []
                        ]
              ]
            structure_item (src/LR1Canonical.ml[97,3145+0]..[98,3175+3])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Canonical.ml[97,3145+4]..[97,3145+10])
                    Ppat_var "number" (src/LR1Canonical.ml[97,3145+4]..[97,3145+10])
                  expression (src/LR1Canonical.ml[97,3145+11]..[98,3175+3]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LR1Canonical.ml[97,3145+11]..[97,3145+21])
                      Ppat_constraint
                      pattern (src/LR1Canonical.ml[97,3145+12]..[97,3145+13])
                        Ppat_var "i" (src/LR1Canonical.ml[97,3145+12]..[97,3145+13])
                      core_type (src/LR1Canonical.ml[97,3145+16]..[97,3145+20])
                        Ptyp_constr "node" (src/LR1Canonical.ml[97,3145+16]..[97,3145+20])
                        []
                    expression (src/LR1Canonical.ml[97,3145+22]..[98,3175+3])
                      Pexp_constraint
                      expression (src/LR1Canonical.ml[98,3175+2]..[98,3175+3])
                        Pexp_ident "i" (src/LR1Canonical.ml[98,3175+2]..[98,3175+3])
                      core_type (src/LR1Canonical.ml[97,3145+24]..[97,3145+27])
                        Ptyp_constr "int" (src/LR1Canonical.ml[97,3145+24]..[97,3145+27])
                        []
              ]
            structure_item (src/LR1Canonical.ml[100,3180+0]..[101,3208+3])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Canonical.ml[100,3180+4]..[100,3180+8])
                    Ppat_var "node" (src/LR1Canonical.ml[100,3180+4]..[100,3180+8])
                  expression (src/LR1Canonical.ml[100,3180+9]..[101,3208+3]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/LR1Canonical.ml[100,3180+9]..[100,3180+18])
                      Ppat_constraint
                      pattern (src/LR1Canonical.ml[100,3180+10]..[100,3180+11])
                        Ppat_var "i" (src/LR1Canonical.ml[100,3180+10]..[100,3180+11])
                      core_type (src/LR1Canonical.ml[100,3180+14]..[100,3180+17])
                        Ptyp_constr "int" (src/LR1Canonical.ml[100,3180+14]..[100,3180+17])
                        []
                    expression (src/LR1Canonical.ml[100,3180+19]..[101,3208+3])
                      Pexp_constraint
                      expression (src/LR1Canonical.ml[101,3208+2]..[101,3208+3])
                        Pexp_ident "i" (src/LR1Canonical.ml[101,3208+2]..[101,3208+3])
                      core_type (src/LR1Canonical.ml[100,3180+21]..[100,3180+25])
                        Ptyp_constr "node" (src/LR1Canonical.ml[100,3180+21]..[100,3180+25])
                        []
              ]
          ]
]

type lr0state = Lr0.node
type lr1state = Lr0.lr1state
open Grammar
module Run() =
  struct
    module G =
      struct
        type t = lr1state
        let foreach_root f =
          ProductionMap.iter
            (fun _prod -> fun (c : lr0state) -> f (Lr0.start c)) Lr0.entry
        let foreach_successor (state : lr1state) f =
          let symbols = Lr0.outgoing_symbols (Lr0.core state) in
          List.iter
            (fun symbol ->
               let successor = Lr0.transition symbol state in f successor)
            symbols
      end
    type node = int
    include
      ((Fix.GraphNumbering.ForOrderedType)(Lr0.Lr1StateAsOrderedType))(G)
    let state : node -> lr1state = decode
    let entry : node ProductionMap.t =
      ProductionMap.map (fun (c : lr0state) -> encode (Lr0.start c))
        Lr0.entry
    let transition symbol (i : node) =
      (encode (Lr0.transition symbol (state i)) : node)
    let outgoing_symbols (i : node) =
      Lr0.outgoing_symbols (Lr0.core (state i))
    let transitions (i : node) =
      (SymbolMap.init (fun symbol -> transition symbol i)
         (outgoing_symbols i) : node SymbolMap.t)
    let number (i : node) = (i : int)
    let node (i : int) = (i : node)
  end
[
  structure_item (src/LR1Canonical.ml[17,1115+0]..src/LR1Canonical.ml[18,1131+10])
    Tstr_type Rec
    [
      type_declaration lr0state/396 (src/LR1Canonical.ml[17,1115+0]..src/LR1Canonical.ml[18,1131+10])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/LR1Canonical.ml[18,1131+2]..src/LR1Canonical.ml[18,1131+10])
              Ttyp_constr "Dune__exe!.Lr0.node"
              []
    ]
  structure_item (src/LR1Canonical.ml[20,1143+0]..src/LR1Canonical.ml[21,1159+14])
    Tstr_type Rec
    [
      type_declaration lr1state/435 (src/LR1Canonical.ml[20,1143+0]..src/LR1Canonical.ml[21,1159+14])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/LR1Canonical.ml[21,1159+2]..src/LR1Canonical.ml[21,1159+14])
              Ttyp_constr "Dune__exe!.Lr0.lr1state"
              []
    ]
  structure_item (src/LR1Canonical.ml[23,1175+0]..src/LR1Canonical.ml[23,1175+12])
    Tstr_open Fresh
    module_expr (src/LR1Canonical.ml[23,1175+5]..src/LR1Canonical.ml[23,1175+12])
      Tmod_ident "Dune__exe!.Grammar"
  structure_item (src/LR1Canonical.ml[25,1189+0]..src/LR1Canonical.ml[103,3213+3])
    Tstr_module
    Run/926
      module_expr (src/LR1Canonical.ml[25,1189+11]..src/LR1Canonical.ml[103,3213+3])
        Tmod_functor ()
        module_expr (src/LR1Canonical.ml[25,1189+16]..src/LR1Canonical.ml[103,3213+3])
          Tmod_structure
          [
            structure_item (src/LR1Canonical.ml[31,1369+0]..src/LR1Canonical.ml[47,1744+3])
              Tstr_module
              G/677
                module_expr (src/LR1Canonical.ml[31,1369+11]..src/LR1Canonical.ml[47,1744+3])
                  Tmod_structure
                  [
                    structure_item (src/LR1Canonical.ml[33,1388+2]..src/LR1Canonical.ml[33,1388+19])
                      Tstr_type Rec
                      [
                        type_declaration t/491 (src/LR1Canonical.ml[33,1388+2]..src/LR1Canonical.ml[33,1388+19])
                          ptype_params =
                            []
                          ptype_cstrs =
                            []
                          ptype_kind =
                            Ttype_abstract
                          ptype_private = Public
                          ptype_manifest =
                            Some
                              core_type (src/LR1Canonical.ml[33,1388+11]..src/LR1Canonical.ml[33,1388+19])
                                Ttyp_constr "lr1state/435"
                                []
                      ]
                    structure_item (src/LR1Canonical.ml[35,1409+2]..src/LR1Canonical.ml[38,1506+15])
                      Tstr_value Nonrec
                      [
                        <def>
                          pattern (src/LR1Canonical.ml[35,1409+6]..src/LR1Canonical.ml[35,1409+18])
                            Tpat_var "foreach_root/492"
                          expression (src/LR1Canonical.ml[35,1409+19]..src/LR1Canonical.ml[38,1506+15]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/LR1Canonical.ml[35,1409+19]..src/LR1Canonical.ml[35,1409+20])
                                  Tpat_var "f/494"
                                expression (src/LR1Canonical.ml[36,1432+4]..src/LR1Canonical.ml[38,1506+15])
                                  Texp_apply
                                  expression (src/LR1Canonical.ml[36,1432+4]..src/LR1Canonical.ml[36,1432+22])
                                    Texp_ident "Dune__exe!.Grammar.ProductionMap.iter"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/LR1Canonical.ml[36,1432+23]..src/LR1Canonical.ml[38,1506+5])
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/LR1Canonical.ml[36,1432+28]..src/LR1Canonical.ml[36,1432+33])
                                              Tpat_var "_prod/546"
                                            expression (src/LR1Canonical.ml[36,1432+34]..src/LR1Canonical.ml[37,1484+21]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/LR1Canonical.ml[36,1432+35]..src/LR1Canonical.ml[36,1432+36])
                                                    extra
                                                      Tpat_extra_constraint
                                                      core_type (src/LR1Canonical.ml[36,1432+39]..src/LR1Canonical.ml[36,1432+47])
                                                        Ttyp_constr "lr0state/396"
                                                        []
                                                    Tpat_alias "c/547"
                                                    pattern (src/LR1Canonical.ml[36,1432+35]..src/LR1Canonical.ml[36,1432+36])
                                                      Tpat_any
                                                  expression (src/LR1Canonical.ml[37,1484+6]..src/LR1Canonical.ml[37,1484+21])
                                                    Texp_apply
                                                    expression (src/LR1Canonical.ml[37,1484+6]..src/LR1Canonical.ml[37,1484+7])
                                                      Texp_ident "f/494"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/LR1Canonical.ml[37,1484+8]..src/LR1Canonical.ml[37,1484+21])
                                                          Texp_apply
                                                          expression (src/LR1Canonical.ml[37,1484+9]..src/LR1Canonical.ml[37,1484+18])
                                                            Texp_ident "Dune__exe!.Lr0.start"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/LR1Canonical.ml[37,1484+19]..src/LR1Canonical.ml[37,1484+20])
                                                                Texp_ident "c/547"
                                                          ]
                                                    ]
                                              ]
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/LR1Canonical.ml[38,1506+6]..src/LR1Canonical.ml[38,1506+15])
                                        Texp_ident "Dune__exe!.Lr0.entry"
                                  ]
                            ]
                      ]
                    structure_item (src/LR1Canonical.ml[40,1523+2]..src/LR1Canonical.ml[45,1729+13])
                      Tstr_value Nonrec
                      [
                        <def>
                          pattern (src/LR1Canonical.ml[40,1523+6]..src/LR1Canonical.ml[40,1523+23])
                            Tpat_var "foreach_successor/582"
                          expression (src/LR1Canonical.ml[40,1523+24]..src/LR1Canonical.ml[45,1729+13]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/LR1Canonical.ml[40,1523+25]..src/LR1Canonical.ml[40,1523+30])
                                  extra
                                    Tpat_extra_constraint
                                    core_type (src/LR1Canonical.ml[40,1523+33]..src/LR1Canonical.ml[40,1523+41])
                                      Ttyp_constr "lr1state/435"
                                      []
                                  Tpat_alias "state/584"
                                  pattern (src/LR1Canonical.ml[40,1523+25]..src/LR1Canonical.ml[40,1523+30])
                                    Tpat_any
                                expression (src/LR1Canonical.ml[40,1523+43]..src/LR1Canonical.ml[45,1729+13]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/LR1Canonical.ml[40,1523+43]..src/LR1Canonical.ml[40,1523+44])
                                        Tpat_var "f/585"
                                      expression (src/LR1Canonical.ml[41,1570+4]..src/LR1Canonical.ml[45,1729+13])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/LR1Canonical.ml[41,1570+8]..src/LR1Canonical.ml[41,1570+15])
                                              Tpat_var "symbols/586"
                                            expression (src/LR1Canonical.ml[41,1570+18]..src/LR1Canonical.ml[41,1570+55])
                                              Texp_apply
                                              expression (src/LR1Canonical.ml[41,1570+18]..src/LR1Canonical.ml[41,1570+38])
                                                Texp_ident "Dune__exe!.Lr0.outgoing_symbols"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/LR1Canonical.ml[41,1570+39]..src/LR1Canonical.ml[41,1570+55])
                                                    Texp_apply
                                                    expression (src/LR1Canonical.ml[41,1570+40]..src/LR1Canonical.ml[41,1570+48])
                                                      Texp_ident "Dune__exe!.Lr0.core"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/LR1Canonical.ml[41,1570+49]..src/LR1Canonical.ml[41,1570+54])
                                                          Texp_ident "state/584"
                                                    ]
                                              ]
                                        ]
                                        expression (src/LR1Canonical.ml[42,1629+4]..src/LR1Canonical.ml[45,1729+13])
                                          Texp_apply
                                          expression (src/LR1Canonical.ml[42,1629+4]..src/LR1Canonical.ml[42,1629+13])
                                            Texp_ident "Stdlib!.List.iter"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/LR1Canonical.ml[42,1629+14]..src/LR1Canonical.ml[45,1729+5])
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (src/LR1Canonical.ml[42,1629+19]..src/LR1Canonical.ml[42,1629+25])
                                                      Tpat_var "symbol/653"
                                                    expression (src/LR1Canonical.ml[43,1658+6]..src/LR1Canonical.ml[44,1711+17])
                                                      Texp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (src/LR1Canonical.ml[43,1658+10]..src/LR1Canonical.ml[43,1658+19])
                                                            Tpat_var "successor/654"
                                                          expression (src/LR1Canonical.ml[43,1658+22]..src/LR1Canonical.ml[43,1658+49])
                                                            Texp_apply
                                                            expression (src/LR1Canonical.ml[43,1658+22]..src/LR1Canonical.ml[43,1658+36])
                                                              Texp_ident "Dune__exe!.Lr0.transition"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/LR1Canonical.ml[43,1658+37]..src/LR1Canonical.ml[43,1658+43])
                                                                  Texp_ident "symbol/653"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/LR1Canonical.ml[43,1658+44]..src/LR1Canonical.ml[43,1658+49])
                                                                  Texp_ident "state/584"
                                                            ]
                                                      ]
                                                      expression (src/LR1Canonical.ml[44,1711+6]..src/LR1Canonical.ml[44,1711+17])
                                                        Texp_apply
                                                        expression (src/LR1Canonical.ml[44,1711+6]..src/LR1Canonical.ml[44,1711+7])
                                                          Texp_ident "f/585"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/LR1Canonical.ml[44,1711+8]..src/LR1Canonical.ml[44,1711+17])
                                                              Texp_ident "successor/654"
                                                        ]
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/LR1Canonical.ml[45,1729+6]..src/LR1Canonical.ml[45,1729+13])
                                                Texp_ident "symbols/586"
                                          ]
                                  ]
                            ]
                      ]
                  ]
            structure_item (src/LR1Canonical.ml[54,1930+0]..src/LR1Canonical.ml[55,1942+5])
              Tstr_type Rec
              [
                type_declaration node/678 (src/LR1Canonical.ml[54,1930+0]..src/LR1Canonical.ml[55,1942+5])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (src/LR1Canonical.ml[55,1942+2]..src/LR1Canonical.ml[55,1942+5])
                        Ttyp_constr "int/1!"
                        []
              ]
            structure_item (src/LR1Canonical.ml[57,1949+0]..src/LR1Canonical.ml[57,1949+71])
              Tstr_include              module_expr (src/LR1Canonical.ml[57,1949+8]..src/LR1Canonical.ml[57,1949+71])
                Tmod_apply
                module_expr (src/LR1Canonical.ml[57,1949+8]..src/LR1Canonical.ml[57,1949+68])
                  Tmod_apply
                  module_expr (src/LR1Canonical.ml[57,1949+8]..src/LR1Canonical.ml[57,1949+41])
                    module_expr (src/LR1Canonical.ml[57,1949+8]..src/LR1Canonical.ml[57,1949+41])
                      Tmod_ident "Dune__exe!.Fix.GraphNumbering.ForOrderedType"
                  module_expr (src/LR1Canonical.ml[57,1949+42]..src/LR1Canonical.ml[57,1949+67])
                    module_expr (src/LR1Canonical.ml[57,1949+42]..src/LR1Canonical.ml[57,1949+67])
                      Tmod_ident "Dune__exe!.Lr0.Lr1StateAsOrderedType"
                module_expr (src/LR1Canonical.ml[57,1949+69]..src/LR1Canonical.ml[57,1949+70])
                  Tmod_ident "G/677"
            structure_item (src/LR1Canonical.ml[66,2282+0]..src/LR1Canonical.ml[67,2313+8])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Canonical.ml[66,2282+4]..src/LR1Canonical.ml[66,2282+9])
                    extra
                      Tpat_extra_constraint
                      core_type (src/LR1Canonical.ml[66,2282+12]..src/LR1Canonical.ml[66,2282+28])
                        Ttyp_arrow
                        Nolabel
                        core_type (src/LR1Canonical.ml[66,2282+12]..src/LR1Canonical.ml[66,2282+16])
                          Ttyp_constr "node/678"
                          []
                        core_type (src/LR1Canonical.ml[66,2282+20]..src/LR1Canonical.ml[66,2282+28])
                          Ttyp_constr "lr1state/435"
                          []
                    Tpat_alias "state/810"
                    pattern (src/LR1Canonical.ml[66,2282+4]..src/LR1Canonical.ml[66,2282+9])
                      Tpat_any
                  expression (src/LR1Canonical.ml[67,2313+2]..src/LR1Canonical.ml[67,2313+8])
                    extra
                      Texp_constraint
                      core_type (src/LR1Canonical.ml[66,2282+12]..src/LR1Canonical.ml[66,2282+28])
                        Ttyp_arrow
                        Nolabel
                        core_type (src/LR1Canonical.ml[66,2282+12]..src/LR1Canonical.ml[66,2282+16])
                          Ttyp_constr "node/678"
                          []
                        core_type (src/LR1Canonical.ml[66,2282+20]..src/LR1Canonical.ml[66,2282+28])
                          Ttyp_constr "lr1state/435"
                          []
                    Texp_ident "decode/809"
              ]
            structure_item (src/LR1Canonical.ml[73,2459+0]..src/LR1Canonical.ml[76,2562+13])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Canonical.ml[73,2459+4]..src/LR1Canonical.ml[73,2459+9])
                    extra
                      Tpat_extra_constraint
                      core_type (src/LR1Canonical.ml[73,2459+12]..src/LR1Canonical.ml[73,2459+32])
                        Ttyp_constr "Dune__exe!.Grammar.ProductionMap.t"
                        [
                          core_type (src/LR1Canonical.ml[73,2459+12]..src/LR1Canonical.ml[73,2459+16])
                            Ttyp_constr "node/678"
                            []
                        ]
                    Tpat_alias "entry/811"
                    pattern (src/LR1Canonical.ml[73,2459+4]..src/LR1Canonical.ml[73,2459+9])
                      Tpat_any
                  expression (src/LR1Canonical.ml[74,2494+2]..src/LR1Canonical.ml[76,2562+13])
                    extra
                      Texp_constraint
                      core_type (src/LR1Canonical.ml[73,2459+12]..src/LR1Canonical.ml[73,2459+32])
                        Ttyp_constr "Dune__exe!.Grammar.ProductionMap.t"
                        [
                          core_type (src/LR1Canonical.ml[73,2459+12]..src/LR1Canonical.ml[73,2459+16])
                            Ttyp_constr "node/678"
                            []
                        ]
                    Texp_apply
                    expression (src/LR1Canonical.ml[74,2494+2]..src/LR1Canonical.ml[74,2494+19])
                      Texp_ident "Dune__exe!.Grammar.ProductionMap.map"
                    [
                      <arg>
                        Nolabel
                        expression (src/LR1Canonical.ml[74,2494+20]..src/LR1Canonical.ml[76,2562+3])
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/LR1Canonical.ml[74,2494+26]..src/LR1Canonical.ml[74,2494+27])
                                extra
                                  Tpat_extra_constraint
                                  core_type (src/LR1Canonical.ml[74,2494+30]..src/LR1Canonical.ml[74,2494+38])
                                    Ttyp_constr "lr0state/396"
                                    []
                                Tpat_alias "c/812"
                                pattern (src/LR1Canonical.ml[74,2494+26]..src/LR1Canonical.ml[74,2494+27])
                                  Tpat_any
                              expression (src/LR1Canonical.ml[75,2537+4]..src/LR1Canonical.ml[75,2537+24])
                                Texp_apply
                                expression (src/LR1Canonical.ml[75,2537+4]..src/LR1Canonical.ml[75,2537+10])
                                  Texp_ident "encode/808"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/LR1Canonical.ml[75,2537+11]..src/LR1Canonical.ml[75,2537+24])
                                      Texp_apply
                                      expression (src/LR1Canonical.ml[75,2537+12]..src/LR1Canonical.ml[75,2537+21])
                                        Texp_ident "Dune__exe!.Lr0.start"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/LR1Canonical.ml[75,2537+22]..src/LR1Canonical.ml[75,2537+23])
                                            Texp_ident "c/812"
                                      ]
                                ]
                          ]
                      <arg>
                        Nolabel
                        expression (src/LR1Canonical.ml[76,2562+4]..src/LR1Canonical.ml[76,2562+13])
                          Texp_ident "Dune__exe!.Lr0.entry"
                    ]
              ]
            structure_item (src/LR1Canonical.ml[82,2713+0]..src/LR1Canonical.ml[83,2755+42])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Canonical.ml[82,2713+4]..src/LR1Canonical.ml[82,2713+14])
                    Tpat_var "transition/813"
                  expression (src/LR1Canonical.ml[82,2713+15]..src/LR1Canonical.ml[83,2755+42]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/LR1Canonical.ml[82,2713+15]..src/LR1Canonical.ml[82,2713+21])
                          Tpat_var "symbol/815"
                        expression (src/LR1Canonical.ml[82,2713+22]..src/LR1Canonical.ml[83,2755+42]) ghost
                          Texp_function
                          Nolabel
                          [
                            <case>
                              pattern (src/LR1Canonical.ml[82,2713+23]..src/LR1Canonical.ml[82,2713+24])
                                extra
                                  Tpat_extra_constraint
                                  core_type (src/LR1Canonical.ml[82,2713+27]..src/LR1Canonical.ml[82,2713+31])
                                    Ttyp_constr "node/678"
                                    []
                                Tpat_alias "i/816"
                                pattern (src/LR1Canonical.ml[82,2713+23]..src/LR1Canonical.ml[82,2713+24])
                                  Tpat_any
                              expression (src/LR1Canonical.ml[83,2755+2]..src/LR1Canonical.ml[83,2755+42])
                                extra
                                  Texp_constraint
                                  core_type (src/LR1Canonical.ml[82,2713+35]..src/LR1Canonical.ml[82,2713+39])
                                    Ttyp_constr "node/678"
                                    []
                                Texp_apply
                                expression (src/LR1Canonical.ml[83,2755+2]..src/LR1Canonical.ml[83,2755+8])
                                  Texp_ident "encode/808"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/LR1Canonical.ml[83,2755+9]..src/LR1Canonical.ml[83,2755+42])
                                      Texp_apply
                                      expression (src/LR1Canonical.ml[83,2755+10]..src/LR1Canonical.ml[83,2755+24])
                                        Texp_ident "Dune__exe!.Lr0.transition"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/LR1Canonical.ml[83,2755+25]..src/LR1Canonical.ml[83,2755+31])
                                            Texp_ident "symbol/815"
                                        <arg>
                                          Nolabel
                                          expression (src/LR1Canonical.ml[83,2755+32]..src/LR1Canonical.ml[83,2755+41])
                                            Texp_apply
                                            expression (src/LR1Canonical.ml[83,2755+33]..src/LR1Canonical.ml[83,2755+38])
                                              Texp_ident "state/810"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/LR1Canonical.ml[83,2755+39]..src/LR1Canonical.ml[83,2755+40])
                                                  Texp_ident "i/816"
                                            ]
                                      ]
                                ]
                          ]
                    ]
              ]
            structure_item (src/LR1Canonical.ml[85,2799+0]..src/LR1Canonical.ml[86,2833+43])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Canonical.ml[85,2799+4]..src/LR1Canonical.ml[85,2799+20])
                    Tpat_var "outgoing_symbols/817"
                  expression (src/LR1Canonical.ml[85,2799+21]..src/LR1Canonical.ml[86,2833+43]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/LR1Canonical.ml[85,2799+22]..src/LR1Canonical.ml[85,2799+23])
                          extra
                            Tpat_extra_constraint
                            core_type (src/LR1Canonical.ml[85,2799+26]..src/LR1Canonical.ml[85,2799+30])
                              Ttyp_constr "node/678"
                              []
                          Tpat_alias "i/819"
                          pattern (src/LR1Canonical.ml[85,2799+22]..src/LR1Canonical.ml[85,2799+23])
                            Tpat_any
                        expression (src/LR1Canonical.ml[86,2833+2]..src/LR1Canonical.ml[86,2833+43])
                          Texp_apply
                          expression (src/LR1Canonical.ml[86,2833+2]..src/LR1Canonical.ml[86,2833+22])
                            Texp_ident "Dune__exe!.Lr0.outgoing_symbols"
                          [
                            <arg>
                              Nolabel
                              expression (src/LR1Canonical.ml[86,2833+23]..src/LR1Canonical.ml[86,2833+43])
                                Texp_apply
                                expression (src/LR1Canonical.ml[86,2833+24]..src/LR1Canonical.ml[86,2833+32])
                                  Texp_ident "Dune__exe!.Lr0.core"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/LR1Canonical.ml[86,2833+33]..src/LR1Canonical.ml[86,2833+42])
                                      Texp_apply
                                      expression (src/LR1Canonical.ml[86,2833+34]..src/LR1Canonical.ml[86,2833+39])
                                        Texp_ident "state/810"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/LR1Canonical.ml[86,2833+40]..src/LR1Canonical.ml[86,2833+41])
                                            Texp_ident "i/819"
                                      ]
                                ]
                          ]
                    ]
              ]
            structure_item (src/LR1Canonical.ml[88,2878+0]..src/LR1Canonical.ml[91,2982+24])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Canonical.ml[88,2878+4]..src/LR1Canonical.ml[88,2878+15])
                    Tpat_var "transitions/820"
                  expression (src/LR1Canonical.ml[88,2878+16]..src/LR1Canonical.ml[91,2982+24]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/LR1Canonical.ml[88,2878+17]..src/LR1Canonical.ml[88,2878+18])
                          extra
                            Tpat_extra_constraint
                            core_type (src/LR1Canonical.ml[88,2878+21]..src/LR1Canonical.ml[88,2878+25])
                              Ttyp_constr "node/678"
                              []
                          Tpat_alias "i/822"
                          pattern (src/LR1Canonical.ml[88,2878+17]..src/LR1Canonical.ml[88,2878+18])
                            Tpat_any
                        expression (src/LR1Canonical.ml[89,2926+2]..src/LR1Canonical.ml[91,2982+24])
                          extra
                            Texp_constraint
                            core_type (src/LR1Canonical.ml[88,2878+29]..src/LR1Canonical.ml[88,2878+45])
                              Ttyp_constr "Dune__exe!.Grammar.SymbolMap.t"
                              [
                                core_type (src/LR1Canonical.ml[88,2878+29]..src/LR1Canonical.ml[88,2878+33])
                                  Ttyp_constr "node/678"
                                  []
                              ]
                          Texp_apply
                          expression (src/LR1Canonical.ml[89,2926+2]..src/LR1Canonical.ml[89,2926+16])
                            Texp_ident "Dune__exe!.Grammar.SymbolMap.init"
                          [
                            <arg>
                              Nolabel
                              expression (src/LR1Canonical.ml[89,2926+17]..src/LR1Canonical.ml[91,2982+3])
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/LR1Canonical.ml[89,2926+22]..src/LR1Canonical.ml[89,2926+28])
                                      Tpat_var "symbol/919"
                                    expression (src/LR1Canonical.ml[90,2958+4]..src/LR1Canonical.ml[90,2958+23])
                                      Texp_apply
                                      expression (src/LR1Canonical.ml[90,2958+4]..src/LR1Canonical.ml[90,2958+14])
                                        Texp_ident "transition/813"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/LR1Canonical.ml[90,2958+15]..src/LR1Canonical.ml[90,2958+21])
                                            Texp_ident "symbol/919"
                                        <arg>
                                          Nolabel
                                          expression (src/LR1Canonical.ml[90,2958+22]..src/LR1Canonical.ml[90,2958+23])
                                            Texp_ident "i/822"
                                      ]
                                ]
                            <arg>
                              Nolabel
                              expression (src/LR1Canonical.ml[91,2982+4]..src/LR1Canonical.ml[91,2982+24])
                                Texp_apply
                                expression (src/LR1Canonical.ml[91,2982+5]..src/LR1Canonical.ml[91,2982+21])
                                  Texp_ident "outgoing_symbols/817"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/LR1Canonical.ml[91,2982+22]..src/LR1Canonical.ml[91,2982+23])
                                      Texp_ident "i/822"
                                ]
                          ]
                    ]
              ]
            structure_item (src/LR1Canonical.ml[97,3145+0]..src/LR1Canonical.ml[98,3175+3])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Canonical.ml[97,3145+4]..src/LR1Canonical.ml[97,3145+10])
                    Tpat_var "number/920"
                  expression (src/LR1Canonical.ml[97,3145+11]..src/LR1Canonical.ml[98,3175+3]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/LR1Canonical.ml[97,3145+12]..src/LR1Canonical.ml[97,3145+13])
                          extra
                            Tpat_extra_constraint
                            core_type (src/LR1Canonical.ml[97,3145+16]..src/LR1Canonical.ml[97,3145+20])
                              Ttyp_constr "node/678"
                              []
                          Tpat_alias "i/922"
                          pattern (src/LR1Canonical.ml[97,3145+12]..src/LR1Canonical.ml[97,3145+13])
                            Tpat_any
                        expression (src/LR1Canonical.ml[98,3175+2]..src/LR1Canonical.ml[98,3175+3])
                          extra
                            Texp_constraint
                            core_type (src/LR1Canonical.ml[97,3145+24]..src/LR1Canonical.ml[97,3145+27])
                              Ttyp_constr "int/1!"
                              []
                          Texp_ident "i/922"
                    ]
              ]
            structure_item (src/LR1Canonical.ml[100,3180+0]..src/LR1Canonical.ml[101,3208+3])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/LR1Canonical.ml[100,3180+4]..src/LR1Canonical.ml[100,3180+8])
                    Tpat_var "node/923"
                  expression (src/LR1Canonical.ml[100,3180+9]..src/LR1Canonical.ml[101,3208+3]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/LR1Canonical.ml[100,3180+10]..src/LR1Canonical.ml[100,3180+11])
                          extra
                            Tpat_extra_constraint
                            core_type (src/LR1Canonical.ml[100,3180+14]..src/LR1Canonical.ml[100,3180+17])
                              Ttyp_constr "int/1!"
                              []
                          Tpat_alias "i/925"
                          pattern (src/LR1Canonical.ml[100,3180+10]..src/LR1Canonical.ml[100,3180+11])
                            Tpat_any
                        expression (src/LR1Canonical.ml[101,3208+2]..src/LR1Canonical.ml[101,3208+3])
                          extra
                            Texp_constraint
                            core_type (src/LR1Canonical.ml[100,3180+21]..src/LR1Canonical.ml[100,3180+25])
                              Ttyp_constr "node/678"
                              []
                          Texp_ident "i/925"
                    ]
              ]
          ]
]

{<Dune__exe__LR1Canonical>
 "Run"[module] ->
   Abs<Dune__exe__LR1Canonical.30>
      (()/1,
       {
        "entry"[value] -> <Dune__exe__LR1Canonical.16>;
        "n"[value] ->
          CU Dune__exe . "Fix"[module] . "GraphNumbering"[module] .
          "ForOrderedType"[module](
          CU Dune__exe . "Lr0"[module] . "Lr1StateAsOrderedType"[module])(
          {<Dune__exe__LR1Canonical.13>
           "foreach_root"[value] -> <Dune__exe__LR1Canonical.3>;
           "foreach_successor"[value] -> <Dune__exe__LR1Canonical.7>;
           "t"[type] -> <Dune__exe__LR1Canonical.2>;
           })
          . "n"[value];
        "node"[value] -> <Dune__exe__LR1Canonical.28>;
        "node"[type] -> <Dune__exe__LR1Canonical.14>;
        "number"[value] -> <Dune__exe__LR1Canonical.26>;
        "state"[value] -> <Dune__exe__LR1Canonical.15>;
        "transitions"[value] -> <Dune__exe__LR1Canonical.23>;
        });
 }

(let
  (Run/926 =
     (function */2069 is_a_functor
       (let
         (*/2063 =a */2069
          G/677 =
            (let
              (foreach_root/492 =
                 (function f/494 : int
                   (apply
                     (field_imm 18
                       (field_imm 9 (global Dune__exe__Grammar!)))
                     (function _prod/546 c/547[int] : int
                       (apply f/494
                         (apply (field_imm 12 (global Dune__exe__Lr0!))
                           c/547)))
                     (field_imm 1 (global Dune__exe__Lr0!))))
               foreach_successor/582 =
                 (function state/584 f/585 : int
                   (let
                     (symbols/586 =
                        (apply (field_imm 6 (global Dune__exe__Lr0!))
                          (apply (field_imm 11 (global Dune__exe__Lr0!))
                            state/584)))
                     (apply (field_imm 17 (global Stdlib__List!))
                       (function symbol/653 : int
                         (let
                           (successor/654 =
                              (apply (field_imm 14 (global Dune__exe__Lr0!))
                                symbol/653 state/584))
                           (apply f/585 successor/654)))
                       symbols/586))))
              (makeblock 0 foreach_root/492 foreach_successor/582))
          include/2064 =
            (apply
              (apply
                (let
                  (let/2068 =
                     (field_imm 1 (global Vendored_fix__GraphNumbering!)))
                  (field_imm 1 (global Vendored_fix__GraphNumbering!)))
                (let (let/2067 = (field_imm 8 (global Dune__exe__Lr0!)))
                  (field_imm 8 (global Dune__exe__Lr0!))))
              G/677)
          n/807 =a (field_mut 0 include/2064)
          encode/808 =a (field_mut 1 include/2064)
          decode/809 =a (field_mut 2 include/2064)
          state/810 =a decode/809
          entry/811 =
            (apply (field_imm 23 (field_imm 9 (global Dune__exe__Grammar!)))
              (function c/812[int] : int
                (apply encode/808
                  (apply (field_imm 12 (global Dune__exe__Lr0!)) c/812)))
              (field_imm 1 (global Dune__exe__Lr0!)))
          transition/813 =
            (function symbol/815 i/816[int] : int
              (apply encode/808
                (apply (field_imm 14 (global Dune__exe__Lr0!)) symbol/815
                  (apply state/810 i/816))))
          outgoing_symbols/817 =
            (function i/819[int]
              (apply (field_imm 6 (global Dune__exe__Lr0!))
                (apply (field_imm 11 (global Dune__exe__Lr0!))
                  (apply state/810 i/819))))
          transitions/820 =
            (function i/822[int]
              (apply
                (field_imm 44 (field_imm 7 (global Dune__exe__Grammar!)))
                (function symbol/919 : int
                  (apply transition/813 symbol/919 i/822))
                (apply outgoing_symbols/817 i/822)))
          number/920 = (function i/922[int] : int i/922)
          node/923 = (function i/925[int] : int i/925))
         (makeblock 0 G/677 n/807 encode/808 decode/809 state/810 entry/811
           transition/813 outgoing_symbols/817 transitions/820 number/920
           node/923))))
  (seq
    (setfield_ptr(root-init) 0 (global Dune__exe__LR1Canonical!)
      (function funarg/2070 is_a_functor stub
        (let (let/2071 = (apply Run/926 funarg/2070))
          (makeblock 0 (field_mut 1 let/2071) (field_mut 9 let/2071)
            (field_mut 10 let/2071) (field_mut 5 let/2071)
            (field_mut 8 let/2071) (field_mut 4 let/2071)))))
    0))
(let
  (Run/926 =
     (function */2069 is_a_functor
       (let
         (G/677 =
            (let
              (foreach_root/492 =
                 (function f/494 : int
                   (apply
                     (field_imm 18
                       (field_imm 9 (global Dune__exe__Grammar!)))
                     (function _prod/546 c/547[int] : int
                       (apply f/494
                         (apply (field_imm 12 (global Dune__exe__Lr0!))
                           c/547)))
                     (field_imm 1 (global Dune__exe__Lr0!))))
               foreach_successor/582 =
                 (function state/584 f/585 : int
                   (let
                     (symbols/586 =
                        (apply (field_imm 6 (global Dune__exe__Lr0!))
                          (apply (field_imm 11 (global Dune__exe__Lr0!))
                            state/584)))
                     (apply (field_imm 17 (global Stdlib__List!))
                       (function symbol/653 : int
                         (let
                           (successor/654 =
                              (apply (field_imm 14 (global Dune__exe__Lr0!))
                                symbol/653 state/584))
                           (apply f/585 successor/654)))
                       symbols/586))))
              (makeblock 0 foreach_root/492 foreach_successor/582))
          include/2064 =
            (apply
              (apply
                (let
                  (let/2068 =
                     (field_imm 1 (global Vendored_fix__GraphNumbering!)))
                  (field_imm 1 (global Vendored_fix__GraphNumbering!)))
                (let (let/2067 = (field_imm 8 (global Dune__exe__Lr0!)))
                  (field_imm 8 (global Dune__exe__Lr0!))))
              G/677)
          encode/808 =a (field_mut 1 include/2064)
          decode/809 =a (field_mut 2 include/2064)
          entry/811 =
            (apply (field_imm 23 (field_imm 9 (global Dune__exe__Grammar!)))
              (function c/812[int] : int
                (apply encode/808
                  (apply (field_imm 12 (global Dune__exe__Lr0!)) c/812)))
              (field_imm 1 (global Dune__exe__Lr0!)))
          transition/813 =
            (function symbol/815 i/816[int] : int
              (apply encode/808
                (apply (field_imm 14 (global Dune__exe__Lr0!)) symbol/815
                  (apply decode/809 i/816))))
          outgoing_symbols/817 =
            (function i/819[int]
              (apply (field_imm 6 (global Dune__exe__Lr0!))
                (apply (field_imm 11 (global Dune__exe__Lr0!))
                  (apply decode/809 i/819))))
          transitions/820 =
            (function i/822[int]
              (apply
                (field_imm 44 (field_imm 7 (global Dune__exe__Grammar!)))
                (function symbol/919 : int
                  (apply transition/813 symbol/919 i/822))
                (apply outgoing_symbols/817 i/822)))
          number/920 = (function i/922[int] : int i/922)
          node/923 = (function i/925[int] : int i/925))
         (makeblock 0 G/677 (field_mut 0 include/2064) encode/808 decode/809
           decode/809 entry/811 transition/813 outgoing_symbols/817
           transitions/820 number/920 node/923))))
  (seq
    (setfield_ptr(root-init) 0 (global Dune__exe__LR1Canonical!)
      (function funarg/2070 is_a_functor stub
        (let (let/2071 = (apply Run/926 funarg/2070))
          (makeblock 0 (field_mut 1 let/2071) (field_mut 9 let/2071)
            (field_mut 10 let/2071) (field_mut 5 let/2071)
            (field_mut 8 let/2071) (field_mut 4 let/2071)))))
    0))
