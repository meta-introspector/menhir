[
  structure_item (src/stage1/parser.ml[1,0+0]..[74,1250+14])
    Pstr_type Rec
    [
      type_declaration "token" (src/stage1/parser.ml[1,0+5]..[1,0+10]) (src/stage1/parser.ml[1,0+0]..[74,1250+14])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (src/stage1/parser.ml[2,13+2]..[2,13+9])
                "TOKEN" (src/stage1/parser.ml[2,13+4]..[2,13+9])
                []
                None
              (src/stage1/parser.ml[3,23+2]..[3,23+8])
                "TYPE" (src/stage1/parser.ml[3,23+4]..[3,23+8])
                []
                None
              (src/stage1/parser.ml[4,32+2]..[4,32+8])
                "LEFT" (src/stage1/parser.ml[4,32+4]..[4,32+8])
                []
                None
              (src/stage1/parser.ml[5,41+2]..[5,41+9])
                "RIGHT" (src/stage1/parser.ml[5,41+4]..[5,41+9])
                []
                None
              (src/stage1/parser.ml[6,51+2]..[6,51+12])
                "NONASSOC" (src/stage1/parser.ml[6,51+4]..[6,51+12])
                []
                None
              (src/stage1/parser.ml[7,64+2]..[7,64+9])
                "START" (src/stage1/parser.ml[7,64+4]..[7,64+9])
                []
                None
              (src/stage1/parser.ml[8,74+2]..[8,74+8])
                "PREC" (src/stage1/parser.ml[8,74+4]..[8,74+8])
                []
                None
              (src/stage1/parser.ml[9,83+2]..[9,83+10])
                "PUBLIC" (src/stage1/parser.ml[9,83+4]..[9,83+10])
                []
                None
              (src/stage1/parser.ml[10,94+2]..[10,94+9])
                "COLON" (src/stage1/parser.ml[10,94+4]..[10,94+9])
                []
                None
              (src/stage1/parser.ml[11,104+2]..[11,104+7])
                "BAR" (src/stage1/parser.ml[11,104+4]..[11,104+7])
                []
                None
              (src/stage1/parser.ml[12,112+2]..[12,112+7])
                "EOF" (src/stage1/parser.ml[12,112+4]..[12,112+7])
                []
                None
              (src/stage1/parser.ml[13,120+2]..[13,120+9])
                "EQUAL" (src/stage1/parser.ml[13,120+4]..[13,120+9])
                []
                None
              (src/stage1/parser.ml[14,130+2]..[14,130+10])
                "INLINE" (src/stage1/parser.ml[14,130+4]..[14,130+10])
                []
                None
              (src/stage1/parser.ml[15,141+2]..[15,141+10])
                "LPAREN" (src/stage1/parser.ml[15,141+4]..[15,141+10])
                []
                None
              (src/stage1/parser.ml[16,152+2]..[16,152+10])
                "RPAREN" (src/stage1/parser.ml[16,152+4]..[16,152+10])
                []
                None
              (src/stage1/parser.ml[17,163+2]..[17,163+9])
                "COMMA" (src/stage1/parser.ml[17,163+4]..[17,163+9])
                []
                None
              (src/stage1/parser.ml[18,173+2]..[18,173+12])
                "QUESTION" (src/stage1/parser.ml[18,173+4]..[18,173+12])
                []
                None
              (src/stage1/parser.ml[19,186+2]..[19,186+8])
                "STAR" (src/stage1/parser.ml[19,186+4]..[19,186+8])
                []
                None
              (src/stage1/parser.ml[20,195+2]..[20,195+8])
                "PLUS" (src/stage1/parser.ml[20,195+4]..[20,195+8])
                []
                None
              (src/stage1/parser.ml[21,204+2]..[21,204+13])
                "PARAMETER" (src/stage1/parser.ml[21,204+4]..[21,204+13])
                []
                None
              (src/stage1/parser.ml[22,218+2]..[22,218+19])
                "ON_ERROR_REDUCE" (src/stage1/parser.ml[22,218+4]..[22,218+19])
                []
                None
              (src/stage1/parser.ml[23,238+2]..[23,238+20])
                "PERCENTATTRIBUTE" (src/stage1/parser.ml[23,238+4]..[23,238+20])
                []
                None
              (src/stage1/parser.ml[24,259+2]..[24,259+8])
                "SEMI" (src/stage1/parser.ml[24,259+4]..[24,259+8])
                []
                None
              (src/stage1/parser.ml[25,268+2]..[29,371+1])
                "LID" (src/stage1/parser.ml[25,268+4]..[25,268+7])
                [
                  core_type (src/stage1/parser.mly[33,310+8]..[33,310+32])
                    Ptyp_constr "Positions.located" (src/stage1/parser.mly[33,310+15]..[33,310+32])
                    [
                      core_type (src/stage1/parser.mly[33,310+8]..[33,310+14])
                        Ptyp_constr "string" (src/stage1/parser.mly[33,310+8]..[33,310+14])
                        []
                    ]
                ]
                None
              (src/stage1/parser.ml[30,373+2]..[34,476+1])
                "UID" (src/stage1/parser.ml[30,373+4]..[30,373+7])
                [
                  core_type (src/stage1/parser.mly[33,415+8]..[33,415+32])
                    Ptyp_constr "Positions.located" (src/stage1/parser.mly[33,415+15]..[33,415+32])
                    [
                      core_type (src/stage1/parser.mly[33,415+8]..[33,415+14])
                        Ptyp_constr "string" (src/stage1/parser.mly[33,415+8]..[33,415+14])
                        []
                    ]
                ]
                None
              (src/stage1/parser.ml[35,478+2]..[39,581+1])
                "QID" (src/stage1/parser.ml[35,478+4]..[35,478+7])
                [
                  core_type (src/stage1/parser.mly[33,520+8]..[33,520+32])
                    Ptyp_constr "Positions.located" (src/stage1/parser.mly[33,520+15]..[33,520+32])
                    [
                      core_type (src/stage1/parser.mly[33,520+8]..[33,520+14])
                        Ptyp_constr "string" (src/stage1/parser.mly[33,520+8]..[33,520+14])
                        []
                    ]
                ]
                None
              (src/stage1/parser.ml[40,583+2]..[44,674+1])
                "HEADER" (src/stage1/parser.ml[40,583+4]..[40,583+10])
                [
                  core_type (src/stage1/parser.mly[34,628+8]..[34,628+17])
                    Ptyp_constr "Stretch.t" (src/stage1/parser.mly[34,628+8]..[34,628+17])
                    []
                ]
                None
              (src/stage1/parser.ml[45,676+2]..[49,778+1])
                "OCAMLTYPE" (src/stage1/parser.ml[45,676+4]..[45,676+13])
                [
                  core_type (src/stage1/parser.mly[35,724+8]..[35,724+25])
                    Ptyp_constr "Stretch.ocamltype" (src/stage1/parser.mly[35,724+8]..[35,724+25])
                    []
                ]
                None
              (src/stage1/parser.ml[50,780+2]..[54,886+1])
                "PERCENTPERCENT" (src/stage1/parser.ml[50,780+4]..[50,780+18])
                [
                  core_type (src/stage1/parser.mly[36,833+8]..[36,833+24])
                    Ptyp_constr "Lazy.t" (src/stage1/parser.mly[36,833+18]..[36,833+24])
                    [
                      core_type (src/stage1/parser.mly[36,833+8]..[36,833+17])
                        Ptyp_constr "Stretch.t" (src/stage1/parser.mly[36,833+8]..[36,833+17])
                        []
                    ]
                ]
                None
              (src/stage1/parser.ml[55,888+2]..[59,987+1])
                "ACTION" (src/stage1/parser.ml[55,888+4]..[55,888+10])
                [
                  core_type (src/stage1/parser.mly[37,933+8]..[37,933+25])
                    Ptyp_constr "Syntax.raw_action" (src/stage1/parser.mly[37,933+8]..[37,933+25])
                    []
                ]
                None
              (src/stage1/parser.ml[60,989+2]..[64,1090+1])
                "ATTRIBUTE" (src/stage1/parser.ml[60,989+4]..[60,989+13])
                [
                  core_type (src/stage1/parser.mly[38,1037+8]..[38,1037+24])
                    Ptyp_constr "Syntax.attribute" (src/stage1/parser.mly[38,1037+8]..[38,1037+24])
                    []
                ]
                None
              (src/stage1/parser.ml[65,1092+2]..[69,1200+1])
                "GRAMMARATTRIBUTE" (src/stage1/parser.ml[65,1092+4]..[65,1092+20])
                [
                  core_type (src/stage1/parser.mly[38,1147+8]..[38,1147+24])
                    Ptyp_constr "Syntax.attribute" (src/stage1/parser.mly[38,1147+8]..[38,1147+24])
                    []
                ]
                None
              (src/stage1/parser.ml[70,1202+2]..[70,1202+7])
                "LET" (src/stage1/parser.ml[70,1202+4]..[70,1202+7])
                []
                None
              (src/stage1/parser.ml[71,1210+2]..[71,1210+9])
                "TILDE" (src/stage1/parser.ml[71,1210+4]..[71,1210+9])
                []
                None
              (src/stage1/parser.ml[72,1220+2]..[72,1220+14])
                "UNDERSCORE" (src/stage1/parser.ml[72,1220+4]..[72,1220+14])
                []
                None
              (src/stage1/parser.ml[73,1235+2]..[73,1235+14])
                "COLONEQUAL" (src/stage1/parser.ml[73,1235+4]..[73,1235+14])
                []
                None
              (src/stage1/parser.ml[74,1250+2]..[74,1250+14])
                "EQUALEQUAL" (src/stage1/parser.ml[74,1250+4]..[74,1250+14])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/stage1/parser.ml[76,1266+0]..[76,1266+12])
    Pstr_open Fresh
    module_expr (src/stage1/parser.ml[76,1266+5]..[76,1266+12])
      Pmod_ident "Parsing" (src/stage1/parser.ml[76,1266+5]..[76,1266+12])
  structure_item (src/stage1/parser.ml[77,1279+0]..[77,1279+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[77,1279+4]..[77,1279+5])
          Ppat_any
        expression (src/stage1/parser.ml[77,1279+8]..[77,1279+19])
          Pexp_ident "parse_error" (src/stage1/parser.ml[77,1279+8]..[77,1279+19])
    ]
  structure_item (src/stage1/parser.mly[25,1331+0]..[25,1331+11])
    Pstr_open Fresh
    module_expr (src/stage1/parser.mly[25,1331+5]..[25,1331+11])
      Pmod_ident "Syntax" (src/stage1/parser.mly[25,1331+5]..[25,1331+11])
  structure_item (src/stage1/parser.mly[26,1343+0]..[26,1343+14])
    Pstr_open Fresh
    module_expr (src/stage1/parser.mly[26,1343+5]..[26,1343+14])
      Pmod_ident "Positions" (src/stage1/parser.mly[26,1343+5]..[26,1343+14])
  structure_item (src/stage1/parser.ml[84,1387+0]..[113,1981+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[84,1387+4]..[84,1387+18])
          Ppat_var "yytransl_const" (src/stage1/parser.ml[84,1387+4]..[84,1387+18])
        expression (src/stage1/parser.ml[84,1387+21]..[113,1981+7])
          Pexp_array
          [
            expression (src/stage1/parser.ml[85,1411+2]..[85,1411+5])
              Pexp_constant PConst_int (257,None)
            expression (src/stage1/parser.ml[86,1430+2]..[86,1430+5])
              Pexp_constant PConst_int (258,None)
            expression (src/stage1/parser.ml[87,1448+2]..[87,1448+5])
              Pexp_constant PConst_int (259,None)
            expression (src/stage1/parser.ml[88,1466+2]..[88,1466+5])
              Pexp_constant PConst_int (260,None)
            expression (src/stage1/parser.ml[89,1485+2]..[89,1485+5])
              Pexp_constant PConst_int (261,None)
            expression (src/stage1/parser.ml[90,1507+2]..[90,1507+5])
              Pexp_constant PConst_int (262,None)
            expression (src/stage1/parser.ml[91,1526+2]..[91,1526+5])
              Pexp_constant PConst_int (263,None)
            expression (src/stage1/parser.ml[92,1544+2]..[92,1544+5])
              Pexp_constant PConst_int (264,None)
            expression (src/stage1/parser.ml[93,1564+2]..[93,1564+5])
              Pexp_constant PConst_int (265,None)
            expression (src/stage1/parser.ml[94,1583+2]..[94,1583+5])
              Pexp_constant PConst_int (266,None)
            expression (src/stage1/parser.ml[95,1600+4]..[95,1600+5])
              Pexp_constant PConst_int (0,None)
            expression (src/stage1/parser.ml[96,1617+2]..[96,1617+5])
              Pexp_constant PConst_int (267,None)
            expression (src/stage1/parser.ml[97,1636+2]..[97,1636+5])
              Pexp_constant PConst_int (268,None)
            expression (src/stage1/parser.ml[98,1656+2]..[98,1656+5])
              Pexp_constant PConst_int (269,None)
            expression (src/stage1/parser.ml[99,1676+2]..[99,1676+5])
              Pexp_constant PConst_int (270,None)
            expression (src/stage1/parser.ml[100,1696+2]..[100,1696+5])
              Pexp_constant PConst_int (271,None)
            expression (src/stage1/parser.ml[101,1715+2]..[101,1715+5])
              Pexp_constant PConst_int (272,None)
            expression (src/stage1/parser.ml[102,1737+2]..[102,1737+5])
              Pexp_constant PConst_int (273,None)
            expression (src/stage1/parser.ml[103,1755+2]..[103,1755+5])
              Pexp_constant PConst_int (274,None)
            expression (src/stage1/parser.ml[104,1773+2]..[104,1773+5])
              Pexp_constant PConst_int (275,None)
            expression (src/stage1/parser.ml[105,1796+2]..[105,1796+5])
              Pexp_constant PConst_int (276,None)
            expression (src/stage1/parser.ml[106,1825+2]..[106,1825+5])
              Pexp_constant PConst_int (277,None)
            expression (src/stage1/parser.ml[107,1855+2]..[107,1855+5])
              Pexp_constant PConst_int (278,None)
            expression (src/stage1/parser.ml[108,1873+2]..[108,1873+5])
              Pexp_constant PConst_int (288,None)
            expression (src/stage1/parser.ml[109,1890+2]..[109,1890+5])
              Pexp_constant PConst_int (289,None)
            expression (src/stage1/parser.ml[110,1909+2]..[110,1909+5])
              Pexp_constant PConst_int (290,None)
            expression (src/stage1/parser.ml[111,1933+2]..[111,1933+5])
              Pexp_constant PConst_int (291,None)
            expression (src/stage1/parser.ml[112,1957+2]..[112,1957+5])
              Pexp_constant PConst_int (292,None)
            expression (src/stage1/parser.ml[113,1981+4]..[113,1981+5])
              Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (src/stage1/parser.ml[115,1990+0]..[125,2209+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[115,1990+4]..[115,1990+18])
          Ppat_var "yytransl_block" (src/stage1/parser.ml[115,1990+4]..[115,1990+18])
        expression (src/stage1/parser.ml[115,1990+21]..[125,2209+7])
          Pexp_array
          [
            expression (src/stage1/parser.ml[116,2014+2]..[116,2014+5])
              Pexp_constant PConst_int (279,None)
            expression (src/stage1/parser.ml[117,2031+2]..[117,2031+5])
              Pexp_constant PConst_int (280,None)
            expression (src/stage1/parser.ml[118,2048+2]..[118,2048+5])
              Pexp_constant PConst_int (281,None)
            expression (src/stage1/parser.ml[119,2065+2]..[119,2065+5])
              Pexp_constant PConst_int (282,None)
            expression (src/stage1/parser.ml[120,2085+2]..[120,2085+5])
              Pexp_constant PConst_int (283,None)
            expression (src/stage1/parser.ml[121,2108+2]..[121,2108+5])
              Pexp_constant PConst_int (284,None)
            expression (src/stage1/parser.ml[122,2136+2]..[122,2136+5])
              Pexp_constant PConst_int (285,None)
            expression (src/stage1/parser.ml[123,2156+2]..[123,2156+5])
              Pexp_constant PConst_int (286,None)
            expression (src/stage1/parser.ml[124,2179+2]..[124,2179+5])
              Pexp_constant PConst_int (287,None)
            expression (src/stage1/parser.ml[125,2209+4]..[125,2209+5])
              Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (src/stage1/parser.ml[127,2218+0]..[137,2835+57])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[127,2218+4]..[127,2218+9])
          Ppat_var "yylhs" (src/stage1/parser.ml[127,2218+4]..[127,2218+9])
        expression (src/stage1/parser.ml[127,2218+12]..[137,2835+57])
          Pexp_constant PConst_string("\255\255\001\000\006\000\006\000\004\000\004\000\004\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\b\000\b\000\012\000\012\000\012\000\r\000\r\000\016\000\016\000\016\000\015\000\015\000\014\000\014\000\t\000\t\000\n\000\n\000\017\000\017\000\005\000\005\000\005\000\018\000\019\000\019\000\019\000\019\000\019\000\020\000\020\000\024\000\024\000\025\000\025\000\026\000\026\000\027\000\027\000\011\000\011\000\021\000\021\000\028\000\028\000\028\000\023\000\023\000\022\000\030\000\030\000\029\000\029\000\031\000\031\000\003\000 \000 \000\002\000\002\000!\000!\000\000\000",(src/stage1/parser.ml[127,2218+13]..[137,2835+56]),None)
    ]
  structure_item (src/stage1/parser.ml[139,2894+0]..[149,3511+57])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[139,2894+4]..[139,2894+9])
          Ppat_var "yylen" (src/stage1/parser.ml[139,2894+4]..[139,2894+9])
        expression (src/stage1/parser.ml[139,2894+12]..[149,3511+57])
          Pexp_constant PConst_string("\002\000\004\000\001\000\001\000\000\000\002\000\002\000\001\000\003\000\002\000\003\000\003\000\002\000\002\000\001\000\003\000\002\000\000\000\001\000\001\000\001\000\001\000\000\000\003\000\001\000\001\000\001\000\000\000\001\000\000\000\002\000\000\000\005\000\000\000\002\000\000\000\001\000\000\000\002\000\002\000\b\000\000\000\001\000\001\000\002\000\002\000\000\000\003\000\001\000\003\000\000\000\003\000\001\000\003\000\002\000\002\000\000\000\003\000\000\000\001\000\001\000\001\000\001\000\000\000\003\000\003\000\000\000\002\000\001\000\002\000\002\000\003\000\002\000\000\000\002\000\003\000\005\000\000\000\002\000\002\000",(src/stage1/parser.ml[139,2894+13]..[149,3511+56]),None)
    ]
  structure_item (src/stage1/parser.ml[151,3570+0]..[165,4454+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[151,3570+4]..[151,3570+12])
          Ppat_var "yydefred" (src/stage1/parser.ml[151,3570+4]..[151,3570+12])
        expression (src/stage1/parser.ml[151,3570+15]..[165,4454+41])
          Pexp_constant PConst_string("\000\000\004\000\000\000O\000\000\000\000\000\000\000\019\000\020\000\021\000\000\000\000\0008\0008\000\006\000\007\000%\000\014\000\005\000\022\000\018\000\031\0008\000!\000\000\000\rsrc/stage1/parser.ml[151,3570+16]..[165,4454+40]),None)
    ]
  structure_item (src/stage1/parser.ml[167,4497+0]..[172,4786+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[167,4497+4]..[167,4497+11])
          Ppat_var "yydgoto" (src/stage1/parser.ml[167,4497+4]..[167,4497+11])
        expression (src/stage1/parser.ml[167,4497+14]..[172,4786+9])
          Pexp_constant PConst_string("\002\000\003\000^\000T\000\004\000\028\000+\000\018\000\021\000\030\000\024\000\026\000\019\000\029\000%\000#\0003\000C\000,\000-\000G\000R\000U\000Z\000L\000<\000D\000E\000@\000V\000`\000Y\000W\000j\000",(src/stage1/parser.ml[167,4497+15]..[172,4786+8]),None)
    ]
  structure_item (src/stage1/parser.ml[174,4797+0]..[188,5681+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[174,4797+4]..[174,4797+12])
          Ppat_var "yysindex" (src/stage1/parser.ml[174,4797+4]..[174,4797+12])
        expression (src/stage1/parser.ml[174,4797+15]..[188,5681+41])
          Pexp_constant PConst_string("\011\000\000\000\000\000\000\000\191\000\t\255\011\255\000\000\000\000\000\000\025\255\026\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\255\000\000-\255\004\255\006\000-\255-\255-\255\024\255\000\000\000\000!\255G\255\000\000Z\255\000\000c\255\000\000\000\000\000\000\000\000!\255!\255T\255\000\000\000\000\000\000i\255R\255\000\000\000\000\000\000G\255\000\000_\255!\255\000\000\000\000\000\000\000\000\000\000{\255\000\000G\255~\255\000\255!\255\154\255\000\000\000\000!\255x\255\155\255\158\255\000\000!\255\000\000\000\000\000\000\000\000\160\255\000\000\162\2550\255\000\000\000\000\172\255\185\255!\255\182\255\000\000y\255\000\000\160\255\000\000\000\000\000\000!\255\000\000\000\000\000\000y\255\177\255\000\000\000\000\177\255",(src/stage1/parser.ml[174,4797+16]..[188,5681+40]),None)
    ]
  structure_item (src/stage1/parser.ml[190,5724+0]..[204,6608+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[190,5724+4]..[190,5724+12])
          Ppat_var "yyrindex" (src/stage1/parser.ml[190,5724+4]..[190,5724+12])
        expression (src/stage1/parser.ml[190,5724+15]..[204,6608+41])
          Pexp_constant PConst_string("\000\000\000\000\000\000\000\000\000\000C\000\000\000\000\000\000\000\000\000\129\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\000\000\000z\255\153\255j\255\184\255\160\000\215\255\253\000\000\000\000\000\000\000\020\255\000\000m\255\000\000\137\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\255[\255\000\000\000\000\000\000\254\254\000\000$\000\000\000\000\000\000\000\000\000\000\000\000\000\186\255\000\000b\000\000\000\180\255\000\000\000\000\000\000\000\000\000\000\187\255\000\000P\255\000\000\000\000\000\000\000\000\000\000\000\000\171\255\000\000\000\000\003\255\000\000\000\000\b\000\001\000\000\000\014\001\000\000\142\255\000\000\193\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\142\255\173\255\000\000\000\000\204\255",(src/stage1/parser.ml[190,5724+16]..[204,6608+40]),None)
    ]
  structure_item (src/stage1/parser.ml[206,6651+0]..[211,6941+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[206,6651+4]..[206,6651+12])
          Ppat_var "yygindex" (src/stage1/parser.ml[206,6651+4]..[206,6651+12])
        expression (src/stage1/parser.ml[206,6651+15]..[211,6941+9])
          Pexp_constant PConst_string("\000\000\000\000\000\000}\000\000\000\000\000\000\000\000\000\000\000\000\000\200\000\248\255\000\000\000\000\220\255\236\255\214\255\000\000\000\000\000\000\000\000\000\000~\000\000\000\146\000\000\000\152\000\223\255\000\000\000\000\139\000\134\000\000\000\135\000",(src/stage1/parser.ml[206,6651+16]..[211,6941+8]),None)
    ]
  structure_item (src/stage1/parser.ml[213,6952+0]..[213,6952+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[213,6952+4]..[213,6952+15])
          Ppat_var "yytablesize" (src/stage1/parser.ml[213,6952+4]..[213,6952+15])
        expression (src/stage1/parser.ml[213,6952+18]..[213,6952+21])
          Pexp_constant PConst_int (556,None)
    ]
  structure_item (src/stage1/parser.ml[214,6974+0]..[284,11553+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[214,6974+4]..[214,6974+11])
          Ppat_var "yytable" (src/stage1/parser.ml[214,6974+4]..[214,6974+11])
        expression (src/stage1/parser.ml[214,6974+14]..[284,11553+33])
          Pexp_constant PConst_string("5\000B\0004\0008\0009\000\027\000'\000\029\000(\000.\000/\000\029\000\001\000B\000\031\000J\000=\000>\000?\000\"\000A\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000K\000\029\000\029\000H\000B\000\029\000$\000\029\000\020\000K\000\022\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000!\000\029\000\029\000d\000\029\000\023\000\025\000_\000\\\0000\0001\0002\000f\000\"\0002\0002\0002\0002\0002\0002\0002\000i\000kb\000K\000\029\000\012\000\012\000\012\000\012\000\012\000\012\000[\000\\\000e\0004\000.\000K\000K\000K\000l\000D\0000\000K\000\012\000\012\000\012\000\012\000\027\000\027\000\027\000\012\000L\000\012\000a\000L\000\012\000\n\000\n\000\n\000\n\000\n\000\n\000F\000 \000h\000S\000N\000L\000L\000L\000c\000g\000\000\000L\000\n\000\n\000\n\000\n\000\027\000\027\000\027\000\n\000m\000\n\000\000\000\000\000\nb\000\b\000\b\000\b\000\b\000\b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\b\000\b\000\b\000\b\000\000\000\027\000\000\000\b\000\000\000\b\000\000\000\000\000\b\000\005\000\006\000\007\000\b\000\t\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\011\000\012\000\r\000\014\000\000\000\000\000\000\000\015\000\000\000\016\000\000\000\000\000\017\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\t\000\000\000\t\000\000\000\000\000\t\000\011\000\011\000\011\000\011\000\011\000\011\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\011\000\011\000\011\000\011\000\000\000\024\000\000\000\011\000\024\000\011\000\000\000\024\000\011\000\000\000\024\000\024\000\024\000\000\000\000\000\000\000\024\000\024\000\024\000\024\000\000\000\000\000\000\000\024\000\024\000",(src/stage1/parser.ml[214,6974+15]..[284,11553+32]),None)
    ]
  structure_item (src/stage1/parser.ml[286,11588+0]..[356,16167+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[286,11588+4]..[286,11588+11])
          Ppat_var "yycheck" (src/stage1/parser.ml[286,11588+4]..[286,11588+11])
        expression (src/stage1/parser.ml[286,11588+14]..[356,16167+33])
          Pexp_constant PConst_string("$\000\000\000#\000-\000.\000\r\000\000\000\t\001\000\000\029\000\030\000\r\001\001\000\n\001\022\000\015\001\016\001\017\001\018\001\015\0018\000\001\001\002\001\003\001\004\001\005\001\006\001\007\001F\000\t\001\n\001C\000\029\001\r\001\030\001\015\001\027\001O\000\027\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\023\001\028\001\029\001\\\000\031\001\027\001\027\001W\000\007\001\023\001\024\001\025\001_\000\015\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001e\000i\000\n\001\023\001\024\001\025\001\014\001\015\001\016\001\017\001\018\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\007\001\028\001\029\001\030\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\016\001\017\001\018\001\030\001\012\001\023\001\024\001\025\001\015\001\b\001\024\001\029\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\r\001\028\001\025\001\030\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\023\001\024\001\025\001\023\001\024\001\025\001\015\001\r\001\016\001\017\001\018\001\014\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\007\001\028\001\030\001\n\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\023\001\024\001\025\001\t\001\022\001\023\001\024\001\025\001\n\001\014\001\n\001\029\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\007\001\028\001\n\001\n\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\029\001\007\001\011\001\014\001\t\001\023\001\024\001\025\001\022\001\029\001\014\001\029\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\007\001\028\001X\000\n\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\029\001\023\000b\000O\000J\000\023\001\024\001\025\001[\000a\000\255\255\029\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001k\000\028\001\255\255\255\255\031\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\b\001\255\255\n\001\255\255\012\001\b\001\255\255\b\001\255\255\012\001\255\255\012\001\255\255\255\255\022\001\023\001\024\001\025\001\255\255\022\001\028\001\022\001\023\001\024\001\025\001\028\001\255\255\028\001\001\001\002\001\003\001\004\001\005\001\006\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\015\001\255\255\255\255\255\255\019\001\020\001\021\001\022\001\255\255\024\001\255\255\026\001\255\255\028\001\255\255\030\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\015\001\255\255\255\255\255\255\019\001\020\001\021\001\022\001\255\255\024\001\255\255\026\001\255\255\028\001\255\255\255\255\031\001\001\001\002\001\003\001\004\001\005\001\006\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\015\001\255\255\255\255\255\255\019\001\020\001\021\001\022\001\255\255\024\001\255\255\026\001\255\255\028\001\255\255\255\255\031\001\001\001\002\001\003\001\004\001\005\001\006\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\019\001\020\001\021\001\022\001\023\001\255\255\255\255\026\001\255\255\028\001\255\255\255\255\031\001\001\001\002\001\003\001\004\001\005\001\006\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\019\001\020\001\021\001\022\001\255\255\024\001\255\255\026\001\255\255\028\001\255\255\255\255\031\001\001\001\002\001\003\001\004\001\005\001\006\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\019\001\020\001\021\001\022\001\255\255\255\255\255\255\026\001\255\255\028\001\255\255\255\255\031\001\001\001\002\001\003\001\004\001\005\001\006\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\019\001\020\001\021\001\022\001\255\255\255\255\255\255\026\001\255\255\028\001\255\255\255\255\031\001\001\001\002\001\003\001\004\001\005\001\006\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\019\001\020\001\021\001\022\001\255\255\007\001\255\255\026\001\n\001\028\001\255\255\r\001\031\001\255\255\016\001\017\001\018\001\255\255\255\255\255\255\022\001\023\001\024\001\025\001\255\255\255\255\255\255\029\001\030\001",(src/stage1/parser.ml[286,11588+15]..[356,16167+32]),None)
    ]
  structure_item (src/stage1/parser.ml[358,16202+0]..[387,16627+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[358,16202+4]..[358,16202+17])
          Ppat_var "yynames_const" (src/stage1/parser.ml[358,16202+4]..[358,16202+17])
        expression (src/stage1/parser.ml[358,16202+20]..[387,16627+3])
          Pexp_constant PConst_string("TOKEN\000TYPE\000LEFT\000RIGHT\000NONASSOC\000START\000PREC\000PUBLIC\000COLON\000BAR\000EOF\000EQUAL\000INLINE\000LPAREN\000RPAREN\000COMMA\000QUESTION\000STAR\000PLUS\000PARAMETER\000ON_ERROR_REDUCE\000PERCENTATTRIBUTE\000SEMI\000LET\000TILDE\000UNDERSCORE\000COLONEQUAL\000EQUALEQUAL\000",(src/stage1/parser.ml[358,16202+21]..[387,16627+2]),None)
    ]
  structure_item (src/stage1/parser.ml[389,16632+0]..[399,16796+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[389,16632+4]..[389,16632+17])
          Ppat_var "yynames_block" (src/stage1/parser.ml[389,16632+4]..[389,16632+17])
        expression (src/stage1/parser.ml[389,16632+20]..[399,16796+3])
          Pexp_constant PConst_string("LID\000UID\000QID\000HEADER\000OCAMLTYPE\000PERCENTPERCENT\000ACTION\000ATTRIBUTE\000GRAMMARATTRIBUTE\000",(src/stage1/parser.ml[389,16632+21]..[399,16796+2]),None)
    ]
  structure_item (src/stage1/parser.ml[401,16801+0]..[1014,37722+2])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[401,16801+4]..[401,16801+9])
          Ppat_var "yyact" (src/stage1/parser.ml[401,16801+4]..[401,16801+9])
        expression (src/stage1/parser.ml[401,16801+12]..[1014,37722+2])
          Pexp_array
          [
            expression (src/stage1/parser.ml[402,16816+2]..[402,16816+30])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[402,16816+7]..[402,16816+8])
                Ppat_any
              expression (src/stage1/parser.ml[402,16816+12]..[402,16816+29])
                Pexp_apply
                expression (src/stage1/parser.ml[402,16816+12]..[402,16816+20])
                  Pexp_ident "failwith" (src/stage1/parser.ml[402,16816+12]..[402,16816+20])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[402,16816+21]..[402,16816+29])
                      Pexp_constant PConst_string("parser",(src/stage1/parser.ml[402,16816+22]..[402,16816+28]),None)
                ]
            expression (src/stage1/parser.ml[403,16847+2]..[419,17429+41])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[403,16847+7]..[403,16847+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[403,16847+7]..[403,16847+24])
              expression (src/stage1/parser.ml[404,16875+4]..[419,17429+40])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[404,16875+8]..[404,16875+10])
                      Ppat_var "_1" (src/stage1/parser.ml[404,16875+8]..[404,16875+10])
                    expression (src/stage1/parser.ml[404,16875+13]..[404,16875+67])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[404,16875+14]..[404,16875+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[404,16875+14]..[404,16875+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[404,16875+14]..[404,16875+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[404,16875+31]..[404,16875+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[404,16875+31]..[404,16875+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[404,16875+49]..[404,16875+50])
                              Pexp_constant PConst_int (3,None)
                        ]
                      core_type (src/stage1/parser.ml[404,16875+53]..[404,16875+66])
                        Ptyp_var declarations
                ]
                expression (src/stage1/parser.ml[405,16946+4]..[419,17429+40])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[405,16946+8]..[405,16946+10])
                        Ppat_var "_2" (src/stage1/parser.ml[405,16946+8]..[405,16946+10])
                      expression (src/stage1/parser.ml[405,16946+13]..[405,16946+70])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[405,16946+14]..[405,16946+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[405,16946+14]..[405,16946+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[405,16946+14]..[405,16946+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[405,16946+31]..[405,16946+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[405,16946+31]..[405,16946+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[405,16946+49]..[405,16946+50])
                                Pexp_constant PConst_int (2,None)
                          ]
                        core_type (src/stage1/parser.ml[405,16946+53]..[405,16946+69])
                          Ptyp_constr "Lazy.t" (src/stage1/parser.ml[405,16946+63]..[405,16946+69])
                          [
                            core_type (src/stage1/parser.ml[405,16946+53]..[405,16946+62])
                              Ptyp_constr "Stretch.t" (src/stage1/parser.ml[405,16946+53]..[405,16946+62])
                              []
                          ]
                  ]
                  expression (src/stage1/parser.ml[406,17020+4]..[419,17429+40])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[406,17020+8]..[406,17020+10])
                          Ppat_var "_3" (src/stage1/parser.ml[406,17020+8]..[406,17020+10])
                        expression (src/stage1/parser.ml[406,17020+13]..[406,17020+60])
                          Pexp_constraint
                          expression (src/stage1/parser.ml[406,17020+14]..[406,17020+50])
                            Pexp_apply
                            expression (src/stage1/parser.ml[406,17020+14]..[406,17020+30])
                              Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[406,17020+14]..[406,17020+30])
                            [
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.ml[406,17020+31]..[406,17020+48])
                                  Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[406,17020+31]..[406,17020+48])
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.ml[406,17020+49]..[406,17020+50])
                                  Pexp_constant PConst_int (1,None)
                            ]
                          core_type (src/stage1/parser.ml[406,17020+53]..[406,17020+59])
                            Ptyp_var rules
                    ]
                    expression (src/stage1/parser.ml[407,17084+4]..[419,17429+40])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[407,17084+8]..[407,17084+10])
                            Ppat_var "_4" (src/stage1/parser.ml[407,17084+8]..[407,17084+10])
                          expression (src/stage1/parser.ml[407,17084+13]..[407,17084+63])
                            Pexp_constraint
                            expression (src/stage1/parser.ml[407,17084+14]..[407,17084+50])
                              Pexp_apply
                              expression (src/stage1/parser.ml[407,17084+14]..[407,17084+30])
                                Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[407,17084+14]..[407,17084+30])
                              [
                                <arg>
                                Nolabel
                                  expression (src/stage1/parser.ml[407,17084+31]..[407,17084+48])
                                    Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[407,17084+31]..[407,17084+48])
                                <arg>
                                Nolabel
                                  expression (src/stage1/parser.ml[407,17084+49]..[407,17084+50])
                                    Pexp_constant PConst_int (0,None)
                              ]
                            core_type (src/stage1/parser.ml[407,17084+53]..[407,17084+62])
                              Ptyp_var postlude
                      ]
                      expression (src/stage1/parser.ml[408,17151+4]..[419,17429+40])
                        Pexp_apply
                        expression (src/stage1/parser.ml[408,17151+4]..[408,17151+12])
                          Pexp_ident "Obj.repr" (src/stage1/parser.ml[408,17151+4]..[408,17151+12])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[408,17151+12]..[419,17429+40])
                              Pexp_constraint
                              expression (src/stage1/parser.mly[64,17194+4]..[71,17394+5])
                                Pexp_record
                                [
                                  "pg_filename" (src/stage1/parser.mly[66,17208+8]..[66,17208+19])
                                    expression (src/stage1/parser.mly[66,17208+31]..[66,17208+33])
                                      Pexp_constant PConst_string("",(src/stage1/parser.mly[66,17208+32]..[66,17208+32]),None)
                                  "pg_declarations" (src/stage1/parser.mly[67,17273+8]..[67,17273+23])
                                    expression (src/stage1/parser.mly[67,17273+31]..[67,17273+42])
                                      Pexp_apply
                                      expression (src/stage1/parser.mly[67,17273+31]..[67,17273+39])
                                        Pexp_ident "List.rev" (src/stage1/parser.mly[67,17273+31]..[67,17273+39])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/stage1/parser.mly[67,17273+40]..[67,17273+42])
                                            Pexp_ident "_1" (src/stage1/parser.mly[67,17273+40]..[67,17273+42])
                                      ]
                                  "pg_rules" (src/stage1/parser.mly[68,17317+8]..[68,17317+16])
                                    expression (src/stage1/parser.mly[68,17317+31]..[68,17317+33])
                                      Pexp_ident "_3" (src/stage1/parser.mly[68,17317+31]..[68,17317+33])
                                  "pg_postlude" (src/stage1/parser.mly[69,17352+8]..[69,17352+19])
                                    expression (src/stage1/parser.mly[69,17352+31]..[69,17352+33])
                                      Pexp_ident "_4" (src/stage1/parser.mly[69,17352+31]..[69,17352+33])
                                ]
                                None
                              core_type (src/stage1/parser.ml[419,17429+17]..[419,17429+39])
                                Ptyp_constr "Syntax.partial_grammar" (src/stage1/parser.ml[419,17429+17]..[419,17429+39])
                                []
                        ]
            expression (src/stage1/parser.ml[420,17471+2]..[425,17584+28])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[420,17471+7]..[420,17471+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[420,17471+7]..[420,17471+24])
              expression (src/stage1/parser.ml[421,17499+4]..[425,17584+27])
                Pexp_apply
                expression (src/stage1/parser.ml[421,17499+4]..[421,17499+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[421,17499+4]..[421,17499+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[421,17499+12]..[425,17584+27])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[75,17542+4]..[75,17542+12])
                        Pexp_construct "None" (src/stage1/parser.mly[75,17542+6]..[75,17542+10])
                        None
                      core_type (src/stage1/parser.ml[425,17584+17]..[425,17584+26])
                        Ptyp_var postlude
                ]
            expression (src/stage1/parser.ml[426,17613+2]..[432,17816+28])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[426,17613+7]..[426,17613+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[426,17613+7]..[426,17613+24])
              expression (src/stage1/parser.ml[427,17641+4]..[432,17816+27])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[427,17641+8]..[427,17641+10])
                      Ppat_var "_1" (src/stage1/parser.ml[427,17641+8]..[427,17641+10])
                    expression (src/stage1/parser.ml[427,17641+13]..[427,17641+70])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[427,17641+14]..[427,17641+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[427,17641+14]..[427,17641+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[427,17641+14]..[427,17641+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[427,17641+31]..[427,17641+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[427,17641+31]..[427,17641+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[427,17641+49]..[427,17641+50])
                              Pexp_constant PConst_int (0,None)
                        ]
                      core_type (src/stage1/parser.ml[427,17641+53]..[427,17641+69])
                        Ptyp_constr "Lazy.t" (src/stage1/parser.ml[427,17641+63]..[427,17641+69])
                        [
                          core_type (src/stage1/parser.ml[427,17641+53]..[427,17641+62])
                            Ptyp_constr "Stretch.t" (src/stage1/parser.ml[427,17641+53]..[427,17641+62])
                            []
                        ]
                ]
                expression (src/stage1/parser.ml[428,17715+4]..[432,17816+27])
                  Pexp_apply
                  expression (src/stage1/parser.ml[428,17715+4]..[428,17715+12])
                    Pexp_ident "Obj.repr" (src/stage1/parser.ml[428,17715+4]..[428,17715+12])
                  [
                    <arg>
                    Nolabel
                      expression (src/stage1/parser.ml[428,17715+12]..[432,17816+27])
                        Pexp_constraint
                        expression (src/stage1/parser.mly[77,17758+4]..[77,17758+28])
                          Pexp_construct "Some" (src/stage1/parser.mly[77,17758+6]..[77,17758+10])
                          Some
                            expression (src/stage1/parser.mly[77,17758+11]..[77,17758+26])
                              Pexp_apply
                              expression (src/stage1/parser.mly[77,17758+12]..[77,17758+22])
                                Pexp_ident "Lazy.force" (src/stage1/parser.mly[77,17758+12]..[77,17758+22])
                              [
                                <arg>
                                Nolabel
                                  expression (src/stage1/parser.mly[77,17758+23]..[77,17758+25])
                                    Pexp_ident "_1" (src/stage1/parser.mly[77,17758+23]..[77,17758+25])
                              ]
                        core_type (src/stage1/parser.ml[432,17816+17]..[432,17816+26])
                          Ptyp_var postlude
                  ]
            expression (src/stage1/parser.ml[433,17845+2]..[438,17956+32])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[433,17845+7]..[433,17845+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[433,17845+7]..[433,17845+24])
              expression (src/stage1/parser.ml[434,17873+4]..[438,17956+31])
                Pexp_apply
                expression (src/stage1/parser.ml[434,17873+4]..[434,17873+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[434,17873+4]..[434,17873+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[434,17873+12]..[438,17956+31])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[85,17916+4]..[85,17916+10])
                        Pexp_construct "[]" (src/stage1/parser.mly[85,17916+6]..[85,17916+8])
                        None
                      core_type (src/stage1/parser.ml[438,17956+17]..[438,17956+30])
                        Ptyp_var declarations
                ]
            expression (src/stage1/parser.ml[439,17989+2]..[446,18246+32])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[439,17989+7]..[439,17989+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[439,17989+7]..[439,17989+24])
              expression (src/stage1/parser.ml[440,18017+4]..[446,18246+31])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[440,18017+8]..[440,18017+10])
                      Ppat_var "_1" (src/stage1/parser.ml[440,18017+8]..[440,18017+10])
                    expression (src/stage1/parser.ml[440,18017+13]..[440,18017+67])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[440,18017+14]..[440,18017+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[440,18017+14]..[440,18017+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[440,18017+14]..[440,18017+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[440,18017+31]..[440,18017+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[440,18017+31]..[440,18017+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[440,18017+49]..[440,18017+50])
                              Pexp_constant PConst_int (1,None)
                        ]
                      core_type (src/stage1/parser.ml[440,18017+53]..[440,18017+66])
                        Ptyp_var declarations
                ]
                expression (src/stage1/parser.ml[441,18088+4]..[446,18246+31])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[441,18088+8]..[441,18088+10])
                        Ppat_var "_2" (src/stage1/parser.ml[441,18088+8]..[441,18088+10])
                      expression (src/stage1/parser.ml[441,18088+13]..[441,18088+66])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[441,18088+14]..[441,18088+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[441,18088+14]..[441,18088+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[441,18088+14]..[441,18088+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[441,18088+31]..[441,18088+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[441,18088+31]..[441,18088+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[441,18088+49]..[441,18088+50])
                                Pexp_constant PConst_int (0,None)
                          ]
                        core_type (src/stage1/parser.ml[441,18088+53]..[441,18088+65])
                          Ptyp_var declaration
                  ]
                  expression (src/stage1/parser.ml[442,18158+4]..[446,18246+31])
                    Pexp_apply
                    expression (src/stage1/parser.ml[442,18158+4]..[442,18158+12])
                      Pexp_ident "Obj.repr" (src/stage1/parser.ml[442,18158+4]..[442,18158+12])
                    [
                      <arg>
                      Nolabel
                        expression (src/stage1/parser.ml[442,18158+12]..[446,18246+31])
                          Pexp_constraint
                          expression (src/stage1/parser.mly[87,18201+4]..[87,18201+15])
                            Pexp_apply
                            expression (src/stage1/parser.mly[87,18201+9]..[87,18201+10])
                              Pexp_ident "@" (src/stage1/parser.mly[87,18201+9]..[87,18201+10])
                            [
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.mly[87,18201+6]..[87,18201+8])
                                  Pexp_ident "_2" (src/stage1/parser.mly[87,18201+6]..[87,18201+8])
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.mly[87,18201+11]..[87,18201+13])
                                  Pexp_ident "_1" (src/stage1/parser.mly[87,18201+11]..[87,18201+13])
                            ]
                          core_type (src/stage1/parser.ml[446,18246+17]..[446,18246+30])
                            Ptyp_var declarations
                    ]
            expression (src/stage1/parser.ml[447,18279+2]..[453,18461+32])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[447,18279+7]..[447,18279+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[447,18279+7]..[447,18279+24])
              expression (src/stage1/parser.ml[448,18307+4]..[453,18461+31])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[448,18307+8]..[448,18307+10])
                      Ppat_var "_1" (src/stage1/parser.ml[448,18307+8]..[448,18307+10])
                    expression (src/stage1/parser.ml[448,18307+13]..[448,18307+67])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[448,18307+14]..[448,18307+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[448,18307+14]..[448,18307+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[448,18307+14]..[448,18307+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[448,18307+31]..[448,18307+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[448,18307+31]..[448,18307+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[448,18307+49]..[448,18307+50])
                              Pexp_constant PConst_int (1,None)
                        ]
                      core_type (src/stage1/parser.ml[448,18307+53]..[448,18307+66])
                        Ptyp_var declarations
                ]
                expression (src/stage1/parser.ml[449,18378+4]..[453,18461+31])
                  Pexp_apply
                  expression (src/stage1/parser.ml[449,18378+4]..[449,18378+12])
                    Pexp_ident "Obj.repr" (src/stage1/parser.ml[449,18378+4]..[449,18378+12])
                  [
                    <arg>
                    Nolabel
                      expression (src/stage1/parser.ml[449,18378+12]..[453,18461+31])
                        Pexp_constraint
                        expression (src/stage1/parser.mly[89,18421+4]..[89,18421+10])
                          Pexp_ident "_1" (src/stage1/parser.mly[89,18421+6]..[89,18421+8])
                        core_type (src/stage1/parser.ml[453,18461+17]..[453,18461+30])
                          Ptyp_var declarations
                  ]
            expression (src/stage1/parser.ml[454,18494+2]..[460,18696+31])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[454,18494+7]..[454,18494+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[454,18494+7]..[454,18494+24])
              expression (src/stage1/parser.ml[455,18522+4]..[460,18696+30])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[455,18522+8]..[455,18522+10])
                      Ppat_var "_1" (src/stage1/parser.ml[455,18522+8]..[455,18522+10])
                    expression (src/stage1/parser.ml[455,18522+13]..[455,18522+63])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[455,18522+14]..[455,18522+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[455,18522+14]..[455,18522+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[455,18522+14]..[455,18522+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[455,18522+31]..[455,18522+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[455,18522+31]..[455,18522+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[455,18522+49]..[455,18522+50])
                              Pexp_constant PConst_int (0,None)
                        ]
                      core_type (src/stage1/parser.ml[455,18522+53]..[455,18522+62])
                        Ptyp_constr "Stretch.t" (src/stage1/parser.ml[455,18522+53]..[455,18522+62])
                        []
                ]
                expression (src/stage1/parser.ml[456,18589+4]..[460,18696+30])
                  Pexp_apply
                  expression (src/stage1/parser.ml[456,18589+4]..[456,18589+12])
                    Pexp_ident "Obj.repr" (src/stage1/parser.ml[456,18589+4]..[456,18589+12])
                  [
                    <arg>
                    Nolabel
                      expression (src/stage1/parser.ml[456,18589+12]..[460,18696+30])
                        Pexp_constraint
                        expression (src/stage1/parser.mly[93,18632+4]..[93,18632+34])
                          Pexp_construct "::" (src/stage1/parser.mly[93,18632+8]..[93,18632+32]) ghost
                          Some
                            expression (src/stage1/parser.mly[93,18632+8]..[93,18632+32]) ghost
                              Pexp_tuple
                              [
                                expression (src/stage1/parser.mly[93,18632+8]..[93,18632+30])
                                  Pexp_apply
                                  expression (src/stage1/parser.mly[93,18632+8]..[93,18632+19])
                                    Pexp_ident "unknown_pos" (src/stage1/parser.mly[93,18632+8]..[93,18632+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/stage1/parser.mly[93,18632+20]..[93,18632+30])
                                        Pexp_construct "DCode" (src/stage1/parser.mly[93,18632+21]..[93,18632+26])
                                        Some
                                          expression (src/stage1/parser.mly[93,18632+27]..[93,18632+29])
                                            Pexp_ident "_1" (src/stage1/parser.mly[93,18632+27]..[93,18632+29])
                                  ]
                                expression (src/stage1/parser.mly[93,18632+31]..[93,18632+32]) ghost
                                  Pexp_construct "[]" (src/stage1/parser.mly[93,18632+31]..[93,18632+32]) ghost
                                  None
                              ]
                        core_type (src/stage1/parser.ml[460,18696+17]..[460,18696+29])
                          Ptyp_var declaration
                  ]
            expression (src/stage1/parser.ml[461,18728+2]..[471,19123+31])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[461,18728+7]..[461,18728+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[461,18728+7]..[461,18728+24])
              expression (src/stage1/parser.ml[462,18756+4]..[471,19123+30])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[462,18756+8]..[462,18756+10])
                      Ppat_var "_2" (src/stage1/parser.ml[462,18756+8]..[462,18756+10])
                    expression (src/stage1/parser.ml[462,18756+13]..[462,18756+73])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[462,18756+14]..[462,18756+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[462,18756+14]..[462,18756+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[462,18756+14]..[462,18756+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[462,18756+31]..[462,18756+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[462,18756+31]..[462,18756+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[462,18756+49]..[462,18756+50])
                              Pexp_constant PConst_int (1,None)
                        ]
                      core_type (src/stage1/parser.ml[462,18756+53]..[462,18756+72])
                        Ptyp_var optional_ocamltype
                ]
                expression (src/stage1/parser.ml[463,18833+4]..[471,19123+30])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[463,18833+8]..[463,18833+10])
                        Ppat_var "_3" (src/stage1/parser.ml[463,18833+8]..[463,18833+10])
                      expression (src/stage1/parser.ml[463,18833+13]..[463,18833+64])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[463,18833+14]..[463,18833+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[463,18833+14]..[463,18833+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[463,18833+14]..[463,18833+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[463,18833+31]..[463,18833+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[463,18833+31]..[463,18833+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[463,18833+49]..[463,18833+50])
                                Pexp_constant PConst_int (0,None)
                          ]
                        core_type (src/stage1/parser.ml[463,18833+53]..[463,18833+63])
                          Ptyp_var terminals
                  ]
                  expression (src/stage1/parser.ml[464,18901+4]..[471,19123+30])
                    Pexp_apply
                    expression (src/stage1/parser.ml[464,18901+4]..[464,18901+12])
                      Pexp_ident "Obj.repr" (src/stage1/parser.ml[464,18901+4]..[464,18901+12])
                    [
                      <arg>
                      Nolabel
                        expression (src/stage1/parser.ml[464,18901+12]..[471,19123+30])
                          Pexp_constraint
                          expression (src/stage1/parser.mly[96,18944+4]..[99,19080+13])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/stage1/parser.mly[96,18944+10]..[96,18944+16])
                                  Ppat_tuple
                                  [
                                    pattern (src/stage1/parser.mly[96,18944+10]..[96,18944+12])
                                      Ppat_var "ty" (src/stage1/parser.mly[96,18944+10]..[96,18944+12])
                                    pattern (src/stage1/parser.mly[96,18944+14]..[96,18944+16])
                                      Ppat_var "ts" (src/stage1/parser.mly[96,18944+14]..[96,18944+16])
                                  ]
                                expression (src/stage1/parser.mly[96,18944+19]..[96,18944+25])
                                  Pexp_tuple
                                  [
                                    expression (src/stage1/parser.mly[96,18944+19]..[96,18944+21])
                                      Pexp_ident "_2" (src/stage1/parser.mly[96,18944+19]..[96,18944+21])
                                    expression (src/stage1/parser.mly[96,18944+23]..[96,18944+25])
                                      Pexp_ident "_3" (src/stage1/parser.mly[96,18944+23]..[96,18944+25])
                                  ]
                            ]
                            expression (src/stage1/parser.mly[97,18973+6]..[99,19080+11])
                              Pexp_apply
                              expression (src/stage1/parser.mly[97,18973+6]..[97,18973+14])
                                Pexp_ident "List.map" (src/stage1/parser.mly[97,18973+6]..[97,18973+14])
                              [
                                <arg>
                                Nolabel
                                  expression (src/stage1/parser.mly[97,18973+15]..[99,19080+8])
                                    Pexp_apply
                                    expression (src/stage1/parser.mly[97,18973+16]..[97,18973+29])
                                      Pexp_ident "Positions.map" (src/stage1/parser.mly[97,18973+16]..[97,18973+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/stage1/parser.mly[97,18973+30]..[99,19080+7])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (src/stage1/parser.mly[97,18973+35]..[97,18973+59])
                                            Ppat_tuple
                                            [
                                              pattern (src/stage1/parser.mly[97,18973+36]..[97,18973+44])
                                                Ppat_var "terminal" (src/stage1/parser.mly[97,18973+36]..[97,18973+44])
                                              pattern (src/stage1/parser.mly[97,18973+46]..[97,18973+51])
                                                Ppat_var "alias" (src/stage1/parser.mly[97,18973+46]..[97,18973+51])
                                              pattern (src/stage1/parser.mly[97,18973+53]..[97,18973+58])
                                                Ppat_var "attrs" (src/stage1/parser.mly[97,18973+53]..[97,18973+58])
                                            ]
                                          expression (src/stage1/parser.mly[98,19036+8]..[98,19036+43])
                                            Pexp_construct "DToken" (src/stage1/parser.mly[98,19036+8]..[98,19036+14])
                                            Some
                                              expression (src/stage1/parser.mly[98,19036+15]..[98,19036+43])
                                                Pexp_tuple
                                                [
                                                  expression (src/stage1/parser.mly[98,19036+16]..[98,19036+18])
                                                    Pexp_ident "ty" (src/stage1/parser.mly[98,19036+16]..[98,19036+18])
                                                  expression (src/stage1/parser.mly[98,19036+20]..[98,19036+28])
                                                    Pexp_ident "terminal" (src/stage1/parser.mly[98,19036+20]..[98,19036+28])
                                                  expression (src/stage1/parser.mly[98,19036+30]..[98,19036+35])
                                                    Pexp_ident "alias" (src/stage1/parser.mly[98,19036+30]..[98,19036+35])
                                                  expression (src/stage1/parser.mly[98,19036+37]..[98,19036+42])
                                                    Pexp_ident "attrs" (src/stage1/parser.mly[98,19036+37]..[98,19036+42])
                                                ]
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/stage1/parser.mly[99,19080+9]..[99,19080+11])
                                    Pexp_ident "ts" (src/stage1/parser.mly[99,19080+9]..[99,19080+11])
                              ]
                          core_type (src/stage1/parser.ml[471,19123+17]..[471,19123+29])
                            Ptyp_var declaration
                    ]
            expression (src/stage1/parser.ml[472,19155+2]..[478,19403+31])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[472,19155+7]..[472,19155+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[472,19155+7]..[472,19155+24])
              expression (src/stage1/parser.ml[473,19183+4]..[478,19403+30])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[473,19183+8]..[473,19183+10])
                      Ppat_var "_2" (src/stage1/parser.ml[473,19183+8]..[473,19183+10])
                    expression (src/stage1/parser.ml[473,19183+13]..[473,19183+67])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[473,19183+14]..[473,19183+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[473,19183+14]..[473,19183+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[473,19183+14]..[473,19183+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[473,19183+31]..[473,19183+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[473,19183+31]..[473,19183+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[473,19183+49]..[473,19183+50])
                              Pexp_constant PConst_int (0,None)
                        ]
                      core_type (src/stage1/parser.ml[473,19183+53]..[473,19183+66])
                        Ptyp_var nonterminals
                ]
                expression (src/stage1/parser.ml[474,19254+4]..[478,19403+30])
                  Pexp_apply
                  expression (src/stage1/parser.ml[474,19254+4]..[474,19254+12])
                    Pexp_ident "Obj.repr" (src/stage1/parser.ml[474,19254+4]..[474,19254+12])
                  [
                    <arg>
                    Nolabel
                      expression (src/stage1/parser.ml[474,19254+12]..[478,19403+30])
                        Pexp_constraint
                        expression (src/stage1/parser.mly[102,19298+4]..[102,19298+75])
                          Pexp_apply
                          expression (src/stage1/parser.mly[102,19298+6]..[102,19298+14])
                            Pexp_ident "List.map" (src/stage1/parser.mly[102,19298+6]..[102,19298+14])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.mly[102,19298+15]..[102,19298+70])
                                Pexp_apply
                                expression (src/stage1/parser.mly[102,19298+16]..[102,19298+29])
                                  Pexp_ident "Positions.map" (src/stage1/parser.mly[102,19298+16]..[102,19298+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/stage1/parser.mly[102,19298+30]..[102,19298+69])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (src/stage1/parser.mly[102,19298+35]..[102,19298+46])
                                        Ppat_var "nonterminal" (src/stage1/parser.mly[102,19298+35]..[102,19298+46])
                                      expression (src/stage1/parser.mly[102,19298+50]..[102,19298+68])
                                        Pexp_construct "DStart" (src/stage1/parser.mly[102,19298+50]..[102,19298+56])
                                        Some
                                          expression (src/stage1/parser.mly[102,19298+57]..[102,19298+68])
                                            Pexp_ident "nonterminal" (src/stage1/parser.mly[102,19298+57]..[102,19298+68])
                                ]
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.mly[102,19298+71]..[102,19298+73])
                                Pexp_ident "_2" (src/stage1/parser.mly[102,19298+71]..[102,19298+73])
                          ]
                        core_type (src/stage1/parser.ml[478,19403+17]..[478,19403+29])
                          Ptyp_var declaration
                  ]
            expression (src/stage1/parser.ml[479,19435+2]..[487,19779+31])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[479,19435+7]..[479,19435+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[479,19435+7]..[479,19435+24])
              expression (src/stage1/parser.ml[480,19463+4]..[487,19779+30])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[480,19463+8]..[480,19463+10])
                      Ppat_var "_2" (src/stage1/parser.ml[480,19463+8]..[480,19463+10])
                    expression (src/stage1/parser.ml[480,19463+13]..[480,19463+71])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[480,19463+14]..[480,19463+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[480,19463+14]..[480,19463+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[480,19463+14]..[480,19463+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[480,19463+31]..[480,19463+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[480,19463+31]..[480,19463+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[480,19463+49]..[480,19463+50])
                              Pexp_constant PConst_int (1,None)
                        ]
                      core_type (src/stage1/parser.ml[480,19463+53]..[480,19463+70])
                        Ptyp_constr "Stretch.ocamltype" (src/stage1/parser.ml[480,19463+53]..[480,19463+70])
                        []
                ]
                expression (src/stage1/parser.ml[481,19538+4]..[487,19779+30])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[481,19538+8]..[481,19538+10])
                        Ppat_var "_3" (src/stage1/parser.ml[481,19538+8]..[481,19538+10])
                      expression (src/stage1/parser.ml[481,19538+13]..[481,19538+62])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[481,19538+14]..[481,19538+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[481,19538+14]..[481,19538+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[481,19538+14]..[481,19538+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[481,19538+31]..[481,19538+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[481,19538+31]..[481,19538+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[481,19538+49]..[481,19538+50])
                                Pexp_constant PConst_int (0,None)
                          ]
                        core_type (src/stage1/parser.ml[481,19538+53]..[481,19538+61])
                          Ptyp_var actuals
                  ]
                  expression (src/stage1/parser.ml[482,19604+4]..[487,19779+30])
                    Pexp_apply
                    expression (src/stage1/parser.ml[482,19604+4]..[482,19604+12])
                      Pexp_ident "Obj.repr" (src/stage1/parser.ml[482,19604+4]..[482,19604+12])
                    [
                      <arg>
                      Nolabel
                        expression (src/stage1/parser.ml[482,19604+12]..[487,19779+30])
                          Pexp_constraint
                          expression (src/stage1/parser.mly[105,19648+4]..[106,19706+43])
                            Pexp_apply
                            expression (src/stage1/parser.mly[105,19648+6]..[105,19648+14])
                              Pexp_ident "List.map" (src/stage1/parser.mly[105,19648+6]..[105,19648+14])
                            [
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.mly[105,19648+15]..[105,19648+57])
                                  Pexp_apply
                                  expression (src/stage1/parser.mly[105,19648+16]..[105,19648+29])
                                    Pexp_ident "Positions.map" (src/stage1/parser.mly[105,19648+16]..[105,19648+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/stage1/parser.mly[105,19648+30]..[105,19648+56])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/stage1/parser.mly[105,19648+35]..[105,19648+37])
                                          Ppat_var "nt" (src/stage1/parser.mly[105,19648+35]..[105,19648+37])
                                        expression (src/stage1/parser.mly[105,19648+41]..[105,19648+55])
                                          Pexp_construct "DType" (src/stage1/parser.mly[105,19648+41]..[105,19648+46])
                                          Some
                                            expression (src/stage1/parser.mly[105,19648+47]..[105,19648+55])
                                              Pexp_tuple
                                              [
                                                expression (src/stage1/parser.mly[105,19648+48]..[105,19648+50])
                                                  Pexp_ident "_2" (src/stage1/parser.mly[105,19648+48]..[105,19648+50])
                                                expression (src/stage1/parser.mly[105,19648+52]..[105,19648+54])
                                                  Pexp_ident "nt" (src/stage1/parser.mly[105,19648+52]..[105,19648+54])
                                              ]
                                  ]
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.mly[106,19706+8]..[106,19706+41])
                                  Pexp_apply
                                  expression (src/stage1/parser.mly[106,19706+9]..[106,19706+17])
                                    Pexp_ident "List.map" (src/stage1/parser.mly[106,19706+9]..[106,19706+17])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/stage1/parser.mly[106,19706+18]..[106,19706+37])
                                        Pexp_ident "Parameters.with_pos" (src/stage1/parser.mly[106,19706+18]..[106,19706+37])
                                    <arg>
                                    Nolabel
                                      expression (src/stage1/parser.mly[106,19706+38]..[106,19706+40])
                                        Pexp_ident "_3" (src/stage1/parser.mly[106,19706+38]..[106,19706+40])
                                  ]
                            ]
                          core_type (src/stage1/parser.ml[487,19779+17]..[487,19779+29])
                            Ptyp_var declaration
                    ]
            expression (src/stage1/parser.ml[488,19811+2]..[496,20177+31])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[488,19811+7]..[488,19811+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[488,19811+7]..[488,19811+24])
              expression (src/stage1/parser.ml[489,19839+4]..[496,20177+30])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[489,19839+8]..[489,19839+10])
                      Ppat_var "_2" (src/stage1/parser.ml[489,19839+8]..[489,19839+10])
                    expression (src/stage1/parser.ml[489,19839+13]..[489,19839+71])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[489,19839+14]..[489,19839+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[489,19839+14]..[489,19839+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[489,19839+14]..[489,19839+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[489,19839+31]..[489,19839+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[489,19839+31]..[489,19839+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[489,19839+49]..[489,19839+50])
                              Pexp_constant PConst_int (1,None)
                        ]
                      core_type (src/stage1/parser.ml[489,19839+53]..[489,19839+70])
                        Ptyp_constr "Stretch.ocamltype" (src/stage1/parser.ml[489,19839+53]..[489,19839+70])
                        []
                ]
                expression (src/stage1/parser.ml[490,19914+4]..[496,20177+30])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[490,19914+8]..[490,19914+10])
                        Ppat_var "_3" (src/stage1/parser.ml[490,19914+8]..[490,19914+10])
                      expression (src/stage1/parser.ml[490,19914+13]..[490,19914+67])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[490,19914+14]..[490,19914+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[490,19914+14]..[490,19914+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[490,19914+14]..[490,19914+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[490,19914+31]..[490,19914+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[490,19914+31]..[490,19914+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[490,19914+49]..[490,19914+50])
                                Pexp_constant PConst_int (0,None)
                          ]
                        core_type (src/stage1/parser.ml[490,19914+53]..[490,19914+66])
                          Ptyp_var nonterminals
                  ]
                  expression (src/stage1/parser.ml[491,19985+4]..[496,20177+30])
                    Pexp_apply
                    expression (src/stage1/parser.ml[491,19985+4]..[491,19985+12])
                      Pexp_ident "Obj.repr" (src/stage1/parser.ml[491,19985+4]..[491,19985+12])
                    [
                      <arg>
                      Nolabel
                        expression (src/stage1/parser.ml[491,19985+12]..[496,20177+30])
                          Pexp_constraint
                          expression (src/stage1/parser.mly[110,20029+4]..[111,20059+88])
                            Pexp_apply
                            expression (src/stage1/parser.mly[110,20029+6]..[110,20029+15])
                              Pexp_ident "Misc.mapd" (src/stage1/parser.mly[110,20029+6]..[110,20029+15])
                            [
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.mly[110,20029+16]..[111,20059+83])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/stage1/parser.mly[110,20029+21]..[110,20029+26])
                                    Ppat_var "ntloc" (src/stage1/parser.mly[110,20029+21]..[110,20029+26])
                                  expression (src/stage1/parser.mly[111,20059+8]..[111,20059+82])
                                    Pexp_apply
                                    expression (src/stage1/parser.mly[111,20059+8]..[111,20059+22])
                                      Pexp_ident "Positions.mapd" (src/stage1/parser.mly[111,20059+8]..[111,20059+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/stage1/parser.mly[111,20059+23]..[111,20059+76])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (src/stage1/parser.mly[111,20059+28]..[111,20059+30])
                                            Ppat_var "nt" (src/stage1/parser.mly[111,20059+28]..[111,20059+30])
                                          expression (src/stage1/parser.mly[111,20059+34]..[111,20059+75])
                                            Pexp_tuple
                                            [
                                              expression (src/stage1/parser.mly[111,20059+34]..[111,20059+43])
                                                Pexp_construct "DStart" (src/stage1/parser.mly[111,20059+34]..[111,20059+40])
                                                Some
                                                  expression (src/stage1/parser.mly[111,20059+41]..[111,20059+43])
                                                    Pexp_ident "nt" (src/stage1/parser.mly[111,20059+41]..[111,20059+43])
                                              expression (src/stage1/parser.mly[111,20059+45]..[111,20059+75])
                                                Pexp_construct "DType" (src/stage1/parser.mly[111,20059+45]..[111,20059+50])
                                                Some
                                                  expression (src/stage1/parser.mly[111,20059+51]..[111,20059+75])
                                                    Pexp_tuple
                                                    [
                                                      expression (src/stage1/parser.mly[111,20059+52]..[111,20059+54])
                                                        Pexp_ident "_2" (src/stage1/parser.mly[111,20059+52]..[111,20059+54])
                                                      expression (src/stage1/parser.mly[111,20059+56]..[111,20059+74])
                                                        Pexp_construct "ParameterVar" (src/stage1/parser.mly[111,20059+56]..[111,20059+68])
                                                        Some
                                                          expression (src/stage1/parser.mly[111,20059+69]..[111,20059+74])
                                                            Pexp_ident "ntloc" (src/stage1/parser.mly[111,20059+69]..[111,20059+74])
                                                    ]
                                            ]
                                      <arg>
                                      Nolabel
                                        expression (src/stage1/parser.mly[111,20059+77]..[111,20059+82])
                                          Pexp_ident "ntloc" (src/stage1/parser.mly[111,20059+77]..[111,20059+82])
                                    ]
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.mly[111,20059+84]..[111,20059+86])
                                  Pexp_ident "_3" (src/stage1/parser.mly[111,20059+84]..[111,20059+86])
                            ]
                          core_type (src/stage1/parser.ml[496,20177+17]..[496,20177+29])
                            Ptyp_var declaration
                    ]
            expression (src/stage1/parser.ml[497,20209+2]..[505,20623+31])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[497,20209+7]..[497,20209+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[497,20209+7]..[497,20209+24])
              expression (src/stage1/parser.ml[498,20237+4]..[505,20623+30])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[498,20237+8]..[498,20237+10])
                      Ppat_var "_1" (src/stage1/parser.ml[498,20237+8]..[498,20237+10])
                    expression (src/stage1/parser.ml[498,20237+13]..[498,20237+71])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[498,20237+14]..[498,20237+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[498,20237+14]..[498,20237+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[498,20237+14]..[498,20237+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[498,20237+31]..[498,20237+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[498,20237+31]..[498,20237+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[498,20237+49]..[498,20237+50])
                              Pexp_constant PConst_int (1,None)
                        ]
                      core_type (src/stage1/parser.ml[498,20237+53]..[498,20237+70])
                        Ptyp_var priority_keyword
                ]
                expression (src/stage1/parser.ml[499,20312+4]..[505,20623+30])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[499,20312+8]..[499,20312+10])
                        Ppat_var "_2" (src/stage1/parser.ml[499,20312+8]..[499,20312+10])
                      expression (src/stage1/parser.ml[499,20312+13]..[499,20312+62])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[499,20312+14]..[499,20312+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[499,20312+14]..[499,20312+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[499,20312+14]..[499,20312+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[499,20312+31]..[499,20312+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[499,20312+31]..[499,20312+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[499,20312+49]..[499,20312+50])
                                Pexp_constant PConst_int (0,None)
                          ]
                        core_type (src/stage1/parser.ml[499,20312+53]..[499,20312+61])
                          Ptyp_var symbols
                  ]
                  expression (src/stage1/parser.ml[500,20378+4]..[505,20623+30])
                    Pexp_apply
                    expression (src/stage1/parser.ml[500,20378+4]..[500,20378+12])
                      Pexp_ident "Obj.repr" (src/stage1/parser.ml[500,20378+4]..[500,20378+12])
                    [
                      <arg>
                      Nolabel
                        expression (src/stage1/parser.ml[500,20378+12]..[505,20623+30])
                          Pexp_constraint
                          expression (src/stage1/parser.mly[114,20422+4]..[115,20506+87])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/stage1/parser.mly[114,20422+10]..[114,20422+14])
                                  Ppat_var "prec" (src/stage1/parser.mly[114,20422+10]..[114,20422+14])
                                expression (src/stage1/parser.mly[114,20422+17]..[114,20422+80])
                                  Pexp_apply
                                  expression (src/stage1/parser.mly[114,20422+17]..[114,20422+47])
                                    Pexp_ident "ParserAux.new_precedence_level" (src/stage1/parser.mly[114,20422+17]..[114,20422+47])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/stage1/parser.mly[114,20422+48]..[114,20422+80])
                                        Pexp_tuple
                                        [
                                          expression (src/stage1/parser.mly[114,20422+49]..[114,20422+64])
                                            Pexp_apply
                                            expression (src/stage1/parser.mly[114,20422+49]..[114,20422+62])
                                              Pexp_ident "rhs_start_pos" (src/stage1/parser.mly[114,20422+49]..[114,20422+62])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/stage1/parser.mly[114,20422+63]..[114,20422+64])
                                                  Pexp_constant PConst_int (1,None)
                                            ]
                                          expression (src/stage1/parser.mly[114,20422+66]..[114,20422+79])
                                            Pexp_apply
                                            expression (src/stage1/parser.mly[114,20422+66]..[114,20422+77])
                                              Pexp_ident "rhs_end_pos" (src/stage1/parser.mly[114,20422+66]..[114,20422+77])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/stage1/parser.mly[114,20422+78]..[114,20422+79])
                                                  Pexp_constant PConst_int (1,None)
                                            ]
                                        ]
                                  ]
                            ]
                            expression (src/stage1/parser.mly[115,20506+6]..[115,20506+85])
                              Pexp_apply
                              expression (src/stage1/parser.mly[115,20506+6]..[115,20506+14])
                                Pexp_ident "List.map" (src/stage1/parser.mly[115,20506+6]..[115,20506+14])
                              [
                                <arg>
                                Nolabel
                                  expression (src/stage1/parser.mly[115,20506+15]..[115,20506+82])
                                    Pexp_apply
                                    expression (src/stage1/parser.mly[115,20506+16]..[115,20506+29])
                                      Pexp_ident "Positions.map" (src/stage1/parser.mly[115,20506+16]..[115,20506+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/stage1/parser.mly[115,20506+30]..[115,20506+81])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (src/stage1/parser.mly[115,20506+35]..[115,20506+41])
                                            Ppat_var "symbol" (src/stage1/parser.mly[115,20506+35]..[115,20506+41])
                                          expression (src/stage1/parser.mly[115,20506+45]..[115,20506+80])
                                            Pexp_construct "DTokenProperties" (src/stage1/parser.mly[115,20506+45]..[115,20506+61])
                                            Some
                                              expression (src/stage1/parser.mly[115,20506+62]..[115,20506+80])
                                                Pexp_tuple
                                                [
                                                  expression (src/stage1/parser.mly[115,20506+63]..[115,20506+69])
                                                    Pexp_ident "symbol" (src/stage1/parser.mly[115,20506+63]..[115,20506+69])
                                                  expression (src/stage1/parser.mly[115,20506+71]..[115,20506+73])
                                                    Pexp_ident "_1" (src/stage1/parser.mly[115,20506+71]..[115,20506+73])
                                                  expression (src/stage1/parser.mly[115,20506+75]..[115,20506+79])
                                                    Pexp_ident "prec" (src/stage1/parser.mly[115,20506+75]..[115,20506+79])
                                                ]
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/stage1/parser.mly[115,20506+83]..[115,20506+85])
                                    Pexp_ident "_2" (src/stage1/parser.mly[115,20506+83]..[115,20506+85])
                              ]
                          core_type (src/stage1/parser.ml[505,20623+17]..[505,20623+29])
                            Ptyp_var declaration
                    ]
            expression (src/stage1/parser.ml[506,20655+2]..[512,20871+31])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[506,20655+7]..[506,20655+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[506,20655+7]..[506,20655+24])
              expression (src/stage1/parser.ml[507,20683+4]..[512,20871+30])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[507,20683+8]..[507,20683+10])
                      Ppat_var "_2" (src/stage1/parser.ml[507,20683+8]..[507,20683+10])
                    expression (src/stage1/parser.ml[507,20683+13]..[507,20683+71])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[507,20683+14]..[507,20683+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[507,20683+14]..[507,20683+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[507,20683+14]..[507,20683+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[507,20683+31]..[507,20683+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[507,20683+31]..[507,20683+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[507,20683+49]..[507,20683+50])
                              Pexp_constant PConst_int (0,None)
                        ]
                      core_type (src/stage1/parser.ml[507,20683+53]..[507,20683+70])
                        Ptyp_constr "Stretch.ocamltype" (src/stage1/parser.ml[507,20683+53]..[507,20683+70])
                        []
                ]
                expression (src/stage1/parser.ml[508,20758+4]..[512,20871+30])
                  Pexp_apply
                  expression (src/stage1/parser.ml[508,20758+4]..[508,20758+12])
                    Pexp_ident "Obj.repr" (src/stage1/parser.ml[508,20758+4]..[508,20758+12])
                  [
                    <arg>
                    Nolabel
                      expression (src/stage1/parser.ml[508,20758+12]..[512,20871+30])
                        Pexp_constraint
                        expression (src/stage1/parser.mly[118,20802+4]..[118,20802+39])
                          Pexp_construct "::" (src/stage1/parser.mly[118,20802+8]..[118,20802+37]) ghost
                          Some
                            expression (src/stage1/parser.mly[118,20802+8]..[118,20802+37]) ghost
                              Pexp_tuple
                              [
                                expression (src/stage1/parser.mly[118,20802+8]..[118,20802+35])
                                  Pexp_apply
                                  expression (src/stage1/parser.mly[118,20802+8]..[118,20802+19])
                                    Pexp_ident "unknown_pos" (src/stage1/parser.mly[118,20802+8]..[118,20802+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/stage1/parser.mly[118,20802+20]..[118,20802+35])
                                        Pexp_construct "DParameter" (src/stage1/parser.mly[118,20802+21]..[118,20802+31])
                                        Some
                                          expression (src/stage1/parser.mly[118,20802+32]..[118,20802+34])
                                            Pexp_ident "_2" (src/stage1/parser.mly[118,20802+32]..[118,20802+34])
                                  ]
                                expression (src/stage1/parser.mly[118,20802+36]..[118,20802+37]) ghost
                                  Pexp_construct "[]" (src/stage1/parser.mly[118,20802+36]..[118,20802+37]) ghost
                                  None
                              ]
                        core_type (src/stage1/parser.ml[512,20871+17]..[512,20871+29])
                          Ptyp_var declaration
                  ]
            expression (src/stage1/parser.ml[513,20903+2]..[519,21125+31])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[513,20903+7]..[513,20903+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[513,20903+7]..[513,20903+24])
              expression (src/stage1/parser.ml[514,20931+4]..[519,21125+30])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[514,20931+8]..[514,20931+10])
                      Ppat_var "_1" (src/stage1/parser.ml[514,20931+8]..[514,20931+10])
                    expression (src/stage1/parser.ml[514,20931+13]..[514,20931+70])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[514,20931+14]..[514,20931+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[514,20931+14]..[514,20931+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[514,20931+14]..[514,20931+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[514,20931+31]..[514,20931+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[514,20931+31]..[514,20931+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[514,20931+49]..[514,20931+50])
                              Pexp_constant PConst_int (0,None)
                        ]
                      core_type (src/stage1/parser.ml[514,20931+53]..[514,20931+69])
                        Ptyp_constr "Syntax.attribute" (src/stage1/parser.ml[514,20931+53]..[514,20931+69])
                        []
                ]
                expression (src/stage1/parser.ml[515,21005+4]..[519,21125+30])
                  Pexp_apply
                  expression (src/stage1/parser.ml[515,21005+4]..[515,21005+12])
                    Pexp_ident "Obj.repr" (src/stage1/parser.ml[515,21005+4]..[515,21005+12])
                  [
                    <arg>
                    Nolabel
                      expression (src/stage1/parser.ml[515,21005+12]..[519,21125+30])
                        Pexp_constraint
                        expression (src/stage1/parser.mly[121,21049+4]..[121,21049+46])
                          Pexp_construct "::" (src/stage1/parser.mly[121,21049+8]..[121,21049+44]) ghost
                          Some
                            expression (src/stage1/parser.mly[121,21049+8]..[121,21049+44]) ghost
                              Pexp_tuple
                              [
                                expression (src/stage1/parser.mly[121,21049+8]..[121,21049+42])
                                  Pexp_apply
                                  expression (src/stage1/parser.mly[121,21049+8]..[121,21049+19])
                                    Pexp_ident "unknown_pos" (src/stage1/parser.mly[121,21049+8]..[121,21049+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/stage1/parser.mly[121,21049+20]..[121,21049+42])
                                        Pexp_construct "DGrammarAttribute" (src/stage1/parser.mly[121,21049+21]..[121,21049+38])
                                        Some
                                          expression (src/stage1/parser.mly[121,21049+39]..[121,21049+41])
                                            Pexp_ident "_1" (src/stage1/parser.mly[121,21049+39]..[121,21049+41])
                                  ]
                                expression (src/stage1/parser.mly[121,21049+43]..[121,21049+44]) ghost
                                  Pexp_construct "[]" (src/stage1/parser.mly[121,21049+43]..[121,21049+44]) ghost
                                  None
                              ]
                        core_type (src/stage1/parser.ml[519,21125+17]..[519,21125+29])
                          Ptyp_var declaration
                  ]
            expression (src/stage1/parser.ml[520,21157+2]..[527,21446+31])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[520,21157+7]..[520,21157+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[520,21157+7]..[520,21157+24])
              expression (src/stage1/parser.ml[521,21185+4]..[527,21446+30])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[521,21185+8]..[521,21185+10])
                      Ppat_var "_2" (src/stage1/parser.ml[521,21185+8]..[521,21185+10])
                    expression (src/stage1/parser.ml[521,21185+13]..[521,21185+62])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[521,21185+14]..[521,21185+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[521,21185+14]..[521,21185+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[521,21185+14]..[521,21185+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[521,21185+31]..[521,21185+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[521,21185+31]..[521,21185+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[521,21185+49]..[521,21185+50])
                              Pexp_constant PConst_int (1,None)
                        ]
                      core_type (src/stage1/parser.ml[521,21185+53]..[521,21185+61])
                        Ptyp_var actuals
                ]
                expression (src/stage1/parser.ml[522,21251+4]..[527,21446+30])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[522,21251+8]..[522,21251+10])
                        Ppat_var "_3" (src/stage1/parser.ml[522,21251+8]..[522,21251+10])
                      expression (src/stage1/parser.ml[522,21251+13]..[522,21251+65])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[522,21251+14]..[522,21251+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[522,21251+14]..[522,21251+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[522,21251+14]..[522,21251+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[522,21251+31]..[522,21251+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[522,21251+31]..[522,21251+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[522,21251+49]..[522,21251+50])
                                Pexp_constant PConst_int (0,None)
                          ]
                        core_type (src/stage1/parser.ml[522,21251+53]..[522,21251+64])
                          Ptyp_var attributes
                  ]
                  expression (src/stage1/parser.ml[523,21320+4]..[527,21446+30])
                    Pexp_apply
                    expression (src/stage1/parser.ml[523,21320+4]..[523,21320+12])
                      Pexp_ident "Obj.repr" (src/stage1/parser.ml[523,21320+4]..[523,21320+12])
                    [
                      <arg>
                      Nolabel
                        expression (src/stage1/parser.ml[523,21320+12]..[527,21446+30])
                          Pexp_constraint
                          expression (src/stage1/parser.mly[124,21364+4]..[124,21364+52])
                            Pexp_construct "::" (src/stage1/parser.mly[124,21364+8]..[124,21364+50]) ghost
                            Some
                              expression (src/stage1/parser.mly[124,21364+8]..[124,21364+50]) ghost
                                Pexp_tuple
                                [
                                  expression (src/stage1/parser.mly[124,21364+8]..[124,21364+48])
                                    Pexp_apply
                                    expression (src/stage1/parser.mly[124,21364+8]..[124,21364+19])
                                      Pexp_ident "unknown_pos" (src/stage1/parser.mly[124,21364+8]..[124,21364+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/stage1/parser.mly[124,21364+20]..[124,21364+48])
                                          Pexp_construct "DSymbolAttributes" (src/stage1/parser.mly[124,21364+21]..[124,21364+38])
                                          Some
                                            expression (src/stage1/parser.mly[124,21364+39]..[124,21364+47])
                                              Pexp_tuple
                                              [
                                                expression (src/stage1/parser.mly[124,21364+40]..[124,21364+42])
                                                  Pexp_ident "_2" (src/stage1/parser.mly[124,21364+40]..[124,21364+42])
                                                expression (src/stage1/parser.mly[124,21364+44]..[124,21364+46])
                                                  Pexp_ident "_3" (src/stage1/parser.mly[124,21364+44]..[124,21364+46])
                                              ]
                                    ]
                                  expression (src/stage1/parser.mly[124,21364+49]..[124,21364+50]) ghost
                                    Pexp_construct "[]" (src/stage1/parser.mly[124,21364+49]..[124,21364+50]) ghost
                                    None
                                ]
                          core_type (src/stage1/parser.ml[527,21446+17]..[527,21446+29])
                            Ptyp_var declaration
                    ]
            expression (src/stage1/parser.ml[528,21478+2]..[536,21816+31])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[528,21478+7]..[528,21478+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[528,21478+7]..[528,21478+24])
              expression (src/stage1/parser.ml[529,21506+4]..[536,21816+30])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[529,21506+8]..[529,21506+10])
                      Ppat_var "_2" (src/stage1/parser.ml[529,21506+8]..[529,21506+10])
                    expression (src/stage1/parser.ml[529,21506+13]..[529,21506+62])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[529,21506+14]..[529,21506+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[529,21506+14]..[529,21506+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[529,21506+14]..[529,21506+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[529,21506+31]..[529,21506+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[529,21506+31]..[529,21506+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[529,21506+49]..[529,21506+50])
                              Pexp_constant PConst_int (0,None)
                        ]
                      core_type (src/stage1/parser.ml[529,21506+53]..[529,21506+61])
                        Ptyp_var actuals
                ]
                expression (src/stage1/parser.ml[530,21572+4]..[536,21816+30])
                  Pexp_apply
                  expression (src/stage1/parser.ml[530,21572+4]..[530,21572+12])
                    Pexp_ident "Obj.repr" (src/stage1/parser.ml[530,21572+4]..[530,21572+12])
                  [
                    <arg>
                    Nolabel
                      expression (src/stage1/parser.ml[530,21572+12]..[536,21816+30])
                        Pexp_constraint
                        expression (src/stage1/parser.mly[127,21616+4]..[129,21743+43])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/stage1/parser.mly[127,21616+10]..[127,21616+14])
                                Ppat_var "prec" (src/stage1/parser.mly[127,21616+10]..[127,21616+14])
                              expression (src/stage1/parser.mly[127,21616+17]..[127,21616+54])
                                Pexp_apply
                                expression (src/stage1/parser.mly[127,21616+17]..[127,21616+52])
                                  Pexp_ident "ParserAux.new_on_error_reduce_level" (src/stage1/parser.mly[127,21616+17]..[127,21616+52])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/stage1/parser.mly[127,21616+52]..[127,21616+54])
                                      Pexp_construct "()" (src/stage1/parser.mly[127,21616+52]..[127,21616+54])
                                      None
                                ]
                          ]
                          expression (src/stage1/parser.mly[128,21674+6]..[129,21743+41])
                            Pexp_apply
                            expression (src/stage1/parser.mly[128,21674+6]..[128,21674+14])
                              Pexp_ident "List.map" (src/stage1/parser.mly[128,21674+6]..[128,21674+14])
                            [
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.mly[128,21674+15]..[128,21674+68])
                                  Pexp_apply
                                  expression (src/stage1/parser.mly[128,21674+16]..[128,21674+29])
                                    Pexp_ident "Positions.map" (src/stage1/parser.mly[128,21674+16]..[128,21674+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/stage1/parser.mly[128,21674+30]..[128,21674+67])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/stage1/parser.mly[128,21674+35]..[128,21674+37])
                                          Ppat_var "nt" (src/stage1/parser.mly[128,21674+35]..[128,21674+37])
                                        expression (src/stage1/parser.mly[128,21674+41]..[128,21674+66])
                                          Pexp_construct "DOnErrorReduce" (src/stage1/parser.mly[128,21674+41]..[128,21674+55])
                                          Some
                                            expression (src/stage1/parser.mly[128,21674+56]..[128,21674+66])
                                              Pexp_tuple
                                              [
                                                expression (src/stage1/parser.mly[128,21674+57]..[128,21674+59])
                                                  Pexp_ident "nt" (src/stage1/parser.mly[128,21674+57]..[128,21674+59])
                                                expression (src/stage1/parser.mly[128,21674+61]..[128,21674+65])
                                                  Pexp_ident "prec" (src/stage1/parser.mly[128,21674+61]..[128,21674+65])
                                              ]
                                  ]
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.mly[129,21743+8]..[129,21743+41])
                                  Pexp_apply
                                  expression (src/stage1/parser.mly[129,21743+9]..[129,21743+17])
                                    Pexp_ident "List.map" (src/stage1/parser.mly[129,21743+9]..[129,21743+17])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/stage1/parser.mly[129,21743+18]..[129,21743+37])
                                        Pexp_ident "Parameters.with_pos" (src/stage1/parser.mly[129,21743+18]..[129,21743+37])
                                    <arg>
                                    Nolabel
                                      expression (src/stage1/parser.mly[129,21743+38]..[129,21743+40])
                                        Pexp_ident "_2" (src/stage1/parser.mly[129,21743+38]..[129,21743+40])
                                  ]
                            ]
                        core_type (src/stage1/parser.ml[536,21816+17]..[536,21816+29])
                          Ptyp_var declaration
                  ]
            expression (src/stage1/parser.ml[537,21848+2]..[542,21962+38])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[537,21848+7]..[537,21848+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[537,21848+7]..[537,21848+24])
              expression (src/stage1/parser.ml[538,21876+4]..[542,21962+37])
                Pexp_apply
                expression (src/stage1/parser.ml[538,21876+4]..[538,21876+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[538,21876+4]..[538,21876+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[538,21876+12]..[542,21962+37])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[133,21920+4]..[133,21920+12])
                        Pexp_construct "None" (src/stage1/parser.mly[133,21920+6]..[133,21920+10])
                        None
                      core_type (src/stage1/parser.ml[542,21962+17]..[542,21962+36])
                        Ptyp_var optional_ocamltype
                ]
            expression (src/stage1/parser.ml[543,22001+2]..[549,22193+38])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[543,22001+7]..[543,22001+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[543,22001+7]..[543,22001+24])
              expression (src/stage1/parser.ml[544,22029+4]..[549,22193+37])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[544,22029+8]..[544,22029+10])
                      Ppat_var "_1" (src/stage1/parser.ml[544,22029+8]..[544,22029+10])
                    expression (src/stage1/parser.ml[544,22029+13]..[544,22029+71])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[544,22029+14]..[544,22029+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[544,22029+14]..[544,22029+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[544,22029+14]..[544,22029+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[544,22029+31]..[544,22029+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[544,22029+31]..[544,22029+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[544,22029+49]..[544,22029+50])
                              Pexp_constant PConst_int (0,None)
                        ]
                      core_type (src/stage1/parser.ml[544,22029+53]..[544,22029+70])
                        Ptyp_constr "Stretch.ocamltype" (src/stage1/parser.ml[544,22029+53]..[544,22029+70])
                        []
                ]
                expression (src/stage1/parser.ml[545,22104+4]..[549,22193+37])
                  Pexp_apply
                  expression (src/stage1/parser.ml[545,22104+4]..[545,22104+12])
                    Pexp_ident "Obj.repr" (src/stage1/parser.ml[545,22104+4]..[545,22104+12])
                  [
                    <arg>
                    Nolabel
                      expression (src/stage1/parser.ml[545,22104+12]..[549,22193+37])
                        Pexp_constraint
                        expression (src/stage1/parser.mly[135,22148+4]..[135,22148+15])
                          Pexp_construct "Some" (src/stage1/parser.mly[135,22148+6]..[135,22148+10])
                          Some
                            expression (src/stage1/parser.mly[135,22148+11]..[135,22148+13])
                              Pexp_ident "_1" (src/stage1/parser.mly[135,22148+11]..[135,22148+13])
                        core_type (src/stage1/parser.ml[549,22193+17]..[549,22193+36])
                          Ptyp_var optional_ocamltype
                  ]
            expression (src/stage1/parser.ml[550,22232+2]..[555,22351+36])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[550,22232+7]..[550,22232+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[550,22232+7]..[550,22232+24])
              expression (src/stage1/parser.ml[551,22260+4]..[555,22351+35])
                Pexp_apply
                expression (src/stage1/parser.ml[551,22260+4]..[551,22260+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[551,22260+4]..[551,22260+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[551,22260+12]..[555,22351+35])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[139,22304+4]..[139,22304+17])
                        Pexp_construct "LeftAssoc" (src/stage1/parser.mly[139,22304+6]..[139,22304+15])
                        None
                      core_type (src/stage1/parser.ml[555,22351+17]..[555,22351+34])
                        Ptyp_var priority_keyword
                ]
            expression (src/stage1/parser.ml[556,22388+2]..[561,22508+36])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[556,22388+7]..[556,22388+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[556,22388+7]..[556,22388+24])
              expression (src/stage1/parser.ml[557,22416+4]..[561,22508+35])
                Pexp_apply
                expression (src/stage1/parser.ml[557,22416+4]..[557,22416+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[557,22416+4]..[557,22416+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[557,22416+12]..[561,22508+35])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[141,22460+4]..[141,22460+18])
                        Pexp_construct "RightAssoc" (src/stage1/parser.mly[141,22460+6]..[141,22460+16])
                        None
                      core_type (src/stage1/parser.ml[561,22508+17]..[561,22508+34])
                        Ptyp_var priority_keyword
                ]
            expression (src/stage1/parser.ml[562,22545+2]..[567,22663+36])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[562,22545+7]..[562,22545+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[562,22545+7]..[562,22545+24])
              expression (src/stage1/parser.ml[563,22573+4]..[567,22663+35])
                Pexp_apply
                expression (src/stage1/parser.ml[563,22573+4]..[563,22573+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[563,22573+4]..[563,22573+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[563,22573+12]..[567,22663+35])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[143,22617+4]..[143,22617+16])
                        Pexp_construct "NonAssoc" (src/stage1/parser.mly[143,22617+6]..[143,22617+14])
                        None
                      core_type (src/stage1/parser.ml[567,22663+17]..[567,22663+34])
                        Ptyp_var priority_keyword
                ]
            expression (src/stage1/parser.ml[568,22700+2]..[573,22812+27])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[568,22700+7]..[568,22700+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[568,22700+7]..[568,22700+24])
              expression (src/stage1/parser.ml[569,22728+4]..[573,22812+26])
                Pexp_apply
                expression (src/stage1/parser.ml[569,22728+4]..[569,22728+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[569,22728+4]..[569,22728+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[569,22728+12]..[573,22812+26])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[159,22772+4]..[159,22772+10])
                        Pexp_construct "[]" (src/stage1/parser.mly[159,22772+6]..[159,22772+8])
                        None
                      core_type (src/stage1/parser.ml[573,22812+17]..[573,22812+25])
                        Ptyp_var symbols
                ]
            expression (src/stage1/parser.ml[574,22840+2]..[582,23162+27])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[574,22840+7]..[574,22840+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[574,22840+7]..[574,22840+24])
              expression (src/stage1/parser.ml[575,22868+4]..[582,23162+26])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[575,22868+8]..[575,22868+10])
                      Ppat_var "_1" (src/stage1/parser.ml[575,22868+8]..[575,22868+10])
                    expression (src/stage1/parser.ml[575,22868+13]..[575,22868+62])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[575,22868+14]..[575,22868+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[575,22868+14]..[575,22868+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[575,22868+14]..[575,22868+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[575,22868+31]..[575,22868+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[575,22868+31]..[575,22868+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[575,22868+49]..[575,22868+50])
                              Pexp_constant PConst_int (2,None)
                        ]
                      core_type (src/stage1/parser.ml[575,22868+53]..[575,22868+61])
                        Ptyp_var symbols
                ]
                expression (src/stage1/parser.ml[576,22934+4]..[582,23162+26])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[576,22934+8]..[576,22934+10])
                        Ppat_var "_2" (src/stage1/parser.ml[576,22934+8]..[576,22934+10])
                      expression (src/stage1/parser.ml[576,22934+13]..[576,22934+69])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[576,22934+14]..[576,22934+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[576,22934+14]..[576,22934+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[576,22934+14]..[576,22934+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[576,22934+31]..[576,22934+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[576,22934+31]..[576,22934+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[576,22934+49]..[576,22934+50])
                                Pexp_constant PConst_int (1,None)
                          ]
                        core_type (src/stage1/parser.ml[576,22934+53]..[576,22934+68])
                          Ptyp_var optional_comma
                  ]
                  expression (src/stage1/parser.ml[577,23007+4]..[582,23162+26])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[577,23007+8]..[577,23007+10])
                          Ppat_var "_3" (src/stage1/parser.ml[577,23007+8]..[577,23007+10])
                        expression (src/stage1/parser.ml[577,23007+13]..[577,23007+61])
                          Pexp_constraint
                          expression (src/stage1/parser.ml[577,23007+14]..[577,23007+50])
                            Pexp_apply
                            expression (src/stage1/parser.ml[577,23007+14]..[577,23007+30])
                              Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[577,23007+14]..[577,23007+30])
                            [
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.ml[577,23007+31]..[577,23007+48])
                                  Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[577,23007+31]..[577,23007+48])
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.ml[577,23007+49]..[577,23007+50])
                                  Pexp_constant PConst_int (0,None)
                            ]
                          core_type (src/stage1/parser.ml[577,23007+53]..[577,23007+60])
                            Ptyp_var symbol
                    ]
                    expression (src/stage1/parser.ml[578,23072+4]..[582,23162+26])
                      Pexp_apply
                      expression (src/stage1/parser.ml[578,23072+4]..[578,23072+12])
                        Pexp_ident "Obj.repr" (src/stage1/parser.ml[578,23072+4]..[578,23072+12])
                      [
                        <arg>
                        Nolabel
                          expression (src/stage1/parser.ml[578,23072+12]..[582,23162+26])
                            Pexp_constraint
                            expression (src/stage1/parser.mly[161,23116+4]..[161,23116+16])
                              Pexp_construct "::" (src/stage1/parser.mly[161,23116+9]..[161,23116+11])
                              Some
                                expression (src/stage1/parser.mly[161,23116+6]..[161,23116+14]) ghost
                                  Pexp_tuple
                                  [
                                    expression (src/stage1/parser.mly[161,23116+6]..[161,23116+8])
                                      Pexp_ident "_3" (src/stage1/parser.mly[161,23116+6]..[161,23116+8])
                                    expression (src/stage1/parser.mly[161,23116+12]..[161,23116+14])
                                      Pexp_ident "_1" (src/stage1/parser.mly[161,23116+12]..[161,23116+14])
                                  ]
                            core_type (src/stage1/parser.ml[582,23162+17]..[582,23162+25])
                              Ptyp_var symbols
                      ]
            expression (src/stage1/parser.ml[583,23190+2]..[589,23384+26])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[583,23190+7]..[583,23190+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[583,23190+7]..[583,23190+24])
              expression (src/stage1/parser.ml[584,23218+4]..[589,23384+25])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[584,23218+8]..[584,23218+10])
                      Ppat_var "_1" (src/stage1/parser.ml[584,23218+8]..[584,23218+10])
                    expression (src/stage1/parser.ml[584,23218+13]..[584,23218+78])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[584,23218+14]..[584,23218+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[584,23218+14]..[584,23218+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[584,23218+14]..[584,23218+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[584,23218+31]..[584,23218+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[584,23218+31]..[584,23218+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[584,23218+49]..[584,23218+50])
                              Pexp_constant PConst_int (0,None)
                        ]
                      core_type (src/stage1/parser.ml[584,23218+53]..[584,23218+77])
                        Ptyp_constr "Positions.located" (src/stage1/parser.ml[584,23218+60]..[584,23218+77])
                        [
                          core_type (src/stage1/parser.ml[584,23218+53]..[584,23218+59])
                            Ptyp_constr "string" (src/stage1/parser.ml[584,23218+53]..[584,23218+59])
                            []
                        ]
                ]
                expression (src/stage1/parser.ml[585,23300+4]..[589,23384+25])
                  Pexp_apply
                  expression (src/stage1/parser.ml[585,23300+4]..[585,23300+12])
                    Pexp_ident "Obj.repr" (src/stage1/parser.ml[585,23300+4]..[585,23300+12])
                  [
                    <arg>
                    Nolabel
                      expression (src/stage1/parser.ml[585,23300+12]..[589,23384+25])
                        Pexp_constraint
                        expression (src/stage1/parser.mly[165,23344+4]..[165,23344+10])
                          Pexp_ident "_1" (src/stage1/parser.mly[165,23344+6]..[165,23344+8])
                        core_type (src/stage1/parser.ml[589,23384+17]..[589,23384+24])
                          Ptyp_var symbol
                  ]
            expression (src/stage1/parser.ml[590,23411+2]..[596,23605+26])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[590,23411+7]..[590,23411+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[590,23411+7]..[590,23411+24])
              expression (src/stage1/parser.ml[591,23439+4]..[596,23605+25])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[591,23439+8]..[591,23439+10])
                      Ppat_var "_1" (src/stage1/parser.ml[591,23439+8]..[591,23439+10])
                    expression (src/stage1/parser.ml[591,23439+13]..[591,23439+78])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[591,23439+14]..[591,23439+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[591,23439+14]..[591,23439+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[591,23439+14]..[591,23439+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[591,23439+31]..[591,23439+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[591,23439+31]..[591,23439+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[591,23439+49]..[591,23439+50])
                              Pexp_constant PConst_int (0,None)
                        ]
                      core_type (src/stage1/parser.ml[591,23439+53]..[591,23439+77])
                        Ptyp_constr "Positions.located" (src/stage1/parser.ml[591,23439+60]..[591,23439+77])
                        [
                          core_type (src/stage1/parser.ml[591,23439+53]..[591,23439+59])
                            Ptyp_constr "string" (src/stage1/parser.ml[591,23439+53]..[591,23439+59])
                            []
                        ]
                ]
                expression (src/stage1/parser.ml[592,23521+4]..[596,23605+25])
                  Pexp_apply
                  expression (src/stage1/parser.ml[592,23521+4]..[592,23521+12])
                    Pexp_ident "Obj.repr" (src/stage1/parser.ml[592,23521+4]..[592,23521+12])
                  [
                    <arg>
                    Nolabel
                      expression (src/stage1/parser.ml[592,23521+12]..[596,23605+25])
                        Pexp_constraint
                        expression (src/stage1/parser.mly[167,23565+4]..[167,23565+10])
                          Pexp_ident "_1" (src/stage1/parser.mly[167,23565+6]..[167,23565+8])
                        core_type (src/stage1/parser.ml[596,23605+17]..[596,23605+24])
                          Ptyp_var symbol
                  ]
            expression (src/stage1/parser.ml[597,23632+2]..[603,23826+26])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[597,23632+7]..[597,23632+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[597,23632+7]..[597,23632+24])
              expression (src/stage1/parser.ml[598,23660+4]..[603,23826+25])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[598,23660+8]..[598,23660+10])
                      Ppat_var "_1" (src/stage1/parser.ml[598,23660+8]..[598,23660+10])
                    expression (src/stage1/parser.ml[598,23660+13]..[598,23660+78])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[598,23660+14]..[598,23660+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[598,23660+14]..[598,23660+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[598,23660+14]..[598,23660+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[598,23660+31]..[598,23660+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[598,23660+31]..[598,23660+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[598,23660+49]..[598,23660+50])
                              Pexp_constant PConst_int (0,None)
                        ]
                      core_type (src/stage1/parser.ml[598,23660+53]..[598,23660+77])
                        Ptyp_constr "Positions.located" (src/stage1/parser.ml[598,23660+60]..[598,23660+77])
                        [
                          core_type (src/stage1/parser.ml[598,23660+53]..[598,23660+59])
                            Ptyp_constr "string" (src/stage1/parser.ml[598,23660+53]..[598,23660+59])
                            []
                        ]
                ]
                expression (src/stage1/parser.ml[599,23742+4]..[603,23826+25])
                  Pexp_apply
                  expression (src/stage1/parser.ml[599,23742+4]..[599,23742+12])
                    Pexp_ident "Obj.repr" (src/stage1/parser.ml[599,23742+4]..[599,23742+12])
                  [
                    <arg>
                    Nolabel
                      expression (src/stage1/parser.ml[599,23742+12]..[603,23826+25])
                        Pexp_constraint
                        expression (src/stage1/parser.mly[169,23786+4]..[169,23786+10])
                          Pexp_ident "_1" (src/stage1/parser.mly[169,23786+6]..[169,23786+8])
                        core_type (src/stage1/parser.ml[603,23826+17]..[603,23826+24])
                          Ptyp_var symbol
                  ]
            expression (src/stage1/parser.ml[604,23853+2]..[609,23965+34])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[604,23853+7]..[604,23853+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[604,23853+7]..[604,23853+24])
              expression (src/stage1/parser.ml[605,23881+4]..[609,23965+33])
                Pexp_apply
                expression (src/stage1/parser.ml[605,23881+4]..[605,23881+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[605,23881+4]..[605,23881+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[605,23881+12]..[609,23965+33])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[173,23925+4]..[173,23925+10])
                        Pexp_construct "()" (src/stage1/parser.mly[173,23925+6]..[173,23925+8])
                        None
                      core_type (src/stage1/parser.ml[609,23965+17]..[609,23965+32])
                        Ptyp_var optional_comma
                ]
            expression (src/stage1/parser.ml[610,24000+2]..[615,24112+34])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[610,24000+7]..[610,24000+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[610,24000+7]..[610,24000+24])
              expression (src/stage1/parser.ml[611,24028+4]..[615,24112+33])
                Pexp_apply
                expression (src/stage1/parser.ml[611,24028+4]..[611,24028+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[611,24028+4]..[611,24028+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[611,24028+12]..[615,24112+33])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[175,24072+4]..[175,24072+10])
                        Pexp_construct "()" (src/stage1/parser.mly[175,24072+6]..[175,24072+8])
                        None
                      core_type (src/stage1/parser.ml[615,24112+17]..[615,24112+32])
                        Ptyp_var optional_comma
                ]
            expression (src/stage1/parser.ml[616,24147+2]..[621,24259+30])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[616,24147+7]..[616,24147+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[616,24147+7]..[616,24147+24])
              expression (src/stage1/parser.ml[617,24175+4]..[621,24259+29])
                Pexp_apply
                expression (src/stage1/parser.ml[617,24175+4]..[617,24175+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[617,24175+4]..[617,24175+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[617,24175+12]..[621,24259+29])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[179,24219+4]..[179,24219+10])
                        Pexp_construct "[]" (src/stage1/parser.mly[179,24219+6]..[179,24219+8])
                        None
                      core_type (src/stage1/parser.ml[621,24259+17]..[621,24259+28])
                        Ptyp_var attributes
                ]
            expression (src/stage1/parser.ml[622,24290+2]..[629,24570+30])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[622,24290+7]..[622,24290+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[622,24290+7]..[622,24290+24])
              expression (src/stage1/parser.ml[623,24318+4]..[629,24570+29])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[623,24318+8]..[623,24318+10])
                      Ppat_var "_1" (src/stage1/parser.ml[623,24318+8]..[623,24318+10])
                    expression (src/stage1/parser.ml[623,24318+13]..[623,24318+70])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[623,24318+14]..[623,24318+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[623,24318+14]..[623,24318+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[623,24318+14]..[623,24318+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[623,24318+31]..[623,24318+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[623,24318+31]..[623,24318+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[623,24318+49]..[623,24318+50])
                              Pexp_constant PConst_int (1,None)
                        ]
                      core_type (src/stage1/parser.ml[623,24318+53]..[623,24318+69])
                        Ptyp_constr "Syntax.attribute" (src/stage1/parser.ml[623,24318+53]..[623,24318+69])
                        []
                ]
                expression (src/stage1/parser.ml[624,24392+4]..[629,24570+29])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[624,24392+8]..[624,24392+10])
                        Ppat_var "_2" (src/stage1/parser.ml[624,24392+8]..[624,24392+10])
                      expression (src/stage1/parser.ml[624,24392+13]..[624,24392+65])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[624,24392+14]..[624,24392+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[624,24392+14]..[624,24392+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[624,24392+14]..[624,24392+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[624,24392+31]..[624,24392+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[624,24392+31]..[624,24392+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[624,24392+49]..[624,24392+50])
                                Pexp_constant PConst_int (0,None)
                          ]
                        core_type (src/stage1/parser.ml[624,24392+53]..[624,24392+64])
                          Ptyp_var attributes
                  ]
                  expression (src/stage1/parser.ml[625,24461+4]..[629,24570+29])
                    Pexp_apply
                    expression (src/stage1/parser.ml[625,24461+4]..[625,24461+12])
                      Pexp_ident "Obj.repr" (src/stage1/parser.ml[625,24461+4]..[625,24461+12])
                    [
                      <arg>
                      Nolabel
                        expression (src/stage1/parser.ml[625,24461+12]..[629,24570+29])
                          Pexp_constraint
                          expression (src/stage1/parser.mly[180,24505+23]..[180,24505+35])
                            Pexp_construct "::" (src/stage1/parser.mly[180,24505+28]..[180,24505+30])
                            Some
                              expression (src/stage1/parser.mly[180,24505+25]..[180,24505+33]) ghost
                                Pexp_tuple
                                [
                                  expression (src/stage1/parser.mly[180,24505+25]..[180,24505+27])
                                    Pexp_ident "_1" (src/stage1/parser.mly[180,24505+25]..[180,24505+27])
                                  expression (src/stage1/parser.mly[180,24505+31]..[180,24505+33])
                                    Pexp_ident "_2" (src/stage1/parser.mly[180,24505+31]..[180,24505+33])
                                ]
                          core_type (src/stage1/parser.ml[629,24570+17]..[629,24570+28])
                            Ptyp_var attributes
                    ]
            expression (src/stage1/parser.ml[630,24601+2]..[635,24713+29])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[630,24601+7]..[630,24601+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[630,24601+7]..[630,24601+24])
              expression (src/stage1/parser.ml[631,24629+4]..[635,24713+28])
                Pexp_apply
                expression (src/stage1/parser.ml[631,24629+4]..[631,24629+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[631,24629+4]..[631,24629+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[631,24629+12]..[635,24713+28])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[188,24673+4]..[188,24673+10])
                        Pexp_construct "[]" (src/stage1/parser.mly[188,24673+6]..[188,24673+8])
                        None
                      core_type (src/stage1/parser.ml[635,24713+17]..[635,24713+27])
                        Ptyp_var terminals
                ]
            expression (src/stage1/parser.ml[636,24743+2]..[648,25378+29])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[636,24743+7]..[636,24743+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[636,24743+7]..[636,24743+24])
              expression (src/stage1/parser.ml[637,24771+4]..[648,25378+28])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[637,24771+8]..[637,24771+10])
                      Ppat_var "_1" (src/stage1/parser.ml[637,24771+8]..[637,24771+10])
                    expression (src/stage1/parser.ml[637,24771+13]..[637,24771+64])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[637,24771+14]..[637,24771+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[637,24771+14]..[637,24771+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[637,24771+14]..[637,24771+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[637,24771+31]..[637,24771+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[637,24771+31]..[637,24771+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[637,24771+49]..[637,24771+50])
                              Pexp_constant PConst_int (4,None)
                        ]
                      core_type (src/stage1/parser.ml[637,24771+53]..[637,24771+63])
                        Ptyp_var terminals
                ]
                expression (src/stage1/parser.ml[638,24839+4]..[648,25378+28])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[638,24839+8]..[638,24839+10])
                        Ppat_var "_2" (src/stage1/parser.ml[638,24839+8]..[638,24839+10])
                      expression (src/stage1/parser.ml[638,24839+13]..[638,24839+69])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[638,24839+14]..[638,24839+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[638,24839+14]..[638,24839+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[638,24839+14]..[638,24839+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[638,24839+31]..[638,24839+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[638,24839+31]..[638,24839+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[638,24839+49]..[638,24839+50])
                                Pexp_constant PConst_int (3,None)
                          ]
                        core_type (src/stage1/parser.ml[638,24839+53]..[638,24839+68])
                          Ptyp_var optional_comma
                  ]
                  expression (src/stage1/parser.ml[639,24912+4]..[648,25378+28])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[639,24912+8]..[639,24912+10])
                          Ppat_var "_3" (src/stage1/parser.ml[639,24912+8]..[639,24912+10])
                        expression (src/stage1/parser.ml[639,24912+13]..[639,24912+78])
                          Pexp_constraint
                          expression (src/stage1/parser.ml[639,24912+14]..[639,24912+50])
                            Pexp_apply
                            expression (src/stage1/parser.ml[639,24912+14]..[639,24912+30])
                              Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[639,24912+14]..[639,24912+30])
                            [
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.ml[639,24912+31]..[639,24912+48])
                                  Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[639,24912+31]..[639,24912+48])
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.ml[639,24912+49]..[639,24912+50])
                                  Pexp_constant PConst_int (2,None)
                            ]
                          core_type (src/stage1/parser.ml[639,24912+53]..[639,24912+77])
                            Ptyp_constr "Positions.located" (src/stage1/parser.ml[639,24912+60]..[639,24912+77])
                            [
                              core_type (src/stage1/parser.ml[639,24912+53]..[639,24912+59])
                                Ptyp_constr "string" (src/stage1/parser.ml[639,24912+53]..[639,24912+59])
                                []
                            ]
                    ]
                    expression (src/stage1/parser.ml[640,24994+4]..[648,25378+28])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[640,24994+8]..[640,24994+10])
                            Ppat_var "_4" (src/stage1/parser.ml[640,24994+8]..[640,24994+10])
                          expression (src/stage1/parser.ml[640,24994+13]..[640,24994+69])
                            Pexp_constraint
                            expression (src/stage1/parser.ml[640,24994+14]..[640,24994+50])
                              Pexp_apply
                              expression (src/stage1/parser.ml[640,24994+14]..[640,24994+30])
                                Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[640,24994+14]..[640,24994+30])
                              [
                                <arg>
                                Nolabel
                                  expression (src/stage1/parser.ml[640,24994+31]..[640,24994+48])
                                    Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[640,24994+31]..[640,24994+48])
                                <arg>
                                Nolabel
                                  expression (src/stage1/parser.ml[640,24994+49]..[640,24994+50])
                                    Pexp_constant PConst_int (1,None)
                              ]
                            core_type (src/stage1/parser.ml[640,24994+53]..[640,24994+68])
                              Ptyp_var optional_alias
                      ]
                      expression (src/stage1/parser.ml[641,25067+4]..[648,25378+28])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/stage1/parser.ml[641,25067+8]..[641,25067+10])
                              Ppat_var "_5" (src/stage1/parser.ml[641,25067+8]..[641,25067+10])
                            expression (src/stage1/parser.ml[641,25067+13]..[641,25067+65])
                              Pexp_constraint
                              expression (src/stage1/parser.ml[641,25067+14]..[641,25067+50])
                                Pexp_apply
                                expression (src/stage1/parser.ml[641,25067+14]..[641,25067+30])
                                  Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[641,25067+14]..[641,25067+30])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/stage1/parser.ml[641,25067+31]..[641,25067+48])
                                      Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[641,25067+31]..[641,25067+48])
                                  <arg>
                                  Nolabel
                                    expression (src/stage1/parser.ml[641,25067+49]..[641,25067+50])
                                      Pexp_constant PConst_int (0,None)
                                ]
                              core_type (src/stage1/parser.ml[641,25067+53]..[641,25067+64])
                                Ptyp_var attributes
                        ]
                        expression (src/stage1/parser.ml[642,25136+4]..[648,25378+28])
                          Pexp_apply
                          expression (src/stage1/parser.ml[642,25136+4]..[642,25136+12])
                            Pexp_ident "Obj.repr" (src/stage1/parser.ml[642,25136+4]..[642,25136+12])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[642,25136+12]..[648,25378+28])
                                Pexp_constraint
                                expression (src/stage1/parser.mly[190,25180+4]..[192,25286+62])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/stage1/parser.mly[190,25180+10]..[190,25180+31])
                                        Ppat_tuple
                                        [
                                          pattern (src/stage1/parser.mly[190,25180+10]..[190,25180+12])
                                            Ppat_var "ts" (src/stage1/parser.mly[190,25180+10]..[190,25180+12])
                                          pattern (src/stage1/parser.mly[190,25180+14]..[190,25180+17])
                                            Ppat_var "uid" (src/stage1/parser.mly[190,25180+14]..[190,25180+17])
                                          pattern (src/stage1/parser.mly[190,25180+19]..[190,25180+24])
                                            Ppat_var "alias" (src/stage1/parser.mly[190,25180+19]..[190,25180+24])
                                          pattern (src/stage1/parser.mly[190,25180+26]..[190,25180+31])
                                            Ppat_var "attrs" (src/stage1/parser.mly[190,25180+26]..[190,25180+31])
                                        ]
                                      expression (src/stage1/parser.mly[190,25180+34]..[190,25180+48])
                                        Pexp_tuple
                                        [
                                          expression (src/stage1/parser.mly[190,25180+34]..[190,25180+36])
                                            Pexp_ident "_1" (src/stage1/parser.mly[190,25180+34]..[190,25180+36])
                                          expression (src/stage1/parser.mly[190,25180+38]..[190,25180+40])
                                            Pexp_ident "_3" (src/stage1/parser.mly[190,25180+38]..[190,25180+40])
                                          expression (src/stage1/parser.mly[190,25180+42]..[190,25180+44])
                                            Pexp_ident "_4" (src/stage1/parser.mly[190,25180+42]..[190,25180+44])
                                          expression (src/stage1/parser.mly[190,25180+46]..[190,25180+48])
                                            Pexp_ident "_5" (src/stage1/parser.mly[190,25180+46]..[190,25180+48])
                                        ]
                                  ]
                                  expression (src/stage1/parser.mly[191,25232+6]..[192,25286+60])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/stage1/parser.mly[191,25232+10]..[191,25232+15])
                                          Ppat_var "alias" (src/stage1/parser.mly[191,25232+10]..[191,25232+15])
                                        expression (src/stage1/parser.mly[191,25232+18]..[191,25232+50])
                                          Pexp_apply
                                          expression (src/stage1/parser.mly[191,25232+18]..[191,25232+28])
                                            Pexp_ident "Option.map" (src/stage1/parser.mly[191,25232+18]..[191,25232+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/stage1/parser.mly[191,25232+29]..[191,25232+44])
                                                Pexp_ident "Positions.value" (src/stage1/parser.mly[191,25232+29]..[191,25232+44])
                                            <arg>
                                            Nolabel
                                              expression (src/stage1/parser.mly[191,25232+45]..[191,25232+50])
                                                Pexp_ident "alias" (src/stage1/parser.mly[191,25232+45]..[191,25232+50])
                                          ]
                                    ]
                                    expression (src/stage1/parser.mly[192,25286+6]..[192,25286+60])
                                      Pexp_construct "::" (src/stage1/parser.mly[192,25286+55]..[192,25286+57])
                                      Some
                                        expression (src/stage1/parser.mly[192,25286+6]..[192,25286+60]) ghost
                                          Pexp_tuple
                                          [
                                            expression (src/stage1/parser.mly[192,25286+6]..[192,25286+54])
                                              Pexp_apply
                                              expression (src/stage1/parser.mly[192,25286+6]..[192,25286+19])
                                                Pexp_ident "Positions.map" (src/stage1/parser.mly[192,25286+6]..[192,25286+19])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/stage1/parser.mly[192,25286+20]..[192,25286+50])
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (src/stage1/parser.mly[192,25286+25]..[192,25286+28])
                                                      Ppat_var "uid" (src/stage1/parser.mly[192,25286+25]..[192,25286+28])
                                                    expression (src/stage1/parser.mly[192,25286+32]..[192,25286+49])
                                                      Pexp_tuple
                                                      [
                                                        expression (src/stage1/parser.mly[192,25286+32]..[192,25286+35])
                                                          Pexp_ident "uid" (src/stage1/parser.mly[192,25286+32]..[192,25286+35])
                                                        expression (src/stage1/parser.mly[192,25286+37]..[192,25286+42])
                                                          Pexp_ident "alias" (src/stage1/parser.mly[192,25286+37]..[192,25286+42])
                                                        expression (src/stage1/parser.mly[192,25286+44]..[192,25286+49])
                                                          Pexp_ident "attrs" (src/stage1/parser.mly[192,25286+44]..[192,25286+49])
                                                      ]
                                                <arg>
                                                Nolabel
                                                  expression (src/stage1/parser.mly[192,25286+51]..[192,25286+54])
                                                    Pexp_ident "uid" (src/stage1/parser.mly[192,25286+51]..[192,25286+54])
                                              ]
                                            expression (src/stage1/parser.mly[192,25286+58]..[192,25286+60])
                                              Pexp_ident "ts" (src/stage1/parser.mly[192,25286+58]..[192,25286+60])
                                          ]
                                core_type (src/stage1/parser.ml[648,25378+17]..[648,25378+27])
                                  Ptyp_var terminals
                          ]
            expression (src/stage1/parser.ml[649,25408+2]..[654,25520+32])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[649,25408+7]..[649,25408+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[649,25408+7]..[649,25408+24])
              expression (src/stage1/parser.ml[650,25436+4]..[654,25520+31])
                Pexp_apply
                expression (src/stage1/parser.ml[650,25436+4]..[650,25436+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[650,25436+4]..[650,25436+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[650,25436+12]..[654,25520+31])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[196,25480+4]..[196,25480+10])
                        Pexp_construct "[]" (src/stage1/parser.mly[196,25480+6]..[196,25480+8])
                        None
                      core_type (src/stage1/parser.ml[654,25520+17]..[654,25520+30])
                        Ptyp_var nonterminals
                ]
            expression (src/stage1/parser.ml[655,25553+2]..[662,25824+32])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[655,25553+7]..[655,25553+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[655,25553+7]..[655,25553+24])
              expression (src/stage1/parser.ml[656,25581+4]..[662,25824+31])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[656,25581+8]..[656,25581+10])
                      Ppat_var "_1" (src/stage1/parser.ml[656,25581+8]..[656,25581+10])
                    expression (src/stage1/parser.ml[656,25581+13]..[656,25581+67])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[656,25581+14]..[656,25581+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[656,25581+14]..[656,25581+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[656,25581+14]..[656,25581+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[656,25581+31]..[656,25581+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[656,25581+31]..[656,25581+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[656,25581+49]..[656,25581+50])
                              Pexp_constant PConst_int (1,None)
                        ]
                      core_type (src/stage1/parser.ml[656,25581+53]..[656,25581+66])
                        Ptyp_var nonterminals
                ]
                expression (src/stage1/parser.ml[657,25652+4]..[662,25824+31])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[657,25652+8]..[657,25652+10])
                        Ppat_var "_2" (src/stage1/parser.ml[657,25652+8]..[657,25652+10])
                      expression (src/stage1/parser.ml[657,25652+13]..[657,25652+78])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[657,25652+14]..[657,25652+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[657,25652+14]..[657,25652+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[657,25652+14]..[657,25652+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[657,25652+31]..[657,25652+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[657,25652+31]..[657,25652+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[657,25652+49]..[657,25652+50])
                                Pexp_constant PConst_int (0,None)
                          ]
                        core_type (src/stage1/parser.ml[657,25652+53]..[657,25652+77])
                          Ptyp_constr "Positions.located" (src/stage1/parser.ml[657,25652+60]..[657,25652+77])
                          [
                            core_type (src/stage1/parser.ml[657,25652+53]..[657,25652+59])
                              Ptyp_constr "string" (src/stage1/parser.ml[657,25652+53]..[657,25652+59])
                              []
                          ]
                  ]
                  expression (src/stage1/parser.ml[658,25734+4]..[662,25824+31])
                    Pexp_apply
                    expression (src/stage1/parser.ml[658,25734+4]..[658,25734+12])
                      Pexp_ident "Obj.repr" (src/stage1/parser.ml[658,25734+4]..[658,25734+12])
                    [
                      <arg>
                      Nolabel
                        expression (src/stage1/parser.ml[658,25734+12]..[662,25824+31])
                          Pexp_constraint
                          expression (src/stage1/parser.mly[198,25778+4]..[198,25778+16])
                            Pexp_construct "::" (src/stage1/parser.mly[198,25778+9]..[198,25778+11])
                            Some
                              expression (src/stage1/parser.mly[198,25778+6]..[198,25778+14]) ghost
                                Pexp_tuple
                                [
                                  expression (src/stage1/parser.mly[198,25778+6]..[198,25778+8])
                                    Pexp_ident "_2" (src/stage1/parser.mly[198,25778+6]..[198,25778+8])
                                  expression (src/stage1/parser.mly[198,25778+12]..[198,25778+14])
                                    Pexp_ident "_1" (src/stage1/parser.mly[198,25778+12]..[198,25778+14])
                                ]
                          core_type (src/stage1/parser.ml[662,25824+17]..[662,25824+30])
                            Ptyp_var nonterminals
                    ]
            expression (src/stage1/parser.ml[663,25857+2]..[668,25971+34])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[663,25857+7]..[663,25857+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[663,25857+7]..[663,25857+24])
              expression (src/stage1/parser.ml[664,25885+4]..[668,25971+33])
                Pexp_apply
                expression (src/stage1/parser.ml[664,25885+4]..[664,25885+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[664,25885+4]..[664,25885+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[664,25885+12]..[668,25971+33])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[202,25929+4]..[202,25929+12])
                        Pexp_construct "None" (src/stage1/parser.mly[202,25929+6]..[202,25929+10])
                        None
                      core_type (src/stage1/parser.ml[668,25971+17]..[668,25971+32])
                        Ptyp_var optional_alias
                ]
            expression (src/stage1/parser.ml[669,26006+2]..[675,26205+34])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[669,26006+7]..[669,26006+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[669,26006+7]..[669,26006+24])
              expression (src/stage1/parser.ml[670,26034+4]..[675,26205+33])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[670,26034+8]..[670,26034+10])
                      Ppat_var "_1" (src/stage1/parser.ml[670,26034+8]..[670,26034+10])
                    expression (src/stage1/parser.ml[670,26034+13]..[670,26034+78])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[670,26034+14]..[670,26034+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[670,26034+14]..[670,26034+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[670,26034+14]..[670,26034+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[670,26034+31]..[670,26034+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[670,26034+31]..[670,26034+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[670,26034+49]..[670,26034+50])
                              Pexp_constant PConst_int (0,None)
                        ]
                      core_type (src/stage1/parser.ml[670,26034+53]..[670,26034+77])
                        Ptyp_constr "Positions.located" (src/stage1/parser.ml[670,26034+60]..[670,26034+77])
                        [
                          core_type (src/stage1/parser.ml[670,26034+53]..[670,26034+59])
                            Ptyp_constr "string" (src/stage1/parser.ml[670,26034+53]..[670,26034+59])
                            []
                        ]
                ]
                expression (src/stage1/parser.ml[671,26116+4]..[675,26205+33])
                  Pexp_apply
                  expression (src/stage1/parser.ml[671,26116+4]..[671,26116+12])
                    Pexp_ident "Obj.repr" (src/stage1/parser.ml[671,26116+4]..[671,26116+12])
                  [
                    <arg>
                    Nolabel
                      expression (src/stage1/parser.ml[671,26116+12]..[675,26205+33])
                        Pexp_constraint
                        expression (src/stage1/parser.mly[204,26160+4]..[204,26160+15])
                          Pexp_construct "Some" (src/stage1/parser.mly[204,26160+6]..[204,26160+10])
                          Some
                            expression (src/stage1/parser.mly[204,26160+11]..[204,26160+13])
                              Pexp_ident "_1" (src/stage1/parser.mly[204,26160+11]..[204,26160+13])
                        core_type (src/stage1/parser.ml[675,26205+17]..[675,26205+32])
                          Ptyp_var optional_alias
                  ]
            expression (src/stage1/parser.ml[676,26240+2]..[681,26352+25])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[676,26240+7]..[676,26240+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[676,26240+7]..[676,26240+24])
              expression (src/stage1/parser.ml[677,26268+4]..[681,26352+24])
                Pexp_apply
                expression (src/stage1/parser.ml[677,26268+4]..[677,26268+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[677,26268+4]..[677,26268+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[677,26268+12]..[681,26352+24])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[213,26312+4]..[213,26312+10])
                        Pexp_construct "[]" (src/stage1/parser.mly[213,26312+6]..[213,26312+8])
                        None
                      core_type (src/stage1/parser.ml[681,26352+17]..[681,26352+23])
                        Ptyp_var rules
                ]
            expression (src/stage1/parser.ml[682,26378+2]..[689,26623+25])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[682,26378+7]..[682,26378+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[682,26378+7]..[682,26378+24])
              expression (src/stage1/parser.ml[683,26406+4]..[689,26623+24])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[683,26406+8]..[683,26406+10])
                      Ppat_var "_1" (src/stage1/parser.ml[683,26406+8]..[683,26406+10])
                    expression (src/stage1/parser.ml[683,26406+13]..[683,26406+60])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[683,26406+14]..[683,26406+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[683,26406+14]..[683,26406+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[683,26406+14]..[683,26406+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[683,26406+31]..[683,26406+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[683,26406+31]..[683,26406+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[683,26406+49]..[683,26406+50])
                              Pexp_constant PConst_int (1,None)
                        ]
                      core_type (src/stage1/parser.ml[683,26406+53]..[683,26406+59])
                        Ptyp_var rules
                ]
                expression (src/stage1/parser.ml[684,26470+4]..[689,26623+24])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[684,26470+8]..[684,26470+10])
                        Ppat_var "_2" (src/stage1/parser.ml[684,26470+8]..[684,26470+10])
                      expression (src/stage1/parser.ml[684,26470+13]..[684,26470+59])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[684,26470+14]..[684,26470+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[684,26470+14]..[684,26470+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[684,26470+14]..[684,26470+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[684,26470+31]..[684,26470+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[684,26470+31]..[684,26470+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[684,26470+49]..[684,26470+50])
                                Pexp_constant PConst_int (0,None)
                          ]
                        core_type (src/stage1/parser.ml[684,26470+53]..[684,26470+58])
                          Ptyp_var rule
                  ]
                  expression (src/stage1/parser.ml[685,26533+4]..[689,26623+24])
                    Pexp_apply
                    expression (src/stage1/parser.ml[685,26533+4]..[685,26533+12])
                      Pexp_ident "Obj.repr" (src/stage1/parser.ml[685,26533+4]..[685,26533+12])
                    [
                      <arg>
                      Nolabel
                        expression (src/stage1/parser.ml[685,26533+12]..[689,26623+24])
                          Pexp_constraint
                          expression (src/stage1/parser.mly[215,26577+4]..[215,26577+16])
                            Pexp_construct "::" (src/stage1/parser.mly[215,26577+9]..[215,26577+11])
                            Some
                              expression (src/stage1/parser.mly[215,26577+6]..[215,26577+14]) ghost
                                Pexp_tuple
                                [
                                  expression (src/stage1/parser.mly[215,26577+6]..[215,26577+8])
                                    Pexp_ident "_2" (src/stage1/parser.mly[215,26577+6]..[215,26577+8])
                                  expression (src/stage1/parser.mly[215,26577+12]..[215,26577+14])
                                    Pexp_ident "_1" (src/stage1/parser.mly[215,26577+12]..[215,26577+14])
                                ]
                          core_type (src/stage1/parser.ml[689,26623+17]..[689,26623+23])
                            Ptyp_var rules
                    ]
            expression (src/stage1/parser.ml[690,26649+2]..[696,26825+25])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[690,26649+7]..[690,26649+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[690,26649+7]..[690,26649+24])
              expression (src/stage1/parser.ml[691,26677+4]..[696,26825+24])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[691,26677+8]..[691,26677+10])
                      Ppat_var "_1" (src/stage1/parser.ml[691,26677+8]..[691,26677+10])
                    expression (src/stage1/parser.ml[691,26677+13]..[691,26677+60])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[691,26677+14]..[691,26677+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[691,26677+14]..[691,26677+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[691,26677+14]..[691,26677+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[691,26677+31]..[691,26677+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[691,26677+31]..[691,26677+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[691,26677+49]..[691,26677+50])
                              Pexp_constant PConst_int (1,None)
                        ]
                      core_type (src/stage1/parser.ml[691,26677+53]..[691,26677+59])
                        Ptyp_var rules
                ]
                expression (src/stage1/parser.ml[692,26741+4]..[696,26825+24])
                  Pexp_apply
                  expression (src/stage1/parser.ml[692,26741+4]..[692,26741+12])
                    Pexp_ident "Obj.repr" (src/stage1/parser.ml[692,26741+4]..[692,26741+12])
                  [
                    <arg>
                    Nolabel
                      expression (src/stage1/parser.ml[692,26741+12]..[696,26825+24])
                        Pexp_constraint
                        expression (src/stage1/parser.mly[217,26785+4]..[217,26785+10])
                          Pexp_ident "_1" (src/stage1/parser.mly[217,26785+6]..[217,26785+8])
                        core_type (src/stage1/parser.ml[696,26825+17]..[696,26825+23])
                          Ptyp_var rules
                  ]
            expression (src/stage1/parser.ml[697,26851+2]..[719,27789+24])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[697,26851+7]..[697,26851+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[697,26851+7]..[697,26851+24])
              expression (src/stage1/parser.ml[698,26879+4]..[719,27789+23])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[698,26879+8]..[698,26879+10])
                      Ppat_var "_1" (src/stage1/parser.ml[698,26879+8]..[698,26879+10])
                    expression (src/stage1/parser.ml[698,26879+13]..[698,26879+60])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[698,26879+14]..[698,26879+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[698,26879+14]..[698,26879+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[698,26879+14]..[698,26879+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[698,26879+31]..[698,26879+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[698,26879+31]..[698,26879+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[698,26879+49]..[698,26879+50])
                              Pexp_constant PConst_int (7,None)
                        ]
                      core_type (src/stage1/parser.ml[698,26879+53]..[698,26879+59])
                        Ptyp_var flags
                ]
                expression (src/stage1/parser.ml[699,26943+4]..[719,27789+23])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[699,26943+8]..[699,26943+10])
                        Ppat_var "_2" (src/stage1/parser.ml[699,26943+8]..[699,26943+10])
                      expression (src/stage1/parser.ml[699,26943+13]..[699,26943+61])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[699,26943+14]..[699,26943+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[699,26943+14]..[699,26943+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[699,26943+14]..[699,26943+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[699,26943+31]..[699,26943+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[699,26943+31]..[699,26943+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[699,26943+49]..[699,26943+50])
                                Pexp_constant PConst_int (6,None)
                          ]
                        core_type (src/stage1/parser.ml[699,26943+53]..[699,26943+60])
                          Ptyp_var symbol
                  ]
                  expression (src/stage1/parser.ml[700,27008+4]..[719,27789+23])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[700,27008+8]..[700,27008+10])
                          Ppat_var "_3" (src/stage1/parser.ml[700,27008+8]..[700,27008+10])
                        expression (src/stage1/parser.ml[700,27008+13]..[700,27008+65])
                          Pexp_constraint
                          expression (src/stage1/parser.ml[700,27008+14]..[700,27008+50])
                            Pexp_apply
                            expression (src/stage1/parser.ml[700,27008+14]..[700,27008+30])
                              Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[700,27008+14]..[700,27008+30])
                            [
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.ml[700,27008+31]..[700,27008+48])
                                  Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[700,27008+31]..[700,27008+48])
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.ml[700,27008+49]..[700,27008+50])
                                  Pexp_constant PConst_int (5,None)
                            ]
                          core_type (src/stage1/parser.ml[700,27008+53]..[700,27008+64])
                            Ptyp_var attributes
                    ]
                    expression (src/stage1/parser.ml[701,27077+4]..[719,27789+23])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[701,27077+8]..[701,27077+10])
                            Ppat_var "_4" (src/stage1/parser.ml[701,27077+8]..[701,27077+10])
                          expression (src/stage1/parser.ml[701,27077+13]..[701,27077+81])
                            Pexp_constraint
                            expression (src/stage1/parser.ml[701,27077+14]..[701,27077+50])
                              Pexp_apply
                              expression (src/stage1/parser.ml[701,27077+14]..[701,27077+30])
                                Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[701,27077+14]..[701,27077+30])
                              [
                                <arg>
                                Nolabel
                                  expression (src/stage1/parser.ml[701,27077+31]..[701,27077+48])
                                    Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[701,27077+31]..[701,27077+48])
                                <arg>
                                Nolabel
                                  expression (src/stage1/parser.ml[701,27077+49]..[701,27077+50])
                                    Pexp_constant PConst_int (4,None)
                              ]
                            core_type (src/stage1/parser.ml[701,27077+53]..[701,27077+80])
                              Ptyp_var optional_formal_parameters
                      ]
                      expression (src/stage1/parser.ml[702,27162+4]..[719,27789+23])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (src/stage1/parser.ml[702,27162+8]..[702,27162+10])
                              Ppat_var "_6" (src/stage1/parser.ml[702,27162+8]..[702,27162+10])
                            expression (src/stage1/parser.ml[702,27162+13]..[702,27162+67])
                              Pexp_constraint
                              expression (src/stage1/parser.ml[702,27162+14]..[702,27162+50])
                                Pexp_apply
                                expression (src/stage1/parser.ml[702,27162+14]..[702,27162+30])
                                  Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[702,27162+14]..[702,27162+30])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/stage1/parser.ml[702,27162+31]..[702,27162+48])
                                      Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[702,27162+31]..[702,27162+48])
                                  <arg>
                                  Nolabel
                                    expression (src/stage1/parser.ml[702,27162+49]..[702,27162+50])
                                      Pexp_constant PConst_int (2,None)
                                ]
                              core_type (src/stage1/parser.ml[702,27162+53]..[702,27162+66])
                                Ptyp_var optional_bar
                        ]
                        expression (src/stage1/parser.ml[703,27233+4]..[719,27789+23])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/stage1/parser.ml[703,27233+8]..[703,27233+10])
                                Ppat_var "_7" (src/stage1/parser.ml[703,27233+8]..[703,27233+10])
                              expression (src/stage1/parser.ml[703,27233+13]..[703,27233+71])
                                Pexp_constraint
                                expression (src/stage1/parser.ml[703,27233+14]..[703,27233+50])
                                  Pexp_apply
                                  expression (src/stage1/parser.ml[703,27233+14]..[703,27233+30])
                                    Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[703,27233+14]..[703,27233+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/stage1/parser.ml[703,27233+31]..[703,27233+48])
                                        Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[703,27233+31]..[703,27233+48])
                                    <arg>
                                    Nolabel
                                      expression (src/stage1/parser.ml[703,27233+49]..[703,27233+50])
                                        Pexp_constant PConst_int (1,None)
                                  ]
                                core_type (src/stage1/parser.ml[703,27233+53]..[703,27233+70])
                                  Ptyp_var production_group
                          ]
                          expression (src/stage1/parser.ml[704,27308+4]..[719,27789+23])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/stage1/parser.ml[704,27308+8]..[704,27308+10])
                                  Ppat_var "_8" (src/stage1/parser.ml[704,27308+8]..[704,27308+10])
                                expression (src/stage1/parser.ml[704,27308+13]..[704,27308+72])
                                  Pexp_constraint
                                  expression (src/stage1/parser.ml[704,27308+14]..[704,27308+50])
                                    Pexp_apply
                                    expression (src/stage1/parser.ml[704,27308+14]..[704,27308+30])
                                      Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[704,27308+14]..[704,27308+30])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/stage1/parser.ml[704,27308+31]..[704,27308+48])
                                          Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[704,27308+31]..[704,27308+48])
                                      <arg>
                                      Nolabel
                                        expression (src/stage1/parser.ml[704,27308+49]..[704,27308+50])
                                          Pexp_constant PConst_int (0,None)
                                    ]
                                  core_type (src/stage1/parser.ml[704,27308+53]..[704,27308+71])
                                    Ptyp_var production_groups
                            ]
                            expression (src/stage1/parser.ml[705,27384+4]..[719,27789+23])
                              Pexp_apply
                              expression (src/stage1/parser.ml[705,27384+4]..[705,27384+12])
                                Pexp_ident "Obj.repr" (src/stage1/parser.ml[705,27384+4]..[705,27384+12])
                              [
                                <arg>
                                Nolabel
                                  expression (src/stage1/parser.ml[705,27384+12]..[719,27789+23])
                                    Pexp_constraint
                                    expression (src/stage1/parser.mly[227,27428+4]..[237,27754+5])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/stage1/parser.mly[228,27434+10]..[228,27434+24])
                                            Ppat_tuple
                                            [
                                              pattern (src/stage1/parser.mly[228,27434+10]..[228,27434+16])
                                                Ppat_var "public" (src/stage1/parser.mly[228,27434+10]..[228,27434+16])
                                              pattern (src/stage1/parser.mly[228,27434+18]..[228,27434+24])
                                                Ppat_var "inline" (src/stage1/parser.mly[228,27434+18]..[228,27434+24])
                                            ]
                                          expression (src/stage1/parser.mly[228,27434+27]..[228,27434+29])
                                            Pexp_ident "_1" (src/stage1/parser.mly[228,27434+27]..[228,27434+29])
                                      ]
                                      expression (src/stage1/parser.mly[229,27467+6]..[236,27746+7])
                                        Pexp_record
                                        [
                                          "pr_public_flag" (src/stage1/parser.mly[229,27467+8]..[229,27467+22])
                                            expression (src/stage1/parser.mly[229,27467+25]..[229,27467+31])
                                              Pexp_ident "public" (src/stage1/parser.mly[229,27467+25]..[229,27467+31])
                                          "pr_inline_flag" (src/stage1/parser.mly[230,27500+8]..[230,27500+22])
                                            expression (src/stage1/parser.mly[230,27500+25]..[230,27500+31])
                                              Pexp_ident "inline" (src/stage1/parser.mly[230,27500+25]..[230,27500+31])
                                          "pr_nt" (src/stage1/parser.mly[231,27533+8]..[231,27533+13])
                                            expression (src/stage1/parser.mly[231,27533+25]..[231,27533+43])
                                              Pexp_apply
                                              expression (src/stage1/parser.mly[231,27533+25]..[231,27533+40])
                                                Pexp_ident "Positions.value" (src/stage1/parser.mly[231,27533+25]..[231,27533+40])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/stage1/parser.mly[231,27533+41]..[231,27533+43])
                                                    Pexp_ident "_2" (src/stage1/parser.mly[231,27533+41]..[231,27533+43])
                                              ]
                                          "pr_positions" (src/stage1/parser.mly[232,27578+8]..[232,27578+20])
                                            expression (src/stage1/parser.mly[232,27578+25]..[232,27578+50])
                                              Pexp_construct "::" (src/stage1/parser.mly[232,27578+27]..[232,27578+50]) ghost
                                              Some
                                                expression (src/stage1/parser.mly[232,27578+27]..[232,27578+50]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (src/stage1/parser.mly[232,27578+27]..[232,27578+48])
                                                      Pexp_apply
                                                      expression (src/stage1/parser.mly[232,27578+27]..[232,27578+45])
                                                        Pexp_ident "Positions.position" (src/stage1/parser.mly[232,27578+27]..[232,27578+45])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/stage1/parser.mly[232,27578+46]..[232,27578+48])
                                                            Pexp_ident "_2" (src/stage1/parser.mly[232,27578+46]..[232,27578+48])
                                                      ]
                                                    expression (src/stage1/parser.mly[232,27578+49]..[232,27578+50]) ghost
                                                      Pexp_construct "[]" (src/stage1/parser.mly[232,27578+49]..[232,27578+50]) ghost
                                                      None
                                                  ]
                                          "pr_attributes" (src/stage1/parser.mly[233,27630+8]..[233,27630+21])
                                            expression (src/stage1/parser.mly[233,27630+25]..[233,27630+27])
                                              Pexp_ident "_3" (src/stage1/parser.mly[233,27630+25]..[233,27630+27])
                                          "pr_parameters" (src/stage1/parser.mly[234,27659+8]..[234,27659+21])
                                            expression (src/stage1/parser.mly[234,27659+25]..[234,27659+27])
                                              Pexp_ident "_4" (src/stage1/parser.mly[234,27659+25]..[234,27659+27])
                                          "pr_branches" (src/stage1/parser.mly[235,27688+8]..[235,27688+19])
                                            expression (src/stage1/parser.mly[235,27688+25]..[235,27688+57])
                                              Pexp_apply
                                              expression (src/stage1/parser.mly[235,27688+25]..[235,27688+37])
                                                Pexp_ident "List.flatten" (src/stage1/parser.mly[235,27688+25]..[235,27688+37])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/stage1/parser.mly[235,27688+38]..[235,27688+57])
                                                    Pexp_construct "::" (src/stage1/parser.mly[235,27688+42]..[235,27688+44])
                                                    Some
                                                      expression (src/stage1/parser.mly[235,27688+39]..[235,27688+56]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (src/stage1/parser.mly[235,27688+39]..[235,27688+41])
                                                            Pexp_ident "_7" (src/stage1/parser.mly[235,27688+39]..[235,27688+41])
                                                          expression (src/stage1/parser.mly[235,27688+45]..[235,27688+56])
                                                            Pexp_apply
                                                            expression (src/stage1/parser.mly[235,27688+45]..[235,27688+53])
                                                              Pexp_ident "List.rev" (src/stage1/parser.mly[235,27688+45]..[235,27688+53])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/stage1/parser.mly[235,27688+54]..[235,27688+56])
                                                                  Pexp_ident "_8" (src/stage1/parser.mly[235,27688+54]..[235,27688+56])
                                                            ]
                                                        ]
                                              ]
                                        ]
                                        None
                                    core_type (src/stage1/parser.ml[719,27789+17]..[719,27789+22])
                                      Ptyp_var rule
                              ]
            expression (src/stage1/parser.ml[720,27814+2]..[725,27936+25])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[720,27814+7]..[720,27814+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[720,27814+7]..[720,27814+24])
              expression (src/stage1/parser.ml[721,27842+4]..[725,27936+24])
                Pexp_apply
                expression (src/stage1/parser.ml[721,27842+4]..[721,27842+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[721,27842+4]..[721,27842+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[721,27842+12]..[725,27936+24])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[241,27886+4]..[241,27886+20])
                        Pexp_tuple
                        [
                          expression (src/stage1/parser.mly[241,27886+6]..[241,27886+11])
                            Pexp_construct "false" (src/stage1/parser.mly[241,27886+6]..[241,27886+11])
                            None
                          expression (src/stage1/parser.mly[241,27886+13]..[241,27886+18])
                            Pexp_construct "false" (src/stage1/parser.mly[241,27886+13]..[241,27886+18])
                            None
                        ]
                      core_type (src/stage1/parser.ml[725,27936+17]..[725,27936+23])
                        Ptyp_var flags
                ]
            expression (src/stage1/parser.ml[726,27962+2]..[731,28083+25])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[726,27962+7]..[726,27962+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[726,27962+7]..[726,27962+24])
              expression (src/stage1/parser.ml[727,27990+4]..[731,28083+24])
                Pexp_apply
                expression (src/stage1/parser.ml[727,27990+4]..[727,27990+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[727,27990+4]..[727,27990+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[727,27990+12]..[731,28083+24])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[243,28034+4]..[243,28034+19])
                        Pexp_tuple
                        [
                          expression (src/stage1/parser.mly[243,28034+6]..[243,28034+10])
                            Pexp_construct "true" (src/stage1/parser.mly[243,28034+6]..[243,28034+10])
                            None
                          expression (src/stage1/parser.mly[243,28034+12]..[243,28034+17])
                            Pexp_construct "false" (src/stage1/parser.mly[243,28034+12]..[243,28034+17])
                            None
                        ]
                      core_type (src/stage1/parser.ml[731,28083+17]..[731,28083+23])
                        Ptyp_var flags
                ]
            expression (src/stage1/parser.ml[732,28109+2]..[737,28230+25])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[732,28109+7]..[732,28109+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[732,28109+7]..[732,28109+24])
              expression (src/stage1/parser.ml[733,28137+4]..[737,28230+24])
                Pexp_apply
                expression (src/stage1/parser.ml[733,28137+4]..[733,28137+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[733,28137+4]..[733,28137+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[733,28137+12]..[737,28230+24])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[245,28181+4]..[245,28181+19])
                        Pexp_tuple
                        [
                          expression (src/stage1/parser.mly[245,28181+6]..[245,28181+11])
                            Pexp_construct "false" (src/stage1/parser.mly[245,28181+6]..[245,28181+11])
                            None
                          expression (src/stage1/parser.mly[245,28181+13]..[245,28181+17])
                            Pexp_construct "true" (src/stage1/parser.mly[245,28181+13]..[245,28181+17])
                            None
                        ]
                      core_type (src/stage1/parser.ml[737,28230+17]..[737,28230+23])
                        Ptyp_var flags
                ]
            expression (src/stage1/parser.ml[738,28256+2]..[743,28376+25])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[738,28256+7]..[738,28256+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[738,28256+7]..[738,28256+24])
              expression (src/stage1/parser.ml[739,28284+4]..[743,28376+24])
                Pexp_apply
                expression (src/stage1/parser.ml[739,28284+4]..[739,28284+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[739,28284+4]..[739,28284+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[739,28284+12]..[743,28376+24])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[247,28328+4]..[247,28328+18])
                        Pexp_tuple
                        [
                          expression (src/stage1/parser.mly[247,28328+6]..[247,28328+10])
                            Pexp_construct "true" (src/stage1/parser.mly[247,28328+6]..[247,28328+10])
                            None
                          expression (src/stage1/parser.mly[247,28328+12]..[247,28328+16])
                            Pexp_construct "true" (src/stage1/parser.mly[247,28328+12]..[247,28328+16])
                            None
                        ]
                      core_type (src/stage1/parser.ml[743,28376+17]..[743,28376+23])
                        Ptyp_var flags
                ]
            expression (src/stage1/parser.ml[744,28402+2]..[749,28522+25])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[744,28402+7]..[744,28402+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[744,28402+7]..[744,28402+24])
              expression (src/stage1/parser.ml[745,28430+4]..[749,28522+24])
                Pexp_apply
                expression (src/stage1/parser.ml[745,28430+4]..[745,28430+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[745,28430+4]..[745,28430+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[745,28430+12]..[749,28522+24])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[249,28474+4]..[249,28474+18])
                        Pexp_tuple
                        [
                          expression (src/stage1/parser.mly[249,28474+6]..[249,28474+10])
                            Pexp_construct "true" (src/stage1/parser.mly[249,28474+6]..[249,28474+10])
                            None
                          expression (src/stage1/parser.mly[249,28474+12]..[249,28474+16])
                            Pexp_construct "true" (src/stage1/parser.mly[249,28474+12]..[249,28474+16])
                            None
                        ]
                      core_type (src/stage1/parser.ml[749,28522+17]..[749,28522+23])
                        Ptyp_var flags
                ]
            expression (src/stage1/parser.ml[750,28548+2]..[755,28660+46])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[750,28548+7]..[750,28548+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[750,28548+7]..[750,28548+24])
              expression (src/stage1/parser.ml[751,28576+4]..[755,28660+45])
                Pexp_apply
                expression (src/stage1/parser.ml[751,28576+4]..[751,28576+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[751,28576+4]..[751,28576+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[751,28576+12]..[755,28660+45])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[259,28620+4]..[259,28620+10])
                        Pexp_construct "[]" (src/stage1/parser.mly[259,28620+6]..[259,28620+8])
                        None
                      core_type (src/stage1/parser.ml[755,28660+17]..[755,28660+44])
                        Ptyp_var optional_formal_parameters
                ]
            expression (src/stage1/parser.ml[756,28707+2]..[762,28895+46])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[756,28707+7]..[756,28707+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[756,28707+7]..[756,28707+24])
              expression (src/stage1/parser.ml[757,28735+4]..[762,28895+45])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[757,28735+8]..[757,28735+10])
                      Ppat_var "_2" (src/stage1/parser.ml[757,28735+8]..[757,28735+10])
                    expression (src/stage1/parser.ml[757,28735+13]..[757,28735+72])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[757,28735+14]..[757,28735+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[757,28735+14]..[757,28735+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[757,28735+14]..[757,28735+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[757,28735+31]..[757,28735+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[757,28735+31]..[757,28735+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[757,28735+49]..[757,28735+50])
                              Pexp_constant PConst_int (1,None)
                        ]
                      core_type (src/stage1/parser.ml[757,28735+53]..[757,28735+71])
                        Ptyp_var formal_parameters
                ]
                expression (src/stage1/parser.ml[758,28811+4]..[762,28895+45])
                  Pexp_apply
                  expression (src/stage1/parser.ml[758,28811+4]..[758,28811+12])
                    Pexp_ident "Obj.repr" (src/stage1/parser.ml[758,28811+4]..[758,28811+12])
                  [
                    <arg>
                    Nolabel
                      expression (src/stage1/parser.ml[758,28811+12]..[762,28895+45])
                        Pexp_constraint
                        expression (src/stage1/parser.mly[261,28855+4]..[261,28855+10])
                          Pexp_ident "_2" (src/stage1/parser.mly[261,28855+6]..[261,28855+8])
                        core_type (src/stage1/parser.ml[762,28895+17]..[762,28895+44])
                          Ptyp_var optional_formal_parameters
                  ]
            expression (src/stage1/parser.ml[763,28942+2]..[769,29139+37])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[763,28942+7]..[763,28942+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[763,28942+7]..[763,28942+24])
              expression (src/stage1/parser.ml[764,28970+4]..[769,29139+36])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[764,28970+8]..[764,28970+10])
                      Ppat_var "_1" (src/stage1/parser.ml[764,28970+8]..[764,28970+10])
                    expression (src/stage1/parser.ml[764,28970+13]..[764,28970+61])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[764,28970+14]..[764,28970+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[764,28970+14]..[764,28970+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[764,28970+14]..[764,28970+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[764,28970+31]..[764,28970+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[764,28970+31]..[764,28970+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[764,28970+49]..[764,28970+50])
                              Pexp_constant PConst_int (0,None)
                        ]
                      core_type (src/stage1/parser.ml[764,28970+53]..[764,28970+60])
                        Ptyp_var symbol
                ]
                expression (src/stage1/parser.ml[765,29035+4]..[769,29139+36])
                  Pexp_apply
                  expression (src/stage1/parser.ml[765,29035+4]..[765,29035+12])
                    Pexp_ident "Obj.repr" (src/stage1/parser.ml[765,29035+4]..[765,29035+12])
                  [
                    <arg>
                    Nolabel
                      expression (src/stage1/parser.ml[765,29035+12]..[769,29139+36])
                        Pexp_constraint
                        expression (src/stage1/parser.mly[265,29079+4]..[265,29079+30])
                          Pexp_construct "::" (src/stage1/parser.mly[265,29079+8]..[265,29079+28]) ghost
                          Some
                            expression (src/stage1/parser.mly[265,29079+8]..[265,29079+28]) ghost
                              Pexp_tuple
                              [
                                expression (src/stage1/parser.mly[265,29079+8]..[265,29079+26])
                                  Pexp_apply
                                  expression (src/stage1/parser.mly[265,29079+8]..[265,29079+23])
                                    Pexp_ident "Positions.value" (src/stage1/parser.mly[265,29079+8]..[265,29079+23])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/stage1/parser.mly[265,29079+24]..[265,29079+26])
                                        Pexp_ident "_1" (src/stage1/parser.mly[265,29079+24]..[265,29079+26])
                                  ]
                                expression (src/stage1/parser.mly[265,29079+27]..[265,29079+28]) ghost
                                  Pexp_construct "[]" (src/stage1/parser.mly[265,29079+27]..[265,29079+28]) ghost
                                  None
                              ]
                        core_type (src/stage1/parser.ml[769,29139+17]..[769,29139+35])
                          Ptyp_var formal_parameters
                  ]
            expression (src/stage1/parser.ml[770,29177+2]..[777,29452+37])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[770,29177+7]..[770,29177+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[770,29177+7]..[770,29177+24])
              expression (src/stage1/parser.ml[771,29205+4]..[777,29452+36])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[771,29205+8]..[771,29205+10])
                      Ppat_var "_1" (src/stage1/parser.ml[771,29205+8]..[771,29205+10])
                    expression (src/stage1/parser.ml[771,29205+13]..[771,29205+61])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[771,29205+14]..[771,29205+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[771,29205+14]..[771,29205+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[771,29205+14]..[771,29205+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[771,29205+31]..[771,29205+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[771,29205+31]..[771,29205+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[771,29205+49]..[771,29205+50])
                              Pexp_constant PConst_int (2,None)
                        ]
                      core_type (src/stage1/parser.ml[771,29205+53]..[771,29205+60])
                        Ptyp_var symbol
                ]
                expression (src/stage1/parser.ml[772,29270+4]..[777,29452+36])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[772,29270+8]..[772,29270+10])
                        Ppat_var "_3" (src/stage1/parser.ml[772,29270+8]..[772,29270+10])
                      expression (src/stage1/parser.ml[772,29270+13]..[772,29270+72])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[772,29270+14]..[772,29270+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[772,29270+14]..[772,29270+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[772,29270+14]..[772,29270+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[772,29270+31]..[772,29270+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[772,29270+31]..[772,29270+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[772,29270+49]..[772,29270+50])
                                Pexp_constant PConst_int (0,None)
                          ]
                        core_type (src/stage1/parser.ml[772,29270+53]..[772,29270+71])
                          Ptyp_var formal_parameters
                  ]
                  expression (src/stage1/parser.ml[773,29346+4]..[777,29452+36])
                    Pexp_apply
                    expression (src/stage1/parser.ml[773,29346+4]..[773,29346+12])
                      Pexp_ident "Obj.repr" (src/stage1/parser.ml[773,29346+4]..[773,29346+12])
                    [
                      <arg>
                      Nolabel
                        expression (src/stage1/parser.ml[773,29346+12]..[777,29452+36])
                          Pexp_constraint
                          expression (src/stage1/parser.mly[267,29390+4]..[267,29390+32])
                            Pexp_construct "::" (src/stage1/parser.mly[267,29390+25]..[267,29390+27])
                            Some
                              expression (src/stage1/parser.mly[267,29390+6]..[267,29390+30]) ghost
                                Pexp_tuple
                                [
                                  expression (src/stage1/parser.mly[267,29390+6]..[267,29390+24])
                                    Pexp_apply
                                    expression (src/stage1/parser.mly[267,29390+6]..[267,29390+21])
                                      Pexp_ident "Positions.value" (src/stage1/parser.mly[267,29390+6]..[267,29390+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/stage1/parser.mly[267,29390+22]..[267,29390+24])
                                          Pexp_ident "_1" (src/stage1/parser.mly[267,29390+22]..[267,29390+24])
                                    ]
                                  expression (src/stage1/parser.mly[267,29390+28]..[267,29390+30])
                                    Pexp_ident "_3" (src/stage1/parser.mly[267,29390+28]..[267,29390+30])
                                ]
                          core_type (src/stage1/parser.ml[777,29452+17]..[777,29452+35])
                            Ptyp_var formal_parameters
                    ]
            expression (src/stage1/parser.ml[778,29490+2]..[783,29602+36])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[778,29490+7]..[778,29490+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[778,29490+7]..[778,29490+24])
              expression (src/stage1/parser.ml[779,29518+4]..[783,29602+35])
                Pexp_apply
                expression (src/stage1/parser.ml[779,29518+4]..[779,29518+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[779,29518+4]..[779,29518+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[779,29518+12]..[783,29602+35])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[271,29562+4]..[271,29562+10])
                        Pexp_construct "[]" (src/stage1/parser.mly[271,29562+6]..[271,29562+8])
                        None
                      core_type (src/stage1/parser.ml[783,29602+17]..[783,29602+34])
                        Ptyp_var optional_actuals
                ]
            expression (src/stage1/parser.ml[784,29639+2]..[790,29823+36])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[784,29639+7]..[784,29639+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[784,29639+7]..[784,29639+24])
              expression (src/stage1/parser.ml[785,29667+4]..[790,29823+35])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[785,29667+8]..[785,29667+10])
                      Ppat_var "_2" (src/stage1/parser.ml[785,29667+8]..[785,29667+10])
                    expression (src/stage1/parser.ml[785,29667+13]..[785,29667+68])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[785,29667+14]..[785,29667+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[785,29667+14]..[785,29667+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[785,29667+14]..[785,29667+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[785,29667+31]..[785,29667+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[785,29667+31]..[785,29667+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[785,29667+49]..[785,29667+50])
                              Pexp_constant PConst_int (1,None)
                        ]
                      core_type (src/stage1/parser.ml[785,29667+53]..[785,29667+67])
                        Ptyp_var actuals_comma
                ]
                expression (src/stage1/parser.ml[786,29739+4]..[790,29823+35])
                  Pexp_apply
                  expression (src/stage1/parser.ml[786,29739+4]..[786,29739+12])
                    Pexp_ident "Obj.repr" (src/stage1/parser.ml[786,29739+4]..[786,29739+12])
                  [
                    <arg>
                    Nolabel
                      expression (src/stage1/parser.ml[786,29739+12]..[790,29823+35])
                        Pexp_constraint
                        expression (src/stage1/parser.mly[273,29783+4]..[273,29783+10])
                          Pexp_ident "_2" (src/stage1/parser.mly[273,29783+6]..[273,29783+8])
                        core_type (src/stage1/parser.ml[790,29823+17]..[790,29823+34])
                          Ptyp_var optional_actuals
                  ]
            expression (src/stage1/parser.ml[791,29860+2]..[797,30041+33])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[791,29860+7]..[791,29860+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[791,29860+7]..[791,29860+24])
              expression (src/stage1/parser.ml[792,29888+4]..[797,30041+32])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[792,29888+8]..[792,29888+10])
                      Ppat_var "_1" (src/stage1/parser.ml[792,29888+8]..[792,29888+10])
                    expression (src/stage1/parser.ml[792,29888+13]..[792,29888+61])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[792,29888+14]..[792,29888+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[792,29888+14]..[792,29888+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[792,29888+14]..[792,29888+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[792,29888+31]..[792,29888+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[792,29888+31]..[792,29888+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[792,29888+49]..[792,29888+50])
                              Pexp_constant PConst_int (0,None)
                        ]
                      core_type (src/stage1/parser.ml[792,29888+53]..[792,29888+60])
                        Ptyp_var actual
                ]
                expression (src/stage1/parser.ml[793,29953+4]..[797,30041+32])
                  Pexp_apply
                  expression (src/stage1/parser.ml[793,29953+4]..[793,29953+12])
                    Pexp_ident "Obj.repr" (src/stage1/parser.ml[793,29953+4]..[793,29953+12])
                  [
                    <arg>
                    Nolabel
                      expression (src/stage1/parser.ml[793,29953+12]..[797,30041+32])
                        Pexp_constraint
                        expression (src/stage1/parser.mly[277,29997+4]..[277,29997+14])
                          Pexp_construct "::" (src/stage1/parser.mly[277,29997+8]..[277,29997+12]) ghost
                          Some
                            expression (src/stage1/parser.mly[277,29997+8]..[277,29997+12]) ghost
                              Pexp_tuple
                              [
                                expression (src/stage1/parser.mly[277,29997+8]..[277,29997+10])
                                  Pexp_ident "_1" (src/stage1/parser.mly[277,29997+8]..[277,29997+10])
                                expression (src/stage1/parser.mly[277,29997+11]..[277,29997+12]) ghost
                                  Pexp_construct "[]" (src/stage1/parser.mly[277,29997+11]..[277,29997+12]) ghost
                                  None
                              ]
                        core_type (src/stage1/parser.ml[797,30041+17]..[797,30041+31])
                          Ptyp_var actuals_comma
                  ]
            expression (src/stage1/parser.ml[798,30075+2]..[805,30330+33])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[798,30075+7]..[798,30075+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[798,30075+7]..[798,30075+24])
              expression (src/stage1/parser.ml[799,30103+4]..[805,30330+32])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[799,30103+8]..[799,30103+10])
                      Ppat_var "_1" (src/stage1/parser.ml[799,30103+8]..[799,30103+10])
                    expression (src/stage1/parser.ml[799,30103+13]..[799,30103+61])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[799,30103+14]..[799,30103+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[799,30103+14]..[799,30103+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[799,30103+14]..[799,30103+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[799,30103+31]..[799,30103+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[799,30103+31]..[799,30103+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[799,30103+49]..[799,30103+50])
                              Pexp_constant PConst_int (2,None)
                        ]
                      core_type (src/stage1/parser.ml[799,30103+53]..[799,30103+60])
                        Ptyp_var actual
                ]
                expression (src/stage1/parser.ml[800,30168+4]..[805,30330+32])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[800,30168+8]..[800,30168+10])
                        Ppat_var "_3" (src/stage1/parser.ml[800,30168+8]..[800,30168+10])
                      expression (src/stage1/parser.ml[800,30168+13]..[800,30168+68])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[800,30168+14]..[800,30168+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[800,30168+14]..[800,30168+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[800,30168+14]..[800,30168+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[800,30168+31]..[800,30168+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[800,30168+31]..[800,30168+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[800,30168+49]..[800,30168+50])
                                Pexp_constant PConst_int (0,None)
                          ]
                        core_type (src/stage1/parser.ml[800,30168+53]..[800,30168+67])
                          Ptyp_var actuals_comma
                  ]
                  expression (src/stage1/parser.ml[801,30240+4]..[805,30330+32])
                    Pexp_apply
                    expression (src/stage1/parser.ml[801,30240+4]..[801,30240+12])
                      Pexp_ident "Obj.repr" (src/stage1/parser.ml[801,30240+4]..[801,30240+12])
                    [
                      <arg>
                      Nolabel
                        expression (src/stage1/parser.ml[801,30240+12]..[805,30330+32])
                          Pexp_constraint
                          expression (src/stage1/parser.mly[279,30284+4]..[279,30284+16])
                            Pexp_construct "::" (src/stage1/parser.mly[279,30284+9]..[279,30284+11])
                            Some
                              expression (src/stage1/parser.mly[279,30284+6]..[279,30284+14]) ghost
                                Pexp_tuple
                                [
                                  expression (src/stage1/parser.mly[279,30284+6]..[279,30284+8])
                                    Pexp_ident "_1" (src/stage1/parser.mly[279,30284+6]..[279,30284+8])
                                  expression (src/stage1/parser.mly[279,30284+12]..[279,30284+14])
                                    Pexp_ident "_3" (src/stage1/parser.mly[279,30284+12]..[279,30284+14])
                                ]
                          core_type (src/stage1/parser.ml[805,30330+17]..[805,30330+31])
                            Ptyp_var actuals_comma
                    ]
            expression (src/stage1/parser.ml[806,30364+2]..[813,30634+26])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[806,30364+7]..[806,30364+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[806,30364+7]..[806,30364+24])
              expression (src/stage1/parser.ml[807,30392+4]..[813,30634+25])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[807,30392+8]..[807,30392+10])
                      Ppat_var "_1" (src/stage1/parser.ml[807,30392+8]..[807,30392+10])
                    expression (src/stage1/parser.ml[807,30392+13]..[807,30392+61])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[807,30392+14]..[807,30392+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[807,30392+14]..[807,30392+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[807,30392+14]..[807,30392+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[807,30392+31]..[807,30392+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[807,30392+31]..[807,30392+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[807,30392+49]..[807,30392+50])
                              Pexp_constant PConst_int (1,None)
                        ]
                      core_type (src/stage1/parser.ml[807,30392+53]..[807,30392+60])
                        Ptyp_var symbol
                ]
                expression (src/stage1/parser.ml[808,30457+4]..[813,30634+25])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[808,30457+8]..[808,30457+10])
                        Ppat_var "_2" (src/stage1/parser.ml[808,30457+8]..[808,30457+10])
                      expression (src/stage1/parser.ml[808,30457+13]..[808,30457+71])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[808,30457+14]..[808,30457+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[808,30457+14]..[808,30457+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[808,30457+14]..[808,30457+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[808,30457+31]..[808,30457+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[808,30457+31]..[808,30457+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[808,30457+49]..[808,30457+50])
                                Pexp_constant PConst_int (0,None)
                          ]
                        core_type (src/stage1/parser.ml[808,30457+53]..[808,30457+70])
                          Ptyp_var optional_actuals
                  ]
                  expression (src/stage1/parser.ml[809,30532+4]..[813,30634+25])
                    Pexp_apply
                    expression (src/stage1/parser.ml[809,30532+4]..[809,30532+12])
                      Pexp_ident "Obj.repr" (src/stage1/parser.ml[809,30532+4]..[809,30532+12])
                    [
                      <arg>
                      Nolabel
                        expression (src/stage1/parser.ml[809,30532+12]..[813,30634+25])
                          Pexp_constraint
                          expression (src/stage1/parser.mly[283,30576+4]..[283,30576+28])
                            Pexp_apply
                            expression (src/stage1/parser.mly[283,30576+6]..[283,30576+20])
                              Pexp_ident "Parameters.app" (src/stage1/parser.mly[283,30576+6]..[283,30576+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.mly[283,30576+21]..[283,30576+23])
                                  Pexp_ident "_1" (src/stage1/parser.mly[283,30576+21]..[283,30576+23])
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.mly[283,30576+24]..[283,30576+26])
                                  Pexp_ident "_2" (src/stage1/parser.mly[283,30576+24]..[283,30576+26])
                            ]
                          core_type (src/stage1/parser.ml[813,30634+17]..[813,30634+24])
                            Ptyp_var actual
                    ]
            expression (src/stage1/parser.ml[814,30661+2]..[821,30928+26])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[814,30661+7]..[814,30661+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[814,30661+7]..[814,30661+24])
              expression (src/stage1/parser.ml[815,30689+4]..[821,30928+25])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[815,30689+8]..[815,30689+10])
                      Ppat_var "_1" (src/stage1/parser.ml[815,30689+8]..[815,30689+10])
                    expression (src/stage1/parser.ml[815,30689+13]..[815,30689+61])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[815,30689+14]..[815,30689+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[815,30689+14]..[815,30689+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[815,30689+14]..[815,30689+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[815,30689+31]..[815,30689+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[815,30689+31]..[815,30689+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[815,30689+49]..[815,30689+50])
                              Pexp_constant PConst_int (1,None)
                        ]
                      core_type (src/stage1/parser.ml[815,30689+53]..[815,30689+60])
                        Ptyp_var actual
                ]
                expression (src/stage1/parser.ml[816,30754+4]..[821,30928+25])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[816,30754+8]..[816,30754+10])
                        Ppat_var "_2" (src/stage1/parser.ml[816,30754+8]..[816,30754+10])
                      expression (src/stage1/parser.ml[816,30754+13]..[816,30754+63])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[816,30754+14]..[816,30754+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[816,30754+14]..[816,30754+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[816,30754+14]..[816,30754+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[816,30754+31]..[816,30754+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[816,30754+31]..[816,30754+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[816,30754+49]..[816,30754+50])
                                Pexp_constant PConst_int (0,None)
                          ]
                        core_type (src/stage1/parser.ml[816,30754+53]..[816,30754+62])
                          Ptyp_var modifier
                  ]
                  expression (src/stage1/parser.ml[817,30821+4]..[821,30928+25])
                    Pexp_apply
                    expression (src/stage1/parser.ml[817,30821+4]..[817,30821+12])
                      Pexp_ident "Obj.repr" (src/stage1/parser.ml[817,30821+4]..[817,30821+12])
                    [
                      <arg>
                      Nolabel
                        expression (src/stage1/parser.ml[817,30821+12]..[821,30928+25])
                          Pexp_constraint
                          expression (src/stage1/parser.mly[285,30865+4]..[285,30865+33])
                            Pexp_construct "ParameterApp" (src/stage1/parser.mly[285,30865+6]..[285,30865+18])
                            Some
                              expression (src/stage1/parser.mly[285,30865+19]..[285,30865+31])
                                Pexp_tuple
                                [
                                  expression (src/stage1/parser.mly[285,30865+20]..[285,30865+22])
                                    Pexp_ident "_2" (src/stage1/parser.mly[285,30865+20]..[285,30865+22])
                                  expression (src/stage1/parser.mly[285,30865+24]..[285,30865+30])
                                    Pexp_construct "::" (src/stage1/parser.mly[285,30865+26]..[285,30865+30]) ghost
                                    Some
                                      expression (src/stage1/parser.mly[285,30865+26]..[285,30865+30]) ghost
                                        Pexp_tuple
                                        [
                                          expression (src/stage1/parser.mly[285,30865+26]..[285,30865+28])
                                            Pexp_ident "_1" (src/stage1/parser.mly[285,30865+26]..[285,30865+28])
                                          expression (src/stage1/parser.mly[285,30865+29]..[285,30865+30]) ghost
                                            Pexp_construct "[]" (src/stage1/parser.mly[285,30865+29]..[285,30865+30]) ghost
                                            None
                                        ]
                                ]
                          core_type (src/stage1/parser.ml[821,30928+17]..[821,30928+24])
                            Ptyp_var actual
                    ]
            expression (src/stage1/parser.ml[822,30955+2]..[827,31067+27])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[822,30955+7]..[822,30955+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[822,30955+7]..[822,30955+24])
              expression (src/stage1/parser.ml[823,30983+4]..[827,31067+26])
                Pexp_apply
                expression (src/stage1/parser.ml[823,30983+4]..[823,30983+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[823,30983+4]..[823,30983+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[823,30983+12]..[827,31067+26])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[289,31027+4]..[289,31027+10])
                        Pexp_construct "[]" (src/stage1/parser.mly[289,31027+6]..[289,31027+8])
                        None
                      core_type (src/stage1/parser.ml[827,31067+17]..[827,31067+25])
                        Ptyp_var actuals
                ]
            expression (src/stage1/parser.ml[828,31095+2]..[836,31415+27])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[828,31095+7]..[828,31095+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[828,31095+7]..[828,31095+24])
              expression (src/stage1/parser.ml[829,31123+4]..[836,31415+26])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[829,31123+8]..[829,31123+10])
                      Ppat_var "_1" (src/stage1/parser.ml[829,31123+8]..[829,31123+10])
                    expression (src/stage1/parser.ml[829,31123+13]..[829,31123+62])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[829,31123+14]..[829,31123+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[829,31123+14]..[829,31123+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[829,31123+14]..[829,31123+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[829,31123+31]..[829,31123+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[829,31123+31]..[829,31123+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[829,31123+49]..[829,31123+50])
                              Pexp_constant PConst_int (2,None)
                        ]
                      core_type (src/stage1/parser.ml[829,31123+53]..[829,31123+61])
                        Ptyp_var actuals
                ]
                expression (src/stage1/parser.ml[830,31189+4]..[836,31415+26])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[830,31189+8]..[830,31189+10])
                        Ppat_var "_2" (src/stage1/parser.ml[830,31189+8]..[830,31189+10])
                      expression (src/stage1/parser.ml[830,31189+13]..[830,31189+69])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[830,31189+14]..[830,31189+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[830,31189+14]..[830,31189+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[830,31189+14]..[830,31189+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[830,31189+31]..[830,31189+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[830,31189+31]..[830,31189+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[830,31189+49]..[830,31189+50])
                                Pexp_constant PConst_int (1,None)
                          ]
                        core_type (src/stage1/parser.ml[830,31189+53]..[830,31189+68])
                          Ptyp_var optional_comma
                  ]
                  expression (src/stage1/parser.ml[831,31262+4]..[836,31415+26])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[831,31262+8]..[831,31262+10])
                          Ppat_var "_3" (src/stage1/parser.ml[831,31262+8]..[831,31262+10])
                        expression (src/stage1/parser.ml[831,31262+13]..[831,31262+61])
                          Pexp_constraint
                          expression (src/stage1/parser.ml[831,31262+14]..[831,31262+50])
                            Pexp_apply
                            expression (src/stage1/parser.ml[831,31262+14]..[831,31262+30])
                              Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[831,31262+14]..[831,31262+30])
                            [
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.ml[831,31262+31]..[831,31262+48])
                                  Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[831,31262+31]..[831,31262+48])
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.ml[831,31262+49]..[831,31262+50])
                                  Pexp_constant PConst_int (0,None)
                            ]
                          core_type (src/stage1/parser.ml[831,31262+53]..[831,31262+60])
                            Ptyp_var actual
                    ]
                    expression (src/stage1/parser.ml[832,31327+4]..[836,31415+26])
                      Pexp_apply
                      expression (src/stage1/parser.ml[832,31327+4]..[832,31327+12])
                        Pexp_ident "Obj.repr" (src/stage1/parser.ml[832,31327+4]..[832,31327+12])
                      [
                        <arg>
                        Nolabel
                          expression (src/stage1/parser.ml[832,31327+12]..[836,31415+26])
                            Pexp_constraint
                            expression (src/stage1/parser.mly[291,31371+4]..[291,31371+14])
                              Pexp_construct "::" (src/stage1/parser.mly[291,31371+8]..[291,31371+10])
                              Some
                                expression (src/stage1/parser.mly[291,31371+6]..[291,31371+12]) ghost
                                  Pexp_tuple
                                  [
                                    expression (src/stage1/parser.mly[291,31371+6]..[291,31371+8])
                                      Pexp_ident "_3" (src/stage1/parser.mly[291,31371+6]..[291,31371+8])
                                    expression (src/stage1/parser.mly[291,31371+10]..[291,31371+12])
                                      Pexp_ident "_1" (src/stage1/parser.mly[291,31371+10]..[291,31371+12])
                                  ]
                            core_type (src/stage1/parser.ml[836,31415+17]..[836,31415+25])
                              Ptyp_var actuals
                      ]
            expression (src/stage1/parser.ml[837,31443+2]..[842,31555+32])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[837,31443+7]..[837,31443+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[837,31443+7]..[837,31443+24])
              expression (src/stage1/parser.ml[838,31471+4]..[842,31555+31])
                Pexp_apply
                expression (src/stage1/parser.ml[838,31471+4]..[838,31471+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[838,31471+4]..[838,31471+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[838,31471+12]..[842,31555+31])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[295,31515+4]..[295,31515+10])
                        Pexp_construct "()" (src/stage1/parser.mly[295,31515+6]..[295,31515+8])
                        None
                      core_type (src/stage1/parser.ml[842,31555+17]..[842,31555+30])
                        Ptyp_var optional_bar
                ]
            expression (src/stage1/parser.ml[843,31588+2]..[848,31700+32])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[843,31588+7]..[843,31588+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[843,31588+7]..[843,31588+24])
              expression (src/stage1/parser.ml[844,31616+4]..[848,31700+31])
                Pexp_apply
                expression (src/stage1/parser.ml[844,31616+4]..[844,31616+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[844,31616+4]..[844,31616+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[844,31616+12]..[848,31700+31])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[297,31660+4]..[297,31660+10])
                        Pexp_construct "()" (src/stage1/parser.mly[297,31660+6]..[297,31660+8])
                        None
                      core_type (src/stage1/parser.ml[848,31700+17]..[848,31700+30])
                        Ptyp_var optional_bar
                ]
            expression (src/stage1/parser.ml[849,31733+2]..[854,31863+28])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[849,31733+7]..[849,31733+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[849,31733+7]..[849,31733+24])
              expression (src/stage1/parser.ml[850,31761+4]..[854,31863+27])
                Pexp_apply
                expression (src/stage1/parser.ml[850,31761+4]..[850,31761+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[850,31761+4]..[850,31761+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[850,31761+12]..[854,31863+27])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[305,31805+4]..[305,31805+28])
                        Pexp_apply
                        expression (src/stage1/parser.mly[305,31805+6]..[305,31805+17])
                          Pexp_ident "unknown_pos" (src/stage1/parser.mly[305,31805+6]..[305,31805+17])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.mly[305,31805+18]..[305,31805+26])
                              Pexp_constant PConst_string("option",(src/stage1/parser.mly[305,31805+19]..[305,31805+25]),None)
                        ]
                      core_type (src/stage1/parser.ml[854,31863+17]..[854,31863+26])
                        Ptyp_var modifier
                ]
            expression (src/stage1/parser.ml[855,31892+2]..[860,32029+28])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[855,31892+7]..[855,31892+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[855,31892+7]..[855,31892+24])
              expression (src/stage1/parser.ml[856,31920+4]..[860,32029+27])
                Pexp_apply
                expression (src/stage1/parser.ml[856,31920+4]..[856,31920+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[856,31920+4]..[856,31920+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[856,31920+12]..[860,32029+27])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[307,31964+4]..[307,31964+35])
                        Pexp_apply
                        expression (src/stage1/parser.mly[307,31964+6]..[307,31964+17])
                          Pexp_ident "unknown_pos" (src/stage1/parser.mly[307,31964+6]..[307,31964+17])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.mly[307,31964+18]..[307,31964+33])
                              Pexp_constant PConst_string("nonempty_list",(src/stage1/parser.mly[307,31964+19]..[307,31964+32]),None)
                        ]
                      core_type (src/stage1/parser.ml[860,32029+17]..[860,32029+26])
                        Ptyp_var modifier
                ]
            expression (src/stage1/parser.ml[861,32058+2]..[866,32186+28])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[861,32058+7]..[861,32058+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[861,32058+7]..[861,32058+24])
              expression (src/stage1/parser.ml[862,32086+4]..[866,32186+27])
                Pexp_apply
                expression (src/stage1/parser.ml[862,32086+4]..[862,32086+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[862,32086+4]..[862,32086+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[862,32086+12]..[866,32186+27])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[309,32130+4]..[309,32130+26])
                        Pexp_apply
                        expression (src/stage1/parser.mly[309,32130+6]..[309,32130+17])
                          Pexp_ident "unknown_pos" (src/stage1/parser.mly[309,32130+6]..[309,32130+17])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.mly[309,32130+18]..[309,32130+24])
                              Pexp_constant PConst_string("list",(src/stage1/parser.mly[309,32130+19]..[309,32130+23]),None)
                        ]
                      core_type (src/stage1/parser.ml[866,32186+17]..[866,32186+26])
                        Ptyp_var modifier
                ]
            expression (src/stage1/parser.ml[867,32215+2]..[872,32327+37])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[867,32215+7]..[867,32215+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[867,32215+7]..[867,32215+24])
              expression (src/stage1/parser.ml[868,32243+4]..[872,32327+36])
                Pexp_apply
                expression (src/stage1/parser.ml[868,32243+4]..[868,32243+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[868,32243+4]..[868,32243+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[868,32243+12]..[872,32327+36])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[317,32287+4]..[317,32287+10])
                        Pexp_construct "[]" (src/stage1/parser.mly[317,32287+6]..[317,32287+8])
                        None
                      core_type (src/stage1/parser.ml[872,32327+17]..[872,32327+35])
                        Ptyp_var production_groups
                ]
            expression (src/stage1/parser.ml[873,32365+2]..[880,32634+37])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[873,32365+7]..[873,32365+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[873,32365+7]..[873,32365+24])
              expression (src/stage1/parser.ml[874,32393+4]..[880,32634+36])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[874,32393+8]..[874,32393+10])
                      Ppat_var "_1" (src/stage1/parser.ml[874,32393+8]..[874,32393+10])
                    expression (src/stage1/parser.ml[874,32393+13]..[874,32393+72])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[874,32393+14]..[874,32393+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[874,32393+14]..[874,32393+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[874,32393+14]..[874,32393+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[874,32393+31]..[874,32393+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[874,32393+31]..[874,32393+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[874,32393+49]..[874,32393+50])
                              Pexp_constant PConst_int (2,None)
                        ]
                      core_type (src/stage1/parser.ml[874,32393+53]..[874,32393+71])
                        Ptyp_var production_groups
                ]
                expression (src/stage1/parser.ml[875,32469+4]..[880,32634+36])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[875,32469+8]..[875,32469+10])
                        Ppat_var "_3" (src/stage1/parser.ml[875,32469+8]..[875,32469+10])
                      expression (src/stage1/parser.ml[875,32469+13]..[875,32469+71])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[875,32469+14]..[875,32469+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[875,32469+14]..[875,32469+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[875,32469+14]..[875,32469+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[875,32469+31]..[875,32469+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[875,32469+31]..[875,32469+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[875,32469+49]..[875,32469+50])
                                Pexp_constant PConst_int (0,None)
                          ]
                        core_type (src/stage1/parser.ml[875,32469+53]..[875,32469+70])
                          Ptyp_var production_group
                  ]
                  expression (src/stage1/parser.ml[876,32544+4]..[880,32634+36])
                    Pexp_apply
                    expression (src/stage1/parser.ml[876,32544+4]..[876,32544+12])
                      Pexp_ident "Obj.repr" (src/stage1/parser.ml[876,32544+4]..[876,32544+12])
                    [
                      <arg>
                      Nolabel
                        expression (src/stage1/parser.ml[876,32544+12]..[880,32634+36])
                          Pexp_constraint
                          expression (src/stage1/parser.mly[319,32588+4]..[319,32588+16])
                            Pexp_construct "::" (src/stage1/parser.mly[319,32588+9]..[319,32588+11])
                            Some
                              expression (src/stage1/parser.mly[319,32588+6]..[319,32588+14]) ghost
                                Pexp_tuple
                                [
                                  expression (src/stage1/parser.mly[319,32588+6]..[319,32588+8])
                                    Pexp_ident "_3" (src/stage1/parser.mly[319,32588+6]..[319,32588+8])
                                  expression (src/stage1/parser.mly[319,32588+12]..[319,32588+14])
                                    Pexp_ident "_1" (src/stage1/parser.mly[319,32588+12]..[319,32588+14])
                                ]
                          core_type (src/stage1/parser.ml[880,32634+17]..[880,32634+35])
                            Ptyp_var production_groups
                    ]
            expression (src/stage1/parser.ml[881,32672+2]..[910,33887+36])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[881,32672+7]..[881,32672+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[881,32672+7]..[881,32672+24])
              expression (src/stage1/parser.ml[882,32700+4]..[910,33887+35])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[882,32700+8]..[882,32700+10])
                      Ppat_var "_1" (src/stage1/parser.ml[882,32700+8]..[882,32700+10])
                    expression (src/stage1/parser.ml[882,32700+13]..[882,32700+66])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[882,32700+14]..[882,32700+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[882,32700+14]..[882,32700+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[882,32700+14]..[882,32700+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[882,32700+31]..[882,32700+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[882,32700+31]..[882,32700+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[882,32700+49]..[882,32700+50])
                              Pexp_constant PConst_int (2,None)
                        ]
                      core_type (src/stage1/parser.ml[882,32700+53]..[882,32700+65])
                        Ptyp_var productions
                ]
                expression (src/stage1/parser.ml[883,32770+4]..[910,33887+35])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[883,32770+8]..[883,32770+10])
                        Ppat_var "_2" (src/stage1/parser.ml[883,32770+8]..[883,32770+10])
                      expression (src/stage1/parser.ml[883,32770+13]..[883,32770+71])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[883,32770+14]..[883,32770+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[883,32770+14]..[883,32770+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[883,32770+14]..[883,32770+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[883,32770+31]..[883,32770+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[883,32770+31]..[883,32770+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[883,32770+49]..[883,32770+50])
                                Pexp_constant PConst_int (1,None)
                          ]
                        core_type (src/stage1/parser.ml[883,32770+53]..[883,32770+70])
                          Ptyp_constr "Syntax.raw_action" (src/stage1/parser.ml[883,32770+53]..[883,32770+70])
                          []
                  ]
                  expression (src/stage1/parser.ml[884,32845+4]..[910,33887+35])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[884,32845+8]..[884,32845+10])
                          Ppat_var "_3" (src/stage1/parser.ml[884,32845+8]..[884,32845+10])
                        expression (src/stage1/parser.ml[884,32845+13]..[884,32845+74])
                          Pexp_constraint
                          expression (src/stage1/parser.ml[884,32845+14]..[884,32845+50])
                            Pexp_apply
                            expression (src/stage1/parser.ml[884,32845+14]..[884,32845+30])
                              Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[884,32845+14]..[884,32845+30])
                            [
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.ml[884,32845+31]..[884,32845+48])
                                  Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[884,32845+31]..[884,32845+48])
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.ml[884,32845+49]..[884,32845+50])
                                  Pexp_constant PConst_int (0,None)
                            ]
                          core_type (src/stage1/parser.ml[884,32845+53]..[884,32845+73])
                            Ptyp_var optional_precedence
                    ]
                    expression (src/stage1/parser.ml[885,32923+4]..[910,33887+35])
                      Pexp_apply
                      expression (src/stage1/parser.ml[885,32923+4]..[885,32923+12])
                        Pexp_ident "Obj.repr" (src/stage1/parser.ml[885,32923+4]..[885,32923+12])
                      [
                        <arg>
                        Nolabel
                          expression (src/stage1/parser.ml[885,32923+12]..[910,33887+35])
                            Pexp_constraint
                            expression (src/stage1/parser.mly[323,32967+4]..[344,33852+5])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/stage1/parser.mly[324,32973+10]..[324,32973+37])
                                    Ppat_tuple
                                    [
                                      pattern (src/stage1/parser.mly[324,32973+10]..[324,32973+21])
                                        Ppat_var "productions" (src/stage1/parser.mly[324,32973+10]..[324,32973+21])
                                      pattern (src/stage1/parser.mly[324,32973+23]..[324,32973+29])
                                        Ppat_var "action" (src/stage1/parser.mly[324,32973+23]..[324,32973+29])
                                      pattern (src/stage1/parser.mly[324,32973+31]..[324,32973+37])
                                        Ppat_var "oprec2" (src/stage1/parser.mly[324,32973+31]..[324,32973+37])
                                    ]
                                  expression (src/stage1/parser.mly[324,32973+40]..[324,32973+50])
                                    Pexp_tuple
                                    [
                                      expression (src/stage1/parser.mly[324,32973+40]..[324,32973+42])
                                        Pexp_ident "_1" (src/stage1/parser.mly[324,32973+40]..[324,32973+42])
                                      expression (src/stage1/parser.mly[324,32973+44]..[324,32973+46])
                                        Pexp_ident "_2" (src/stage1/parser.mly[324,32973+44]..[324,32973+46])
                                      expression (src/stage1/parser.mly[324,32973+48]..[324,32973+50])
                                        Pexp_ident "_3" (src/stage1/parser.mly[324,32973+48]..[324,32973+50])
                                    ]
                              ]
                              expression (src/stage1/parser.mly[327,33148+6]..[343,33834+17])
                                Pexp_sequence
                                expression (src/stage1/parser.mly[327,33148+6]..[327,33148+50])
                                  Pexp_apply
                                  expression (src/stage1/parser.mly[327,33148+6]..[327,33148+38])
                                    Pexp_ident "ParserAux.check_production_group" (src/stage1/parser.mly[327,33148+6]..[327,33148+38])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/stage1/parser.mly[327,33148+39]..[327,33148+50])
                                        Pexp_ident "productions" (src/stage1/parser.mly[327,33148+39]..[327,33148+50])
                                  ]
                                expression (src/stage1/parser.mly[329,33218+6]..[343,33834+17])
                                  Pexp_apply
                                  expression (src/stage1/parser.mly[329,33218+6]..[329,33218+14])
                                    Pexp_ident "List.map" (src/stage1/parser.mly[329,33218+6]..[329,33218+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/stage1/parser.mly[329,33218+15]..[342,33823+10])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/stage1/parser.mly[329,33218+20]..[329,33218+51])
                                          Ppat_tuple
                                          [
                                            pattern (src/stage1/parser.mly[329,33218+21]..[329,33218+30])
                                              Ppat_var "producers" (src/stage1/parser.mly[329,33218+21]..[329,33218+30])
                                            pattern (src/stage1/parser.mly[329,33218+32]..[329,33218+38])
                                              Ppat_var "oprec1" (src/stage1/parser.mly[329,33218+32]..[329,33218+38])
                                            pattern (src/stage1/parser.mly[329,33218+40]..[329,33218+45])
                                              Ppat_var "level" (src/stage1/parser.mly[329,33218+40]..[329,33218+45])
                                            pattern (src/stage1/parser.mly[329,33218+47]..[329,33218+50])
                                              Ppat_var "pos" (src/stage1/parser.mly[329,33218+47]..[329,33218+50])
                                          ]
                                        expression (src/stage1/parser.mly[331,33311+8]..[342,33823+9])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/stage1/parser.mly[331,33311+12]..[331,33311+24])
                                                Ppat_var "pr_producers" (src/stage1/parser.mly[331,33311+12]..[331,33311+24])
                                              expression (src/stage1/parser.mly[331,33311+27]..[331,33311+66])
                                                Pexp_apply
                                                expression (src/stage1/parser.mly[331,33311+27]..[331,33311+56])
                                                  Pexp_ident "ParserAux.normalize_producers" (src/stage1/parser.mly[331,33311+27]..[331,33311+56])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/stage1/parser.mly[331,33311+57]..[331,33311+66])
                                                      Pexp_ident "producers" (src/stage1/parser.mly[331,33311+57]..[331,33311+66])
                                                ]
                                          ]
                                          expression (src/stage1/parser.mly[334,33484+8]..[342,33823+9])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/stage1/parser.mly[334,33484+12]..[334,33484+17])
                                                  Ppat_var "names" (src/stage1/parser.mly[334,33484+12]..[334,33484+17])
                                                expression (src/stage1/parser.mly[334,33484+20]..[334,33484+54])
                                                  Pexp_apply
                                                  expression (src/stage1/parser.mly[334,33484+20]..[334,33484+44])
                                                    Pexp_ident "ParserAux.producer_names" (src/stage1/parser.mly[334,33484+20]..[334,33484+44])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/stage1/parser.mly[334,33484+45]..[334,33484+54])
                                                        Pexp_ident "producers" (src/stage1/parser.mly[334,33484+45]..[334,33484+54])
                                                  ]
                                            ]
                                            expression (src/stage1/parser.mly[335,33542+8]..[342,33823+9])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/stage1/parser.mly[335,33542+12]..[335,33542+21])
                                                    Ppat_var "pr_action" (src/stage1/parser.mly[335,33542+12]..[335,33542+21])
                                                  expression (src/stage1/parser.mly[335,33542+24]..[335,33542+53])
                                                    Pexp_apply
                                                    expression (src/stage1/parser.mly[335,33542+24]..[335,33542+30])
                                                      Pexp_ident "action" (src/stage1/parser.mly[335,33542+24]..[335,33542+30])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/stage1/parser.mly[335,33542+31]..[335,33542+47])
                                                          Pexp_ident "Settings.dollars" (src/stage1/parser.mly[335,33542+31]..[335,33542+47])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/stage1/parser.mly[335,33542+48]..[335,33542+53])
                                                          Pexp_ident "names" (src/stage1/parser.mly[335,33542+48]..[335,33542+53])
                                                    ]
                                              ]
                                              expression (src/stage1/parser.mly[336,33599+8]..[342,33823+9])
                                                Pexp_record
                                                [
                                                  "pr_producers" (src/stage1/parser.mly[337,33609+10]..[337,33609+22]) ghost
                                                    expression (src/stage1/parser.mly[337,33609+10]..[337,33609+22])
                                                      Pexp_ident "pr_producers" (src/stage1/parser.mly[337,33609+10]..[337,33609+22])
                                                  "pr_action" (src/stage1/parser.mly[338,33633+10]..[338,33633+19]) ghost
                                                    expression (src/stage1/parser.mly[338,33633+10]..[338,33633+19])
                                                      Pexp_ident "pr_action" (src/stage1/parser.mly[338,33633+10]..[338,33633+19])
                                                  "pr_branch_prec_annotation" (src/stage1/parser.mly[339,33654+10]..[339,33654+35])
                                                    expression (src/stage1/parser.mly[339,33654+40]..[339,33654+76])
                                                      Pexp_apply
                                                      expression (src/stage1/parser.mly[339,33654+40]..[339,33654+58])
                                                        Pexp_ident "ParserAux.override" (src/stage1/parser.mly[339,33654+40]..[339,33654+58])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/stage1/parser.mly[339,33654+59]..[339,33654+62])
                                                            Pexp_ident "pos" (src/stage1/parser.mly[339,33654+59]..[339,33654+62])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/stage1/parser.mly[339,33654+63]..[339,33654+69])
                                                            Pexp_ident "oprec1" (src/stage1/parser.mly[339,33654+63]..[339,33654+69])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/stage1/parser.mly[339,33654+70]..[339,33654+76])
                                                            Pexp_ident "oprec2" (src/stage1/parser.mly[339,33654+70]..[339,33654+76])
                                                      ]
                                                  "pr_branch_production_level" (src/stage1/parser.mly[340,33732+10]..[340,33732+36])
                                                    expression (src/stage1/parser.mly[340,33732+40]..[340,33732+45])
                                                      Pexp_ident "level" (src/stage1/parser.mly[340,33732+40]..[340,33732+45])
                                                  "pr_branch_position" (src/stage1/parser.mly[341,33779+10]..[341,33779+28])
                                                    expression (src/stage1/parser.mly[341,33779+40]..[341,33779+43])
                                                      Pexp_ident "pos" (src/stage1/parser.mly[341,33779+40]..[341,33779+43])
                                                ]
                                                None
                                    <arg>
                                    Nolabel
                                      expression (src/stage1/parser.mly[343,33834+6]..[343,33834+17])
                                        Pexp_ident "productions" (src/stage1/parser.mly[343,33834+6]..[343,33834+17])
                                  ]
                            core_type (src/stage1/parser.ml[910,33887+17]..[910,33887+34])
                              Ptyp_var production_group
                      ]
            expression (src/stage1/parser.ml[911,33924+2]..[916,34038+39])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[911,33924+7]..[911,33924+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[911,33924+7]..[911,33924+24])
              expression (src/stage1/parser.ml[912,33952+4]..[916,34038+38])
                Pexp_apply
                expression (src/stage1/parser.ml[912,33952+4]..[912,33952+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[912,33952+4]..[912,33952+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[912,33952+12]..[916,34038+38])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[348,33996+4]..[348,33996+12])
                        Pexp_construct "None" (src/stage1/parser.mly[348,33996+6]..[348,33996+10])
                        None
                      core_type (src/stage1/parser.ml[916,34038+17]..[916,34038+37])
                        Ptyp_var optional_precedence
                ]
            expression (src/stage1/parser.ml[917,34078+2]..[923,34260+39])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[917,34078+7]..[917,34078+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[917,34078+7]..[917,34078+24])
              expression (src/stage1/parser.ml[918,34106+4]..[923,34260+38])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[918,34106+8]..[918,34106+10])
                      Ppat_var "_2" (src/stage1/parser.ml[918,34106+8]..[918,34106+10])
                    expression (src/stage1/parser.ml[918,34106+13]..[918,34106+61])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[918,34106+14]..[918,34106+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[918,34106+14]..[918,34106+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[918,34106+14]..[918,34106+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[918,34106+31]..[918,34106+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[918,34106+31]..[918,34106+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[918,34106+49]..[918,34106+50])
                              Pexp_constant PConst_int (0,None)
                        ]
                      core_type (src/stage1/parser.ml[918,34106+53]..[918,34106+60])
                        Ptyp_var symbol
                ]
                expression (src/stage1/parser.ml[919,34171+4]..[923,34260+38])
                  Pexp_apply
                  expression (src/stage1/parser.ml[919,34171+4]..[919,34171+12])
                    Pexp_ident "Obj.repr" (src/stage1/parser.ml[919,34171+4]..[919,34171+12])
                  [
                    <arg>
                    Nolabel
                      expression (src/stage1/parser.ml[919,34171+12]..[923,34260+38])
                        Pexp_constraint
                        expression (src/stage1/parser.mly[350,34215+4]..[350,34215+15])
                          Pexp_construct "Some" (src/stage1/parser.mly[350,34215+6]..[350,34215+10])
                          Some
                            expression (src/stage1/parser.mly[350,34215+11]..[350,34215+13])
                              Pexp_ident "_2" (src/stage1/parser.mly[350,34215+11]..[350,34215+13])
                        core_type (src/stage1/parser.ml[923,34260+17]..[923,34260+37])
                          Ptyp_var optional_precedence
                  ]
            expression (src/stage1/parser.ml[924,34300+2]..[930,34500+31])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[924,34300+7]..[924,34300+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[924,34300+7]..[924,34300+24])
              expression (src/stage1/parser.ml[925,34328+4]..[930,34500+30])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[925,34328+8]..[925,34328+10])
                      Ppat_var "_1" (src/stage1/parser.ml[925,34328+8]..[925,34328+10])
                    expression (src/stage1/parser.ml[925,34328+13]..[925,34328+80])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[925,34328+14]..[925,34328+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[925,34328+14]..[925,34328+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[925,34328+14]..[925,34328+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[925,34328+31]..[925,34328+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[925,34328+31]..[925,34328+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[925,34328+49]..[925,34328+50])
                              Pexp_constant PConst_int (0,None)
                        ]
                      core_type (src/stage1/parser.ml[925,34328+53]..[925,34328+79])
                        Ptyp_constr "ParserAux.early_production" (src/stage1/parser.ml[925,34328+53]..[925,34328+79])
                        []
                ]
                expression (src/stage1/parser.ml[926,34412+4]..[930,34500+30])
                  Pexp_apply
                  expression (src/stage1/parser.ml[926,34412+4]..[926,34412+12])
                    Pexp_ident "Obj.repr" (src/stage1/parser.ml[926,34412+4]..[926,34412+12])
                  [
                    <arg>
                    Nolabel
                      expression (src/stage1/parser.ml[926,34412+12]..[930,34500+30])
                        Pexp_constraint
                        expression (src/stage1/parser.mly[359,34456+4]..[359,34456+14])
                          Pexp_construct "::" (src/stage1/parser.mly[359,34456+8]..[359,34456+12]) ghost
                          Some
                            expression (src/stage1/parser.mly[359,34456+8]..[359,34456+12]) ghost
                              Pexp_tuple
                              [
                                expression (src/stage1/parser.mly[359,34456+8]..[359,34456+10])
                                  Pexp_ident "_1" (src/stage1/parser.mly[359,34456+8]..[359,34456+10])
                                expression (src/stage1/parser.mly[359,34456+11]..[359,34456+12]) ghost
                                  Pexp_construct "[]" (src/stage1/parser.mly[359,34456+11]..[359,34456+12]) ghost
                                  None
                              ]
                        core_type (src/stage1/parser.ml[930,34500+17]..[930,34500+29])
                          Ptyp_var productions
                  ]
            expression (src/stage1/parser.ml[931,34532+2]..[938,34808+31])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[931,34532+7]..[931,34532+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[931,34532+7]..[931,34532+24])
              expression (src/stage1/parser.ml[932,34560+4]..[938,34808+30])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[932,34560+8]..[932,34560+10])
                      Ppat_var "_1" (src/stage1/parser.ml[932,34560+8]..[932,34560+10])
                    expression (src/stage1/parser.ml[932,34560+13]..[932,34560+80])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[932,34560+14]..[932,34560+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[932,34560+14]..[932,34560+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[932,34560+14]..[932,34560+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[932,34560+31]..[932,34560+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[932,34560+31]..[932,34560+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[932,34560+49]..[932,34560+50])
                              Pexp_constant PConst_int (1,None)
                        ]
                      core_type (src/stage1/parser.ml[932,34560+53]..[932,34560+79])
                        Ptyp_constr "ParserAux.early_production" (src/stage1/parser.ml[932,34560+53]..[932,34560+79])
                        []
                ]
                expression (src/stage1/parser.ml[933,34644+4]..[938,34808+30])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[933,34644+8]..[933,34644+10])
                        Ppat_var "_2" (src/stage1/parser.ml[933,34644+8]..[933,34644+10])
                      expression (src/stage1/parser.ml[933,34644+13]..[933,34644+70])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[933,34644+14]..[933,34644+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[933,34644+14]..[933,34644+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[933,34644+14]..[933,34644+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[933,34644+31]..[933,34644+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[933,34644+31]..[933,34644+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[933,34644+49]..[933,34644+50])
                                Pexp_constant PConst_int (0,None)
                          ]
                        core_type (src/stage1/parser.ml[933,34644+53]..[933,34644+69])
                          Ptyp_var bar_productions
                  ]
                  expression (src/stage1/parser.ml[934,34718+4]..[938,34808+30])
                    Pexp_apply
                    expression (src/stage1/parser.ml[934,34718+4]..[934,34718+12])
                      Pexp_ident "Obj.repr" (src/stage1/parser.ml[934,34718+4]..[934,34718+12])
                    [
                      <arg>
                      Nolabel
                        expression (src/stage1/parser.ml[934,34718+12]..[938,34808+30])
                          Pexp_constraint
                          expression (src/stage1/parser.mly[361,34762+4]..[361,34762+16])
                            Pexp_construct "::" (src/stage1/parser.mly[361,34762+9]..[361,34762+11])
                            Some
                              expression (src/stage1/parser.mly[361,34762+6]..[361,34762+14]) ghost
                                Pexp_tuple
                                [
                                  expression (src/stage1/parser.mly[361,34762+6]..[361,34762+8])
                                    Pexp_ident "_1" (src/stage1/parser.mly[361,34762+6]..[361,34762+8])
                                  expression (src/stage1/parser.mly[361,34762+12]..[361,34762+14])
                                    Pexp_ident "_2" (src/stage1/parser.mly[361,34762+12]..[361,34762+14])
                                ]
                          core_type (src/stage1/parser.ml[938,34808+17]..[938,34808+29])
                            Ptyp_var productions
                    ]
            expression (src/stage1/parser.ml[939,34840+2]..[945,35040+35])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[939,34840+7]..[939,34840+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[939,34840+7]..[939,34840+24])
              expression (src/stage1/parser.ml[940,34868+4]..[945,35040+34])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[940,34868+8]..[940,34868+10])
                      Ppat_var "_2" (src/stage1/parser.ml[940,34868+8]..[940,34868+10])
                    expression (src/stage1/parser.ml[940,34868+13]..[940,34868+80])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[940,34868+14]..[940,34868+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[940,34868+14]..[940,34868+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[940,34868+14]..[940,34868+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[940,34868+31]..[940,34868+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[940,34868+31]..[940,34868+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[940,34868+49]..[940,34868+50])
                              Pexp_constant PConst_int (0,None)
                        ]
                      core_type (src/stage1/parser.ml[940,34868+53]..[940,34868+79])
                        Ptyp_constr "ParserAux.early_production" (src/stage1/parser.ml[940,34868+53]..[940,34868+79])
                        []
                ]
                expression (src/stage1/parser.ml[941,34952+4]..[945,35040+34])
                  Pexp_apply
                  expression (src/stage1/parser.ml[941,34952+4]..[941,34952+12])
                    Pexp_ident "Obj.repr" (src/stage1/parser.ml[941,34952+4]..[941,34952+12])
                  [
                    <arg>
                    Nolabel
                      expression (src/stage1/parser.ml[941,34952+12]..[945,35040+34])
                        Pexp_constraint
                        expression (src/stage1/parser.mly[365,34996+4]..[365,34996+14])
                          Pexp_construct "::" (src/stage1/parser.mly[365,34996+8]..[365,34996+12]) ghost
                          Some
                            expression (src/stage1/parser.mly[365,34996+8]..[365,34996+12]) ghost
                              Pexp_tuple
                              [
                                expression (src/stage1/parser.mly[365,34996+8]..[365,34996+10])
                                  Pexp_ident "_2" (src/stage1/parser.mly[365,34996+8]..[365,34996+10])
                                expression (src/stage1/parser.mly[365,34996+11]..[365,34996+12]) ghost
                                  Pexp_construct "[]" (src/stage1/parser.mly[365,34996+11]..[365,34996+12]) ghost
                                  None
                              ]
                        core_type (src/stage1/parser.ml[945,35040+17]..[945,35040+33])
                          Ptyp_var bar_productions
                  ]
            expression (src/stage1/parser.ml[946,35076+2]..[953,35352+35])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[946,35076+7]..[946,35076+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[946,35076+7]..[946,35076+24])
              expression (src/stage1/parser.ml[947,35104+4]..[953,35352+34])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[947,35104+8]..[947,35104+10])
                      Ppat_var "_2" (src/stage1/parser.ml[947,35104+8]..[947,35104+10])
                    expression (src/stage1/parser.ml[947,35104+13]..[947,35104+80])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[947,35104+14]..[947,35104+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[947,35104+14]..[947,35104+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[947,35104+14]..[947,35104+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[947,35104+31]..[947,35104+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[947,35104+31]..[947,35104+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[947,35104+49]..[947,35104+50])
                              Pexp_constant PConst_int (1,None)
                        ]
                      core_type (src/stage1/parser.ml[947,35104+53]..[947,35104+79])
                        Ptyp_constr "ParserAux.early_production" (src/stage1/parser.ml[947,35104+53]..[947,35104+79])
                        []
                ]
                expression (src/stage1/parser.ml[948,35188+4]..[953,35352+34])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[948,35188+8]..[948,35188+10])
                        Ppat_var "_3" (src/stage1/parser.ml[948,35188+8]..[948,35188+10])
                      expression (src/stage1/parser.ml[948,35188+13]..[948,35188+70])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[948,35188+14]..[948,35188+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[948,35188+14]..[948,35188+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[948,35188+14]..[948,35188+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[948,35188+31]..[948,35188+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[948,35188+31]..[948,35188+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[948,35188+49]..[948,35188+50])
                                Pexp_constant PConst_int (0,None)
                          ]
                        core_type (src/stage1/parser.ml[948,35188+53]..[948,35188+69])
                          Ptyp_var bar_productions
                  ]
                  expression (src/stage1/parser.ml[949,35262+4]..[953,35352+34])
                    Pexp_apply
                    expression (src/stage1/parser.ml[949,35262+4]..[949,35262+12])
                      Pexp_ident "Obj.repr" (src/stage1/parser.ml[949,35262+4]..[949,35262+12])
                    [
                      <arg>
                      Nolabel
                        expression (src/stage1/parser.ml[949,35262+12]..[953,35352+34])
                          Pexp_constraint
                          expression (src/stage1/parser.mly[367,35306+4]..[367,35306+16])
                            Pexp_construct "::" (src/stage1/parser.mly[367,35306+9]..[367,35306+11])
                            Some
                              expression (src/stage1/parser.mly[367,35306+6]..[367,35306+14]) ghost
                                Pexp_tuple
                                [
                                  expression (src/stage1/parser.mly[367,35306+6]..[367,35306+8])
                                    Pexp_ident "_2" (src/stage1/parser.mly[367,35306+6]..[367,35306+8])
                                  expression (src/stage1/parser.mly[367,35306+12]..[367,35306+14])
                                    Pexp_ident "_3" (src/stage1/parser.mly[367,35306+12]..[367,35306+14])
                                ]
                          core_type (src/stage1/parser.ml[953,35352+17]..[953,35352+33])
                            Ptyp_var bar_productions
                    ]
            expression (src/stage1/parser.ml[954,35388+2]..[965,35772+45])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[954,35388+7]..[954,35388+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[954,35388+7]..[954,35388+24])
              expression (src/stage1/parser.ml[955,35416+4]..[965,35772+44])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[955,35416+8]..[955,35416+10])
                      Ppat_var "_1" (src/stage1/parser.ml[955,35416+8]..[955,35416+10])
                    expression (src/stage1/parser.ml[955,35416+13]..[955,35416+64])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[955,35416+14]..[955,35416+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[955,35416+14]..[955,35416+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[955,35416+14]..[955,35416+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[955,35416+31]..[955,35416+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[955,35416+31]..[955,35416+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[955,35416+49]..[955,35416+50])
                              Pexp_constant PConst_int (1,None)
                        ]
                      core_type (src/stage1/parser.ml[955,35416+53]..[955,35416+63])
                        Ptyp_var producers
                ]
                expression (src/stage1/parser.ml[956,35484+4]..[965,35772+44])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[956,35484+8]..[956,35484+10])
                        Ppat_var "_2" (src/stage1/parser.ml[956,35484+8]..[956,35484+10])
                      expression (src/stage1/parser.ml[956,35484+13]..[956,35484+74])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[956,35484+14]..[956,35484+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[956,35484+14]..[956,35484+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[956,35484+14]..[956,35484+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[956,35484+31]..[956,35484+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[956,35484+31]..[956,35484+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[956,35484+49]..[956,35484+50])
                                Pexp_constant PConst_int (0,None)
                          ]
                        core_type (src/stage1/parser.ml[956,35484+53]..[956,35484+73])
                          Ptyp_var optional_precedence
                  ]
                  expression (src/stage1/parser.ml[957,35562+4]..[965,35772+44])
                    Pexp_apply
                    expression (src/stage1/parser.ml[957,35562+4]..[957,35562+12])
                      Pexp_ident "Obj.repr" (src/stage1/parser.ml[957,35562+4]..[957,35562+12])
                    [
                      <arg>
                      Nolabel
                        expression (src/stage1/parser.ml[957,35562+12]..[965,35772+44])
                          Pexp_constraint
                          expression (src/stage1/parser.mly[371,35606+4]..[375,35737+5])
                            Pexp_tuple
                            [
                              expression (src/stage1/parser.mly[371,35606+6]..[371,35606+17])
                                Pexp_apply
                                expression (src/stage1/parser.mly[371,35606+6]..[371,35606+14])
                                  Pexp_ident "List.rev" (src/stage1/parser.mly[371,35606+6]..[371,35606+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/stage1/parser.mly[371,35606+15]..[371,35606+17])
                                      Pexp_ident "_1" (src/stage1/parser.mly[371,35606+15]..[371,35606+17])
                                ]
                              expression (src/stage1/parser.mly[372,35625+6]..[372,35625+8])
                                Pexp_ident "_2" (src/stage1/parser.mly[372,35625+6]..[372,35625+8])
                              expression (src/stage1/parser.mly[373,35635+6]..[373,35635+38])
                                Pexp_apply
                                expression (src/stage1/parser.mly[373,35635+6]..[373,35635+36])
                                  Pexp_ident "ParserAux.new_production_level" (src/stage1/parser.mly[373,35635+6]..[373,35635+36])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/stage1/parser.mly[373,35635+36]..[373,35635+38])
                                      Pexp_construct "()" (src/stage1/parser.mly[373,35635+36]..[373,35635+38])
                                      None
                                ]
                              expression (src/stage1/parser.mly[374,35675+6]..[374,35675+61])
                                Pexp_apply
                                expression (src/stage1/parser.mly[374,35675+6]..[374,35675+22])
                                  Pexp_ident "Positions.import" (src/stage1/parser.mly[374,35675+6]..[374,35675+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/stage1/parser.mly[374,35675+23]..[374,35675+61])
                                      Pexp_tuple
                                      [
                                        expression (src/stage1/parser.mly[374,35675+24]..[374,35675+42])
                                          Pexp_apply
                                          expression (src/stage1/parser.mly[374,35675+24]..[374,35675+40])
                                            Pexp_ident "symbol_start_pos" (src/stage1/parser.mly[374,35675+24]..[374,35675+40])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/stage1/parser.mly[374,35675+40]..[374,35675+42])
                                                Pexp_construct "()" (src/stage1/parser.mly[374,35675+40]..[374,35675+42])
                                                None
                                          ]
                                        expression (src/stage1/parser.mly[374,35675+44]..[374,35675+60])
                                          Pexp_apply
                                          expression (src/stage1/parser.mly[374,35675+44]..[374,35675+58])
                                            Pexp_ident "symbol_end_pos" (src/stage1/parser.mly[374,35675+44]..[374,35675+58])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/stage1/parser.mly[374,35675+58]..[374,35675+60])
                                                Pexp_construct "()" (src/stage1/parser.mly[374,35675+58]..[374,35675+60])
                                                None
                                          ]
                                      ]
                                ]
                            ]
                          core_type (src/stage1/parser.ml[965,35772+17]..[965,35772+43])
                            Ptyp_constr "ParserAux.early_production" (src/stage1/parser.ml[965,35772+17]..[965,35772+43])
                            []
                    ]
            expression (src/stage1/parser.ml[966,35818+2]..[971,35930+29])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[966,35818+7]..[966,35818+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[966,35818+7]..[966,35818+24])
              expression (src/stage1/parser.ml[967,35846+4]..[971,35930+28])
                Pexp_apply
                expression (src/stage1/parser.ml[967,35846+4]..[967,35846+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[967,35846+4]..[967,35846+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[967,35846+12]..[971,35930+28])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[379,35890+4]..[379,35890+10])
                        Pexp_construct "[]" (src/stage1/parser.mly[379,35890+6]..[379,35890+8])
                        None
                      core_type (src/stage1/parser.ml[971,35930+17]..[971,35930+27])
                        Ptyp_var producers
                ]
            expression (src/stage1/parser.ml[972,35960+2]..[979,36228+29])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[972,35960+7]..[972,35960+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[972,35960+7]..[972,35960+24])
              expression (src/stage1/parser.ml[973,35988+4]..[979,36228+28])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[973,35988+8]..[973,35988+10])
                      Ppat_var "_1" (src/stage1/parser.ml[973,35988+8]..[973,35988+10])
                    expression (src/stage1/parser.ml[973,35988+13]..[973,35988+64])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[973,35988+14]..[973,35988+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[973,35988+14]..[973,35988+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[973,35988+14]..[973,35988+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[973,35988+31]..[973,35988+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[973,35988+31]..[973,35988+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[973,35988+49]..[973,35988+50])
                              Pexp_constant PConst_int (1,None)
                        ]
                      core_type (src/stage1/parser.ml[973,35988+53]..[973,35988+63])
                        Ptyp_var producers
                ]
                expression (src/stage1/parser.ml[974,36056+4]..[979,36228+28])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[974,36056+8]..[974,36056+10])
                        Ppat_var "_2" (src/stage1/parser.ml[974,36056+8]..[974,36056+10])
                      expression (src/stage1/parser.ml[974,36056+13]..[974,36056+78])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[974,36056+14]..[974,36056+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[974,36056+14]..[974,36056+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[974,36056+14]..[974,36056+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[974,36056+31]..[974,36056+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[974,36056+31]..[974,36056+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[974,36056+49]..[974,36056+50])
                                Pexp_constant PConst_int (0,None)
                          ]
                        core_type (src/stage1/parser.ml[974,36056+53]..[974,36056+77])
                          Ptyp_constr "ParserAux.early_producer" (src/stage1/parser.ml[974,36056+53]..[974,36056+77])
                          []
                  ]
                  expression (src/stage1/parser.ml[975,36138+4]..[979,36228+28])
                    Pexp_apply
                    expression (src/stage1/parser.ml[975,36138+4]..[975,36138+12])
                      Pexp_ident "Obj.repr" (src/stage1/parser.ml[975,36138+4]..[975,36138+12])
                    [
                      <arg>
                      Nolabel
                        expression (src/stage1/parser.ml[975,36138+12]..[979,36228+28])
                          Pexp_constraint
                          expression (src/stage1/parser.mly[381,36182+4]..[381,36182+16])
                            Pexp_construct "::" (src/stage1/parser.mly[381,36182+9]..[381,36182+11])
                            Some
                              expression (src/stage1/parser.mly[381,36182+6]..[381,36182+14]) ghost
                                Pexp_tuple
                                [
                                  expression (src/stage1/parser.mly[381,36182+6]..[381,36182+8])
                                    Pexp_ident "_2" (src/stage1/parser.mly[381,36182+6]..[381,36182+8])
                                  expression (src/stage1/parser.mly[381,36182+12]..[381,36182+14])
                                    Pexp_ident "_1" (src/stage1/parser.mly[381,36182+12]..[381,36182+14])
                                ]
                          core_type (src/stage1/parser.ml[979,36228+17]..[979,36228+27])
                            Ptyp_var producers
                    ]
            expression (src/stage1/parser.ml[980,36258+2]..[988,36647+43])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[980,36258+7]..[980,36258+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[980,36258+7]..[980,36258+24])
              expression (src/stage1/parser.ml[981,36286+4]..[988,36647+42])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[981,36286+8]..[981,36286+10])
                      Ppat_var "_1" (src/stage1/parser.ml[981,36286+8]..[981,36286+10])
                    expression (src/stage1/parser.ml[981,36286+13]..[981,36286+61])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[981,36286+14]..[981,36286+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[981,36286+14]..[981,36286+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[981,36286+14]..[981,36286+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[981,36286+31]..[981,36286+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[981,36286+31]..[981,36286+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[981,36286+49]..[981,36286+50])
                              Pexp_constant PConst_int (2,None)
                        ]
                      core_type (src/stage1/parser.ml[981,36286+53]..[981,36286+60])
                        Ptyp_var actual
                ]
                expression (src/stage1/parser.ml[982,36351+4]..[988,36647+42])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[982,36351+8]..[982,36351+10])
                        Ppat_var "_2" (src/stage1/parser.ml[982,36351+8]..[982,36351+10])
                      expression (src/stage1/parser.ml[982,36351+13]..[982,36351+65])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[982,36351+14]..[982,36351+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[982,36351+14]..[982,36351+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[982,36351+14]..[982,36351+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[982,36351+31]..[982,36351+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[982,36351+31]..[982,36351+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[982,36351+49]..[982,36351+50])
                                Pexp_constant PConst_int (1,None)
                          ]
                        core_type (src/stage1/parser.ml[982,36351+53]..[982,36351+64])
                          Ptyp_var attributes
                  ]
                  expression (src/stage1/parser.ml[983,36420+4]..[988,36647+42])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[983,36420+8]..[983,36420+10])
                          Ppat_var "_3" (src/stage1/parser.ml[983,36420+8]..[983,36420+10])
                        expression (src/stage1/parser.ml[983,36420+13]..[983,36420+69])
                          Pexp_constraint
                          expression (src/stage1/parser.ml[983,36420+14]..[983,36420+50])
                            Pexp_apply
                            expression (src/stage1/parser.ml[983,36420+14]..[983,36420+30])
                              Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[983,36420+14]..[983,36420+30])
                            [
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.ml[983,36420+31]..[983,36420+48])
                                  Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[983,36420+31]..[983,36420+48])
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.ml[983,36420+49]..[983,36420+50])
                                  Pexp_constant PConst_int (0,None)
                            ]
                          core_type (src/stage1/parser.ml[983,36420+53]..[983,36420+68])
                            Ptyp_var optional_semis
                    ]
                    expression (src/stage1/parser.ml[984,36493+4]..[988,36647+42])
                      Pexp_apply
                      expression (src/stage1/parser.ml[984,36493+4]..[984,36493+12])
                        Pexp_ident "Obj.repr" (src/stage1/parser.ml[984,36493+4]..[984,36493+12])
                      [
                        <arg>
                        Nolabel
                          expression (src/stage1/parser.ml[984,36493+12]..[988,36647+42])
                            Pexp_constraint
                            expression (src/stage1/parser.mly[389,36537+4]..[389,36537+80])
                              Pexp_tuple
                              [
                                expression (src/stage1/parser.mly[389,36537+6]..[389,36537+61])
                                  Pexp_apply
                                  expression (src/stage1/parser.mly[389,36537+6]..[389,36537+22])
                                    Pexp_ident "Positions.import" (src/stage1/parser.mly[389,36537+6]..[389,36537+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/stage1/parser.mly[389,36537+23]..[389,36537+61])
                                        Pexp_tuple
                                        [
                                          expression (src/stage1/parser.mly[389,36537+24]..[389,36537+42])
                                            Pexp_apply
                                            expression (src/stage1/parser.mly[389,36537+24]..[389,36537+40])
                                              Pexp_ident "symbol_start_pos" (src/stage1/parser.mly[389,36537+24]..[389,36537+40])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/stage1/parser.mly[389,36537+40]..[389,36537+42])
                                                  Pexp_construct "()" (src/stage1/parser.mly[389,36537+40]..[389,36537+42])
                                                  None
                                            ]
                                          expression (src/stage1/parser.mly[389,36537+44]..[389,36537+60])
                                            Pexp_apply
                                            expression (src/stage1/parser.mly[389,36537+44]..[389,36537+58])
                                              Pexp_ident "symbol_end_pos" (src/stage1/parser.mly[389,36537+44]..[389,36537+58])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/stage1/parser.mly[389,36537+58]..[389,36537+60])
                                                  Pexp_construct "()" (src/stage1/parser.mly[389,36537+58]..[389,36537+60])
                                                  None
                                            ]
                                        ]
                                  ]
                                expression (src/stage1/parser.mly[389,36537+66]..[389,36537+70])
                                  Pexp_construct "None" (src/stage1/parser.mly[389,36537+66]..[389,36537+70])
                                  None
                                expression (src/stage1/parser.mly[389,36537+72]..[389,36537+74])
                                  Pexp_ident "_1" (src/stage1/parser.mly[389,36537+72]..[389,36537+74])
                                expression (src/stage1/parser.mly[389,36537+76]..[389,36537+78])
                                  Pexp_ident "_2" (src/stage1/parser.mly[389,36537+76]..[389,36537+78])
                              ]
                            core_type (src/stage1/parser.ml[988,36647+17]..[988,36647+41])
                              Ptyp_constr "ParserAux.early_producer" (src/stage1/parser.ml[988,36647+17]..[988,36647+41])
                              []
                      ]
            expression (src/stage1/parser.ml[989,36691+2]..[998,37162+43])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[989,36691+7]..[989,36691+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[989,36691+7]..[989,36691+24])
              expression (src/stage1/parser.ml[990,36719+4]..[998,37162+42])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[990,36719+8]..[990,36719+10])
                      Ppat_var "_1" (src/stage1/parser.ml[990,36719+8]..[990,36719+10])
                    expression (src/stage1/parser.ml[990,36719+13]..[990,36719+78])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[990,36719+14]..[990,36719+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[990,36719+14]..[990,36719+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[990,36719+14]..[990,36719+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[990,36719+31]..[990,36719+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[990,36719+31]..[990,36719+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[990,36719+49]..[990,36719+50])
                              Pexp_constant PConst_int (4,None)
                        ]
                      core_type (src/stage1/parser.ml[990,36719+53]..[990,36719+77])
                        Ptyp_constr "Positions.located" (src/stage1/parser.ml[990,36719+60]..[990,36719+77])
                        [
                          core_type (src/stage1/parser.ml[990,36719+53]..[990,36719+59])
                            Ptyp_constr "string" (src/stage1/parser.ml[990,36719+53]..[990,36719+59])
                            []
                        ]
                ]
                expression (src/stage1/parser.ml[991,36801+4]..[998,37162+42])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/stage1/parser.ml[991,36801+8]..[991,36801+10])
                        Ppat_var "_3" (src/stage1/parser.ml[991,36801+8]..[991,36801+10])
                      expression (src/stage1/parser.ml[991,36801+13]..[991,36801+61])
                        Pexp_constraint
                        expression (src/stage1/parser.ml[991,36801+14]..[991,36801+50])
                          Pexp_apply
                          expression (src/stage1/parser.ml[991,36801+14]..[991,36801+30])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[991,36801+14]..[991,36801+30])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[991,36801+31]..[991,36801+48])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[991,36801+31]..[991,36801+48])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[991,36801+49]..[991,36801+50])
                                Pexp_constant PConst_int (2,None)
                          ]
                        core_type (src/stage1/parser.ml[991,36801+53]..[991,36801+60])
                          Ptyp_var actual
                  ]
                  expression (src/stage1/parser.ml[992,36866+4]..[998,37162+42])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[992,36866+8]..[992,36866+10])
                          Ppat_var "_4" (src/stage1/parser.ml[992,36866+8]..[992,36866+10])
                        expression (src/stage1/parser.ml[992,36866+13]..[992,36866+65])
                          Pexp_constraint
                          expression (src/stage1/parser.ml[992,36866+14]..[992,36866+50])
                            Pexp_apply
                            expression (src/stage1/parser.ml[992,36866+14]..[992,36866+30])
                              Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[992,36866+14]..[992,36866+30])
                            [
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.ml[992,36866+31]..[992,36866+48])
                                  Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[992,36866+31]..[992,36866+48])
                              <arg>
                              Nolabel
                                expression (src/stage1/parser.ml[992,36866+49]..[992,36866+50])
                                  Pexp_constant PConst_int (1,None)
                            ]
                          core_type (src/stage1/parser.ml[992,36866+53]..[992,36866+64])
                            Ptyp_var attributes
                    ]
                    expression (src/stage1/parser.ml[993,36935+4]..[998,37162+42])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[993,36935+8]..[993,36935+10])
                            Ppat_var "_5" (src/stage1/parser.ml[993,36935+8]..[993,36935+10])
                          expression (src/stage1/parser.ml[993,36935+13]..[993,36935+69])
                            Pexp_constraint
                            expression (src/stage1/parser.ml[993,36935+14]..[993,36935+50])
                              Pexp_apply
                              expression (src/stage1/parser.ml[993,36935+14]..[993,36935+30])
                                Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[993,36935+14]..[993,36935+30])
                              [
                                <arg>
                                Nolabel
                                  expression (src/stage1/parser.ml[993,36935+31]..[993,36935+48])
                                    Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[993,36935+31]..[993,36935+48])
                                <arg>
                                Nolabel
                                  expression (src/stage1/parser.ml[993,36935+49]..[993,36935+50])
                                    Pexp_constant PConst_int (0,None)
                              ]
                            core_type (src/stage1/parser.ml[993,36935+53]..[993,36935+68])
                              Ptyp_var optional_semis
                      ]
                      expression (src/stage1/parser.ml[994,37008+4]..[998,37162+42])
                        Pexp_apply
                        expression (src/stage1/parser.ml[994,37008+4]..[994,37008+12])
                          Pexp_ident "Obj.repr" (src/stage1/parser.ml[994,37008+4]..[994,37008+12])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[994,37008+12]..[998,37162+42])
                              Pexp_constraint
                              expression (src/stage1/parser.mly[391,37052+4]..[391,37052+80])
                                Pexp_tuple
                                [
                                  expression (src/stage1/parser.mly[391,37052+6]..[391,37052+61])
                                    Pexp_apply
                                    expression (src/stage1/parser.mly[391,37052+6]..[391,37052+22])
                                      Pexp_ident "Positions.import" (src/stage1/parser.mly[391,37052+6]..[391,37052+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/stage1/parser.mly[391,37052+23]..[391,37052+61])
                                          Pexp_tuple
                                          [
                                            expression (src/stage1/parser.mly[391,37052+24]..[391,37052+42])
                                              Pexp_apply
                                              expression (src/stage1/parser.mly[391,37052+24]..[391,37052+40])
                                                Pexp_ident "symbol_start_pos" (src/stage1/parser.mly[391,37052+24]..[391,37052+40])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/stage1/parser.mly[391,37052+40]..[391,37052+42])
                                                    Pexp_construct "()" (src/stage1/parser.mly[391,37052+40]..[391,37052+42])
                                                    None
                                              ]
                                            expression (src/stage1/parser.mly[391,37052+44]..[391,37052+60])
                                              Pexp_apply
                                              expression (src/stage1/parser.mly[391,37052+44]..[391,37052+58])
                                                Pexp_ident "symbol_end_pos" (src/stage1/parser.mly[391,37052+44]..[391,37052+58])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/stage1/parser.mly[391,37052+58]..[391,37052+60])
                                                    Pexp_construct "()" (src/stage1/parser.mly[391,37052+58]..[391,37052+60])
                                                    None
                                              ]
                                          ]
                                    ]
                                  expression (src/stage1/parser.mly[391,37052+63]..[391,37052+70])
                                    Pexp_construct "Some" (src/stage1/parser.mly[391,37052+63]..[391,37052+67])
                                    Some
                                      expression (src/stage1/parser.mly[391,37052+68]..[391,37052+70])
                                        Pexp_ident "_1" (src/stage1/parser.mly[391,37052+68]..[391,37052+70])
                                  expression (src/stage1/parser.mly[391,37052+72]..[391,37052+74])
                                    Pexp_ident "_3" (src/stage1/parser.mly[391,37052+72]..[391,37052+74])
                                  expression (src/stage1/parser.mly[391,37052+76]..[391,37052+78])
                                    Pexp_ident "_4" (src/stage1/parser.mly[391,37052+76]..[391,37052+78])
                                ]
                              core_type (src/stage1/parser.ml[998,37162+17]..[998,37162+41])
                                Ptyp_constr "ParserAux.early_producer" (src/stage1/parser.ml[998,37162+17]..[998,37162+41])
                                []
                        ]
            expression (src/stage1/parser.ml[999,37206+2]..[1004,37337+34])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[999,37206+7]..[999,37206+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[999,37206+7]..[999,37206+24])
              expression (src/stage1/parser.ml[1000,37234+4]..[1004,37337+33])
                Pexp_apply
                expression (src/stage1/parser.ml[1000,37234+4]..[1000,37234+12])
                  Pexp_ident "Obj.repr" (src/stage1/parser.ml[1000,37234+4]..[1000,37234+12])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[1000,37234+12]..[1004,37337+33])
                      Pexp_constraint
                      expression (src/stage1/parser.mly[398,37278+22]..[398,37278+28])
                        Pexp_construct "()" (src/stage1/parser.mly[398,37278+24]..[398,37278+26])
                        None
                      core_type (src/stage1/parser.ml[1004,37337+17]..[1004,37337+32])
                        Ptyp_var optional_semis
                ]
            expression (src/stage1/parser.ml[1005,37372+2]..[1011,37576+34])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[1005,37372+7]..[1005,37372+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[1005,37372+7]..[1005,37372+24])
              expression (src/stage1/parser.ml[1006,37400+4]..[1011,37576+33])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/stage1/parser.ml[1006,37400+8]..[1006,37400+10])
                      Ppat_var "_1" (src/stage1/parser.ml[1006,37400+8]..[1006,37400+10])
                    expression (src/stage1/parser.ml[1006,37400+13]..[1006,37400+69])
                      Pexp_constraint
                      expression (src/stage1/parser.ml[1006,37400+14]..[1006,37400+50])
                        Pexp_apply
                        expression (src/stage1/parser.ml[1006,37400+14]..[1006,37400+30])
                          Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[1006,37400+14]..[1006,37400+30])
                        [
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[1006,37400+31]..[1006,37400+48])
                              Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[1006,37400+31]..[1006,37400+48])
                          <arg>
                          Nolabel
                            expression (src/stage1/parser.ml[1006,37400+49]..[1006,37400+50])
                              Pexp_constant PConst_int (1,None)
                        ]
                      core_type (src/stage1/parser.ml[1006,37400+53]..[1006,37400+68])
                        Ptyp_var optional_semis
                ]
                expression (src/stage1/parser.ml[1007,37473+4]..[1011,37576+33])
                  Pexp_apply
                  expression (src/stage1/parser.ml[1007,37473+4]..[1007,37473+12])
                    Pexp_ident "Obj.repr" (src/stage1/parser.ml[1007,37473+4]..[1007,37473+12])
                  [
                    <arg>
                    Nolabel
                      expression (src/stage1/parser.ml[1007,37473+12]..[1011,37576+33])
                        Pexp_constraint
                        expression (src/stage1/parser.mly[399,37517+22]..[399,37517+28])
                          Pexp_construct "()" (src/stage1/parser.mly[399,37517+24]..[399,37517+26])
                          None
                        core_type (src/stage1/parser.ml[1011,37576+17]..[1011,37576+32])
                          Ptyp_var optional_semis
                  ]
            expression (src/stage1/parser.ml[1013,37631+2]..[1013,37631+90])
              Pexp_fun
              Nolabel
              None
              pattern (src/stage1/parser.ml[1013,37631+7]..[1013,37631+24])
                Ppat_var "__caml_parser_env" (src/stage1/parser.ml[1013,37631+7]..[1013,37631+24])
              expression (src/stage1/parser.ml[1013,37631+28]..[1013,37631+89])
                Pexp_apply
                expression (src/stage1/parser.ml[1013,37631+28]..[1013,37631+33])
                  Pexp_ident "raise" (src/stage1/parser.ml[1013,37631+28]..[1013,37631+33])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[1013,37631+34]..[1013,37631+89])
                      Pexp_construct "Parsing.YYexit" (src/stage1/parser.ml[1013,37631+35]..[1013,37631+49])
                      Some
                        expression (src/stage1/parser.ml[1013,37631+50]..[1013,37631+88])
                          Pexp_apply
                          expression (src/stage1/parser.ml[1013,37631+51]..[1013,37631+67])
                            Pexp_ident "Parsing.peek_val" (src/stage1/parser.ml[1013,37631+51]..[1013,37631+67])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[1013,37631+68]..[1013,37631+85])
                                Pexp_ident "__caml_parser_env" (src/stage1/parser.ml[1013,37631+68]..[1013,37631+85])
                            <arg>
                            Nolabel
                              expression (src/stage1/parser.ml[1013,37631+86]..[1013,37631+87])
                                Pexp_constant PConst_int (0,None)
                          ]
                ]
          ]
    ]
  structure_item (src/stage1/parser.ml[1015,37725+0]..[1031,38206+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[1015,37725+4]..[1015,37725+12])
          Ppat_var "yytables" (src/stage1/parser.ml[1015,37725+4]..[1015,37725+12])
        expression (src/stage1/parser.ml[1016,37740+2]..[1031,38206+39])
          Pexp_record
          [
            "Parsing.actions" (src/stage1/parser.ml[1016,37740+4]..[1016,37740+19])
              expression (src/stage1/parser.ml[1016,37740+20]..[1016,37740+25])
                Pexp_ident "yyact" (src/stage1/parser.ml[1016,37740+20]..[1016,37740+25])
            "Parsing.transl_const" (src/stage1/parser.ml[1017,37767+4]..[1017,37767+24])
              expression (src/stage1/parser.ml[1017,37767+25]..[1017,37767+39])
                Pexp_ident "yytransl_const" (src/stage1/parser.ml[1017,37767+25]..[1017,37767+39])
            "Parsing.transl_block" (src/stage1/parser.ml[1018,37808+4]..[1018,37808+24])
              expression (src/stage1/parser.ml[1018,37808+25]..[1018,37808+39])
                Pexp_ident "yytransl_block" (src/stage1/parser.ml[1018,37808+25]..[1018,37808+39])
            "Parsing.lhs" (src/stage1/parser.ml[1019,37849+4]..[1019,37849+15])
              expression (src/stage1/parser.ml[1019,37849+16]..[1019,37849+21])
                Pexp_ident "yylhs" (src/stage1/parser.ml[1019,37849+16]..[1019,37849+21])
            "Parsing.len" (src/stage1/parser.ml[1020,37872+4]..[1020,37872+15])
              expression (src/stage1/parser.ml[1020,37872+16]..[1020,37872+21])
                Pexp_ident "yylen" (src/stage1/parser.ml[1020,37872+16]..[1020,37872+21])
            "Parsing.defred" (src/stage1/parser.ml[1021,37895+4]..[1021,37895+18])
              expression (src/stage1/parser.ml[1021,37895+19]..[1021,37895+27])
                Pexp_ident "yydefred" (src/stage1/parser.ml[1021,37895+19]..[1021,37895+27])
            "Parsing.dgoto" (src/stage1/parser.ml[1022,37924+4]..[1022,37924+17])
              expression (src/stage1/parser.ml[1022,37924+18]..[1022,37924+25])
                Pexp_ident "yydgoto" (src/stage1/parser.ml[1022,37924+18]..[1022,37924+25])
            "Parsing.sindex" (src/stage1/parser.ml[1023,37951+4]..[1023,37951+18])
              expression (src/stage1/parser.ml[1023,37951+19]..[1023,37951+27])
                Pexp_ident "yysindex" (src/stage1/parser.ml[1023,37951+19]..[1023,37951+27])
            "Parsing.rindex" (src/stage1/parser.ml[1024,37980+4]..[1024,37980+18])
              expression (src/stage1/parser.ml[1024,37980+19]..[1024,37980+27])
                Pexp_ident "yyrindex" (src/stage1/parser.ml[1024,37980+19]..[1024,37980+27])
            "Parsing.gindex" (src/stage1/parser.ml[1025,38009+4]..[1025,38009+18])
              expression (src/stage1/parser.ml[1025,38009+19]..[1025,38009+27])
                Pexp_ident "yygindex" (src/stage1/parser.ml[1025,38009+19]..[1025,38009+27])
            "Parsing.tablesize" (src/stage1/parser.ml[1026,38038+4]..[1026,38038+21])
              expression (src/stage1/parser.ml[1026,38038+22]..[1026,38038+33])
                Pexp_ident "yytablesize" (src/stage1/parser.ml[1026,38038+22]..[1026,38038+33])
            "Parsing.table" (src/stage1/parser.ml[1027,38073+4]..[1027,38073+17])
              expression (src/stage1/parser.ml[1027,38073+18]..[1027,38073+25])
                Pexp_ident "yytable" (src/stage1/parser.ml[1027,38073+18]..[1027,38073+25])
            "Parsing.check" (src/stage1/parser.ml[1028,38100+4]..[1028,38100+17])
              expression (src/stage1/parser.ml[1028,38100+18]..[1028,38100+25])
                Pexp_ident "yycheck" (src/stage1/parser.ml[1028,38100+18]..[1028,38100+25])
            "Parsing.error_function" (src/stage1/parser.ml[1029,38127+4]..[1029,38127+26])
              expression (src/stage1/parser.ml[1029,38127+27]..[1029,38127+38])
                Pexp_ident "parse_error" (src/stage1/parser.ml[1029,38127+27]..[1029,38127+38])
            "Parsing.names_const" (src/stage1/parser.ml[1030,38167+4]..[1030,38167+23])
              expression (src/stage1/parser.ml[1030,38167+24]..[1030,38167+37])
                Pexp_ident "yynames_const" (src/stage1/parser.ml[1030,38167+24]..[1030,38167+37])
            "Parsing.names_block" (src/stage1/parser.ml[1031,38206+4]..[1031,38206+23])
              expression (src/stage1/parser.ml[1031,38206+24]..[1031,38206+37])
                Pexp_ident "yynames_block" (src/stage1/parser.ml[1031,38206+24]..[1031,38206+37])
          ]
          None
    ]
  structure_item (src/stage1/parser.ml[1032,38246+0]..[1033,38319+70])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[1032,38246+4]..[1032,38246+11])
          Ppat_var "grammar" (src/stage1/parser.ml[1032,38246+4]..[1032,38246+11])
        expression (src/stage1/parser.ml[1032,38246+12]..[1033,38319+70]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/stage1/parser.ml[1032,38246+12]..[1032,38246+45])
            Ppat_constraint
            pattern (src/stage1/parser.ml[1032,38246+13]..[1032,38246+19])
              Ppat_var "lexfun" (src/stage1/parser.ml[1032,38246+13]..[1032,38246+19])
            core_type (src/stage1/parser.ml[1032,38246+22]..[1032,38246+44])
              Ptyp_arrow
              Nolabel
              core_type (src/stage1/parser.ml[1032,38246+22]..[1032,38246+35])
                Ptyp_constr "Lexing.lexbuf" (src/stage1/parser.ml[1032,38246+22]..[1032,38246+35])
                []
              core_type (src/stage1/parser.ml[1032,38246+39]..[1032,38246+44])
                Ptyp_constr "token" (src/stage1/parser.ml[1032,38246+39]..[1032,38246+44])
                []
          expression (src/stage1/parser.ml[1032,38246+46]..[1033,38319+70]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/stage1/parser.ml[1032,38246+46]..[1032,38246+70])
              Ppat_constraint
              pattern (src/stage1/parser.ml[1032,38246+47]..[1032,38246+53])
                Ppat_var "lexbuf" (src/stage1/parser.ml[1032,38246+47]..[1032,38246+53])
              core_type (src/stage1/parser.ml[1032,38246+56]..[1032,38246+69])
                Ptyp_constr "Lexing.lexbuf" (src/stage1/parser.ml[1032,38246+56]..[1032,38246+69])
                []
            expression (src/stage1/parser.ml[1033,38319+3]..[1033,38319+70])
              Pexp_constraint
              expression (src/stage1/parser.ml[1033,38319+4]..[1033,38319+44])
                Pexp_apply
                expression (src/stage1/parser.ml[1033,38319+4]..[1033,38319+19])
                  Pexp_ident "Parsing.yyparse" (src/stage1/parser.ml[1033,38319+4]..[1033,38319+19])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[1033,38319+20]..[1033,38319+28])
                      Pexp_ident "yytables" (src/stage1/parser.ml[1033,38319+20]..[1033,38319+28])
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[1033,38319+29]..[1033,38319+30])
                      Pexp_constant PConst_int (1,None)
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[1033,38319+31]..[1033,38319+37])
                      Pexp_ident "lexfun" (src/stage1/parser.ml[1033,38319+31]..[1033,38319+37])
                  <arg>
                  Nolabel
                    expression (src/stage1/parser.ml[1033,38319+38]..[1033,38319+44])
                      Pexp_ident "lexbuf" (src/stage1/parser.ml[1033,38319+38]..[1033,38319+44])
                ]
              core_type (src/stage1/parser.ml[1033,38319+47]..[1033,38319+69])
                Ptyp_constr "Syntax.partial_grammar" (src/stage1/parser.ml[1033,38319+47]..[1033,38319+69])
                []
    ]
]

type token =
  | TOKEN 
  | TYPE 
  | LEFT 
  | RIGHT 
  | NONASSOC 
  | START 
  | PREC 
  | PUBLIC 
  | COLON 
  | BAR 
  | EOF 
  | EQUAL 
  | INLINE 
  | LPAREN 
  | RPAREN 
  | COMMA 
  | QUESTION 
  | STAR 
  | PLUS 
  | PARAMETER 
  | ON_ERROR_REDUCE 
  | PERCENTATTRIBUTE 
  | SEMI 
  | LID of string Positions.located 
  | UID of string Positions.located 
  | QID of string Positions.located 
  | HEADER of Stretch.t 
  | OCAMLTYPE of Stretch.ocamltype 
  | PERCENTPERCENT of Stretch.t Lazy.t 
  | ACTION of Syntax.raw_action 
  | ATTRIBUTE of Syntax.attribute 
  | GRAMMARATTRIBUTE of Syntax.attribute 
  | LET 
  | TILDE 
  | UNDERSCORE 
  | COLONEQUAL 
  | EQUALEQUAL 
open Parsing
let _ = parse_error
open Syntax
open Positions
let yytransl_const =
  [|257;258;259;260;261;262;263;264;265;266;0;267;268;269;270;271;272;273;274;275;276;277;278;288;289;290;291;292;0|]
let yytransl_block = [|279;280;281;282;283;284;285;286;287;0|]
let yylhs =
  "\255\255\001\000\006\000\006\000\004\000\004\000\004\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\b\000\b\000\012\000\012\000\012\000\r\000\r\000\016\000\016\000\016\000\015\000\015\000\014\000\014\000\t\000\t\000\n\000\n\000\017\000\017\000\005\000\005\000\005\000\018\000\019\000\019\000\019\000\019\000\019\000\020\000\020\000\024\000\024\000\025\000\025\000\026\000\026\000\027\000\027\000\011\000\011\000\021\000\021\000\028\000\028\000\028\000\023\000\023\000\022\000\030\000\030\000\029\000\029\000\031\000\031\000\003\000 \000 \000\002\000\002\000!\000!\000\000\000"
let yylen =
  "\002\000\004\000\001\000\001\000\000\000\002\000\002\000\001\000\003\000\002\000\003\000\003\000\002\000\002\000\001\000\003\000\002\000\000\000\001\000\001\000\001\000\001\000\000\000\003\000\001\000\001\000\001\000\000\000\001\000\000\000\002\000\000\000\005\000\000\000\002\000\000\000\001\000\000\000\002\000\002\000\b\000\000\000\001\000\001\000\002\000\002\000\000\000\003\000\001\000\003\000\000\000\003\000\001\000\003\000\002\000\002\000\000\000\003\000\000\000\001\000\001\000\001\000\001\000\000\000\003\000\003\000\000\000\002\000\001\000\002\000\002\000\003\000\002\000\000\000\002\000\003\000\005\000\000\000\002\000\002\000"
let yydefred =
  "\000\000\004\000\000\000O\000\000\000\000\000\000\000\019\000\020\000\021\000\000\000\000\0008\0008\000\006\000\007\000%\000\014\000\005\000\022\000\018\000\031\0008\000!\000\000\000\r
let yydgoto =
  "\002\000\003\000^\000T\000\004\000\028\000+\000\018\000\021\000\030\000\024\000\026\000\019\000\029\000%\000#\0003\000C\000,\000-\000G\000R\000U\000Z\000L\000<\000D\000E\000@\000V\000`\000Y\000W\000j\000"
let yysindex =
  "\011\000\000\000\000\000\000\000\191\000\t\255\011\255\000\000\000\000\000\000\025\255\026\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\255\000\000-\255\004\255\006\000-\255-\255-\255\024\255\000\000\000\000!\255G\255\000\000Z\255\000\000c\255\000\000\000\000\000\000\000\000!\255!\255T\255\000\000\000\000\000\000i\255R\255\000\000\000\000\000\000G\255\000\000_\255!\255\000\000\000\000\000\000\000\000\000\000{\255\000\000G\255~\255\000\255!\255\154\255\000\000\000\000!\255x\255\155\255\158\255\000\000!\255\000\000\000\000\000\000\000\000\160\255\000\000\162\2550\255\000\000\000\000\172\255\185\255!\255\182\255\000\000y\255\000\000\160\255\000\000\000\000\000\000!\255\000\000\000\000\000\000y\255\177\255\000\000\000\000\177\255"
let yyrindex =
  "\000\000\000\000\000\000\000\000\000\000C\000\000\000\000\000\000\000\000\000\129\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\000\000\000z\255\153\255j\255\184\255\160\000\215\255\253\000\000\000\000\000\000\000\020\255\000\000m\255\000\000\137\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\255[\255\000\000\000\000\000\000\254\254\000\000$\000\000\000\000\000\000\000\000\000\000\000\000\000\186\255\000\000b\000\000\000\180\255\000\000\000\000\000\000\000\000\000\000\187\255\000\000P\255\000\000\000\000\000\000\000\000\000\000\000\000\171\255\000\000\000\000\003\255\000\000\000\000\b\000\001\000\000\000\014\001\000\000\142\255\000\000\193\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\142\255\173\255\000\000\000\000\204\255"
let yygindex =
  "\000\000\000\000\000\000}\000\000\000\000\000\000\000\000\000\000\000\000\000\200\000\248\255\000\000\000\000\220\255\236\255\214\255\000\000\000\000\000\000\000\000\000\000~\000\000\000\146\000\000\000\152\000\223\255\000\000\000\000\139\000\134\000\000\000\135\000"
let yytablesize = 556
let yytable =
  "5\000B\0004\0008\0009\000\027\000'\000\029\000(\000.\000/\000\029\000\001\000B\000\031\000J\000=\000>\000?\000\"\000A\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000K\000\029\000\029\000H\000B\000\029\000$\000\029\000\020\000K\000\022\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000!\000\029\000\029\000d\000\029\000\023\000\025\000_\000\\\0000\0001\0002\000f\000\"\0002\0002\0002\0002\0002\0002\0002\000i\000kb\000K\000\029\000\012\000\012\000\012\000\012\000\012\000\012\000[\000\\\000e\0004\000.\000K\000K\000K\000l\000D\0000\000K\000\012\000\012\000\012\000\012\000\027\000\027\000\027\000\012\000L\000\012\000a\000L\000\012\000\n\000\n\000\n\000\n\000\n\000\n\000F\000 \000h\000S\000N\000L\000L\000L\000c\000g\000\000\000L\000\n\000\n\000\n\000\n\000\027\000\027\000\027\000\n\000m\000\n\000\000\000\000\000\nb\000\b\000\b\000\b\000\b\000\b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\b\000\b\000\b\000\b\000\000\000\027\000\000\000\b\000\000\000\b\000\000\000\000\000\b\000\005\000\006\000\007\000\b\000\t\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\011\000\012\000\r\000\014\000\000\000\000\000\000\000\015\000\000\000\016\000\000\000\000\000\017\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\t\000\000\000\t\000\000\000\000\000\t\000\011\000\011\000\011\000\011\000\011\000\011\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\011\000\011\000\011\000\011\000\000\000\024\000\000\000\011\000\024\000\011\000\000\000\024\000\011\000\000\000\024\000\024\000\024\000\000\000\000\000\000\000\024\000\024\000\024\000\024\000\000\000\000\000\000\000\024\000\024\000"
let yycheck =
  "$\000\000\000#\000-\000.\000\r\000\000\000\t\001\000\000\029\000\030\000\r\001\001\000\n\001\022\000\015\001\016\001\017\001\018\001\015\0018\000\001\001\002\001\003\001\004\001\005\001\006\001\007\001F\000\t\001\n\001C\000\029\001\r\001\030\001\015\001\027\001O\000\027\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\023\001\028\001\029\001\\\000\031\001\027\001\027\001W\000\007\001\023\001\024\001\025\001_\000\015\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001e\000i\000\n\001\023\001\024\001\025\001\014\001\015\001\016\001\017\001\018\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\007\001\028\001\029\001\030\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\016\001\017\001\018\001\030\001\012\001\023\001\024\001\025\001\015\001\b\001\024\001\029\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\r\001\028\001\025\001\030\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\023\001\024\001\025\001\023\001\024\001\025\001\015\001\r\001\016\001\017\001\018\001\014\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\007\001\028\001\030\001\n\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\023\001\024\001\025\001\t\001\022\001\023\001\024\001\025\001\n\001\014\001\n\001\029\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\007\001\028\001\n\001\n\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\029\001\007\001\011\001\014\001\t\001\023\001\024\001\025\001\022\001\029\001\014\001\029\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\007\001\028\001X\000\n\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\029\001\023\000b\000O\000J\000\023\001\024\001\025\001[\000a\000\255\255\029\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001k\000\028\001\255\255\255\255\031\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\b\001\255\255\n\001\255\255\012\001\b\001\255\255\bn\001\028\001\255\255\r\001\031\001\255\255\016\001\017\001\018\001\255\255\255\255\255\255\022\001\023\001\024\001\025\001\255\255\255\255\255\255\029\001\030\001"
let yynames_const =
  "TOKEN\000TYPE\000LEFT\000RIGHT\000NONASSOC\000START\000PREC\000PUBLIC\000COLON\000BAR\000EOF\000EQUAL\000INLINE\000LPAREN\000RPAREN\000COMMA\000QUESTION\000STAR\000PLUS\000PARAMETER\000ON_ERROR_REDUCE\000PERCENTATTRIBUTE\000SEMI\000LET\000TILDE\000UNDERSCORE\000COLONEQUAL\000EQUALEQUAL\000"
let yynames_block =
  "LID\000UID\000QID\000HEADER\000OCAMLTYPE\000PERCENTPERCENT\000ACTION\000ATTRIBUTE\000GRAMMARATTRIBUTE\000"
let yyact =
  [|((fun _ -> failwith "parser"));((fun __caml_parser_env ->
                                       let _1 =
                                         (Parsing.peek_val __caml_parser_env
                                            3 : 'declarations) in
                                       let _2 =
                                         (Parsing.peek_val __caml_parser_env
                                            2 : Stretch.t Lazy.t) in
                                       let _3 =
                                         (Parsing.peek_val __caml_parser_env
                                            1 : 'rules) in
                                       let _4 =
                                         (Parsing.peek_val __caml_parser_env
                                            0 : 'postlude) in
                                       Obj.repr
                                         ({
                                            pg_filename = "";
                                            pg_declarations = (List.rev _1);
                                            pg_rules = _3;
                                            pg_postlude = _4
                                          } : Syntax.partial_grammar)));((
    fun __caml_parser_env -> Obj.repr (None : 'postlude)));((fun
                                                               __caml_parser_env
                                                               ->
                                                               let _1 =
                                                                 (Parsing.peek_val
                                                                    __caml_parser_env
                                                                    0 : 
                                                                 Stretch.t
                                                                   Lazy.t) in
                                                               Obj.repr
                                                                 (Some
                                                                    (
                                                                    Lazy.force
                                                                    _1) : 
                                                                 'postlude)));((
    fun __caml_parser_env -> Obj.repr ([] : 'declarations)));((fun
                                                                 __caml_parser_env
                                                                 ->
                                                                 let _1 =
                                                                   (Parsing.peek_val
                                                                    __caml_parser_env
                                                                    1 : 
                                                                   'declarations) in
                                                                 let _2 =
                                                                   (Parsing.peek_val
                                                                    __caml_parser_env
                                                                    0 : 
                                                                   'declaration) in
                                                                 Obj.repr
                                                                   (_2 @ _1 : 
                                                                   'declarations)));((
    fun __caml_parser_env ->
      let _1 = (Parsing.peek_val __caml_parser_env 1 : 'declarations) in
      Obj.repr (_1 : 'declarations)));((fun __caml_parser_env ->
                                          let _1 =
                                            (Parsing.peek_val
                                               __caml_parser_env 0 : 
                                            Stretch.t) in
                                          Obj.repr
                                            ([unknown_pos (DCode _1)] : 
                                            'declaration)));((fun
                                                                __caml_parser_env
                                                                ->
                                                                let _2 =
                                                                  (Parsing.peek_val
                                                                    __caml_parser_env
                                                                    1 : 
                                                                  'optional_ocamltype) in
                                                                let _3 =
                                                                  (Parsing.peek_val
                                                                    __caml_parser_env
                                                                    0 : 
                                                                  'terminals) in
                                                                Obj.repr
                                                                  (let 
                                                                    (ty, ts)
                                                                    =
                                                                    (_2, _3) in
                                                                   List.map
                                                                    (Positions.map
                                                                    (fun
                                                                    (terminal,
                                                                    alias,
                                                                    attrs) ->
                                                                    DToken
                                                                    (ty,
                                                                    terminal,
                                                                    alias,
                                                                    attrs)))
                                                                    ts : 
                                                                  'declaration)));((
    fun __caml_parser_env ->
      let _2 = (Parsing.peek_val __caml_parser_env 0 : 'nonterminals) in
      Obj.repr
        (List.map (Positions.map (fun nonterminal -> DStart nonterminal)) _2 : 
        'declaration)));((fun __caml_parser_env ->
                            let _2 =
                              (Parsing.peek_val __caml_parser_env 1 : 
                              Stretch.ocamltype) in
                            let _3 =
                              (Parsing.peek_val __caml_parser_env 0 : 
                              'actuals) in
                            Obj.repr
                              (List.map
                                 (Positions.map (fun nt -> DType (_2, nt)))
                                 (List.map Parameters.with_pos _3) : 
                              'declaration)));((fun __caml_parser_env ->
                                                  let _2 =
                                                    (Parsing.peek_val
                                                       __caml_parser_env 1 : 
                                                    Stretch.ocamltype) in
                                                  let _3 =
                                                    (Parsing.peek_val
                                                       __caml_parser_env 0 : 
                                                    'nonterminals) in
                                                  Obj.repr
                                                    (Misc.mapd
                                                       (fun ntloc ->
                                                          Positions.mapd
                                                            (fun nt ->
                                                               ((DStart nt),
                                                                 (DType
                                                                    (_2,
                                                                    (ParameterVar
                                                                    ntloc)))))
                                                            ntloc) _3 : 
                                                    'declaration)));((
    fun __caml_parser_env ->
      let _1 = (Parsing.peek_val __caml_parser_env 1 : 'priority_keyword) in
      let _2 = (Parsing.peek_val __caml_parser_env 0 : 'symbols) in
      Obj.repr
        (let prec =
           ParserAux.new_precedence_level
             ((rhs_start_pos 1), (rhs_end_pos 1)) in
         List.map
           (Positions.map (fun symbol -> DTokenProperties (symbol, _1, prec)))
           _2 : 'declaration)));((fun __caml_parser_env ->
                                    let _2 =
                                      (Parsing.peek_val __caml_parser_env 0 : 
                                      Stretch.ocamltype) in
                                    Obj.repr
                                      ([unknown_pos (DParameter _2)] : 
                                      'declaration)));((fun __caml_parser_env
                                                          ->
                                                          let _1 =
                                                            (Parsing.peek_val
                                                               __caml_parser_env
                                                               0 : Syntax.attribute) in
                                                          Obj.repr
                                                            ([unknown_pos
                                                                (DGrammarAttribute
                                                                   _1)] : 
                                                            'declaration)));((
    fun __caml_parser_env ->
      let _2 = (Parsing.peek_val __caml_parser_env 1 : 'actuals) in
      let _3 = (Parsing.peek_val __caml_parser_env 0 : 'attributes) in
      Obj.repr ([unknown_pos (DSymbolAttributes (_2, _3))] : 'declaration)));((
    fun __caml_parser_env ->
      let _2 = (Parsing.peek_val __caml_parser_env 0 : 'actuals) in
      Obj.repr
        (let prec = ParserAux.new_on_error_reduce_level () in
         List.map (Positions.map (fun nt -> DOnErrorReduce (nt, prec)))
           (List.map Parameters.with_pos _2) : 'declaration)));((fun
                                                                   __caml_parser_env
                                                                   ->
                                                                   Obj.repr
                                                                    (None : 
                                                                    'optional_ocamltype)));((
    fun __caml_parser_env ->
      let _1 = (Parsing.peek_val __caml_parser_env 0 : Stretch.ocamltype) in
      Obj.repr (Some _1 : 'optional_ocamltype)));((fun __caml_parser_env ->
                                                     Obj.repr
                                                       (LeftAssoc : 'priority_keyword)));((
    fun __caml_parser_env -> Obj.repr (RightAssoc : 'priority_keyword)));((
    fun __caml_parser_env -> Obj.repr (NonAssoc : 'priority_keyword)));((
    fun __caml_parser_env -> Obj.repr ([] : 'symbols)));((fun
                                                            __caml_parser_env
                                                            ->
                                                            let _1 =
                                                              (Parsing.peek_val
                                                                 __caml_parser_env
                                                                 2 : 
                                                              'symbols) in
                                                            let _2 =
                                                              (Parsing.peek_val
                                                                 __caml_parser_env
                                                                 1 : 
                                                              'optional_comma) in
                                                            let _3 =
                                                              (Parsing.peek_val
                                                                 __caml_parser_env
                                                                 0 : 
                                                              'symbol) in
                                                            Obj.repr (_3 ::
                                                              _1 : 'symbols)));((
    fun __caml_parser_env ->
      let _1 =
        (Parsing.peek_val __caml_parser_env 0 : string Positions.located) in
      Obj.repr (_1 : 'symbol)));((fun __caml_parser_env ->
                                    let _1 =
                                      (Parsing.peek_val __caml_parser_env 0 : 
                                      string Positions.located) in
                                    Obj.repr (_1 : 'symbol)));((fun
                                                                  __caml_parser_env
                                                                  ->
                                                                  let _1 =
                                                                    (
                                                                    Parsing.peek_val
                                                                    __caml_parser_env
                                                                    0 : 
                                                                    string
                                                                    Positions.located) in
                                                                  Obj.repr
                                                                    (_1 : 
                                                                    'symbol)));((
    fun __caml_parser_env -> Obj.repr (() : 'optional_comma)));((fun
                                                                   __caml_parser_env
                                                                   ->
                                                                   Obj.repr
                                                                    (() : 
                                                                    'optional_comma)));((
    fun __caml_parser_env -> Obj.repr ([] : 'attributes)));((fun
                                                               __caml_parser_env
                                                               ->
                                                               let _1 =
                                                                 (Parsing.peek_val
                                                                    __caml_parser_env
                                                                    1 : 
                                                                 Syntax.attribute) in
                                                               let _2 =
                                                                 (Parsing.peek_val
                                                                    __caml_parser_env
                                                                    0 : 
                                                                 'attributes) in
                                                               Obj.repr (_1
                                                                 ::
                                                                 _2 : 
                                                                 'attributes)));((
    fun __caml_parser_env -> Obj.repr ([] : 'terminals)));((fun
                                                              __caml_parser_env
                                                              ->
                                                              let _1 =
                                                                (Parsing.peek_val
                                                                   __caml_parser_env
                                                                   4 : 
                                                                'terminals) in
                                                              let _2 =
                                                                (Parsing.peek_val
                                                                   __caml_parser_env
                                                                   3 : 
                                                                'optional_comma) in
                                                              let _3 =
                                                                (Parsing.peek_val
                                                                   __caml_parser_env
                                                                   2 : 
                                                                string
                                                                  Positions.located) in
                                                              let _4 =
                                                                (Parsing.peek_val
                                                                   __caml_parser_env
                                                                   1 : 
                                                                'optional_alias) in
                                                              let _5 =
                                                                (Parsing.peek_val
                                                                   __caml_parser_env
                                                                   0 : 
                                                                'attributes) in
                                                              Obj.repr
                                                                (let 
                                                                   (ts, uid,
                                                                    alias,
                                                                    attrs)
                                                                   =
                                                                   (_1, _3,
                                                                    _4, _5) in
                                                                 let alias =
                                                                   Option.map
                                                                    Positions.value
                                                                    alias in
                                                                 (Positions.map
                                                                    (
                                                                    fun uid
                                                                    ->
                                                                    (uid,
                                                                    alias,
                                                                    attrs))
                                                                    uid)
                                                                   :: ts : 
                                                                'terminals)));((
    fun __caml_parser_env -> Obj.repr ([] : 'nonterminals)));((fun
                                                                 __caml_parser_env
                                                                 ->
                                                                 let _1 =
                                                                   (Parsing.peek_val
                                                                    __caml_parser_env
                                                                    1 : 
                                                                   'nonterminals) in
                                                                 let _2 =
                                                                   (Parsing.peek_val
                                                                    __caml_parser_env
                                                                    0 : 
                                                                   string
                                                                    Positions.located) in
                                                                 Obj.repr (_2
                                                                   ::
                                                                   _1 : 
                                                                   'nonterminals)));((
    fun __caml_parser_env -> Obj.repr (None : 'optional_alias)));((fun
                                                                    __caml_parser_env
                                                                    ->
                                                                    let _1 =
                                                                    (Parsing.peek_val
                                                                    __caml_parser_env
                                                                    0 : 
                                                                    string
                                                                    Positions.located) in
                                                                    Obj.repr
                                                                    (Some _1 : 
                                                                    'optional_alias)));((
    fun __caml_parser_env -> Obj.repr ([] : 'rules)));((fun __caml_parser_env
                                                          ->
                                                          let _1 =
                                                            (Parsing.peek_val
                                                               __caml_parser_env
                                                               1 : 'rules) in
                                                          let _2 =
                                                            (Parsing.peek_val
                                                               __caml_parser_env
                                                               0 : 'rule) in
                                                          Obj.repr (_2 ::
                                                            _1 : 'rules)));((
    fun __caml_parser_env ->
      let _1 = (Parsing.peek_val __caml_parser_env 1 : 'rules) in
      Obj.repr (_1 : 'rules)));((fun __caml_parser_env ->
                                   let _1 =
                                     (Parsing.peek_val __caml_parser_env 7 : 
                                     'flags) in
                                   let _2 =
                                     (Parsing.peek_val __caml_parser_env 6 : 
                                     'symbol) in
                                   let _3 =
                                     (Parsing.peek_val __caml_parser_env 5 : 
                                     'attributes) in
                                   let _4 =
                                     (Parsing.peek_val __caml_parser_env 4 : 
                                     'optional_formal_parameters) in
                                   let _6 =
                                     (Parsing.peek_val __caml_parser_env 2 : 
                                     'optional_bar) in
                                   let _7 =
                                     (Parsing.peek_val __caml_parser_env 1 : 
                                     'production_group) in
                                   let _8 =
                                     (Parsing.peek_val __caml_parser_env 0 : 
                                     'production_groups) in
                                   Obj.repr
                                     (let (public, inline) = _1 in
                                      {
                                        pr_public_flag = public;
                                        pr_inline_flag = inline;
                                        pr_nt = (Positions.value _2);
                                        pr_positions =
                                          [Positions.position _2];
                                        pr_attributes = _3;
                                        pr_parameters = _4;
                                        pr_branches =
                                          (List.flatten (_7 :: (List.rev _8)))
                                      } : 'rule)));((fun __caml_parser_env ->
                                                       Obj.repr
                                                         ((false, false) : 
                                                         'flags)));((
    fun __caml_parser_env -> Obj.repr ((true, false) : 'flags)));((fun
                                                                    __caml_parser_env
                                                                    ->
                                                                    Obj.repr
                                                                    ((false,
                                                                    true) : 
                                                                    'flags)));((
    fun __caml_parser_env -> Obj.repr ((true, true) : 'flags)));((fun
                                                                    __caml_parser_env
                                                                    ->
                                                                    Obj.repr
                                                                    ((true,
                                                                    true) : 
                                                                    'flags)));((
    fun __caml_parser_env -> Obj.repr ([] : 'optional_formal_parameters)));((
    fun __caml_parser_env ->
      let _2 = (Parsing.peek_val __caml_parser_env 1 : 'formal_parameters) in
      Obj.repr (_2 : 'optional_formal_parameters)));((fun __caml_parser_env
                                                        ->
                                                        let _1 =
                                                          (Parsing.peek_val
                                                             __caml_parser_env
                                                             0 : 'symbol) in
                                                        Obj.repr
                                                          ([Positions.value
                                                              _1] : 'formal_parameters)));((
    fun __caml_parser_env ->
      let _1 = (Parsing.peek_val __caml_parser_env 2 : 'symbol) in
      let _3 = (Parsing.peek_val __caml_parser_env 0 : 'formal_parameters) in
      Obj.repr ((Positions.value _1) :: _3 : 'formal_parameters)));((
    fun __caml_parser_env -> Obj.repr ([] : 'optional_actuals)));((fun
                                                                    __caml_parser_env
                                                                    ->
                                                                    let _2 =
                                                                    (Parsing.peek_val
                                                                    __caml_parser_env
                                                                    1 : 
                                                                    'actuals_comma) in
                                                                    Obj.repr
                                                                    (_2 : 
                                                                    'optional_actuals)));((
    fun __caml_parser_env ->
      let _1 = (Parsing.peek_val __caml_parser_env 0 : 'actual) in
      Obj.repr ([_1] : 'actuals_comma)));((fun __caml_parser_env ->
                                             let _1 =
                                               (Parsing.peek_val
                                                  __caml_parser_env 2 : 
                                               'actual) in
                                             let _3 =
                                               (Parsing.peek_val
                                                  __caml_parser_env 0 : 
                                               'actuals_comma) in
                                             Obj.repr (_1 ::
                                               _3 : 'actuals_comma)));((
    fun __caml_parser_env ->
      let _1 = (Parsing.peek_val __caml_parser_env 1 : 'symbol) in
      let _2 = (Parsing.peek_val __caml_parser_env 0 : 'optional_actuals) in
      Obj.repr (Parameters.app _1 _2 : 'actual)));((fun __caml_parser_env ->
                                                      let _1 =
                                                        (Parsing.peek_val
                                                           __caml_parser_env
                                                           1 : 'actual) in
                                                      let _2 =
                                                        (Parsing.peek_val
                                                           __caml_parser_env
                                                           0 : 'modifier) in
                                                      Obj.repr
                                                        (ParameterApp
                                                           (_2, [_1]) : 
                                                        'actual)));((
    fun __caml_parser_env -> Obj.repr ([] : 'actuals)));((fun
                                                            __caml_parser_env
                                                            ->
                                                            let _1 =
                                                              (Parsing.peek_val
                                                                 __caml_parser_env
                                                                 2 : 
                                                              'actuals) in
                                                            let _2 =
                                                              (Parsing.peek_val
                                                                 __caml_parser_env
                                                                 1 : 
                                                              'optional_comma) in
                                                            let _3 =
                                                              (Parsing.peek_val
                                                                 __caml_parser_env
                                                                 0 : 
                                                              'actual) in
                                                            Obj.repr (_3 ::
                                                              _1 : 'actuals)));((
    fun __caml_parser_env -> Obj.repr (() : 'optional_bar)));((fun
                                                                 __caml_parser_env
                                                                 ->
                                                                 Obj.repr
                                                                   (() : 
                                                                   'optional_bar)));((
    fun __caml_parser_env -> Obj.repr (unknown_pos "option" : 'modifier)));((
    fun __caml_parser_env ->
      Obj.repr (unknown_pos "nonempty_list" : 'modifier)));((fun
                                                               __caml_parser_env
                                                               ->
                                                               Obj.repr
                                                                 (unknown_pos
                                                                    "list" : 
                                                                 'modifier)));((
    fun __caml_parser_env -> Obj.repr ([] : 'production_groups)));((fun
                                                                    __caml_parser_env
                                                                    ->
                                                                    let _1 =
                                                                    (Parsing.peek_val
                                                                    __caml_parser_env
                                                                    2 : 
                                                                    'production_groups) in
                                                                    let _3 =
                                                                    (Parsing.peek_val
                                                                    __caml_parser_env
                                                                    0 : 
                                                                    'production_group) in
                                                                    Obj.repr
                                                                    (_3 ::
                                                                    _1 : 
                                                                    'production_groups)));((
    fun __caml_parser_env ->
      let _1 = (Parsing.peek_val __caml_parser_env 2 : 'productions) in
      let _2 = (Parsing.peek_val __caml_parser_env 1 : Syntax.raw_action) in
      let _3 = (Parsing.peek_val __caml_parser_env 0 : 'optional_precedence) in
      Obj.repr
        (let (productions, action, oprec2) = (_1, _2, _3) in
         ParserAux.check_production_group productions;
         List.map
           (fun (producers, oprec1, level, pos) ->
              let pr_producers = ParserAux.normalize_producers producers in
              let names = ParserAux.producer_names producers in
              let pr_action = action Settings.dollars names in
              {
                pr_producers;
                pr_action;
                pr_branch_prec_annotation =
                  (ParserAux.override pos oprec1 oprec2);
                pr_branch_production_level = level;
                pr_branch_position = pos
              }) productions : 'production_group)));((fun __caml_parser_env
                                                        ->
                                                        Obj.repr
                                                          (None : 'optional_precedence)));((
    fun __caml_parser_env ->
      let _2 = (Parsing.peek_val __caml_parser_env 0 : 'symbol) in
      Obj.repr (Some _2 : 'optional_precedence)));((fun __caml_parser_env ->
                                                      let _1 =
                                                        (Parsing.peek_val
                                                           __caml_parser_env
                                                           0 : ParserAux.early_production) in
                                                      Obj.repr
                                                        ([_1] : 'productions)));((
    fun __caml_parser_env ->
      let _1 =
        (Parsing.peek_val __caml_parser_env 1 : ParserAux.early_production) in
      let _2 = (Parsing.peek_val __caml_parser_env 0 : 'bar_productions) in
      Obj.repr (_1 :: _2 : 'productions)));((fun __caml_parser_env ->
                                               let _2 =
                                                 (Parsing.peek_val
                                                    __caml_parser_env 0 : 
                                                 ParserAux.early_production) in
                                               Obj.repr
                                                 ([_2] : 'bar_productions)));((
    fun __caml_parser_env ->
      let _2 =
        (Parsing.peek_val __caml_parser_env 1 : ParserAux.early_production) in
      let _3 = (Parsing.peek_val __caml_parser_env 0 : 'bar_productions) in
      Obj.repr (_2 :: _3 : 'bar_productions)));((fun __caml_parser_env ->
                                                   let _1 =
                                                     (Parsing.peek_val
                                                        __caml_parser_env 1 : 
                                                     'producers) in
                                                   let _2 =
                                                     (Parsing.peek_val
                                                        __caml_parser_env 0 : 
                                                     'optional_precedence) in
                                                   Obj.repr
                                                     (((List.rev _1), _2,
                                                        (ParserAux.new_production_level
                                                           ()),
                                                        (Positions.import
                                                           ((symbol_start_pos
                                                               ()),
                                                             (symbol_end_pos
                                                                ())))) : 
                                                     ParserAux.early_production)));((
    fun __caml_parser_env -> Obj.repr ([] : 'producers)));((fun
                                                              __caml_parser_env
                                                              ->
                                                              let _1 =
                                                                (Parsing.peek_val
                                                                   __caml_parser_env
                                                                   1 : 
                                                                'producers) in
                                                              let _2 =
                                                                (Parsing.peek_val
                                                                   __caml_parser_env
                                                                   0 : 
                                                                ParserAux.early_producer) in
                                                              Obj.repr (_2 ::
                                                                _1 : 
                                                                'producers)));((
    fun __caml_parser_env ->
      let _1 = (Parsing.peek_val __caml_parser_env 2 : 'actual) in
      let _2 = (Parsing.peek_val __caml_parser_env 1 : 'attributes) in
      let _3 = (Parsing.peek_val __caml_parser_env 0 : 'optional_semis) in
      Obj.repr
        (((Positions.import ((symbol_start_pos ()), (symbol_end_pos ()))),
           None, _1, _2) : ParserAux.early_producer)));((fun
                                                           __caml_parser_env
                                                           ->
                                                           let _1 =
                                                             (Parsing.peek_val
                                                                __caml_parser_env
                                                                4 : string
                                                                    Positions.located) in
                                                           let _3 =
                                                             (Parsing.peek_val
                                                                __caml_parser_env
                                                                2 : 'actual) in
                                                           let _4 =
                                                             (Parsing.peek_val
                                                                __caml_parser_env
                                                                1 : 'attributes) in
                                                           let _5 =
                                                             (Parsing.peek_val
                                                                __caml_parser_env
                                                                0 : 'optional_semis) in
                                                           Obj.repr
                                                             (((Positions.import
                                                                  ((symbol_start_pos
                                                                    ()),
                                                                    (
                                                                    symbol_end_pos
                                                                    ()))),
                                                                (Some _1),
                                                                _3, _4) : 
                                                             ParserAux.early_producer)));((
    fun __caml_parser_env -> Obj.repr (() : 'optional_semis)));((fun
                                                                   __caml_parser_env
                                                                   ->
                                                                   let _1 =
                                                                    (Parsing.peek_val
                                                                    __caml_parser_env
                                                                    1 : 
                                                                    'optional_semis) in
                                                                   Obj.repr
                                                                    (() : 
                                                                    'optional_semis)));((
    fun __caml_parser_env ->
      raise (Parsing.YYexit (Parsing.peek_val __caml_parser_env 0))))|]
let yytables =
  {
    Parsing.actions = yyact;
    Parsing.transl_const = yytransl_const;
    Parsing.transl_block = yytransl_block;
    Parsing.lhs = yylhs;
    Parsing.len = yylen;
    Parsing.defred = yydefred;
    Parsing.dgoto = yydgoto;
    Parsing.sindex = yysindex;
    Parsing.rindex = yyrindex;
    Parsing.gindex = yygindex;
    Parsing.tablesize = yytablesize;
    Parsing.table = yytable;
    Parsing.check = yycheck;
    Parsing.error_function = parse_error;
    Parsing.names_const = yynames_const;
    Parsing.names_block = yynames_block
  }
let grammar (lexfun : Lexing.lexbuf -> token) (lexbuf : Lexing.lexbuf) =
  (Parsing.yyparse yytables 1 lexfun lexbuf : Syntax.partial_grammar)
[
  structure_item (src/stage1/parser.ml[1,0+0]..src/stage1/parser.ml[74,1250+14])
    Tstr_type Rec
    [
      type_declaration token/396 (src/stage1/parser.ml[1,0+0]..src/stage1/parser.ml[74,1250+14])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (src/stage1/parser.ml[2,13+2]..src/stage1/parser.ml[2,13+9])
                TOKEN/397
                []
                None
              (src/stage1/parser.ml[3,23+2]..src/stage1/parser.ml[3,23+8])
                TYPE/398
                []
                None
              (src/stage1/parser.ml[4,32+2]..src/stage1/parser.ml[4,32+8])
                LEFT/399
                []
                None
              (src/stage1/parser.ml[5,41+2]..src/stage1/parser.ml[5,41+9])
                RIGHT/400
                []
                None
              (src/stage1/parser.ml[6,51+2]..src/stage1/parser.ml[6,51+12])
                NONASSOC/401
                []
                None
              (src/stage1/parser.ml[7,64+2]..src/stage1/parser.ml[7,64+9])
                START/402
                []
                None
              (src/stage1/parser.ml[8,74+2]..src/stage1/parser.ml[8,74+8])
                PREC/403
                []
                None
              (src/stage1/parser.ml[9,83+2]..src/stage1/parser.ml[9,83+10])
                PUBLIC/404
                []
                None
              (src/stage1/parser.ml[10,94+2]..src/stage1/parser.ml[10,94+9])
                COLON/405
                []
                None
              (src/stage1/parser.ml[11,104+2]..src/stage1/parser.ml[11,104+7])
                BAR/406
                []
                None
              (src/stage1/parser.ml[12,112+2]..src/stage1/parser.ml[12,112+7])
                EOF/407
                []
                None
              (src/stage1/parser.ml[13,120+2]..src/stage1/parser.ml[13,120+9])
                EQUAL/408
                []
                None
              (src/stage1/parser.ml[14,130+2]..src/stage1/parser.ml[14,130+10])
                INLINE/409
                []
                None
              (src/stage1/parser.ml[15,141+2]..src/stage1/parser.ml[15,141+10])
                LPAREN/410
                []
                None
              (src/stage1/parser.ml[16,152+2]..src/stage1/parser.ml[16,152+10])
                RPAREN/411
                []
                None
              (src/stage1/parser.ml[17,163+2]..src/stage1/parser.ml[17,163+9])
                COMMA/412
                []
                None
              (src/stage1/parser.ml[18,173+2]..src/stage1/parser.ml[18,173+12])
                QUESTION/413
                []
                None
              (src/stage1/parser.ml[19,186+2]..src/stage1/parser.ml[19,186+8])
                STAR/414
                []
                None
              (src/stage1/parser.ml[20,195+2]..src/stage1/parser.ml[20,195+8])
                PLUS/415
                []
                None
              (src/stage1/parser.ml[21,204+2]..src/stage1/parser.ml[21,204+13])
                PARAMETER/416
                []
                None
              (src/stage1/parser.ml[22,218+2]..src/stage1/parser.ml[22,218+19])
                ON_ERROR_REDUCE/417
                []
                None
              (src/stage1/parser.ml[23,238+2]..src/stage1/parser.ml[23,238+20])
                PERCENTATTRIBUTE/418
                []
                None
              (src/stage1/parser.ml[24,259+2]..src/stage1/parser.ml[24,259+8])
                SEMI/419
                []
                None
              (src/stage1/parser.ml[25,268+2]..src/stage1/parser.ml[29,371+1])
                LID/420
                [
                  core_type (src/stage1/parser.mly[33,310+8]..src/stage1/parser.mly[33,310+32])
                    Ttyp_constr "Dune__exe!.Positions.located"
                    [
                      core_type (src/stage1/parser.mly[33,310+8]..src/stage1/parser.mly[33,310+14])
                        Ttyp_constr "string/15!"
                        []
                    ]
                ]
                None
              (src/stage1/parser.ml[30,373+2]..src/stage1/parser.ml[34,476+1])
                UID/456
                [
                  core_type (src/stage1/parser.mly[33,415+8]..src/stage1/parser.mly[33,415+32])
                    Ttyp_constr "Dune__exe!.Positions.located"
                    [
                      core_type (src/stage1/parser.mly[33,415+8]..src/stage1/parser.mly[33,415+14])
                        Ttyp_constr "string/15!"
                        []
                    ]
                ]
                None
              (src/stage1/parser.ml[35,478+2]..src/stage1/parser.ml[39,581+1])
                QID/457
                [
                  core_type (src/stage1/parser.mly[33,520+8]..src/stage1/parser.mly[33,520+32])
                    Ttyp_constr "Dune__exe!.Positions.located"
                    [
                      core_type (src/stage1/parser.mly[33,520+8]..src/stage1/parser.mly[33,520+14])
                        Ttyp_constr "string/15!"
                        []
                    ]
                ]
                None
              (src/stage1/parser.ml[40,583+2]..src/stage1/parser.ml[44,674+1])
                HEADER/458
                [
                  core_type (src/stage1/parser.mly[34,628+8]..src/stage1/parser.mly[34,628+17])
                    Ttyp_constr "Dune__exe!.Stretch.t"
                    []
                ]
                None
              (src/stage1/parser.ml[45,676+2]..src/stage1/parser.ml[49,778+1])
                OCAMLTYPE/461
                [
                  core_type (src/stage1/parser.mly[35,724+8]..src/stage1/parser.mly[35,724+25])
                    Ttyp_constr "Dune__exe!.Stretch.ocamltype"
                    []
                ]
                None
              (src/stage1/parser.ml[50,780+2]..src/stage1/parser.ml[54,886+1])
                PERCENTPERCENT/462
                [
                  core_type (src/stage1/parser.mly[36,833+8]..src/stage1/parser.mly[36,833+24])
                    Ttyp_constr "Stdlib!.Lazy.t"
                    [
                      core_type (src/stage1/parser.mly[36,833+8]..src/stage1/parser.mly[36,833+17])
                        Ttyp_constr "Dune__exe!.Stretch.t"
                        []
                    ]
                ]
                None
              (src/stage1/parser.ml[55,888+2]..src/stage1/parser.ml[59,987+1])
                ACTION/472
                [
                  core_type (src/stage1/parser.mly[37,933+8]..src/stage1/parser.mly[37,933+25])
                    Ttyp_constr "Dune__exe!.Syntax.raw_action"
                    []
                ]
                None
              (src/stage1/parser.ml[60,989+2]..src/stage1/parser.ml[64,1090+1])
                ATTRIBUTE/508
                [
                  core_type (src/stage1/parser.mly[38,1037+8]..src/stage1/parser.mly[38,1037+24])
                    Ttyp_constr "Dune__exe!.Syntax.attribute"
                    []
                ]
                None
              (src/stage1/parser.ml[65,1092+2]..src/stage1/parser.ml[69,1200+1])
                GRAMMARATTRIBUTE/509
                [
                  core_type (src/stage1/parser.mly[38,1147+8]..src/stage1/parser.mly[38,1147+24])
                    Ttyp_constr "Dune__exe!.Syntax.attribute"
                    []
                ]
                None
              (src/stage1/parser.ml[70,1202+2]..src/stage1/parser.ml[70,1202+7])
                LET/510
                []
                None
              (src/stage1/parser.ml[71,1210+2]..src/stage1/parser.ml[71,1210+9])
                TILDE/511
                []
                None
              (src/stage1/parser.ml[72,1220+2]..src/stage1/parser.ml[72,1220+14])
                UNDERSCORE/512
                []
                None
              (src/stage1/parser.ml[73,1235+2]..src/stage1/parser.ml[73,1235+14])
                COLONEQUAL/513
                []
                None
              (src/stage1/parser.ml[74,1250+2]..src/stage1/parser.ml[74,1250+14])
                EQUALEQUAL/514
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (src/stage1/parser.ml[76,1266+0]..src/stage1/parser.ml[76,1266+12])
    Tstr_open Fresh
    module_expr (src/stage1/parser.ml[76,1266+5]..src/stage1/parser.ml[76,1266+12])
      Tmod_ident "Stdlib!.Parsing"
  structure_item (src/stage1/parser.ml[77,1279+0]..src/stage1/parser.ml[77,1279+19])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[77,1279+4]..src/stage1/parser.ml[77,1279+5])
          Tpat_any
        expression (src/stage1/parser.ml[77,1279+8]..src/stage1/parser.ml[77,1279+19])
          Texp_ident "Stdlib!.Parsing.parse_error"
    ]
  structure_item (src/stage1/parser.mly[25,1331+0]..src/stage1/parser.mly[25,1331+11])
    Tstr_open Fresh
    module_expr (src/stage1/parser.mly[25,1331+5]..src/stage1/parser.mly[25,1331+11])
      Tmod_ident "Dune__exe!.Syntax"
  structure_item (src/stage1/parser.mly[26,1343+0]..src/stage1/parser.mly[26,1343+14])
    Tstr_open Fresh
    module_expr (src/stage1/parser.mly[26,1343+5]..src/stage1/parser.mly[26,1343+14])
      Tmod_ident "Dune__exe!.Positions"
  structure_item (src/stage1/parser.ml[84,1387+0]..src/stage1/parser.ml[113,1981+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[84,1387+4]..src/stage1/parser.ml[84,1387+18])
          Tpat_var "yytransl_const/730"
        expression (src/stage1/parser.ml[84,1387+21]..src/stage1/parser.ml[113,1981+7])
          Texp_array
          [
            expression (src/stage1/parser.ml[85,1411+2]..src/stage1/parser.ml[85,1411+5])
              Texp_constant Const_int 257
            expression (src/stage1/parser.ml[86,1430+2]..src/stage1/parser.ml[86,1430+5])
              Texp_constant Const_int 258
            expression (src/stage1/parser.ml[87,1448+2]..src/stage1/parser.ml[87,1448+5])
              Texp_constant Const_int 259
            expression (src/stage1/parser.ml[88,1466+2]..src/stage1/parser.ml[88,1466+5])
              Texp_constant Const_int 260
            expression (src/stage1/parser.ml[89,1485+2]..src/stage1/parser.ml[89,1485+5])
              Texp_constant Const_int 261
            expression (src/stage1/parser.ml[90,1507+2]..src/stage1/parser.ml[90,1507+5])
              Texp_constant Const_int 262
            expression (src/stage1/parser.ml[91,1526+2]..src/stage1/parser.ml[91,1526+5])
              Texp_constant Const_int 263
            expression (src/stage1/parser.ml[92,1544+2]..src/stage1/parser.ml[92,1544+5])
              Texp_constant Const_int 264
            expression (src/stage1/parser.ml[93,1564+2]..src/stage1/parser.ml[93,1564+5])
              Texp_constant Const_int 265
            expression (src/stage1/parser.ml[94,1583+2]..src/stage1/parser.ml[94,1583+5])
              Texp_constant Const_int 266
            expression (src/stage1/parser.ml[95,1600+4]..src/stage1/parser.ml[95,1600+5])
              Texp_constant Const_int 0
            expression (src/stage1/parser.ml[96,1617+2]..src/stage1/parser.ml[96,1617+5])
              Texp_constant Const_int 267
            expression (src/stage1/parser.ml[97,1636+2]..src/stage1/parser.ml[97,1636+5])
              Texp_constant Const_int 268
            expression (src/stage1/parser.ml[98,1656+2]..src/stage1/parser.ml[98,1656+5])
              Texp_constant Const_int 269
            expression (src/stage1/parser.ml[99,1676+2]..src/stage1/parser.ml[99,1676+5])
              Texp_constant Const_int 270
            expression (src/stage1/parser.ml[100,1696+2]..src/stage1/parser.ml[100,1696+5])
              Texp_constant Const_int 271
            expression (src/stage1/parser.ml[101,1715+2]..src/stage1/parser.ml[101,1715+5])
              Texp_constant Const_int 272
            expression (src/stage1/parser.ml[102,1737+2]..src/stage1/parser.ml[102,1737+5])
              Texp_constant Const_int 273
            expression (src/stage1/parser.ml[103,1755+2]..src/stage1/parser.ml[103,1755+5])
              Texp_constant Const_int 274
            expression (src/stage1/parser.ml[104,1773+2]..src/stage1/parser.ml[104,1773+5])
              Texp_constant Const_int 275
            expression (src/stage1/parser.ml[105,1796+2]..src/stage1/parser.ml[105,1796+5])
              Texp_constant Const_int 276
            expression (src/stage1/parser.ml[106,1825+2]..src/stage1/parser.ml[106,1825+5])
              Texp_constant Const_int 277
            expression (src/stage1/parser.ml[107,1855+2]..src/stage1/parser.ml[107,1855+5])
              Texp_constant Const_int 278
            expression (src/stage1/parser.ml[108,1873+2]..src/stage1/parser.ml[108,1873+5])
              Texp_constant Const_int 288
            expression (src/stage1/parser.ml[109,1890+2]..src/stage1/parser.ml[109,1890+5])
              Texp_constant Const_int 289
            expression (src/stage1/parser.ml[110,1909+2]..src/stage1/parser.ml[110,1909+5])
              Texp_constant Const_int 290
            expression (src/stage1/parser.ml[111,1933+2]..src/stage1/parser.ml[111,1933+5])
              Texp_constant Const_int 291
            expression (src/stage1/parser.ml[112,1957+2]..src/stage1/parser.ml[112,1957+5])
              Texp_constant Const_int 292
            expression (src/stage1/parser.ml[113,1981+4]..src/stage1/parser.ml[113,1981+5])
              Texp_constant Const_int 0
          ]
    ]
  structure_item (src/stage1/parser.ml[115,1990+0]..src/stage1/parser.ml[125,2209+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[115,1990+4]..src/stage1/parser.ml[115,1990+18])
          Tpat_var "yytransl_block/731"
        expression (src/stage1/parser.ml[115,1990+21]..src/stage1/parser.ml[125,2209+7])
          Texp_array
          [
            expression (src/stage1/parser.ml[116,2014+2]..src/stage1/parser.ml[116,2014+5])
              Texp_constant Const_int 279
            expression (src/stage1/parser.ml[117,2031+2]..src/stage1/parser.ml[117,2031+5])
              Texp_constant Const_int 280
            expression (src/stage1/parser.ml[118,2048+2]..src/stage1/parser.ml[118,2048+5])
              Texp_constant Const_int 281
            expression (src/stage1/parser.ml[119,2065+2]..src/stage1/parser.ml[119,2065+5])
              Texp_constant Const_int 282
            expression (src/stage1/parser.ml[120,2085+2]..src/stage1/parser.ml[120,2085+5])
              Texp_constant Const_int 283
            expression (src/stage1/parser.ml[121,2108+2]..src/stage1/parser.ml[121,2108+5])
              Texp_constant Const_int 284
            expression (src/stage1/parser.ml[122,2136+2]..src/stage1/parser.ml[122,2136+5])
              Texp_constant Const_int 285
            expression (src/stage1/parser.ml[123,2156+2]..src/stage1/parser.ml[123,2156+5])
              Texp_constant Const_int 286
            expression (src/stage1/parser.ml[124,2179+2]..src/stage1/parser.ml[124,2179+5])
              Texp_constant Const_int 287
            expression (src/stage1/parser.ml[125,2209+4]..src/stage1/parser.ml[125,2209+5])
              Texp_constant Const_int 0
          ]
    ]
  structure_item (src/stage1/parser.ml[127,2218+0]..src/stage1/parser.ml[137,2835+57])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[127,2218+4]..src/stage1/parser.ml[127,2218+9])
          Tpat_var "yylhs/732"
        expression (src/stage1/parser.ml[127,2218+12]..src/stage1/parser.ml[137,2835+57])
          Texp_constant Const_string("\255\255\001\000\006\000\006\000\004\000\004\000\004\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\b\000\b\000\012\000\012\000\012\000\r\000\r\000\016\000\016\000\016\000\015\000\015\000\014\000\014\000\t\000\t\000\n\000\n\000\017\000\017\000\005\000\005\000\005\000\018\000\019\000\019\000\019\000\019\000\019\000\020\000\020\000\024\000\024\000\025\000\025\000\026\000\026\000\027\000\027\000\011\000\011\000\021\000\021\000\028\000\028\000\028\000\023\000\023\000\022\000\030\000\030\000\029\000\029\000\031\000\031\000\003\000 \000 \000\002\000\002\000!\000!\000\000\000",(src/stage1/parser.ml[127,2218+13]..src/stage1/parser.ml[137,2835+56]),None)
    ]
  structure_item (src/stage1/parser.ml[139,2894+0]..src/stage1/parser.ml[149,3511+57])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[139,2894+4]..src/stage1/parser.ml[139,2894+9])
          Tpat_var "yylen/733"
        expression (src/stage1/parser.ml[139,2894+12]..src/stage1/parser.ml[149,3511+57])
          Texp_constant Const_string("\002\000\004\000\001\000\001\000\000\000\002\000\002\000\001\000\003\000\002\000\003\000\003\000\002\000\002\000\001\000\003\000\002\000\000\000\001\000\001\000\001\000\001\000\000\000\003\000\001\000\001\000\001\000\000\000\001\000\000\000\002\000\000\000\005\000\000\000\002\000\000\000\001\000\000\000\002\000\002\000\b\000\000\000\001\000\001\000\002\000\002\000\000\000\003\000\001\000\003\000\000\000\003\000\001\000\003\000\002\000\002\000\000\000\003\000\000\000\001\000\001\000\001\000\001\000\000\000\003\000\003\000\000\000\002\000\001\000\002\000\002\000\003\000\002\000\000\000\002\000\003\000\005\000\000\000\002\000\002\000",(src/stage1/parser.ml[139,2894+13]..src/stage1/parser.ml[149,3511+56]),None)
    ]
  structure_item (src/stage1/parser.ml[151,3570+0]..src/stage1/parser.ml[165,4454+41])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[151,3570+4]..src/stage1/parser.ml[151,3570+12])
          Tpat_var "yydefred/734"
        expression (src/stage1/parser.ml[151,3570+15]..src/stage1/parser.ml[165,4454+41])
          Texp_constant Const_string("\000\000\004\000\000\000O\000\000\000\000\000\000\000\019\000\020\000\021\000\000\000\000\0008\0008\000\006\000\007\000%\000\014\000\005\000\022\000\018\000\031\0008\000!\000\000\000\rsrc/stage1/parser.ml[151,3570+16]..src/stage1/parser.ml[165,4454+40]),None)
    ]
  structure_item (src/stage1/parser.ml[167,4497+0]..src/stage1/parser.ml[172,4786+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[167,4497+4]..src/stage1/parser.ml[167,4497+11])
          Tpat_var "yydgoto/735"
        expression (src/stage1/parser.ml[167,4497+14]..src/stage1/parser.ml[172,4786+9])
          Texp_constant Const_string("\002\000\003\000^\000T\000\004\000\028\000+\000\018\000\021\000\030\000\024\000\026\000\019\000\029\000%\000#\0003\000C\000,\000-\000G\000R\000U\000Z\000L\000<\000D\000E\000@\000V\000`\000Y\000W\000j\000",(src/stage1/parser.ml[167,4497+15]..src/stage1/parser.ml[172,4786+8]),None)
    ]
  structure_item (src/stage1/parser.ml[174,4797+0]..src/stage1/parser.ml[188,5681+41])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[174,4797+4]..src/stage1/parser.ml[174,4797+12])
          Tpat_var "yysindex/736"
        expression (src/stage1/parser.ml[174,4797+15]..src/stage1/parser.ml[188,5681+41])
          Texp_constant Const_string("\011\000\000\000\000\000\000\000\191\000\t\255\011\255\000\000\000\000\000\000\025\255\026\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\255\000\000-\255\004\255\006\000-\255-\255-\255\024\255\000\000\000\000!\255G\255\000\000Z\255\000\000c\255\000\000\000\000\000\000\000\000!\255!\255T\255\000\000\000\000\000\000i\255R\255\000\000\000\000\000\000G\255\000\000_\255!\255\000\000\000\000\000\000\000\000\000\000{\255\000\000G\255~\255\000\255!\255\154\255\000\000\000\000!\255x\255\155\255\158\255\000\000!\255\000\000\000\000\000\000\000\000\160\255\000\000\162\2550\255\000\000\000\000\172\255\185\255!\255\182\255\000\000y\255\000\000\160\255\000\000\000\000\000\000!\255\000\000\000\000\000\000y\255\177\255\000\000\000\000\177\255",(src/stage1/parser.ml[174,4797+16]..src/stage1/parser.ml[188,5681+40]),None)
    ]
  structure_item (src/stage1/parser.ml[190,5724+0]..src/stage1/parser.ml[204,6608+41])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[190,5724+4]..src/stage1/parser.ml[190,5724+12])
          Tpat_var "yyrindex/737"
        expression (src/stage1/parser.ml[190,5724+15]..src/stage1/parser.ml[204,6608+41])
          Texp_constant Const_string("\000\000\000\000\000\000\000\000\000\000C\000\000\000\000\000\000\000\000\000\129\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\000\000\000z\255\153\255j\255\184\255\160\000\215\255\253\000\000\000\000\000\000\000\020\255\000\000m\255\000\000\137\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\255[\255\000\000\000\000\000\000\254\254\000\000$\000\000\000\000\000\000\000\000\000\000\000\000\000\186\255\000\000b\000\000\000\180\255\000\000\000\000\000\000\000\000\000\000\187\255\000\000P\255\000\000\000\000\000\000\000\000\000\000\000\000\171\255\000\000\000\000\003\255\000\000\000\000\b\000\001\000\000\000\014\001\000\000\142\255\000\000\193\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\142\255\173\255\000\000\000\000\204\255",(src/stage1/parser.ml[190,5724+16]..src/stage1/parser.ml[204,6608+40]),None)
    ]
  structure_item (src/stage1/parser.ml[206,6651+0]..src/stage1/parser.ml[211,6941+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[206,6651+4]..src/stage1/parser.ml[206,6651+12])
          Tpat_var "yygindex/738"
        expression (src/stage1/parser.ml[206,6651+15]..src/stage1/parser.ml[211,6941+9])
          Texp_constant Const_string("\000\000\000\000\000\000}\000\000\000\000\000\000\000\000\000\000\000\000\000\200\000\248\255\000\000\000\000\220\255\236\255\214\255\000\000\000\000\000\000\000\000\000\000~\000\000\000\146\000\000\000\152\000\223\255\000\000\000\000\139\000\134\000\000\000\135\000",(src/stage1/parser.ml[206,6651+16]..src/stage1/parser.ml[211,6941+8]),None)
    ]
  structure_item (src/stage1/parser.ml[213,6952+0]..src/stage1/parser.ml[213,6952+21])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[213,6952+4]..src/stage1/parser.ml[213,6952+15])
          Tpat_var "yytablesize/739"
        expression (src/stage1/parser.ml[213,6952+18]..src/stage1/parser.ml[213,6952+21])
          Texp_constant Const_int 556
    ]
  structure_item (src/stage1/parser.ml[214,6974+0]..src/stage1/parser.ml[284,11553+33])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[214,6974+4]..src/stage1/parser.ml[214,6974+11])
          Tpat_var "yytable/740"
        expression (src/stage1/parser.ml[214,6974+14]..src/stage1/parser.ml[284,11553+33])
          Texp_constant Const_string("5\000B\0004\0008\0009\000\027\000'\000\029\000(\000.\000/\000\029\000\001\000B\000\031\000J\000=\000>\000?\000\"\000A\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000K\000\029\000\029\000H\000B\000\029\000$\000\029\000\020\000K\000\022\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000!\000\029\000\029\000d\000\029\000\023\000\025\000_\000\\\0000\0001\0002\000f\000\"\0002\0002\0002\0002\0002\0002\0002\000i\000kb\000K\000\029\000\012\000\012\000\012\000\012\000\012\000\012\000[\000\\\000e\0004\000.\000K\000K\000K\000l\000D\0000\000K\000\012\000\012\000\012\000\012\000\027\000\027\000\027\000\012\000L\000\012\000a\000L\000\012\000\n\000\n\000\n\000\n\000\n\000\n\000F\000 \000h\000S\000N\000L\000L\000L\000c\000g\000\000\000L\000\n\000\n\000\n\000\n\000\027\000\027\000\027\000\n\000m\000\n\000\000\000\000\000\nb\000\b\000\b\000\b\000\b\000\b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\b\000\b\000\b\000\b\000\000\000\027\000\000\000\b\000\000\000\b\000\000\000\000\000\b\000\005\000\006\000\007\000\b\000\t\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\011\000\012\000\r\000\014\000\000\000\000\000\000\000\015\000\000\000\016\000\000\000\000\000\017\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\t\000\000\000\t\000\000\000\000\000\t\000\011\000\011\000\011\000\011\000\011\000\011\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\011\000\011\000\011\000\011\000\000\000\024\000\000\000\011\000\024\000\011\000\000\000\024\000\011\000\000\000\024\000\024\000\024\000\000\000\000\000\000\000\024\000\024\000\024\000\024\000\000\000\000\000\000\000\024\000\024\000",(src/stage1/parser.ml[214,6974+15]..src/stage1/parser.ml[284,11553+32]),None)
    ]
  structure_item (src/stage1/parser.ml[286,11588+0]..src/stage1/parser.ml[356,16167+33])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[286,11588+4]..src/stage1/parser.ml[286,11588+11])
          Tpat_var "yycheck/741"
        expression (src/stage1/parser.ml[286,11588+14]..src/stage1/parser.ml[356,16167+33])
          Texp_constant Const_string("$\000\000\000#\000-\000.\000\r\000\000\000\t\001\000\000\029\000\030\000\r\001\001\000\n\001\022\000\015\001\016\001\017\001\018\001\015\0018\000\001\001\002\001\003\001\004\001\005\001\006\001\007\001F\000\t\001\n\001C\000\029\001\r\001\030\001\015\001\027\001O\000\027\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\023\001\028\001\029\001\\\000\031\001\027\001\027\001W\000\007\001\023\001\024\001\025\001_\000\015\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001e\000i\000\n\001\023\001\024\001\025\001\014\001\015\001\016\001\017\001\018\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\007\001\028\001\029\001\030\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\016\001\017\001\018\001\030\001\012\001\023\001\024\001\025\001\015\001\b\001\024\001\029\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\r\001\028\001\025\001\030\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\023\001\024\001\025\001\023\001\024\001\025\001\015\001\r\001\016\001\017\001\018\001\014\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\007\001\028\001\030\001\n\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\023\001\024\001\025\001\t\001\022\001\023\001\024\001\025\001\n\001\014\001\n\001\029\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\007\001\028\001\n\001\n\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\029\001\007\001\011\001\014\001\t\001\023\001\024\001\025\001\022\001\029\001\014\001\029\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\007\001\028\001X\000\n\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\029\001\023\000b\000O\000J\000\023\001\024\001\025\001[\000a\000\255\255\029\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001k\000\028\001\255\255\255\255\031\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\b\001\255\255\n\001\255\255\012\001\b\001\255\255\bn\001\028\001\255\255\r\001\031\001\255\255\016\001\017\001\018\001\255\255\255\255\255\255\022\001\023\001\024\001\025\001\255\255\255\255\255\255\029\001\030\001",(src/stage1/parser.ml[286,11588+15]..src/stage1/parser.ml[356,16167+32]),None)
    ]
  structure_item (src/stage1/parser.ml[358,16202+0]..src/stage1/parser.ml[387,16627+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[358,16202+4]..src/stage1/parser.ml[358,16202+17])
          Tpat_var "yynames_const/742"
        expression (src/stage1/parser.ml[358,16202+20]..src/stage1/parser.ml[387,16627+3])
          Texp_constant Const_string("TOKEN\000TYPE\000LEFT\000RIGHT\000NONASSOC\000START\000PREC\000PUBLIC\000COLON\000BAR\000EOF\000EQUAL\000INLINE\000LPAREN\000RPAREN\000COMMA\000QUESTION\000STAR\000PLUS\000PARAMETER\000ON_ERROR_REDUCE\000PERCENTATTRIBUTE\000SEMI\000LET\000TILDE\000UNDERSCORE\000COLONEQUAL\000EQUALEQUAL\000",(src/stage1/parser.ml[358,16202+21]..src/stage1/parser.ml[387,16627+2]),None)
    ]
  structure_item (src/stage1/parser.ml[389,16632+0]..src/stage1/parser.ml[399,16796+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[389,16632+4]..src/stage1/parser.ml[389,16632+17])
          Tpat_var "yynames_block/743"
        expression (src/stage1/parser.ml[389,16632+20]..src/stage1/parser.ml[399,16796+3])
          Texp_constant Const_string("LID\000UID\000QID\000HEADER\000OCAMLTYPE\000PERCENTPERCENT\000ACTION\000ATTRIBUTE\000GRAMMARATTRIBUTE\000",(src/stage1/parser.ml[389,16632+21]..src/stage1/parser.ml[399,16796+2]),None)
    ]
  structure_item (src/stage1/parser.ml[401,16801+0]..src/stage1/parser.ml[1014,37722+2])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[401,16801+4]..src/stage1/parser.ml[401,16801+9])
          Tpat_var "yyact/744"
        expression (src/stage1/parser.ml[401,16801+12]..src/stage1/parser.ml[1014,37722+2])
          Texp_array
          [
            expression (src/stage1/parser.ml[402,16816+2]..src/stage1/parser.ml[402,16816+30])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[402,16816+7]..src/stage1/parser.ml[402,16816+8])
                    Tpat_any
                  expression (src/stage1/parser.ml[402,16816+12]..src/stage1/parser.ml[402,16816+29])
                    Texp_apply
                    expression (src/stage1/parser.ml[402,16816+12]..src/stage1/parser.ml[402,16816+20])
                      Texp_ident "Stdlib!.failwith"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.ml[402,16816+21]..src/stage1/parser.ml[402,16816+29])
                          Texp_constant Const_string("parser",(src/stage1/parser.ml[402,16816+22]..src/stage1/parser.ml[402,16816+28]),None)
                    ]
              ]
            expression (src/stage1/parser.ml[403,16847+2]..src/stage1/parser.ml[419,17429+41])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[403,16847+7]..src/stage1/parser.ml[403,16847+24])
                    Tpat_var "__caml_parser_env/746"
                  expression (src/stage1/parser.ml[404,16875+4]..src/stage1/parser.ml[419,17429+40])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[404,16875+8]..src/stage1/parser.ml[404,16875+10])
                          Tpat_var "_1/747"
                        expression (src/stage1/parser.ml[404,16875+14]..src/stage1/parser.ml[404,16875+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[404,16875+53]..src/stage1/parser.ml[404,16875+66])
                              Ttyp_var declarations
                          Texp_apply
                          expression (src/stage1/parser.ml[404,16875+14]..src/stage1/parser.ml[404,16875+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[404,16875+31]..src/stage1/parser.ml[404,16875+48])
                                Texp_ident "__caml_parser_env/746"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[404,16875+49]..src/stage1/parser.ml[404,16875+50])
                                Texp_constant Const_int 3
                          ]
                    ]
                    expression (src/stage1/parser.ml[405,16946+4]..src/stage1/parser.ml[419,17429+40])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[405,16946+8]..src/stage1/parser.ml[405,16946+10])
                            Tpat_var "_2/766"
                          expression (src/stage1/parser.ml[405,16946+14]..src/stage1/parser.ml[405,16946+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[405,16946+53]..src/stage1/parser.ml[405,16946+69])
                                Ttyp_constr "Stdlib!.Lazy.t"
                                [
                                  core_type (src/stage1/parser.ml[405,16946+53]..src/stage1/parser.ml[405,16946+62])
                                    Ttyp_constr "Dune__exe!.Stretch.t"
                                    []
                                ]
                            Texp_apply
                            expression (src/stage1/parser.ml[405,16946+14]..src/stage1/parser.ml[405,16946+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[405,16946+31]..src/stage1/parser.ml[405,16946+48])
                                  Texp_ident "__caml_parser_env/746"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[405,16946+49]..src/stage1/parser.ml[405,16946+50])
                                  Texp_constant Const_int 2
                            ]
                      ]
                      expression (src/stage1/parser.ml[406,17020+4]..src/stage1/parser.ml[419,17429+40])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/stage1/parser.ml[406,17020+8]..src/stage1/parser.ml[406,17020+10])
                              Tpat_var "_3/767"
                            expression (src/stage1/parser.ml[406,17020+14]..src/stage1/parser.ml[406,17020+50])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[406,17020+53]..src/stage1/parser.ml[406,17020+59])
                                  Ttyp_var rules
                              Texp_apply
                              expression (src/stage1/parser.ml[406,17020+14]..src/stage1/parser.ml[406,17020+30])
                                Texp_ident "Stdlib!.Parsing.peek_val"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.ml[406,17020+31]..src/stage1/parser.ml[406,17020+48])
                                    Texp_ident "__caml_parser_env/746"
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.ml[406,17020+49]..src/stage1/parser.ml[406,17020+50])
                                    Texp_constant Const_int 1
                              ]
                        ]
                        expression (src/stage1/parser.ml[407,17084+4]..src/stage1/parser.ml[419,17429+40])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (src/stage1/parser.ml[407,17084+8]..src/stage1/parser.ml[407,17084+10])
                                Tpat_var "_4/768"
                              expression (src/stage1/parser.ml[407,17084+14]..src/stage1/parser.ml[407,17084+50])
                                extra
                                  Texp_constraint
                                  core_type (src/stage1/parser.ml[407,17084+53]..src/stage1/parser.ml[407,17084+62])
                                    Ttyp_var postlude
                                Texp_apply
                                expression (src/stage1/parser.ml[407,17084+14]..src/stage1/parser.ml[407,17084+30])
                                  Texp_ident "Stdlib!.Parsing.peek_val"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/stage1/parser.ml[407,17084+31]..src/stage1/parser.ml[407,17084+48])
                                      Texp_ident "__caml_parser_env/746"
                                  <arg>
                                    Nolabel
                                    expression (src/stage1/parser.ml[407,17084+49]..src/stage1/parser.ml[407,17084+50])
                                      Texp_constant Const_int 0
                                ]
                          ]
                          expression (src/stage1/parser.ml[408,17151+4]..src/stage1/parser.ml[419,17429+40])
                            Texp_apply
                            expression (src/stage1/parser.ml[408,17151+4]..src/stage1/parser.ml[408,17151+12])
                              Texp_ident "Stdlib!.Obj.repr"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.mly[64,17194+4]..src/stage1/parser.mly[71,17394+5])
                                  extra
                                    Texp_constraint
                                    core_type (src/stage1/parser.ml[419,17429+17]..src/stage1/parser.ml[419,17429+39])
                                      Ttyp_constr "Dune__exe!.Syntax.partial_grammar"
                                      []
                                  Texp_record
                                    fields =
                                      [
                                        "pg_filename"
                                          expression (src/stage1/parser.mly[66,17208+31]..src/stage1/parser.mly[66,17208+33])
                                            Texp_constant Const_string("",(src/stage1/parser.mly[66,17208+32]..src/stage1/parser.mly[66,17208+32]),None)
                                        "pg_postlude"
                                          expression (src/stage1/parser.mly[69,17352+31]..src/stage1/parser.mly[69,17352+33])
                                            Texp_ident "_4/768"
                                        "pg_declarations"
                                          expression (src/stage1/parser.mly[67,17273+31]..src/stage1/parser.mly[67,17273+42])
                                            Texp_apply
                                            expression (src/stage1/parser.mly[67,17273+31]..src/stage1/parser.mly[67,17273+39])
                                              Texp_ident "Stdlib!.List.rev"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/stage1/parser.mly[67,17273+40]..src/stage1/parser.mly[67,17273+42])
                                                  Texp_ident "_1/747"
                                            ]
                                        "pg_rules"
                                          expression (src/stage1/parser.mly[68,17317+31]..src/stage1/parser.mly[68,17317+33])
                                            Texp_ident "_3/767"
                                      ]
                                    representation =
                                      Record_regular
                                    extended_expression =
                                      None
                            ]
              ]
            expression (src/stage1/parser.ml[420,17471+2]..src/stage1/parser.ml[425,17584+28])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[420,17471+7]..src/stage1/parser.ml[420,17471+24])
                    Tpat_var "__caml_parser_env/952"
                  expression (src/stage1/parser.ml[421,17499+4]..src/stage1/parser.ml[425,17584+27])
                    Texp_apply
                    expression (src/stage1/parser.ml[421,17499+4]..src/stage1/parser.ml[421,17499+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[75,17542+4]..src/stage1/parser.mly[75,17542+12])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[425,17584+17]..src/stage1/parser.ml[425,17584+26])
                              Ttyp_var postlude
                          Texp_construct "None"
                          []
                    ]
              ]
            expression (src/stage1/parser.ml[426,17613+2]..src/stage1/parser.ml[432,17816+28])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[426,17613+7]..src/stage1/parser.ml[426,17613+24])
                    Tpat_var "__caml_parser_env/953"
                  expression (src/stage1/parser.ml[427,17641+4]..src/stage1/parser.ml[432,17816+27])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[427,17641+8]..src/stage1/parser.ml[427,17641+10])
                          Tpat_var "_1/954"
                        expression (src/stage1/parser.ml[427,17641+14]..src/stage1/parser.ml[427,17641+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[427,17641+53]..src/stage1/parser.ml[427,17641+69])
                              Ttyp_constr "Stdlib!.Lazy.t"
                              [
                                core_type (src/stage1/parser.ml[427,17641+53]..src/stage1/parser.ml[427,17641+62])
                                  Ttyp_constr "Dune__exe!.Stretch.t"
                                  []
                              ]
                          Texp_apply
                          expression (src/stage1/parser.ml[427,17641+14]..src/stage1/parser.ml[427,17641+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[427,17641+31]..src/stage1/parser.ml[427,17641+48])
                                Texp_ident "__caml_parser_env/953"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[427,17641+49]..src/stage1/parser.ml[427,17641+50])
                                Texp_constant Const_int 0
                          ]
                    ]
                    expression (src/stage1/parser.ml[428,17715+4]..src/stage1/parser.ml[432,17816+27])
                      Texp_apply
                      expression (src/stage1/parser.ml[428,17715+4]..src/stage1/parser.ml[428,17715+12])
                        Texp_ident "Stdlib!.Obj.repr"
                      [
                        <arg>
                          Nolabel
                          expression (src/stage1/parser.mly[77,17758+4]..src/stage1/parser.mly[77,17758+28])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[432,17816+17]..src/stage1/parser.ml[432,17816+26])
                                Ttyp_var postlude
                            Texp_construct "Some"
                            [
                              expression (src/stage1/parser.mly[77,17758+11]..src/stage1/parser.mly[77,17758+26])
                                Texp_apply
                                expression (src/stage1/parser.mly[77,17758+12]..src/stage1/parser.mly[77,17758+22])
                                  Texp_ident "Stdlib!.Lazy.force"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/stage1/parser.mly[77,17758+23]..src/stage1/parser.mly[77,17758+25])
                                      Texp_ident "_1/954"
                                ]
                            ]
                      ]
              ]
            expression (src/stage1/parser.ml[433,17845+2]..src/stage1/parser.ml[438,17956+32])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[433,17845+7]..src/stage1/parser.ml[433,17845+24])
                    Tpat_var "__caml_parser_env/955"
                  expression (src/stage1/parser.ml[434,17873+4]..src/stage1/parser.ml[438,17956+31])
                    Texp_apply
                    expression (src/stage1/parser.ml[434,17873+4]..src/stage1/parser.ml[434,17873+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[85,17916+4]..src/stage1/parser.mly[85,17916+10])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[438,17956+17]..src/stage1/parser.ml[438,17956+30])
                              Ttyp_var declarations
                          Texp_construct "[]"
                          []
                    ]
              ]
            expression (src/stage1/parser.ml[439,17989+2]..src/stage1/parser.ml[446,18246+32])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[439,17989+7]..src/stage1/parser.ml[439,17989+24])
                    Tpat_var "__caml_parser_env/956"
                  expression (src/stage1/parser.ml[440,18017+4]..src/stage1/parser.ml[446,18246+31])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[440,18017+8]..src/stage1/parser.ml[440,18017+10])
                          Tpat_var "_1/957"
                        expression (src/stage1/parser.ml[440,18017+14]..src/stage1/parser.ml[440,18017+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[440,18017+53]..src/stage1/parser.ml[440,18017+66])
                              Ttyp_var declarations
                          Texp_apply
                          expression (src/stage1/parser.ml[440,18017+14]..src/stage1/parser.ml[440,18017+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[440,18017+31]..src/stage1/parser.ml[440,18017+48])
                                Texp_ident "__caml_parser_env/956"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[440,18017+49]..src/stage1/parser.ml[440,18017+50])
                                Texp_constant Const_int 1
                          ]
                    ]
                    expression (src/stage1/parser.ml[441,18088+4]..src/stage1/parser.ml[446,18246+31])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[441,18088+8]..src/stage1/parser.ml[441,18088+10])
                            Tpat_var "_2/958"
                          expression (src/stage1/parser.ml[441,18088+14]..src/stage1/parser.ml[441,18088+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[441,18088+53]..src/stage1/parser.ml[441,18088+65])
                                Ttyp_var declaration
                            Texp_apply
                            expression (src/stage1/parser.ml[441,18088+14]..src/stage1/parser.ml[441,18088+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[441,18088+31]..src/stage1/parser.ml[441,18088+48])
                                  Texp_ident "__caml_parser_env/956"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[441,18088+49]..src/stage1/parser.ml[441,18088+50])
                                  Texp_constant Const_int 0
                            ]
                      ]
                      expression (src/stage1/parser.ml[442,18158+4]..src/stage1/parser.ml[446,18246+31])
                        Texp_apply
                        expression (src/stage1/parser.ml[442,18158+4]..src/stage1/parser.ml[442,18158+12])
                          Texp_ident "Stdlib!.Obj.repr"
                        [
                          <arg>
                            Nolabel
                            expression (src/stage1/parser.mly[87,18201+4]..src/stage1/parser.mly[87,18201+15])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[446,18246+17]..src/stage1/parser.ml[446,18246+30])
                                  Ttyp_var declarations
                              Texp_apply
                              expression (src/stage1/parser.mly[87,18201+9]..src/stage1/parser.mly[87,18201+10])
                                Texp_ident "Stdlib!.@"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.mly[87,18201+6]..src/stage1/parser.mly[87,18201+8])
                                    Texp_ident "_2/958"
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.mly[87,18201+11]..src/stage1/parser.mly[87,18201+13])
                                    Texp_ident "_1/957"
                              ]
                        ]
              ]
            expression (src/stage1/parser.ml[447,18279+2]..src/stage1/parser.ml[453,18461+32])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[447,18279+7]..src/stage1/parser.ml[447,18279+24])
                    Tpat_var "__caml_parser_env/959"
                  expression (src/stage1/parser.ml[448,18307+4]..src/stage1/parser.ml[453,18461+31])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[448,18307+8]..src/stage1/parser.ml[448,18307+10])
                          Tpat_var "_1/960"
                        expression (src/stage1/parser.ml[448,18307+14]..src/stage1/parser.ml[448,18307+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[448,18307+53]..src/stage1/parser.ml[448,18307+66])
                              Ttyp_var declarations
                          Texp_apply
                          expression (src/stage1/parser.ml[448,18307+14]..src/stage1/parser.ml[448,18307+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[448,18307+31]..src/stage1/parser.ml[448,18307+48])
                                Texp_ident "__caml_parser_env/959"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[448,18307+49]..src/stage1/parser.ml[448,18307+50])
                                Texp_constant Const_int 1
                          ]
                    ]
                    expression (src/stage1/parser.ml[449,18378+4]..src/stage1/parser.ml[453,18461+31])
                      Texp_apply
                      expression (src/stage1/parser.ml[449,18378+4]..src/stage1/parser.ml[449,18378+12])
                        Texp_ident "Stdlib!.Obj.repr"
                      [
                        <arg>
                          Nolabel
                          expression (src/stage1/parser.mly[89,18421+4]..src/stage1/parser.mly[89,18421+10])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[453,18461+17]..src/stage1/parser.ml[453,18461+30])
                                Ttyp_var declarations
                            Texp_ident "_1/960"
                      ]
              ]
            expression (src/stage1/parser.ml[454,18494+2]..src/stage1/parser.ml[460,18696+31])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[454,18494+7]..src/stage1/parser.ml[454,18494+24])
                    Tpat_var "__caml_parser_env/961"
                  expression (src/stage1/parser.ml[455,18522+4]..src/stage1/parser.ml[460,18696+30])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[455,18522+8]..src/stage1/parser.ml[455,18522+10])
                          Tpat_var "_1/962"
                        expression (src/stage1/parser.ml[455,18522+14]..src/stage1/parser.ml[455,18522+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[455,18522+53]..src/stage1/parser.ml[455,18522+62])
                              Ttyp_constr "Dune__exe!.Stretch.t"
                              []
                          Texp_apply
                          expression (src/stage1/parser.ml[455,18522+14]..src/stage1/parser.ml[455,18522+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[455,18522+31]..src/stage1/parser.ml[455,18522+48])
                                Texp_ident "__caml_parser_env/961"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[455,18522+49]..src/stage1/parser.ml[455,18522+50])
                                Texp_constant Const_int 0
                          ]
                    ]
                    expression (src/stage1/parser.ml[456,18589+4]..src/stage1/parser.ml[460,18696+30])
                      Texp_apply
                      expression (src/stage1/parser.ml[456,18589+4]..src/stage1/parser.ml[456,18589+12])
                        Texp_ident "Stdlib!.Obj.repr"
                      [
                        <arg>
                          Nolabel
                          expression (src/stage1/parser.mly[93,18632+4]..src/stage1/parser.mly[93,18632+34])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[460,18696+17]..src/stage1/parser.ml[460,18696+29])
                                Ttyp_var declaration
                            Texp_construct "::"
                            [
                              expression (src/stage1/parser.mly[93,18632+8]..src/stage1/parser.mly[93,18632+30])
                                Texp_apply
                                expression (src/stage1/parser.mly[93,18632+8]..src/stage1/parser.mly[93,18632+19])
                                  Texp_ident "Dune__exe!.Positions.unknown_pos"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/stage1/parser.mly[93,18632+20]..src/stage1/parser.mly[93,18632+30])
                                      Texp_construct "DCode"
                                      [
                                        expression (src/stage1/parser.mly[93,18632+27]..src/stage1/parser.mly[93,18632+29])
                                          Texp_ident "_1/962"
                                      ]
                                ]
                              expression (src/stage1/parser.mly[93,18632+31]..src/stage1/parser.mly[93,18632+32]) ghost
                                Texp_construct "[]"
                                []
                            ]
                      ]
              ]
            expression (src/stage1/parser.ml[461,18728+2]..src/stage1/parser.ml[471,19123+31])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[461,18728+7]..src/stage1/parser.ml[461,18728+24])
                    Tpat_var "__caml_parser_env/963"
                  expression (src/stage1/parser.ml[462,18756+4]..src/stage1/parser.ml[471,19123+30])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[462,18756+8]..src/stage1/parser.ml[462,18756+10])
                          Tpat_var "_2/964"
                        expression (src/stage1/parser.ml[462,18756+14]..src/stage1/parser.ml[462,18756+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[462,18756+53]..src/stage1/parser.ml[462,18756+72])
                              Ttyp_var optional_ocamltype
                          Texp_apply
                          expression (src/stage1/parser.ml[462,18756+14]..src/stage1/parser.ml[462,18756+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[462,18756+31]..src/stage1/parser.ml[462,18756+48])
                                Texp_ident "__caml_parser_env/963"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[462,18756+49]..src/stage1/parser.ml[462,18756+50])
                                Texp_constant Const_int 1
                          ]
                    ]
                    expression (src/stage1/parser.ml[463,18833+4]..src/stage1/parser.ml[471,19123+30])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[463,18833+8]..src/stage1/parser.ml[463,18833+10])
                            Tpat_var "_3/965"
                          expression (src/stage1/parser.ml[463,18833+14]..src/stage1/parser.ml[463,18833+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[463,18833+53]..src/stage1/parser.ml[463,18833+63])
                                Ttyp_var terminals
                            Texp_apply
                            expression (src/stage1/parser.ml[463,18833+14]..src/stage1/parser.ml[463,18833+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[463,18833+31]..src/stage1/parser.ml[463,18833+48])
                                  Texp_ident "__caml_parser_env/963"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[463,18833+49]..src/stage1/parser.ml[463,18833+50])
                                  Texp_constant Const_int 0
                            ]
                      ]
                      expression (src/stage1/parser.ml[464,18901+4]..src/stage1/parser.ml[471,19123+30])
                        Texp_apply
                        expression (src/stage1/parser.ml[464,18901+4]..src/stage1/parser.ml[464,18901+12])
                          Texp_ident "Stdlib!.Obj.repr"
                        [
                          <arg>
                            Nolabel
                            expression (src/stage1/parser.mly[96,18944+4]..src/stage1/parser.mly[99,19080+13])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[471,19123+17]..src/stage1/parser.ml[471,19123+29])
                                  Ttyp_var declaration
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/stage1/parser.mly[96,18944+10]..src/stage1/parser.mly[96,18944+16])
                                    Tpat_tuple
                                    [
                                      pattern (src/stage1/parser.mly[96,18944+10]..src/stage1/parser.mly[96,18944+12])
                                        Tpat_var "ty/966"
                                      pattern (src/stage1/parser.mly[96,18944+14]..src/stage1/parser.mly[96,18944+16])
                                        Tpat_var "ts/967"
                                    ]
                                  expression (src/stage1/parser.mly[96,18944+19]..src/stage1/parser.mly[96,18944+25])
                                    Texp_tuple
                                    [
                                      expression (src/stage1/parser.mly[96,18944+19]..src/stage1/parser.mly[96,18944+21])
                                        Texp_ident "_2/964"
                                      expression (src/stage1/parser.mly[96,18944+23]..src/stage1/parser.mly[96,18944+25])
                                        Texp_ident "_3/965"
                                    ]
                              ]
                              expression (src/stage1/parser.mly[97,18973+6]..src/stage1/parser.mly[99,19080+11])
                                Texp_apply
                                expression (src/stage1/parser.mly[97,18973+6]..src/stage1/parser.mly[97,18973+14])
                                  Texp_ident "Stdlib!.List.map"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/stage1/parser.mly[97,18973+15]..src/stage1/parser.mly[99,19080+8])
                                      Texp_apply
                                      expression (src/stage1/parser.mly[97,18973+16]..src/stage1/parser.mly[97,18973+29])
                                        Texp_ident "Dune__exe!.Positions.map"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/stage1/parser.mly[97,18973+30]..src/stage1/parser.mly[99,19080+7])
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (src/stage1/parser.mly[97,18973+35]..src/stage1/parser.mly[97,18973+59])
                                                  Tpat_tuple
                                                  [
                                                    pattern (src/stage1/parser.mly[97,18973+36]..src/stage1/parser.mly[97,18973+44])
                                                      Tpat_var "terminal/968"
                                                    pattern (src/stage1/parser.mly[97,18973+46]..src/stage1/parser.mly[97,18973+51])
                                                      Tpat_var "alias/969"
                                                    pattern (src/stage1/parser.mly[97,18973+53]..src/stage1/parser.mly[97,18973+58])
                                                      Tpat_var "attrs/970"
                                                  ]
                                                expression (src/stage1/parser.mly[98,19036+8]..src/stage1/parser.mly[98,19036+43])
                                                  Texp_construct "DToken"
                                                  [
                                                    expression (src/stage1/parser.mly[98,19036+16]..src/stage1/parser.mly[98,19036+18])
                                                      Texp_ident "ty/966"
                                                    expression (src/stage1/parser.mly[98,19036+20]..src/stage1/parser.mly[98,19036+28])
                                                      Texp_ident "terminal/968"
                                                    expression (src/stage1/parser.mly[98,19036+30]..src/stage1/parser.mly[98,19036+35])
                                                      Texp_ident "alias/969"
                                                    expression (src/stage1/parser.mly[98,19036+37]..src/stage1/parser.mly[98,19036+42])
                                                      Texp_ident "attrs/970"
                                                  ]
                                            ]
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/stage1/parser.mly[99,19080+9]..src/stage1/parser.mly[99,19080+11])
                                      Texp_ident "ts/967"
                                ]
                        ]
              ]
            expression (src/stage1/parser.ml[472,19155+2]..src/stage1/parser.ml[478,19403+31])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[472,19155+7]..src/stage1/parser.ml[472,19155+24])
                    Tpat_var "__caml_parser_env/972"
                  expression (src/stage1/parser.ml[473,19183+4]..src/stage1/parser.ml[478,19403+30])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[473,19183+8]..src/stage1/parser.ml[473,19183+10])
                          Tpat_var "_2/973"
                        expression (src/stage1/parser.ml[473,19183+14]..src/stage1/parser.ml[473,19183+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[473,19183+53]..src/stage1/parser.ml[473,19183+66])
                              Ttyp_var nonterminals
                          Texp_apply
                          expression (src/stage1/parser.ml[473,19183+14]..src/stage1/parser.ml[473,19183+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[473,19183+31]..src/stage1/parser.ml[473,19183+48])
                                Texp_ident "__caml_parser_env/972"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[473,19183+49]..src/stage1/parser.ml[473,19183+50])
                                Texp_constant Const_int 0
                          ]
                    ]
                    expression (src/stage1/parser.ml[474,19254+4]..src/stage1/parser.ml[478,19403+30])
                      Texp_apply
                      expression (src/stage1/parser.ml[474,19254+4]..src/stage1/parser.ml[474,19254+12])
                        Texp_ident "Stdlib!.Obj.repr"
                      [
                        <arg>
                          Nolabel
                          expression (src/stage1/parser.mly[102,19298+4]..src/stage1/parser.mly[102,19298+75])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[478,19403+17]..src/stage1/parser.ml[478,19403+29])
                                Ttyp_var declaration
                            Texp_apply
                            expression (src/stage1/parser.mly[102,19298+6]..src/stage1/parser.mly[102,19298+14])
                              Texp_ident "Stdlib!.List.map"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.mly[102,19298+15]..src/stage1/parser.mly[102,19298+70])
                                  Texp_apply
                                  expression (src/stage1/parser.mly[102,19298+16]..src/stage1/parser.mly[102,19298+29])
                                    Texp_ident "Dune__exe!.Positions.map"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/stage1/parser.mly[102,19298+30]..src/stage1/parser.mly[102,19298+69])
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/stage1/parser.mly[102,19298+35]..src/stage1/parser.mly[102,19298+46])
                                              Tpat_var "nonterminal/974"
                                            expression (src/stage1/parser.mly[102,19298+50]..src/stage1/parser.mly[102,19298+68])
                                              Texp_construct "DStart"
                                              [
                                                expression (src/stage1/parser.mly[102,19298+57]..src/stage1/parser.mly[102,19298+68])
                                                  Texp_ident "nonterminal/974"
                                              ]
                                        ]
                                  ]
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.mly[102,19298+71]..src/stage1/parser.mly[102,19298+73])
                                  Texp_ident "_2/973"
                            ]
                      ]
              ]
            expression (src/stage1/parser.ml[479,19435+2]..src/stage1/parser.ml[487,19779+31])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[479,19435+7]..src/stage1/parser.ml[479,19435+24])
                    Tpat_var "__caml_parser_env/975"
                  expression (src/stage1/parser.ml[480,19463+4]..src/stage1/parser.ml[487,19779+30])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[480,19463+8]..src/stage1/parser.ml[480,19463+10])
                          Tpat_var "_2/976"
                        expression (src/stage1/parser.ml[480,19463+14]..src/stage1/parser.ml[480,19463+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[480,19463+53]..src/stage1/parser.ml[480,19463+70])
                              Ttyp_constr "Dune__exe!.Stretch.ocamltype"
                              []
                          Texp_apply
                          expression (src/stage1/parser.ml[480,19463+14]..src/stage1/parser.ml[480,19463+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[480,19463+31]..src/stage1/parser.ml[480,19463+48])
                                Texp_ident "__caml_parser_env/975"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[480,19463+49]..src/stage1/parser.ml[480,19463+50])
                                Texp_constant Const_int 1
                          ]
                    ]
                    expression (src/stage1/parser.ml[481,19538+4]..src/stage1/parser.ml[487,19779+30])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[481,19538+8]..src/stage1/parser.ml[481,19538+10])
                            Tpat_var "_3/977"
                          expression (src/stage1/parser.ml[481,19538+14]..src/stage1/parser.ml[481,19538+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[481,19538+53]..src/stage1/parser.ml[481,19538+61])
                                Ttyp_var actuals
                            Texp_apply
                            expression (src/stage1/parser.ml[481,19538+14]..src/stage1/parser.ml[481,19538+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[481,19538+31]..src/stage1/parser.ml[481,19538+48])
                                  Texp_ident "__caml_parser_env/975"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[481,19538+49]..src/stage1/parser.ml[481,19538+50])
                                  Texp_constant Const_int 0
                            ]
                      ]
                      expression (src/stage1/parser.ml[482,19604+4]..src/stage1/parser.ml[487,19779+30])
                        Texp_apply
                        expression (src/stage1/parser.ml[482,19604+4]..src/stage1/parser.ml[482,19604+12])
                          Texp_ident "Stdlib!.Obj.repr"
                        [
                          <arg>
                            Nolabel
                            expression (src/stage1/parser.mly[105,19648+4]..src/stage1/parser.mly[106,19706+43])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[487,19779+17]..src/stage1/parser.ml[487,19779+29])
                                  Ttyp_var declaration
                              Texp_apply
                              expression (src/stage1/parser.mly[105,19648+6]..src/stage1/parser.mly[105,19648+14])
                                Texp_ident "Stdlib!.List.map"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.mly[105,19648+15]..src/stage1/parser.mly[105,19648+57])
                                    Texp_apply
                                    expression (src/stage1/parser.mly[105,19648+16]..src/stage1/parser.mly[105,19648+29])
                                      Texp_ident "Dune__exe!.Positions.map"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/stage1/parser.mly[105,19648+30]..src/stage1/parser.mly[105,19648+56])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/stage1/parser.mly[105,19648+35]..src/stage1/parser.mly[105,19648+37])
                                                Tpat_var "nt/978"
                                              expression (src/stage1/parser.mly[105,19648+41]..src/stage1/parser.mly[105,19648+55])
                                                Texp_construct "DType"
                                                [
                                                  expression (src/stage1/parser.mly[105,19648+48]..src/stage1/parser.mly[105,19648+50])
                                                    Texp_ident "_2/976"
                                                  expression (src/stage1/parser.mly[105,19648+52]..src/stage1/parser.mly[105,19648+54])
                                                    Texp_ident "nt/978"
                                                ]
                                          ]
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.mly[106,19706+8]..src/stage1/parser.mly[106,19706+41])
                                    Texp_apply
                                    expression (src/stage1/parser.mly[106,19706+9]..src/stage1/parser.mly[106,19706+17])
                                      Texp_ident "Stdlib!.List.map"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/stage1/parser.mly[106,19706+18]..src/stage1/parser.mly[106,19706+37])
                                          Texp_ident "Dune__exe!.Parameters.with_pos"
                                      <arg>
                                        Nolabel
                                        expression (src/stage1/parser.mly[106,19706+38]..src/stage1/parser.mly[106,19706+40])
                                          Texp_ident "_3/977"
                                    ]
                              ]
                        ]
              ]
            expression (src/stage1/parser.ml[488,19811+2]..src/stage1/parser.ml[496,20177+31])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[488,19811+7]..src/stage1/parser.ml[488,19811+24])
                    Tpat_var "__caml_parser_env/994"
                  expression (src/stage1/parser.ml[489,19839+4]..src/stage1/parser.ml[496,20177+30])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[489,19839+8]..src/stage1/parser.ml[489,19839+10])
                          Tpat_var "_2/995"
                        expression (src/stage1/parser.ml[489,19839+14]..src/stage1/parser.ml[489,19839+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[489,19839+53]..src/stage1/parser.ml[489,19839+70])
                              Ttyp_constr "Dune__exe!.Stretch.ocamltype"
                              []
                          Texp_apply
                          expression (src/stage1/parser.ml[489,19839+14]..src/stage1/parser.ml[489,19839+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[489,19839+31]..src/stage1/parser.ml[489,19839+48])
                                Texp_ident "__caml_parser_env/994"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[489,19839+49]..src/stage1/parser.ml[489,19839+50])
                                Texp_constant Const_int 1
                          ]
                    ]
                    expression (src/stage1/parser.ml[490,19914+4]..src/stage1/parser.ml[496,20177+30])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[490,19914+8]..src/stage1/parser.ml[490,19914+10])
                            Tpat_var "_3/996"
                          expression (src/stage1/parser.ml[490,19914+14]..src/stage1/parser.ml[490,19914+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[490,19914+53]..src/stage1/parser.ml[490,19914+66])
                                Ttyp_var nonterminals
                            Texp_apply
                            expression (src/stage1/parser.ml[490,19914+14]..src/stage1/parser.ml[490,19914+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[490,19914+31]..src/stage1/parser.ml[490,19914+48])
                                  Texp_ident "__caml_parser_env/994"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[490,19914+49]..src/stage1/parser.ml[490,19914+50])
                                  Texp_constant Const_int 0
                            ]
                      ]
                      expression (src/stage1/parser.ml[491,19985+4]..src/stage1/parser.ml[496,20177+30])
                        Texp_apply
                        expression (src/stage1/parser.ml[491,19985+4]..src/stage1/parser.ml[491,19985+12])
                          Texp_ident "Stdlib!.Obj.repr"
                        [
                          <arg>
                            Nolabel
                            expression (src/stage1/parser.mly[110,20029+4]..src/stage1/parser.mly[111,20059+88])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[496,20177+17]..src/stage1/parser.ml[496,20177+29])
                                  Ttyp_var declaration
                              Texp_apply
                              expression (src/stage1/parser.mly[110,20029+6]..src/stage1/parser.mly[110,20029+15])
                                Texp_ident "Dune__exe!.Misc.mapd"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.mly[110,20029+16]..src/stage1/parser.mly[111,20059+83])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/stage1/parser.mly[110,20029+21]..src/stage1/parser.mly[110,20029+26])
                                          Tpat_var "ntloc/1033"
                                        expression (src/stage1/parser.mly[111,20059+8]..src/stage1/parser.mly[111,20059+82])
                                          Texp_apply
                                          expression (src/stage1/parser.mly[111,20059+8]..src/stage1/parser.mly[111,20059+22])
                                            Texp_ident "Dune__exe!.Positions.mapd"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/stage1/parser.mly[111,20059+23]..src/stage1/parser.mly[111,20059+76])
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (src/stage1/parser.mly[111,20059+28]..src/stage1/parser.mly[111,20059+30])
                                                      Tpat_var "nt/1034"
                                                    expression (src/stage1/parser.mly[111,20059+34]..src/stage1/parser.mly[111,20059+75])
                                                      Texp_tuple
                                                      [
                                                        expression (src/stage1/parser.mly[111,20059+34]..src/stage1/parser.mly[111,20059+43])
                                                          Texp_construct "DStart"
                                                          [
                                                            expression (src/stage1/parser.mly[111,20059+41]..src/stage1/parser.mly[111,20059+43])
                                                              Texp_ident "nt/1034"
                                                          ]
                                                        expression (src/stage1/parser.mly[111,20059+45]..src/stage1/parser.mly[111,20059+75])
                                                          Texp_construct "DType"
                                                          [
                                                            expression (src/stage1/parser.mly[111,20059+52]..src/stage1/parser.mly[111,20059+54])
                                                              Texp_ident "_2/995"
                                                            expression (src/stage1/parser.mly[111,20059+56]..src/stage1/parser.mly[111,20059+74])
                                                              Texp_construct "ParameterVar"
                                                              [
                                                                expression (src/stage1/parser.mly[111,20059+69]..src/stage1/parser.mly[111,20059+74])
                                                                  Texp_ident "ntloc/1033"
                                                              ]
                                                          ]
                                                      ]
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/stage1/parser.mly[111,20059+77]..src/stage1/parser.mly[111,20059+82])
                                                Texp_ident "ntloc/1033"
                                          ]
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.mly[111,20059+84]..src/stage1/parser.mly[111,20059+86])
                                    Texp_ident "_3/996"
                              ]
                        ]
              ]
            expression (src/stage1/parser.ml[497,20209+2]..src/stage1/parser.ml[505,20623+31])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[497,20209+7]..src/stage1/parser.ml[497,20209+24])
                    Tpat_var "__caml_parser_env/1035"
                  expression (src/stage1/parser.ml[498,20237+4]..src/stage1/parser.ml[505,20623+30])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[498,20237+8]..src/stage1/parser.ml[498,20237+10])
                          Tpat_var "_1/1036"
                        expression (src/stage1/parser.ml[498,20237+14]..src/stage1/parser.ml[498,20237+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[498,20237+53]..src/stage1/parser.ml[498,20237+70])
                              Ttyp_var priority_keyword
                          Texp_apply
                          expression (src/stage1/parser.ml[498,20237+14]..src/stage1/parser.ml[498,20237+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[498,20237+31]..src/stage1/parser.ml[498,20237+48])
                                Texp_ident "__caml_parser_env/1035"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[498,20237+49]..src/stage1/parser.ml[498,20237+50])
                                Texp_constant Const_int 1
                          ]
                    ]
                    expression (src/stage1/parser.ml[499,20312+4]..src/stage1/parser.ml[505,20623+30])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[499,20312+8]..src/stage1/parser.ml[499,20312+10])
                            Tpat_var "_2/1037"
                          expression (src/stage1/parser.ml[499,20312+14]..src/stage1/parser.ml[499,20312+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[499,20312+53]..src/stage1/parser.ml[499,20312+61])
                                Ttyp_var symbols
                            Texp_apply
                            expression (src/stage1/parser.ml[499,20312+14]..src/stage1/parser.ml[499,20312+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[499,20312+31]..src/stage1/parser.ml[499,20312+48])
                                  Texp_ident "__caml_parser_env/1035"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[499,20312+49]..src/stage1/parser.ml[499,20312+50])
                                  Texp_constant Const_int 0
                            ]
                      ]
                      expression (src/stage1/parser.ml[500,20378+4]..src/stage1/parser.ml[505,20623+30])
                        Texp_apply
                        expression (src/stage1/parser.ml[500,20378+4]..src/stage1/parser.ml[500,20378+12])
                          Texp_ident "Stdlib!.Obj.repr"
                        [
                          <arg>
                            Nolabel
                            expression (src/stage1/parser.mly[114,20422+4]..src/stage1/parser.mly[115,20506+87])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[505,20623+17]..src/stage1/parser.ml[505,20623+29])
                                  Ttyp_var declaration
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/stage1/parser.mly[114,20422+10]..src/stage1/parser.mly[114,20422+14])
                                    Tpat_var "prec/1038"
                                  expression (src/stage1/parser.mly[114,20422+17]..src/stage1/parser.mly[114,20422+80])
                                    Texp_apply
                                    expression (src/stage1/parser.mly[114,20422+17]..src/stage1/parser.mly[114,20422+47])
                                      Texp_ident "Dune__exe!.ParserAux.new_precedence_level"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/stage1/parser.mly[114,20422+48]..src/stage1/parser.mly[114,20422+80])
                                          Texp_tuple
                                          [
                                            expression (src/stage1/parser.mly[114,20422+49]..src/stage1/parser.mly[114,20422+64])
                                              Texp_apply
                                              expression (src/stage1/parser.mly[114,20422+49]..src/stage1/parser.mly[114,20422+62])
                                                Texp_ident "Stdlib!.Parsing.rhs_start_pos"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/stage1/parser.mly[114,20422+63]..src/stage1/parser.mly[114,20422+64])
                                                    Texp_constant Const_int 1
                                              ]
                                            expression (src/stage1/parser.mly[114,20422+66]..src/stage1/parser.mly[114,20422+79])
                                              Texp_apply
                                              expression (src/stage1/parser.mly[114,20422+66]..src/stage1/parser.mly[114,20422+77])
                                                Texp_ident "Stdlib!.Parsing.rhs_end_pos"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/stage1/parser.mly[114,20422+78]..src/stage1/parser.mly[114,20422+79])
                                                    Texp_constant Const_int 1
                                              ]
                                          ]
                                    ]
                              ]
                              expression (src/stage1/parser.mly[115,20506+6]..src/stage1/parser.mly[115,20506+85])
                                Texp_apply
                                expression (src/stage1/parser.mly[115,20506+6]..src/stage1/parser.mly[115,20506+14])
                                  Texp_ident "Stdlib!.List.map"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/stage1/parser.mly[115,20506+15]..src/stage1/parser.mly[115,20506+82])
                                      Texp_apply
                                      expression (src/stage1/parser.mly[115,20506+16]..src/stage1/parser.mly[115,20506+29])
                                        Texp_ident "Dune__exe!.Positions.map"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/stage1/parser.mly[115,20506+30]..src/stage1/parser.mly[115,20506+81])
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (src/stage1/parser.mly[115,20506+35]..src/stage1/parser.mly[115,20506+41])
                                                  Tpat_var "symbol/1100"
                                                expression (src/stage1/parser.mly[115,20506+45]..src/stage1/parser.mly[115,20506+80])
                                                  Texp_construct "DTokenProperties"
                                                  [
                                                    expression (src/stage1/parser.mly[115,20506+63]..src/stage1/parser.mly[115,20506+69])
                                                      Texp_ident "symbol/1100"
                                                    expression (src/stage1/parser.mly[115,20506+71]..src/stage1/parser.mly[115,20506+73])
                                                      Texp_ident "_1/1036"
                                                    expression (src/stage1/parser.mly[115,20506+75]..src/stage1/parser.mly[115,20506+79])
                                                      Texp_ident "prec/1038"
                                                  ]
                                            ]
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/stage1/parser.mly[115,20506+83]..src/stage1/parser.mly[115,20506+85])
                                      Texp_ident "_2/1037"
                                ]
                        ]
              ]
            expression (src/stage1/parser.ml[506,20655+2]..src/stage1/parser.ml[512,20871+31])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[506,20655+7]..src/stage1/parser.ml[506,20655+24])
                    Tpat_var "__caml_parser_env/1101"
                  expression (src/stage1/parser.ml[507,20683+4]..src/stage1/parser.ml[512,20871+30])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[507,20683+8]..src/stage1/parser.ml[507,20683+10])
                          Tpat_var "_2/1102"
                        expression (src/stage1/parser.ml[507,20683+14]..src/stage1/parser.ml[507,20683+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[507,20683+53]..src/stage1/parser.ml[507,20683+70])
                              Ttyp_constr "Dune__exe!.Stretch.ocamltype"
                              []
                          Texp_apply
                          expression (src/stage1/parser.ml[507,20683+14]..src/stage1/parser.ml[507,20683+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[507,20683+31]..src/stage1/parser.ml[507,20683+48])
                                Texp_ident "__caml_parser_env/1101"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[507,20683+49]..src/stage1/parser.ml[507,20683+50])
                                Texp_constant Const_int 0
                          ]
                    ]
                    expression (src/stage1/parser.ml[508,20758+4]..src/stage1/parser.ml[512,20871+30])
                      Texp_apply
                      expression (src/stage1/parser.ml[508,20758+4]..src/stage1/parser.ml[508,20758+12])
                        Texp_ident "Stdlib!.Obj.repr"
                      [
                        <arg>
                          Nolabel
                          expression (src/stage1/parser.mly[118,20802+4]..src/stage1/parser.mly[118,20802+39])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[512,20871+17]..src/stage1/parser.ml[512,20871+29])
                                Ttyp_var declaration
                            Texp_construct "::"
                            [
                              expression (src/stage1/parser.mly[118,20802+8]..src/stage1/parser.mly[118,20802+35])
                                Texp_apply
                                expression (src/stage1/parser.mly[118,20802+8]..src/stage1/parser.mly[118,20802+19])
                                  Texp_ident "Dune__exe!.Positions.unknown_pos"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/stage1/parser.mly[118,20802+20]..src/stage1/parser.mly[118,20802+35])
                                      Texp_construct "DParameter"
                                      [
                                        expression (src/stage1/parser.mly[118,20802+32]..src/stage1/parser.mly[118,20802+34])
                                          Texp_ident "_2/1102"
                                      ]
                                ]
                              expression (src/stage1/parser.mly[118,20802+36]..src/stage1/parser.mly[118,20802+37]) ghost
                                Texp_construct "[]"
                                []
                            ]
                      ]
              ]
            expression (src/stage1/parser.ml[513,20903+2]..src/stage1/parser.ml[519,21125+31])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[513,20903+7]..src/stage1/parser.ml[513,20903+24])
                    Tpat_var "__caml_parser_env/1103"
                  expression (src/stage1/parser.ml[514,20931+4]..src/stage1/parser.ml[519,21125+30])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[514,20931+8]..src/stage1/parser.ml[514,20931+10])
                          Tpat_var "_1/1104"
                        expression (src/stage1/parser.ml[514,20931+14]..src/stage1/parser.ml[514,20931+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[514,20931+53]..src/stage1/parser.ml[514,20931+69])
                              Ttyp_constr "Dune__exe!.Syntax.attribute"
                              []
                          Texp_apply
                          expression (src/stage1/parser.ml[514,20931+14]..src/stage1/parser.ml[514,20931+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[514,20931+31]..src/stage1/parser.ml[514,20931+48])
                                Texp_ident "__caml_parser_env/1103"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[514,20931+49]..src/stage1/parser.ml[514,20931+50])
                                Texp_constant Const_int 0
                          ]
                    ]
                    expression (src/stage1/parser.ml[515,21005+4]..src/stage1/parser.ml[519,21125+30])
                      Texp_apply
                      expression (src/stage1/parser.ml[515,21005+4]..src/stage1/parser.ml[515,21005+12])
                        Texp_ident "Stdlib!.Obj.repr"
                      [
                        <arg>
                          Nolabel
                          expression (src/stage1/parser.mly[121,21049+4]..src/stage1/parser.mly[121,21049+46])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[519,21125+17]..src/stage1/parser.ml[519,21125+29])
                                Ttyp_var declaration
                            Texp_construct "::"
                            [
                              expression (src/stage1/parser.mly[121,21049+8]..src/stage1/parser.mly[121,21049+42])
                                Texp_apply
                                expression (src/stage1/parser.mly[121,21049+8]..src/stage1/parser.mly[121,21049+19])
                                  Texp_ident "Dune__exe!.Positions.unknown_pos"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/stage1/parser.mly[121,21049+20]..src/stage1/parser.mly[121,21049+42])
                                      Texp_construct "DGrammarAttribute"
                                      [
                                        expression (src/stage1/parser.mly[121,21049+39]..src/stage1/parser.mly[121,21049+41])
                                          Texp_ident "_1/1104"
                                      ]
                                ]
                              expression (src/stage1/parser.mly[121,21049+43]..src/stage1/parser.mly[121,21049+44]) ghost
                                Texp_construct "[]"
                                []
                            ]
                      ]
              ]
            expression (src/stage1/parser.ml[520,21157+2]..src/stage1/parser.ml[527,21446+31])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[520,21157+7]..src/stage1/parser.ml[520,21157+24])
                    Tpat_var "__caml_parser_env/1105"
                  expression (src/stage1/parser.ml[521,21185+4]..src/stage1/parser.ml[527,21446+30])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[521,21185+8]..src/stage1/parser.ml[521,21185+10])
                          Tpat_var "_2/1106"
                        expression (src/stage1/parser.ml[521,21185+14]..src/stage1/parser.ml[521,21185+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[521,21185+53]..src/stage1/parser.ml[521,21185+61])
                              Ttyp_var actuals
                          Texp_apply
                          expression (src/stage1/parser.ml[521,21185+14]..src/stage1/parser.ml[521,21185+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[521,21185+31]..src/stage1/parser.ml[521,21185+48])
                                Texp_ident "__caml_parser_env/1105"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[521,21185+49]..src/stage1/parser.ml[521,21185+50])
                                Texp_constant Const_int 1
                          ]
                    ]
                    expression (src/stage1/parser.ml[522,21251+4]..src/stage1/parser.ml[527,21446+30])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[522,21251+8]..src/stage1/parser.ml[522,21251+10])
                            Tpat_var "_3/1107"
                          expression (src/stage1/parser.ml[522,21251+14]..src/stage1/parser.ml[522,21251+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[522,21251+53]..src/stage1/parser.ml[522,21251+64])
                                Ttyp_var attributes
                            Texp_apply
                            expression (src/stage1/parser.ml[522,21251+14]..src/stage1/parser.ml[522,21251+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[522,21251+31]..src/stage1/parser.ml[522,21251+48])
                                  Texp_ident "__caml_parser_env/1105"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[522,21251+49]..src/stage1/parser.ml[522,21251+50])
                                  Texp_constant Const_int 0
                            ]
                      ]
                      expression (src/stage1/parser.ml[523,21320+4]..src/stage1/parser.ml[527,21446+30])
                        Texp_apply
                        expression (src/stage1/parser.ml[523,21320+4]..src/stage1/parser.ml[523,21320+12])
                          Texp_ident "Stdlib!.Obj.repr"
                        [
                          <arg>
                            Nolabel
                            expression (src/stage1/parser.mly[124,21364+4]..src/stage1/parser.mly[124,21364+52])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[527,21446+17]..src/stage1/parser.ml[527,21446+29])
                                  Ttyp_var declaration
                              Texp_construct "::"
                              [
                                expression (src/stage1/parser.mly[124,21364+8]..src/stage1/parser.mly[124,21364+48])
                                  Texp_apply
                                  expression (src/stage1/parser.mly[124,21364+8]..src/stage1/parser.mly[124,21364+19])
                                    Texp_ident "Dune__exe!.Positions.unknown_pos"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/stage1/parser.mly[124,21364+20]..src/stage1/parser.mly[124,21364+48])
                                        Texp_construct "DSymbolAttributes"
                                        [
                                          expression (src/stage1/parser.mly[124,21364+40]..src/stage1/parser.mly[124,21364+42])
                                            Texp_ident "_2/1106"
                                          expression (src/stage1/parser.mly[124,21364+44]..src/stage1/parser.mly[124,21364+46])
                                            Texp_ident "_3/1107"
                                        ]
                                  ]
                                expression (src/stage1/parser.mly[124,21364+49]..src/stage1/parser.mly[124,21364+50]) ghost
                                  Texp_construct "[]"
                                  []
                              ]
                        ]
              ]
            expression (src/stage1/parser.ml[528,21478+2]..src/stage1/parser.ml[536,21816+31])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[528,21478+7]..src/stage1/parser.ml[528,21478+24])
                    Tpat_var "__caml_parser_env/1108"
                  expression (src/stage1/parser.ml[529,21506+4]..src/stage1/parser.ml[536,21816+30])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[529,21506+8]..src/stage1/parser.ml[529,21506+10])
                          Tpat_var "_2/1109"
                        expression (src/stage1/parser.ml[529,21506+14]..src/stage1/parser.ml[529,21506+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[529,21506+53]..src/stage1/parser.ml[529,21506+61])
                              Ttyp_var actuals
                          Texp_apply
                          expression (src/stage1/parser.ml[529,21506+14]..src/stage1/parser.ml[529,21506+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[529,21506+31]..src/stage1/parser.ml[529,21506+48])
                                Texp_ident "__caml_parser_env/1108"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[529,21506+49]..src/stage1/parser.ml[529,21506+50])
                                Texp_constant Const_int 0
                          ]
                    ]
                    expression (src/stage1/parser.ml[530,21572+4]..src/stage1/parser.ml[536,21816+30])
                      Texp_apply
                      expression (src/stage1/parser.ml[530,21572+4]..src/stage1/parser.ml[530,21572+12])
                        Texp_ident "Stdlib!.Obj.repr"
                      [
                        <arg>
                          Nolabel
                          expression (src/stage1/parser.mly[127,21616+4]..src/stage1/parser.mly[129,21743+43])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[536,21816+17]..src/stage1/parser.ml[536,21816+29])
                                Ttyp_var declaration
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/stage1/parser.mly[127,21616+10]..src/stage1/parser.mly[127,21616+14])
                                  Tpat_var "prec/1110"
                                expression (src/stage1/parser.mly[127,21616+17]..src/stage1/parser.mly[127,21616+54])
                                  Texp_apply
                                  expression (src/stage1/parser.mly[127,21616+17]..src/stage1/parser.mly[127,21616+52])
                                    Texp_ident "Dune__exe!.ParserAux.new_on_error_reduce_level"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/stage1/parser.mly[127,21616+52]..src/stage1/parser.mly[127,21616+54])
                                        Texp_construct "()"
                                        []
                                  ]
                            ]
                            expression (src/stage1/parser.mly[128,21674+6]..src/stage1/parser.mly[129,21743+41])
                              Texp_apply
                              expression (src/stage1/parser.mly[128,21674+6]..src/stage1/parser.mly[128,21674+14])
                                Texp_ident "Stdlib!.List.map"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.mly[128,21674+15]..src/stage1/parser.mly[128,21674+68])
                                    Texp_apply
                                    expression (src/stage1/parser.mly[128,21674+16]..src/stage1/parser.mly[128,21674+29])
                                      Texp_ident "Dune__exe!.Positions.map"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/stage1/parser.mly[128,21674+30]..src/stage1/parser.mly[128,21674+67])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/stage1/parser.mly[128,21674+35]..src/stage1/parser.mly[128,21674+37])
                                                Tpat_var "nt/1111"
                                              expression (src/stage1/parser.mly[128,21674+41]..src/stage1/parser.mly[128,21674+66])
                                                Texp_construct "DOnErrorReduce"
                                                [
                                                  expression (src/stage1/parser.mly[128,21674+57]..src/stage1/parser.mly[128,21674+59])
                                                    Texp_ident "nt/1111"
                                                  expression (src/stage1/parser.mly[128,21674+61]..src/stage1/parser.mly[128,21674+65])
                                                    Texp_ident "prec/1110"
                                                ]
                                          ]
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.mly[129,21743+8]..src/stage1/parser.mly[129,21743+41])
                                    Texp_apply
                                    expression (src/stage1/parser.mly[129,21743+9]..src/stage1/parser.mly[129,21743+17])
                                      Texp_ident "Stdlib!.List.map"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/stage1/parser.mly[129,21743+18]..src/stage1/parser.mly[129,21743+37])
                                          Texp_ident "Dune__exe!.Parameters.with_pos"
                                      <arg>
                                        Nolabel
                                        expression (src/stage1/parser.mly[129,21743+38]..src/stage1/parser.mly[129,21743+40])
                                          Texp_ident "_2/1109"
                                    ]
                              ]
                      ]
              ]
            expression (src/stage1/parser.ml[537,21848+2]..src/stage1/parser.ml[542,21962+38])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[537,21848+7]..src/stage1/parser.ml[537,21848+24])
                    Tpat_var "__caml_parser_env/1112"
                  expression (src/stage1/parser.ml[538,21876+4]..src/stage1/parser.ml[542,21962+37])
                    Texp_apply
                    expression (src/stage1/parser.ml[538,21876+4]..src/stage1/parser.ml[538,21876+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[133,21920+4]..src/stage1/parser.mly[133,21920+12])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[542,21962+17]..src/stage1/parser.ml[542,21962+36])
                              Ttyp_var optional_ocamltype
                          Texp_construct "None"
                          []
                    ]
              ]
            expression (src/stage1/parser.ml[543,22001+2]..src/stage1/parser.ml[549,22193+38])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[543,22001+7]..src/stage1/parser.ml[543,22001+24])
                    Tpat_var "__caml_parser_env/1113"
                  expression (src/stage1/parser.ml[544,22029+4]..src/stage1/parser.ml[549,22193+37])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[544,22029+8]..src/stage1/parser.ml[544,22029+10])
                          Tpat_var "_1/1114"
                        expression (src/stage1/parser.ml[544,22029+14]..src/stage1/parser.ml[544,22029+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[544,22029+53]..src/stage1/parser.ml[544,22029+70])
                              Ttyp_constr "Dune__exe!.Stretch.ocamltype"
                              []
                          Texp_apply
                          expression (src/stage1/parser.ml[544,22029+14]..src/stage1/parser.ml[544,22029+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[544,22029+31]..src/stage1/parser.ml[544,22029+48])
                                Texp_ident "__caml_parser_env/1113"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[544,22029+49]..src/stage1/parser.ml[544,22029+50])
                                Texp_constant Const_int 0
                          ]
                    ]
                    expression (src/stage1/parser.ml[545,22104+4]..src/stage1/parser.ml[549,22193+37])
                      Texp_apply
                      expression (src/stage1/parser.ml[545,22104+4]..src/stage1/parser.ml[545,22104+12])
                        Texp_ident "Stdlib!.Obj.repr"
                      [
                        <arg>
                          Nolabel
                          expression (src/stage1/parser.mly[135,22148+4]..src/stage1/parser.mly[135,22148+15])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[549,22193+17]..src/stage1/parser.ml[549,22193+36])
                                Ttyp_var optional_ocamltype
                            Texp_construct "Some"
                            [
                              expression (src/stage1/parser.mly[135,22148+11]..src/stage1/parser.mly[135,22148+13])
                                Texp_ident "_1/1114"
                            ]
                      ]
              ]
            expression (src/stage1/parser.ml[550,22232+2]..src/stage1/parser.ml[555,22351+36])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[550,22232+7]..src/stage1/parser.ml[550,22232+24])
                    Tpat_var "__caml_parser_env/1115"
                  expression (src/stage1/parser.ml[551,22260+4]..src/stage1/parser.ml[555,22351+35])
                    Texp_apply
                    expression (src/stage1/parser.ml[551,22260+4]..src/stage1/parser.ml[551,22260+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[139,22304+4]..src/stage1/parser.mly[139,22304+17])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[555,22351+17]..src/stage1/parser.ml[555,22351+34])
                              Ttyp_var priority_keyword
                          Texp_construct "LeftAssoc"
                          []
                    ]
              ]
            expression (src/stage1/parser.ml[556,22388+2]..src/stage1/parser.ml[561,22508+36])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[556,22388+7]..src/stage1/parser.ml[556,22388+24])
                    Tpat_var "__caml_parser_env/1116"
                  expression (src/stage1/parser.ml[557,22416+4]..src/stage1/parser.ml[561,22508+35])
                    Texp_apply
                    expression (src/stage1/parser.ml[557,22416+4]..src/stage1/parser.ml[557,22416+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[141,22460+4]..src/stage1/parser.mly[141,22460+18])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[561,22508+17]..src/stage1/parser.ml[561,22508+34])
                              Ttyp_var priority_keyword
                          Texp_construct "RightAssoc"
                          []
                    ]
              ]
            expression (src/stage1/parser.ml[562,22545+2]..src/stage1/parser.ml[567,22663+36])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[562,22545+7]..src/stage1/parser.ml[562,22545+24])
                    Tpat_var "__caml_parser_env/1117"
                  expression (src/stage1/parser.ml[563,22573+4]..src/stage1/parser.ml[567,22663+35])
                    Texp_apply
                    expression (src/stage1/parser.ml[563,22573+4]..src/stage1/parser.ml[563,22573+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[143,22617+4]..src/stage1/parser.mly[143,22617+16])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[567,22663+17]..src/stage1/parser.ml[567,22663+34])
                              Ttyp_var priority_keyword
                          Texp_construct "NonAssoc"
                          []
                    ]
              ]
            expression (src/stage1/parser.ml[568,22700+2]..src/stage1/parser.ml[573,22812+27])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[568,22700+7]..src/stage1/parser.ml[568,22700+24])
                    Tpat_var "__caml_parser_env/1118"
                  expression (src/stage1/parser.ml[569,22728+4]..src/stage1/parser.ml[573,22812+26])
                    Texp_apply
                    expression (src/stage1/parser.ml[569,22728+4]..src/stage1/parser.ml[569,22728+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[159,22772+4]..src/stage1/parser.mly[159,22772+10])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[573,22812+17]..src/stage1/parser.ml[573,22812+25])
                              Ttyp_var symbols
                          Texp_construct "[]"
                          []
                    ]
              ]
            expression (src/stage1/parser.ml[574,22840+2]..src/stage1/parser.ml[582,23162+27])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[574,22840+7]..src/stage1/parser.ml[574,22840+24])
                    Tpat_var "__caml_parser_env/1119"
                  expression (src/stage1/parser.ml[575,22868+4]..src/stage1/parser.ml[582,23162+26])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[575,22868+8]..src/stage1/parser.ml[575,22868+10])
                          Tpat_var "_1/1120"
                        expression (src/stage1/parser.ml[575,22868+14]..src/stage1/parser.ml[575,22868+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[575,22868+53]..src/stage1/parser.ml[575,22868+61])
                              Ttyp_var symbols
                          Texp_apply
                          expression (src/stage1/parser.ml[575,22868+14]..src/stage1/parser.ml[575,22868+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[575,22868+31]..src/stage1/parser.ml[575,22868+48])
                                Texp_ident "__caml_parser_env/1119"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[575,22868+49]..src/stage1/parser.ml[575,22868+50])
                                Texp_constant Const_int 2
                          ]
                    ]
                    expression (src/stage1/parser.ml[576,22934+4]..src/stage1/parser.ml[582,23162+26])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[576,22934+8]..src/stage1/parser.ml[576,22934+10])
                            Tpat_var "_2/1121"
                          expression (src/stage1/parser.ml[576,22934+14]..src/stage1/parser.ml[576,22934+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[576,22934+53]..src/stage1/parser.ml[576,22934+68])
                                Ttyp_var optional_comma
                            Texp_apply
                            expression (src/stage1/parser.ml[576,22934+14]..src/stage1/parser.ml[576,22934+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[576,22934+31]..src/stage1/parser.ml[576,22934+48])
                                  Texp_ident "__caml_parser_env/1119"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[576,22934+49]..src/stage1/parser.ml[576,22934+50])
                                  Texp_constant Const_int 1
                            ]
                      ]
                      expression (src/stage1/parser.ml[577,23007+4]..src/stage1/parser.ml[582,23162+26])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/stage1/parser.ml[577,23007+8]..src/stage1/parser.ml[577,23007+10])
                              Tpat_var "_3/1122"
                            expression (src/stage1/parser.ml[577,23007+14]..src/stage1/parser.ml[577,23007+50])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[577,23007+53]..src/stage1/parser.ml[577,23007+60])
                                  Ttyp_var symbol
                              Texp_apply
                              expression (src/stage1/parser.ml[577,23007+14]..src/stage1/parser.ml[577,23007+30])
                                Texp_ident "Stdlib!.Parsing.peek_val"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.ml[577,23007+31]..src/stage1/parser.ml[577,23007+48])
                                    Texp_ident "__caml_parser_env/1119"
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.ml[577,23007+49]..src/stage1/parser.ml[577,23007+50])
                                    Texp_constant Const_int 0
                              ]
                        ]
                        expression (src/stage1/parser.ml[578,23072+4]..src/stage1/parser.ml[582,23162+26])
                          Texp_apply
                          expression (src/stage1/parser.ml[578,23072+4]..src/stage1/parser.ml[578,23072+12])
                            Texp_ident "Stdlib!.Obj.repr"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.mly[161,23116+4]..src/stage1/parser.mly[161,23116+16])
                                extra
                                  Texp_constraint
                                  core_type (src/stage1/parser.ml[582,23162+17]..src/stage1/parser.ml[582,23162+25])
                                    Ttyp_var symbols
                                Texp_construct "::"
                                [
                                  expression (src/stage1/parser.mly[161,23116+6]..src/stage1/parser.mly[161,23116+8])
                                    Texp_ident "_3/1122"
                                  expression (src/stage1/parser.mly[161,23116+12]..src/stage1/parser.mly[161,23116+14])
                                    Texp_ident "_1/1120"
                                ]
                          ]
              ]
            expression (src/stage1/parser.ml[583,23190+2]..src/stage1/parser.ml[589,23384+26])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[583,23190+7]..src/stage1/parser.ml[583,23190+24])
                    Tpat_var "__caml_parser_env/1123"
                  expression (src/stage1/parser.ml[584,23218+4]..src/stage1/parser.ml[589,23384+25])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[584,23218+8]..src/stage1/parser.ml[584,23218+10])
                          Tpat_var "_1/1124"
                        expression (src/stage1/parser.ml[584,23218+14]..src/stage1/parser.ml[584,23218+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[584,23218+53]..src/stage1/parser.ml[584,23218+77])
                              Ttyp_constr "Dune__exe!.Positions.located"
                              [
                                core_type (src/stage1/parser.ml[584,23218+53]..src/stage1/parser.ml[584,23218+59])
                                  Ttyp_constr "string/15!"
                                  []
                              ]
                          Texp_apply
                          expression (src/stage1/parser.ml[584,23218+14]..src/stage1/parser.ml[584,23218+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[584,23218+31]..src/stage1/parser.ml[584,23218+48])
                                Texp_ident "__caml_parser_env/1123"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[584,23218+49]..src/stage1/parser.ml[584,23218+50])
                                Texp_constant Const_int 0
                          ]
                    ]
                    expression (src/stage1/parser.ml[585,23300+4]..src/stage1/parser.ml[589,23384+25])
                      Texp_apply
                      expression (src/stage1/parser.ml[585,23300+4]..src/stage1/parser.ml[585,23300+12])
                        Texp_ident "Stdlib!.Obj.repr"
                      [
                        <arg>
                          Nolabel
                          expression (src/stage1/parser.mly[165,23344+4]..src/stage1/parser.mly[165,23344+10])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[589,23384+17]..src/stage1/parser.ml[589,23384+24])
                                Ttyp_var symbol
                            Texp_ident "_1/1124"
                      ]
              ]
            expression (src/stage1/parser.ml[590,23411+2]..src/stage1/parser.ml[596,23605+26])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[590,23411+7]..src/stage1/parser.ml[590,23411+24])
                    Tpat_var "__caml_parser_env/1125"
                  expression (src/stage1/parser.ml[591,23439+4]..src/stage1/parser.ml[596,23605+25])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[591,23439+8]..src/stage1/parser.ml[591,23439+10])
                          Tpat_var "_1/1126"
                        expression (src/stage1/parser.ml[591,23439+14]..src/stage1/parser.ml[591,23439+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[591,23439+53]..src/stage1/parser.ml[591,23439+77])
                              Ttyp_constr "Dune__exe!.Positions.located"
                              [
                                core_type (src/stage1/parser.ml[591,23439+53]..src/stage1/parser.ml[591,23439+59])
                                  Ttyp_constr "string/15!"
                                  []
                              ]
                          Texp_apply
                          expression (src/stage1/parser.ml[591,23439+14]..src/stage1/parser.ml[591,23439+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[591,23439+31]..src/stage1/parser.ml[591,23439+48])
                                Texp_ident "__caml_parser_env/1125"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[591,23439+49]..src/stage1/parser.ml[591,23439+50])
                                Texp_constant Const_int 0
                          ]
                    ]
                    expression (src/stage1/parser.ml[592,23521+4]..src/stage1/parser.ml[596,23605+25])
                      Texp_apply
                      expression (src/stage1/parser.ml[592,23521+4]..src/stage1/parser.ml[592,23521+12])
                        Texp_ident "Stdlib!.Obj.repr"
                      [
                        <arg>
                          Nolabel
                          expression (src/stage1/parser.mly[167,23565+4]..src/stage1/parser.mly[167,23565+10])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[596,23605+17]..src/stage1/parser.ml[596,23605+24])
                                Ttyp_var symbol
                            Texp_ident "_1/1126"
                      ]
              ]
            expression (src/stage1/parser.ml[597,23632+2]..src/stage1/parser.ml[603,23826+26])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[597,23632+7]..src/stage1/parser.ml[597,23632+24])
                    Tpat_var "__caml_parser_env/1127"
                  expression (src/stage1/parser.ml[598,23660+4]..src/stage1/parser.ml[603,23826+25])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[598,23660+8]..src/stage1/parser.ml[598,23660+10])
                          Tpat_var "_1/1128"
                        expression (src/stage1/parser.ml[598,23660+14]..src/stage1/parser.ml[598,23660+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[598,23660+53]..src/stage1/parser.ml[598,23660+77])
                              Ttyp_constr "Dune__exe!.Positions.located"
                              [
                                core_type (src/stage1/parser.ml[598,23660+53]..src/stage1/parser.ml[598,23660+59])
                                  Ttyp_constr "string/15!"
                                  []
                              ]
                          Texp_apply
                          expression (src/stage1/parser.ml[598,23660+14]..src/stage1/parser.ml[598,23660+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[598,23660+31]..src/stage1/parser.ml[598,23660+48])
                                Texp_ident "__caml_parser_env/1127"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[598,23660+49]..src/stage1/parser.ml[598,23660+50])
                                Texp_constant Const_int 0
                          ]
                    ]
                    expression (src/stage1/parser.ml[599,23742+4]..src/stage1/parser.ml[603,23826+25])
                      Texp_apply
                      expression (src/stage1/parser.ml[599,23742+4]..src/stage1/parser.ml[599,23742+12])
                        Texp_ident "Stdlib!.Obj.repr"
                      [
                        <arg>
                          Nolabel
                          expression (src/stage1/parser.mly[169,23786+4]..src/stage1/parser.mly[169,23786+10])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[603,23826+17]..src/stage1/parser.ml[603,23826+24])
                                Ttyp_var symbol
                            Texp_ident "_1/1128"
                      ]
              ]
            expression (src/stage1/parser.ml[604,23853+2]..src/stage1/parser.ml[609,23965+34])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[604,23853+7]..src/stage1/parser.ml[604,23853+24])
                    Tpat_var "__caml_parser_env/1129"
                  expression (src/stage1/parser.ml[605,23881+4]..src/stage1/parser.ml[609,23965+33])
                    Texp_apply
                    expression (src/stage1/parser.ml[605,23881+4]..src/stage1/parser.ml[605,23881+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[173,23925+4]..src/stage1/parser.mly[173,23925+10])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[609,23965+17]..src/stage1/parser.ml[609,23965+32])
                              Ttyp_var optional_comma
                          Texp_construct "()"
                          []
                    ]
              ]
            expression (src/stage1/parser.ml[610,24000+2]..src/stage1/parser.ml[615,24112+34])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[610,24000+7]..src/stage1/parser.ml[610,24000+24])
                    Tpat_var "__caml_parser_env/1130"
                  expression (src/stage1/parser.ml[611,24028+4]..src/stage1/parser.ml[615,24112+33])
                    Texp_apply
                    expression (src/stage1/parser.ml[611,24028+4]..src/stage1/parser.ml[611,24028+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[175,24072+4]..src/stage1/parser.mly[175,24072+10])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[615,24112+17]..src/stage1/parser.ml[615,24112+32])
                              Ttyp_var optional_comma
                          Texp_construct "()"
                          []
                    ]
              ]
            expression (src/stage1/parser.ml[616,24147+2]..src/stage1/parser.ml[621,24259+30])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[616,24147+7]..src/stage1/parser.ml[616,24147+24])
                    Tpat_var "__caml_parser_env/1131"
                  expression (src/stage1/parser.ml[617,24175+4]..src/stage1/parser.ml[621,24259+29])
                    Texp_apply
                    expression (src/stage1/parser.ml[617,24175+4]..src/stage1/parser.ml[617,24175+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[179,24219+4]..src/stage1/parser.mly[179,24219+10])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[621,24259+17]..src/stage1/parser.ml[621,24259+28])
                              Ttyp_var attributes
                          Texp_construct "[]"
                          []
                    ]
              ]
            expression (src/stage1/parser.ml[622,24290+2]..src/stage1/parser.ml[629,24570+30])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[622,24290+7]..src/stage1/parser.ml[622,24290+24])
                    Tpat_var "__caml_parser_env/1132"
                  expression (src/stage1/parser.ml[623,24318+4]..src/stage1/parser.ml[629,24570+29])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[623,24318+8]..src/stage1/parser.ml[623,24318+10])
                          Tpat_var "_1/1133"
                        expression (src/stage1/parser.ml[623,24318+14]..src/stage1/parser.ml[623,24318+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[623,24318+53]..src/stage1/parser.ml[623,24318+69])
                              Ttyp_constr "Dune__exe!.Syntax.attribute"
                              []
                          Texp_apply
                          expression (src/stage1/parser.ml[623,24318+14]..src/stage1/parser.ml[623,24318+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[623,24318+31]..src/stage1/parser.ml[623,24318+48])
                                Texp_ident "__caml_parser_env/1132"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[623,24318+49]..src/stage1/parser.ml[623,24318+50])
                                Texp_constant Const_int 1
                          ]
                    ]
                    expression (src/stage1/parser.ml[624,24392+4]..src/stage1/parser.ml[629,24570+29])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[624,24392+8]..src/stage1/parser.ml[624,24392+10])
                            Tpat_var "_2/1134"
                          expression (src/stage1/parser.ml[624,24392+14]..src/stage1/parser.ml[624,24392+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[624,24392+53]..src/stage1/parser.ml[624,24392+64])
                                Ttyp_var attributes
                            Texp_apply
                            expression (src/stage1/parser.ml[624,24392+14]..src/stage1/parser.ml[624,24392+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[624,24392+31]..src/stage1/parser.ml[624,24392+48])
                                  Texp_ident "__caml_parser_env/1132"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[624,24392+49]..src/stage1/parser.ml[624,24392+50])
                                  Texp_constant Const_int 0
                            ]
                      ]
                      expression (src/stage1/parser.ml[625,24461+4]..src/stage1/parser.ml[629,24570+29])
                        Texp_apply
                        expression (src/stage1/parser.ml[625,24461+4]..src/stage1/parser.ml[625,24461+12])
                          Texp_ident "Stdlib!.Obj.repr"
                        [
                          <arg>
                            Nolabel
                            expression (src/stage1/parser.mly[180,24505+23]..src/stage1/parser.mly[180,24505+35])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[629,24570+17]..src/stage1/parser.ml[629,24570+28])
                                  Ttyp_var attributes
                              Texp_construct "::"
                              [
                                expression (src/stage1/parser.mly[180,24505+25]..src/stage1/parser.mly[180,24505+27])
                                  Texp_ident "_1/1133"
                                expression (src/stage1/parser.mly[180,24505+31]..src/stage1/parser.mly[180,24505+33])
                                  Texp_ident "_2/1134"
                              ]
                        ]
              ]
            expression (src/stage1/parser.ml[630,24601+2]..src/stage1/parser.ml[635,24713+29])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[630,24601+7]..src/stage1/parser.ml[630,24601+24])
                    Tpat_var "__caml_parser_env/1135"
                  expression (src/stage1/parser.ml[631,24629+4]..src/stage1/parser.ml[635,24713+28])
                    Texp_apply
                    expression (src/stage1/parser.ml[631,24629+4]..src/stage1/parser.ml[631,24629+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[188,24673+4]..src/stage1/parser.mly[188,24673+10])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[635,24713+17]..src/stage1/parser.ml[635,24713+27])
                              Ttyp_var terminals
                          Texp_construct "[]"
                          []
                    ]
              ]
            expression (src/stage1/parser.ml[636,24743+2]..src/stage1/parser.ml[648,25378+29])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[636,24743+7]..src/stage1/parser.ml[636,24743+24])
                    Tpat_var "__caml_parser_env/1136"
                  expression (src/stage1/parser.ml[637,24771+4]..src/stage1/parser.ml[648,25378+28])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[637,24771+8]..src/stage1/parser.ml[637,24771+10])
                          Tpat_var "_1/1137"
                        expression (src/stage1/parser.ml[637,24771+14]..src/stage1/parser.ml[637,24771+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[637,24771+53]..src/stage1/parser.ml[637,24771+63])
                              Ttyp_var terminals
                          Texp_apply
                          expression (src/stage1/parser.ml[637,24771+14]..src/stage1/parser.ml[637,24771+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[637,24771+31]..src/stage1/parser.ml[637,24771+48])
                                Texp_ident "__caml_parser_env/1136"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[637,24771+49]..src/stage1/parser.ml[637,24771+50])
                                Texp_constant Const_int 4
                          ]
                    ]
                    expression (src/stage1/parser.ml[638,24839+4]..src/stage1/parser.ml[648,25378+28])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[638,24839+8]..src/stage1/parser.ml[638,24839+10])
                            Tpat_var "_2/1138"
                          expression (src/stage1/parser.ml[638,24839+14]..src/stage1/parser.ml[638,24839+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[638,24839+53]..src/stage1/parser.ml[638,24839+68])
                                Ttyp_var optional_comma
                            Texp_apply
                            expression (src/stage1/parser.ml[638,24839+14]..src/stage1/parser.ml[638,24839+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[638,24839+31]..src/stage1/parser.ml[638,24839+48])
                                  Texp_ident "__caml_parser_env/1136"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[638,24839+49]..src/stage1/parser.ml[638,24839+50])
                                  Texp_constant Const_int 3
                            ]
                      ]
                      expression (src/stage1/parser.ml[639,24912+4]..src/stage1/parser.ml[648,25378+28])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/stage1/parser.ml[639,24912+8]..src/stage1/parser.ml[639,24912+10])
                              Tpat_var "_3/1139"
                            expression (src/stage1/parser.ml[639,24912+14]..src/stage1/parser.ml[639,24912+50])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[639,24912+53]..src/stage1/parser.ml[639,24912+77])
                                  Ttyp_constr "Dune__exe!.Positions.located"
                                  [
                                    core_type (src/stage1/parser.ml[639,24912+53]..src/stage1/parser.ml[639,24912+59])
                                      Ttyp_constr "string/15!"
                                      []
                                  ]
                              Texp_apply
                              expression (src/stage1/parser.ml[639,24912+14]..src/stage1/parser.ml[639,24912+30])
                                Texp_ident "Stdlib!.Parsing.peek_val"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.ml[639,24912+31]..src/stage1/parser.ml[639,24912+48])
                                    Texp_ident "__caml_parser_env/1136"
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.ml[639,24912+49]..src/stage1/parser.ml[639,24912+50])
                                    Texp_constant Const_int 2
                              ]
                        ]
                        expression (src/stage1/parser.ml[640,24994+4]..src/stage1/parser.ml[648,25378+28])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (src/stage1/parser.ml[640,24994+8]..src/stage1/parser.ml[640,24994+10])
                                Tpat_var "_4/1140"
                              expression (src/stage1/parser.ml[640,24994+14]..src/stage1/parser.ml[640,24994+50])
                                extra
                                  Texp_constraint
                                  core_type (src/stage1/parser.ml[640,24994+53]..src/stage1/parser.ml[640,24994+68])
                                    Ttyp_var optional_alias
                                Texp_apply
                                expression (src/stage1/parser.ml[640,24994+14]..src/stage1/parser.ml[640,24994+30])
                                  Texp_ident "Stdlib!.Parsing.peek_val"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/stage1/parser.ml[640,24994+31]..src/stage1/parser.ml[640,24994+48])
                                      Texp_ident "__caml_parser_env/1136"
                                  <arg>
                                    Nolabel
                                    expression (src/stage1/parser.ml[640,24994+49]..src/stage1/parser.ml[640,24994+50])
                                      Texp_constant Const_int 1
                                ]
                          ]
                          expression (src/stage1/parser.ml[641,25067+4]..src/stage1/parser.ml[648,25378+28])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/stage1/parser.ml[641,25067+8]..src/stage1/parser.ml[641,25067+10])
                                  Tpat_var "_5/1141"
                                expression (src/stage1/parser.ml[641,25067+14]..src/stage1/parser.ml[641,25067+50])
                                  extra
                                    Texp_constraint
                                    core_type (src/stage1/parser.ml[641,25067+53]..src/stage1/parser.ml[641,25067+64])
                                      Ttyp_var attributes
                                  Texp_apply
                                  expression (src/stage1/parser.ml[641,25067+14]..src/stage1/parser.ml[641,25067+30])
                                    Texp_ident "Stdlib!.Parsing.peek_val"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/stage1/parser.ml[641,25067+31]..src/stage1/parser.ml[641,25067+48])
                                        Texp_ident "__caml_parser_env/1136"
                                    <arg>
                                      Nolabel
                                      expression (src/stage1/parser.ml[641,25067+49]..src/stage1/parser.ml[641,25067+50])
                                        Texp_constant Const_int 0
                                  ]
                            ]
                            expression (src/stage1/parser.ml[642,25136+4]..src/stage1/parser.ml[648,25378+28])
                              Texp_apply
                              expression (src/stage1/parser.ml[642,25136+4]..src/stage1/parser.ml[642,25136+12])
                                Texp_ident "Stdlib!.Obj.repr"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.mly[190,25180+4]..src/stage1/parser.mly[192,25286+62])
                                    extra
                                      Texp_constraint
                                      core_type (src/stage1/parser.ml[648,25378+17]..src/stage1/parser.ml[648,25378+27])
                                        Ttyp_var terminals
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/stage1/parser.mly[190,25180+10]..src/stage1/parser.mly[190,25180+31])
                                          Tpat_tuple
                                          [
                                            pattern (src/stage1/parser.mly[190,25180+10]..src/stage1/parser.mly[190,25180+12])
                                              Tpat_var "ts/1142"
                                            pattern (src/stage1/parser.mly[190,25180+14]..src/stage1/parser.mly[190,25180+17])
                                              Tpat_var "uid/1143"
                                            pattern (src/stage1/parser.mly[190,25180+19]..src/stage1/parser.mly[190,25180+24])
                                              Tpat_var "alias/1144"
                                            pattern (src/stage1/parser.mly[190,25180+26]..src/stage1/parser.mly[190,25180+31])
                                              Tpat_var "attrs/1145"
                                          ]
                                        expression (src/stage1/parser.mly[190,25180+34]..src/stage1/parser.mly[190,25180+48])
                                          Texp_tuple
                                          [
                                            expression (src/stage1/parser.mly[190,25180+34]..src/stage1/parser.mly[190,25180+36])
                                              Texp_ident "_1/1137"
                                            expression (src/stage1/parser.mly[190,25180+38]..src/stage1/parser.mly[190,25180+40])
                                              Texp_ident "_3/1139"
                                            expression (src/stage1/parser.mly[190,25180+42]..src/stage1/parser.mly[190,25180+44])
                                              Texp_ident "_4/1140"
                                            expression (src/stage1/parser.mly[190,25180+46]..src/stage1/parser.mly[190,25180+48])
                                              Texp_ident "_5/1141"
                                          ]
                                    ]
                                    expression (src/stage1/parser.mly[191,25232+6]..src/stage1/parser.mly[192,25286+60])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/stage1/parser.mly[191,25232+10]..src/stage1/parser.mly[191,25232+15])
                                            Tpat_var "alias/1146"
                                          expression (src/stage1/parser.mly[191,25232+18]..src/stage1/parser.mly[191,25232+50])
                                            Texp_apply
                                            expression (src/stage1/parser.mly[191,25232+18]..src/stage1/parser.mly[191,25232+28])
                                              Texp_ident "Dune__exe!.Option.map"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/stage1/parser.mly[191,25232+29]..src/stage1/parser.mly[191,25232+44])
                                                  Texp_ident "Dune__exe!.Positions.value"
                                              <arg>
                                                Nolabel
                                                expression (src/stage1/parser.mly[191,25232+45]..src/stage1/parser.mly[191,25232+50])
                                                  Texp_ident "alias/1144"
                                            ]
                                      ]
                                      expression (src/stage1/parser.mly[192,25286+6]..src/stage1/parser.mly[192,25286+60])
                                        Texp_construct "::"
                                        [
                                          expression (src/stage1/parser.mly[192,25286+6]..src/stage1/parser.mly[192,25286+54])
                                            Texp_apply
                                            expression (src/stage1/parser.mly[192,25286+6]..src/stage1/parser.mly[192,25286+19])
                                              Texp_ident "Dune__exe!.Positions.map"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/stage1/parser.mly[192,25286+20]..src/stage1/parser.mly[192,25286+50])
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (src/stage1/parser.mly[192,25286+25]..src/stage1/parser.mly[192,25286+28])
                                                        Tpat_var "uid/1158"
                                                      expression (src/stage1/parser.mly[192,25286+32]..src/stage1/parser.mly[192,25286+49])
                                                        Texp_tuple
                                                        [
                                                          expression (src/stage1/parser.mly[192,25286+32]..src/stage1/parser.mly[192,25286+35])
                                                            Texp_ident "uid/1158"
                                                          expression (src/stage1/parser.mly[192,25286+37]..src/stage1/parser.mly[192,25286+42])
                                                            Texp_ident "alias/1146"
                                                          expression (src/stage1/parser.mly[192,25286+44]..src/stage1/parser.mly[192,25286+49])
                                                            Texp_ident "attrs/1145"
                                                        ]
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (src/stage1/parser.mly[192,25286+51]..src/stage1/parser.mly[192,25286+54])
                                                  Texp_ident "uid/1143"
                                            ]
                                          expression (src/stage1/parser.mly[192,25286+58]..src/stage1/parser.mly[192,25286+60])
                                            Texp_ident "ts/1142"
                                        ]
                              ]
              ]
            expression (src/stage1/parser.ml[649,25408+2]..src/stage1/parser.ml[654,25520+32])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[649,25408+7]..src/stage1/parser.ml[649,25408+24])
                    Tpat_var "__caml_parser_env/1159"
                  expression (src/stage1/parser.ml[650,25436+4]..src/stage1/parser.ml[654,25520+31])
                    Texp_apply
                    expression (src/stage1/parser.ml[650,25436+4]..src/stage1/parser.ml[650,25436+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[196,25480+4]..src/stage1/parser.mly[196,25480+10])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[654,25520+17]..src/stage1/parser.ml[654,25520+30])
                              Ttyp_var nonterminals
                          Texp_construct "[]"
                          []
                    ]
              ]
            expression (src/stage1/parser.ml[655,25553+2]..src/stage1/parser.ml[662,25824+32])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[655,25553+7]..src/stage1/parser.ml[655,25553+24])
                    Tpat_var "__caml_parser_env/1160"
                  expression (src/stage1/parser.ml[656,25581+4]..src/stage1/parser.ml[662,25824+31])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[656,25581+8]..src/stage1/parser.ml[656,25581+10])
                          Tpat_var "_1/1161"
                        expression (src/stage1/parser.ml[656,25581+14]..src/stage1/parser.ml[656,25581+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[656,25581+53]..src/stage1/parser.ml[656,25581+66])
                              Ttyp_var nonterminals
                          Texp_apply
                          expression (src/stage1/parser.ml[656,25581+14]..src/stage1/parser.ml[656,25581+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[656,25581+31]..src/stage1/parser.ml[656,25581+48])
                                Texp_ident "__caml_parser_env/1160"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[656,25581+49]..src/stage1/parser.ml[656,25581+50])
                                Texp_constant Const_int 1
                          ]
                    ]
                    expression (src/stage1/parser.ml[657,25652+4]..src/stage1/parser.ml[662,25824+31])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[657,25652+8]..src/stage1/parser.ml[657,25652+10])
                            Tpat_var "_2/1162"
                          expression (src/stage1/parser.ml[657,25652+14]..src/stage1/parser.ml[657,25652+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[657,25652+53]..src/stage1/parser.ml[657,25652+77])
                                Ttyp_constr "Dune__exe!.Positions.located"
                                [
                                  core_type (src/stage1/parser.ml[657,25652+53]..src/stage1/parser.ml[657,25652+59])
                                    Ttyp_constr "string/15!"
                                    []
                                ]
                            Texp_apply
                            expression (src/stage1/parser.ml[657,25652+14]..src/stage1/parser.ml[657,25652+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[657,25652+31]..src/stage1/parser.ml[657,25652+48])
                                  Texp_ident "__caml_parser_env/1160"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[657,25652+49]..src/stage1/parser.ml[657,25652+50])
                                  Texp_constant Const_int 0
                            ]
                      ]
                      expression (src/stage1/parser.ml[658,25734+4]..src/stage1/parser.ml[662,25824+31])
                        Texp_apply
                        expression (src/stage1/parser.ml[658,25734+4]..src/stage1/parser.ml[658,25734+12])
                          Texp_ident "Stdlib!.Obj.repr"
                        [
                          <arg>
                            Nolabel
                            expression (src/stage1/parser.mly[198,25778+4]..src/stage1/parser.mly[198,25778+16])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[662,25824+17]..src/stage1/parser.ml[662,25824+30])
                                  Ttyp_var nonterminals
                              Texp_construct "::"
                              [
                                expression (src/stage1/parser.mly[198,25778+6]..src/stage1/parser.mly[198,25778+8])
                                  Texp_ident "_2/1162"
                                expression (src/stage1/parser.mly[198,25778+12]..src/stage1/parser.mly[198,25778+14])
                                  Texp_ident "_1/1161"
                              ]
                        ]
              ]
            expression (src/stage1/parser.ml[663,25857+2]..src/stage1/parser.ml[668,25971+34])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[663,25857+7]..src/stage1/parser.ml[663,25857+24])
                    Tpat_var "__caml_parser_env/1163"
                  expression (src/stage1/parser.ml[664,25885+4]..src/stage1/parser.ml[668,25971+33])
                    Texp_apply
                    expression (src/stage1/parser.ml[664,25885+4]..src/stage1/parser.ml[664,25885+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[202,25929+4]..src/stage1/parser.mly[202,25929+12])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[668,25971+17]..src/stage1/parser.ml[668,25971+32])
                              Ttyp_var optional_alias
                          Texp_construct "None"
                          []
                    ]
              ]
            expression (src/stage1/parser.ml[669,26006+2]..src/stage1/parser.ml[675,26205+34])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[669,26006+7]..src/stage1/parser.ml[669,26006+24])
                    Tpat_var "__caml_parser_env/1164"
                  expression (src/stage1/parser.ml[670,26034+4]..src/stage1/parser.ml[675,26205+33])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[670,26034+8]..src/stage1/parser.ml[670,26034+10])
                          Tpat_var "_1/1165"
                        expression (src/stage1/parser.ml[670,26034+14]..src/stage1/parser.ml[670,26034+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[670,26034+53]..src/stage1/parser.ml[670,26034+77])
                              Ttyp_constr "Dune__exe!.Positions.located"
                              [
                                core_type (src/stage1/parser.ml[670,26034+53]..src/stage1/parser.ml[670,26034+59])
                                  Ttyp_constr "string/15!"
                                  []
                              ]
                          Texp_apply
                          expression (src/stage1/parser.ml[670,26034+14]..src/stage1/parser.ml[670,26034+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[670,26034+31]..src/stage1/parser.ml[670,26034+48])
                                Texp_ident "__caml_parser_env/1164"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[670,26034+49]..src/stage1/parser.ml[670,26034+50])
                                Texp_constant Const_int 0
                          ]
                    ]
                    expression (src/stage1/parser.ml[671,26116+4]..src/stage1/parser.ml[675,26205+33])
                      Texp_apply
                      expression (src/stage1/parser.ml[671,26116+4]..src/stage1/parser.ml[671,26116+12])
                        Texp_ident "Stdlib!.Obj.repr"
                      [
                        <arg>
                          Nolabel
                          expression (src/stage1/parser.mly[204,26160+4]..src/stage1/parser.mly[204,26160+15])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[675,26205+17]..src/stage1/parser.ml[675,26205+32])
                                Ttyp_var optional_alias
                            Texp_construct "Some"
                            [
                              expression (src/stage1/parser.mly[204,26160+11]..src/stage1/parser.mly[204,26160+13])
                                Texp_ident "_1/1165"
                            ]
                      ]
              ]
            expression (src/stage1/parser.ml[676,26240+2]..src/stage1/parser.ml[681,26352+25])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[676,26240+7]..src/stage1/parser.ml[676,26240+24])
                    Tpat_var "__caml_parser_env/1166"
                  expression (src/stage1/parser.ml[677,26268+4]..src/stage1/parser.ml[681,26352+24])
                    Texp_apply
                    expression (src/stage1/parser.ml[677,26268+4]..src/stage1/parser.ml[677,26268+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[213,26312+4]..src/stage1/parser.mly[213,26312+10])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[681,26352+17]..src/stage1/parser.ml[681,26352+23])
                              Ttyp_var rules
                          Texp_construct "[]"
                          []
                    ]
              ]
            expression (src/stage1/parser.ml[682,26378+2]..src/stage1/parser.ml[689,26623+25])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[682,26378+7]..src/stage1/parser.ml[682,26378+24])
                    Tpat_var "__caml_parser_env/1167"
                  expression (src/stage1/parser.ml[683,26406+4]..src/stage1/parser.ml[689,26623+24])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[683,26406+8]..src/stage1/parser.ml[683,26406+10])
                          Tpat_var "_1/1168"
                        expression (src/stage1/parser.ml[683,26406+14]..src/stage1/parser.ml[683,26406+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[683,26406+53]..src/stage1/parser.ml[683,26406+59])
                              Ttyp_var rules
                          Texp_apply
                          expression (src/stage1/parser.ml[683,26406+14]..src/stage1/parser.ml[683,26406+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[683,26406+31]..src/stage1/parser.ml[683,26406+48])
                                Texp_ident "__caml_parser_env/1167"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[683,26406+49]..src/stage1/parser.ml[683,26406+50])
                                Texp_constant Const_int 1
                          ]
                    ]
                    expression (src/stage1/parser.ml[684,26470+4]..src/stage1/parser.ml[689,26623+24])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[684,26470+8]..src/stage1/parser.ml[684,26470+10])
                            Tpat_var "_2/1169"
                          expression (src/stage1/parser.ml[684,26470+14]..src/stage1/parser.ml[684,26470+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[684,26470+53]..src/stage1/parser.ml[684,26470+58])
                                Ttyp_var rule
                            Texp_apply
                            expression (src/stage1/parser.ml[684,26470+14]..src/stage1/parser.ml[684,26470+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[684,26470+31]..src/stage1/parser.ml[684,26470+48])
                                  Texp_ident "__caml_parser_env/1167"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[684,26470+49]..src/stage1/parser.ml[684,26470+50])
                                  Texp_constant Const_int 0
                            ]
                      ]
                      expression (src/stage1/parser.ml[685,26533+4]..src/stage1/parser.ml[689,26623+24])
                        Texp_apply
                        expression (src/stage1/parser.ml[685,26533+4]..src/stage1/parser.ml[685,26533+12])
                          Texp_ident "Stdlib!.Obj.repr"
                        [
                          <arg>
                            Nolabel
                            expression (src/stage1/parser.mly[215,26577+4]..src/stage1/parser.mly[215,26577+16])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[689,26623+17]..src/stage1/parser.ml[689,26623+23])
                                  Ttyp_var rules
                              Texp_construct "::"
                              [
                                expression (src/stage1/parser.mly[215,26577+6]..src/stage1/parser.mly[215,26577+8])
                                  Texp_ident "_2/1169"
                                expression (src/stage1/parser.mly[215,26577+12]..src/stage1/parser.mly[215,26577+14])
                                  Texp_ident "_1/1168"
                              ]
                        ]
              ]
            expression (src/stage1/parser.ml[690,26649+2]..src/stage1/parser.ml[696,26825+25])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[690,26649+7]..src/stage1/parser.ml[690,26649+24])
                    Tpat_var "__caml_parser_env/1170"
                  expression (src/stage1/parser.ml[691,26677+4]..src/stage1/parser.ml[696,26825+24])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[691,26677+8]..src/stage1/parser.ml[691,26677+10])
                          Tpat_var "_1/1171"
                        expression (src/stage1/parser.ml[691,26677+14]..src/stage1/parser.ml[691,26677+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[691,26677+53]..src/stage1/parser.ml[691,26677+59])
                              Ttyp_var rules
                          Texp_apply
                          expression (src/stage1/parser.ml[691,26677+14]..src/stage1/parser.ml[691,26677+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[691,26677+31]..src/stage1/parser.ml[691,26677+48])
                                Texp_ident "__caml_parser_env/1170"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[691,26677+49]..src/stage1/parser.ml[691,26677+50])
                                Texp_constant Const_int 1
                          ]
                    ]
                    expression (src/stage1/parser.ml[692,26741+4]..src/stage1/parser.ml[696,26825+24])
                      Texp_apply
                      expression (src/stage1/parser.ml[692,26741+4]..src/stage1/parser.ml[692,26741+12])
                        Texp_ident "Stdlib!.Obj.repr"
                      [
                        <arg>
                          Nolabel
                          expression (src/stage1/parser.mly[217,26785+4]..src/stage1/parser.mly[217,26785+10])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[696,26825+17]..src/stage1/parser.ml[696,26825+23])
                                Ttyp_var rules
                            Texp_ident "_1/1171"
                      ]
              ]
            expression (src/stage1/parser.ml[697,26851+2]..src/stage1/parser.ml[719,27789+24])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[697,26851+7]..src/stage1/parser.ml[697,26851+24])
                    Tpat_var "__caml_parser_env/1172"
                  expression (src/stage1/parser.ml[698,26879+4]..src/stage1/parser.ml[719,27789+23])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[698,26879+8]..src/stage1/parser.ml[698,26879+10])
                          Tpat_var "_1/1173"
                        expression (src/stage1/parser.ml[698,26879+14]..src/stage1/parser.ml[698,26879+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[698,26879+53]..src/stage1/parser.ml[698,26879+59])
                              Ttyp_var flags
                          Texp_apply
                          expression (src/stage1/parser.ml[698,26879+14]..src/stage1/parser.ml[698,26879+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[698,26879+31]..src/stage1/parser.ml[698,26879+48])
                                Texp_ident "__caml_parser_env/1172"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[698,26879+49]..src/stage1/parser.ml[698,26879+50])
                                Texp_constant Const_int 7
                          ]
                    ]
                    expression (src/stage1/parser.ml[699,26943+4]..src/stage1/parser.ml[719,27789+23])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[699,26943+8]..src/stage1/parser.ml[699,26943+10])
                            Tpat_var "_2/1174"
                          expression (src/stage1/parser.ml[699,26943+14]..src/stage1/parser.ml[699,26943+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[699,26943+53]..src/stage1/parser.ml[699,26943+60])
                                Ttyp_var symbol
                            Texp_apply
                            expression (src/stage1/parser.ml[699,26943+14]..src/stage1/parser.ml[699,26943+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[699,26943+31]..src/stage1/parser.ml[699,26943+48])
                                  Texp_ident "__caml_parser_env/1172"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[699,26943+49]..src/stage1/parser.ml[699,26943+50])
                                  Texp_constant Const_int 6
                            ]
                      ]
                      expression (src/stage1/parser.ml[700,27008+4]..src/stage1/parser.ml[719,27789+23])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/stage1/parser.ml[700,27008+8]..src/stage1/parser.ml[700,27008+10])
                              Tpat_var "_3/1175"
                            expression (src/stage1/parser.ml[700,27008+14]..src/stage1/parser.ml[700,27008+50])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[700,27008+53]..src/stage1/parser.ml[700,27008+64])
                                  Ttyp_var attributes
                              Texp_apply
                              expression (src/stage1/parser.ml[700,27008+14]..src/stage1/parser.ml[700,27008+30])
                                Texp_ident "Stdlib!.Parsing.peek_val"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.ml[700,27008+31]..src/stage1/parser.ml[700,27008+48])
                                    Texp_ident "__caml_parser_env/1172"
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.ml[700,27008+49]..src/stage1/parser.ml[700,27008+50])
                                    Texp_constant Const_int 5
                              ]
                        ]
                        expression (src/stage1/parser.ml[701,27077+4]..src/stage1/parser.ml[719,27789+23])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (src/stage1/parser.ml[701,27077+8]..src/stage1/parser.ml[701,27077+10])
                                Tpat_var "_4/1176"
                              expression (src/stage1/parser.ml[701,27077+14]..src/stage1/parser.ml[701,27077+50])
                                extra
                                  Texp_constraint
                                  core_type (src/stage1/parser.ml[701,27077+53]..src/stage1/parser.ml[701,27077+80])
                                    Ttyp_var optional_formal_parameters
                                Texp_apply
                                expression (src/stage1/parser.ml[701,27077+14]..src/stage1/parser.ml[701,27077+30])
                                  Texp_ident "Stdlib!.Parsing.peek_val"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/stage1/parser.ml[701,27077+31]..src/stage1/parser.ml[701,27077+48])
                                      Texp_ident "__caml_parser_env/1172"
                                  <arg>
                                    Nolabel
                                    expression (src/stage1/parser.ml[701,27077+49]..src/stage1/parser.ml[701,27077+50])
                                      Texp_constant Const_int 4
                                ]
                          ]
                          expression (src/stage1/parser.ml[702,27162+4]..src/stage1/parser.ml[719,27789+23])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/stage1/parser.ml[702,27162+8]..src/stage1/parser.ml[702,27162+10])
                                  Tpat_var "_6/1177"
                                expression (src/stage1/parser.ml[702,27162+14]..src/stage1/parser.ml[702,27162+50])
                                  extra
                                    Texp_constraint
                                    core_type (src/stage1/parser.ml[702,27162+53]..src/stage1/parser.ml[702,27162+66])
                                      Ttyp_var optional_bar
                                  Texp_apply
                                  expression (src/stage1/parser.ml[702,27162+14]..src/stage1/parser.ml[702,27162+30])
                                    Texp_ident "Stdlib!.Parsing.peek_val"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/stage1/parser.ml[702,27162+31]..src/stage1/parser.ml[702,27162+48])
                                        Texp_ident "__caml_parser_env/1172"
                                    <arg>
                                      Nolabel
                                      expression (src/stage1/parser.ml[702,27162+49]..src/stage1/parser.ml[702,27162+50])
                                        Texp_constant Const_int 2
                                  ]
                            ]
                            expression (src/stage1/parser.ml[703,27233+4]..src/stage1/parser.ml[719,27789+23])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/stage1/parser.ml[703,27233+8]..src/stage1/parser.ml[703,27233+10])
                                    Tpat_var "_7/1178"
                                  expression (src/stage1/parser.ml[703,27233+14]..src/stage1/parser.ml[703,27233+50])
                                    extra
                                      Texp_constraint
                                      core_type (src/stage1/parser.ml[703,27233+53]..src/stage1/parser.ml[703,27233+70])
                                        Ttyp_var production_group
                                    Texp_apply
                                    expression (src/stage1/parser.ml[703,27233+14]..src/stage1/parser.ml[703,27233+30])
                                      Texp_ident "Stdlib!.Parsing.peek_val"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/stage1/parser.ml[703,27233+31]..src/stage1/parser.ml[703,27233+48])
                                          Texp_ident "__caml_parser_env/1172"
                                      <arg>
                                        Nolabel
                                        expression (src/stage1/parser.ml[703,27233+49]..src/stage1/parser.ml[703,27233+50])
                                          Texp_constant Const_int 1
                                    ]
                              ]
                              expression (src/stage1/parser.ml[704,27308+4]..src/stage1/parser.ml[719,27789+23])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (src/stage1/parser.ml[704,27308+8]..src/stage1/parser.ml[704,27308+10])
                                      Tpat_var "_8/1179"
                                    expression (src/stage1/parser.ml[704,27308+14]..src/stage1/parser.ml[704,27308+50])
                                      extra
                                        Texp_constraint
                                        core_type (src/stage1/parser.ml[704,27308+53]..src/stage1/parser.ml[704,27308+71])
                                          Ttyp_var production_groups
                                      Texp_apply
                                      expression (src/stage1/parser.ml[704,27308+14]..src/stage1/parser.ml[704,27308+30])
                                        Texp_ident "Stdlib!.Parsing.peek_val"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/stage1/parser.ml[704,27308+31]..src/stage1/parser.ml[704,27308+48])
                                            Texp_ident "__caml_parser_env/1172"
                                        <arg>
                                          Nolabel
                                          expression (src/stage1/parser.ml[704,27308+49]..src/stage1/parser.ml[704,27308+50])
                                            Texp_constant Const_int 0
                                      ]
                                ]
                                expression (src/stage1/parser.ml[705,27384+4]..src/stage1/parser.ml[719,27789+23])
                                  Texp_apply
                                  expression (src/stage1/parser.ml[705,27384+4]..src/stage1/parser.ml[705,27384+12])
                                    Texp_ident "Stdlib!.Obj.repr"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/stage1/parser.mly[227,27428+4]..src/stage1/parser.mly[237,27754+5])
                                        extra
                                          Texp_constraint
                                          core_type (src/stage1/parser.ml[719,27789+17]..src/stage1/parser.ml[719,27789+22])
                                            Ttyp_var rule
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/stage1/parser.mly[228,27434+10]..src/stage1/parser.mly[228,27434+24])
                                              Tpat_tuple
                                              [
                                                pattern (src/stage1/parser.mly[228,27434+10]..src/stage1/parser.mly[228,27434+16])
                                                  Tpat_var "public/1180"
                                                pattern (src/stage1/parser.mly[228,27434+18]..src/stage1/parser.mly[228,27434+24])
                                                  Tpat_var "inline/1181"
                                              ]
                                            expression (src/stage1/parser.mly[228,27434+27]..src/stage1/parser.mly[228,27434+29])
                                              Texp_ident "_1/1173"
                                        ]
                                        expression (src/stage1/parser.mly[229,27467+6]..src/stage1/parser.mly[236,27746+7])
                                          Texp_record
                                            fields =
                                              [
                                                "pr_public_flag"
                                                  expression (src/stage1/parser.mly[229,27467+25]..src/stage1/parser.mly[229,27467+31])
                                                    Texp_ident "public/1180"
                                                "pr_inline_flag"
                                                  expression (src/stage1/parser.mly[230,27500+25]..src/stage1/parser.mly[230,27500+31])
                                                    Texp_ident "inline/1181"
                                                "pr_nt"
                                                  expression (src/stage1/parser.mly[231,27533+25]..src/stage1/parser.mly[231,27533+43])
                                                    Texp_apply
                                                    expression (src/stage1/parser.mly[231,27533+25]..src/stage1/parser.mly[231,27533+40])
                                                      Texp_ident "Dune__exe!.Positions.value"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/stage1/parser.mly[231,27533+41]..src/stage1/parser.mly[231,27533+43])
                                                          Texp_ident "_2/1174"
                                                    ]
                                                "pr_positions"
                                                  expression (src/stage1/parser.mly[232,27578+25]..src/stage1/parser.mly[232,27578+50])
                                                    Texp_construct "::"
                                                    [
                                                      expression (src/stage1/parser.mly[232,27578+27]..src/stage1/parser.mly[232,27578+48])
                                                        Texp_apply
                                                        expression (src/stage1/parser.mly[232,27578+27]..src/stage1/parser.mly[232,27578+45])
                                                          Texp_ident "Dune__exe!.Positions.position"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/stage1/parser.mly[232,27578+46]..src/stage1/parser.mly[232,27578+48])
                                                              Texp_ident "_2/1174"
                                                        ]
                                                      expression (src/stage1/parser.mly[232,27578+49]..src/stage1/parser.mly[232,27578+50]) ghost
                                                        Texp_construct "[]"
                                                        []
                                                    ]
                                                "pr_attributes"
                                                  expression (src/stage1/parser.mly[233,27630+25]..src/stage1/parser.mly[233,27630+27])
                                                    Texp_ident "_3/1175"
                                                "pr_parameters"
                                                  expression (src/stage1/parser.mly[234,27659+25]..src/stage1/parser.mly[234,27659+27])
                                                    Texp_ident "_4/1176"
                                                "pr_branches"
                                                  expression (src/stage1/parser.mly[235,27688+25]..src/stage1/parser.mly[235,27688+57])
                                                    Texp_apply
                                                    expression (src/stage1/parser.mly[235,27688+25]..src/stage1/parser.mly[235,27688+37])
                                                      Texp_ident "Stdlib!.List.flatten"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/stage1/parser.mly[235,27688+38]..src/stage1/parser.mly[235,27688+57])
                                                          Texp_construct "::"
                                                          [
                                                            expression (src/stage1/parser.mly[235,27688+39]..src/stage1/parser.mly[235,27688+41])
                                                              Texp_ident "_7/1178"
                                                            expression (src/stage1/parser.mly[235,27688+45]..src/stage1/parser.mly[235,27688+56])
                                                              Texp_apply
                                                              expression (src/stage1/parser.mly[235,27688+45]..src/stage1/parser.mly[235,27688+53])
                                                                Texp_ident "Stdlib!.List.rev"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/stage1/parser.mly[235,27688+54]..src/stage1/parser.mly[235,27688+56])
                                                                    Texp_ident "_8/1179"
                                                              ]
                                                          ]
                                                    ]
                                              ]
                                            representation =
                                              Record_regular
                                            extended_expression =
                                              None
                                  ]
              ]
            expression (src/stage1/parser.ml[720,27814+2]..src/stage1/parser.ml[725,27936+25])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[720,27814+7]..src/stage1/parser.ml[720,27814+24])
                    Tpat_var "__caml_parser_env/1182"
                  expression (src/stage1/parser.ml[721,27842+4]..src/stage1/parser.ml[725,27936+24])
                    Texp_apply
                    expression (src/stage1/parser.ml[721,27842+4]..src/stage1/parser.ml[721,27842+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[241,27886+4]..src/stage1/parser.mly[241,27886+20])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[725,27936+17]..src/stage1/parser.ml[725,27936+23])
                              Ttyp_var flags
                          Texp_tuple
                          [
                            expression (src/stage1/parser.mly[241,27886+6]..src/stage1/parser.mly[241,27886+11])
                              Texp_construct "false"
                              []
                            expression (src/stage1/parser.mly[241,27886+13]..src/stage1/parser.mly[241,27886+18])
                              Texp_construct "false"
                              []
                          ]
                    ]
              ]
            expression (src/stage1/parser.ml[726,27962+2]..src/stage1/parser.ml[731,28083+25])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[726,27962+7]..src/stage1/parser.ml[726,27962+24])
                    Tpat_var "__caml_parser_env/1183"
                  expression (src/stage1/parser.ml[727,27990+4]..src/stage1/parser.ml[731,28083+24])
                    Texp_apply
                    expression (src/stage1/parser.ml[727,27990+4]..src/stage1/parser.ml[727,27990+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[243,28034+4]..src/stage1/parser.mly[243,28034+19])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[731,28083+17]..src/stage1/parser.ml[731,28083+23])
                              Ttyp_var flags
                          Texp_tuple
                          [
                            expression (src/stage1/parser.mly[243,28034+6]..src/stage1/parser.mly[243,28034+10])
                              Texp_construct "true"
                              []
                            expression (src/stage1/parser.mly[243,28034+12]..src/stage1/parser.mly[243,28034+17])
                              Texp_construct "false"
                              []
                          ]
                    ]
              ]
            expression (src/stage1/parser.ml[732,28109+2]..src/stage1/parser.ml[737,28230+25])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[732,28109+7]..src/stage1/parser.ml[732,28109+24])
                    Tpat_var "__caml_parser_env/1184"
                  expression (src/stage1/parser.ml[733,28137+4]..src/stage1/parser.ml[737,28230+24])
                    Texp_apply
                    expression (src/stage1/parser.ml[733,28137+4]..src/stage1/parser.ml[733,28137+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[245,28181+4]..src/stage1/parser.mly[245,28181+19])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[737,28230+17]..src/stage1/parser.ml[737,28230+23])
                              Ttyp_var flags
                          Texp_tuple
                          [
                            expression (src/stage1/parser.mly[245,28181+6]..src/stage1/parser.mly[245,28181+11])
                              Texp_construct "false"
                              []
                            expression (src/stage1/parser.mly[245,28181+13]..src/stage1/parser.mly[245,28181+17])
                              Texp_construct "true"
                              []
                          ]
                    ]
              ]
            expression (src/stage1/parser.ml[738,28256+2]..src/stage1/parser.ml[743,28376+25])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[738,28256+7]..src/stage1/parser.ml[738,28256+24])
                    Tpat_var "__caml_parser_env/1185"
                  expression (src/stage1/parser.ml[739,28284+4]..src/stage1/parser.ml[743,28376+24])
                    Texp_apply
                    expression (src/stage1/parser.ml[739,28284+4]..src/stage1/parser.ml[739,28284+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[247,28328+4]..src/stage1/parser.mly[247,28328+18])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[743,28376+17]..src/stage1/parser.ml[743,28376+23])
                              Ttyp_var flags
                          Texp_tuple
                          [
                            expression (src/stage1/parser.mly[247,28328+6]..src/stage1/parser.mly[247,28328+10])
                              Texp_construct "true"
                              []
                            expression (src/stage1/parser.mly[247,28328+12]..src/stage1/parser.mly[247,28328+16])
                              Texp_construct "true"
                              []
                          ]
                    ]
              ]
            expression (src/stage1/parser.ml[744,28402+2]..src/stage1/parser.ml[749,28522+25])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[744,28402+7]..src/stage1/parser.ml[744,28402+24])
                    Tpat_var "__caml_parser_env/1186"
                  expression (src/stage1/parser.ml[745,28430+4]..src/stage1/parser.ml[749,28522+24])
                    Texp_apply
                    expression (src/stage1/parser.ml[745,28430+4]..src/stage1/parser.ml[745,28430+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[249,28474+4]..src/stage1/parser.mly[249,28474+18])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[749,28522+17]..src/stage1/parser.ml[749,28522+23])
                              Ttyp_var flags
                          Texp_tuple
                          [
                            expression (src/stage1/parser.mly[249,28474+6]..src/stage1/parser.mly[249,28474+10])
                              Texp_construct "true"
                              []
                            expression (src/stage1/parser.mly[249,28474+12]..src/stage1/parser.mly[249,28474+16])
                              Texp_construct "true"
                              []
                          ]
                    ]
              ]
            expression (src/stage1/parser.ml[750,28548+2]..src/stage1/parser.ml[755,28660+46])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[750,28548+7]..src/stage1/parser.ml[750,28548+24])
                    Tpat_var "__caml_parser_env/1187"
                  expression (src/stage1/parser.ml[751,28576+4]..src/stage1/parser.ml[755,28660+45])
                    Texp_apply
                    expression (src/stage1/parser.ml[751,28576+4]..src/stage1/parser.ml[751,28576+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[259,28620+4]..src/stage1/parser.mly[259,28620+10])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[755,28660+17]..src/stage1/parser.ml[755,28660+44])
                              Ttyp_var optional_formal_parameters
                          Texp_construct "[]"
                          []
                    ]
              ]
            expression (src/stage1/parser.ml[756,28707+2]..src/stage1/parser.ml[762,28895+46])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[756,28707+7]..src/stage1/parser.ml[756,28707+24])
                    Tpat_var "__caml_parser_env/1188"
                  expression (src/stage1/parser.ml[757,28735+4]..src/stage1/parser.ml[762,28895+45])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[757,28735+8]..src/stage1/parser.ml[757,28735+10])
                          Tpat_var "_2/1189"
                        expression (src/stage1/parser.ml[757,28735+14]..src/stage1/parser.ml[757,28735+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[757,28735+53]..src/stage1/parser.ml[757,28735+71])
                              Ttyp_var formal_parameters
                          Texp_apply
                          expression (src/stage1/parser.ml[757,28735+14]..src/stage1/parser.ml[757,28735+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[757,28735+31]..src/stage1/parser.ml[757,28735+48])
                                Texp_ident "__caml_parser_env/1188"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[757,28735+49]..src/stage1/parser.ml[757,28735+50])
                                Texp_constant Const_int 1
                          ]
                    ]
                    expression (src/stage1/parser.ml[758,28811+4]..src/stage1/parser.ml[762,28895+45])
                      Texp_apply
                      expression (src/stage1/parser.ml[758,28811+4]..src/stage1/parser.ml[758,28811+12])
                        Texp_ident "Stdlib!.Obj.repr"
                      [
                        <arg>
                          Nolabel
                          expression (src/stage1/parser.mly[261,28855+4]..src/stage1/parser.mly[261,28855+10])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[762,28895+17]..src/stage1/parser.ml[762,28895+44])
                                Ttyp_var optional_formal_parameters
                            Texp_ident "_2/1189"
                      ]
              ]
            expression (src/stage1/parser.ml[763,28942+2]..src/stage1/parser.ml[769,29139+37])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[763,28942+7]..src/stage1/parser.ml[763,28942+24])
                    Tpat_var "__caml_parser_env/1190"
                  expression (src/stage1/parser.ml[764,28970+4]..src/stage1/parser.ml[769,29139+36])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[764,28970+8]..src/stage1/parser.ml[764,28970+10])
                          Tpat_var "_1/1191"
                        expression (src/stage1/parser.ml[764,28970+14]..src/stage1/parser.ml[764,28970+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[764,28970+53]..src/stage1/parser.ml[764,28970+60])
                              Ttyp_var symbol
                          Texp_apply
                          expression (src/stage1/parser.ml[764,28970+14]..src/stage1/parser.ml[764,28970+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[764,28970+31]..src/stage1/parser.ml[764,28970+48])
                                Texp_ident "__caml_parser_env/1190"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[764,28970+49]..src/stage1/parser.ml[764,28970+50])
                                Texp_constant Const_int 0
                          ]
                    ]
                    expression (src/stage1/parser.ml[765,29035+4]..src/stage1/parser.ml[769,29139+36])
                      Texp_apply
                      expression (src/stage1/parser.ml[765,29035+4]..src/stage1/parser.ml[765,29035+12])
                        Texp_ident "Stdlib!.Obj.repr"
                      [
                        <arg>
                          Nolabel
                          expression (src/stage1/parser.mly[265,29079+4]..src/stage1/parser.mly[265,29079+30])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[769,29139+17]..src/stage1/parser.ml[769,29139+35])
                                Ttyp_var formal_parameters
                            Texp_construct "::"
                            [
                              expression (src/stage1/parser.mly[265,29079+8]..src/stage1/parser.mly[265,29079+26])
                                Texp_apply
                                expression (src/stage1/parser.mly[265,29079+8]..src/stage1/parser.mly[265,29079+23])
                                  Texp_ident "Dune__exe!.Positions.value"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/stage1/parser.mly[265,29079+24]..src/stage1/parser.mly[265,29079+26])
                                      Texp_ident "_1/1191"
                                ]
                              expression (src/stage1/parser.mly[265,29079+27]..src/stage1/parser.mly[265,29079+28]) ghost
                                Texp_construct "[]"
                                []
                            ]
                      ]
              ]
            expression (src/stage1/parser.ml[770,29177+2]..src/stage1/parser.ml[777,29452+37])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[770,29177+7]..src/stage1/parser.ml[770,29177+24])
                    Tpat_var "__caml_parser_env/1192"
                  expression (src/stage1/parser.ml[771,29205+4]..src/stage1/parser.ml[777,29452+36])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[771,29205+8]..src/stage1/parser.ml[771,29205+10])
                          Tpat_var "_1/1193"
                        expression (src/stage1/parser.ml[771,29205+14]..src/stage1/parser.ml[771,29205+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[771,29205+53]..src/stage1/parser.ml[771,29205+60])
                              Ttyp_var symbol
                          Texp_apply
                          expression (src/stage1/parser.ml[771,29205+14]..src/stage1/parser.ml[771,29205+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[771,29205+31]..src/stage1/parser.ml[771,29205+48])
                                Texp_ident "__caml_parser_env/1192"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[771,29205+49]..src/stage1/parser.ml[771,29205+50])
                                Texp_constant Const_int 2
                          ]
                    ]
                    expression (src/stage1/parser.ml[772,29270+4]..src/stage1/parser.ml[777,29452+36])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[772,29270+8]..src/stage1/parser.ml[772,29270+10])
                            Tpat_var "_3/1194"
                          expression (src/stage1/parser.ml[772,29270+14]..src/stage1/parser.ml[772,29270+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[772,29270+53]..src/stage1/parser.ml[772,29270+71])
                                Ttyp_var formal_parameters
                            Texp_apply
                            expression (src/stage1/parser.ml[772,29270+14]..src/stage1/parser.ml[772,29270+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[772,29270+31]..src/stage1/parser.ml[772,29270+48])
                                  Texp_ident "__caml_parser_env/1192"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[772,29270+49]..src/stage1/parser.ml[772,29270+50])
                                  Texp_constant Const_int 0
                            ]
                      ]
                      expression (src/stage1/parser.ml[773,29346+4]..src/stage1/parser.ml[777,29452+36])
                        Texp_apply
                        expression (src/stage1/parser.ml[773,29346+4]..src/stage1/parser.ml[773,29346+12])
                          Texp_ident "Stdlib!.Obj.repr"
                        [
                          <arg>
                            Nolabel
                            expression (src/stage1/parser.mly[267,29390+4]..src/stage1/parser.mly[267,29390+32])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[777,29452+17]..src/stage1/parser.ml[777,29452+35])
                                  Ttyp_var formal_parameters
                              Texp_construct "::"
                              [
                                expression (src/stage1/parser.mly[267,29390+6]..src/stage1/parser.mly[267,29390+24])
                                  Texp_apply
                                  expression (src/stage1/parser.mly[267,29390+6]..src/stage1/parser.mly[267,29390+21])
                                    Texp_ident "Dune__exe!.Positions.value"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/stage1/parser.mly[267,29390+22]..src/stage1/parser.mly[267,29390+24])
                                        Texp_ident "_1/1193"
                                  ]
                                expression (src/stage1/parser.mly[267,29390+28]..src/stage1/parser.mly[267,29390+30])
                                  Texp_ident "_3/1194"
                              ]
                        ]
              ]
            expression (src/stage1/parser.ml[778,29490+2]..src/stage1/parser.ml[783,29602+36])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[778,29490+7]..src/stage1/parser.ml[778,29490+24])
                    Tpat_var "__caml_parser_env/1195"
                  expression (src/stage1/parser.ml[779,29518+4]..src/stage1/parser.ml[783,29602+35])
                    Texp_apply
                    expression (src/stage1/parser.ml[779,29518+4]..src/stage1/parser.ml[779,29518+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[271,29562+4]..src/stage1/parser.mly[271,29562+10])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[783,29602+17]..src/stage1/parser.ml[783,29602+34])
                              Ttyp_var optional_actuals
                          Texp_construct "[]"
                          []
                    ]
              ]
            expression (src/stage1/parser.ml[784,29639+2]..src/stage1/parser.ml[790,29823+36])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[784,29639+7]..src/stage1/parser.ml[784,29639+24])
                    Tpat_var "__caml_parser_env/1196"
                  expression (src/stage1/parser.ml[785,29667+4]..src/stage1/parser.ml[790,29823+35])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[785,29667+8]..src/stage1/parser.ml[785,29667+10])
                          Tpat_var "_2/1197"
                        expression (src/stage1/parser.ml[785,29667+14]..src/stage1/parser.ml[785,29667+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[785,29667+53]..src/stage1/parser.ml[785,29667+67])
                              Ttyp_var actuals_comma
                          Texp_apply
                          expression (src/stage1/parser.ml[785,29667+14]..src/stage1/parser.ml[785,29667+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[785,29667+31]..src/stage1/parser.ml[785,29667+48])
                                Texp_ident "__caml_parser_env/1196"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[785,29667+49]..src/stage1/parser.ml[785,29667+50])
                                Texp_constant Const_int 1
                          ]
                    ]
                    expression (src/stage1/parser.ml[786,29739+4]..src/stage1/parser.ml[790,29823+35])
                      Texp_apply
                      expression (src/stage1/parser.ml[786,29739+4]..src/stage1/parser.ml[786,29739+12])
                        Texp_ident "Stdlib!.Obj.repr"
                      [
                        <arg>
                          Nolabel
                          expression (src/stage1/parser.mly[273,29783+4]..src/stage1/parser.mly[273,29783+10])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[790,29823+17]..src/stage1/parser.ml[790,29823+34])
                                Ttyp_var optional_actuals
                            Texp_ident "_2/1197"
                      ]
              ]
            expression (src/stage1/parser.ml[791,29860+2]..src/stage1/parser.ml[797,30041+33])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[791,29860+7]..src/stage1/parser.ml[791,29860+24])
                    Tpat_var "__caml_parser_env/1198"
                  expression (src/stage1/parser.ml[792,29888+4]..src/stage1/parser.ml[797,30041+32])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[792,29888+8]..src/stage1/parser.ml[792,29888+10])
                          Tpat_var "_1/1199"
                        expression (src/stage1/parser.ml[792,29888+14]..src/stage1/parser.ml[792,29888+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[792,29888+53]..src/stage1/parser.ml[792,29888+60])
                              Ttyp_var actual
                          Texp_apply
                          expression (src/stage1/parser.ml[792,29888+14]..src/stage1/parser.ml[792,29888+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[792,29888+31]..src/stage1/parser.ml[792,29888+48])
                                Texp_ident "__caml_parser_env/1198"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[792,29888+49]..src/stage1/parser.ml[792,29888+50])
                                Texp_constant Const_int 0
                          ]
                    ]
                    expression (src/stage1/parser.ml[793,29953+4]..src/stage1/parser.ml[797,30041+32])
                      Texp_apply
                      expression (src/stage1/parser.ml[793,29953+4]..src/stage1/parser.ml[793,29953+12])
                        Texp_ident "Stdlib!.Obj.repr"
                      [
                        <arg>
                          Nolabel
                          expression (src/stage1/parser.mly[277,29997+4]..src/stage1/parser.mly[277,29997+14])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[797,30041+17]..src/stage1/parser.ml[797,30041+31])
                                Ttyp_var actuals_comma
                            Texp_construct "::"
                            [
                              expression (src/stage1/parser.mly[277,29997+8]..src/stage1/parser.mly[277,29997+10])
                                Texp_ident "_1/1199"
                              expression (src/stage1/parser.mly[277,29997+11]..src/stage1/parser.mly[277,29997+12]) ghost
                                Texp_construct "[]"
                                []
                            ]
                      ]
              ]
            expression (src/stage1/parser.ml[798,30075+2]..src/stage1/parser.ml[805,30330+33])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[798,30075+7]..src/stage1/parser.ml[798,30075+24])
                    Tpat_var "__caml_parser_env/1200"
                  expression (src/stage1/parser.ml[799,30103+4]..src/stage1/parser.ml[805,30330+32])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[799,30103+8]..src/stage1/parser.ml[799,30103+10])
                          Tpat_var "_1/1201"
                        expression (src/stage1/parser.ml[799,30103+14]..src/stage1/parser.ml[799,30103+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[799,30103+53]..src/stage1/parser.ml[799,30103+60])
                              Ttyp_var actual
                          Texp_apply
                          expression (src/stage1/parser.ml[799,30103+14]..src/stage1/parser.ml[799,30103+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[799,30103+31]..src/stage1/parser.ml[799,30103+48])
                                Texp_ident "__caml_parser_env/1200"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[799,30103+49]..src/stage1/parser.ml[799,30103+50])
                                Texp_constant Const_int 2
                          ]
                    ]
                    expression (src/stage1/parser.ml[800,30168+4]..src/stage1/parser.ml[805,30330+32])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[800,30168+8]..src/stage1/parser.ml[800,30168+10])
                            Tpat_var "_3/1202"
                          expression (src/stage1/parser.ml[800,30168+14]..src/stage1/parser.ml[800,30168+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[800,30168+53]..src/stage1/parser.ml[800,30168+67])
                                Ttyp_var actuals_comma
                            Texp_apply
                            expression (src/stage1/parser.ml[800,30168+14]..src/stage1/parser.ml[800,30168+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[800,30168+31]..src/stage1/parser.ml[800,30168+48])
                                  Texp_ident "__caml_parser_env/1200"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[800,30168+49]..src/stage1/parser.ml[800,30168+50])
                                  Texp_constant Const_int 0
                            ]
                      ]
                      expression (src/stage1/parser.ml[801,30240+4]..src/stage1/parser.ml[805,30330+32])
                        Texp_apply
                        expression (src/stage1/parser.ml[801,30240+4]..src/stage1/parser.ml[801,30240+12])
                          Texp_ident "Stdlib!.Obj.repr"
                        [
                          <arg>
                            Nolabel
                            expression (src/stage1/parser.mly[279,30284+4]..src/stage1/parser.mly[279,30284+16])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[805,30330+17]..src/stage1/parser.ml[805,30330+31])
                                  Ttyp_var actuals_comma
                              Texp_construct "::"
                              [
                                expression (src/stage1/parser.mly[279,30284+6]..src/stage1/parser.mly[279,30284+8])
                                  Texp_ident "_1/1201"
                                expression (src/stage1/parser.mly[279,30284+12]..src/stage1/parser.mly[279,30284+14])
                                  Texp_ident "_3/1202"
                              ]
                        ]
              ]
            expression (src/stage1/parser.ml[806,30364+2]..src/stage1/parser.ml[813,30634+26])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[806,30364+7]..src/stage1/parser.ml[806,30364+24])
                    Tpat_var "__caml_parser_env/1203"
                  expression (src/stage1/parser.ml[807,30392+4]..src/stage1/parser.ml[813,30634+25])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[807,30392+8]..src/stage1/parser.ml[807,30392+10])
                          Tpat_var "_1/1204"
                        expression (src/stage1/parser.ml[807,30392+14]..src/stage1/parser.ml[807,30392+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[807,30392+53]..src/stage1/parser.ml[807,30392+60])
                              Ttyp_var symbol
                          Texp_apply
                          expression (src/stage1/parser.ml[807,30392+14]..src/stage1/parser.ml[807,30392+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[807,30392+31]..src/stage1/parser.ml[807,30392+48])
                                Texp_ident "__caml_parser_env/1203"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[807,30392+49]..src/stage1/parser.ml[807,30392+50])
                                Texp_constant Const_int 1
                          ]
                    ]
                    expression (src/stage1/parser.ml[808,30457+4]..src/stage1/parser.ml[813,30634+25])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[808,30457+8]..src/stage1/parser.ml[808,30457+10])
                            Tpat_var "_2/1205"
                          expression (src/stage1/parser.ml[808,30457+14]..src/stage1/parser.ml[808,30457+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[808,30457+53]..src/stage1/parser.ml[808,30457+70])
                                Ttyp_var optional_actuals
                            Texp_apply
                            expression (src/stage1/parser.ml[808,30457+14]..src/stage1/parser.ml[808,30457+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[808,30457+31]..src/stage1/parser.ml[808,30457+48])
                                  Texp_ident "__caml_parser_env/1203"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[808,30457+49]..src/stage1/parser.ml[808,30457+50])
                                  Texp_constant Const_int 0
                            ]
                      ]
                      expression (src/stage1/parser.ml[809,30532+4]..src/stage1/parser.ml[813,30634+25])
                        Texp_apply
                        expression (src/stage1/parser.ml[809,30532+4]..src/stage1/parser.ml[809,30532+12])
                          Texp_ident "Stdlib!.Obj.repr"
                        [
                          <arg>
                            Nolabel
                            expression (src/stage1/parser.mly[283,30576+4]..src/stage1/parser.mly[283,30576+28])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[813,30634+17]..src/stage1/parser.ml[813,30634+24])
                                  Ttyp_var actual
                              Texp_apply
                              expression (src/stage1/parser.mly[283,30576+6]..src/stage1/parser.mly[283,30576+20])
                                Texp_ident "Dune__exe!.Parameters.app"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.mly[283,30576+21]..src/stage1/parser.mly[283,30576+23])
                                    Texp_ident "_1/1204"
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.mly[283,30576+24]..src/stage1/parser.mly[283,30576+26])
                                    Texp_ident "_2/1205"
                              ]
                        ]
              ]
            expression (src/stage1/parser.ml[814,30661+2]..src/stage1/parser.ml[821,30928+26])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[814,30661+7]..src/stage1/parser.ml[814,30661+24])
                    Tpat_var "__caml_parser_env/1206"
                  expression (src/stage1/parser.ml[815,30689+4]..src/stage1/parser.ml[821,30928+25])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[815,30689+8]..src/stage1/parser.ml[815,30689+10])
                          Tpat_var "_1/1207"
                        expression (src/stage1/parser.ml[815,30689+14]..src/stage1/parser.ml[815,30689+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[815,30689+53]..src/stage1/parser.ml[815,30689+60])
                              Ttyp_var actual
                          Texp_apply
                          expression (src/stage1/parser.ml[815,30689+14]..src/stage1/parser.ml[815,30689+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[815,30689+31]..src/stage1/parser.ml[815,30689+48])
                                Texp_ident "__caml_parser_env/1206"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[815,30689+49]..src/stage1/parser.ml[815,30689+50])
                                Texp_constant Const_int 1
                          ]
                    ]
                    expression (src/stage1/parser.ml[816,30754+4]..src/stage1/parser.ml[821,30928+25])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[816,30754+8]..src/stage1/parser.ml[816,30754+10])
                            Tpat_var "_2/1208"
                          expression (src/stage1/parser.ml[816,30754+14]..src/stage1/parser.ml[816,30754+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[816,30754+53]..src/stage1/parser.ml[816,30754+62])
                                Ttyp_var modifier
                            Texp_apply
                            expression (src/stage1/parser.ml[816,30754+14]..src/stage1/parser.ml[816,30754+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[816,30754+31]..src/stage1/parser.ml[816,30754+48])
                                  Texp_ident "__caml_parser_env/1206"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[816,30754+49]..src/stage1/parser.ml[816,30754+50])
                                  Texp_constant Const_int 0
                            ]
                      ]
                      expression (src/stage1/parser.ml[817,30821+4]..src/stage1/parser.ml[821,30928+25])
                        Texp_apply
                        expression (src/stage1/parser.ml[817,30821+4]..src/stage1/parser.ml[817,30821+12])
                          Texp_ident "Stdlib!.Obj.repr"
                        [
                          <arg>
                            Nolabel
                            expression (src/stage1/parser.mly[285,30865+4]..src/stage1/parser.mly[285,30865+33])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[821,30928+17]..src/stage1/parser.ml[821,30928+24])
                                  Ttyp_var actual
                              Texp_construct "ParameterApp"
                              [
                                expression (src/stage1/parser.mly[285,30865+20]..src/stage1/parser.mly[285,30865+22])
                                  Texp_ident "_2/1208"
                                expression (src/stage1/parser.mly[285,30865+24]..src/stage1/parser.mly[285,30865+30])
                                  Texp_construct "::"
                                  [
                                    expression (src/stage1/parser.mly[285,30865+26]..src/stage1/parser.mly[285,30865+28])
                                      Texp_ident "_1/1207"
                                    expression (src/stage1/parser.mly[285,30865+29]..src/stage1/parser.mly[285,30865+30]) ghost
                                      Texp_construct "[]"
                                      []
                                  ]
                              ]
                        ]
              ]
            expression (src/stage1/parser.ml[822,30955+2]..src/stage1/parser.ml[827,31067+27])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[822,30955+7]..src/stage1/parser.ml[822,30955+24])
                    Tpat_var "__caml_parser_env/1209"
                  expression (src/stage1/parser.ml[823,30983+4]..src/stage1/parser.ml[827,31067+26])
                    Texp_apply
                    expression (src/stage1/parser.ml[823,30983+4]..src/stage1/parser.ml[823,30983+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[289,31027+4]..src/stage1/parser.mly[289,31027+10])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[827,31067+17]..src/stage1/parser.ml[827,31067+25])
                              Ttyp_var actuals
                          Texp_construct "[]"
                          []
                    ]
              ]
            expression (src/stage1/parser.ml[828,31095+2]..src/stage1/parser.ml[836,31415+27])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[828,31095+7]..src/stage1/parser.ml[828,31095+24])
                    Tpat_var "__caml_parser_env/1210"
                  expression (src/stage1/parser.ml[829,31123+4]..src/stage1/parser.ml[836,31415+26])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[829,31123+8]..src/stage1/parser.ml[829,31123+10])
                          Tpat_var "_1/1211"
                        expression (src/stage1/parser.ml[829,31123+14]..src/stage1/parser.ml[829,31123+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[829,31123+53]..src/stage1/parser.ml[829,31123+61])
                              Ttyp_var actuals
                          Texp_apply
                          expression (src/stage1/parser.ml[829,31123+14]..src/stage1/parser.ml[829,31123+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[829,31123+31]..src/stage1/parser.ml[829,31123+48])
                                Texp_ident "__caml_parser_env/1210"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[829,31123+49]..src/stage1/parser.ml[829,31123+50])
                                Texp_constant Const_int 2
                          ]
                    ]
                    expression (src/stage1/parser.ml[830,31189+4]..src/stage1/parser.ml[836,31415+26])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[830,31189+8]..src/stage1/parser.ml[830,31189+10])
                            Tpat_var "_2/1212"
                          expression (src/stage1/parser.ml[830,31189+14]..src/stage1/parser.ml[830,31189+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[830,31189+53]..src/stage1/parser.ml[830,31189+68])
                                Ttyp_var optional_comma
                            Texp_apply
                            expression (src/stage1/parser.ml[830,31189+14]..src/stage1/parser.ml[830,31189+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[830,31189+31]..src/stage1/parser.ml[830,31189+48])
                                  Texp_ident "__caml_parser_env/1210"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[830,31189+49]..src/stage1/parser.ml[830,31189+50])
                                  Texp_constant Const_int 1
                            ]
                      ]
                      expression (src/stage1/parser.ml[831,31262+4]..src/stage1/parser.ml[836,31415+26])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/stage1/parser.ml[831,31262+8]..src/stage1/parser.ml[831,31262+10])
                              Tpat_var "_3/1213"
                            expression (src/stage1/parser.ml[831,31262+14]..src/stage1/parser.ml[831,31262+50])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[831,31262+53]..src/stage1/parser.ml[831,31262+60])
                                  Ttyp_var actual
                              Texp_apply
                              expression (src/stage1/parser.ml[831,31262+14]..src/stage1/parser.ml[831,31262+30])
                                Texp_ident "Stdlib!.Parsing.peek_val"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.ml[831,31262+31]..src/stage1/parser.ml[831,31262+48])
                                    Texp_ident "__caml_parser_env/1210"
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.ml[831,31262+49]..src/stage1/parser.ml[831,31262+50])
                                    Texp_constant Const_int 0
                              ]
                        ]
                        expression (src/stage1/parser.ml[832,31327+4]..src/stage1/parser.ml[836,31415+26])
                          Texp_apply
                          expression (src/stage1/parser.ml[832,31327+4]..src/stage1/parser.ml[832,31327+12])
                            Texp_ident "Stdlib!.Obj.repr"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.mly[291,31371+4]..src/stage1/parser.mly[291,31371+14])
                                extra
                                  Texp_constraint
                                  core_type (src/stage1/parser.ml[836,31415+17]..src/stage1/parser.ml[836,31415+25])
                                    Ttyp_var actuals
                                Texp_construct "::"
                                [
                                  expression (src/stage1/parser.mly[291,31371+6]..src/stage1/parser.mly[291,31371+8])
                                    Texp_ident "_3/1213"
                                  expression (src/stage1/parser.mly[291,31371+10]..src/stage1/parser.mly[291,31371+12])
                                    Texp_ident "_1/1211"
                                ]
                          ]
              ]
            expression (src/stage1/parser.ml[837,31443+2]..src/stage1/parser.ml[842,31555+32])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[837,31443+7]..src/stage1/parser.ml[837,31443+24])
                    Tpat_var "__caml_parser_env/1214"
                  expression (src/stage1/parser.ml[838,31471+4]..src/stage1/parser.ml[842,31555+31])
                    Texp_apply
                    expression (src/stage1/parser.ml[838,31471+4]..src/stage1/parser.ml[838,31471+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[295,31515+4]..src/stage1/parser.mly[295,31515+10])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[842,31555+17]..src/stage1/parser.ml[842,31555+30])
                              Ttyp_var optional_bar
                          Texp_construct "()"
                          []
                    ]
              ]
            expression (src/stage1/parser.ml[843,31588+2]..src/stage1/parser.ml[848,31700+32])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[843,31588+7]..src/stage1/parser.ml[843,31588+24])
                    Tpat_var "__caml_parser_env/1215"
                  expression (src/stage1/parser.ml[844,31616+4]..src/stage1/parser.ml[848,31700+31])
                    Texp_apply
                    expression (src/stage1/parser.ml[844,31616+4]..src/stage1/parser.ml[844,31616+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[297,31660+4]..src/stage1/parser.mly[297,31660+10])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[848,31700+17]..src/stage1/parser.ml[848,31700+30])
                              Ttyp_var optional_bar
                          Texp_construct "()"
                          []
                    ]
              ]
            expression (src/stage1/parser.ml[849,31733+2]..src/stage1/parser.ml[854,31863+28])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[849,31733+7]..src/stage1/parser.ml[849,31733+24])
                    Tpat_var "__caml_parser_env/1216"
                  expression (src/stage1/parser.ml[850,31761+4]..src/stage1/parser.ml[854,31863+27])
                    Texp_apply
                    expression (src/stage1/parser.ml[850,31761+4]..src/stage1/parser.ml[850,31761+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[305,31805+4]..src/stage1/parser.mly[305,31805+28])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[854,31863+17]..src/stage1/parser.ml[854,31863+26])
                              Ttyp_var modifier
                          Texp_apply
                          expression (src/stage1/parser.mly[305,31805+6]..src/stage1/parser.mly[305,31805+17])
                            Texp_ident "Dune__exe!.Positions.unknown_pos"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.mly[305,31805+18]..src/stage1/parser.mly[305,31805+26])
                                Texp_constant Const_string("option",(src/stage1/parser.mly[305,31805+19]..src/stage1/parser.mly[305,31805+25]),None)
                          ]
                    ]
              ]
            expression (src/stage1/parser.ml[855,31892+2]..src/stage1/parser.ml[860,32029+28])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[855,31892+7]..src/stage1/parser.ml[855,31892+24])
                    Tpat_var "__caml_parser_env/1217"
                  expression (src/stage1/parser.ml[856,31920+4]..src/stage1/parser.ml[860,32029+27])
                    Texp_apply
                    expression (src/stage1/parser.ml[856,31920+4]..src/stage1/parser.ml[856,31920+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[307,31964+4]..src/stage1/parser.mly[307,31964+35])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[860,32029+17]..src/stage1/parser.ml[860,32029+26])
                              Ttyp_var modifier
                          Texp_apply
                          expression (src/stage1/parser.mly[307,31964+6]..src/stage1/parser.mly[307,31964+17])
                            Texp_ident "Dune__exe!.Positions.unknown_pos"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.mly[307,31964+18]..src/stage1/parser.mly[307,31964+33])
                                Texp_constant Const_string("nonempty_list",(src/stage1/parser.mly[307,31964+19]..src/stage1/parser.mly[307,31964+32]),None)
                          ]
                    ]
              ]
            expression (src/stage1/parser.ml[861,32058+2]..src/stage1/parser.ml[866,32186+28])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[861,32058+7]..src/stage1/parser.ml[861,32058+24])
                    Tpat_var "__caml_parser_env/1218"
                  expression (src/stage1/parser.ml[862,32086+4]..src/stage1/parser.ml[866,32186+27])
                    Texp_apply
                    expression (src/stage1/parser.ml[862,32086+4]..src/stage1/parser.ml[862,32086+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[309,32130+4]..src/stage1/parser.mly[309,32130+26])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[866,32186+17]..src/stage1/parser.ml[866,32186+26])
                              Ttyp_var modifier
                          Texp_apply
                          expression (src/stage1/parser.mly[309,32130+6]..src/stage1/parser.mly[309,32130+17])
                            Texp_ident "Dune__exe!.Positions.unknown_pos"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.mly[309,32130+18]..src/stage1/parser.mly[309,32130+24])
                                Texp_constant Const_string("list",(src/stage1/parser.mly[309,32130+19]..src/stage1/parser.mly[309,32130+23]),None)
                          ]
                    ]
              ]
            expression (src/stage1/parser.ml[867,32215+2]..src/stage1/parser.ml[872,32327+37])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[867,32215+7]..src/stage1/parser.ml[867,32215+24])
                    Tpat_var "__caml_parser_env/1219"
                  expression (src/stage1/parser.ml[868,32243+4]..src/stage1/parser.ml[872,32327+36])
                    Texp_apply
                    expression (src/stage1/parser.ml[868,32243+4]..src/stage1/parser.ml[868,32243+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[317,32287+4]..src/stage1/parser.mly[317,32287+10])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[872,32327+17]..src/stage1/parser.ml[872,32327+35])
                              Ttyp_var production_groups
                          Texp_construct "[]"
                          []
                    ]
              ]
            expression (src/stage1/parser.ml[873,32365+2]..src/stage1/parser.ml[880,32634+37])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[873,32365+7]..src/stage1/parser.ml[873,32365+24])
                    Tpat_var "__caml_parser_env/1220"
                  expression (src/stage1/parser.ml[874,32393+4]..src/stage1/parser.ml[880,32634+36])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[874,32393+8]..src/stage1/parser.ml[874,32393+10])
                          Tpat_var "_1/1221"
                        expression (src/stage1/parser.ml[874,32393+14]..src/stage1/parser.ml[874,32393+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[874,32393+53]..src/stage1/parser.ml[874,32393+71])
                              Ttyp_var production_groups
                          Texp_apply
                          expression (src/stage1/parser.ml[874,32393+14]..src/stage1/parser.ml[874,32393+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[874,32393+31]..src/stage1/parser.ml[874,32393+48])
                                Texp_ident "__caml_parser_env/1220"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[874,32393+49]..src/stage1/parser.ml[874,32393+50])
                                Texp_constant Const_int 2
                          ]
                    ]
                    expression (src/stage1/parser.ml[875,32469+4]..src/stage1/parser.ml[880,32634+36])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[875,32469+8]..src/stage1/parser.ml[875,32469+10])
                            Tpat_var "_3/1222"
                          expression (src/stage1/parser.ml[875,32469+14]..src/stage1/parser.ml[875,32469+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[875,32469+53]..src/stage1/parser.ml[875,32469+70])
                                Ttyp_var production_group
                            Texp_apply
                            expression (src/stage1/parser.ml[875,32469+14]..src/stage1/parser.ml[875,32469+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[875,32469+31]..src/stage1/parser.ml[875,32469+48])
                                  Texp_ident "__caml_parser_env/1220"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[875,32469+49]..src/stage1/parser.ml[875,32469+50])
                                  Texp_constant Const_int 0
                            ]
                      ]
                      expression (src/stage1/parser.ml[876,32544+4]..src/stage1/parser.ml[880,32634+36])
                        Texp_apply
                        expression (src/stage1/parser.ml[876,32544+4]..src/stage1/parser.ml[876,32544+12])
                          Texp_ident "Stdlib!.Obj.repr"
                        [
                          <arg>
                            Nolabel
                            expression (src/stage1/parser.mly[319,32588+4]..src/stage1/parser.mly[319,32588+16])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[880,32634+17]..src/stage1/parser.ml[880,32634+35])
                                  Ttyp_var production_groups
                              Texp_construct "::"
                              [
                                expression (src/stage1/parser.mly[319,32588+6]..src/stage1/parser.mly[319,32588+8])
                                  Texp_ident "_3/1222"
                                expression (src/stage1/parser.mly[319,32588+12]..src/stage1/parser.mly[319,32588+14])
                                  Texp_ident "_1/1221"
                              ]
                        ]
              ]
            expression (src/stage1/parser.ml[881,32672+2]..src/stage1/parser.ml[910,33887+36])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[881,32672+7]..src/stage1/parser.ml[881,32672+24])
                    Tpat_var "__caml_parser_env/1223"
                  expression (src/stage1/parser.ml[882,32700+4]..src/stage1/parser.ml[910,33887+35])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[882,32700+8]..src/stage1/parser.ml[882,32700+10])
                          Tpat_var "_1/1224"
                        expression (src/stage1/parser.ml[882,32700+14]..src/stage1/parser.ml[882,32700+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[882,32700+53]..src/stage1/parser.ml[882,32700+65])
                              Ttyp_var productions
                          Texp_apply
                          expression (src/stage1/parser.ml[882,32700+14]..src/stage1/parser.ml[882,32700+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[882,32700+31]..src/stage1/parser.ml[882,32700+48])
                                Texp_ident "__caml_parser_env/1223"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[882,32700+49]..src/stage1/parser.ml[882,32700+50])
                                Texp_constant Const_int 2
                          ]
                    ]
                    expression (src/stage1/parser.ml[883,32770+4]..src/stage1/parser.ml[910,33887+35])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[883,32770+8]..src/stage1/parser.ml[883,32770+10])
                            Tpat_var "_2/1225"
                          expression (src/stage1/parser.ml[883,32770+14]..src/stage1/parser.ml[883,32770+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[883,32770+53]..src/stage1/parser.ml[883,32770+70])
                                Ttyp_constr "Dune__exe!.Syntax.raw_action"
                                []
                            Texp_apply
                            expression (src/stage1/parser.ml[883,32770+14]..src/stage1/parser.ml[883,32770+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[883,32770+31]..src/stage1/parser.ml[883,32770+48])
                                  Texp_ident "__caml_parser_env/1223"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[883,32770+49]..src/stage1/parser.ml[883,32770+50])
                                  Texp_constant Const_int 1
                            ]
                      ]
                      expression (src/stage1/parser.ml[884,32845+4]..src/stage1/parser.ml[910,33887+35])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/stage1/parser.ml[884,32845+8]..src/stage1/parser.ml[884,32845+10])
                              Tpat_var "_3/1226"
                            expression (src/stage1/parser.ml[884,32845+14]..src/stage1/parser.ml[884,32845+50])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[884,32845+53]..src/stage1/parser.ml[884,32845+73])
                                  Ttyp_var optional_precedence
                              Texp_apply
                              expression (src/stage1/parser.ml[884,32845+14]..src/stage1/parser.ml[884,32845+30])
                                Texp_ident "Stdlib!.Parsing.peek_val"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.ml[884,32845+31]..src/stage1/parser.ml[884,32845+48])
                                    Texp_ident "__caml_parser_env/1223"
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.ml[884,32845+49]..src/stage1/parser.ml[884,32845+50])
                                    Texp_constant Const_int 0
                              ]
                        ]
                        expression (src/stage1/parser.ml[885,32923+4]..src/stage1/parser.ml[910,33887+35])
                          Texp_apply
                          expression (src/stage1/parser.ml[885,32923+4]..src/stage1/parser.ml[885,32923+12])
                            Texp_ident "Stdlib!.Obj.repr"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.mly[323,32967+4]..src/stage1/parser.mly[344,33852+5])
                                extra
                                  Texp_constraint
                                  core_type (src/stage1/parser.ml[910,33887+17]..src/stage1/parser.ml[910,33887+34])
                                    Ttyp_var production_group
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (src/stage1/parser.mly[324,32973+10]..src/stage1/parser.mly[324,32973+37])
                                      Tpat_tuple
                                      [
                                        pattern (src/stage1/parser.mly[324,32973+10]..src/stage1/parser.mly[324,32973+21])
                                          Tpat_var "productions/1227"
                                        pattern (src/stage1/parser.mly[324,32973+23]..src/stage1/parser.mly[324,32973+29])
                                          Tpat_var "action/1228"
                                        pattern (src/stage1/parser.mly[324,32973+31]..src/stage1/parser.mly[324,32973+37])
                                          Tpat_var "oprec2/1229"
                                      ]
                                    expression (src/stage1/parser.mly[324,32973+40]..src/stage1/parser.mly[324,32973+50])
                                      Texp_tuple
                                      [
                                        expression (src/stage1/parser.mly[324,32973+40]..src/stage1/parser.mly[324,32973+42])
                                          Texp_ident "_1/1224"
                                        expression (src/stage1/parser.mly[324,32973+44]..src/stage1/parser.mly[324,32973+46])
                                          Texp_ident "_2/1225"
                                        expression (src/stage1/parser.mly[324,32973+48]..src/stage1/parser.mly[324,32973+50])
                                          Texp_ident "_3/1226"
                                      ]
                                ]
                                expression (src/stage1/parser.mly[327,33148+6]..src/stage1/parser.mly[343,33834+17])
                                  Texp_sequence
                                  expression (src/stage1/parser.mly[327,33148+6]..src/stage1/parser.mly[327,33148+50])
                                    Texp_apply
                                    expression (src/stage1/parser.mly[327,33148+6]..src/stage1/parser.mly[327,33148+38])
                                      Texp_ident "Dune__exe!.ParserAux.check_production_group"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/stage1/parser.mly[327,33148+39]..src/stage1/parser.mly[327,33148+50])
                                          Texp_ident "productions/1227"
                                    ]
                                  expression (src/stage1/parser.mly[329,33218+6]..src/stage1/parser.mly[343,33834+17])
                                    Texp_apply
                                    expression (src/stage1/parser.mly[329,33218+6]..src/stage1/parser.mly[329,33218+14])
                                      Texp_ident "Stdlib!.List.map"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/stage1/parser.mly[329,33218+15]..src/stage1/parser.mly[342,33823+10])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/stage1/parser.mly[329,33218+20]..src/stage1/parser.mly[329,33218+51])
                                                Tpat_tuple
                                                [
                                                  pattern (src/stage1/parser.mly[329,33218+21]..src/stage1/parser.mly[329,33218+30])
                                                    Tpat_var "producers/1230"
                                                  pattern (src/stage1/parser.mly[329,33218+32]..src/stage1/parser.mly[329,33218+38])
                                                    Tpat_var "oprec1/1231"
                                                  pattern (src/stage1/parser.mly[329,33218+40]..src/stage1/parser.mly[329,33218+45])
                                                    Tpat_var "level/1232"
                                                  pattern (src/stage1/parser.mly[329,33218+47]..src/stage1/parser.mly[329,33218+50])
                                                    Tpat_var "pos/1233"
                                                ]
                                              expression (src/stage1/parser.mly[331,33311+8]..src/stage1/parser.mly[342,33823+9])
                                                Texp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (src/stage1/parser.mly[331,33311+12]..src/stage1/parser.mly[331,33311+24])
                                                      Tpat_var "pr_producers/1234"
                                                    expression (src/stage1/parser.mly[331,33311+27]..src/stage1/parser.mly[331,33311+66])
                                                      Texp_apply
                                                      expression (src/stage1/parser.mly[331,33311+27]..src/stage1/parser.mly[331,33311+56])
                                                        Texp_ident "Dune__exe!.ParserAux.normalize_producers"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/stage1/parser.mly[331,33311+57]..src/stage1/parser.mly[331,33311+66])
                                                            Texp_ident "producers/1230"
                                                      ]
                                                ]
                                                expression (src/stage1/parser.mly[334,33484+8]..src/stage1/parser.mly[342,33823+9])
                                                  Texp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (src/stage1/parser.mly[334,33484+12]..src/stage1/parser.mly[334,33484+17])
                                                        Tpat_var "names/1235"
                                                      expression (src/stage1/parser.mly[334,33484+20]..src/stage1/parser.mly[334,33484+54])
                                                        Texp_apply
                                                        expression (src/stage1/parser.mly[334,33484+20]..src/stage1/parser.mly[334,33484+44])
                                                          Texp_ident "Dune__exe!.ParserAux.producer_names"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/stage1/parser.mly[334,33484+45]..src/stage1/parser.mly[334,33484+54])
                                                              Texp_ident "producers/1230"
                                                        ]
                                                  ]
                                                  expression (src/stage1/parser.mly[335,33542+8]..src/stage1/parser.mly[342,33823+9])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (src/stage1/parser.mly[335,33542+12]..src/stage1/parser.mly[335,33542+21])
                                                          Tpat_var "pr_action/1236"
                                                        expression (src/stage1/parser.mly[335,33542+24]..src/stage1/parser.mly[335,33542+53])
                                                          Texp_apply
                                                          expression (src/stage1/parser.mly[335,33542+24]..src/stage1/parser.mly[335,33542+30])
                                                            Texp_ident "action/1228"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/stage1/parser.mly[335,33542+31]..src/stage1/parser.mly[335,33542+47])
                                                                Texp_ident "Dune__exe!.Settings.dollars"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/stage1/parser.mly[335,33542+48]..src/stage1/parser.mly[335,33542+53])
                                                                Texp_ident "names/1235"
                                                          ]
                                                    ]
                                                    expression (src/stage1/parser.mly[336,33599+8]..src/stage1/parser.mly[342,33823+9])
                                                      Texp_record
                                                        fields =
                                                          [
                                                            "pr_branch_position"
                                                              expression (src/stage1/parser.mly[341,33779+40]..src/stage1/parser.mly[341,33779+43])
                                                                Texp_ident "pos/1233"
                                                            "pr_producers"
                                                              expression (src/stage1/parser.mly[337,33609+10]..src/stage1/parser.mly[337,33609+22])
                                                                Texp_ident "pr_producers/1234"
                                                            "pr_action"
                                                              expression (src/stage1/parser.mly[338,33633+10]..src/stage1/parser.mly[338,33633+19])
                                                                Texp_ident "pr_action/1236"
                                                            "pr_branch_prec_annotation"
                                                              expression (src/stage1/parser.mly[339,33654+40]..src/stage1/parser.mly[339,33654+76])
                                                                Texp_apply
                                                                expression (src/stage1/parser.mly[339,33654+40]..src/stage1/parser.mly[339,33654+58])
                                                                  Texp_ident "Dune__exe!.ParserAux.override"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/stage1/parser.mly[339,33654+59]..src/stage1/parser.mly[339,33654+62])
                                                                      Texp_ident "pos/1233"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/stage1/parser.mly[339,33654+63]..src/stage1/parser.mly[339,33654+69])
                                                                      Texp_ident "oprec1/1231"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/stage1/parser.mly[339,33654+70]..src/stage1/parser.mly[339,33654+76])
                                                                      Texp_ident "oprec2/1229"
                                                                ]
                                                            "pr_branch_production_level"
                                                              expression (src/stage1/parser.mly[340,33732+40]..src/stage1/parser.mly[340,33732+45])
                                                                Texp_ident "level/1232"
                                                          ]
                                                        representation =
                                                          Record_regular
                                                        extended_expression =
                                                          None
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/stage1/parser.mly[343,33834+6]..src/stage1/parser.mly[343,33834+17])
                                          Texp_ident "productions/1227"
                                    ]
                          ]
              ]
            expression (src/stage1/parser.ml[911,33924+2]..src/stage1/parser.ml[916,34038+39])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[911,33924+7]..src/stage1/parser.ml[911,33924+24])
                    Tpat_var "__caml_parser_env/1238"
                  expression (src/stage1/parser.ml[912,33952+4]..src/stage1/parser.ml[916,34038+38])
                    Texp_apply
                    expression (src/stage1/parser.ml[912,33952+4]..src/stage1/parser.ml[912,33952+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[348,33996+4]..src/stage1/parser.mly[348,33996+12])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[916,34038+17]..src/stage1/parser.ml[916,34038+37])
                              Ttyp_var optional_precedence
                          Texp_construct "None"
                          []
                    ]
              ]
            expression (src/stage1/parser.ml[917,34078+2]..src/stage1/parser.ml[923,34260+39])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[917,34078+7]..src/stage1/parser.ml[917,34078+24])
                    Tpat_var "__caml_parser_env/1239"
                  expression (src/stage1/parser.ml[918,34106+4]..src/stage1/parser.ml[923,34260+38])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[918,34106+8]..src/stage1/parser.ml[918,34106+10])
                          Tpat_var "_2/1240"
                        expression (src/stage1/parser.ml[918,34106+14]..src/stage1/parser.ml[918,34106+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[918,34106+53]..src/stage1/parser.ml[918,34106+60])
                              Ttyp_var symbol
                          Texp_apply
                          expression (src/stage1/parser.ml[918,34106+14]..src/stage1/parser.ml[918,34106+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[918,34106+31]..src/stage1/parser.ml[918,34106+48])
                                Texp_ident "__caml_parser_env/1239"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[918,34106+49]..src/stage1/parser.ml[918,34106+50])
                                Texp_constant Const_int 0
                          ]
                    ]
                    expression (src/stage1/parser.ml[919,34171+4]..src/stage1/parser.ml[923,34260+38])
                      Texp_apply
                      expression (src/stage1/parser.ml[919,34171+4]..src/stage1/parser.ml[919,34171+12])
                        Texp_ident "Stdlib!.Obj.repr"
                      [
                        <arg>
                          Nolabel
                          expression (src/stage1/parser.mly[350,34215+4]..src/stage1/parser.mly[350,34215+15])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[923,34260+17]..src/stage1/parser.ml[923,34260+37])
                                Ttyp_var optional_precedence
                            Texp_construct "Some"
                            [
                              expression (src/stage1/parser.mly[350,34215+11]..src/stage1/parser.mly[350,34215+13])
                                Texp_ident "_2/1240"
                            ]
                      ]
              ]
            expression (src/stage1/parser.ml[924,34300+2]..src/stage1/parser.ml[930,34500+31])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[924,34300+7]..src/stage1/parser.ml[924,34300+24])
                    Tpat_var "__caml_parser_env/1241"
                  expression (src/stage1/parser.ml[925,34328+4]..src/stage1/parser.ml[930,34500+30])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[925,34328+8]..src/stage1/parser.ml[925,34328+10])
                          Tpat_var "_1/1242"
                        expression (src/stage1/parser.ml[925,34328+14]..src/stage1/parser.ml[925,34328+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[925,34328+53]..src/stage1/parser.ml[925,34328+79])
                              Ttyp_constr "Dune__exe!.ParserAux.early_production"
                              []
                          Texp_apply
                          expression (src/stage1/parser.ml[925,34328+14]..src/stage1/parser.ml[925,34328+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[925,34328+31]..src/stage1/parser.ml[925,34328+48])
                                Texp_ident "__caml_parser_env/1241"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[925,34328+49]..src/stage1/parser.ml[925,34328+50])
                                Texp_constant Const_int 0
                          ]
                    ]
                    expression (src/stage1/parser.ml[926,34412+4]..src/stage1/parser.ml[930,34500+30])
                      Texp_apply
                      expression (src/stage1/parser.ml[926,34412+4]..src/stage1/parser.ml[926,34412+12])
                        Texp_ident "Stdlib!.Obj.repr"
                      [
                        <arg>
                          Nolabel
                          expression (src/stage1/parser.mly[359,34456+4]..src/stage1/parser.mly[359,34456+14])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[930,34500+17]..src/stage1/parser.ml[930,34500+29])
                                Ttyp_var productions
                            Texp_construct "::"
                            [
                              expression (src/stage1/parser.mly[359,34456+8]..src/stage1/parser.mly[359,34456+10])
                                Texp_ident "_1/1242"
                              expression (src/stage1/parser.mly[359,34456+11]..src/stage1/parser.mly[359,34456+12]) ghost
                                Texp_construct "[]"
                                []
                            ]
                      ]
              ]
            expression (src/stage1/parser.ml[931,34532+2]..src/stage1/parser.ml[938,34808+31])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[931,34532+7]..src/stage1/parser.ml[931,34532+24])
                    Tpat_var "__caml_parser_env/1243"
                  expression (src/stage1/parser.ml[932,34560+4]..src/stage1/parser.ml[938,34808+30])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[932,34560+8]..src/stage1/parser.ml[932,34560+10])
                          Tpat_var "_1/1244"
                        expression (src/stage1/parser.ml[932,34560+14]..src/stage1/parser.ml[932,34560+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[932,34560+53]..src/stage1/parser.ml[932,34560+79])
                              Ttyp_constr "Dune__exe!.ParserAux.early_production"
                              []
                          Texp_apply
                          expression (src/stage1/parser.ml[932,34560+14]..src/stage1/parser.ml[932,34560+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[932,34560+31]..src/stage1/parser.ml[932,34560+48])
                                Texp_ident "__caml_parser_env/1243"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[932,34560+49]..src/stage1/parser.ml[932,34560+50])
                                Texp_constant Const_int 1
                          ]
                    ]
                    expression (src/stage1/parser.ml[933,34644+4]..src/stage1/parser.ml[938,34808+30])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[933,34644+8]..src/stage1/parser.ml[933,34644+10])
                            Tpat_var "_2/1245"
                          expression (src/stage1/parser.ml[933,34644+14]..src/stage1/parser.ml[933,34644+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[933,34644+53]..src/stage1/parser.ml[933,34644+69])
                                Ttyp_var bar_productions
                            Texp_apply
                            expression (src/stage1/parser.ml[933,34644+14]..src/stage1/parser.ml[933,34644+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[933,34644+31]..src/stage1/parser.ml[933,34644+48])
                                  Texp_ident "__caml_parser_env/1243"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[933,34644+49]..src/stage1/parser.ml[933,34644+50])
                                  Texp_constant Const_int 0
                            ]
                      ]
                      expression (src/stage1/parser.ml[934,34718+4]..src/stage1/parser.ml[938,34808+30])
                        Texp_apply
                        expression (src/stage1/parser.ml[934,34718+4]..src/stage1/parser.ml[934,34718+12])
                          Texp_ident "Stdlib!.Obj.repr"
                        [
                          <arg>
                            Nolabel
                            expression (src/stage1/parser.mly[361,34762+4]..src/stage1/parser.mly[361,34762+16])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[938,34808+17]..src/stage1/parser.ml[938,34808+29])
                                  Ttyp_var productions
                              Texp_construct "::"
                              [
                                expression (src/stage1/parser.mly[361,34762+6]..src/stage1/parser.mly[361,34762+8])
                                  Texp_ident "_1/1244"
                                expression (src/stage1/parser.mly[361,34762+12]..src/stage1/parser.mly[361,34762+14])
                                  Texp_ident "_2/1245"
                              ]
                        ]
              ]
            expression (src/stage1/parser.ml[939,34840+2]..src/stage1/parser.ml[945,35040+35])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[939,34840+7]..src/stage1/parser.ml[939,34840+24])
                    Tpat_var "__caml_parser_env/1246"
                  expression (src/stage1/parser.ml[940,34868+4]..src/stage1/parser.ml[945,35040+34])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[940,34868+8]..src/stage1/parser.ml[940,34868+10])
                          Tpat_var "_2/1247"
                        expression (src/stage1/parser.ml[940,34868+14]..src/stage1/parser.ml[940,34868+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[940,34868+53]..src/stage1/parser.ml[940,34868+79])
                              Ttyp_constr "Dune__exe!.ParserAux.early_production"
                              []
                          Texp_apply
                          expression (src/stage1/parser.ml[940,34868+14]..src/stage1/parser.ml[940,34868+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[940,34868+31]..src/stage1/parser.ml[940,34868+48])
                                Texp_ident "__caml_parser_env/1246"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[940,34868+49]..src/stage1/parser.ml[940,34868+50])
                                Texp_constant Const_int 0
                          ]
                    ]
                    expression (src/stage1/parser.ml[941,34952+4]..src/stage1/parser.ml[945,35040+34])
                      Texp_apply
                      expression (src/stage1/parser.ml[941,34952+4]..src/stage1/parser.ml[941,34952+12])
                        Texp_ident "Stdlib!.Obj.repr"
                      [
                        <arg>
                          Nolabel
                          expression (src/stage1/parser.mly[365,34996+4]..src/stage1/parser.mly[365,34996+14])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[945,35040+17]..src/stage1/parser.ml[945,35040+33])
                                Ttyp_var bar_productions
                            Texp_construct "::"
                            [
                              expression (src/stage1/parser.mly[365,34996+8]..src/stage1/parser.mly[365,34996+10])
                                Texp_ident "_2/1247"
                              expression (src/stage1/parser.mly[365,34996+11]..src/stage1/parser.mly[365,34996+12]) ghost
                                Texp_construct "[]"
                                []
                            ]
                      ]
              ]
            expression (src/stage1/parser.ml[946,35076+2]..src/stage1/parser.ml[953,35352+35])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[946,35076+7]..src/stage1/parser.ml[946,35076+24])
                    Tpat_var "__caml_parser_env/1248"
                  expression (src/stage1/parser.ml[947,35104+4]..src/stage1/parser.ml[953,35352+34])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[947,35104+8]..src/stage1/parser.ml[947,35104+10])
                          Tpat_var "_2/1249"
                        expression (src/stage1/parser.ml[947,35104+14]..src/stage1/parser.ml[947,35104+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[947,35104+53]..src/stage1/parser.ml[947,35104+79])
                              Ttyp_constr "Dune__exe!.ParserAux.early_production"
                              []
                          Texp_apply
                          expression (src/stage1/parser.ml[947,35104+14]..src/stage1/parser.ml[947,35104+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[947,35104+31]..src/stage1/parser.ml[947,35104+48])
                                Texp_ident "__caml_parser_env/1248"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[947,35104+49]..src/stage1/parser.ml[947,35104+50])
                                Texp_constant Const_int 1
                          ]
                    ]
                    expression (src/stage1/parser.ml[948,35188+4]..src/stage1/parser.ml[953,35352+34])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[948,35188+8]..src/stage1/parser.ml[948,35188+10])
                            Tpat_var "_3/1250"
                          expression (src/stage1/parser.ml[948,35188+14]..src/stage1/parser.ml[948,35188+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[948,35188+53]..src/stage1/parser.ml[948,35188+69])
                                Ttyp_var bar_productions
                            Texp_apply
                            expression (src/stage1/parser.ml[948,35188+14]..src/stage1/parser.ml[948,35188+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[948,35188+31]..src/stage1/parser.ml[948,35188+48])
                                  Texp_ident "__caml_parser_env/1248"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[948,35188+49]..src/stage1/parser.ml[948,35188+50])
                                  Texp_constant Const_int 0
                            ]
                      ]
                      expression (src/stage1/parser.ml[949,35262+4]..src/stage1/parser.ml[953,35352+34])
                        Texp_apply
                        expression (src/stage1/parser.ml[949,35262+4]..src/stage1/parser.ml[949,35262+12])
                          Texp_ident "Stdlib!.Obj.repr"
                        [
                          <arg>
                            Nolabel
                            expression (src/stage1/parser.mly[367,35306+4]..src/stage1/parser.mly[367,35306+16])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[953,35352+17]..src/stage1/parser.ml[953,35352+33])
                                  Ttyp_var bar_productions
                              Texp_construct "::"
                              [
                                expression (src/stage1/parser.mly[367,35306+6]..src/stage1/parser.mly[367,35306+8])
                                  Texp_ident "_2/1249"
                                expression (src/stage1/parser.mly[367,35306+12]..src/stage1/parser.mly[367,35306+14])
                                  Texp_ident "_3/1250"
                              ]
                        ]
              ]
            expression (src/stage1/parser.ml[954,35388+2]..src/stage1/parser.ml[965,35772+45])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[954,35388+7]..src/stage1/parser.ml[954,35388+24])
                    Tpat_var "__caml_parser_env/1251"
                  expression (src/stage1/parser.ml[955,35416+4]..src/stage1/parser.ml[965,35772+44])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[955,35416+8]..src/stage1/parser.ml[955,35416+10])
                          Tpat_var "_1/1252"
                        expression (src/stage1/parser.ml[955,35416+14]..src/stage1/parser.ml[955,35416+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[955,35416+53]..src/stage1/parser.ml[955,35416+63])
                              Ttyp_var producers
                          Texp_apply
                          expression (src/stage1/parser.ml[955,35416+14]..src/stage1/parser.ml[955,35416+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[955,35416+31]..src/stage1/parser.ml[955,35416+48])
                                Texp_ident "__caml_parser_env/1251"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[955,35416+49]..src/stage1/parser.ml[955,35416+50])
                                Texp_constant Const_int 1
                          ]
                    ]
                    expression (src/stage1/parser.ml[956,35484+4]..src/stage1/parser.ml[965,35772+44])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[956,35484+8]..src/stage1/parser.ml[956,35484+10])
                            Tpat_var "_2/1253"
                          expression (src/stage1/parser.ml[956,35484+14]..src/stage1/parser.ml[956,35484+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[956,35484+53]..src/stage1/parser.ml[956,35484+73])
                                Ttyp_var optional_precedence
                            Texp_apply
                            expression (src/stage1/parser.ml[956,35484+14]..src/stage1/parser.ml[956,35484+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[956,35484+31]..src/stage1/parser.ml[956,35484+48])
                                  Texp_ident "__caml_parser_env/1251"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[956,35484+49]..src/stage1/parser.ml[956,35484+50])
                                  Texp_constant Const_int 0
                            ]
                      ]
                      expression (src/stage1/parser.ml[957,35562+4]..src/stage1/parser.ml[965,35772+44])
                        Texp_apply
                        expression (src/stage1/parser.ml[957,35562+4]..src/stage1/parser.ml[957,35562+12])
                          Texp_ident "Stdlib!.Obj.repr"
                        [
                          <arg>
                            Nolabel
                            expression (src/stage1/parser.mly[371,35606+4]..src/stage1/parser.mly[375,35737+5])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[965,35772+17]..src/stage1/parser.ml[965,35772+43])
                                  Ttyp_constr "Dune__exe!.ParserAux.early_production"
                                  []
                              Texp_tuple
                              [
                                expression (src/stage1/parser.mly[371,35606+6]..src/stage1/parser.mly[371,35606+17])
                                  Texp_apply
                                  expression (src/stage1/parser.mly[371,35606+6]..src/stage1/parser.mly[371,35606+14])
                                    Texp_ident "Stdlib!.List.rev"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/stage1/parser.mly[371,35606+15]..src/stage1/parser.mly[371,35606+17])
                                        Texp_ident "_1/1252"
                                  ]
                                expression (src/stage1/parser.mly[372,35625+6]..src/stage1/parser.mly[372,35625+8])
                                  Texp_ident "_2/1253"
                                expression (src/stage1/parser.mly[373,35635+6]..src/stage1/parser.mly[373,35635+38])
                                  Texp_apply
                                  expression (src/stage1/parser.mly[373,35635+6]..src/stage1/parser.mly[373,35635+36])
                                    Texp_ident "Dune__exe!.ParserAux.new_production_level"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/stage1/parser.mly[373,35635+36]..src/stage1/parser.mly[373,35635+38])
                                        Texp_construct "()"
                                        []
                                  ]
                                expression (src/stage1/parser.mly[374,35675+6]..src/stage1/parser.mly[374,35675+61])
                                  Texp_apply
                                  expression (src/stage1/parser.mly[374,35675+6]..src/stage1/parser.mly[374,35675+22])
                                    Texp_ident "Dune__exe!.Positions.import"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/stage1/parser.mly[374,35675+23]..src/stage1/parser.mly[374,35675+61])
                                        Texp_tuple
                                        [
                                          expression (src/stage1/parser.mly[374,35675+24]..src/stage1/parser.mly[374,35675+42])
                                            Texp_apply
                                            expression (src/stage1/parser.mly[374,35675+24]..src/stage1/parser.mly[374,35675+40])
                                              Texp_ident "Stdlib!.Parsing.symbol_start_pos"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/stage1/parser.mly[374,35675+40]..src/stage1/parser.mly[374,35675+42])
                                                  Texp_construct "()"
                                                  []
                                            ]
                                          expression (src/stage1/parser.mly[374,35675+44]..src/stage1/parser.mly[374,35675+60])
                                            Texp_apply
                                            expression (src/stage1/parser.mly[374,35675+44]..src/stage1/parser.mly[374,35675+58])
                                              Texp_ident "Stdlib!.Parsing.symbol_end_pos"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/stage1/parser.mly[374,35675+58]..src/stage1/parser.mly[374,35675+60])
                                                  Texp_construct "()"
                                                  []
                                            ]
                                        ]
                                  ]
                              ]
                        ]
              ]
            expression (src/stage1/parser.ml[966,35818+2]..src/stage1/parser.ml[971,35930+29])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[966,35818+7]..src/stage1/parser.ml[966,35818+24])
                    Tpat_var "__caml_parser_env/1254"
                  expression (src/stage1/parser.ml[967,35846+4]..src/stage1/parser.ml[971,35930+28])
                    Texp_apply
                    expression (src/stage1/parser.ml[967,35846+4]..src/stage1/parser.ml[967,35846+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[379,35890+4]..src/stage1/parser.mly[379,35890+10])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[971,35930+17]..src/stage1/parser.ml[971,35930+27])
                              Ttyp_var producers
                          Texp_construct "[]"
                          []
                    ]
              ]
            expression (src/stage1/parser.ml[972,35960+2]..src/stage1/parser.ml[979,36228+29])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[972,35960+7]..src/stage1/parser.ml[972,35960+24])
                    Tpat_var "__caml_parser_env/1255"
                  expression (src/stage1/parser.ml[973,35988+4]..src/stage1/parser.ml[979,36228+28])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[973,35988+8]..src/stage1/parser.ml[973,35988+10])
                          Tpat_var "_1/1256"
                        expression (src/stage1/parser.ml[973,35988+14]..src/stage1/parser.ml[973,35988+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[973,35988+53]..src/stage1/parser.ml[973,35988+63])
                              Ttyp_var producers
                          Texp_apply
                          expression (src/stage1/parser.ml[973,35988+14]..src/stage1/parser.ml[973,35988+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[973,35988+31]..src/stage1/parser.ml[973,35988+48])
                                Texp_ident "__caml_parser_env/1255"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[973,35988+49]..src/stage1/parser.ml[973,35988+50])
                                Texp_constant Const_int 1
                          ]
                    ]
                    expression (src/stage1/parser.ml[974,36056+4]..src/stage1/parser.ml[979,36228+28])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[974,36056+8]..src/stage1/parser.ml[974,36056+10])
                            Tpat_var "_2/1257"
                          expression (src/stage1/parser.ml[974,36056+14]..src/stage1/parser.ml[974,36056+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[974,36056+53]..src/stage1/parser.ml[974,36056+77])
                                Ttyp_constr "Dune__exe!.ParserAux.early_producer"
                                []
                            Texp_apply
                            expression (src/stage1/parser.ml[974,36056+14]..src/stage1/parser.ml[974,36056+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[974,36056+31]..src/stage1/parser.ml[974,36056+48])
                                  Texp_ident "__caml_parser_env/1255"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[974,36056+49]..src/stage1/parser.ml[974,36056+50])
                                  Texp_constant Const_int 0
                            ]
                      ]
                      expression (src/stage1/parser.ml[975,36138+4]..src/stage1/parser.ml[979,36228+28])
                        Texp_apply
                        expression (src/stage1/parser.ml[975,36138+4]..src/stage1/parser.ml[975,36138+12])
                          Texp_ident "Stdlib!.Obj.repr"
                        [
                          <arg>
                            Nolabel
                            expression (src/stage1/parser.mly[381,36182+4]..src/stage1/parser.mly[381,36182+16])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[979,36228+17]..src/stage1/parser.ml[979,36228+27])
                                  Ttyp_var producers
                              Texp_construct "::"
                              [
                                expression (src/stage1/parser.mly[381,36182+6]..src/stage1/parser.mly[381,36182+8])
                                  Texp_ident "_2/1257"
                                expression (src/stage1/parser.mly[381,36182+12]..src/stage1/parser.mly[381,36182+14])
                                  Texp_ident "_1/1256"
                              ]
                        ]
              ]
            expression (src/stage1/parser.ml[980,36258+2]..src/stage1/parser.ml[988,36647+43])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[980,36258+7]..src/stage1/parser.ml[980,36258+24])
                    Tpat_var "__caml_parser_env/1258"
                  expression (src/stage1/parser.ml[981,36286+4]..src/stage1/parser.ml[988,36647+42])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[981,36286+8]..src/stage1/parser.ml[981,36286+10])
                          Tpat_var "_1/1259"
                        expression (src/stage1/parser.ml[981,36286+14]..src/stage1/parser.ml[981,36286+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[981,36286+53]..src/stage1/parser.ml[981,36286+60])
                              Ttyp_var actual
                          Texp_apply
                          expression (src/stage1/parser.ml[981,36286+14]..src/stage1/parser.ml[981,36286+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[981,36286+31]..src/stage1/parser.ml[981,36286+48])
                                Texp_ident "__caml_parser_env/1258"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[981,36286+49]..src/stage1/parser.ml[981,36286+50])
                                Texp_constant Const_int 2
                          ]
                    ]
                    expression (src/stage1/parser.ml[982,36351+4]..src/stage1/parser.ml[988,36647+42])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[982,36351+8]..src/stage1/parser.ml[982,36351+10])
                            Tpat_var "_2/1260"
                          expression (src/stage1/parser.ml[982,36351+14]..src/stage1/parser.ml[982,36351+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[982,36351+53]..src/stage1/parser.ml[982,36351+64])
                                Ttyp_var attributes
                            Texp_apply
                            expression (src/stage1/parser.ml[982,36351+14]..src/stage1/parser.ml[982,36351+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[982,36351+31]..src/stage1/parser.ml[982,36351+48])
                                  Texp_ident "__caml_parser_env/1258"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[982,36351+49]..src/stage1/parser.ml[982,36351+50])
                                  Texp_constant Const_int 1
                            ]
                      ]
                      expression (src/stage1/parser.ml[983,36420+4]..src/stage1/parser.ml[988,36647+42])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/stage1/parser.ml[983,36420+8]..src/stage1/parser.ml[983,36420+10])
                              Tpat_var "_3/1261"
                            expression (src/stage1/parser.ml[983,36420+14]..src/stage1/parser.ml[983,36420+50])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[983,36420+53]..src/stage1/parser.ml[983,36420+68])
                                  Ttyp_var optional_semis
                              Texp_apply
                              expression (src/stage1/parser.ml[983,36420+14]..src/stage1/parser.ml[983,36420+30])
                                Texp_ident "Stdlib!.Parsing.peek_val"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.ml[983,36420+31]..src/stage1/parser.ml[983,36420+48])
                                    Texp_ident "__caml_parser_env/1258"
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.ml[983,36420+49]..src/stage1/parser.ml[983,36420+50])
                                    Texp_constant Const_int 0
                              ]
                        ]
                        expression (src/stage1/parser.ml[984,36493+4]..src/stage1/parser.ml[988,36647+42])
                          Texp_apply
                          expression (src/stage1/parser.ml[984,36493+4]..src/stage1/parser.ml[984,36493+12])
                            Texp_ident "Stdlib!.Obj.repr"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.mly[389,36537+4]..src/stage1/parser.mly[389,36537+80])
                                extra
                                  Texp_constraint
                                  core_type (src/stage1/parser.ml[988,36647+17]..src/stage1/parser.ml[988,36647+41])
                                    Ttyp_constr "Dune__exe!.ParserAux.early_producer"
                                    []
                                Texp_tuple
                                [
                                  expression (src/stage1/parser.mly[389,36537+6]..src/stage1/parser.mly[389,36537+61])
                                    Texp_apply
                                    expression (src/stage1/parser.mly[389,36537+6]..src/stage1/parser.mly[389,36537+22])
                                      Texp_ident "Dune__exe!.Positions.import"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/stage1/parser.mly[389,36537+23]..src/stage1/parser.mly[389,36537+61])
                                          Texp_tuple
                                          [
                                            expression (src/stage1/parser.mly[389,36537+24]..src/stage1/parser.mly[389,36537+42])
                                              Texp_apply
                                              expression (src/stage1/parser.mly[389,36537+24]..src/stage1/parser.mly[389,36537+40])
                                                Texp_ident "Stdlib!.Parsing.symbol_start_pos"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/stage1/parser.mly[389,36537+40]..src/stage1/parser.mly[389,36537+42])
                                                    Texp_construct "()"
                                                    []
                                              ]
                                            expression (src/stage1/parser.mly[389,36537+44]..src/stage1/parser.mly[389,36537+60])
                                              Texp_apply
                                              expression (src/stage1/parser.mly[389,36537+44]..src/stage1/parser.mly[389,36537+58])
                                                Texp_ident "Stdlib!.Parsing.symbol_end_pos"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/stage1/parser.mly[389,36537+58]..src/stage1/parser.mly[389,36537+60])
                                                    Texp_construct "()"
                                                    []
                                              ]
                                          ]
                                    ]
                                  expression (src/stage1/parser.mly[389,36537+66]..src/stage1/parser.mly[389,36537+70])
                                    Texp_construct "None"
                                    []
                                  expression (src/stage1/parser.mly[389,36537+72]..src/stage1/parser.mly[389,36537+74])
                                    Texp_ident "_1/1259"
                                  expression (src/stage1/parser.mly[389,36537+76]..src/stage1/parser.mly[389,36537+78])
                                    Texp_ident "_2/1260"
                                ]
                          ]
              ]
            expression (src/stage1/parser.ml[989,36691+2]..src/stage1/parser.ml[998,37162+43])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[989,36691+7]..src/stage1/parser.ml[989,36691+24])
                    Tpat_var "__caml_parser_env/1262"
                  expression (src/stage1/parser.ml[990,36719+4]..src/stage1/parser.ml[998,37162+42])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[990,36719+8]..src/stage1/parser.ml[990,36719+10])
                          Tpat_var "_1/1263"
                        expression (src/stage1/parser.ml[990,36719+14]..src/stage1/parser.ml[990,36719+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[990,36719+53]..src/stage1/parser.ml[990,36719+77])
                              Ttyp_constr "Dune__exe!.Positions.located"
                              [
                                core_type (src/stage1/parser.ml[990,36719+53]..src/stage1/parser.ml[990,36719+59])
                                  Ttyp_constr "string/15!"
                                  []
                              ]
                          Texp_apply
                          expression (src/stage1/parser.ml[990,36719+14]..src/stage1/parser.ml[990,36719+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[990,36719+31]..src/stage1/parser.ml[990,36719+48])
                                Texp_ident "__caml_parser_env/1262"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[990,36719+49]..src/stage1/parser.ml[990,36719+50])
                                Texp_constant Const_int 4
                          ]
                    ]
                    expression (src/stage1/parser.ml[991,36801+4]..src/stage1/parser.ml[998,37162+42])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/stage1/parser.ml[991,36801+8]..src/stage1/parser.ml[991,36801+10])
                            Tpat_var "_3/1264"
                          expression (src/stage1/parser.ml[991,36801+14]..src/stage1/parser.ml[991,36801+50])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[991,36801+53]..src/stage1/parser.ml[991,36801+60])
                                Ttyp_var actual
                            Texp_apply
                            expression (src/stage1/parser.ml[991,36801+14]..src/stage1/parser.ml[991,36801+30])
                              Texp_ident "Stdlib!.Parsing.peek_val"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[991,36801+31]..src/stage1/parser.ml[991,36801+48])
                                  Texp_ident "__caml_parser_env/1262"
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.ml[991,36801+49]..src/stage1/parser.ml[991,36801+50])
                                  Texp_constant Const_int 2
                            ]
                      ]
                      expression (src/stage1/parser.ml[992,36866+4]..src/stage1/parser.ml[998,37162+42])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/stage1/parser.ml[992,36866+8]..src/stage1/parser.ml[992,36866+10])
                              Tpat_var "_4/1265"
                            expression (src/stage1/parser.ml[992,36866+14]..src/stage1/parser.ml[992,36866+50])
                              extra
                                Texp_constraint
                                core_type (src/stage1/parser.ml[992,36866+53]..src/stage1/parser.ml[992,36866+64])
                                  Ttyp_var attributes
                              Texp_apply
                              expression (src/stage1/parser.ml[992,36866+14]..src/stage1/parser.ml[992,36866+30])
                                Texp_ident "Stdlib!.Parsing.peek_val"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.ml[992,36866+31]..src/stage1/parser.ml[992,36866+48])
                                    Texp_ident "__caml_parser_env/1262"
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.ml[992,36866+49]..src/stage1/parser.ml[992,36866+50])
                                    Texp_constant Const_int 1
                              ]
                        ]
                        expression (src/stage1/parser.ml[993,36935+4]..src/stage1/parser.ml[998,37162+42])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (src/stage1/parser.ml[993,36935+8]..src/stage1/parser.ml[993,36935+10])
                                Tpat_var "_5/1266"
                              expression (src/stage1/parser.ml[993,36935+14]..src/stage1/parser.ml[993,36935+50])
                                extra
                                  Texp_constraint
                                  core_type (src/stage1/parser.ml[993,36935+53]..src/stage1/parser.ml[993,36935+68])
                                    Ttyp_var optional_semis
                                Texp_apply
                                expression (src/stage1/parser.ml[993,36935+14]..src/stage1/parser.ml[993,36935+30])
                                  Texp_ident "Stdlib!.Parsing.peek_val"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/stage1/parser.ml[993,36935+31]..src/stage1/parser.ml[993,36935+48])
                                      Texp_ident "__caml_parser_env/1262"
                                  <arg>
                                    Nolabel
                                    expression (src/stage1/parser.ml[993,36935+49]..src/stage1/parser.ml[993,36935+50])
                                      Texp_constant Const_int 0
                                ]
                          ]
                          expression (src/stage1/parser.ml[994,37008+4]..src/stage1/parser.ml[998,37162+42])
                            Texp_apply
                            expression (src/stage1/parser.ml[994,37008+4]..src/stage1/parser.ml[994,37008+12])
                              Texp_ident "Stdlib!.Obj.repr"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/parser.mly[391,37052+4]..src/stage1/parser.mly[391,37052+80])
                                  extra
                                    Texp_constraint
                                    core_type (src/stage1/parser.ml[998,37162+17]..src/stage1/parser.ml[998,37162+41])
                                      Ttyp_constr "Dune__exe!.ParserAux.early_producer"
                                      []
                                  Texp_tuple
                                  [
                                    expression (src/stage1/parser.mly[391,37052+6]..src/stage1/parser.mly[391,37052+61])
                                      Texp_apply
                                      expression (src/stage1/parser.mly[391,37052+6]..src/stage1/parser.mly[391,37052+22])
                                        Texp_ident "Dune__exe!.Positions.import"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/stage1/parser.mly[391,37052+23]..src/stage1/parser.mly[391,37052+61])
                                            Texp_tuple
                                            [
                                              expression (src/stage1/parser.mly[391,37052+24]..src/stage1/parser.mly[391,37052+42])
                                                Texp_apply
                                                expression (src/stage1/parser.mly[391,37052+24]..src/stage1/parser.mly[391,37052+40])
                                                  Texp_ident "Stdlib!.Parsing.symbol_start_pos"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/stage1/parser.mly[391,37052+40]..src/stage1/parser.mly[391,37052+42])
                                                      Texp_construct "()"
                                                      []
                                                ]
                                              expression (src/stage1/parser.mly[391,37052+44]..src/stage1/parser.mly[391,37052+60])
                                                Texp_apply
                                                expression (src/stage1/parser.mly[391,37052+44]..src/stage1/parser.mly[391,37052+58])
                                                  Texp_ident "Stdlib!.Parsing.symbol_end_pos"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/stage1/parser.mly[391,37052+58]..src/stage1/parser.mly[391,37052+60])
                                                      Texp_construct "()"
                                                      []
                                                ]
                                            ]
                                      ]
                                    expression (src/stage1/parser.mly[391,37052+63]..src/stage1/parser.mly[391,37052+70])
                                      Texp_construct "Some"
                                      [
                                        expression (src/stage1/parser.mly[391,37052+68]..src/stage1/parser.mly[391,37052+70])
                                          Texp_ident "_1/1263"
                                      ]
                                    expression (src/stage1/parser.mly[391,37052+72]..src/stage1/parser.mly[391,37052+74])
                                      Texp_ident "_3/1264"
                                    expression (src/stage1/parser.mly[391,37052+76]..src/stage1/parser.mly[391,37052+78])
                                      Texp_ident "_4/1265"
                                  ]
                            ]
              ]
            expression (src/stage1/parser.ml[999,37206+2]..src/stage1/parser.ml[1004,37337+34])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[999,37206+7]..src/stage1/parser.ml[999,37206+24])
                    Tpat_var "__caml_parser_env/1267"
                  expression (src/stage1/parser.ml[1000,37234+4]..src/stage1/parser.ml[1004,37337+33])
                    Texp_apply
                    expression (src/stage1/parser.ml[1000,37234+4]..src/stage1/parser.ml[1000,37234+12])
                      Texp_ident "Stdlib!.Obj.repr"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.mly[398,37278+22]..src/stage1/parser.mly[398,37278+28])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[1004,37337+17]..src/stage1/parser.ml[1004,37337+32])
                              Ttyp_var optional_semis
                          Texp_construct "()"
                          []
                    ]
              ]
            expression (src/stage1/parser.ml[1005,37372+2]..src/stage1/parser.ml[1011,37576+34])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[1005,37372+7]..src/stage1/parser.ml[1005,37372+24])
                    Tpat_var "__caml_parser_env/1268"
                  expression (src/stage1/parser.ml[1006,37400+4]..src/stage1/parser.ml[1011,37576+33])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (src/stage1/parser.ml[1006,37400+8]..src/stage1/parser.ml[1006,37400+10])
                          Tpat_var "_1/1269"
                        expression (src/stage1/parser.ml[1006,37400+14]..src/stage1/parser.ml[1006,37400+50])
                          extra
                            Texp_constraint
                            core_type (src/stage1/parser.ml[1006,37400+53]..src/stage1/parser.ml[1006,37400+68])
                              Ttyp_var optional_semis
                          Texp_apply
                          expression (src/stage1/parser.ml[1006,37400+14]..src/stage1/parser.ml[1006,37400+30])
                            Texp_ident "Stdlib!.Parsing.peek_val"
                          [
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[1006,37400+31]..src/stage1/parser.ml[1006,37400+48])
                                Texp_ident "__caml_parser_env/1268"
                            <arg>
                              Nolabel
                              expression (src/stage1/parser.ml[1006,37400+49]..src/stage1/parser.ml[1006,37400+50])
                                Texp_constant Const_int 1
                          ]
                    ]
                    expression (src/stage1/parser.ml[1007,37473+4]..src/stage1/parser.ml[1011,37576+33])
                      Texp_apply
                      expression (src/stage1/parser.ml[1007,37473+4]..src/stage1/parser.ml[1007,37473+12])
                        Texp_ident "Stdlib!.Obj.repr"
                      [
                        <arg>
                          Nolabel
                          expression (src/stage1/parser.mly[399,37517+22]..src/stage1/parser.mly[399,37517+28])
                            extra
                              Texp_constraint
                              core_type (src/stage1/parser.ml[1011,37576+17]..src/stage1/parser.ml[1011,37576+32])
                                Ttyp_var optional_semis
                            Texp_construct "()"
                            []
                      ]
              ]
            expression (src/stage1/parser.ml[1013,37631+2]..src/stage1/parser.ml[1013,37631+90])
              Texp_function
              Nolabel
              [
                <case>
                  pattern (src/stage1/parser.ml[1013,37631+7]..src/stage1/parser.ml[1013,37631+24])
                    Tpat_var "__caml_parser_env/1270"
                  expression (src/stage1/parser.ml[1013,37631+28]..src/stage1/parser.ml[1013,37631+89])
                    Texp_apply
                    expression (src/stage1/parser.ml[1013,37631+28]..src/stage1/parser.ml[1013,37631+33])
                      Texp_ident "Stdlib!.raise"
                    [
                      <arg>
                        Nolabel
                        expression (src/stage1/parser.ml[1013,37631+34]..src/stage1/parser.ml[1013,37631+89])
                          Texp_construct "Parsing.YYexit"
                          [
                            expression (src/stage1/parser.ml[1013,37631+50]..src/stage1/parser.ml[1013,37631+88])
                              Texp_apply
                              expression (src/stage1/parser.ml[1013,37631+51]..src/stage1/parser.ml[1013,37631+67])
                                Texp_ident "Stdlib!.Parsing.peek_val"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.ml[1013,37631+68]..src/stage1/parser.ml[1013,37631+85])
                                    Texp_ident "__caml_parser_env/1270"
                                <arg>
                                  Nolabel
                                  expression (src/stage1/parser.ml[1013,37631+86]..src/stage1/parser.ml[1013,37631+87])
                                    Texp_constant Const_int 0
                              ]
                          ]
                    ]
              ]
          ]
    ]
  structure_item (src/stage1/parser.ml[1015,37725+0]..src/stage1/parser.ml[1031,38206+39])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[1015,37725+4]..src/stage1/parser.ml[1015,37725+12])
          Tpat_var "yytables/1271"
        expression (src/stage1/parser.ml[1016,37740+2]..src/stage1/parser.ml[1031,38206+39])
          Texp_record
            fields =
              [
                "Parsing.actions"
                  expression (src/stage1/parser.ml[1016,37740+20]..src/stage1/parser.ml[1016,37740+25])
                    Texp_ident "yyact/744"
                "Parsing.transl_const"
                  expression (src/stage1/parser.ml[1017,37767+25]..src/stage1/parser.ml[1017,37767+39])
                    Texp_ident "yytransl_const/730"
                "Parsing.transl_block"
                  expression (src/stage1/parser.ml[1018,37808+25]..src/stage1/parser.ml[1018,37808+39])
                    Texp_ident "yytransl_block/731"
                "Parsing.lhs"
                  expression (src/stage1/parser.ml[1019,37849+16]..src/stage1/parser.ml[1019,37849+21])
                    Texp_ident "yylhs/732"
                "Parsing.len"
                  expression (src/stage1/parser.ml[1020,37872+16]..src/stage1/parser.ml[1020,37872+21])
                    Texp_ident "yylen/733"
                "Parsing.defred"
                  expression (src/stage1/parser.ml[1021,37895+19]..src/stage1/parser.ml[1021,37895+27])
                    Texp_ident "yydefred/734"
                "Parsing.dgoto"
                  expression (src/stage1/parser.ml[1022,37924+18]..src/stage1/parser.ml[1022,37924+25])
                    Texp_ident "yydgoto/735"
                "Parsing.sindex"
                  expression (src/stage1/parser.ml[1023,37951+19]..src/stage1/parser.ml[1023,37951+27])
                    Texp_ident "yysindex/736"
                "Parsing.rindex"
                  expression (src/stage1/parser.ml[1024,37980+19]..src/stage1/parser.ml[1024,37980+27])
                    Texp_ident "yyrindex/737"
                "Parsing.gindex"
                  expression (src/stage1/parser.ml[1025,38009+19]..src/stage1/parser.ml[1025,38009+27])
                    Texp_ident "yygindex/738"
                "Parsing.tablesize"
                  expression (src/stage1/parser.ml[1026,38038+22]..src/stage1/parser.ml[1026,38038+33])
                    Texp_ident "yytablesize/739"
                "Parsing.table"
                  expression (src/stage1/parser.ml[1027,38073+18]..src/stage1/parser.ml[1027,38073+25])
                    Texp_ident "yytable/740"
                "Parsing.check"
                  expression (src/stage1/parser.ml[1028,38100+18]..src/stage1/parser.ml[1028,38100+25])
                    Texp_ident "yycheck/741"
                "Parsing.error_function"
                  expression (src/stage1/parser.ml[1029,38127+27]..src/stage1/parser.ml[1029,38127+38])
                    Texp_ident "Stdlib!.Parsing.parse_error"
                "Parsing.names_const"
                  expression (src/stage1/parser.ml[1030,38167+24]..src/stage1/parser.ml[1030,38167+37])
                    Texp_ident "yynames_const/742"
                "Parsing.names_block"
                  expression (src/stage1/parser.ml[1031,38206+24]..src/stage1/parser.ml[1031,38206+37])
                    Texp_ident "yynames_block/743"
              ]
            representation =
              Record_regular
            extended_expression =
              None
    ]
  structure_item (src/stage1/parser.ml[1032,38246+0]..src/stage1/parser.ml[1033,38319+70])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/stage1/parser.ml[1032,38246+4]..src/stage1/parser.ml[1032,38246+11])
          Tpat_var "grammar/1272"
        expression (src/stage1/parser.ml[1032,38246+12]..src/stage1/parser.ml[1033,38319+70]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/stage1/parser.ml[1032,38246+13]..src/stage1/parser.ml[1032,38246+19])
                extra
                  Tpat_extra_constraint
                  core_type (src/stage1/parser.ml[1032,38246+22]..src/stage1/parser.ml[1032,38246+44])
                    Ttyp_arrow
                    Nolabel
                    core_type (src/stage1/parser.ml[1032,38246+22]..src/stage1/parser.ml[1032,38246+35])
                      Ttyp_constr "Stdlib!.Lexing.lexbuf"
                      []
                    core_type (src/stage1/parser.ml[1032,38246+39]..src/stage1/parser.ml[1032,38246+44])
                      Ttyp_constr "token/396"
                      []
                Tpat_alias "lexfun/1274"
                pattern (src/stage1/parser.ml[1032,38246+13]..src/stage1/parser.ml[1032,38246+19])
                  Tpat_any
              expression (src/stage1/parser.ml[1032,38246+46]..src/stage1/parser.ml[1033,38319+70]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/stage1/parser.ml[1032,38246+47]..src/stage1/parser.ml[1032,38246+53])
                      extra
                        Tpat_extra_constraint
                        core_type (src/stage1/parser.ml[1032,38246+56]..src/stage1/parser.ml[1032,38246+69])
                          Ttyp_constr "Stdlib!.Lexing.lexbuf"
                          []
                      Tpat_alias "lexbuf/1275"
                      pattern (src/stage1/parser.ml[1032,38246+47]..src/stage1/parser.ml[1032,38246+53])
                        Tpat_any
                    expression (src/stage1/parser.ml[1033,38319+4]..src/stage1/parser.ml[1033,38319+44])
                      extra
                        Texp_constraint
                        core_type (src/stage1/parser.ml[1033,38319+47]..src/stage1/parser.ml[1033,38319+69])
                          Ttyp_constr "Dune__exe!.Syntax.partial_grammar"
                          []
                      Texp_apply
                      expression (src/stage1/parser.ml[1033,38319+4]..src/stage1/parser.ml[1033,38319+19])
                        Texp_ident "Stdlib!.Parsing.yyparse"
                      [
                        <arg>
                          Nolabel
                          expression (src/stage1/parser.ml[1033,38319+20]..src/stage1/parser.ml[1033,38319+28])
                            Texp_ident "yytables/1271"
                        <arg>
                          Nolabel
                          expression (src/stage1/parser.ml[1033,38319+29]..src/stage1/parser.ml[1033,38319+30])
                            Texp_constant Const_int 1
                        <arg>
                          Nolabel
                          expression (src/stage1/parser.ml[1033,38319+31]..src/stage1/parser.ml[1033,38319+37])
                            Texp_ident "lexfun/1274"
                        <arg>
                          Nolabel
                          expression (src/stage1/parser.ml[1033,38319+38]..src/stage1/parser.ml[1033,38319+44])
                            Texp_ident "lexbuf/1275"
                      ]
                ]
          ]
    ]
]

{<Dune__exe__Parser>
 "grammar"[value] -> <Dune__exe__Parser.253>;
 "token"[type] -> <Dune__exe__Parser.0>;
 }

(seq (seq (field_imm 15 (global Stdlib__Parsing!)) 0)
  (let
    (yytransl_const/730 =
       (duparray[int]
         [0:
          257 258 259 260 261 262 263 264 265 266 0 267 268 269 270 271 272
          273 274 275 276 277 278 288 289 290 291 292 0]))
    (setfield_ptr(root-init) 1 (global Dune__exe__Parser!)
      yytransl_const/730))
  (let
    (yytransl_block/731 =
       (duparray[int] [0: 279 280 281 282 283 284 285 286 287 0]))
    (setfield_ptr(root-init) 2 (global Dune__exe__Parser!)
      yytransl_block/731))
  (let
    (yylhs/732 =
       "\255\255\001\000\006\000\006\000\004\000\004\000\004\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\b\000\b\000\012\000\012\000\012\000\r\000\r\000\016\000\016\000\016\000\015\000\015\000\014\000\014\000\t\000\t\000\n\000\n\000\017\000\017\000\005\000\005\000\005\000\018\000\019\000\019\000\019\000\019\000\019\000\020\000\020\000\024\000\024\000\025\000\025\000\026\000\026\000\027\000\027\000\011\000\011\000\021\000\021\000\028\000\028\000\028\000\023\000\023\000\022\000\030\000\030\000\029\000\029\000\031\000\031\000\003\000 \000 \000\002\000\002\000!\000!\000\000\000")
    (setfield_ptr(root-init) 3 (global Dune__exe__Parser!) yylhs/732))
  (let
    (yylen/733 =
       "\002\000\004\000\001\000\001\000\000\000\002\000\002\000\001\000\003\000\002\000\003\000\003\000\002\000\002\000\001\000\003\000\002\000\000\000\001\000\001\000\001\000\001\000\000\000\003\000\001\000\001\000\001\000\000\000\001\000\000\000\002\000\000\000\005\000\000\000\002\000\000\000\001\000\000\000\002\000\002\000\b\000\000\000\001\000\001\000\002\000\002\000\000\000\003\000\001\000\003\000\000\000\003\000\001\000\003\000\002\000\002\000\000\000\003\000\000\000\001\000\001\000\001\000\001\000\000\000\003\000\003\000\000\000\002\000\001\000\002\000\002\000\003\000\002\000\000\000\002\000\003\000\005\000\000\000\002\000\002\000")
    (setfield_ptr(root-init) 4 (global Dune__exe__Parser!) yylen/733))
  (let
    (yydefred/734 =
       "\000\000\004\000\000\000O\000\000\000\000\000\000\000\019\000\020\000\021\000\000\000\000\0008\0008\000\006\000\007\000%\000\014\000\005\000\022\000\018\000\031\0008\000!\000\000\000\r
    (setfield_ptr(root-init) 5 (global Dune__exe__Parser!) yydefred/734))
  (let
    (yydgoto/735 =
       "\002\000\003\000^\000T\000\004\000\028\000+\000\018\000\021\000\030\000\024\000\026\000\019\000\029\000%\000#\0003\000C\000,\000-\000G\000R\000U\000Z\000L\000<\000D\000E\000@\000V\000`\000Y\000W\000j\000")
    (setfield_ptr(root-init) 6 (global Dune__exe__Parser!) yydgoto/735))
  (let
    (yysindex/736 =
       "\011\000\000\000\000\000\000\000\191\000\t\255\011\255\000\000\000\000\000\000\025\255\026\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\255\000\000-\255\004\255\006\000-\255-\255-\255\024\255\000\000\000\000!\255G\255\000\000Z\255\000\000c\255\000\000\000\000\000\000\000\000!\255!\255T\255\000\000\000\000\000\000i\255R\255\000\000\000\000\000\000G\255\000\000_\255!\255\000\000\000\000\000\000\000\000\000\000{\255\000\000G\255~\255\000\255!\255\154\255\000\000\000\000!\255x\255\155\255\158\255\000\000!\255\000\000\000\000\000\000\000\000\160\255\000\000\162\2550\255\000\000\000\000\172\255\185\255!\255\182\255\000\000y\255\000\000\160\255\000\000\000\000\000\000!\255\000\000\000\000\000\000y\255\177\255\000\000\000\000\177\255")
    (setfield_ptr(root-init) 7 (global Dune__exe__Parser!) yysindex/736))
  (let
    (yyrindex/737 =
       "\000\000\000\000\000\000\000\000\000\000C\000\000\000\000\000\000\000\000\000\129\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\000\000\000z\255\153\255j\255\184\255\160\000\215\255\253\000\000\000\000\000\000\000\020\255\000\000m\255\000\000\137\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\255[\255\000\000\000\000\000\000\254\254\000\000$\000\000\000\000\000\000\000\000\000\000\000\000\000\186\255\000\000b\000\000\000\180\255\000\000\000\000\000\000\000\000\000\000\187\255\000\000P\255\000\000\000\000\000\000\000\000\000\000\000\000\171\255\000\000\000\000\003\255\000\000\000\000\b\000\001\000\000\000\014\001\000\000\142\255\000\000\193\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\142\255\173\255\000\000\000\000\204\255")
    (setfield_ptr(root-init) 8 (global Dune__exe__Parser!) yyrindex/737))
  (let
    (yygindex/738 =
       "\000\000\000\000\000\000}\000\000\000\000\000\000\000\000\000\000\000\000\000\200\000\248\255\000\000\000\000\220\255\236\255\214\255\000\000\000\000\000\000\000\000\000\000~\000\000\000\146\000\000\000\152\000\223\255\000\000\000\000\139\000\134\000\000\000\135\000")
    (setfield_ptr(root-init) 9 (global Dune__exe__Parser!) yygindex/738))
  (let (yytablesize/739 =[int] 556)
    (setfield_ptr(root-init) 10 (global Dune__exe__Parser!) yytablesize/739))
  (let
    (yytable/740 =
       "5\000B\0004\0008\0009\000\027\000'\000\029\000(\000.\000/\000\029\000\001\000B\000\031\000J\000=\000>\000?\000\"\000A\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000K\000\029\000\029\000H\000B\000\029\000$\000\029\000\020\000K\000\022\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000!\000\029\000\029\000d\000\029\000\023\000\025\000_\000\\\0000\0001\0002\000f\000\"\0002\0002\0002\0002\0002\0002\0002\000i\000kb\000K\000\029\000\012\000\012\000\012\000\012\000\012\000\012\000[\000\\\000e\0004\000.\000K\000K\000K\000l\000D\0000\000K\000\012\000\012\000\012\000\012\000\027\000\027\000\027\000\012\000L\000\012\000a\000L\000\012\000\n\000\n\000\n\000\n\000\n\000\n\000F\000 \000h\000S\000N\000L\000L\000L\000c\000g\000\000\000L\000\n\000\n\000\n\000\n\000\027\000\027\000\027\000\n\000m\000\n\000\000\000\000\000\nb\000\b\000\b\000\b\000\b\000\b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\b\000\b\000\b\000\b\000\000\000\027\000\000\000\b\000\000\000\b\000\000\000\000\000\b\000\005\000\006\000\007\000\b\000\t\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\011\000\012\000\r\000\014\000\000\000\000\000\000\000\015\000\000\000\016\000\000\000\000\000\017\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\t\000\000\000\t\000\000\000\000\000\t\000\011\000\011\000\011\000\011\000\011\000\011\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\011\000\011\000\011\000\011\000\000\000\024\000\000\000\011\000\024\000\011\000\000\000\024\000\011\000\000\000\024\000\024\000\024\000\000\000\000\000\000\000\024\000\024\000\024\000\024\000\000\000\000\000\000\000\024\000\024\000")
    (setfield_ptr(root-init) 11 (global Dune__exe__Parser!) yytable/740))
  (let
    (yycheck/741 =
       "$\000\000\000#\000-\000.\000\r\000\000\000\t\001\000\000\029\000\030\000\r\001\001\000\n\001\022\000\015\001\016\001\017\001\018\001\015\0018\000\001\001\002\001\003\001\004\001\005\001\006\001\007\001F\000\t\001\n\001C\000\029\001\r\001\030\001\015\001\027\001O\000\027\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\023\001\028\001\029\001\\\000\031\001\027\001\027\001W\000\007\001\023\001\024\001\025\001_\000\015\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001e\000i\000\n\001\023\001\024\001\025\001\014\001\015\001\016\001\017\001\018\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\007\001\028\001\029\001\030\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\016\001\017\001\018\001\030\001\012\001\023\001\024\001\025\001\015\001\b\001\024\001\029\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\r\001\028\001\025\001\030\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\023\001\024\001\025\001\023\001\024\001\025\001\015\001\r\001\016\001\017\001\018\001\014\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\007\001\028\001\030\001\n\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\023\001\024\001\025\001\t\001\022\001\023\001\024\001\025\001\n\001\014\001\n\001\029\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\007\001\028\001\n\001\n\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\029\001\007\001\011\001\014\001\t\001\023\001\024\001\025\001\022\001\029\001\014\001\029\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\007\001\028\001X\000\n\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\029\001\023\000b\000O\000J\000\023\001\024\001\025\001[\000a\000\255\255\029\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001k\000\028\001\255\255\255\255\031\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\b\001\255\255\n\001\255\255\012\001\b\001\255\255\b\001\255\255\012\001\255\255\012\001\255\255\255\255\022\001\023\001\024\001\025\001\255\255\022\001\028\001\022\001\023\001\024\001\025\001\028\001\255\255\028\001\001\001\002\001\003\001\004\001\005\001\006\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\015\001\255\255\255\255\255\255\019\001\020\001\021\001\022\001\255\255\024\001\255\255\026\001\255\255\028\001\255\255\030\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\015\001\255\255\255\255\255\255\019\001\020\001\021\001\022\001\255\255\024\001\255\255\026\001\255\255\028\001\255\255\255\255\031\001\001\001\002\001\003\001\004\001\005\001\006\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\015\001\255\255\255\255\255\255\019\001\020\001\021\001\022\001\255\255\024\001\255\255\026\001\255\255\028\001\255\255\255\255\031\001\001\001\002\001\003\001\004\001\005\001\006\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\019\001\020\001\021\001\022\001\023\001\255\255\255\255\026\001\255\255\028\001\255\255\255\255\031\001\001\001\002\001\003\001\004\001\005\001\006\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\019\001\020\001\021\001\022\001\255\255\024\001\255\255\026\001\255\255\028\001\255\255\255\255\031\001\001\001\002\001\003\001\004\001\005\001\006\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\019\001\020\001\021\001\022\001\255\255\255\255\255\255\026\001\255\255\028\001\255\255\255\255\031\001\001\001\002\001\003\001\004\001\005\001\006\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\019\001\020\001\021\001\022\001\255\255\255\255\255\255\026\001\255\255\028\001\255\255\255\255\031\001\001\001\002\001\003\001\004\001\005\001\006\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\019\001\020\001\021\001\022\001\255\255\007\001\255\255\026\001\n\001\028\001\255\255\r\001\031\001\255\255\016\001\017\001\018\001\255\255\255\255\255\255\022\001\023\001\024\001\025\001\255\255\255\255\255\255\029\001\030\001")
    (setfield_ptr(root-init) 12 (global Dune__exe__Parser!) yycheck/741))
  (let
    (yynames_const/742 =
       "TOKEN\000TYPE\000LEFT\000RIGHT\000NONASSOC\000START\000PREC\000PUBLIC\000COLON\000BAR\000EOF\000EQUAL\000INLINE\000LPAREN\000RPAREN\000COMMA\000QUESTION\000STAR\000PLUS\000PARAMETER\000ON_ERROR_REDUCE\000PERCENTATTRIBUTE\000SEMI\000LET\000TILDE\000UNDERSCORE\000COLONEQUAL\000EQUALEQUAL\000")
    (setfield_ptr(root-init) 13 (global Dune__exe__Parser!)
      yynames_const/742))
  (let
    (yynames_block/743 =
       "LID\000UID\000QID\000HEADER\000OCAMLTYPE\000PERCENTPERCENT\000ACTION\000ATTRIBUTE\000GRAMMARATTRIBUTE\000")
    (setfield_ptr(root-init) 14 (global Dune__exe__Parser!)
      yynames_block/743))
  (let
    (yyact/744 =
       (makearray[addr]
         (function param/745 (apply (field_imm 1 (global Stdlib!)) "parser"))
         (function __caml_parser_env/746
           (let
             (_1/747 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/746 3)
              _2/766 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/746 2)
              _3/767 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/746 1)
              _4/768 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/746 0))
             (makeblock 0 "" _4/768
               (apply (field_imm 9 (global Stdlib__List!)) _1/747) _3/767)))
         (function __caml_parser_env/952 0)
         (function __caml_parser_env/953
           (let
             (_1/954 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/953 0))
             (makeblock 0
               (let (lzarg/1943 = _1/954)
                 (if (isint lzarg/1943) lzarg/1943
                   (switch (caml_obj_tag lzarg/1943)
                    case int 250: (field_mut 0 lzarg/1943)
                    case int 246:
                     (apply (field_imm 1 (global CamlinternalLazy!))
                       (opaque lzarg/1943))
                    case int 244:
                     (apply (field_imm 1 (global CamlinternalLazy!))
                       (opaque lzarg/1943))
                    default: lzarg/1943))))))
         (function __caml_parser_env/955 0)
         (function __caml_parser_env/956
           (let
             (_1/957 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/956 1)
              _2/958 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/956 0))
             (apply (field_imm 36 (global Stdlib!)) _2/958 _1/957)))
         (function __caml_parser_env/959
           (let
             (_1/960 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/959 1))
             _1/960))
         (function __caml_parser_env/961
           (let
             (_1/962 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/961 0))
             (makeblock 0
               (apply (field_imm 6 (global Dune__exe__Positions!))
                 (makeblock 0 _1/962))
               0)))
         (function __caml_parser_env/963
           (let
             (_2/964 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/963 1)
              _3/965 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/963 0))
             (catch
               (let (ts/1948 =a _3/965 ty/1947 =a _2/964)
                 (exit 1 ty/1947 ts/1948))
              with (1 ty/966 ts/967)
               (apply (field_imm 19 (global Stdlib__List!))
                 (apply (field_imm 7 (global Dune__exe__Positions!))
                   (function (param/1944, param/1945, param/1946)
                     (let
                       (attrs/970 =a param/1946
                        alias/969 =a param/1945
                        terminal/968 =a param/1944)
                       (makeblock 2 ty/966 terminal/968 alias/969 attrs/970))))
                 ts/967))))
         (function __caml_parser_env/972
           (let
             (_2/973 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/972 0))
             (apply (field_imm 19 (global Stdlib__List!))
               (apply (field_imm 7 (global Dune__exe__Positions!))
                 (function nonterminal/974 (makeblock 3 nonterminal/974)))
               _2/973)))
         (function __caml_parser_env/975
           (let
             (_2/976 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/975 1)
              _3/977 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/975 0))
             (apply (field_imm 19 (global Stdlib__List!))
               (apply (field_imm 7 (global Dune__exe__Positions!))
                 (function nt/978 (makeblock 5 _2/976 nt/978)))
               (apply (field_imm 19 (global Stdlib__List!))
                 (field_imm 12 (global Dune__exe__Parameters!)) _3/977))))
         (function __caml_parser_env/994
           (let
             (_2/995 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/994 1)
              _3/996 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/994 0))
             (apply (field_imm 1 (global Dune__exe__Misc!))
               (function ntloc/1033
                 (apply (field_imm 10 (global Dune__exe__Positions!))
                   (function nt/1034
                     (makeblock 0 (makeblock 3 nt/1034)
                       (makeblock 5 _2/995 (makeblock 0 ntloc/1033))))
                   ntloc/1033))
               _3/996)))
         (function __caml_parser_env/1035
           (let
             (_1/1036 =[int]
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1035 1)
              _2/1037 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1035 0)
              prec/1038 =
                (apply (field_imm 0 (global Dune__exe__ParserAux!))
                  (makeblock 0
                    (apply (field_imm 6 (global Stdlib__Parsing!)) 1)
                    (apply (field_imm 7 (global Stdlib__Parsing!)) 1))))
             (apply (field_imm 19 (global Stdlib__List!))
               (apply (field_imm 7 (global Dune__exe__Positions!))
                 (function symbol/1100
                   (makeblock 4 (*,int,*) symbol/1100 _1/1036 prec/1038)))
               _2/1037)))
         (function __caml_parser_env/1101
           (let
             (_2/1102 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1101 0))
             (makeblock 0
               (apply (field_imm 6 (global Dune__exe__Positions!))
                 (makeblock 1 _2/1102))
               0)))
         (function __caml_parser_env/1103
           (let
             (_1/1104 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1103 0))
             (makeblock 0
               (apply (field_imm 6 (global Dune__exe__Positions!))
                 (makeblock 6 _1/1104))
               0)))
         (function __caml_parser_env/1105
           (let
             (_2/1106 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1105 1)
              _3/1107 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1105 0))
             (makeblock 0
               (apply (field_imm 6 (global Dune__exe__Positions!))
                 (makeblock 7 _2/1106 _3/1107))
               0)))
         (function __caml_parser_env/1108
           (let
             (_2/1109 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1108 0)
              prec/1110 =
                (apply (field_imm 2 (global Dune__exe__ParserAux!)) 0))
             (apply (field_imm 19 (global Stdlib__List!))
               (apply (field_imm 7 (global Dune__exe__Positions!))
                 (function nt/1111 (makeblock 8 nt/1111 prec/1110)))
               (apply (field_imm 19 (global Stdlib__List!))
                 (field_imm 12 (global Dune__exe__Parameters!)) _2/1109))))
         (function __caml_parser_env/1112 0)
         (function __caml_parser_env/1113
           (let
             (_1/1114 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1113 0))
             (makeblock 0 _1/1114)))
         (function __caml_parser_env/1115 0)
         (function __caml_parser_env/1116 1)
         (function __caml_parser_env/1117 2)
         (function __caml_parser_env/1118 0)
         (function __caml_parser_env/1119
           (let
             (_1/1120 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1119 2)
              _2/1121 =[int]
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1119 1)
              _3/1122 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1119 0))
             (makeblock 0 _3/1122 _1/1120)))
         (function __caml_parser_env/1123
           (let
             (_1/1124 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1123 0))
             _1/1124))
         (function __caml_parser_env/1125
           (let
             (_1/1126 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1125 0))
             _1/1126))
         (function __caml_parser_env/1127
           (let
             (_1/1128 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1127 0))
             _1/1128))
         (function __caml_parser_env/1129 0)
         (function __caml_parser_env/1130 0)
         (function __caml_parser_env/1131 0)
         (function __caml_parser_env/1132
           (let
             (_1/1133 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1132 1)
              _2/1134 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1132 0))
             (makeblock 0 _1/1133 _2/1134)))
         (function __caml_parser_env/1135 0)
         (function __caml_parser_env/1136
           (let
             (_1/1137 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1136 4)
              _2/1138 =[int]
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1136 3)
              _3/1139 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1136 2)
              _4/1140 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1136 1)
              _5/1141 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1136 0))
             (catch
               (let
                 (attrs/1952 =a _5/1141
                  alias/1951 =a _4/1140
                  uid/1950 =a _3/1139
                  ts/1949 =a _1/1137)
                 (exit 4 ts/1949 uid/1950 alias/1951 attrs/1952))
              with (4 ts/1142 uid/1143 alias/1144 attrs/1145)
               (let
                 (alias/1146 =
                    (apply (field_imm 1 (global Dune__exe__Option!))
                      (field_imm 0 (global Dune__exe__Positions!))
                      alias/1144))
                 (makeblock 0
                   (apply (field_imm 7 (global Dune__exe__Positions!))
                     (function uid/1158
                       (makeblock 0 uid/1158 alias/1146 attrs/1145))
                     uid/1143)
                   ts/1142)))))
         (function __caml_parser_env/1159 0)
         (function __caml_parser_env/1160
           (let
             (_1/1161 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1160 1)
              _2/1162 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1160 0))
             (makeblock 0 _2/1162 _1/1161)))
         (function __caml_parser_env/1163 0)
         (function __caml_parser_env/1164
           (let
             (_1/1165 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1164 0))
             (makeblock 0 _1/1165)))
         (function __caml_parser_env/1166 0)
         (function __caml_parser_env/1167
           (let
             (_1/1168 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1167 1)
              _2/1169 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1167 0))
             (makeblock 0 _2/1169 _1/1168)))
         (function __caml_parser_env/1170
           (let
             (_1/1171 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1170 1))
             _1/1171))
         (function __caml_parser_env/1172
           (let
             (_1/1173 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1172 7)
              _2/1174 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1172 6)
              _3/1175 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1172 5)
              _4/1176 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1172 4)
              _6/1177 =[int]
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1172 2)
              _7/1178 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1172 1)
              _8/1179 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1172 0)
              inline/1181 =a (field_imm 1 _1/1173)
              public/1180 =a (field_imm 0 _1/1173))
             (makeblock 0 (int,int,*,*,*,*,*) public/1180 inline/1181
               (apply (field_imm 0 (global Dune__exe__Positions!)) _2/1174)
               (makeblock 0
                 (apply (field_imm 1 (global Dune__exe__Positions!)) _2/1174)
                 0)
               _3/1175 _4/1176
               (apply (field_imm 14 (global Stdlib__List!))
                 (makeblock 0 _7/1178
                   (apply (field_imm 9 (global Stdlib__List!)) _8/1179))))))
         (function __caml_parser_env/1182 [0: 0 0])
         (function __caml_parser_env/1183 [0: 1 0])
         (function __caml_parser_env/1184 [0: 0 1])
         (function __caml_parser_env/1185 [0: 1 1])
         (function __caml_parser_env/1186 [0: 1 1])
         (function __caml_parser_env/1187 0)
         (function __caml_parser_env/1188
           (let
             (_2/1189 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1188 1))
             _2/1189))
         (function __caml_parser_env/1190
           (let
             (_1/1191 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1190 0))
             (makeblock 0
               (apply (field_imm 0 (global Dune__exe__Positions!)) _1/1191)
               0)))
         (function __caml_parser_env/1192
           (let
             (_1/1193 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1192 2)
              _3/1194 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1192 0))
             (makeblock 0
               (apply (field_imm 0 (global Dune__exe__Positions!)) _1/1193)
               _3/1194)))
         (function __caml_parser_env/1195 0)
         (function __caml_parser_env/1196
           (let
             (_2/1197 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1196 1))
             _2/1197))
         (function __caml_parser_env/1198
           (let
             (_1/1199 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1198 0))
             (makeblock 0 _1/1199 0)))
         (function __caml_parser_env/1200
           (let
             (_1/1201 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1200 2)
              _3/1202 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1200 0))
             (makeblock 0 _1/1201 _3/1202)))
         (function __caml_parser_env/1203
           (let
             (_1/1204 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1203 1)
              _2/1205 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1203 0))
             (apply (field_imm 0 (global Dune__exe__Parameters!)) _1/1204
               _2/1205)))
         (function __caml_parser_env/1206
           (let
             (_1/1207 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1206 1)
              _2/1208 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1206 0))
             (makeblock 1 _2/1208 (makeblock 0 _1/1207 0))))
         (function __caml_parser_env/1209 0)
         (function __caml_parser_env/1210
           (let
             (_1/1211 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1210 2)
              _2/1212 =[int]
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1210 1)
              _3/1213 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1210 0))
             (makeblock 0 _3/1213 _1/1211)))
         (function __caml_parser_env/1214 0)
         (function __caml_parser_env/1215 0)
         (function __caml_parser_env/1216
           (apply (field_imm 6 (global Dune__exe__Positions!)) "option"))
         (function __caml_parser_env/1217
           (apply (field_imm 6 (global Dune__exe__Positions!))
             "nonempty_list"))
         (function __caml_parser_env/1218
           (apply (field_imm 6 (global Dune__exe__Positions!)) "list"))
         (function __caml_parser_env/1219 0)
         (function __caml_parser_env/1220
           (let
             (_1/1221 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1220 2)
              _3/1222 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1220 0))
             (makeblock 0 _3/1222 _1/1221)))
         (function __caml_parser_env/1223
           (let
             (_1/1224 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1223 2)
              _2/1225 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1223 1)
              _3/1226 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1223 0))
             (catch
               (let
                 (oprec2/1963 =a _3/1226
                  action/1962 =a _2/1225
                  productions/1961 =a _1/1224)
                 (exit 12 productions/1961 action/1962 oprec2/1963))
              with (12 productions/1227 action/1228 oprec2/1229)
               (seq
                 (apply (field_imm 3 (global Dune__exe__ParserAux!))
                   productions/1227)
                 (apply (field_imm 19 (global Stdlib__List!))
                   (function (param/1956, param/1957, param/1958, param/1959)
                     (let
                       (pos/1233 =a param/1959
                        level/1232 =a param/1958
                        oprec1/1231 =a param/1957
                        producers/1230 =a param/1956
                        pr_producers/1234 =
                          (apply (field_imm 4 (global Dune__exe__ParserAux!))
                            producers/1230)
                        names/1235 =
                          (apply (field_imm 6 (global Dune__exe__ParserAux!))
                            producers/1230)
                        pr_action/1236 =
                          (apply action/1228
                            (field_imm 50 (global Dune__exe__Settings!))
                            names/1235))
                       (makeblock 0 pos/1233 pr_producers/1234 pr_action/1236
                         (apply (field_imm 5 (global Dune__exe__ParserAux!))
                           pos/1233 oprec1/1231 oprec2/1229)
                         level/1232)))
                   productions/1227)))))
         (function __caml_parser_env/1238 0)
         (function __caml_parser_env/1239
           (let
             (_2/1240 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1239 0))
             (makeblock 0 _2/1240)))
         (function __caml_parser_env/1241
           (let
             (_1/1242 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1241 0))
             (makeblock 0 _1/1242 0)))
         (function __caml_parser_env/1243
           (let
             (_1/1244 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1243 1)
              _2/1245 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1243 0))
             (makeblock 0 _1/1244 _2/1245)))
         (function __caml_parser_env/1246
           (let
             (_2/1247 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1246 0))
             (makeblock 0 _2/1247 0)))
         (function __caml_parser_env/1248
           (let
             (_2/1249 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1248 1)
              _3/1250 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1248 0))
             (makeblock 0 _2/1249 _3/1250)))
         (function __caml_parser_env/1251
           (let
             (_1/1252 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1251 1)
              _2/1253 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1251 0))
             (makeblock 0
               (apply (field_imm 9 (global Stdlib__List!)) _1/1252) _2/1253
               (apply (field_imm 1 (global Dune__exe__ParserAux!)) 0)
               (apply (field_imm 19 (global Dune__exe__Positions!))
                 (makeblock 0
                   (apply (field_imm 4 (global Stdlib__Parsing!)) 0)
                   (apply (field_imm 5 (global Stdlib__Parsing!)) 0))))))
         (function __caml_parser_env/1254 0)
         (function __caml_parser_env/1255
           (let
             (_1/1256 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1255 1)
              _2/1257 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1255 0))
             (makeblock 0 _2/1257 _1/1256)))
         (function __caml_parser_env/1258
           (let
             (_1/1259 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1258 2)
              _2/1260 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1258 1)
              _3/1261 =[int]
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1258 0))
             (makeblock 0
               (apply (field_imm 19 (global Dune__exe__Positions!))
                 (makeblock 0
                   (apply (field_imm 4 (global Stdlib__Parsing!)) 0)
                   (apply (field_imm 5 (global Stdlib__Parsing!)) 0)))
               0 _1/1259 _2/1260)))
         (function __caml_parser_env/1262
           (let
             (_1/1263 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1262 4)
              _3/1264 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1262 2)
              _4/1265 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1262 1)
              _5/1266 =[int]
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1262 0))
             (makeblock 0
               (apply (field_imm 19 (global Dune__exe__Positions!))
                 (makeblock 0
                   (apply (field_imm 4 (global Stdlib__Parsing!)) 0)
                   (apply (field_imm 5 (global Stdlib__Parsing!)) 0)))
               (makeblock 0 _1/1263) _3/1264 _4/1265)))
         (function __caml_parser_env/1267 0)
         (function __caml_parser_env/1268
           (let
             (_1/1269 =[int]
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1268 1))
             0))
         (function __caml_parser_env/1270
           (raise
             (makeblock 0 (field_imm 11 (global Stdlib__Parsing!))
               (apply (field_imm 13 (global Stdlib__Parsing!))
                 __caml_parser_env/1270 0))))))
    (setfield_ptr(root-init) 15 (global Dune__exe__Parser!) yyact/744))
  (let
    (yytables/1271 =
       (makeblock 0 (*,*,*,*,*,*,*,*,*,*,int,*,*,*,*,*)
         (field_imm 15 (global Dune__exe__Parser!))
         (field_imm 1 (global Dune__exe__Parser!))
         (field_imm 2 (global Dune__exe__Parser!))
         (field_imm 3 (global Dune__exe__Parser!))
         (field_imm 4 (global Dune__exe__Parser!))
         (field_imm 5 (global Dune__exe__Parser!))
         (field_imm 6 (global Dune__exe__Parser!))
         (field_imm 7 (global Dune__exe__Parser!))
         (field_imm 8 (global Dune__exe__Parser!))
         (field_imm 9 (global Dune__exe__Parser!))
         (field_imm 10 (global Dune__exe__Parser!))
         (field_imm 11 (global Dune__exe__Parser!))
         (field_imm 12 (global Dune__exe__Parser!))
         (field_imm 15 (global Stdlib__Parsing!))
         (field_imm 13 (global Dune__exe__Parser!))
         (field_imm 14 (global Dune__exe__Parser!))))
    (setfield_ptr(root-init) 16 (global Dune__exe__Parser!) yytables/1271))
  (let
    (grammar/1272 =
       (function lexfun/1274 lexbuf/1275
         (apply (field_imm 12 (global Stdlib__Parsing!))
           (field_imm 16 (global Dune__exe__Parser!)) 1 lexfun/1274
           lexbuf/1275)))
    (setfield_ptr(root-init) 0 (global Dune__exe__Parser!) grammar/1272))
  0)
(seq (seq (field_imm 15 (global Stdlib__Parsing!)) 0)
  (let
    (yytransl_const/730 =
       (duparray[int]
         [0:
          257 258 259 260 261 262 263 264 265 266 0 267 268 269 270 271 272
          273 274 275 276 277 278 288 289 290 291 292 0]))
    (setfield_ptr(root-init) 1 (global Dune__exe__Parser!)
      yytransl_const/730))
  (let
    (yytransl_block/731 =
       (duparray[int] [0: 279 280 281 282 283 284 285 286 287 0]))
    (setfield_ptr(root-init) 2 (global Dune__exe__Parser!)
      yytransl_block/731))
  (let
    (yylhs/732 =
       "\255\255\001\000\006\000\006\000\004\000\004\000\004\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\b\000\b\000\012\000\012\000\012\000\r\000\r\000\016\000\016\000\016\000\015\000\015\000\014\000\014\000\t\000\t\000\n\000\n\000\017\000\017\000\005\000\005\000\005\000\018\000\019\000\019\000\019\000\019\000\019\000\020\000\020\000\024\000\024\000\025\000\025\000\026\000\026\000\027\000\027\000\011\000\011\000\021\000\021\000\028\000\028\000\028\000\023\000\023\000\022\000\030\000\030\000\029\000\029\000\031\000\031\000\003\000 \000 \000\002\000\002\000!\000!\000\000\000")
    (setfield_ptr(root-init) 3 (global Dune__exe__Parser!) yylhs/732))
  (let
    (yylen/733 =
       "\002\000\004\000\001\000\001\000\000\000\002\000\002\000\001\000\003\000\002\000\003\000\003\000\002\000\002\000\001\000\003\000\002\000\000\000\001\000\001\000\001\000\001\000\000\000\003\000\001\000\001\000\001\000\000\000\001\000\000\000\002\000\000\000\005\000\000\000\002\000\000\000\001\000\000\000\002\000\002\000\b\000\000\000\001\000\001\000\002\000\002\000\000\000\003\000\001\000\003\000\000\000\003\000\001\000\003\000\002\000\002\000\000\000\003\000\000\000\001\000\001\000\001\000\001\000\000\000\003\000\003\000\000\000\002\000\001\000\002\000\002\000\003\000\002\000\000\000\002\000\003\000\005\000\000\000\002\000\002\000")
    (setfield_ptr(root-init) 4 (global Dune__exe__Parser!) yylen/733))
  (let
    (yydefred/734 =
       "\000\000\004\000\000\000O\000\000\000\000\000\000\000\019\000\020\000\021\000\000\000\000\0008\0008\000\006\000\007\000%\000\014\000\005\000\022\000\018\000\031\0008\000!\000\000\000\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\"\000\028\000\000\000\000\000\015\000\000\000\002\000\000\000'\000\003\000\001\000&\000\000\000\000\000\000\000\024\000\025\000\026\000\000\000\000\000\030\000,\000-\000\000\000\023\000\000\000\000\0006\000<\000>\000=\0007\000\000\000$\000\000\000\000\000\000\000\000\000\000\000 \0003\000\000\000\000\000\000\000\000\0005\000\000\000/\000;\000I\0001\000\000\000?\000\000\000\000\000I\000E\000\000\000\000\000\000\000\000\000J\000\000\000H\000\000\000I\000A\000C\000\000\000M\000G\000@\000\000\000\000\000M\000N\000\000\000")
    (setfield_ptr(root-init) 5 (global Dune__exe__Parser!) yydefred/734))
  (let
    (yydgoto/735 =
       "\002\000\003\000^\000T\000\004\000\028\000+\000\018\000\021\000\030\000\024\000\026\000\019\000\029\000%\000#\0003\000C\000,\000-\000G\000R\000U\000Z\000L\000<\000D\000E\000@\000V\000`\000Y\000W\000j\000")
    (setfield_ptr(root-init) 6 (global Dune__exe__Parser!) yydgoto/735))
  (let
    (yysindex/736 =
       "\011\000\000\000\000\000\000\000\191\000\t\255\011\255\000\000\000\000\000\000\025\255\026\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\255\000\000-\255\004\255\006\000-\255-\255-\255\024\255\000\000\000\000!\255G\255\000\000Z\255\000\000c\255\000\000\000\000\000\000\000\000!\255!\255T\255\000\000\000\000\000\000i\255R\255\000\000\000\000\000\000G\255\000\000_\255!\255\000\000\000\000\000\000\000\000\000\000{\255\000\000G\255~\255\000\255!\255\154\255\000\000\000\000!\255x\255\155\255\158\255\000\000!\255\000\000\000\000\000\000\000\000\160\255\000\000\162\2550\255\000\000\000\000\172\255\185\255!\255\182\255\000\000y\255\000\000\160\255\000\000\000\000\000\000!\255\000\000\000\000\000\000y\255\177\255\000\000\000\000\177\255")
    (setfield_ptr(root-init) 7 (global Dune__exe__Parser!) yysindex/736))
  (let
    (yyrindex/737 =
       "\000\000\000\000\000\000\000\000\000\000C\000\000\000\000\000\000\000\000\000\129\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\000\000\000z\255\153\255j\255\184\255\160\000\215\255\253\000\000\000\000\000\000\000\020\255\000\000m\255\000\000\137\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\255[\255\000\000\000\000\000\000\254\254\000\000$\000\000\000\000\000\000\000\000\000\000\000\000\000\186\255\000\000b\000\000\000\180\255\000\000\000\000\000\000\000\000\000\000\187\255\000\000P\255\000\000\000\000\000\000\000\000\000\000\000\000\171\255\000\000\000\000\003\255\000\000\000\000\b\000\001\000\000\000\014\001\000\000\142\255\000\000\193\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\142\255\173\255\000\000\000\000\204\255")
    (setfield_ptr(root-init) 8 (global Dune__exe__Parser!) yyrindex/737))
  (let
    (yygindex/738 =
       "\000\000\000\000\000\000}\000\000\000\000\000\000\000\000\000\000\000\000\000\200\000\248\255\000\000\000\000\220\255\236\255\214\255\000\000\000\000\000\000\000\000\000\000~\000\000\000\146\000\000\000\152\000\223\255\000\000\000\000\139\000\134\000\000\000\135\000")
    (setfield_ptr(root-init) 9 (global Dune__exe__Parser!) yygindex/738))
  (let (yytablesize/739 =[int] 556)
    (setfield_ptr(root-init) 10 (global Dune__exe__Parser!) yytablesize/739))
  (let
    (yytable/740 =
       "5\000B\0004\0008\0009\000\027\000'\000\029\000(\000.\000/\000\029\000\001\000B\000\031\000J\000=\000>\000?\000\"\000A\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000K\000\029\000\029\000H\000B\000\029\000$\000\029\000\020\000K\000\022\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000!\000\029\000\029\000d\000\029\000\023\000\025\000_\000\\\0000\0001\0002\000f\000\"\0002\0002\0002\0002\0002\0002\0002\000i\000kb\000K\000\029\000\012\000\012\000\012\000\012\000\012\000\012\000[\000\\\000e\0004\000.\000K\000K\000K\000l\000D\0000\000K\000\012\000\012\000\012\000\012\000\027\000\027\000\027\000\012\000L\000\012\000a\000L\000\012\000\n\000\n\000\n\000\n\000\n\000\n\000F\000 \000h\000S\000N\000L\000L\000L\000c\000g\000\000\000L\000\n\000\n\000\n\000\n\000\027\000\027\000\027\000\n\000m\000\n\000\000\000\000\000\nb\000\b\000\b\000\b\000\b\000\b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\b\000\b\000\b\000\b\000\000\000\027\000\000\000\b\000\000\000\b\000\000\000\000\000\b\000\005\000\006\000\007\000\b\000\t\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\011\000\012\000\r\000\014\000\000\000\000\000\000\000\015\000\000\000\016\000\000\000\000\000\017\000\t\000\t\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\t\000\t\000\t\000\000\000\000\000\000\000\t\000\000\000\t\000\000\000\000\000\t\000\011\000\011\000\011\000\011\000\011\000\011\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\011\000\011\000\011\000\011\000\000\000\024\000\000\000\011\000\024\000\011\000\000\000\024\000\011\000\000\000\024\000\024\000\024\000\000\000\000\000\000\000\024\000\024\000\024\000\024\000\000\000\000\000\000\000\024\000\024\000")
    (setfield_ptr(root-init) 11 (global Dune__exe__Parser!) yytable/740))
  (let
    (yycheck/741 =
       "$\000\000\000#\000-\000.\000\r\000\000\000\t\001\000\000\029\000\030\000\r\001\001\000\n\001\022\000\015\001\016\001\017\001\018\001\015\0018\000\001\001\002\001\003\001\004\001\005\001\006\001\007\001F\000\t\001\n\001C\000\029\001\r\001\030\001\015\001\027\001O\000\027\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\023\001\028\001\029\001\\\000\031\001\027\001\027\001W\000\007\001\023\001\024\001\025\001_\000\015\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001e\000i\000\n\001\023\001\024\001\025\001\014\001\015\001\016\001\017\001\018\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\007\001\028\001\029\001\030\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\016\001\017\001\018\001\030\001\012\001\023\001\024\001\025\001\015\001\b\001\024\001\029\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\r\001\028\001\025\001\030\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\023\001\024\001\025\001\023\001\024\001\025\001\015\001\r\001\016\001\017\001\018\001\014\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\007\001\028\001\030\001\n\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\023\001\024\001\025\001\t\001\022\001\023\001\024\001\025\001\n\001\014\001\n\001\029\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\007\001\028\001\n\001\n\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\029\001\007\001\011\001\014\001\t\001\023\001\024\001\025\001\022\001\029\001\014\001\029\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001\007\001\028\001X\000\n\001\031\001\001\001\002\001\003\001\004\001\005\001\006\001\029\001\023\000b\000O\000J\000\023\001\024\001\025\001[\000a\000\255\255\029\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\026\001k\000\028\001\255\255\255\255\031\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\b\001\255\255\n\001\255\255\012\001\b\001\255\255\bn\001\028\001\255\255\r\001\031\001\255\255\016\001\017\001\018\001\255\255\255\255\255\255\022\001\023\001\024\001\025\001\255\255\255\255\255\255\029\001\030\001")
    (setfield_ptr(root-init) 12 (global Dune__exe__Parser!) yycheck/741))
  (let
    (yynames_const/742 =
       "TOKEN\000TYPE\000LEFT\000RIGHT\000NONASSOC\000START\000PREC\000PUBLIC\000COLON\000BAR\000EOF\000EQUAL\000INLINE\000LPAREN\000RPAREN\000COMMA\000QUESTION\000STAR\000PLUS\000PARAMETER\000ON_ERROR_REDUCE\000PERCENTATTRIBUTE\000SEMI\000LET\000TILDE\000UNDERSCORE\000COLONEQUAL\000EQUALEQUAL\000")
    (setfield_ptr(root-init) 13 (global Dune__exe__Parser!)
      yynames_const/742))
  (let
    (yynames_block/743 =
       "LID\000UID\000QID\000HEADER\000OCAMLTYPE\000PERCENTPERCENT\000ACTION\000ATTRIBUTE\000GRAMMARATTRIBUTE\000")
    (setfield_ptr(root-init) 14 (global Dune__exe__Parser!)
      yynames_block/743))
  (let
    (yyact/744 =
       (makearray[addr]
         (function param/745 (apply (field_imm 1 (global Stdlib!)) "parser"))
         (function __caml_parser_env/746
           (let
             (_1/747 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/746 3)
              _2/766 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/746 2)
              _3/767 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/746 1)
              _4/768 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/746 0))
             (makeblock 0 "" _4/768
               (apply (field_imm 9 (global Stdlib__List!)) _1/747) _3/767)))
         (function __caml_parser_env/952 0)
         (function __caml_parser_env/953
           (let
             (_1/954 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/953 0))
             (makeblock 0
               (if (isint _1/954) _1/954
                 (switch (caml_obj_tag _1/954)
                  case int 250: (field_mut 0 _1/954)
                  case int 246:
                   (apply (field_imm 1 (global CamlinternalLazy!))
                     (opaque _1/954))
                  case int 244:
                   (apply (field_imm 1 (global CamlinternalLazy!))
                     (opaque _1/954))
                  default: _1/954)))))
         (function __caml_parser_env/955 0)
         (function __caml_parser_env/956
           (let
             (_1/957 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/956 1)
              _2/958 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/956 0))
             (apply (field_imm 36 (global Stdlib!)) _2/958 _1/957)))
         (function __caml_parser_env/959
           (apply (field_imm 13 (global Stdlib__Parsing!))
             __caml_parser_env/959 1))
         (function __caml_parser_env/961
           (let
             (_1/962 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/961 0))
             (makeblock 0
               (apply (field_imm 6 (global Dune__exe__Positions!))
                 (makeblock 0 _1/962))
               0)))
         (function __caml_parser_env/963
           (let
             (_2/964 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/963 1)
              _3/965 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/963 0))
             (apply (field_imm 19 (global Stdlib__List!))
               (apply (field_imm 7 (global Dune__exe__Positions!))
                 (function (param/1944, param/1945, param/1946)
                   (makeblock 2 _2/964 param/1944 param/1945 param/1946)))
               _3/965)))
         (function __caml_parser_env/972
           (let
             (_2/973 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/972 0))
             (apply (field_imm 19 (global Stdlib__List!))
               (apply (field_imm 7 (global Dune__exe__Positions!))
                 (function nonterminal/974 (makeblock 3 nonterminal/974)))
               _2/973)))
         (function __caml_parser_env/975
           (let
             (_2/976 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/975 1)
              _3/977 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/975 0))
             (apply (field_imm 19 (global Stdlib__List!))
               (apply (field_imm 7 (global Dune__exe__Positions!))
                 (function nt/978 (makeblock 5 _2/976 nt/978)))
               (apply (field_imm 19 (global Stdlib__List!))
                 (field_imm 12 (global Dune__exe__Parameters!)) _3/977))))
         (function __caml_parser_env/994
           (let
             (_2/995 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/994 1)
              _3/996 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/994 0))
             (apply (field_imm 1 (global Dune__exe__Misc!))
               (function ntloc/1033
                 (apply (field_imm 10 (global Dune__exe__Positions!))
                   (function nt/1034
                     (makeblock 0 (makeblock 3 nt/1034)
                       (makeblock 5 _2/995 (makeblock 0 ntloc/1033))))
                   ntloc/1033))
               _3/996)))
         (function __caml_parser_env/1035
           (let
             (_1/1036 =[int]
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1035 1)
              _2/1037 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1035 0)
              prec/1038 =
                (apply (field_imm 0 (global Dune__exe__ParserAux!))
                  (makeblock 0
                    (apply (field_imm 6 (global Stdlib__Parsing!)) 1)
                    (apply (field_imm 7 (global Stdlib__Parsing!)) 1))))
             (apply (field_imm 19 (global Stdlib__List!))
               (apply (field_imm 7 (global Dune__exe__Positions!))
                 (function symbol/1100
                   (makeblock 4 (*,int,*) symbol/1100 _1/1036 prec/1038)))
               _2/1037)))
         (function __caml_parser_env/1101
           (let
             (_2/1102 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1101 0))
             (makeblock 0
               (apply (field_imm 6 (global Dune__exe__Positions!))
                 (makeblock 1 _2/1102))
               0)))
         (function __caml_parser_env/1103
           (let
             (_1/1104 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1103 0))
             (makeblock 0
               (apply (field_imm 6 (global Dune__exe__Positions!))
                 (makeblock 6 _1/1104))
               0)))
         (function __caml_parser_env/1105
           (let
             (_2/1106 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1105 1)
              _3/1107 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1105 0))
             (makeblock 0
               (apply (field_imm 6 (global Dune__exe__Positions!))
                 (makeblock 7 _2/1106 _3/1107))
               0)))
         (function __caml_parser_env/1108
           (let
             (_2/1109 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1108 0)
              prec/1110 =
                (apply (field_imm 2 (global Dune__exe__ParserAux!)) 0))
             (apply (field_imm 19 (global Stdlib__List!))
               (apply (field_imm 7 (global Dune__exe__Positions!))
                 (function nt/1111 (makeblock 8 nt/1111 prec/1110)))
               (apply (field_imm 19 (global Stdlib__List!))
                 (field_imm 12 (global Dune__exe__Parameters!)) _2/1109))))
         (function __caml_parser_env/1112 0)
         (function __caml_parser_env/1113
           (let
             (_1/1114 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1113 0))
             (makeblock 0 _1/1114)))
         (function __caml_parser_env/1115 0)
         (function __caml_parser_env/1116 1)
         (function __caml_parser_env/1117 2)
         (function __caml_parser_env/1118 0)
         (function __caml_parser_env/1119
           (let
             (_1/1120 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1119 2)
              _2/1121 =[int]
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1119 1)
              _3/1122 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1119 0))
             (makeblock 0 _3/1122 _1/1120)))
         (function __caml_parser_env/1123
           (apply (field_imm 13 (global Stdlib__Parsing!))
             __caml_parser_env/1123 0))
         (function __caml_parser_env/1125
           (apply (field_imm 13 (global Stdlib__Parsing!))
             __caml_parser_env/1125 0))
         (function __caml_parser_env/1127
           (apply (field_imm 13 (global Stdlib__Parsing!))
             __caml_parser_env/1127 0))
         (function __caml_parser_env/1129 0)
         (function __caml_parser_env/1130 0)
         (function __caml_parser_env/1131 0)
         (function __caml_parser_env/1132
           (let
             (_1/1133 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1132 1)
              _2/1134 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1132 0))
             (makeblock 0 _1/1133 _2/1134)))
         (function __caml_parser_env/1135 0)
         (function __caml_parser_env/1136
           (let
             (_1/1137 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1136 4)
              _2/1138 =[int]
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1136 3)
              _3/1139 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1136 2)
              _4/1140 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1136 1)
              _5/1141 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1136 0)
              alias/1146 =
                (apply (field_imm 1 (global Dune__exe__Option!))
                  (field_imm 0 (global Dune__exe__Positions!)) _4/1140))
             (makeblock 0
               (apply (field_imm 7 (global Dune__exe__Positions!))
                 (function uid/1158
                   (makeblock 0 uid/1158 alias/1146 _5/1141))
                 _3/1139)
               _1/1137)))
         (function __caml_parser_env/1159 0)
         (function __caml_parser_env/1160
           (let
             (_1/1161 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1160 1)
              _2/1162 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1160 0))
             (makeblock 0 _2/1162 _1/1161)))
         (function __caml_parser_env/1163 0)
         (function __caml_parser_env/1164
           (let
             (_1/1165 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1164 0))
             (makeblock 0 _1/1165)))
         (function __caml_parser_env/1166 0)
         (function __caml_parser_env/1167
           (let
             (_1/1168 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1167 1)
              _2/1169 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1167 0))
             (makeblock 0 _2/1169 _1/1168)))
         (function __caml_parser_env/1170
           (apply (field_imm 13 (global Stdlib__Parsing!))
             __caml_parser_env/1170 1))
         (function __caml_parser_env/1172
           (let
             (_1/1173 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1172 7)
              _2/1174 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1172 6)
              _3/1175 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1172 5)
              _4/1176 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1172 4)
              _6/1177 =[int]
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1172 2)
              _7/1178 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1172 1)
              _8/1179 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1172 0))
             (makeblock 0 (int,int,*,*,*,*,*) (field_imm 0 _1/1173)
               (field_imm 1 _1/1173)
               (apply (field_imm 0 (global Dune__exe__Positions!)) _2/1174)
               (makeblock 0
                 (apply (field_imm 1 (global Dune__exe__Positions!)) _2/1174)
                 0)
               _3/1175 _4/1176
               (apply (field_imm 14 (global Stdlib__List!))
                 (makeblock 0 _7/1178
                   (apply (field_imm 9 (global Stdlib__List!)) _8/1179))))))
         (function __caml_parser_env/1182 [0: 0 0])
         (function __caml_parser_env/1183 [0: 1 0])
         (function __caml_parser_env/1184 [0: 0 1])
         (function __caml_parser_env/1185 [0: 1 1])
         (function __caml_parser_env/1186 [0: 1 1])
         (function __caml_parser_env/1187 0)
         (function __caml_parser_env/1188
           (apply (field_imm 13 (global Stdlib__Parsing!))
             __caml_parser_env/1188 1))
         (function __caml_parser_env/1190
           (let
             (_1/1191 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1190 0))
             (makeblock 0
               (apply (field_imm 0 (global Dune__exe__Positions!)) _1/1191)
               0)))
         (function __caml_parser_env/1192
           (let
             (_1/1193 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1192 2)
              _3/1194 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1192 0))
             (makeblock 0
               (apply (field_imm 0 (global Dune__exe__Positions!)) _1/1193)
               _3/1194)))
         (function __caml_parser_env/1195 0)
         (function __caml_parser_env/1196
           (apply (field_imm 13 (global Stdlib__Parsing!))
             __caml_parser_env/1196 1))
         (function __caml_parser_env/1198
           (let
             (_1/1199 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1198 0))
             (makeblock 0 _1/1199 0)))
         (function __caml_parser_env/1200
           (let
             (_1/1201 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1200 2)
              _3/1202 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1200 0))
             (makeblock 0 _1/1201 _3/1202)))
         (function __caml_parser_env/1203
           (let
             (_1/1204 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1203 1)
              _2/1205 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1203 0))
             (apply (field_imm 0 (global Dune__exe__Parameters!)) _1/1204
               _2/1205)))
         (function __caml_parser_env/1206
           (let
             (_1/1207 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1206 1)
              _2/1208 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1206 0))
             (makeblock 1 _2/1208 (makeblock 0 _1/1207 0))))
         (function __caml_parser_env/1209 0)
         (function __caml_parser_env/1210
           (let
             (_1/1211 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1210 2)
              _2/1212 =[int]
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1210 1)
              _3/1213 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1210 0))
             (makeblock 0 _3/1213 _1/1211)))
         (function __caml_parser_env/1214 0)
         (function __caml_parser_env/1215 0)
         (function __caml_parser_env/1216
           (apply (field_imm 6 (global Dune__exe__Positions!)) "option"))
         (function __caml_parser_env/1217
           (apply (field_imm 6 (global Dune__exe__Positions!))
             "nonempty_list"))
         (function __caml_parser_env/1218
           (apply (field_imm 6 (global Dune__exe__Positions!)) "list"))
         (function __caml_parser_env/1219 0)
         (function __caml_parser_env/1220
           (let
             (_1/1221 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1220 2)
              _3/1222 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1220 0))
             (makeblock 0 _3/1222 _1/1221)))
         (function __caml_parser_env/1223
           (let
             (_1/1224 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1223 2)
              _2/1225 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1223 1)
              _3/1226 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1223 0))
             (seq
               (apply (field_imm 3 (global Dune__exe__ParserAux!)) _1/1224)
               (apply (field_imm 19 (global Stdlib__List!))
                 (function (param/1956, param/1957, param/1958, param/1959)
                   (let
                     (pr_producers/1234 =
                        (apply (field_imm 4 (global Dune__exe__ParserAux!))
                          param/1956)
                      names/1235 =
                        (apply (field_imm 6 (global Dune__exe__ParserAux!))
                          param/1956)
                      pr_action/1236 =
                        (apply _2/1225
                          (field_imm 50 (global Dune__exe__Settings!))
                          names/1235))
                     (makeblock 0 param/1959 pr_producers/1234 pr_action/1236
                       (apply (field_imm 5 (global Dune__exe__ParserAux!))
                         param/1959 param/1957 _3/1226)
                       param/1958)))
                 _1/1224))))
         (function __caml_parser_env/1238 0)
         (function __caml_parser_env/1239
           (let
             (_2/1240 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1239 0))
             (makeblock 0 _2/1240)))
         (function __caml_parser_env/1241
           (let
             (_1/1242 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1241 0))
             (makeblock 0 _1/1242 0)))
         (function __caml_parser_env/1243
           (let
             (_1/1244 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1243 1)
              _2/1245 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1243 0))
             (makeblock 0 _1/1244 _2/1245)))
         (function __caml_parser_env/1246
           (let
             (_2/1247 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1246 0))
             (makeblock 0 _2/1247 0)))
         (function __caml_parser_env/1248
           (let
             (_2/1249 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1248 1)
              _3/1250 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1248 0))
             (makeblock 0 _2/1249 _3/1250)))
         (function __caml_parser_env/1251
           (let
             (_1/1252 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1251 1)
              _2/1253 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1251 0))
             (makeblock 0
               (apply (field_imm 9 (global Stdlib__List!)) _1/1252) _2/1253
               (apply (field_imm 1 (global Dune__exe__ParserAux!)) 0)
               (apply (field_imm 19 (global Dune__exe__Positions!))
                 (makeblock 0
                   (apply (field_imm 4 (global Stdlib__Parsing!)) 0)
                   (apply (field_imm 5 (global Stdlib__Parsing!)) 0))))))
         (function __caml_parser_env/1254 0)
         (function __caml_parser_env/1255
           (let
             (_1/1256 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1255 1)
              _2/1257 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1255 0))
             (makeblock 0 _2/1257 _1/1256)))
         (function __caml_parser_env/1258
           (let
             (_1/1259 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1258 2)
              _2/1260 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1258 1)
              _3/1261 =[int]
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1258 0))
             (makeblock 0
               (apply (field_imm 19 (global Dune__exe__Positions!))
                 (makeblock 0
                   (apply (field_imm 4 (global Stdlib__Parsing!)) 0)
                   (apply (field_imm 5 (global Stdlib__Parsing!)) 0)))
               0 _1/1259 _2/1260)))
         (function __caml_parser_env/1262
           (let
             (_1/1263 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1262 4)
              _3/1264 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1262 2)
              _4/1265 =
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1262 1)
              _5/1266 =[int]
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1262 0))
             (makeblock 0
               (apply (field_imm 19 (global Dune__exe__Positions!))
                 (makeblock 0
                   (apply (field_imm 4 (global Stdlib__Parsing!)) 0)
                   (apply (field_imm 5 (global Stdlib__Parsing!)) 0)))
               (makeblock 0 _1/1263) _3/1264 _4/1265)))
         (function __caml_parser_env/1267 0)
         (function __caml_parser_env/1268
           (let
             (_1/1269 =[int]
                (apply (field_imm 13 (global Stdlib__Parsing!))
                  __caml_parser_env/1268 1))
             0))
         (function __caml_parser_env/1270
           (raise
             (makeblock 0 (field_imm 11 (global Stdlib__Parsing!))
               (apply (field_imm 13 (global Stdlib__Parsing!))
                 __caml_parser_env/1270 0))))))
    (setfield_ptr(root-init) 15 (global Dune__exe__Parser!) yyact/744))
  (let
    (yytables/1271 =
       (makeblock 0 (*,*,*,*,*,*,*,*,*,*,int,*,*,*,*,*)
         (field_imm 15 (global Dune__exe__Parser!))
         (field_imm 1 (global Dune__exe__Parser!))
         (field_imm 2 (global Dune__exe__Parser!))
         (field_imm 3 (global Dune__exe__Parser!))
         (field_imm 4 (global Dune__exe__Parser!))
         (field_imm 5 (global Dune__exe__Parser!))
         (field_imm 6 (global Dune__exe__Parser!))
         (field_imm 7 (global Dune__exe__Parser!))
         (field_imm 8 (global Dune__exe__Parser!))
         (field_imm 9 (global Dune__exe__Parser!))
         (field_imm 10 (global Dune__exe__Parser!))
         (field_imm 11 (global Dune__exe__Parser!))
         (field_imm 12 (global Dune__exe__Parser!))
         (field_imm 15 (global Stdlib__Parsing!))
         (field_imm 13 (global Dune__exe__Parser!))
         (field_imm 14 (global Dune__exe__Parser!))))
    (setfield_ptr(root-init) 16 (global Dune__exe__Parser!) yytables/1271))
  (let
    (grammar/1272 =
       (function lexfun/1274 lexbuf/1275
         (apply (field_imm 12 (global Stdlib__Parsing!))
           (field_imm 16 (global Dune__exe__Parser!)) 1 lexfun/1274
           lexbuf/1275)))
    (setfield_ptr(root-init) 0 (global Dune__exe__Parser!) grammar/1272))
  0)
