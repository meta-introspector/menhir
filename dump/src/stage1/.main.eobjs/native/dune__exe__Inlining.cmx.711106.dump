[
  structure_item (src/inlining.ml[14,998+0]..[14,998+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[14,998+4]..[14,998+12])
          Ppat_var "position" (src/inlining.ml[14,998+4]..[14,998+12])
        expression (src/inlining.ml[14,998+15]..[14,998+33])
          Pexp_ident "Positions.position" (src/inlining.ml[14,998+15]..[14,998+33])
    ]
  structure_item (src/inlining.ml[15,1032+0]..[15,1032+12])
    Pstr_open Fresh
    module_expr (src/inlining.ml[15,1032+5]..[15,1032+12])
      Pmod_ident "Keyword" (src/inlining.ml[15,1032+5]..[15,1032+12])
  structure_item (src/inlining.ml[16,1045+0]..[16,1045+25])
    Pstr_type Rec
    [
      type_declaration "sw" (src/inlining.ml[16,1045+5]..[16,1045+7]) (src/inlining.ml[16,1045+0]..[16,1045+25])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/inlining.ml[16,1045+10]..[16,1045+25])
              Ptyp_tuple
              [
                core_type (src/inlining.ml[16,1045+10]..[16,1045+17])
                  Ptyp_constr "subject" (src/inlining.ml[16,1045+10]..[16,1045+17])
                  []
                core_type (src/inlining.ml[16,1045+20]..[16,1045+25])
                  Ptyp_constr "where" (src/inlining.ml[16,1045+20]..[16,1045+25])
                  []
              ]
    ]
  structure_item (src/inlining.ml[17,1071+0]..[17,1071+16])
    Pstr_open Fresh
    module_expr (src/inlining.ml[17,1071+5]..[17,1071+16])
      Pmod_ident "BasicSyntax" (src/inlining.ml[17,1071+5]..[17,1071+16])
  structure_item (src/inlining.ml[18,1088+0]..[18,1088+14])
    Pstr_open Fresh
    module_expr (src/inlining.ml[18,1088+5]..[18,1088+14])
      Pmod_ident "ListMonad" (src/inlining.ml[18,1088+5]..[18,1088+14])
  structure_item (src/inlining.ml[19,1103+0]..[19,1103+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[19,1103+4]..[19,1103+8])
          Ppat_var "drop" (src/inlining.ml[19,1103+4]..[19,1103+8])
        expression (src/inlining.ml[19,1103+11]..[19,1103+33])
          Pexp_ident "MenhirLib.General.drop" (src/inlining.ml[19,1103+11]..[19,1103+33])
    ]
  structure_item (src/inlining.ml[20,1137+0]..[20,1137+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[20,1137+4]..[20,1137+8])
          Ppat_var "take" (src/inlining.ml[20,1137+4]..[20,1137+8])
        expression (src/inlining.ml[20,1137+11]..[20,1137+33])
          Pexp_ident "MenhirLib.General.take" (src/inlining.ml[20,1137+11]..[20,1137+33])
    ]
  structure_item (src/inlining.ml[35,1818+0]..[40,1949+52])
    Pstr_value Rec
    [
      <def>
        pattern (src/inlining.ml[35,1818+8]..[35,1818+14])
          Ppat_var "search" (src/inlining.ml[35,1818+8]..[35,1818+14])
        expression (src/inlining.ml[35,1818+15]..[40,1949+52]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/inlining.ml[35,1818+15]..[35,1818+31])
            Ppat_constraint
            pattern (src/inlining.ml[35,1818+16]..[35,1818+17])
              Ppat_var "p" (src/inlining.ml[35,1818+16]..[35,1818+17])
            core_type (src/inlining.ml[35,1818+20]..[35,1818+30])
              Ptyp_arrow
              Nolabel
              core_type (src/inlining.ml[35,1818+20]..[35,1818+22])
                Ptyp_var a
              core_type (src/inlining.ml[35,1818+26]..[35,1818+30])
                Ptyp_constr "bool" (src/inlining.ml[35,1818+26]..[35,1818+30])
                []
          expression (src/inlining.ml[35,1818+32]..[40,1949+52]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/inlining.ml[35,1818+32]..[35,1818+41])
              Ppat_constraint
              pattern (src/inlining.ml[35,1818+33]..[35,1818+34])
                Ppat_var "i" (src/inlining.ml[35,1818+33]..[35,1818+34])
              core_type (src/inlining.ml[35,1818+37]..[35,1818+40])
                Ptyp_constr "int" (src/inlining.ml[35,1818+37]..[35,1818+40])
                []
            expression (src/inlining.ml[35,1818+42]..[40,1949+52]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/inlining.ml[35,1818+42]..[35,1818+56])
                Ppat_constraint
                pattern (src/inlining.ml[35,1818+43]..[35,1818+45])
                  Ppat_var "xs" (src/inlining.ml[35,1818+43]..[35,1818+45])
                core_type (src/inlining.ml[35,1818+48]..[35,1818+55])
                  Ptyp_constr "list" (src/inlining.ml[35,1818+51]..[35,1818+55])
                  [
                    core_type (src/inlining.ml[35,1818+48]..[35,1818+50])
                      Ptyp_var a
                  ]
              expression (src/inlining.ml[35,1818+57]..[40,1949+52])
                Pexp_constraint
                expression (src/inlining.ml[36,1897+2]..[40,1949+52])
                  Pexp_match
                  expression (src/inlining.ml[36,1897+8]..[36,1897+10])
                    Pexp_ident "xs" (src/inlining.ml[36,1897+8]..[36,1897+10])
                  [
                    <case>
                      pattern (src/inlining.ml[37,1913+4]..[37,1913+6])
                        Ppat_construct "[]" (src/inlining.ml[37,1913+4]..[37,1913+6])
                        None
                      expression (src/inlining.ml[38,1923+6]..[38,1923+10])
                        Pexp_construct "None" (src/inlining.ml[38,1923+6]..[38,1923+10])
                        None
                    <case>
                      pattern (src/inlining.ml[39,1934+4]..[39,1934+11])
                        Ppat_construct "::" (src/inlining.ml[39,1934+6]..[39,1934+8])
                        Some
                          []
                          pattern (src/inlining.ml[39,1934+4]..[39,1934+11]) ghost
                            Ppat_tuple
                            [
                              pattern (src/inlining.ml[39,1934+4]..[39,1934+5])
                                Ppat_var "x" (src/inlining.ml[39,1934+4]..[39,1934+5])
                              pattern (src/inlining.ml[39,1934+9]..[39,1934+11])
                                Ppat_var "xs" (src/inlining.ml[39,1934+9]..[39,1934+11])
                            ]
                      expression (src/inlining.ml[40,1949+6]..[40,1949+52])
                        Pexp_ifthenelse
                        expression (src/inlining.ml[40,1949+9]..[40,1949+12])
                          Pexp_apply
                          expression (src/inlining.ml[40,1949+9]..[40,1949+10])
                            Pexp_ident "p" (src/inlining.ml[40,1949+9]..[40,1949+10])
                          [
                            <arg>
                            Nolabel
                              expression (src/inlining.ml[40,1949+11]..[40,1949+12])
                                Pexp_ident "x" (src/inlining.ml[40,1949+11]..[40,1949+12])
                          ]
                        expression (src/inlining.ml[40,1949+18]..[40,1949+29])
                          Pexp_construct "Some" (src/inlining.ml[40,1949+18]..[40,1949+22])
                          Some
                            expression (src/inlining.ml[40,1949+23]..[40,1949+29])
                              Pexp_tuple
                              [
                                expression (src/inlining.ml[40,1949+24]..[40,1949+25])
                                  Pexp_ident "i" (src/inlining.ml[40,1949+24]..[40,1949+25])
                                expression (src/inlining.ml[40,1949+27]..[40,1949+28])
                                  Pexp_ident "x" (src/inlining.ml[40,1949+27]..[40,1949+28])
                              ]
                        Some
                          expression (src/inlining.ml[40,1949+35]..[40,1949+52])
                            Pexp_apply
                            expression (src/inlining.ml[40,1949+35]..[40,1949+41])
                              Pexp_ident "search" (src/inlining.ml[40,1949+35]..[40,1949+41])
                            [
                              <arg>
                              Nolabel
                                expression (src/inlining.ml[40,1949+42]..[40,1949+43])
                                  Pexp_ident "p" (src/inlining.ml[40,1949+42]..[40,1949+43])
                              <arg>
                              Nolabel
                                expression (src/inlining.ml[40,1949+44]..[40,1949+49])
                                  Pexp_apply
                                  expression (src/inlining.ml[40,1949+46]..[40,1949+47])
                                    Pexp_ident "+" (src/inlining.ml[40,1949+46]..[40,1949+47])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/inlining.ml[40,1949+45]..[40,1949+46])
                                        Pexp_ident "i" (src/inlining.ml[40,1949+45]..[40,1949+46])
                                    <arg>
                                    Nolabel
                                      expression (src/inlining.ml[40,1949+47]..[40,1949+48])
                                        Pexp_constant PConst_int (1,None)
                                  ]
                              <arg>
                              Nolabel
                                expression (src/inlining.ml[40,1949+50]..[40,1949+52])
                                  Pexp_ident "xs" (src/inlining.ml[40,1949+50]..[40,1949+52])
                            ]
                  ]
                core_type (src/inlining.ml[35,1818+59]..[35,1818+76])
                  Ptyp_constr "option" (src/inlining.ml[35,1818+70]..[35,1818+76])
                  [
                    core_type (src/inlining.ml[35,1818+60]..[35,1818+68])
                      Ptyp_tuple
                      [
                        core_type (src/inlining.ml[35,1818+60]..[35,1818+63])
                          Ptyp_constr "int" (src/inlining.ml[35,1818+60]..[35,1818+63])
                          []
                        core_type (src/inlining.ml[35,1818+66]..[35,1818+68])
                          Ptyp_var a
                      ]
                  ]
    ]
  structure_item (src/inlining.ml[46,2239+0]..[47,2262+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[46,2239+4]..[46,2239+13])
          Ppat_var "search_at" (src/inlining.ml[46,2239+4]..[46,2239+13])
        expression (src/inlining.ml[46,2239+14]..[47,2262+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/inlining.ml[46,2239+14]..[46,2239+15])
            Ppat_var "p" (src/inlining.ml[46,2239+14]..[46,2239+15])
          expression (src/inlining.ml[46,2239+16]..[47,2262+24]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/inlining.ml[46,2239+16]..[46,2239+17])
              Ppat_var "i" (src/inlining.ml[46,2239+16]..[46,2239+17])
            expression (src/inlining.ml[46,2239+18]..[47,2262+24]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/inlining.ml[46,2239+18]..[46,2239+20])
                Ppat_var "xs" (src/inlining.ml[46,2239+18]..[46,2239+20])
              expression (src/inlining.ml[47,2262+2]..[47,2262+24])
                Pexp_apply
                expression (src/inlining.ml[47,2262+2]..[47,2262+8])
                  Pexp_ident "search" (src/inlining.ml[47,2262+2]..[47,2262+8])
                [
                  <arg>
                  Nolabel
                    expression (src/inlining.ml[47,2262+9]..[47,2262+10])
                      Pexp_ident "p" (src/inlining.ml[47,2262+9]..[47,2262+10])
                  <arg>
                  Nolabel
                    expression (src/inlining.ml[47,2262+11]..[47,2262+12])
                      Pexp_ident "i" (src/inlining.ml[47,2262+11]..[47,2262+12])
                  <arg>
                  Nolabel
                    expression (src/inlining.ml[47,2262+13]..[47,2262+24])
                      Pexp_apply
                      expression (src/inlining.ml[47,2262+14]..[47,2262+18])
                        Pexp_ident "drop" (src/inlining.ml[47,2262+14]..[47,2262+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/inlining.ml[47,2262+19]..[47,2262+20])
                            Pexp_ident "i" (src/inlining.ml[47,2262+19]..[47,2262+20])
                        <arg>
                        Nolabel
                          expression (src/inlining.ml[47,2262+21]..[47,2262+23])
                            Pexp_ident "xs" (src/inlining.ml[47,2262+21]..[47,2262+23])
                      ]
                ]
    ]
  structure_item (src/inlining.ml[54,2507+0]..[59,2636+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[54,2507+4]..[54,2507+8])
          Ppat_var "find" (src/inlining.ml[54,2507+4]..[54,2507+8])
        expression (src/inlining.ml[54,2507+9]..[59,2636+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/inlining.ml[54,2507+9]..[54,2507+16])
            Ppat_var "grammar" (src/inlining.ml[54,2507+9]..[54,2507+16])
          expression (src/inlining.ml[54,2507+17]..[59,2636+16]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/inlining.ml[54,2507+17]..[54,2507+23])
              Ppat_var "symbol" (src/inlining.ml[54,2507+17]..[54,2507+23])
            expression (src/inlining.ml[54,2507+24]..[59,2636+16])
              Pexp_constraint
              expression (src/inlining.ml[55,2540+2]..[59,2636+16])
                Pexp_try
                expression (src/inlining.ml[56,2546+4]..[56,2546+39])
                  Pexp_apply
                  expression (src/inlining.ml[56,2546+4]..[56,2546+18])
                    Pexp_ident "StringMap.find" (src/inlining.ml[56,2546+4]..[56,2546+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/inlining.ml[56,2546+19]..[56,2546+25])
                        Pexp_ident "symbol" (src/inlining.ml[56,2546+19]..[56,2546+25])
                    <arg>
                    Nolabel
                      expression (src/inlining.ml[56,2546+26]..[56,2546+39])
                        Pexp_field
                        expression (src/inlining.ml[56,2546+26]..[56,2546+33])
                          Pexp_ident "grammar" (src/inlining.ml[56,2546+26]..[56,2546+33])
                        "rules" (src/inlining.ml[56,2546+34]..[56,2546+39])
                  ]
                [
                  <case>
                    pattern (src/inlining.ml[57,2586+7]..[57,2586+16])
                      Ppat_construct "Not_found" (src/inlining.ml[57,2586+7]..[57,2586+16])
                      None
                    expression (src/inlining.ml[59,2636+4]..[59,2636+16])
                      Pexp_assert
                      expression (src/inlining.ml[59,2636+11]..[59,2636+16])
                        Pexp_construct "false" (src/inlining.ml[59,2636+11]..[59,2636+16])
                        None
                ]
              core_type (src/inlining.ml[54,2507+26]..[54,2507+30])
                Ptyp_constr "rule" (src/inlining.ml[54,2507+26]..[54,2507+30])
                []
    ]
  structure_item (src/inlining.ml[67,2968+0]..[76,3259+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[67,2968+4]..[67,2968+32])
          Ppat_var "check_no_producer_attributes" (src/inlining.ml[67,2968+4]..[67,2968+32])
        expression (src/inlining.ml[67,2968+33]..[76,3259+34]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/inlining.ml[67,2968+33]..[67,2968+41])
            Ppat_var "producer" (src/inlining.ml[67,2968+33]..[67,2968+41])
          expression (src/inlining.ml[68,3012+2]..[76,3259+34])
            Pexp_match
            expression (src/inlining.ml[68,3012+8]..[68,3012+36])
              Pexp_apply
              expression (src/inlining.ml[68,3012+8]..[68,3012+27])
                Pexp_ident "producer_attributes" (src/inlining.ml[68,3012+8]..[68,3012+27])
              [
                <arg>
                Nolabel
                  expression (src/inlining.ml[68,3012+28]..[68,3012+36])
                    Pexp_ident "producer" (src/inlining.ml[68,3012+28]..[68,3012+36])
              ]
            [
              <case>
                pattern (src/inlining.ml[69,3054+4]..[69,3054+6])
                  Ppat_construct "[]" (src/inlining.ml[69,3054+4]..[69,3054+6])
                  None
                expression (src/inlining.ml[70,3064+6]..[70,3064+8])
                  Pexp_construct "()" (src/inlining.ml[70,3064+6]..[70,3064+8])
                  None
              <case>
                pattern (src/inlining.ml[71,3073+4]..[71,3073+33])
                  Ppat_construct "::" (src/inlining.ml[71,3073+19]..[71,3073+21])
                  Some
                    []
                    pattern (src/inlining.ml[71,3073+4]..[71,3073+33]) ghost
                      Ppat_tuple
                      [
                        pattern (src/inlining.ml[71,3073+4]..[71,3073+18])
                          Ppat_tuple
                          [
                            pattern (src/inlining.ml[71,3073+5]..[71,3073+7])
                              Ppat_var "id" (src/inlining.ml[71,3073+5]..[71,3073+7])
                            pattern (src/inlining.ml[71,3073+9]..[71,3073+17])
                              Ppat_var "_payload" (src/inlining.ml[71,3073+9]..[71,3073+17])
                          ]
                        pattern (src/inlining.ml[71,3073+22]..[71,3073+33])
                          Ppat_var "_attributes" (src/inlining.ml[71,3073+22]..[71,3073+33])
                      ]
                expression (src/inlining.ml[72,3110+6]..[76,3259+34])
                  Pexp_apply
                  expression (src/inlining.ml[72,3110+6]..[72,3110+17])
                    Pexp_ident "Error.error" (src/inlining.ml[72,3110+6]..[72,3110+17])
                  [
                    <arg>
                    Nolabel
                      expression (src/inlining.ml[73,3128+8]..[73,3128+21])
                        Pexp_construct "::" (src/inlining.ml[73,3128+9]..[73,3128+21]) ghost
                        Some
                          expression (src/inlining.ml[73,3128+9]..[73,3128+21]) ghost
                            Pexp_tuple
                            [
                              expression (src/inlining.ml[73,3128+9]..[73,3128+20])
                                Pexp_apply
                                expression (src/inlining.ml[73,3128+9]..[73,3128+17])
                                  Pexp_ident "position" (src/inlining.ml[73,3128+9]..[73,3128+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/inlining.ml[73,3128+18]..[73,3128+20])
                                      Pexp_ident "id" (src/inlining.ml[73,3128+18]..[73,3128+20])
                                ]
                              expression (src/inlining.ml[73,3128+20]..[73,3128+21]) ghost
                                Pexp_construct "[]" (src/inlining.ml[73,3128+20]..[73,3128+21]) ghost
                                None
                            ]
                    <arg>
                    Nolabel
                      expression (src/inlining.ml[74,3150+8]..[75,3210+48])
                        Pexp_constant PConst_string("the nonterminal symbol %s is declared %%inline.\nA use of it cannot carry an attribute.",(src/inlining.ml[74,3150+9]..[75,3210+47]),None)
                    <arg>
                    Nolabel
                      expression (src/inlining.ml[76,3259+8]..[76,3259+34])
                        Pexp_apply
                        expression (src/inlining.ml[76,3259+9]..[76,3259+24])
                          Pexp_ident "producer_symbol" (src/inlining.ml[76,3259+9]..[76,3259+24])
                        [
                          <arg>
                          Nolabel
                            expression (src/inlining.ml[76,3259+25]..[76,3259+33])
                              Pexp_ident "producer" (src/inlining.ml[76,3259+25]..[76,3259+33])
                        ]
                  ]
            ]
    ]
  structure_item (src/inlining.ml[86,3723+0]..[108,4750+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[86,3723+4]..[86,3723+21])
          Ppat_var "check_prec_inline" (src/inlining.ml[86,3723+4]..[86,3723+21])
        expression (src/inlining.ml[86,3723+22]..[108,4750+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/inlining.ml[86,3723+22]..[86,3723+28])
            Ppat_var "caller" (src/inlining.ml[86,3723+22]..[86,3723+28])
          expression (src/inlining.ml[86,3723+29]..[108,4750+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/inlining.ml[86,3723+29]..[86,3723+37])
              Ppat_var "producer" (src/inlining.ml[86,3723+29]..[86,3723+37])
            expression (src/inlining.ml[86,3723+38]..[108,4750+3]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/inlining.ml[86,3723+38]..[86,3723+45])
                Ppat_var "nsuffix" (src/inlining.ml[86,3723+38]..[86,3723+45])
              expression (src/inlining.ml[86,3723+46]..[108,4750+3]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (src/inlining.ml[86,3723+46]..[86,3723+52])
                  Ppat_var "callee" (src/inlining.ml[86,3723+46]..[86,3723+52])
                expression (src/inlining.ml[87,3778+2]..[108,4750+3])
                  Pexp_apply
                  expression (src/inlining.ml[87,3778+32]..[87,3778+34])
                    Pexp_ident "|>" (src/inlining.ml[87,3778+32]..[87,3778+34])
                  [
                    <arg>
                    Nolabel
                      expression (src/inlining.ml[87,3778+2]..[87,3778+31])
                        Pexp_field
                        expression (src/inlining.ml[87,3778+2]..[87,3778+8])
                          Pexp_ident "callee" (src/inlining.ml[87,3778+2]..[87,3778+8])
                        "branch_prec_annotation" (src/inlining.ml[87,3778+9]..[87,3778+31])
                    <arg>
                    Nolabel
                      expression (src/inlining.ml[87,3778+35]..[108,4750+3])
                        Pexp_apply
                        expression (src/inlining.ml[87,3778+35]..[87,3778+46])
                          Pexp_ident "Option.iter" (src/inlining.ml[87,3778+35]..[87,3778+46])
                        [
                          <arg>
                          Nolabel
                            expression (src/inlining.ml[87,3778+47]..[108,4750+3])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/inlining.ml[87,3778+52]..[87,3778+63])
                                Ppat_var "callee_prec" (src/inlining.ml[87,3778+52]..[87,3778+63])
                              expression (src/inlining.ml[90,3919+4]..[107,4744+5])
                                Pexp_sequence
                                expression (src/inlining.ml[90,3919+4]..[97,4269+7])
                                  Pexp_ifthenelse
                                  expression (src/inlining.ml[90,3919+7]..[90,3919+18])
                                    Pexp_apply
                                    expression (src/inlining.ml[90,3919+15]..[90,3919+16])
                                      Pexp_ident ">" (src/inlining.ml[90,3919+15]..[90,3919+16])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/inlining.ml[90,3919+7]..[90,3919+14])
                                          Pexp_ident "nsuffix" (src/inlining.ml[90,3919+7]..[90,3919+14])
                                      <arg>
                                      Nolabel
                                        expression (src/inlining.ml[90,3919+17]..[90,3919+18])
                                          Pexp_constant PConst_int (0,None)
                                    ]
                                  expression (src/inlining.ml[90,3919+24]..[97,4269+7])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/inlining.ml[91,3949+10]..[91,3949+16])
                                          Ppat_var "symbol" (src/inlining.ml[91,3949+10]..[91,3949+16])
                                        expression (src/inlining.ml[91,3949+19]..[91,3949+43])
                                          Pexp_apply
                                          expression (src/inlining.ml[91,3949+19]..[91,3949+34])
                                            Pexp_ident "producer_symbol" (src/inlining.ml[91,3949+19]..[91,3949+34])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/inlining.ml[91,3949+35]..[91,3949+43])
                                                Pexp_ident "producer" (src/inlining.ml[91,3949+35]..[91,3949+43])
                                          ]
                                    ]
                                    expression (src/inlining.ml[92,3996+6]..[96,4247+21])
                                      Pexp_apply
                                      expression (src/inlining.ml[92,3996+6]..[92,3996+17])
                                        Pexp_ident "Error.error" (src/inlining.ml[92,3996+6]..[92,3996+17])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/inlining.ml[92,3996+18]..[92,3996+66])
                                            Pexp_construct "::" (src/inlining.ml[92,3996+20]..[92,3996+66]) ghost
                                            Some
                                              expression (src/inlining.ml[92,3996+20]..[92,3996+66]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (src/inlining.ml[92,3996+20]..[92,3996+40])
                                                    Pexp_apply
                                                    expression (src/inlining.ml[92,3996+20]..[92,3996+28])
                                                      Pexp_ident "position" (src/inlining.ml[92,3996+20]..[92,3996+28])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/inlining.ml[92,3996+29]..[92,3996+40])
                                                          Pexp_ident "callee_prec" (src/inlining.ml[92,3996+29]..[92,3996+40])
                                                    ]
                                                  expression (src/inlining.ml[92,3996+42]..[92,3996+66]) ghost
                                                    Pexp_construct "::" (src/inlining.ml[92,3996+42]..[92,3996+66]) ghost
                                                    Some
                                                      expression (src/inlining.ml[92,3996+42]..[92,3996+66]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (src/inlining.ml[92,3996+42]..[92,3996+64])
                                                            Pexp_field
                                                            expression (src/inlining.ml[92,3996+42]..[92,3996+48])
                                                              Pexp_ident "caller" (src/inlining.ml[92,3996+42]..[92,3996+48])
                                                            "branch_position" (src/inlining.ml[92,3996+49]..[92,3996+64])
                                                          expression (src/inlining.ml[92,3996+65]..[92,3996+66]) ghost
                                                            Pexp_construct "[]" (src/inlining.ml[92,3996+65]..[92,3996+66]) ghost
                                                            None
                                                        ]
                                                ]
                                        <arg>
                                        Nolabel
                                          expression (src/inlining.ml[93,4063+8]..[95,4182+64])
                                            Pexp_constant PConst_string("this production carries a %%prec annotation,\nand the nonterminal symbol %s is marked %%inline.\nFor this reason, %s can be used only in tail position.",(src/inlining.ml[93,4063+9]..[95,4182+63]),None)
                                        <arg>
                                        Nolabel
                                          expression (src/inlining.ml[96,4247+8]..[96,4247+14])
                                            Pexp_ident "symbol" (src/inlining.ml[96,4247+8]..[96,4247+14])
                                        <arg>
                                        Nolabel
                                          expression (src/inlining.ml[96,4247+15]..[96,4247+21])
                                            Pexp_ident "symbol" (src/inlining.ml[96,4247+15]..[96,4247+21])
                                      ]
                                  None
                                expression (src/inlining.ml[99,4307+4]..[107,4744+5])
                                  Pexp_apply
                                  expression (src/inlining.ml[99,4307+34]..[99,4307+36])
                                    Pexp_ident "|>" (src/inlining.ml[99,4307+34]..[99,4307+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/inlining.ml[99,4307+4]..[99,4307+33])
                                        Pexp_field
                                        expression (src/inlining.ml[99,4307+4]..[99,4307+10])
                                          Pexp_ident "caller" (src/inlining.ml[99,4307+4]..[99,4307+10])
                                        "branch_prec_annotation" (src/inlining.ml[99,4307+11]..[99,4307+33])
                                    <arg>
                                    Nolabel
                                      expression (src/inlining.ml[99,4307+37]..[107,4744+5])
                                        Pexp_apply
                                        expression (src/inlining.ml[99,4307+37]..[99,4307+48])
                                          Pexp_ident "Option.iter" (src/inlining.ml[99,4307+37]..[99,4307+48])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/inlining.ml[99,4307+49]..[107,4744+5])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (src/inlining.ml[99,4307+54]..[99,4307+65])
                                                Ppat_var "caller_prec" (src/inlining.ml[99,4307+54]..[99,4307+65])
                                              expression (src/inlining.ml[100,4376+6]..[106,4722+21])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (src/inlining.ml[100,4376+10]..[100,4376+16])
                                                      Ppat_var "symbol" (src/inlining.ml[100,4376+10]..[100,4376+16])
                                                    expression (src/inlining.ml[100,4376+19]..[100,4376+43])
                                                      Pexp_apply
                                                      expression (src/inlining.ml[100,4376+19]..[100,4376+34])
                                                        Pexp_ident "producer_symbol" (src/inlining.ml[100,4376+19]..[100,4376+34])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/inlining.ml[100,4376+35]..[100,4376+43])
                                                            Pexp_ident "producer" (src/inlining.ml[100,4376+35]..[100,4376+43])
                                                      ]
                                                ]
                                                expression (src/inlining.ml[101,4423+6]..[106,4722+21])
                                                  Pexp_apply
                                                  expression (src/inlining.ml[101,4423+6]..[101,4423+17])
                                                    Pexp_ident "Error.error" (src/inlining.ml[101,4423+6]..[101,4423+17])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/inlining.ml[101,4423+18]..[101,4423+64])
                                                        Pexp_construct "::" (src/inlining.ml[101,4423+20]..[101,4423+64]) ghost
                                                        Some
                                                          expression (src/inlining.ml[101,4423+20]..[101,4423+64]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (src/inlining.ml[101,4423+20]..[101,4423+40])
                                                                Pexp_apply
                                                                expression (src/inlining.ml[101,4423+20]..[101,4423+28])
                                                                  Pexp_ident "position" (src/inlining.ml[101,4423+20]..[101,4423+28])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/inlining.ml[101,4423+29]..[101,4423+40])
                                                                      Pexp_ident "callee_prec" (src/inlining.ml[101,4423+29]..[101,4423+40])
                                                                ]
                                                              expression (src/inlining.ml[101,4423+42]..[101,4423+64]) ghost
                                                                Pexp_construct "::" (src/inlining.ml[101,4423+42]..[101,4423+64]) ghost
                                                                Some
                                                                  expression (src/inlining.ml[101,4423+42]..[101,4423+64]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (src/inlining.ml[101,4423+42]..[101,4423+62])
Pexp_apply
expression (src/inlining.ml[101,4423+42]..[101,4423+50])
  Pexp_ident "position" (src/inlining.ml[101,4423+42]..[101,4423+50])
[
  <arg>
  Nolabel
    expression (src/inlining.ml[101,4423+51]..[101,4423+62])
      Pexp_ident "caller_prec" (src/inlining.ml[101,4423+51]..[101,4423+62])
]
                                                                      expression (src/inlining.ml[101,4423+63]..[101,4423+64]) ghost
Pexp_construct "[]" (src/inlining.ml[101,4423+63]..[101,4423+64]) ghost
None
                                                                    ]
                                                            ]
                                                    <arg>
                                                    Nolabel
                                                      expression (src/inlining.ml[102,4488+8]..[105,4670+51])
                                                        Pexp_constant PConst_string("this production carries a %%prec annotation,\nand the nonterminal symbol %s is marked %%inline.\nFor this reason, %s cannot be used in a production\nwhich itself carries a %%prec annotation.",(src/inlining.ml[102,4488+9]..[105,4670+50]),None)
                                                    <arg>
                                                    Nolabel
                                                      expression (src/inlining.ml[106,4722+8]..[106,4722+14])
                                                        Pexp_ident "symbol" (src/inlining.ml[106,4722+8]..[106,4722+14])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/inlining.ml[106,4722+15]..[106,4722+21])
                                                        Pexp_ident "symbol" (src/inlining.ml[106,4722+15]..[106,4722+21])
                                                  ]
                                        ]
                                  ]
                        ]
                  ]
    ]
  structure_item (src/inlining.ml[117,5095+0]..[123,5296+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[117,5095+4]..[117,5095+29])
          Ppat_var "propagate_prec_annotation" (src/inlining.ml[117,5095+4]..[117,5095+29])
        expression (src/inlining.ml[117,5095+30]..[123,5296+35]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/inlining.ml[117,5095+30]..[117,5095+36])
            Ppat_var "caller" (src/inlining.ml[117,5095+30]..[117,5095+36])
          expression (src/inlining.ml[117,5095+37]..[123,5296+35]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/inlining.ml[117,5095+37]..[117,5095+43])
              Ppat_var "callee" (src/inlining.ml[117,5095+37]..[117,5095+43])
            expression (src/inlining.ml[118,5141+2]..[123,5296+35])
              Pexp_match
              expression (src/inlining.ml[118,5141+8]..[118,5141+37])
                Pexp_field
                expression (src/inlining.ml[118,5141+8]..[118,5141+14])
                  Pexp_ident "callee" (src/inlining.ml[118,5141+8]..[118,5141+14])
                "branch_prec_annotation" (src/inlining.ml[118,5141+15]..[118,5141+37])
              [
                <case>
                  pattern (src/inlining.ml[119,5184+4]..[119,5184+26])
                    Ppat_alias "annotation" (src/inlining.ml[119,5184+16]..[119,5184+26])
                    pattern (src/inlining.ml[119,5184+4]..[119,5184+12])
                      Ppat_construct "Some" (src/inlining.ml[119,5184+5]..[119,5184+9])
                      Some
                        []
                        pattern (src/inlining.ml[119,5184+10]..[119,5184+11])
                          Ppat_any
                  expression (src/inlining.ml[120,5214+6]..[121,5267+16])
                    Pexp_sequence
                    expression (src/inlining.ml[120,5214+6]..[120,5214+51])
                      Pexp_assert
                      expression (src/inlining.ml[120,5214+13]..[120,5214+51])
                        Pexp_apply
                        expression (src/inlining.ml[120,5214+44]..[120,5214+45])
                          Pexp_ident "=" (src/inlining.ml[120,5214+44]..[120,5214+45])
                        [
                          <arg>
                          Nolabel
                            expression (src/inlining.ml[120,5214+14]..[120,5214+43])
                              Pexp_field
                              expression (src/inlining.ml[120,5214+14]..[120,5214+20])
                                Pexp_ident "caller" (src/inlining.ml[120,5214+14]..[120,5214+20])
                              "branch_prec_annotation" (src/inlining.ml[120,5214+21]..[120,5214+43])
                          <arg>
                          Nolabel
                            expression (src/inlining.ml[120,5214+46]..[120,5214+50])
                              Pexp_construct "None" (src/inlining.ml[120,5214+46]..[120,5214+50])
                              None
                        ]
                    expression (src/inlining.ml[121,5267+6]..[121,5267+16])
                      Pexp_ident "annotation" (src/inlining.ml[121,5267+6]..[121,5267+16])
                <case>
                  pattern (src/inlining.ml[122,5284+4]..[122,5284+8])
                    Ppat_construct "None" (src/inlining.ml[122,5284+4]..[122,5284+8])
                    None
                  expression (src/inlining.ml[123,5296+6]..[123,5296+35])
                    Pexp_field
                    expression (src/inlining.ml[123,5296+6]..[123,5296+12])
                      Pexp_ident "caller" (src/inlining.ml[123,5296+6]..[123,5296+12])
                    "branch_prec_annotation" (src/inlining.ml[123,5296+13]..[123,5296+35])
              ]
    ]
  structure_item (src/inlining.ml[139,6123+0]..[141,6201+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[139,6123+4]..[139,6123+17])
          Ppat_var "new_candidate" (src/inlining.ml[139,6123+4]..[139,6123+17])
        expression (src/inlining.ml[139,6123+18]..[141,6201+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/inlining.ml[139,6123+18]..[139,6123+19])
            Ppat_var "x" (src/inlining.ml[139,6123+18]..[139,6123+19])
          expression (src/inlining.ml[140,6145+2]..[141,6201+41])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/inlining.ml[140,6145+6]..[140,6145+10])
                  Ppat_tuple
                  [
                    pattern (src/inlining.ml[140,6145+6]..[140,6145+7])
                      Ppat_var "x" (src/inlining.ml[140,6145+6]..[140,6145+7])
                    pattern (src/inlining.ml[140,6145+9]..[140,6145+10])
                      Ppat_var "n" (src/inlining.ml[140,6145+9]..[140,6145+10])
                  ]
                expression (src/inlining.ml[140,6145+13]..[140,6145+52])
                  Pexp_apply
                  expression (src/inlining.ml[140,6145+13]..[140,6145+29])
                    Pexp_ident "ChopInlined.chop" (src/inlining.ml[140,6145+13]..[140,6145+29])
                  [
                    <arg>
                    Nolabel
                      expression (src/inlining.ml[140,6145+30]..[140,6145+52])
                        Pexp_apply
                        expression (src/inlining.ml[140,6145+31]..[140,6145+49])
                          Pexp_ident "Lexing.from_string" (src/inlining.ml[140,6145+31]..[140,6145+49])
                        [
                          <arg>
                          Nolabel
                            expression (src/inlining.ml[140,6145+50]..[140,6145+51])
                              Pexp_ident "x" (src/inlining.ml[140,6145+50]..[140,6145+51])
                        ]
                  ]
            ]
            expression (src/inlining.ml[141,6201+2]..[141,6201+41])
              Pexp_apply
              expression (src/inlining.ml[141,6201+2]..[141,6201+16])
                Pexp_ident "Printf.sprintf" (src/inlining.ml[141,6201+2]..[141,6201+16])
              [
                <arg>
                Nolabel
                  expression (src/inlining.ml[141,6201+17]..[141,6201+31])
                    Pexp_constant PConst_string("%s_inlined%d",(src/inlining.ml[141,6201+18]..[141,6201+30]),None)
                <arg>
                Nolabel
                  expression (src/inlining.ml[141,6201+32]..[141,6201+33])
                    Pexp_ident "x" (src/inlining.ml[141,6201+32]..[141,6201+33])
                <arg>
                Nolabel
                  expression (src/inlining.ml[141,6201+34]..[141,6201+41])
                    Pexp_apply
                    expression (src/inlining.ml[141,6201+37]..[141,6201+38])
                      Pexp_ident "+" (src/inlining.ml[141,6201+37]..[141,6201+38])
                    [
                      <arg>
                      Nolabel
                        expression (src/inlining.ml[141,6201+35]..[141,6201+36])
                          Pexp_ident "n" (src/inlining.ml[141,6201+35]..[141,6201+36])
                      <arg>
                      Nolabel
                        expression (src/inlining.ml[141,6201+39]..[141,6201+40])
                          Pexp_constant PConst_int (1,None)
                    ]
              ]
    ]
  structure_item (src/inlining.ml[147,6419+0]..[148,6443+68])
    Pstr_value Rec
    [
      <def>
        pattern (src/inlining.ml[147,6419+8]..[147,6419+13])
          Ppat_var "fresh" (src/inlining.ml[147,6419+8]..[147,6419+13])
        expression (src/inlining.ml[147,6419+14]..[148,6443+68]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/inlining.ml[147,6419+14]..[147,6419+19])
            Ppat_var "names" (src/inlining.ml[147,6419+14]..[147,6419+19])
          expression (src/inlining.ml[147,6419+20]..[148,6443+68]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/inlining.ml[147,6419+20]..[147,6419+21])
              Ppat_var "x" (src/inlining.ml[147,6419+20]..[147,6419+21])
            expression (src/inlining.ml[148,6443+2]..[148,6443+68])
              Pexp_ifthenelse
              expression (src/inlining.ml[148,6443+5]..[148,6443+26])
                Pexp_apply
                expression (src/inlining.ml[148,6443+5]..[148,6443+18])
                  Pexp_ident "StringSet.mem" (src/inlining.ml[148,6443+5]..[148,6443+18])
                [
                  <arg>
                  Nolabel
                    expression (src/inlining.ml[148,6443+19]..[148,6443+20])
                      Pexp_ident "x" (src/inlining.ml[148,6443+19]..[148,6443+20])
                  <arg>
                  Nolabel
                    expression (src/inlining.ml[148,6443+21]..[148,6443+26])
                      Pexp_ident "names" (src/inlining.ml[148,6443+21]..[148,6443+26])
                ]
              expression (src/inlining.ml[148,6443+32]..[148,6443+61])
                Pexp_apply
                expression (src/inlining.ml[148,6443+32]..[148,6443+37])
                  Pexp_ident "fresh" (src/inlining.ml[148,6443+32]..[148,6443+37])
                [
                  <arg>
                  Nolabel
                    expression (src/inlining.ml[148,6443+38]..[148,6443+43])
                      Pexp_ident "names" (src/inlining.ml[148,6443+38]..[148,6443+43])
                  <arg>
                  Nolabel
                    expression (src/inlining.ml[148,6443+44]..[148,6443+61])
                      Pexp_apply
                      expression (src/inlining.ml[148,6443+45]..[148,6443+58])
                        Pexp_ident "new_candidate" (src/inlining.ml[148,6443+45]..[148,6443+58])
                      [
                        <arg>
                        Nolabel
                          expression (src/inlining.ml[148,6443+59]..[148,6443+60])
                            Pexp_ident "x" (src/inlining.ml[148,6443+59]..[148,6443+60])
                      ]
                ]
              Some
                expression (src/inlining.ml[148,6443+67]..[148,6443+68])
                  Pexp_ident "x" (src/inlining.ml[148,6443+67]..[148,6443+68])
    ]
  structure_item (src/inlining.ml[161,7113+0]..[176,7728+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[161,7113+4]..[161,7113+10])
          Ppat_var "rename" (src/inlining.ml[161,7113+4]..[161,7113+10])
        expression (src/inlining.ml[161,7113+11]..[176,7728+25]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/inlining.ml[161,7113+11]..[161,7113+31])
            Ppat_constraint
            pattern (src/inlining.ml[161,7113+12]..[161,7113+16])
              Ppat_var "used" (src/inlining.ml[161,7113+12]..[161,7113+16])
            core_type (src/inlining.ml[161,7113+19]..[161,7113+30])
              Ptyp_constr "StringSet.t" (src/inlining.ml[161,7113+19]..[161,7113+30])
              []
          expression (src/inlining.ml[161,7113+32]..[176,7728+25]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/inlining.ml[161,7113+32]..[161,7113+41])
              Ppat_var "producers" (src/inlining.ml[161,7113+32]..[161,7113+41])
            expression (src/inlining.ml[161,7113+41]..[176,7728+25])
              Pexp_constraint
              expression (src/inlining.ml[162,7183+2]..[176,7728+25])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/inlining.ml[162,7183+6]..[162,7183+27])
                      Ppat_tuple
                      [
                        pattern (src/inlining.ml[162,7183+6]..[162,7183+9])
                          Ppat_var "phi" (src/inlining.ml[162,7183+6]..[162,7183+9])
                        pattern (src/inlining.ml[162,7183+11]..[162,7183+16])
                          Ppat_var "_used" (src/inlining.ml[162,7183+11]..[162,7183+16])
                        pattern (src/inlining.ml[162,7183+18]..[162,7183+27])
                          Ppat_var "producers" (src/inlining.ml[162,7183+18]..[162,7183+27])
                      ]
                    expression (src/inlining.ml[163,7213+4]..[174,7682+40])
                      Pexp_apply
                      expression (src/inlining.ml[163,7213+4]..[163,7213+18])
                        Pexp_ident "List.fold_left" (src/inlining.ml[163,7213+4]..[163,7213+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/inlining.ml[163,7213+19]..[174,7682+5])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/inlining.ml[163,7213+24]..[163,7213+46])
                              Ppat_tuple
                              [
                                pattern (src/inlining.ml[163,7213+25]..[163,7213+28])
                                  Ppat_var "phi" (src/inlining.ml[163,7213+25]..[163,7213+28])
                                pattern (src/inlining.ml[163,7213+30]..[163,7213+34])
                                  Ppat_var "used" (src/inlining.ml[163,7213+30]..[163,7213+34])
                                pattern (src/inlining.ml[163,7213+36]..[163,7213+45])
                                  Ppat_var "producers" (src/inlining.ml[163,7213+36]..[163,7213+45])
                              ]
                            expression (src/inlining.ml[163,7213+47]..[173,7623+58]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/inlining.ml[163,7213+47]..[163,7213+55])
                                Ppat_var "producer" (src/inlining.ml[163,7213+47]..[163,7213+55])
                              expression (src/inlining.ml[164,7272+6]..[173,7623+58])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/inlining.ml[164,7272+10]..[164,7272+12])
                                      Ppat_var "id" (src/inlining.ml[164,7272+10]..[164,7272+12])
                                    expression (src/inlining.ml[164,7272+15]..[164,7272+51])
                                      Pexp_apply
                                      expression (src/inlining.ml[164,7272+15]..[164,7272+42])
                                        Pexp_ident "producer_identifier_located" (src/inlining.ml[164,7272+15]..[164,7272+42])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/inlining.ml[164,7272+43]..[164,7272+51])
                                            Pexp_ident "producer" (src/inlining.ml[164,7272+43]..[164,7272+51])
                                      ]
                                ]
                                expression (src/inlining.ml[165,7327+6]..[173,7623+58])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/inlining.ml[165,7327+10]..[165,7327+11])
                                        Ppat_var "x" (src/inlining.ml[165,7327+10]..[165,7327+11])
                                      expression (src/inlining.ml[165,7327+14]..[165,7327+32])
                                        Pexp_apply
                                        expression (src/inlining.ml[165,7327+14]..[165,7327+29])
                                          Pexp_ident "Positions.value" (src/inlining.ml[165,7327+14]..[165,7327+29])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/inlining.ml[165,7327+30]..[165,7327+32])
                                              Pexp_ident "id" (src/inlining.ml[165,7327+30]..[165,7327+32])
                                        ]
                                  ]
                                  expression (src/inlining.ml[166,7363+6]..[173,7623+58])
                                    Pexp_ifthenelse
                                    expression (src/inlining.ml[166,7363+9]..[166,7363+29])
                                      Pexp_apply
                                      expression (src/inlining.ml[166,7363+9]..[166,7363+22])
                                        Pexp_ident "StringSet.mem" (src/inlining.ml[166,7363+9]..[166,7363+22])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/inlining.ml[166,7363+23]..[166,7363+24])
                                            Pexp_ident "x" (src/inlining.ml[166,7363+23]..[166,7363+24])
                                        <arg>
                                        Nolabel
                                          expression (src/inlining.ml[166,7363+25]..[166,7363+29])
                                            Pexp_ident "used" (src/inlining.ml[166,7363+25]..[166,7363+29])
                                      ]
                                    expression (src/inlining.ml[167,7398+8]..[171,7547+64])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/inlining.ml[167,7398+12]..[167,7398+14])
                                            Ppat_var "x'" (src/inlining.ml[167,7398+12]..[167,7398+14])
                                          expression (src/inlining.ml[167,7398+17]..[167,7398+29])
                                            Pexp_apply
                                            expression (src/inlining.ml[167,7398+17]..[167,7398+22])
                                              Pexp_ident "fresh" (src/inlining.ml[167,7398+17]..[167,7398+22])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/inlining.ml[167,7398+23]..[167,7398+27])
                                                  Pexp_ident "used" (src/inlining.ml[167,7398+23]..[167,7398+27])
                                              <arg>
                                              Nolabel
                                                expression (src/inlining.ml[167,7398+28]..[167,7398+29])
                                                  Pexp_ident "x" (src/inlining.ml[167,7398+28]..[167,7398+29])
                                            ]
                                      ]
                                      expression (src/inlining.ml[168,7431+8]..[171,7547+64])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/inlining.ml[168,7431+12]..[168,7431+15])
                                              Ppat_var "id'" (src/inlining.ml[168,7431+12]..[168,7431+15])
                                            expression (src/inlining.ml[168,7431+18]..[168,7431+49])
                                              Pexp_apply
                                              expression (src/inlining.ml[168,7431+18]..[168,7431+31])
                                                Pexp_ident "Positions.map" (src/inlining.ml[168,7431+18]..[168,7431+31])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/inlining.ml[168,7431+32]..[168,7431+46])
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (src/inlining.ml[168,7431+37]..[168,7431+39])
                                                      Ppat_var "_x" (src/inlining.ml[168,7431+37]..[168,7431+39])
                                                    expression (src/inlining.ml[168,7431+43]..[168,7431+45])
                                                      Pexp_ident "x'" (src/inlining.ml[168,7431+43]..[168,7431+45])
                                                <arg>
                                                Nolabel
                                                  expression (src/inlining.ml[168,7431+47]..[168,7431+49])
                                                    Pexp_ident "id" (src/inlining.ml[168,7431+47]..[168,7431+49])
                                              ]
                                        ]
                                        expression (src/inlining.ml[169,7484+8]..[171,7547+64])
                                          Pexp_tuple
                                          [
                                            expression (src/inlining.ml[169,7484+8]..[169,7484+30])
                                              Pexp_apply
                                              expression (src/inlining.ml[169,7484+8]..[169,7484+21])
                                                Pexp_ident "Action.extend" (src/inlining.ml[169,7484+8]..[169,7484+21])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/inlining.ml[169,7484+22]..[169,7484+23])
                                                    Pexp_ident "x" (src/inlining.ml[169,7484+22]..[169,7484+23])
                                                <arg>
                                                Nolabel
                                                  expression (src/inlining.ml[169,7484+24]..[169,7484+26])
                                                    Pexp_ident "x'" (src/inlining.ml[169,7484+24]..[169,7484+26])
                                                <arg>
                                                Nolabel
                                                  expression (src/inlining.ml[169,7484+27]..[169,7484+30])
                                                    Pexp_ident "phi" (src/inlining.ml[169,7484+27]..[169,7484+30])
                                              ]
                                            expression (src/inlining.ml[170,7516+8]..[170,7516+29])
                                              Pexp_apply
                                              expression (src/inlining.ml[170,7516+8]..[170,7516+21])
                                                Pexp_ident "StringSet.add" (src/inlining.ml[170,7516+8]..[170,7516+21])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/inlining.ml[170,7516+22]..[170,7516+24])
                                                    Pexp_ident "x'" (src/inlining.ml[170,7516+22]..[170,7516+24])
                                                <arg>
                                                Nolabel
                                                  expression (src/inlining.ml[170,7516+25]..[170,7516+29])
                                                    Pexp_ident "used" (src/inlining.ml[170,7516+25]..[170,7516+29])
                                              ]
                                            expression (src/inlining.ml[171,7547+8]..[171,7547+64])
                                              Pexp_construct "::" (src/inlining.ml[171,7547+52]..[171,7547+54])
                                              Some
                                                expression (src/inlining.ml[171,7547+8]..[171,7547+64]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (src/inlining.ml[171,7547+8]..[171,7547+51])
                                                      Pexp_record
                                                      [
                                                        "producer_identifier" (src/inlining.ml[171,7547+24]..[171,7547+43])
                                                          expression (src/inlining.ml[171,7547+46]..[171,7547+49])
                                                            Pexp_ident "id'" (src/inlining.ml[171,7547+46]..[171,7547+49])
                                                      ]
                                                      Some
                                                        expression (src/inlining.ml[171,7547+10]..[171,7547+18])
                                                          Pexp_ident "producer" (src/inlining.ml[171,7547+10]..[171,7547+18])
                                                    expression (src/inlining.ml[171,7547+55]..[171,7547+64])
                                                      Pexp_ident "producers" (src/inlining.ml[171,7547+55]..[171,7547+64])
                                                  ]
                                          ]
                                    Some
                                      expression (src/inlining.ml[173,7623+8]..[173,7623+58])
                                        Pexp_tuple
                                        [
                                          expression (src/inlining.ml[173,7623+9]..[173,7623+12])
                                            Pexp_ident "phi" (src/inlining.ml[173,7623+9]..[173,7623+12])
                                          expression (src/inlining.ml[173,7623+14]..[173,7623+34])
                                            Pexp_apply
                                            expression (src/inlining.ml[173,7623+14]..[173,7623+27])
                                              Pexp_ident "StringSet.add" (src/inlining.ml[173,7623+14]..[173,7623+27])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/inlining.ml[173,7623+28]..[173,7623+29])
                                                  Pexp_ident "x" (src/inlining.ml[173,7623+28]..[173,7623+29])
                                              <arg>
                                              Nolabel
                                                expression (src/inlining.ml[173,7623+30]..[173,7623+34])
                                                  Pexp_ident "used" (src/inlining.ml[173,7623+30]..[173,7623+34])
                                            ]
                                          expression (src/inlining.ml[173,7623+36]..[173,7623+57])
                                            Pexp_construct "::" (src/inlining.ml[173,7623+45]..[173,7623+47])
                                            Some
                                              expression (src/inlining.ml[173,7623+36]..[173,7623+57]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (src/inlining.ml[173,7623+36]..[173,7623+44])
                                                    Pexp_ident "producer" (src/inlining.ml[173,7623+36]..[173,7623+44])
                                                  expression (src/inlining.ml[173,7623+48]..[173,7623+57])
                                                    Pexp_ident "producers" (src/inlining.ml[173,7623+48]..[173,7623+57])
                                                ]
                                        ]
                        <arg>
                        Nolabel
                          expression (src/inlining.ml[174,7682+6]..[174,7682+30])
                            Pexp_tuple
                            [
                              expression (src/inlining.ml[174,7682+7]..[174,7682+19])
                                Pexp_ident "Action.empty" (src/inlining.ml[174,7682+7]..[174,7682+19])
                              expression (src/inlining.ml[174,7682+21]..[174,7682+25])
                                Pexp_ident "used" (src/inlining.ml[174,7682+21]..[174,7682+25])
                              expression (src/inlining.ml[174,7682+27]..[174,7682+29])
                                Pexp_construct "[]" (src/inlining.ml[174,7682+27]..[174,7682+29])
                                None
                            ]
                        <arg>
                        Nolabel
                          expression (src/inlining.ml[174,7682+31]..[174,7682+40])
                            Pexp_ident "producers" (src/inlining.ml[174,7682+31]..[174,7682+40])
                      ]
                ]
                expression (src/inlining.ml[176,7728+2]..[176,7728+25])
                  Pexp_tuple
                  [
                    expression (src/inlining.ml[176,7728+2]..[176,7728+5])
                      Pexp_ident "phi" (src/inlining.ml[176,7728+2]..[176,7728+5])
                    expression (src/inlining.ml[176,7728+7]..[176,7728+25])
                      Pexp_apply
                      expression (src/inlining.ml[176,7728+7]..[176,7728+15])
                        Pexp_ident "List.rev" (src/inlining.ml[176,7728+7]..[176,7728+15])
                      [
                        <arg>
                        Nolabel
                          expression (src/inlining.ml[176,7728+16]..[176,7728+25])
                            Pexp_ident "producers" (src/inlining.ml[176,7728+16]..[176,7728+25])
                      ]
                  ]
              core_type (src/inlining.ml[161,7113+43]..[161,7113+67])
                Ptyp_tuple
                [
                  core_type (src/inlining.ml[161,7113+43]..[161,7113+55])
                    Ptyp_constr "Action.subst" (src/inlining.ml[161,7113+43]..[161,7113+55])
                    []
                  core_type (src/inlining.ml[161,7113+58]..[161,7113+67])
                    Ptyp_constr "producers" (src/inlining.ml[161,7113+58]..[161,7113+67])
                    []
                ]
    ]
  structure_item (src/inlining.ml[202,8703+0]..[254,10823+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[202,8703+4]..[202,8703+20])
          Ppat_var "define_positions" (src/inlining.ml[202,8703+4]..[202,8703+20])
        expression (src/inlining.ml[202,8703+21]..[254,10823+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/inlining.ml[202,8703+21]..[202,8703+42])
            Ppat_constraint
            pattern (src/inlining.ml[202,8703+22]..[202,8703+26])
              Ppat_var "name" (src/inlining.ml[202,8703+22]..[202,8703+26])
            core_type (src/inlining.ml[202,8703+29]..[202,8703+41])
              Ptyp_constr "array" (src/inlining.ml[202,8703+36]..[202,8703+41])
              [
                core_type (src/inlining.ml[202,8703+29]..[202,8703+35])
                  Ptyp_constr "string" (src/inlining.ml[202,8703+29]..[202,8703+35])
                  []
              ]
          expression (src/inlining.ml[202,8703+43]..[254,10823+26]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/inlining.ml[202,8703+43]..[202,8703+50])
              Ppat_var "nprefix" (src/inlining.ml[202,8703+43]..[202,8703+50])
            expression (src/inlining.ml[202,8703+51]..[254,10823+26]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/inlining.ml[202,8703+51]..[202,8703+58])
                Ppat_var "ncallee" (src/inlining.ml[202,8703+51]..[202,8703+58])
              expression (src/inlining.ml[202,8703+59]..[254,10823+26])
                Pexp_constraint
                expression (src/inlining.ml[204,8780+2]..[254,10823+26])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/inlining.ml[204,8780+6]..[204,8780+12])
                        Ppat_var "startp" (src/inlining.ml[204,8780+6]..[204,8780+12])
                      expression (src/inlining.ml[205,8795+4]..[222,9684+22])
                        Pexp_ifthenelse
                        expression (src/inlining.ml[205,8795+7]..[205,8795+18])
                          Pexp_apply
                          expression (src/inlining.ml[205,8795+15]..[205,8795+16])
                            Pexp_ident ">" (src/inlining.ml[205,8795+15]..[205,8795+16])
                          [
                            <arg>
                            Nolabel
                              expression (src/inlining.ml[205,8795+7]..[205,8795+14])
                                Pexp_ident "ncallee" (src/inlining.ml[205,8795+7]..[205,8795+14])
                            <arg>
                            Nolabel
                              expression (src/inlining.ml[205,8795+17]..[205,8795+18])
                                Pexp_constant PConst_int (0,None)
                          ]
                        expression (src/inlining.ml[209,8993+6]..[209,8993+43])
                          Pexp_tuple
                          [
                            expression (src/inlining.ml[209,8993+6]..[209,8993+31])
                              Pexp_construct "RightNamed" (src/inlining.ml[209,8993+6]..[209,8993+16])
                              Some
                                expression (src/inlining.ml[209,8993+17]..[209,8993+31])
                                  Pexp_apply
                                  expression (src/inlining.ml[209,8993+17]..[209,8993+31]) ghost
                                    Pexp_ident "Array.get" (src/inlining.ml[209,8993+17]..[209,8993+31]) ghost
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/inlining.ml[209,8993+17]..[209,8993+21])
                                        Pexp_ident "name" (src/inlining.ml[209,8993+17]..[209,8993+21])
                                    <arg>
                                    Nolabel
                                      expression (src/inlining.ml[209,8993+23]..[209,8993+30])
                                        Pexp_ident "nprefix" (src/inlining.ml[209,8993+23]..[209,8993+30])
                                  ]
                            expression (src/inlining.ml[209,8993+33]..[209,8993+43])
                              Pexp_construct "WhereStart" (src/inlining.ml[209,8993+33]..[209,8993+43])
                              None
                          ]
                        Some
                          expression (src/inlining.ml[210,9037+9]..[222,9684+22])
                            Pexp_ifthenelse
                            expression (src/inlining.ml[210,9037+12]..[210,9037+23])
                              Pexp_apply
                              expression (src/inlining.ml[210,9037+20]..[210,9037+21])
                                Pexp_ident ">" (src/inlining.ml[210,9037+20]..[210,9037+21])
                              [
                                <arg>
                                Nolabel
                                  expression (src/inlining.ml[210,9037+12]..[210,9037+19])
                                    Pexp_ident "nprefix" (src/inlining.ml[210,9037+12]..[210,9037+19])
                                <arg>
                                Nolabel
                                  expression (src/inlining.ml[210,9037+22]..[210,9037+23])
                                    Pexp_constant PConst_int (0,None)
                              ]
                            expression (src/inlining.ml[215,9310+6]..[215,9310+47])
                              Pexp_tuple
                              [
                                expression (src/inlining.ml[215,9310+6]..[215,9310+37])
                                  Pexp_construct "RightNamed" (src/inlining.ml[215,9310+6]..[215,9310+16])
                                  Some
                                    expression (src/inlining.ml[215,9310+17]..[215,9310+37])
                                      Pexp_apply
                                      expression (src/inlining.ml[215,9310+18]..[215,9310+36]) ghost
                                        Pexp_ident "Array.get" (src/inlining.ml[215,9310+18]..[215,9310+36]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/inlining.ml[215,9310+18]..[215,9310+22])
                                            Pexp_ident "name" (src/inlining.ml[215,9310+18]..[215,9310+22])
                                        <arg>
                                        Nolabel
                                          expression (src/inlining.ml[215,9310+24]..[215,9310+35])
                                            Pexp_apply
                                            expression (src/inlining.ml[215,9310+32]..[215,9310+33])
                                              Pexp_ident "-" (src/inlining.ml[215,9310+32]..[215,9310+33])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/inlining.ml[215,9310+24]..[215,9310+31])
                                                  Pexp_ident "nprefix" (src/inlining.ml[215,9310+24]..[215,9310+31])
                                              <arg>
                                              Nolabel
                                                expression (src/inlining.ml[215,9310+34]..[215,9310+35])
                                                  Pexp_constant PConst_int (1,None)
                                            ]
                                      ]
                                expression (src/inlining.ml[215,9310+39]..[215,9310+47])
                                  Pexp_construct "WhereEnd" (src/inlining.ml[215,9310+39]..[215,9310+47])
                                  None
                              ]
                            Some
                              expression (src/inlining.ml[222,9684+6]..[222,9684+22])
                                Pexp_tuple
                                [
                                  expression (src/inlining.ml[222,9684+6]..[222,9684+12])
                                    Pexp_construct "Before" (src/inlining.ml[222,9684+6]..[222,9684+12])
                                    None
                                  expression (src/inlining.ml[222,9684+14]..[222,9684+22])
                                    Pexp_construct "WhereEnd" (src/inlining.ml[222,9684+14]..[222,9684+22])
                                    None
                                ]
                  ]
                  expression (src/inlining.ml[231,9990+2]..[254,10823+26])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/inlining.ml[231,9990+6]..[231,9990+10])
                          Ppat_var "endp" (src/inlining.ml[231,9990+6]..[231,9990+10])
                        expression (src/inlining.ml[232,10003+4]..[239,10341+12])
                          Pexp_ifthenelse
                          expression (src/inlining.ml[232,10003+7]..[232,10003+18])
                            Pexp_apply
                            expression (src/inlining.ml[232,10003+15]..[232,10003+16])
                              Pexp_ident ">" (src/inlining.ml[232,10003+15]..[232,10003+16])
                            [
                              <arg>
                              Nolabel
                                expression (src/inlining.ml[232,10003+7]..[232,10003+14])
                                  Pexp_ident "ncallee" (src/inlining.ml[232,10003+7]..[232,10003+14])
                              <arg>
                              Nolabel
                                expression (src/inlining.ml[232,10003+17]..[232,10003+18])
                                  Pexp_constant PConst_int (0,None)
                            ]
                          expression (src/inlining.ml[235,10163+6]..[235,10163+57])
                            Pexp_tuple
                            [
                              expression (src/inlining.ml[235,10163+6]..[235,10163+47])
                                Pexp_construct "RightNamed" (src/inlining.ml[235,10163+6]..[235,10163+16])
                                Some
                                  expression (src/inlining.ml[235,10163+17]..[235,10163+47])
                                    Pexp_apply
                                    expression (src/inlining.ml[235,10163+18]..[235,10163+46]) ghost
                                      Pexp_ident "Array.get" (src/inlining.ml[235,10163+18]..[235,10163+46]) ghost
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/inlining.ml[235,10163+18]..[235,10163+22])
                                          Pexp_ident "name" (src/inlining.ml[235,10163+18]..[235,10163+22])
                                      <arg>
                                      Nolabel
                                        expression (src/inlining.ml[235,10163+24]..[235,10163+45])
                                          Pexp_apply
                                          expression (src/inlining.ml[235,10163+42]..[235,10163+43])
                                            Pexp_ident "-" (src/inlining.ml[235,10163+42]..[235,10163+43])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/inlining.ml[235,10163+24]..[235,10163+41])
                                                Pexp_apply
                                                expression (src/inlining.ml[235,10163+32]..[235,10163+33])
                                                  Pexp_ident "+" (src/inlining.ml[235,10163+32]..[235,10163+33])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/inlining.ml[235,10163+24]..[235,10163+31])
                                                      Pexp_ident "nprefix" (src/inlining.ml[235,10163+24]..[235,10163+31])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/inlining.ml[235,10163+34]..[235,10163+41])
                                                      Pexp_ident "ncallee" (src/inlining.ml[235,10163+34]..[235,10163+41])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (src/inlining.ml[235,10163+44]..[235,10163+45])
                                                Pexp_constant PConst_int (1,None)
                                          ]
                                    ]
                              expression (src/inlining.ml[235,10163+49]..[235,10163+57])
                                Pexp_construct "WhereEnd" (src/inlining.ml[235,10163+49]..[235,10163+57])
                                None
                            ]
                          Some
                            expression (src/inlining.ml[239,10341+6]..[239,10341+12])
                              Pexp_ident "startp" (src/inlining.ml[239,10341+6]..[239,10341+12])
                      <def>
                        pattern (src/inlining.ml[247,10694+6]..[247,10694+16])
                          Ppat_var "beforeendp" (src/inlining.ml[247,10694+6]..[247,10694+16])
                        expression (src/inlining.ml[248,10713+4]..[251,10794+22])
                          Pexp_ifthenelse
                          expression (src/inlining.ml[248,10713+7]..[248,10713+18])
                            Pexp_apply
                            expression (src/inlining.ml[248,10713+15]..[248,10713+16])
                              Pexp_ident ">" (src/inlining.ml[248,10713+15]..[248,10713+16])
                            [
                              <arg>
                              Nolabel
                                expression (src/inlining.ml[248,10713+7]..[248,10713+14])
                                  Pexp_ident "nprefix" (src/inlining.ml[248,10713+7]..[248,10713+14])
                              <arg>
                              Nolabel
                                expression (src/inlining.ml[248,10713+17]..[248,10713+18])
                                  Pexp_constant PConst_int (0,None)
                            ]
                          expression (src/inlining.ml[249,10737+6]..[249,10737+47])
                            Pexp_tuple
                            [
                              expression (src/inlining.ml[249,10737+6]..[249,10737+37])
                                Pexp_construct "RightNamed" (src/inlining.ml[249,10737+6]..[249,10737+16])
                                Some
                                  expression (src/inlining.ml[249,10737+17]..[249,10737+37])
                                    Pexp_apply
                                    expression (src/inlining.ml[249,10737+18]..[249,10737+36]) ghost
                                      Pexp_ident "Array.get" (src/inlining.ml[249,10737+18]..[249,10737+36]) ghost
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/inlining.ml[249,10737+18]..[249,10737+22])
                                          Pexp_ident "name" (src/inlining.ml[249,10737+18]..[249,10737+22])
                                      <arg>
                                      Nolabel
                                        expression (src/inlining.ml[249,10737+24]..[249,10737+35])
                                          Pexp_apply
                                          expression (src/inlining.ml[249,10737+32]..[249,10737+33])
                                            Pexp_ident "-" (src/inlining.ml[249,10737+32]..[249,10737+33])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/inlining.ml[249,10737+24]..[249,10737+31])
                                                Pexp_ident "nprefix" (src/inlining.ml[249,10737+24]..[249,10737+31])
                                            <arg>
                                            Nolabel
                                              expression (src/inlining.ml[249,10737+34]..[249,10737+35])
                                                Pexp_constant PConst_int (1,None)
                                          ]
                                    ]
                              expression (src/inlining.ml[249,10737+39]..[249,10737+47])
                                Pexp_construct "WhereEnd" (src/inlining.ml[249,10737+39]..[249,10737+47])
                                None
                            ]
                          Some
                            expression (src/inlining.ml[251,10794+6]..[251,10794+22])
                              Pexp_tuple
                              [
                                expression (src/inlining.ml[251,10794+6]..[251,10794+12])
                                  Pexp_construct "Before" (src/inlining.ml[251,10794+6]..[251,10794+12])
                                  None
                                expression (src/inlining.ml[251,10794+14]..[251,10794+22])
                                  Pexp_construct "WhereEnd" (src/inlining.ml[251,10794+14]..[251,10794+22])
                                  None
                              ]
                    ]
                    expression (src/inlining.ml[254,10823+2]..[254,10823+26])
                      Pexp_tuple
                      [
                        expression (src/inlining.ml[254,10823+2]..[254,10823+8])
                          Pexp_ident "startp" (src/inlining.ml[254,10823+2]..[254,10823+8])
                        expression (src/inlining.ml[254,10823+10]..[254,10823+14])
                          Pexp_ident "endp" (src/inlining.ml[254,10823+10]..[254,10823+14])
                        expression (src/inlining.ml[254,10823+16]..[254,10823+26])
                          Pexp_ident "beforeendp" (src/inlining.ml[254,10823+16]..[254,10823+26])
                      ]
                core_type (src/inlining.ml[202,8703+61]..[202,8703+73])
                  Ptyp_tuple
                  [
                    core_type (src/inlining.ml[202,8703+61]..[202,8703+63])
                      Ptyp_constr "sw" (src/inlining.ml[202,8703+61]..[202,8703+63])
                      []
                    core_type (src/inlining.ml[202,8703+66]..[202,8703+68])
                      Ptyp_constr "sw" (src/inlining.ml[202,8703+66]..[202,8703+68])
                      []
                    core_type (src/inlining.ml[202,8703+71]..[202,8703+73])
                      Ptyp_constr "sw" (src/inlining.ml[202,8703+71]..[202,8703+73])
                      []
                  ]
    ]
  structure_item (src/inlining.ml[262,11166+0]..[277,11655+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[262,11166+4]..[262,11166+19])
          Ppat_var "rename_sw_outer" (src/inlining.ml[262,11166+4]..[262,11166+19])
        expression (src/inlining.ml[262,11166+20]..[277,11655+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/inlining.ml[262,11166+20]..[262,11166+39])
            Ppat_tuple
            [
              pattern (src/inlining.ml[262,11166+21]..[262,11166+22])
                Ppat_var "x" (src/inlining.ml[262,11166+21]..[262,11166+22])
              pattern (src/inlining.ml[262,11166+24]..[262,11166+31])
                Ppat_var "startpx" (src/inlining.ml[262,11166+24]..[262,11166+31])
              pattern (src/inlining.ml[262,11166+33]..[262,11166+38])
                Ppat_var "endpx" (src/inlining.ml[262,11166+33]..[262,11166+38])
            ]
          expression (src/inlining.ml[262,11166+40]..[277,11655+18]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/inlining.ml[262,11166+40]..[262,11166+49])
              Ppat_constraint
              pattern (src/inlining.ml[262,11166+41]..[262,11166+43])
                Ppat_var "sw" (src/inlining.ml[262,11166+41]..[262,11166+43])
              core_type (src/inlining.ml[262,11166+46]..[262,11166+48])
                Ptyp_constr "sw" (src/inlining.ml[262,11166+46]..[262,11166+48])
                []
            expression (src/inlining.ml[262,11166+50]..[277,11655+18])
              Pexp_constraint
              expression (src/inlining.ml[263,11230+2]..[277,11655+18])
                Pexp_match
                expression (src/inlining.ml[263,11230+8]..[263,11230+10])
                  Pexp_ident "sw" (src/inlining.ml[263,11230+8]..[263,11230+10])
                [
                  <case>
                    pattern (src/inlining.ml[264,11246+4]..[264,11246+13])
                      Ppat_tuple
                      [
                        pattern (src/inlining.ml[264,11246+4]..[264,11246+10])
                          Ppat_construct "Before" (src/inlining.ml[264,11246+4]..[264,11246+10])
                          None
                        pattern (src/inlining.ml[264,11246+12]..[264,11246+13])
                          Ppat_any
                      ]
                    expression (src/inlining.ml[265,11263+6]..[265,11263+10])
                      Pexp_construct "None" (src/inlining.ml[265,11263+6]..[265,11263+10])
                      None
                  <case>
                    pattern (src/inlining.ml[266,11274+4]..[266,11274+24])
                      Ppat_tuple
                      [
                        pattern (src/inlining.ml[266,11274+4]..[266,11274+17])
                          Ppat_construct "RightNamed" (src/inlining.ml[266,11274+4]..[266,11274+14])
                          Some
                            []
                            pattern (src/inlining.ml[266,11274+15]..[266,11274+17])
                              Ppat_var "x'" (src/inlining.ml[266,11274+15]..[266,11274+17])
                        pattern (src/inlining.ml[266,11274+19]..[266,11274+24])
                          Ppat_var "where" (src/inlining.ml[266,11274+19]..[266,11274+24])
                      ]
                    expression (src/inlining.ml[267,11302+6]..[273,11503+12])
                      Pexp_ifthenelse
                      expression (src/inlining.ml[267,11302+9]..[267,11302+15])
                        Pexp_apply
                        expression (src/inlining.ml[267,11302+12]..[267,11302+13])
                          Pexp_ident "=" (src/inlining.ml[267,11302+12]..[267,11302+13])
                        [
                          <arg>
                          Nolabel
                            expression (src/inlining.ml[267,11302+9]..[267,11302+11])
                              Pexp_ident "x'" (src/inlining.ml[267,11302+9]..[267,11302+11])
                          <arg>
                          Nolabel
                            expression (src/inlining.ml[267,11302+14]..[267,11302+15])
                              Pexp_ident "x" (src/inlining.ml[267,11302+14]..[267,11302+15])
                        ]
                      expression (src/inlining.ml[268,11323+8]..[271,11420+42])
                        Pexp_match
                        expression (src/inlining.ml[268,11323+14]..[268,11323+19])
                          Pexp_ident "where" (src/inlining.ml[268,11323+14]..[268,11323+19])
                        [
                          <case>
                            pattern (src/inlining.ml[269,11348+10]..[269,11348+20])
                              Ppat_construct "WhereStart" (src/inlining.ml[269,11348+10]..[269,11348+20])
                              None
                            expression (src/inlining.ml[269,11348+24]..[269,11348+36])
                              Pexp_construct "Some" (src/inlining.ml[269,11348+24]..[269,11348+28])
                              Some
                                expression (src/inlining.ml[269,11348+29]..[269,11348+36])
                                  Pexp_ident "startpx" (src/inlining.ml[269,11348+29]..[269,11348+36])
                          <case>
                            pattern (src/inlining.ml[270,11385+10]..[270,11385+18])
                              Ppat_construct "WhereEnd" (src/inlining.ml[270,11385+10]..[270,11385+18])
                              None
                            expression (src/inlining.ml[270,11385+24]..[270,11385+34])
                              Pexp_construct "Some" (src/inlining.ml[270,11385+24]..[270,11385+28])
                              Some
                                expression (src/inlining.ml[270,11385+29]..[270,11385+34])
                                  Pexp_ident "endpx" (src/inlining.ml[270,11385+29]..[270,11385+34])
                          <case>
                            pattern (src/inlining.ml[271,11420+10]..[271,11420+26])
                              Ppat_construct "WhereSymbolStart" (src/inlining.ml[271,11420+10]..[271,11420+26])
                              None
                            expression (src/inlining.ml[271,11420+30]..[271,11420+42])
                              Pexp_assert
                              expression (src/inlining.ml[271,11420+37]..[271,11420+42])
                                Pexp_construct "false" (src/inlining.ml[271,11420+37]..[271,11420+42])
                                None
                        ]
                      Some
                        expression (src/inlining.ml[273,11503+8]..[273,11503+12])
                          Pexp_construct "None" (src/inlining.ml[273,11503+8]..[273,11503+12])
                          None
                  <case>
                    pattern (src/inlining.ml[274,11516+4]..[274,11516+11])
                      Ppat_tuple
                      [
                        pattern (src/inlining.ml[274,11516+4]..[274,11516+8])
                          Ppat_construct "Left" (src/inlining.ml[274,11516+4]..[274,11516+8])
                          None
                        pattern (src/inlining.ml[274,11516+10]..[274,11516+11])
                          Ppat_any
                      ]
                    expression (src/inlining.ml[277,11655+6]..[277,11655+18])
                      Pexp_assert
                      expression (src/inlining.ml[277,11655+13]..[277,11655+18])
                        Pexp_construct "false" (src/inlining.ml[277,11655+13]..[277,11655+18])
                        None
                ]
              core_type (src/inlining.ml[262,11166+52]..[262,11166+61])
                Ptyp_constr "option" (src/inlining.ml[262,11166+55]..[262,11166+61])
                [
                  core_type (src/inlining.ml[262,11166+52]..[262,11166+54])
                    Ptyp_constr "sw" (src/inlining.ml[262,11166+52]..[262,11166+54])
                    []
                ]
    ]
  structure_item (src/inlining.ml[284,11908+0]..[294,12208+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[284,11908+4]..[284,11908+19])
          Ppat_var "rename_sw_inner" (src/inlining.ml[284,11908+4]..[284,11908+19])
        expression (src/inlining.ml[284,11908+20]..[294,12208+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/inlining.ml[284,11908+20]..[284,11908+30])
            Ppat_var "beforeendp" (src/inlining.ml[284,11908+20]..[284,11908+30])
          expression (src/inlining.ml[284,11908+31]..[294,12208+18]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/inlining.ml[284,11908+31]..[284,11908+40])
              Ppat_constraint
              pattern (src/inlining.ml[284,11908+32]..[284,11908+34])
                Ppat_var "sw" (src/inlining.ml[284,11908+32]..[284,11908+34])
              core_type (src/inlining.ml[284,11908+37]..[284,11908+39])
                Ptyp_constr "sw" (src/inlining.ml[284,11908+37]..[284,11908+39])
                []
            expression (src/inlining.ml[284,11908+41]..[294,12208+18])
              Pexp_constraint
              expression (src/inlining.ml[285,11963+2]..[294,12208+18])
                Pexp_match
                expression (src/inlining.ml[285,11963+8]..[285,11963+10])
                  Pexp_ident "sw" (src/inlining.ml[285,11963+8]..[285,11963+10])
                [
                  <case>
                    pattern (src/inlining.ml[286,11979+4]..[286,11979+17])
                      Ppat_tuple
                      [
                        pattern (src/inlining.ml[286,11979+4]..[286,11979+10])
                          Ppat_construct "Before" (src/inlining.ml[286,11979+4]..[286,11979+10])
                          None
                        pattern (src/inlining.ml[286,11979+12]..[286,11979+17])
                          Ppat_var "where" (src/inlining.ml[286,11979+12]..[286,11979+17])
                      ]
                    expression (src/inlining.ml[287,12000+6]..[288,12033+21])
                      Pexp_sequence
                      expression (src/inlining.ml[287,12000+6]..[287,12000+31])
                        Pexp_assert
                        expression (src/inlining.ml[287,12000+13]..[287,12000+31])
                          Pexp_apply
                          expression (src/inlining.ml[287,12000+20]..[287,12000+21])
                            Pexp_ident "=" (src/inlining.ml[287,12000+20]..[287,12000+21])
                          [
                            <arg>
                            Nolabel
                              expression (src/inlining.ml[287,12000+14]..[287,12000+19])
                                Pexp_ident "where" (src/inlining.ml[287,12000+14]..[287,12000+19])
                            <arg>
                            Nolabel
                              expression (src/inlining.ml[287,12000+22]..[287,12000+30])
                                Pexp_construct "WhereEnd" (src/inlining.ml[287,12000+22]..[287,12000+30])
                                None
                          ]
                      expression (src/inlining.ml[288,12033+6]..[288,12033+21])
                        Pexp_construct "Some" (src/inlining.ml[288,12033+6]..[288,12033+10])
                        Some
                          expression (src/inlining.ml[288,12033+11]..[288,12033+21])
                            Pexp_ident "beforeendp" (src/inlining.ml[288,12033+11]..[288,12033+21])
                  <case>
                    pattern (src/inlining.ml[289,12055+4]..[289,12055+19])
                      Ppat_tuple
                      [
                        pattern (src/inlining.ml[289,12055+4]..[289,12055+16])
                          Ppat_construct "RightNamed" (src/inlining.ml[289,12055+4]..[289,12055+14])
                          Some
                            []
                            pattern (src/inlining.ml[289,12055+15]..[289,12055+16])
                              Ppat_any
                        pattern (src/inlining.ml[289,12055+18]..[289,12055+19])
                          Ppat_any
                      ]
                    expression (src/inlining.ml[290,12078+6]..[290,12078+10])
                      Pexp_construct "None" (src/inlining.ml[290,12078+6]..[290,12078+10])
                      None
                  <case>
                    pattern (src/inlining.ml[291,12089+4]..[291,12089+11])
                      Ppat_tuple
                      [
                        pattern (src/inlining.ml[291,12089+4]..[291,12089+8])
                          Ppat_construct "Left" (src/inlining.ml[291,12089+4]..[291,12089+8])
                          None
                        pattern (src/inlining.ml[291,12089+10]..[291,12089+11])
                          Ppat_any
                      ]
                    expression (src/inlining.ml[294,12208+6]..[294,12208+18])
                      Pexp_assert
                      expression (src/inlining.ml[294,12208+13]..[294,12208+18])
                        Pexp_construct "false" (src/inlining.ml[294,12208+13]..[294,12208+18])
                        None
                ]
              core_type (src/inlining.ml[284,11908+43]..[284,11908+52])
                Ptyp_constr "option" (src/inlining.ml[284,11908+46]..[284,11908+52])
                [
                  core_type (src/inlining.ml[284,11908+43]..[284,11908+45])
                    Ptyp_constr "sw" (src/inlining.ml[284,11908+43]..[284,11908+45])
                    []
                ]
    ]
  structure_item (src/inlining.ml[304,12694+0]..[305,12706+16])
    Pstr_type Rec
    [
      type_declaration "site" (src/inlining.ml[304,12694+5]..[304,12694+9]) (src/inlining.ml[304,12694+0]..[305,12706+16])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/inlining.ml[305,12706+2]..[305,12706+16])
              Ptyp_tuple
              [
                core_type (src/inlining.ml[305,12706+2]..[305,12706+5])
                  Ptyp_constr "int" (src/inlining.ml[305,12706+2]..[305,12706+5])
                  []
                core_type (src/inlining.ml[305,12706+8]..[305,12706+16])
                  Ptyp_constr "producer" (src/inlining.ml[305,12706+8]..[305,12706+16])
                  []
              ]
    ]
  structure_item (src/inlining.ml[307,12724+0]..[375,15612+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[307,12724+4]..[307,12724+17])
          Ppat_var "inline_branch" (src/inlining.ml[307,12724+4]..[307,12724+17])
        expression (src/inlining.ml[307,12724+18]..[375,15612+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/inlining.ml[307,12724+18]..[307,12724+24])
            Ppat_var "caller" (src/inlining.ml[307,12724+18]..[307,12724+24])
          expression (src/inlining.ml[307,12724+25]..[375,15612+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/inlining.ml[307,12724+25]..[307,12724+45])
              Ppat_constraint
              pattern (src/inlining.ml[307,12724+26]..[307,12724+37])
                Ppat_tuple
                [
                  pattern (src/inlining.ml[307,12724+26]..[307,12724+27])
                    Ppat_var "i" (src/inlining.ml[307,12724+26]..[307,12724+27])
                  pattern (src/inlining.ml[307,12724+29]..[307,12724+37])
                    Ppat_var "producer" (src/inlining.ml[307,12724+29]..[307,12724+37])
                ]
              core_type (src/inlining.ml[307,12724+40]..[307,12724+44])
                Ptyp_constr "site" (src/inlining.ml[307,12724+40]..[307,12724+44])
                []
            expression (src/inlining.ml[307,12724+46]..[375,15612+3]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/inlining.ml[307,12724+46]..[307,12724+63])
                Ppat_constraint
                pattern (src/inlining.ml[307,12724+47]..[307,12724+53])
                  Ppat_var "callee" (src/inlining.ml[307,12724+47]..[307,12724+53])
                core_type (src/inlining.ml[307,12724+56]..[307,12724+62])
                  Ptyp_constr "branch" (src/inlining.ml[307,12724+56]..[307,12724+62])
                  []
              expression (src/inlining.ml[307,12724+64]..[375,15612+3])
                Pexp_constraint
                expression (src/inlining.ml[315,13040+2]..[375,15612+3])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/inlining.ml[315,13040+6]..[315,13040+13])
                        Ppat_var "nprefix" (src/inlining.ml[315,13040+6]..[315,13040+13])
                      expression (src/inlining.ml[315,13040+16]..[315,13040+17])
                        Pexp_ident "i" (src/inlining.ml[315,13040+16]..[315,13040+17])
                  ]
                  expression (src/inlining.ml[316,13061+2]..[375,15612+3])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (src/inlining.ml[316,13061+6]..[316,13061+13])
                          Ppat_var "nsuffix" (src/inlining.ml[316,13061+6]..[316,13061+13])
                        expression (src/inlining.ml[316,13061+16]..[316,13061+54])
                          Pexp_apply
                          expression (src/inlining.ml[316,13061+45]..[316,13061+46])
                            Pexp_ident "-" (src/inlining.ml[316,13061+45]..[316,13061+46])
                          [
                            <arg>
                            Nolabel
                              expression (src/inlining.ml[316,13061+16]..[316,13061+44])
                                Pexp_apply
                                expression (src/inlining.ml[316,13061+16]..[316,13061+27])
                                  Pexp_ident "List.length" (src/inlining.ml[316,13061+16]..[316,13061+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/inlining.ml[316,13061+28]..[316,13061+44])
                                      Pexp_field
                                      expression (src/inlining.ml[316,13061+28]..[316,13061+34])
                                        Pexp_ident "caller" (src/inlining.ml[316,13061+28]..[316,13061+34])
                                      "producers" (src/inlining.ml[316,13061+35]..[316,13061+44])
                                ]
                            <arg>
                            Nolabel
                              expression (src/inlining.ml[316,13061+47]..[316,13061+54])
                                Pexp_apply
                                expression (src/inlining.ml[316,13061+50]..[316,13061+51])
                                  Pexp_ident "+" (src/inlining.ml[316,13061+50]..[316,13061+51])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/inlining.ml[316,13061+48]..[316,13061+49])
                                      Pexp_ident "i" (src/inlining.ml[316,13061+48]..[316,13061+49])
                                  <arg>
                                  Nolabel
                                    expression (src/inlining.ml[316,13061+52]..[316,13061+53])
                                      Pexp_constant PConst_int (1,None)
                                ]
                          ]
                    ]
                    expression (src/inlining.ml[320,13162+2]..[375,15612+3])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/inlining.ml[320,13162+6]..[320,13162+12])
                            Ppat_var "prefix" (src/inlining.ml[320,13162+6]..[320,13162+12])
                          expression (src/inlining.ml[320,13162+15]..[320,13162+44])
                            Pexp_apply
                            expression (src/inlining.ml[320,13162+15]..[320,13162+19])
                              Pexp_ident "take" (src/inlining.ml[320,13162+15]..[320,13162+19])
                            [
                              <arg>
                              Nolabel
                                expression (src/inlining.ml[320,13162+20]..[320,13162+27])
                                  Pexp_ident "nprefix" (src/inlining.ml[320,13162+20]..[320,13162+27])
                              <arg>
                              Nolabel
                                expression (src/inlining.ml[320,13162+28]..[320,13162+44])
                                  Pexp_field
                                  expression (src/inlining.ml[320,13162+28]..[320,13162+34])
                                    Pexp_ident "caller" (src/inlining.ml[320,13162+28]..[320,13162+34])
                                  "producers" (src/inlining.ml[320,13162+35]..[320,13162+44])
                            ]
                        <def>
                          pattern (src/inlining.ml[321,13207+6]..[321,13207+12])
                            Ppat_var "suffix" (src/inlining.ml[321,13207+6]..[321,13207+12])
                          expression (src/inlining.ml[321,13207+15]..[321,13207+50])
                            Pexp_apply
                            expression (src/inlining.ml[321,13207+15]..[321,13207+19])
                              Pexp_ident "drop" (src/inlining.ml[321,13207+15]..[321,13207+19])
                            [
                              <arg>
                              Nolabel
                                expression (src/inlining.ml[321,13207+20]..[321,13207+33])
                                  Pexp_apply
                                  expression (src/inlining.ml[321,13207+29]..[321,13207+30])
                                    Pexp_ident "+" (src/inlining.ml[321,13207+29]..[321,13207+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/inlining.ml[321,13207+21]..[321,13207+28])
                                        Pexp_ident "nprefix" (src/inlining.ml[321,13207+21]..[321,13207+28])
                                    <arg>
                                    Nolabel
                                      expression (src/inlining.ml[321,13207+31]..[321,13207+32])
                                        Pexp_constant PConst_int (1,None)
                                  ]
                              <arg>
                              Nolabel
                                expression (src/inlining.ml[321,13207+34]..[321,13207+50])
                                  Pexp_field
                                  expression (src/inlining.ml[321,13207+34]..[321,13207+40])
                                    Pexp_ident "caller" (src/inlining.ml[321,13207+34]..[321,13207+40])
                                  "producers" (src/inlining.ml[321,13207+41]..[321,13207+50])
                            ]
                      ]
                      expression (src/inlining.ml[326,13421+2]..[375,15612+3])
                        Pexp_sequence
                        expression (src/inlining.ml[326,13421+2]..[326,13421+50])
                          Pexp_apply
                          expression (src/inlining.ml[326,13421+2]..[326,13421+19])
                            Pexp_ident "check_prec_inline" (src/inlining.ml[326,13421+2]..[326,13421+19])
                          [
                            <arg>
                            Nolabel
                              expression (src/inlining.ml[326,13421+20]..[326,13421+26])
                                Pexp_ident "caller" (src/inlining.ml[326,13421+20]..[326,13421+26])
                            <arg>
                            Nolabel
                              expression (src/inlining.ml[326,13421+27]..[326,13421+35])
                                Pexp_ident "producer" (src/inlining.ml[326,13421+27]..[326,13421+35])
                            <arg>
                            Nolabel
                              expression (src/inlining.ml[326,13421+36]..[326,13421+43])
                                Pexp_ident "nsuffix" (src/inlining.ml[326,13421+36]..[326,13421+43])
                            <arg>
                            Nolabel
                              expression (src/inlining.ml[326,13421+44]..[326,13421+50])
                                Pexp_ident "callee" (src/inlining.ml[326,13421+44]..[326,13421+50])
                          ]
                        expression (src/inlining.ml[327,13473+2]..[375,15612+3])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/inlining.ml[327,13473+6]..[327,13473+28])
                                Ppat_var "branch_prec_annotation" (src/inlining.ml[327,13473+6]..[327,13473+28])
                              expression (src/inlining.ml[327,13473+31]..[327,13473+70])
                                Pexp_apply
                                expression (src/inlining.ml[327,13473+31]..[327,13473+56])
                                  Pexp_ident "propagate_prec_annotation" (src/inlining.ml[327,13473+31]..[327,13473+56])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/inlining.ml[327,13473+57]..[327,13473+63])
                                      Pexp_ident "caller" (src/inlining.ml[327,13473+57]..[327,13473+63])
                                  <arg>
                                  Nolabel
                                    expression (src/inlining.ml[327,13473+64]..[327,13473+70])
                                      Pexp_ident "callee" (src/inlining.ml[327,13473+64]..[327,13473+70])
                                ]
                          ]
                          expression (src/inlining.ml[334,13907+2]..[375,15612+3])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/inlining.ml[334,13907+6]..[334,13907+10])
                                  Ppat_var "used" (src/inlining.ml[334,13907+6]..[334,13907+10])
                                expression (src/inlining.ml[334,13907+13]..[334,13907+58])
                                  Pexp_apply
                                  expression (src/inlining.ml[334,13907+13]..[334,13907+28])
                                    Pexp_ident "StringSet.union" (src/inlining.ml[334,13907+13]..[334,13907+28])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/inlining.ml[334,13907+29]..[334,13907+43])
                                        Pexp_apply
                                        expression (src/inlining.ml[334,13907+30]..[334,13907+35])
                                          Pexp_ident "names" (src/inlining.ml[334,13907+30]..[334,13907+35])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/inlining.ml[334,13907+36]..[334,13907+42])
                                              Pexp_ident "prefix" (src/inlining.ml[334,13907+36]..[334,13907+42])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/inlining.ml[334,13907+44]..[334,13907+58])
                                        Pexp_apply
                                        expression (src/inlining.ml[334,13907+45]..[334,13907+50])
                                          Pexp_ident "names" (src/inlining.ml[334,13907+45]..[334,13907+50])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/inlining.ml[334,13907+51]..[334,13907+57])
                                              Pexp_ident "suffix" (src/inlining.ml[334,13907+51]..[334,13907+57])
                                        ]
                                  ]
                            ]
                            expression (src/inlining.ml[335,13969+2]..[375,15612+3])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/inlining.ml[335,13969+6]..[335,13969+28])
                                    Ppat_tuple
                                    [
                                      pattern (src/inlining.ml[335,13969+6]..[335,13969+9])
                                        Ppat_var "phi" (src/inlining.ml[335,13969+6]..[335,13969+9])
                                      pattern (src/inlining.ml[335,13969+11]..[335,13969+28])
                                        Ppat_var "inlined_producers" (src/inlining.ml[335,13969+11]..[335,13969+28])
                                    ]
                                  expression (src/inlining.ml[335,13969+31]..[335,13969+59])
                                    Pexp_apply
                                    expression (src/inlining.ml[335,13969+31]..[335,13969+37])
                                      Pexp_ident "rename" (src/inlining.ml[335,13969+31]..[335,13969+37])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/inlining.ml[335,13969+38]..[335,13969+42])
                                          Pexp_ident "used" (src/inlining.ml[335,13969+38]..[335,13969+42])
                                      <arg>
                                      Nolabel
                                        expression (src/inlining.ml[335,13969+43]..[335,13969+59])
                                          Pexp_field
                                          expression (src/inlining.ml[335,13969+43]..[335,13969+49])
                                            Pexp_ident "callee" (src/inlining.ml[335,13969+43]..[335,13969+49])
                                          "producers" (src/inlining.ml[335,13969+50]..[335,13969+59])
                                    ]
                              ]
                              expression (src/inlining.ml[341,14321+2]..[375,15612+3])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/inlining.ml[341,14321+6]..[341,14321+15])
                                      Ppat_var "producers" (src/inlining.ml[341,14321+6]..[341,14321+15])
                                    expression (src/inlining.ml[341,14321+18]..[341,14321+53])
                                      Pexp_apply
                                      expression (src/inlining.ml[341,14321+25]..[341,14321+26])
                                        Pexp_ident "@" (src/inlining.ml[341,14321+25]..[341,14321+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/inlining.ml[341,14321+18]..[341,14321+24])
                                            Pexp_ident "prefix" (src/inlining.ml[341,14321+18]..[341,14321+24])
                                        <arg>
                                        Nolabel
                                          expression (src/inlining.ml[341,14321+27]..[341,14321+53])
                                            Pexp_apply
                                            expression (src/inlining.ml[341,14321+45]..[341,14321+46])
                                              Pexp_ident "@" (src/inlining.ml[341,14321+45]..[341,14321+46])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/inlining.ml[341,14321+27]..[341,14321+44])
                                                  Pexp_ident "inlined_producers" (src/inlining.ml[341,14321+27]..[341,14321+44])
                                              <arg>
                                              Nolabel
                                                expression (src/inlining.ml[341,14321+47]..[341,14321+53])
                                                  Pexp_ident "suffix" (src/inlining.ml[341,14321+47]..[341,14321+53])
                                            ]
                                      ]
                                ]
                                expression (src/inlining.ml[342,14378+2]..[375,15612+3])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/inlining.ml[342,14378+6]..[342,14378+23])
                                        Ppat_constraint
                                        pattern (src/inlining.ml[342,14378+7]..[342,14378+8])
                                          Ppat_any
                                        core_type (src/inlining.ml[342,14378+11]..[342,14378+22])
                                          Ptyp_constr "StringSet.t" (src/inlining.ml[342,14378+11]..[342,14378+22])
                                          []
                                      expression (src/inlining.ml[342,14378+26]..[342,14378+41])
                                        Pexp_apply
                                        expression (src/inlining.ml[342,14378+26]..[342,14378+31])
                                          Pexp_ident "names" (src/inlining.ml[342,14378+26]..[342,14378+31])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/inlining.ml[342,14378+32]..[342,14378+41])
                                              Pexp_ident "producers" (src/inlining.ml[342,14378+32]..[342,14378+41])
                                        ]
                                  ]
                                  expression (src/inlining.ml[347,14548+2]..[375,15612+3])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/inlining.ml[347,14548+6]..[347,14548+30])
                                          Ppat_tuple
                                          [
                                            pattern (src/inlining.ml[347,14548+6]..[347,14548+12])
                                              Ppat_var "startp" (src/inlining.ml[347,14548+6]..[347,14548+12])
                                            pattern (src/inlining.ml[347,14548+14]..[347,14548+18])
                                              Ppat_var "endp" (src/inlining.ml[347,14548+14]..[347,14548+18])
                                            pattern (src/inlining.ml[347,14548+20]..[347,14548+30])
                                              Ppat_var "beforeendp" (src/inlining.ml[347,14548+20]..[347,14548+30])
                                          ]
                                        expression (src/inlining.ml[348,14581+4]..[350,14709+41])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/inlining.ml[348,14581+8]..[348,14581+12])
                                                Ppat_var "name" (src/inlining.ml[348,14581+8]..[348,14581+12])
                                              expression (src/inlining.ml[348,14581+15]..[348,14581+74])
                                                Pexp_apply
                                                expression (src/inlining.ml[348,14581+42]..[348,14581+44])
                                                  Pexp_ident "|>" (src/inlining.ml[348,14581+42]..[348,14581+44])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/inlining.ml[348,14581+15]..[348,14581+41])
                                                      Pexp_apply
                                                      expression (src/inlining.ml[348,14581+25]..[348,14581+27])
                                                        Pexp_ident "|>" (src/inlining.ml[348,14581+25]..[348,14581+27])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/inlining.ml[348,14581+15]..[348,14581+24])
                                                            Pexp_ident "producers" (src/inlining.ml[348,14581+15]..[348,14581+24])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/inlining.ml[348,14581+28]..[348,14581+41])
                                                            Pexp_ident "Array.of_list" (src/inlining.ml[348,14581+28]..[348,14581+41])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (src/inlining.ml[348,14581+45]..[348,14581+74])
                                                      Pexp_apply
                                                      expression (src/inlining.ml[348,14581+45]..[348,14581+54])
                                                        Pexp_ident "Array.map" (src/inlining.ml[348,14581+45]..[348,14581+54])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/inlining.ml[348,14581+55]..[348,14581+74])
                                                            Pexp_ident "producer_identifier" (src/inlining.ml[348,14581+55]..[348,14581+74])
                                                      ]
                                                ]
                                          ]
                                          expression (src/inlining.ml[349,14659+4]..[350,14709+41])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/inlining.ml[349,14659+8]..[349,14659+15])
                                                  Ppat_var "ncallee" (src/inlining.ml[349,14659+8]..[349,14659+15])
                                                expression (src/inlining.ml[349,14659+18]..[349,14659+46])
                                                  Pexp_apply
                                                  expression (src/inlining.ml[349,14659+18]..[349,14659+29])
                                                    Pexp_ident "List.length" (src/inlining.ml[349,14659+18]..[349,14659+29])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/inlining.ml[349,14659+30]..[349,14659+46])
                                                        Pexp_field
                                                        expression (src/inlining.ml[349,14659+30]..[349,14659+36])
                                                          Pexp_ident "callee" (src/inlining.ml[349,14659+30]..[349,14659+36])
                                                        "producers" (src/inlining.ml[349,14659+37]..[349,14659+46])
                                                  ]
                                            ]
                                            expression (src/inlining.ml[350,14709+4]..[350,14709+41])
                                              Pexp_apply
                                              expression (src/inlining.ml[350,14709+4]..[350,14709+20])
                                                Pexp_ident "define_positions" (src/inlining.ml[350,14709+4]..[350,14709+20])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/inlining.ml[350,14709+21]..[350,14709+25])
                                                    Pexp_ident "name" (src/inlining.ml[350,14709+21]..[350,14709+25])
                                                <arg>
                                                Nolabel
                                                  expression (src/inlining.ml[350,14709+26]..[350,14709+33])
                                                    Pexp_ident "nprefix" (src/inlining.ml[350,14709+26]..[350,14709+33])
                                                <arg>
                                                Nolabel
                                                  expression (src/inlining.ml[350,14709+34]..[350,14709+41])
                                                    Pexp_ident "ncallee" (src/inlining.ml[350,14709+34]..[350,14709+41])
                                              ]
                                    ]
                                    expression (src/inlining.ml[359,15100+2]..[375,15612+3])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/inlining.ml[359,15100+6]..[359,15100+7])
                                            Ppat_var "x" (src/inlining.ml[359,15100+6]..[359,15100+7])
                                          expression (src/inlining.ml[359,15100+10]..[359,15100+38])
                                            Pexp_apply
                                            expression (src/inlining.ml[359,15100+10]..[359,15100+29])
                                              Pexp_ident "producer_identifier" (src/inlining.ml[359,15100+10]..[359,15100+29])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/inlining.ml[359,15100+30]..[359,15100+38])
                                                  Pexp_ident "producer" (src/inlining.ml[359,15100+30]..[359,15100+38])
                                            ]
                                      ]
                                      expression (src/inlining.ml[360,15142+2]..[375,15612+3])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/inlining.ml[360,15142+6]..[360,15142+34])
                                              Ppat_tuple
                                              [
                                                pattern (src/inlining.ml[360,15142+6]..[360,15142+19])
                                                  Ppat_var "caller_action" (src/inlining.ml[360,15142+6]..[360,15142+19])
                                                pattern (src/inlining.ml[360,15142+21]..[360,15142+34])
                                                  Ppat_var "callee_action" (src/inlining.ml[360,15142+21]..[360,15142+34])
                                              ]
                                            expression (src/inlining.ml[361,15179+4]..[362,15261+64])
                                              Pexp_tuple
                                              [
                                                expression (src/inlining.ml[361,15179+4]..[361,15179+80])
                                                  Pexp_apply
                                                  expression (src/inlining.ml[361,15179+4]..[361,15179+17])
                                                    Pexp_ident "Action.rename" (src/inlining.ml[361,15179+4]..[361,15179+17])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/inlining.ml[361,15179+18]..[361,15179+53])
                                                        Pexp_apply
                                                        expression (src/inlining.ml[361,15179+19]..[361,15179+34])
                                                          Pexp_ident "rename_sw_outer" (src/inlining.ml[361,15179+19]..[361,15179+34])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/inlining.ml[361,15179+35]..[361,15179+52])
                                                              Pexp_tuple
                                                              [
                                                                expression (src/inlining.ml[361,15179+36]..[361,15179+37])
                                                                  Pexp_ident "x" (src/inlining.ml[361,15179+36]..[361,15179+37])
                                                                expression (src/inlining.ml[361,15179+39]..[361,15179+45])
                                                                  Pexp_ident "startp" (src/inlining.ml[361,15179+39]..[361,15179+45])
                                                                expression (src/inlining.ml[361,15179+47]..[361,15179+51])
                                                                  Pexp_ident "endp" (src/inlining.ml[361,15179+47]..[361,15179+51])
                                                              ]
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (src/inlining.ml[361,15179+54]..[361,15179+66])
                                                        Pexp_ident "Action.empty" (src/inlining.ml[361,15179+54]..[361,15179+66])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/inlining.ml[361,15179+67]..[361,15179+80])
                                                        Pexp_field
                                                        expression (src/inlining.ml[361,15179+67]..[361,15179+73])
                                                          Pexp_ident "caller" (src/inlining.ml[361,15179+67]..[361,15179+73])
                                                        "action" (src/inlining.ml[361,15179+74]..[361,15179+80])
                                                  ]
                                                expression (src/inlining.ml[362,15261+4]..[362,15261+64])
                                                  Pexp_apply
                                                  expression (src/inlining.ml[362,15261+4]..[362,15261+17])
                                                    Pexp_ident "Action.rename" (src/inlining.ml[362,15261+4]..[362,15261+17])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/inlining.ml[362,15261+18]..[362,15261+46])
                                                        Pexp_apply
                                                        expression (src/inlining.ml[362,15261+19]..[362,15261+34])
                                                          Pexp_ident "rename_sw_inner" (src/inlining.ml[362,15261+19]..[362,15261+34])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/inlining.ml[362,15261+35]..[362,15261+45])
                                                              Pexp_ident "beforeendp" (src/inlining.ml[362,15261+35]..[362,15261+45])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (src/inlining.ml[362,15261+47]..[362,15261+50])
                                                        Pexp_ident "phi" (src/inlining.ml[362,15261+47]..[362,15261+50])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/inlining.ml[362,15261+51]..[362,15261+64])
                                                        Pexp_field
                                                        expression (src/inlining.ml[362,15261+51]..[362,15261+57])
                                                          Pexp_ident "callee" (src/inlining.ml[362,15261+51]..[362,15261+57])
                                                        "action" (src/inlining.ml[362,15261+58]..[362,15261+64])
                                                  ]
                                              ]
                                        ]
                                        expression (src/inlining.ml[364,15331+2]..[375,15612+3])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/inlining.ml[364,15331+6]..[364,15331+12])
                                                Ppat_var "action" (src/inlining.ml[364,15331+6]..[364,15331+12])
                                              expression (src/inlining.ml[364,15331+15]..[364,15331+59])
                                                Pexp_apply
                                                expression (src/inlining.ml[364,15331+15]..[364,15331+29])
                                                  Pexp_ident "Action.compose" (src/inlining.ml[364,15331+15]..[364,15331+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/inlining.ml[364,15331+30]..[364,15331+31])
                                                      Pexp_ident "x" (src/inlining.ml[364,15331+30]..[364,15331+31])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/inlining.ml[364,15331+32]..[364,15331+45])
                                                      Pexp_ident "callee_action" (src/inlining.ml[364,15331+32]..[364,15331+45])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/inlining.ml[364,15331+46]..[364,15331+59])
                                                      Pexp_ident "caller_action" (src/inlining.ml[364,15331+46]..[364,15331+59])
                                                ]
                                          ]
                                          expression (src/inlining.ml[368,15437+2]..[375,15612+3])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/inlining.ml[368,15437+6]..[368,15437+53])
                                                  Ppat_record Open
                                                  [
                                                    "branch_position" (src/inlining.ml[368,15437+8]..[368,15437+23]) ghost
                                                      pattern (src/inlining.ml[368,15437+8]..[368,15437+23])
                                                        Ppat_var "branch_position" (src/inlining.ml[368,15437+8]..[368,15437+23])
                                                    "branch_production_level" (src/inlining.ml[368,15437+25]..[368,15437+48]) ghost
                                                      pattern (src/inlining.ml[368,15437+25]..[368,15437+48])
                                                        Ppat_var "branch_production_level" (src/inlining.ml[368,15437+25]..[368,15437+48])
                                                  ]
                                                expression (src/inlining.ml[368,15437+56]..[368,15437+62])
                                                  Pexp_ident "caller" (src/inlining.ml[368,15437+56]..[368,15437+62])
                                            ]
                                            expression (src/inlining.ml[369,15503+2]..[375,15612+3])
                                              Pexp_record
                                              [
                                                "branch_position" (src/inlining.ml[370,15507+4]..[370,15507+19]) ghost
                                                  expression (src/inlining.ml[370,15507+4]..[370,15507+19])
                                                    Pexp_ident "branch_position" (src/inlining.ml[370,15507+4]..[370,15507+19])
                                                "producers" (src/inlining.ml[371,15528+4]..[371,15528+13]) ghost
                                                  expression (src/inlining.ml[371,15528+4]..[371,15528+13])
                                                    Pexp_ident "producers" (src/inlining.ml[371,15528+4]..[371,15528+13])
                                                "action" (src/inlining.ml[372,15543+4]..[372,15543+10]) ghost
                                                  expression (src/inlining.ml[372,15543+4]..[372,15543+10])
                                                    Pexp_ident "action" (src/inlining.ml[372,15543+4]..[372,15543+10])
                                                "branch_prec_annotation" (src/inlining.ml[373,15555+4]..[373,15555+26]) ghost
                                                  expression (src/inlining.ml[373,15555+4]..[373,15555+26])
                                                    Pexp_ident "branch_prec_annotation" (src/inlining.ml[373,15555+4]..[373,15555+26])
                                                "branch_production_level" (src/inlining.ml[374,15583+4]..[374,15583+27]) ghost
                                                  expression (src/inlining.ml[374,15583+4]..[374,15583+27])
                                                    Pexp_ident "branch_production_level" (src/inlining.ml[374,15583+4]..[374,15583+27])
                                              ]
                                              None
                core_type (src/inlining.ml[307,12724+66]..[307,12724+72])
                  Ptyp_constr "branch" (src/inlining.ml[307,12724+66]..[307,12724+72])
                  []
    ]
  structure_item (src/inlining.ml[381,15780+0]..[382,15846+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[381,15780+4]..[381,15780+19])
          Ppat_var "inline_branches" (src/inlining.ml[381,15780+4]..[381,15780+19])
        expression (src/inlining.ml[381,15780+20]..[382,15846+46]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/inlining.ml[381,15780+20]..[381,15780+26])
            Ppat_var "caller" (src/inlining.ml[381,15780+20]..[381,15780+26])
          expression (src/inlining.ml[381,15780+27]..[382,15846+46]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/inlining.ml[381,15780+27]..[381,15780+31])
              Ppat_var "site" (src/inlining.ml[381,15780+27]..[381,15780+31])
            expression (src/inlining.ml[381,15780+32]..[382,15846+46]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/inlining.ml[381,15780+32]..[381,15780+52])
                Ppat_constraint
                pattern (src/inlining.ml[381,15780+33]..[381,15780+40])
                  Ppat_var "callees" (src/inlining.ml[381,15780+33]..[381,15780+40])
                core_type (src/inlining.ml[381,15780+43]..[381,15780+51])
                  Ptyp_constr "branches" (src/inlining.ml[381,15780+43]..[381,15780+51])
                  []
              expression (src/inlining.ml[381,15780+53]..[382,15846+46])
                Pexp_constraint
                expression (src/inlining.ml[382,15846+2]..[382,15846+46])
                  Pexp_apply
                  expression (src/inlining.ml[382,15846+2]..[382,15846+10])
                    Pexp_ident "List.map" (src/inlining.ml[382,15846+2]..[382,15846+10])
                  [
                    <arg>
                    Nolabel
                      expression (src/inlining.ml[382,15846+11]..[382,15846+38])
                        Pexp_apply
                        expression (src/inlining.ml[382,15846+12]..[382,15846+25])
                          Pexp_ident "inline_branch" (src/inlining.ml[382,15846+12]..[382,15846+25])
                        [
                          <arg>
                          Nolabel
                            expression (src/inlining.ml[382,15846+26]..[382,15846+32])
                              Pexp_ident "caller" (src/inlining.ml[382,15846+26]..[382,15846+32])
                          <arg>
                          Nolabel
                            expression (src/inlining.ml[382,15846+33]..[382,15846+37])
                              Pexp_ident "site" (src/inlining.ml[382,15846+33]..[382,15846+37])
                        ]
                    <arg>
                    Nolabel
                      expression (src/inlining.ml[382,15846+39]..[382,15846+46])
                        Pexp_ident "callees" (src/inlining.ml[382,15846+39]..[382,15846+46])
                  ]
                core_type (src/inlining.ml[381,15780+55]..[381,15780+63])
                  Ptyp_constr "branches" (src/inlining.ml[381,15780+55]..[381,15780+63])
                  []
    ]
  structure_item (src/inlining.ml[401,16938+0]..[539,22242+3])
    Pstr_module
    "Inline" (src/inlining.ml[401,16938+7]..[401,16938+13])
      module_expr (src/inlining.ml[401,16938+14]..[539,22242+3])
        Pmod_functor "G" (src/inlining.ml[401,16938+15]..[401,16938+16])
        module_type (src/inlining.ml[401,16938+19]..[401,16938+47])
          Pmty_signature
          [
            signature_item (src/inlining.ml[401,16938+23]..[401,16938+43])
              Psig_value
              value_description "grammar" (src/inlining.ml[401,16938+27]..[401,16938+34]) (src/inlining.ml[401,16938+23]..[401,16938+43])
                core_type (src/inlining.ml[401,16938+36]..[401,16938+43])
                  Ptyp_constr "grammar" (src/inlining.ml[401,16938+36]..[401,16938+43])
                  []
                []
          ]
        module_expr (src/inlining.ml[401,16938+51]..[539,22242+3])
          Pmod_structure
          [
            structure_item (src/inlining.ml[403,16997+2]..[403,16997+8])
              Pstr_open Fresh
              module_expr (src/inlining.ml[403,16997+7]..[403,16997+8])
                Pmod_ident "G" (src/inlining.ml[403,16997+7]..[403,16997+8])
            structure_item (src/inlining.ml[405,17007+2]..[406,17032+28])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/inlining.ml[405,17007+6]..[405,17007+22])
                    Ppat_var "is_inline_symbol" (src/inlining.ml[405,17007+6]..[405,17007+22])
                  expression (src/inlining.ml[406,17032+4]..[406,17032+28])
                    Pexp_apply
                    expression (src/inlining.ml[406,17032+4]..[406,17032+20])
                      Pexp_ident "is_inline_symbol" (src/inlining.ml[406,17032+4]..[406,17032+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/inlining.ml[406,17032+21]..[406,17032+28])
                          Pexp_ident "grammar" (src/inlining.ml[406,17032+21]..[406,17032+28])
                    ]
              ]
            structure_item (src/inlining.ml[408,17062+2]..[409,17089+30])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/inlining.ml[408,17062+6]..[408,17062+24])
                    Ppat_var "is_inline_producer" (src/inlining.ml[408,17062+6]..[408,17062+24])
                  expression (src/inlining.ml[409,17089+4]..[409,17089+30])
                    Pexp_apply
                    expression (src/inlining.ml[409,17089+4]..[409,17089+22])
                      Pexp_ident "is_inline_producer" (src/inlining.ml[409,17089+4]..[409,17089+22])
                    [
                      <arg>
                      Nolabel
                        expression (src/inlining.ml[409,17089+23]..[409,17089+30])
                          Pexp_ident "grammar" (src/inlining.ml[409,17089+23]..[409,17089+30])
                    ]
              ]
            structure_item (src/inlining.ml[411,17121+2]..[412,17134+16])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/inlining.ml[411,17121+6]..[411,17121+10])
                    Ppat_var "find" (src/inlining.ml[411,17121+6]..[411,17121+10])
                  expression (src/inlining.ml[412,17134+4]..[412,17134+16])
                    Pexp_apply
                    expression (src/inlining.ml[412,17134+4]..[412,17134+8])
                      Pexp_ident "find" (src/inlining.ml[412,17134+4]..[412,17134+8])
                    [
                      <arg>
                      Nolabel
                        expression (src/inlining.ml[412,17134+9]..[412,17134+16])
                          Pexp_ident "grammar" (src/inlining.ml[412,17134+9]..[412,17134+16])
                    ]
              ]
            structure_item (src/inlining.ml[424,17780+2]..[430,17983+21])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/inlining.ml[424,17780+6]..[424,17780+8])
                    Ppat_construct "()" (src/inlining.ml[424,17780+6]..[424,17780+8])
                    None
                  expression (src/inlining.ml[425,17791+4]..[430,17983+21])
                    Pexp_ifthenelse
                    expression (src/inlining.ml[425,17791+7]..[425,17791+19])
                      Pexp_ident "Settings.coq" (src/inlining.ml[425,17791+7]..[425,17791+19])
                    expression (src/inlining.ml[426,17816+6]..[430,17983+21])
                      Pexp_apply
                      expression (src/inlining.ml[426,17816+6]..[426,17816+20])
                        Pexp_ident "StringMap.iter" (src/inlining.ml[426,17816+6]..[426,17816+20])
                      [
                        <arg>
                        Nolabel
                          expression (src/inlining.ml[426,17816+21]..[430,17983+7])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/inlining.ml[426,17816+26]..[426,17816+27])
                              Ppat_any
                            expression (src/inlining.ml[426,17816+28]..[429,17922+60]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/inlining.ml[426,17816+28]..[426,17816+32])
                                Ppat_var "rule" (src/inlining.ml[426,17816+28]..[426,17816+32])
                              expression (src/inlining.ml[427,17852+8]..[429,17922+60])
                                Pexp_ifthenelse
                                expression (src/inlining.ml[427,17852+11]..[427,17852+27])
                                  Pexp_field
                                  expression (src/inlining.ml[427,17852+11]..[427,17852+15])
                                    Pexp_ident "rule" (src/inlining.ml[427,17852+11]..[427,17852+15])
                                  "inline_flag" (src/inlining.ml[427,17852+16]..[427,17852+27])
                                expression (src/inlining.ml[428,17885+10]..[429,17922+60])
                                  Pexp_apply
                                  expression (src/inlining.ml[428,17885+10]..[428,17885+21])
                                    Pexp_ident "Error.error" (src/inlining.ml[428,17885+10]..[428,17885+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/inlining.ml[428,17885+22]..[428,17885+36])
                                        Pexp_field
                                        expression (src/inlining.ml[428,17885+22]..[428,17885+26])
                                          Pexp_ident "rule" (src/inlining.ml[428,17885+22]..[428,17885+26])
                                        "positions" (src/inlining.ml[428,17885+27]..[428,17885+36])
                                    <arg>
                                    Nolabel
                                      expression (src/inlining.ml[429,17922+12]..[429,17922+60])
                                        Pexp_constant PConst_string("%%inline is not supported by the Coq back-end.",(src/inlining.ml[429,17922+13]..[429,17922+59]),None)
                                  ]
                                None
                        <arg>
                        Nolabel
                          expression (src/inlining.ml[430,17983+8]..[430,17983+21])
                            Pexp_field
                            expression (src/inlining.ml[430,17983+8]..[430,17983+15])
                              Pexp_ident "grammar" (src/inlining.ml[430,17983+8]..[430,17983+15])
                            "rules" (src/inlining.ml[430,17983+16]..[430,17983+21])
                      ]
                    None
              ]
            structure_item (src/inlining.ml[439,18441+2]..[460,19556+44])
              Pstr_value Rec
              [
                <def>
                  pattern (src/inlining.ml[439,18441+10]..[439,18441+25])
                    Ppat_var "expand_branches" (src/inlining.ml[439,18441+10]..[439,18441+25])
                  expression (src/inlining.ml[439,18441+26]..[460,19556+44]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/inlining.ml[439,18441+26]..[439,18441+39])
                      Ppat_var "expand_symbol" (src/inlining.ml[439,18441+26]..[439,18441+39])
                    expression (src/inlining.ml[439,18441+40]..[460,19556+44]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/inlining.ml[439,18441+40]..[439,18441+41])
                        Ppat_var "i" (src/inlining.ml[439,18441+40]..[439,18441+41])
                      expression (src/inlining.ml[439,18441+42]..[460,19556+44]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/inlining.ml[439,18441+42]..[439,18441+50])
                          Ppat_var "branches" (src/inlining.ml[439,18441+42]..[439,18441+50])
                        expression (src/inlining.ml[439,18441+51]..[460,19556+44])
                          Pexp_constraint
                          expression (src/inlining.ml[441,18564+4]..[460,19556+44])
                            Pexp_apply
                            expression (src/inlining.ml[441,18564+13]..[441,18564+16])
                              Pexp_ident ">>=" (src/inlining.ml[441,18564+13]..[441,18564+16])
                            [
                              <arg>
                              Nolabel
                                expression (src/inlining.ml[441,18564+4]..[441,18564+12])
                                  Pexp_ident "branches" (src/inlining.ml[441,18564+4]..[441,18564+12])
                              <arg>
                              Nolabel
                                expression (src/inlining.ml[441,18564+17]..[460,19556+44])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/inlining.ml[441,18564+21]..[441,18564+38])
                                    Ppat_constraint
                                    pattern (src/inlining.ml[441,18564+22]..[441,18564+28])
                                      Ppat_var "caller" (src/inlining.ml[441,18564+22]..[441,18564+28])
                                    core_type (src/inlining.ml[441,18564+31]..[441,18564+37])
                                      Ptyp_constr "branch" (src/inlining.ml[441,18564+31]..[441,18564+37])
                                      []
                                  expression (src/inlining.ml[445,18812+6]..[460,19556+44])
                                    Pexp_match
                                    expression (src/inlining.ml[445,18812+12]..[445,18812+59])
                                      Pexp_apply
                                      expression (src/inlining.ml[445,18812+12]..[445,18812+21])
                                        Pexp_ident "search_at" (src/inlining.ml[445,18812+12]..[445,18812+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/inlining.ml[445,18812+22]..[445,18812+40])
                                            Pexp_ident "is_inline_producer" (src/inlining.ml[445,18812+22]..[445,18812+40])
                                        <arg>
                                        Nolabel
                                          expression (src/inlining.ml[445,18812+41]..[445,18812+42])
                                            Pexp_ident "i" (src/inlining.ml[445,18812+41]..[445,18812+42])
                                        <arg>
                                        Nolabel
                                          expression (src/inlining.ml[445,18812+43]..[445,18812+59])
                                            Pexp_field
                                            expression (src/inlining.ml[445,18812+43]..[445,18812+49])
                                              Pexp_ident "caller" (src/inlining.ml[445,18812+43]..[445,18812+49])
                                            "producers" (src/inlining.ml[445,18812+50]..[445,18812+59])
                                      ]
                                    [
                                      <case>
                                        pattern (src/inlining.ml[446,18877+8]..[446,18877+12])
                                          Ppat_construct "None" (src/inlining.ml[446,18877+8]..[446,18877+12])
                                          None
                                        expression (src/inlining.ml[448,18937+10]..[448,18937+23])
                                          Pexp_apply
                                          expression (src/inlining.ml[448,18937+10]..[448,18937+16])
                                            Pexp_ident "return" (src/inlining.ml[448,18937+10]..[448,18937+16])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/inlining.ml[448,18937+17]..[448,18937+23])
                                                Pexp_ident "caller" (src/inlining.ml[448,18937+17]..[448,18937+23])
                                          ]
                                      <case>
                                        pattern (src/inlining.ml[449,18961+8]..[449,18961+36])
                                          Ppat_construct "Some" (src/inlining.ml[449,18961+8]..[449,18961+12])
                                          Some
                                            []
                                            pattern (src/inlining.ml[449,18961+13]..[449,18961+36])
                                              Ppat_alias "site" (src/inlining.ml[449,18961+31]..[449,18961+35])
                                              pattern (src/inlining.ml[449,18961+14]..[449,18961+27])
                                                Ppat_tuple
                                                [
                                                  pattern (src/inlining.ml[449,18961+15]..[449,18961+16])
                                                    Ppat_var "i" (src/inlining.ml[449,18961+15]..[449,18961+16])
                                                  pattern (src/inlining.ml[449,18961+18]..[449,18961+26])
                                                    Ppat_var "producer" (src/inlining.ml[449,18961+18]..[449,18961+26])
                                                ]
                                        expression (src/inlining.ml[455,19358+10]..[460,19556+44])
                                          Pexp_sequence
                                          expression (src/inlining.ml[455,19358+10]..[455,19358+47])
                                            Pexp_apply
                                            expression (src/inlining.ml[455,19358+10]..[455,19358+38])
                                              Pexp_ident "check_no_producer_attributes" (src/inlining.ml[455,19358+10]..[455,19358+38])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/inlining.ml[455,19358+39]..[455,19358+47])
                                                  Pexp_ident "producer" (src/inlining.ml[455,19358+39]..[455,19358+47])
                                            ]
                                          expression (src/inlining.ml[456,19407+10]..[460,19556+44])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/inlining.ml[456,19407+14]..[456,19407+20])
                                                  Ppat_var "symbol" (src/inlining.ml[456,19407+14]..[456,19407+20])
                                                expression (src/inlining.ml[456,19407+23]..[456,19407+47])
                                                  Pexp_apply
                                                  expression (src/inlining.ml[456,19407+23]..[456,19407+38])
                                                    Pexp_ident "producer_symbol" (src/inlining.ml[456,19407+23]..[456,19407+38])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/inlining.ml[456,19407+39]..[456,19407+47])
                                                        Pexp_ident "producer" (src/inlining.ml[456,19407+39]..[456,19407+47])
                                                  ]
                                            ]
                                            expression (src/inlining.ml[457,19458+10]..[460,19556+44])
                                              Pexp_apply
                                              expression (src/inlining.ml[460,19556+10]..[460,19556+12])
                                                Pexp_ident "|>" (src/inlining.ml[460,19556+10]..[460,19556+12])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/inlining.ml[457,19458+10]..[459,19515+40])
                                                    Pexp_apply
                                                    expression (src/inlining.ml[459,19515+10]..[459,19515+12])
                                                      Pexp_ident "|>" (src/inlining.ml[459,19515+10]..[459,19515+12])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/inlining.ml[457,19458+10]..[458,19489+25])
                                                          Pexp_apply
                                                          expression (src/inlining.ml[458,19489+10]..[458,19489+12])
                                                            Pexp_ident "|>" (src/inlining.ml[458,19489+10]..[458,19489+12])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/inlining.ml[457,19458+10]..[457,19458+30])
                                                                Pexp_apply
                                                                expression (src/inlining.ml[457,19458+10]..[457,19458+23])
                                                                  Pexp_ident "expand_symbol" (src/inlining.ml[457,19458+10]..[457,19458+23])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/inlining.ml[457,19458+24]..[457,19458+30])
                                                                      Pexp_ident "symbol" (src/inlining.ml[457,19458+24]..[457,19458+30])
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (src/inlining.ml[458,19489+13]..[458,19489+25])
                                                                Pexp_ident "get_branches" (src/inlining.ml[458,19489+13]..[458,19489+25])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (src/inlining.ml[459,19515+13]..[459,19515+40])
                                                          Pexp_apply
                                                          expression (src/inlining.ml[459,19515+13]..[459,19515+28])
                                                            Pexp_ident "inline_branches" (src/inlining.ml[459,19515+13]..[459,19515+28])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/inlining.ml[459,19515+29]..[459,19515+35])
                                                                Pexp_ident "caller" (src/inlining.ml[459,19515+29]..[459,19515+35])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/inlining.ml[459,19515+36]..[459,19515+40])
                                                                Pexp_ident "site" (src/inlining.ml[459,19515+36]..[459,19515+40])
                                                          ]
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (src/inlining.ml[460,19556+13]..[460,19556+44])
                                                    Pexp_apply
                                                    expression (src/inlining.ml[460,19556+13]..[460,19556+28])
                                                      Pexp_ident "expand_branches" (src/inlining.ml[460,19556+13]..[460,19556+28])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/inlining.ml[460,19556+29]..[460,19556+42])
                                                          Pexp_ident "expand_symbol" (src/inlining.ml[460,19556+29]..[460,19556+42])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/inlining.ml[460,19556+43]..[460,19556+44])
                                                          Pexp_ident "i" (src/inlining.ml[460,19556+43]..[460,19556+44])
                                                    ]
                                              ]
                                    ]
                            ]
                          core_type (src/inlining.ml[439,18441+53]..[439,18441+61])
                            Ptyp_constr "branches" (src/inlining.ml[439,18441+53]..[439,18441+61])
                            []
              ]
            structure_item (src/inlining.ml[464,19661+2]..[469,19907+59])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/inlining.ml[464,19661+6]..[464,19661+19])
                    Ppat_var "expand_symbol" (src/inlining.ml[464,19661+6]..[464,19661+19])
                  expression (src/inlining.ml[464,19661+20]..[469,19907+59]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/inlining.ml[464,19661+20]..[464,19661+33])
                      Ppat_var "expand_symbol" (src/inlining.ml[464,19661+20]..[464,19661+33])
                    expression (src/inlining.ml[464,19661+34]..[469,19907+59]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/inlining.ml[464,19661+34]..[464,19661+40])
                        Ppat_var "symbol" (src/inlining.ml[464,19661+34]..[464,19661+40])
                      expression (src/inlining.ml[464,19661+41]..[469,19907+59])
                        Pexp_constraint
                        expression (src/inlining.ml[468,19891+4]..[469,19907+59])
                          Pexp_apply
                          expression (src/inlining.ml[469,19907+4]..[469,19907+6])
                            Pexp_ident "|>" (src/inlining.ml[469,19907+4]..[469,19907+6])
                          [
                            <arg>
                            Nolabel
                              expression (src/inlining.ml[468,19891+4]..[468,19891+15])
                                Pexp_apply
                                expression (src/inlining.ml[468,19891+4]..[468,19891+8])
                                  Pexp_ident "find" (src/inlining.ml[468,19891+4]..[468,19891+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/inlining.ml[468,19891+9]..[468,19891+15])
                                      Pexp_ident "symbol" (src/inlining.ml[468,19891+9]..[468,19891+15])
                                ]
                            <arg>
                            Nolabel
                              expression (src/inlining.ml[469,19907+7]..[469,19907+59])
                                Pexp_apply
                                expression (src/inlining.ml[469,19907+7]..[469,19907+25])
                                  Pexp_ident "transform_branches" (src/inlining.ml[469,19907+7]..[469,19907+25])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/inlining.ml[469,19907+26]..[469,19907+59])
                                      Pexp_apply
                                      expression (src/inlining.ml[469,19907+27]..[469,19907+42])
                                        Pexp_ident "expand_branches" (src/inlining.ml[469,19907+27]..[469,19907+42])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/inlining.ml[469,19907+43]..[469,19907+56])
                                            Pexp_ident "expand_symbol" (src/inlining.ml[469,19907+43]..[469,19907+56])
                                        <arg>
                                        Nolabel
                                          expression (src/inlining.ml[469,19907+57]..[469,19907+58])
                                            Pexp_constant PConst_int (0,None)
                                      ]
                                ]
                          ]
                        core_type (src/inlining.ml[464,19661+43]..[464,19661+47])
                          Ptyp_constr "rule" (src/inlining.ml[464,19661+43]..[464,19661+47])
                          []
              ]
            structure_item (src/inlining.ml[473,20044+2]..[474,20090+50])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/inlining.ml[473,20044+6]..[473,20044+19])
                    Ppat_var "expand_symbol" (src/inlining.ml[473,20044+6]..[473,20044+19])
                  core_type (src/inlining.ml[473,20044+22]..[473,20044+43])
                    Ptyp_arrow
                    Nolabel
                    core_type (src/inlining.ml[473,20044+22]..[473,20044+35])
                      Ptyp_constr "Syntax.symbol" (src/inlining.ml[473,20044+22]..[473,20044+35])
                      []
                    core_type (src/inlining.ml[473,20044+39]..[473,20044+43])
                      Ptyp_constr "rule" (src/inlining.ml[473,20044+39]..[473,20044+43])
                      []
                  expression (src/inlining.ml[474,20090+4]..[474,20090+50])
                    Pexp_apply
                    expression (src/inlining.ml[474,20090+4]..[474,20090+36])
                      Pexp_ident "Fix.Memoize.String.defensive_fix" (src/inlining.ml[474,20090+4]..[474,20090+36])
                    [
                      <arg>
                      Nolabel
                        expression (src/inlining.ml[474,20090+37]..[474,20090+50])
                          Pexp_ident "expand_symbol" (src/inlining.ml[474,20090+37]..[474,20090+50])
                    ]
              ]
            structure_item (src/inlining.ml[480,20308+2]..[501,21077+57])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/inlining.ml[480,20308+6]..[480,20308+19])
                    Ppat_var "expand_symbol" (src/inlining.ml[480,20308+6]..[480,20308+19])
                  expression (src/inlining.ml[480,20308+20]..[501,21077+57]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/inlining.ml[480,20308+20]..[480,20308+26])
                      Ppat_var "symbol" (src/inlining.ml[480,20308+20]..[480,20308+26])
                    expression (src/inlining.ml[481,20337+4]..[501,21077+57])
                      Pexp_try
                      expression (src/inlining.ml[482,20345+6]..[482,20345+26])
                        Pexp_apply
                        expression (src/inlining.ml[482,20345+6]..[482,20345+19])
                          Pexp_ident "expand_symbol" (src/inlining.ml[482,20345+6]..[482,20345+19])
                        [
                          <arg>
                          Nolabel
                            expression (src/inlining.ml[482,20345+20]..[482,20345+26])
                              Pexp_ident "symbol" (src/inlining.ml[482,20345+20]..[482,20345+26])
                        ]
                      [
                        <case>
                          pattern (src/inlining.ml[483,20372+9]..[483,20372+51])
                            Ppat_construct "Fix.Memoize.String.Cycle" (src/inlining.ml[483,20372+9]..[483,20372+33])
                            Some
                              []
                              pattern (src/inlining.ml[483,20372+34]..[483,20372+51])
                                Ppat_tuple
                                [
                                  pattern (src/inlining.ml[483,20372+35]..[483,20372+42])
                                    Ppat_var "symbols" (src/inlining.ml[483,20372+35]..[483,20372+42])
                                  pattern (src/inlining.ml[483,20372+44]..[483,20372+50])
                                    Ppat_var "symbol" (src/inlining.ml[483,20372+44]..[483,20372+50])
                                ]
                          expression (src/inlining.ml[484,20427+6]..[501,21077+57])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/inlining.ml[484,20427+10]..[484,20427+14])
                                  Ppat_var "rule" (src/inlining.ml[484,20427+10]..[484,20427+14])
                                expression (src/inlining.ml[484,20427+17]..[484,20427+28])
                                  Pexp_apply
                                  expression (src/inlining.ml[484,20427+17]..[484,20427+21])
                                    Pexp_ident "find" (src/inlining.ml[484,20427+17]..[484,20427+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/inlining.ml[484,20427+22]..[484,20427+28])
                                        Pexp_ident "symbol" (src/inlining.ml[484,20427+22]..[484,20427+28])
                                  ]
                            ]
                            expression (src/inlining.ml[485,20459+6]..[501,21077+57])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/inlining.ml[485,20459+10]..[485,20459+11])
                                    Ppat_var "b" (src/inlining.ml[485,20459+10]..[485,20459+11])
                                  expression (src/inlining.ml[485,20459+14]..[485,20459+31])
                                    Pexp_apply
                                    expression (src/inlining.ml[485,20459+14]..[485,20459+27])
                                      Pexp_ident "Buffer.create" (src/inlining.ml[485,20459+14]..[485,20459+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/inlining.ml[485,20459+28]..[485,20459+31])
                                          Pexp_constant PConst_int (128,None)
                                    ]
                              ]
                              expression (src/inlining.ml[486,20494+6]..[501,21077+57])
                                Pexp_sequence
                                expression (src/inlining.ml[486,20494+6]..[486,20494+76])
                                  Pexp_apply
                                  expression (src/inlining.ml[486,20494+6]..[486,20494+20])
                                    Pexp_ident "Printf.bprintf" (src/inlining.ml[486,20494+6]..[486,20494+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/inlining.ml[486,20494+21]..[486,20494+22])
                                        Pexp_ident "b" (src/inlining.ml[486,20494+21]..[486,20494+22])
                                    <arg>
                                    Nolabel
                                      expression (src/inlining.ml[486,20494+23]..[486,20494+76])
                                        Pexp_constant PConst_string("there is a cycle of %%inline nonterminal symbols:\n",(src/inlining.ml[486,20494+24]..[486,20494+75]),None)
                                  ]
                                expression (src/inlining.ml[487,20572+6]..[501,21077+57])
                                  Pexp_sequence
                                  expression (src/inlining.ml[487,20572+6]..[500,21066+9])
                                    Pexp_match
                                    expression (src/inlining.ml[487,20572+18]..[487,20572+25])
                                      Pexp_ident "symbols" (src/inlining.ml[487,20572+18]..[487,20572+25])
                                    [
                                      <case>
                                        pattern (src/inlining.ml[488,20603+8]..[488,20603+10])
                                          Ppat_construct "[]" (src/inlining.ml[488,20603+8]..[488,20603+10])
                                          None
                                        expression (src/inlining.ml[489,20617+10]..[489,20617+22])
                                          Pexp_assert
                                          expression (src/inlining.ml[489,20617+17]..[489,20617+22])
                                            Pexp_construct "false" (src/inlining.ml[489,20617+17]..[489,20617+22])
                                            None
                                      <case>
                                        pattern (src/inlining.ml[490,20640+8]..[490,20640+18])
                                          Ppat_construct "::" (src/inlining.ml[490,20640+13]..[490,20640+15])
                                          Some
                                            []
                                            pattern (src/inlining.ml[490,20640+8]..[490,20640+18]) ghost
                                              Ppat_tuple
                                              [
                                                pattern (src/inlining.ml[490,20640+8]..[490,20640+12])
                                                  Ppat_var "head" (src/inlining.ml[490,20640+8]..[490,20640+12])
                                                pattern (src/inlining.ml[490,20640+16]..[490,20640+18])
                                                  Ppat_construct "[]" (src/inlining.ml[490,20640+16]..[490,20640+18])
                                                  None
                                              ]
                                        expression (src/inlining.ml[491,20662+10]..[492,20696+58])
                                          Pexp_sequence
                                          expression (src/inlining.ml[491,20662+10]..[491,20662+32])
                                            Pexp_assert
                                            expression (src/inlining.ml[491,20662+17]..[491,20662+32])
                                              Pexp_apply
                                              expression (src/inlining.ml[491,20662+23]..[491,20662+24])
                                                Pexp_ident "=" (src/inlining.ml[491,20662+23]..[491,20662+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/inlining.ml[491,20662+18]..[491,20662+22])
                                                    Pexp_ident "head" (src/inlining.ml[491,20662+18]..[491,20662+22])
                                                <arg>
                                                Nolabel
                                                  expression (src/inlining.ml[491,20662+25]..[491,20662+31])
                                                    Pexp_ident "symbol" (src/inlining.ml[491,20662+25]..[491,20662+31])
                                              ]
                                          expression (src/inlining.ml[492,20696+10]..[492,20696+58])
                                            Pexp_apply
                                            expression (src/inlining.ml[492,20696+10]..[492,20696+24])
                                              Pexp_ident "Printf.bprintf" (src/inlining.ml[492,20696+10]..[492,20696+24])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/inlining.ml[492,20696+25]..[492,20696+26])
                                                  Pexp_ident "b" (src/inlining.ml[492,20696+25]..[492,20696+26])
                                              <arg>
                                              Nolabel
                                                expression (src/inlining.ml[492,20696+27]..[492,20696+51])
                                                  Pexp_constant PConst_string("  %s refers to itself.",(src/inlining.ml[492,20696+28]..[492,20696+50]),None)
                                              <arg>
                                              Nolabel
                                                expression (src/inlining.ml[492,20696+52]..[492,20696+58])
                                                  Pexp_ident "symbol" (src/inlining.ml[492,20696+52]..[492,20696+58])
                                            ]
                                      <case>
                                        pattern (src/inlining.ml[493,20755+8]..[493,20755+31])
                                          Ppat_construct "::" (src/inlining.ml[493,20755+13]..[493,20755+15])
                                          Some
                                            []
                                            pattern (src/inlining.ml[493,20755+8]..[493,20755+31]) ghost
                                              Ppat_tuple
                                              [
                                                pattern (src/inlining.ml[493,20755+8]..[493,20755+12])
                                                  Ppat_var "head" (src/inlining.ml[493,20755+8]..[493,20755+12])
                                                pattern (src/inlining.ml[493,20755+16]..[493,20755+31])
                                                  Ppat_construct "::" (src/inlining.ml[493,20755+21]..[493,20755+23])
                                                  Some
                                                    []
                                                    pattern (src/inlining.ml[493,20755+16]..[493,20755+31]) ghost
                                                      Ppat_tuple
                                                      [
                                                        pattern (src/inlining.ml[493,20755+16]..[493,20755+20])
                                                          Ppat_var "next" (src/inlining.ml[493,20755+16]..[493,20755+20])
                                                        pattern (src/inlining.ml[493,20755+24]..[493,20755+31])
                                                          Ppat_var "symbols" (src/inlining.ml[493,20755+24]..[493,20755+31])
                                                      ]
                                              ]
                                        expression (src/inlining.ml[494,20790+10]..[499,21003+62])
                                          Pexp_sequence
                                          expression (src/inlining.ml[494,20790+10]..[494,20790+32])
                                            Pexp_assert
                                            expression (src/inlining.ml[494,20790+17]..[494,20790+32])
                                              Pexp_apply
                                              expression (src/inlining.ml[494,20790+23]..[494,20790+24])
                                                Pexp_ident "=" (src/inlining.ml[494,20790+23]..[494,20790+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/inlining.ml[494,20790+18]..[494,20790+22])
                                                    Pexp_ident "head" (src/inlining.ml[494,20790+18]..[494,20790+22])
                                                <arg>
                                                Nolabel
                                                  expression (src/inlining.ml[494,20790+25]..[494,20790+31])
                                                    Pexp_ident "symbol" (src/inlining.ml[494,20790+25]..[494,20790+31])
                                              ]
                                          expression (src/inlining.ml[495,20824+10]..[499,21003+62])
                                            Pexp_sequence
                                            expression (src/inlining.ml[495,20824+10]..[495,20824+59])
                                              Pexp_apply
                                              expression (src/inlining.ml[495,20824+10]..[495,20824+24])
                                                Pexp_ident "Printf.bprintf" (src/inlining.ml[495,20824+10]..[495,20824+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/inlining.ml[495,20824+25]..[495,20824+26])
                                                    Pexp_ident "b" (src/inlining.ml[495,20824+25]..[495,20824+26])
                                                <arg>
                                                Nolabel
                                                  expression (src/inlining.ml[495,20824+27]..[495,20824+49])
                                                    Pexp_constant PConst_string("  %s refers to %s,\n",(src/inlining.ml[495,20824+28]..[495,20824+48]),None)
                                                <arg>
                                                Nolabel
                                                  expression (src/inlining.ml[495,20824+50]..[495,20824+54])
                                                    Pexp_ident "head" (src/inlining.ml[495,20824+50]..[495,20824+54])
                                                <arg>
                                                Nolabel
                                                  expression (src/inlining.ml[495,20824+55]..[495,20824+59])
                                                    Pexp_ident "next" (src/inlining.ml[495,20824+55]..[495,20824+59])
                                              ]
                                            expression (src/inlining.ml[496,20885+10]..[499,21003+62])
                                              Pexp_sequence
                                              expression (src/inlining.ml[496,20885+10]..[498,20982+19])
                                                Pexp_apply
                                                expression (src/inlining.ml[496,20885+10]..[496,20885+19])
                                                  Pexp_ident "List.iter" (src/inlining.ml[496,20885+10]..[496,20885+19])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/inlining.ml[496,20885+20]..[498,20982+11])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (src/inlining.ml[496,20885+25]..[496,20885+31])
                                                        Ppat_var "symbol" (src/inlining.ml[496,20885+25]..[496,20885+31])
                                                      expression (src/inlining.ml[497,20920+12]..[497,20920+61])
                                                        Pexp_apply
                                                        expression (src/inlining.ml[497,20920+12]..[497,20920+26])
                                                          Pexp_ident "Printf.bprintf" (src/inlining.ml[497,20920+12]..[497,20920+26])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/inlining.ml[497,20920+27]..[497,20920+28])
                                                              Pexp_ident "b" (src/inlining.ml[497,20920+27]..[497,20920+28])
                                                          <arg>
                                                          Nolabel
                                                            expression (src/inlining.ml[497,20920+29]..[497,20920+54])
                                                              Pexp_constant PConst_string("  which refers to %s,\n",(src/inlining.ml[497,20920+30]..[497,20920+53]),None)
                                                          <arg>
                                                          Nolabel
                                                            expression (src/inlining.ml[497,20920+55]..[497,20920+61])
                                                              Pexp_ident "symbol" (src/inlining.ml[497,20920+55]..[497,20920+61])
                                                        ]
                                                  <arg>
                                                  Nolabel
                                                    expression (src/inlining.ml[498,20982+12]..[498,20982+19])
                                                      Pexp_ident "symbols" (src/inlining.ml[498,20982+12]..[498,20982+19])
                                                ]
                                              expression (src/inlining.ml[499,21003+10]..[499,21003+62])
                                                Pexp_apply
                                                expression (src/inlining.ml[499,21003+10]..[499,21003+24])
                                                  Pexp_ident "Printf.bprintf" (src/inlining.ml[499,21003+10]..[499,21003+24])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/inlining.ml[499,21003+25]..[499,21003+26])
                                                      Pexp_ident "b" (src/inlining.ml[499,21003+25]..[499,21003+26])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/inlining.ml[499,21003+27]..[499,21003+55])
                                                      Pexp_constant PConst_string("  which refers back to %s.",(src/inlining.ml[499,21003+28]..[499,21003+54]),None)
                                                  <arg>
                                                  Nolabel
                                                    expression (src/inlining.ml[499,21003+56]..[499,21003+62])
                                                      Pexp_ident "symbol" (src/inlining.ml[499,21003+56]..[499,21003+62])
                                                ]
                                    ]
                                  expression (src/inlining.ml[501,21077+6]..[501,21077+57])
                                    Pexp_apply
                                    expression (src/inlining.ml[501,21077+6]..[501,21077+17])
                                      Pexp_ident "Error.error" (src/inlining.ml[501,21077+6]..[501,21077+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/inlining.ml[501,21077+18]..[501,21077+32])
                                          Pexp_field
                                          expression (src/inlining.ml[501,21077+18]..[501,21077+22])
                                            Pexp_ident "rule" (src/inlining.ml[501,21077+18]..[501,21077+22])
                                          "positions" (src/inlining.ml[501,21077+23]..[501,21077+32])
                                      <arg>
                                      Nolabel
                                        expression (src/inlining.ml[501,21077+33]..[501,21077+37])
                                          Pexp_constant PConst_string("%s",(src/inlining.ml[501,21077+34]..[501,21077+36]),None)
                                      <arg>
                                      Nolabel
                                        expression (src/inlining.ml[501,21077+38]..[501,21077+57])
                                          Pexp_apply
                                          expression (src/inlining.ml[501,21077+39]..[501,21077+54])
                                            Pexp_ident "Buffer.contents" (src/inlining.ml[501,21077+39]..[501,21077+54])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/inlining.ml[501,21077+55]..[501,21077+56])
                                                Pexp_ident "b" (src/inlining.ml[501,21077+55]..[501,21077+56])
                                          ]
                                    ]
                      ]
              ]
            structure_item (src/inlining.ml[506,21263+2]..[509,21356+64])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/inlining.ml[506,21263+6]..[506,21263+11])
                    Ppat_var "rules" (src/inlining.ml[506,21263+6]..[506,21263+11])
                  expression (src/inlining.ml[507,21277+4]..[509,21356+64])
                    Pexp_apply
                    expression (src/inlining.ml[509,21356+4]..[509,21356+6])
                      Pexp_ident "|>" (src/inlining.ml[509,21356+4]..[509,21356+6])
                    [
                      <arg>
                      Nolabel
                        expression (src/inlining.ml[507,21277+4]..[508,21295+60])
                          Pexp_apply
                          expression (src/inlining.ml[508,21295+4]..[508,21295+6])
                            Pexp_ident "|>" (src/inlining.ml[508,21295+4]..[508,21295+6])
                          [
                            <arg>
                            Nolabel
                              expression (src/inlining.ml[507,21277+4]..[507,21277+17])
                                Pexp_field
                                expression (src/inlining.ml[507,21277+4]..[507,21277+11])
                                  Pexp_ident "grammar" (src/inlining.ml[507,21277+4]..[507,21277+11])
                                "rules" (src/inlining.ml[507,21277+12]..[507,21277+17])
                            <arg>
                            Nolabel
                              expression (src/inlining.ml[508,21295+7]..[508,21295+60])
                                Pexp_apply
                                expression (src/inlining.ml[508,21295+7]..[508,21295+23])
                                  Pexp_ident "StringMap.filter" (src/inlining.ml[508,21295+7]..[508,21295+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/inlining.ml[508,21295+24]..[508,21295+60])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (src/inlining.ml[508,21295+29]..[508,21295+30])
                                        Ppat_any
                                      expression (src/inlining.ml[508,21295+31]..[508,21295+59]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/inlining.ml[508,21295+31]..[508,21295+35])
                                          Ppat_var "rule" (src/inlining.ml[508,21295+31]..[508,21295+35])
                                        expression (src/inlining.ml[508,21295+39]..[508,21295+59])
                                          Pexp_apply
                                          expression (src/inlining.ml[508,21295+39]..[508,21295+42])
                                            Pexp_ident "not" (src/inlining.ml[508,21295+39]..[508,21295+42])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/inlining.ml[508,21295+43]..[508,21295+59])
                                                Pexp_field
                                                expression (src/inlining.ml[508,21295+43]..[508,21295+47])
                                                  Pexp_ident "rule" (src/inlining.ml[508,21295+43]..[508,21295+47])
                                                "inline_flag" (src/inlining.ml[508,21295+48]..[508,21295+59])
                                          ]
                                ]
                          ]
                      <arg>
                      Nolabel
                        expression (src/inlining.ml[509,21356+7]..[509,21356+64])
                          Pexp_apply
                          expression (src/inlining.ml[509,21356+7]..[509,21356+21])
                            Pexp_ident "StringMap.mapi" (src/inlining.ml[509,21356+7]..[509,21356+21])
                          [
                            <arg>
                            Nolabel
                              expression (src/inlining.ml[509,21356+22]..[509,21356+64])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/inlining.ml[509,21356+27]..[509,21356+33])
                                  Ppat_var "symbol" (src/inlining.ml[509,21356+27]..[509,21356+33])
                                expression (src/inlining.ml[509,21356+34]..[509,21356+63]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/inlining.ml[509,21356+34]..[509,21356+39])
                                    Ppat_var "_rule" (src/inlining.ml[509,21356+34]..[509,21356+39])
                                  expression (src/inlining.ml[509,21356+43]..[509,21356+63])
                                    Pexp_apply
                                    expression (src/inlining.ml[509,21356+43]..[509,21356+56])
                                      Pexp_ident "expand_symbol" (src/inlining.ml[509,21356+43]..[509,21356+56])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/inlining.ml[509,21356+57]..[509,21356+63])
                                          Pexp_ident "symbol" (src/inlining.ml[509,21356+57]..[509,21356+63])
                                    ]
                          ]
                    ]
              ]
            structure_item (src/inlining.ml[513,21485+2]..[514,21518+33])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/inlining.ml[513,21485+6]..[513,21485+10])
                    Ppat_var "keep" (src/inlining.ml[513,21485+6]..[513,21485+10])
                  expression (src/inlining.ml[513,21485+11]..[514,21518+33]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/inlining.ml[513,21485+11]..[513,21485+17])
                      Ppat_var "symbol" (src/inlining.ml[513,21485+11]..[513,21485+17])
                    expression (src/inlining.ml[513,21485+18]..[514,21518+33]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/inlining.ml[513,21485+18]..[513,21485+23])
                        Ppat_var "_rule" (src/inlining.ml[513,21485+18]..[513,21485+23])
                      expression (src/inlining.ml[513,21485+24]..[514,21518+33])
                        Pexp_constraint
                        expression (src/inlining.ml[514,21518+4]..[514,21518+33])
                          Pexp_apply
                          expression (src/inlining.ml[514,21518+4]..[514,21518+7])
                            Pexp_ident "not" (src/inlining.ml[514,21518+4]..[514,21518+7])
                          [
                            <arg>
                            Nolabel
                              expression (src/inlining.ml[514,21518+8]..[514,21518+33])
                                Pexp_apply
                                expression (src/inlining.ml[514,21518+9]..[514,21518+25])
                                  Pexp_ident "is_inline_symbol" (src/inlining.ml[514,21518+9]..[514,21518+25])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/inlining.ml[514,21518+26]..[514,21518+32])
                                      Pexp_ident "symbol" (src/inlining.ml[514,21518+26]..[514,21518+32])
                                ]
                          ]
                        core_type (src/inlining.ml[513,21485+26]..[513,21485+30])
                          Ptyp_constr "bool" (src/inlining.ml[513,21485+26]..[513,21485+30])
                          []
              ]
            structure_item (src/inlining.ml[516,21553+2]..[517,21567+39])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/inlining.ml[516,21553+6]..[516,21553+11])
                    Ppat_var "types" (src/inlining.ml[516,21553+6]..[516,21553+11])
                  expression (src/inlining.ml[517,21567+4]..[517,21567+39])
                    Pexp_apply
                    expression (src/inlining.ml[517,21567+4]..[517,21567+20])
                      Pexp_ident "StringMap.filter" (src/inlining.ml[517,21567+4]..[517,21567+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/inlining.ml[517,21567+21]..[517,21567+25])
                          Pexp_ident "keep" (src/inlining.ml[517,21567+21]..[517,21567+25])
                      <arg>
                      Nolabel
                        expression (src/inlining.ml[517,21567+26]..[517,21567+39])
                          Pexp_field
                          expression (src/inlining.ml[517,21567+26]..[517,21567+33])
                            Pexp_ident "grammar" (src/inlining.ml[517,21567+26]..[517,21567+33])
                          "types" (src/inlining.ml[517,21567+34]..[517,21567+39])
                    ]
              ]
            structure_item (src/inlining.ml[523,21784+2]..[529,22059+8])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/inlining.ml[523,21784+6]..[523,21784+18])
                    Ppat_var "keep_or_warn" (src/inlining.ml[523,21784+6]..[523,21784+18])
                  expression (src/inlining.ml[523,21784+19]..[529,22059+8]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/inlining.ml[523,21784+19]..[523,21784+36])
                      Ppat_constraint
                      pattern (src/inlining.ml[523,21784+20]..[523,21784+26])
                        Ppat_var "symbol" (src/inlining.ml[523,21784+20]..[523,21784+26])
                      core_type (src/inlining.ml[523,21784+29]..[523,21784+35])
                        Ptyp_constr "string" (src/inlining.ml[523,21784+29]..[523,21784+35])
                        []
                    expression (src/inlining.ml[523,21784+37]..[529,22059+8]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/inlining.ml[523,21784+37]..[523,21784+42])
                        Ppat_var "_rule" (src/inlining.ml[523,21784+37]..[523,21784+42])
                      expression (src/inlining.ml[523,21784+43]..[529,22059+8])
                        Pexp_constraint
                        expression (src/inlining.ml[524,21836+4]..[529,22059+8])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/inlining.ml[524,21836+8]..[524,21836+12])
                                Ppat_var "keep" (src/inlining.ml[524,21836+8]..[524,21836+12])
                              expression (src/inlining.ml[524,21836+15]..[524,21836+32])
                                Pexp_apply
                                expression (src/inlining.ml[524,21836+15]..[524,21836+19])
                                  Pexp_ident "keep" (src/inlining.ml[524,21836+15]..[524,21836+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/inlining.ml[524,21836+20]..[524,21836+26])
                                      Pexp_ident "symbol" (src/inlining.ml[524,21836+20]..[524,21836+26])
                                  <arg>
                                  Nolabel
                                    expression (src/inlining.ml[524,21836+27]..[524,21836+32])
                                      Pexp_ident "_rule" (src/inlining.ml[524,21836+27]..[524,21836+32])
                                ]
                          ]
                          expression (src/inlining.ml[525,21872+4]..[529,22059+8])
                            Pexp_sequence
                            expression (src/inlining.ml[525,21872+4]..[528,21973+84])
                              Pexp_ifthenelse
                              expression (src/inlining.ml[525,21872+7]..[525,21872+15])
                                Pexp_apply
                                expression (src/inlining.ml[525,21872+7]..[525,21872+10])
                                  Pexp_ident "not" (src/inlining.ml[525,21872+7]..[525,21872+10])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/inlining.ml[525,21872+11]..[525,21872+15])
                                      Pexp_ident "keep" (src/inlining.ml[525,21872+11]..[525,21872+15])
                                ]
                              expression (src/inlining.ml[526,21893+6]..[528,21973+84])
                                Pexp_apply
                                expression (src/inlining.ml[526,21893+6]..[526,21893+27])
                                  Pexp_ident "Error.grammar_warning" (src/inlining.ml[526,21893+6]..[526,21893+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/inlining.ml[526,21893+28]..[526,21893+30])
                                      Pexp_construct "[]" (src/inlining.ml[526,21893+28]..[526,21893+30])
                                      None
                                  <arg>
                                  Nolabel
                                    expression (src/inlining.ml[527,21924+8]..[528,21973+77])
                                      Pexp_constant PConst_string("the declaration %%on_error_reduce %s\nhas no effect: this symbol is marked %%inline and is expanded away.",(src/inlining.ml[527,21924+9]..[528,21973+76]),None)
                                  <arg>
                                  Nolabel
                                    expression (src/inlining.ml[528,21973+78]..[528,21973+84])
                                      Pexp_ident "symbol" (src/inlining.ml[528,21973+78]..[528,21973+84])
                                ]
                              None
                            expression (src/inlining.ml[529,22059+4]..[529,22059+8])
                              Pexp_ident "keep" (src/inlining.ml[529,22059+4]..[529,22059+8])
                        core_type (src/inlining.ml[523,21784+45]..[523,21784+49])
                          Ptyp_constr "bool" (src/inlining.ml[523,21784+45]..[523,21784+49])
                          []
              ]
            structure_item (src/inlining.ml[531,22069+2]..[532,22093+57])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/inlining.ml[531,22069+6]..[531,22069+21])
                    Ppat_var "on_error_reduce" (src/inlining.ml[531,22069+6]..[531,22069+21])
                  expression (src/inlining.ml[532,22093+4]..[532,22093+57])
                    Pexp_apply
                    expression (src/inlining.ml[532,22093+4]..[532,22093+20])
                      Pexp_ident "StringMap.filter" (src/inlining.ml[532,22093+4]..[532,22093+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/inlining.ml[532,22093+21]..[532,22093+33])
                          Pexp_ident "keep_or_warn" (src/inlining.ml[532,22093+21]..[532,22093+33])
                      <arg>
                      Nolabel
                        expression (src/inlining.ml[532,22093+34]..[532,22093+57])
                          Pexp_field
                          expression (src/inlining.ml[532,22093+34]..[532,22093+41])
                            Pexp_ident "grammar" (src/inlining.ml[532,22093+34]..[532,22093+41])
                          "on_error_reduce" (src/inlining.ml[532,22093+42]..[532,22093+57])
                    ]
              ]
            structure_item (src/inlining.ml[536,22174+2]..[537,22190+50])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/inlining.ml[536,22174+6]..[536,22174+13])
                    Ppat_var "grammar" (src/inlining.ml[536,22174+6]..[536,22174+13])
                  expression (src/inlining.ml[537,22190+4]..[537,22190+50])
                    Pexp_record
                    [
                      "rules" (src/inlining.ml[537,22190+19]..[537,22190+24]) ghost
                        expression (src/inlining.ml[537,22190+19]..[537,22190+24])
                          Pexp_ident "rules" (src/inlining.ml[537,22190+19]..[537,22190+24])
                      "types" (src/inlining.ml[537,22190+26]..[537,22190+31]) ghost
                        expression (src/inlining.ml[537,22190+26]..[537,22190+31])
                          Pexp_ident "types" (src/inlining.ml[537,22190+26]..[537,22190+31])
                      "on_error_reduce" (src/inlining.ml[537,22190+33]..[537,22190+48]) ghost
                        expression (src/inlining.ml[537,22190+33]..[537,22190+48])
                          Pexp_ident "on_error_reduce" (src/inlining.ml[537,22190+33]..[537,22190+48])
                    ]
                    Some
                      expression (src/inlining.ml[537,22190+6]..[537,22190+13])
                        Pexp_ident "grammar" (src/inlining.ml[537,22190+6]..[537,22190+13])
              ]
          ]
  structure_item (src/inlining.ml[545,22380+0]..[547,22462+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[545,22380+4]..[545,22380+10])
          Ppat_var "inline" (src/inlining.ml[545,22380+4]..[545,22380+10])
        expression (src/inlining.ml[545,22380+11]..[547,22462+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/inlining.ml[545,22380+11]..[545,22380+18])
            Ppat_var "grammar" (src/inlining.ml[545,22380+11]..[545,22380+18])
          expression (src/inlining.ml[546,22401+2]..[547,22462+11])
            Pexp_letmodule "I" (src/inlining.ml[546,22401+13]..[546,22401+14])
            module_expr (src/inlining.ml[546,22401+17]..[546,22401+57])
              Pmod_apply
              module_expr (src/inlining.ml[546,22401+17]..[546,22401+23])
                Pmod_ident "Inline" (src/inlining.ml[546,22401+17]..[546,22401+23])
              module_expr (src/inlining.ml[546,22401+24]..[546,22401+56])
                Pmod_structure
                [
                  structure_item (src/inlining.ml[546,22401+31]..[546,22401+52])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (src/inlining.ml[546,22401+35]..[546,22401+42])
                          Ppat_var "grammar" (src/inlining.ml[546,22401+35]..[546,22401+42])
                        expression (src/inlining.ml[546,22401+45]..[546,22401+52])
                          Pexp_ident "grammar" (src/inlining.ml[546,22401+45]..[546,22401+52])
                    ]
                ]
            expression (src/inlining.ml[547,22462+2]..[547,22462+11])
              Pexp_ident "I.grammar" (src/inlining.ml[547,22462+2]..[547,22462+11])
    ]
]

let position = Positions.position
open Keyword
type sw = (subject * where)
open BasicSyntax
open ListMonad
let drop = MenhirLib.General.drop
let take = MenhirLib.General.take
let rec search (p : 'a -> bool) (i : int) (xs : 'a list) =
  (match xs with
   | [] -> None
   | x::xs -> if p x then Some (i, x) else search p (i + 1) xs : (int * 'a)
                                                                   option)
let search_at p i xs = search p i (drop i xs)
let find grammar symbol =
  (try StringMap.find symbol grammar.rules with | Not_found -> assert false : 
  rule)
let check_no_producer_attributes producer =
  match producer_attributes producer with
  | [] -> ()
  | (id, _payload)::_attributes ->
      Error.error [position id]
        "the nonterminal symbol %s is declared %%inline.\nA use of it cannot carry an attribute."
        (producer_symbol producer)
let check_prec_inline caller producer nsuffix callee =
  callee.branch_prec_annotation |>
    (Option.iter
       (fun callee_prec ->
          if nsuffix > 0
          then
            (let symbol = producer_symbol producer in
             Error.error [position callee_prec; caller.branch_position]
               "this production carries a %%prec annotation,\nand the nonterminal symbol %s is marked %%inline.\nFor this reason, %s can be used only in tail position."
               symbol symbol);
          caller.branch_prec_annotation |>
            (Option.iter
               (fun caller_prec ->
                  let symbol = producer_symbol producer in
                  Error.error [position callee_prec; position caller_prec]
                    "this production carries a %%prec annotation,\nand the nonterminal symbol %s is marked %%inline.\nFor this reason, %s cannot be used in a production\nwhich itself carries a %%prec annotation."
                    symbol symbol))))
let propagate_prec_annotation caller callee =
  match callee.branch_prec_annotation with
  | Some _ as annotation ->
      (assert (caller.branch_prec_annotation = None); annotation)
  | None -> caller.branch_prec_annotation
let new_candidate x =
  let (x, n) = ChopInlined.chop (Lexing.from_string x) in
  Printf.sprintf "%s_inlined%d" x (n + 1)
let rec fresh names x =
  if StringSet.mem x names then fresh names (new_candidate x) else x
let rename (used : StringSet.t) producers =
  (let (phi, _used, producers) =
     List.fold_left
       (fun (phi, used, producers) ->
          fun producer ->
            let id = producer_identifier_located producer in
            let x = Positions.value id in
            if StringSet.mem x used
            then
              let x' = fresh used x in
              let id' = Positions.map (fun _x -> x') id in
              ((Action.extend x x' phi), (StringSet.add x' used),
                ({ producer with producer_identifier = id' } :: producers))
            else (phi, (StringSet.add x used), (producer :: producers)))
       (Action.empty, used, []) producers in
   (phi, (List.rev producers)) : (Action.subst * producers))
let define_positions (name : string array) nprefix ncallee =
  (let startp =
     if ncallee > 0
     then ((RightNamed (name.(nprefix))), WhereStart)
     else
       if nprefix > 0
       then ((RightNamed (name.(nprefix - 1))), WhereEnd)
       else (Before, WhereEnd) in
   let endp =
     if ncallee > 0
     then ((RightNamed (name.((nprefix + ncallee) - 1))), WhereEnd)
     else startp
   and beforeendp =
     if nprefix > 0
     then ((RightNamed (name.(nprefix - 1))), WhereEnd)
     else (Before, WhereEnd) in
   (startp, endp, beforeendp) : (sw * sw * sw))
let rename_sw_outer (x, startpx, endpx) (sw : sw) =
  (match sw with
   | (Before, _) -> None
   | (RightNamed x', where) ->
       if x' = x
       then
         (match where with
          | WhereStart -> Some startpx
          | WhereEnd -> Some endpx
          | WhereSymbolStart -> assert false)
       else None
   | (Left, _) -> assert false : sw option)
let rename_sw_inner beforeendp (sw : sw) =
  (match sw with
   | (Before, where) -> (assert (where = WhereEnd); Some beforeendp)
   | (RightNamed _, _) -> None
   | (Left, _) -> assert false : sw option)
type site = (int * producer)
let inline_branch caller ((i, producer) : site) (callee : branch) =
  (let nprefix = i in
   let nsuffix = (List.length caller.producers) - (i + 1) in
   let prefix = take nprefix caller.producers
   and suffix = drop (nprefix + 1) caller.producers in
   check_prec_inline caller producer nsuffix callee;
   (let branch_prec_annotation = propagate_prec_annotation caller callee in
    let used = StringSet.union (names prefix) (names suffix) in
    let (phi, inlined_producers) = rename used callee.producers in
    let producers = prefix @ (inlined_producers @ suffix) in
    let (_ : StringSet.t) = names producers in
    let (startp, endp, beforeendp) =
      let name =
        (producers |> Array.of_list) |> (Array.map producer_identifier) in
      let ncallee = List.length callee.producers in
      define_positions name nprefix ncallee in
    let x = producer_identifier producer in
    let (caller_action, callee_action) =
      ((Action.rename (rename_sw_outer (x, startp, endp)) Action.empty
          caller.action),
        (Action.rename (rename_sw_inner beforeendp) phi callee.action)) in
    let action = Action.compose x callee_action caller_action in
    let { branch_position; branch_production_level;_} = caller in
    {
      branch_position;
      producers;
      action;
      branch_prec_annotation;
      branch_production_level
    }) : branch)
let inline_branches caller site (callees : branches) =
  (List.map (inline_branch caller site) callees : branches)
module Inline(G:sig val grammar : grammar end) =
  struct
    open G
    let is_inline_symbol = is_inline_symbol grammar
    let is_inline_producer = is_inline_producer grammar
    let find = find grammar
    let () =
      if Settings.coq
      then
        StringMap.iter
          (fun _ ->
             fun rule ->
               if rule.inline_flag
               then
                 Error.error rule.positions
                   "%%inline is not supported by the Coq back-end.")
          grammar.rules
    let rec expand_branches expand_symbol i branches =
      (branches >>=
         (fun (caller : branch) ->
            match search_at is_inline_producer i caller.producers with
            | None -> return caller
            | Some ((i, producer) as site) ->
                (check_no_producer_attributes producer;
                 (let symbol = producer_symbol producer in
                  (((expand_symbol symbol) |> get_branches) |>
                     (inline_branches caller site))
                    |> (expand_branches expand_symbol i)))) : branches)
    let expand_symbol expand_symbol symbol =
      ((find symbol) |>
         (transform_branches (expand_branches expand_symbol 0)) : rule)
    let expand_symbol : Syntax.symbol -> rule =
      Fix.Memoize.String.defensive_fix expand_symbol
    let expand_symbol symbol =
      try expand_symbol symbol
      with
      | Fix.Memoize.String.Cycle (symbols, symbol) ->
          let rule = find symbol in
          let b = Buffer.create 128 in
          (Printf.bprintf b
             "there is a cycle of %%inline nonterminal symbols:\n";
           (match symbols with
            | [] -> assert false
            | head::[] ->
                (assert (head = symbol);
                 Printf.bprintf b "  %s refers to itself." symbol)
            | head::next::symbols ->
                (assert (head = symbol);
                 Printf.bprintf b "  %s refers to %s,\n" head next;
                 List.iter
                   (fun symbol ->
                      Printf.bprintf b "  which refers to %s,\n" symbol)
                   symbols;
                 Printf.bprintf b "  which refers back to %s." symbol));
           Error.error rule.positions "%s" (Buffer.contents b))
    let rules =
      (grammar.rules |>
         (StringMap.filter (fun _ -> fun rule -> not rule.inline_flag)))
        |> (StringMap.mapi (fun symbol -> fun _rule -> expand_symbol symbol))
    let keep symbol _rule = (not (is_inline_symbol symbol) : bool)
    let types = StringMap.filter keep grammar.types
    let keep_or_warn (symbol : string) _rule =
      (let keep = keep symbol _rule in
       if not keep
       then
         Error.grammar_warning []
           "the declaration %%on_error_reduce %s\nhas no effect: this symbol is marked %%inline and is expanded away."
           symbol;
       keep : bool)
    let on_error_reduce =
      StringMap.filter keep_or_warn grammar.on_error_reduce
    let grammar = { grammar with rules; types; on_error_reduce }
  end
let inline grammar =
  let module I = (Inline)(struct let grammar = grammar end) in I.grammar
[
  structure_item (src/inlining.ml[14,998+0]..src/inlining.ml[14,998+33])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[14,998+4]..src/inlining.ml[14,998+12])
          Tpat_var "position/396"
        expression (src/inlining.ml[14,998+15]..src/inlining.ml[14,998+33])
          Texp_ident "Dune__exe!.Positions.position"
    ]
  structure_item (src/inlining.ml[15,1032+0]..src/inlining.ml[15,1032+12])
    Tstr_open Fresh
    module_expr (src/inlining.ml[15,1032+5]..src/inlining.ml[15,1032+12])
      Tmod_ident "MenhirSdk!.Keyword"
  structure_item (src/inlining.ml[16,1045+0]..src/inlining.ml[16,1045+25])
    Tstr_type Rec
    [
      type_declaration sw/438 (src/inlining.ml[16,1045+0]..src/inlining.ml[16,1045+25])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/inlining.ml[16,1045+10]..src/inlining.ml[16,1045+25])
              Ttyp_tuple
              [
                core_type (src/inlining.ml[16,1045+10]..src/inlining.ml[16,1045+17])
                  Ttyp_constr "MenhirSdk!.Keyword.subject"
                  []
                core_type (src/inlining.ml[16,1045+20]..src/inlining.ml[16,1045+25])
                  Ttyp_constr "MenhirSdk!.Keyword.where"
                  []
              ]
    ]
  structure_item (src/inlining.ml[17,1071+0]..src/inlining.ml[17,1071+16])
    Tstr_open Fresh
    module_expr (src/inlining.ml[17,1071+5]..src/inlining.ml[17,1071+16])
      Tmod_ident "Dune__exe!.BasicSyntax"
  structure_item (src/inlining.ml[18,1088+0]..src/inlining.ml[18,1088+14])
    Tstr_open Fresh
    module_expr (src/inlining.ml[18,1088+5]..src/inlining.ml[18,1088+14])
      Tmod_ident "Dune__exe!.ListMonad"
  structure_item (src/inlining.ml[19,1103+0]..src/inlining.ml[19,1103+33])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[19,1103+4]..src/inlining.ml[19,1103+8])
          Tpat_var "drop/469"
        expression (src/inlining.ml[19,1103+11]..src/inlining.ml[19,1103+33])
          Texp_ident "MenhirLib!.General.drop"
    ]
  structure_item (src/inlining.ml[20,1137+0]..src/inlining.ml[20,1137+33])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[20,1137+4]..src/inlining.ml[20,1137+8])
          Tpat_var "take/495"
        expression (src/inlining.ml[20,1137+11]..src/inlining.ml[20,1137+33])
          Texp_ident "MenhirLib!.General.take"
    ]
  structure_item (src/inlining.ml[35,1818+0]..src/inlining.ml[40,1949+52])
    Tstr_value Rec
    [
      <def>
        pattern (src/inlining.ml[35,1818+8]..src/inlining.ml[35,1818+14])
          Tpat_var "search/496"
        expression (src/inlining.ml[35,1818+15]..src/inlining.ml[40,1949+52]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/inlining.ml[35,1818+16]..src/inlining.ml[35,1818+17])
                extra
                  Tpat_extra_constraint
                  core_type (src/inlining.ml[35,1818+20]..src/inlining.ml[35,1818+30])
                    Ttyp_arrow
                    Nolabel
                    core_type (src/inlining.ml[35,1818+20]..src/inlining.ml[35,1818+22])
                      Ttyp_var a
                    core_type (src/inlining.ml[35,1818+26]..src/inlining.ml[35,1818+30])
                      Ttyp_constr "bool/5!"
                      []
                Tpat_alias "p/497"
                pattern (src/inlining.ml[35,1818+16]..src/inlining.ml[35,1818+17])
                  Tpat_any
              expression (src/inlining.ml[35,1818+32]..src/inlining.ml[40,1949+52]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/inlining.ml[35,1818+33]..src/inlining.ml[35,1818+34])
                      extra
                        Tpat_extra_constraint
                        core_type (src/inlining.ml[35,1818+37]..src/inlining.ml[35,1818+40])
                          Ttyp_constr "int/1!"
                          []
                      Tpat_alias "i/498"
                      pattern (src/inlining.ml[35,1818+33]..src/inlining.ml[35,1818+34])
                        Tpat_any
                    expression (src/inlining.ml[35,1818+42]..src/inlining.ml[40,1949+52]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/inlining.ml[35,1818+43]..src/inlining.ml[35,1818+45])
                            extra
                              Tpat_extra_constraint
                              core_type (src/inlining.ml[35,1818+48]..src/inlining.ml[35,1818+55])
                                Ttyp_constr "list/9!"
                                [
                                  core_type (src/inlining.ml[35,1818+48]..src/inlining.ml[35,1818+50])
                                    Ttyp_var a
                                ]
                            Tpat_alias "xs/499"
                            pattern (src/inlining.ml[35,1818+43]..src/inlining.ml[35,1818+45])
                              Tpat_any
                          expression (src/inlining.ml[36,1897+2]..src/inlining.ml[40,1949+52])
                            extra
                              Texp_constraint
                              core_type (src/inlining.ml[35,1818+59]..src/inlining.ml[35,1818+76])
                                Ttyp_constr "option/10!"
                                [
                                  core_type (src/inlining.ml[35,1818+60]..src/inlining.ml[35,1818+68])
                                    Ttyp_tuple
                                    [
                                      core_type (src/inlining.ml[35,1818+60]..src/inlining.ml[35,1818+63])
                                        Ttyp_constr "int/1!"
                                        []
                                      core_type (src/inlining.ml[35,1818+66]..src/inlining.ml[35,1818+68])
                                        Ttyp_var a
                                    ]
                                ]
                            Texp_match
                            expression (src/inlining.ml[36,1897+8]..src/inlining.ml[36,1897+10])
                              Texp_ident "xs/499"
                            [
                              <case>
                                pattern (src/inlining.ml[37,1913+4]..src/inlining.ml[37,1913+6])
                                  Tpat_value
                                  pattern (src/inlining.ml[37,1913+4]..src/inlining.ml[37,1913+6])
                                    Tpat_construct "[]"
                                    []
                                    None
                                expression (src/inlining.ml[38,1923+6]..src/inlining.ml[38,1923+10])
                                  Texp_construct "None"
                                  []
                              <case>
                                pattern (src/inlining.ml[39,1934+4]..src/inlining.ml[39,1934+11])
                                  Tpat_value
                                  pattern (src/inlining.ml[39,1934+4]..src/inlining.ml[39,1934+11])
                                    Tpat_construct "::"
                                    [
                                      pattern (src/inlining.ml[39,1934+4]..src/inlining.ml[39,1934+5])
                                        Tpat_var "x/500"
                                      pattern (src/inlining.ml[39,1934+9]..src/inlining.ml[39,1934+11])
                                        Tpat_var "xs/501"
                                    ]
                                    None
                                expression (src/inlining.ml[40,1949+6]..src/inlining.ml[40,1949+52])
                                  Texp_ifthenelse
                                  expression (src/inlining.ml[40,1949+9]..src/inlining.ml[40,1949+12])
                                    Texp_apply
                                    expression (src/inlining.ml[40,1949+9]..src/inlining.ml[40,1949+10])
                                      Texp_ident "p/497"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/inlining.ml[40,1949+11]..src/inlining.ml[40,1949+12])
                                          Texp_ident "x/500"
                                    ]
                                  expression (src/inlining.ml[40,1949+18]..src/inlining.ml[40,1949+29])
                                    Texp_construct "Some"
                                    [
                                      expression (src/inlining.ml[40,1949+23]..src/inlining.ml[40,1949+29])
                                        Texp_tuple
                                        [
                                          expression (src/inlining.ml[40,1949+24]..src/inlining.ml[40,1949+25])
                                            Texp_ident "i/498"
                                          expression (src/inlining.ml[40,1949+27]..src/inlining.ml[40,1949+28])
                                            Texp_ident "x/500"
                                        ]
                                    ]
                                  Some
                                    expression (src/inlining.ml[40,1949+35]..src/inlining.ml[40,1949+52])
                                      Texp_apply
                                      expression (src/inlining.ml[40,1949+35]..src/inlining.ml[40,1949+41])
                                        Texp_ident "search/496"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/inlining.ml[40,1949+42]..src/inlining.ml[40,1949+43])
                                            Texp_ident "p/497"
                                        <arg>
                                          Nolabel
                                          expression (src/inlining.ml[40,1949+44]..src/inlining.ml[40,1949+49])
                                            Texp_apply
                                            expression (src/inlining.ml[40,1949+46]..src/inlining.ml[40,1949+47])
                                              Texp_ident "Stdlib!.+"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/inlining.ml[40,1949+45]..src/inlining.ml[40,1949+46])
                                                  Texp_ident "i/498"
                                              <arg>
                                                Nolabel
                                                expression (src/inlining.ml[40,1949+47]..src/inlining.ml[40,1949+48])
                                                  Texp_constant Const_int 1
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/inlining.ml[40,1949+50]..src/inlining.ml[40,1949+52])
                                            Texp_ident "xs/501"
                                      ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/inlining.ml[46,2239+0]..src/inlining.ml[47,2262+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[46,2239+4]..src/inlining.ml[46,2239+13])
          Tpat_var "search_at/502"
        expression (src/inlining.ml[46,2239+14]..src/inlining.ml[47,2262+24]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/inlining.ml[46,2239+14]..src/inlining.ml[46,2239+15])
                Tpat_var "p/504"
              expression (src/inlining.ml[46,2239+16]..src/inlining.ml[47,2262+24]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/inlining.ml[46,2239+16]..src/inlining.ml[46,2239+17])
                      Tpat_var "i/505"
                    expression (src/inlining.ml[46,2239+18]..src/inlining.ml[47,2262+24]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/inlining.ml[46,2239+18]..src/inlining.ml[46,2239+20])
                            Tpat_var "xs/506"
                          expression (src/inlining.ml[47,2262+2]..src/inlining.ml[47,2262+24])
                            Texp_apply
                            expression (src/inlining.ml[47,2262+2]..src/inlining.ml[47,2262+8])
                              Texp_ident "search/496"
                            [
                              <arg>
                                Nolabel
                                expression (src/inlining.ml[47,2262+9]..src/inlining.ml[47,2262+10])
                                  Texp_ident "p/504"
                              <arg>
                                Nolabel
                                expression (src/inlining.ml[47,2262+11]..src/inlining.ml[47,2262+12])
                                  Texp_ident "i/505"
                              <arg>
                                Nolabel
                                expression (src/inlining.ml[47,2262+13]..src/inlining.ml[47,2262+24])
                                  Texp_apply
                                  expression (src/inlining.ml[47,2262+14]..src/inlining.ml[47,2262+18])
                                    Texp_ident "drop/469"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/inlining.ml[47,2262+19]..src/inlining.ml[47,2262+20])
                                        Texp_ident "i/505"
                                    <arg>
                                      Nolabel
                                      expression (src/inlining.ml[47,2262+21]..src/inlining.ml[47,2262+23])
                                        Texp_ident "xs/506"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/inlining.ml[54,2507+0]..src/inlining.ml[59,2636+16])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[54,2507+4]..src/inlining.ml[54,2507+8])
          Tpat_var "find/507"
        expression (src/inlining.ml[54,2507+9]..src/inlining.ml[59,2636+16]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/inlining.ml[54,2507+9]..src/inlining.ml[54,2507+16])
                Tpat_var "grammar/509"
              expression (src/inlining.ml[54,2507+17]..src/inlining.ml[59,2636+16]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/inlining.ml[54,2507+17]..src/inlining.ml[54,2507+23])
                      Tpat_var "symbol/510"
                    expression (src/inlining.ml[55,2540+2]..src/inlining.ml[59,2636+16])
                      extra
                        Texp_constraint
                        core_type (src/inlining.ml[54,2507+26]..src/inlining.ml[54,2507+30])
                          Ttyp_constr "Dune__exe!.BasicSyntax.rule"
                          []
                      Texp_try
                      expression (src/inlining.ml[56,2546+4]..src/inlining.ml[56,2546+39])
                        Texp_apply
                        expression (src/inlining.ml[56,2546+4]..src/inlining.ml[56,2546+18])
                          Texp_ident "Dune__exe!.StringMap.find"
                        [
                          <arg>
                            Nolabel
                            expression (src/inlining.ml[56,2546+19]..src/inlining.ml[56,2546+25])
                              Texp_ident "symbol/510"
                          <arg>
                            Nolabel
                            expression (src/inlining.ml[56,2546+26]..src/inlining.ml[56,2546+39])
                              Texp_field
                              expression (src/inlining.ml[56,2546+26]..src/inlining.ml[56,2546+33])
                                Texp_ident "grammar/509"
                              "rules"
                        ]
                      [
                        <case>
                          pattern (src/inlining.ml[57,2586+7]..src/inlining.ml[57,2586+16])
                            Tpat_construct "Not_found"
                            []
                            None
                          expression (src/inlining.ml[59,2636+4]..src/inlining.ml[59,2636+16])
                            Texp_assert                            expression (src/inlining.ml[59,2636+11]..src/inlining.ml[59,2636+16])
                              Texp_construct "false"
                              []
                      ]
                ]
          ]
    ]
  structure_item (src/inlining.ml[67,2968+0]..src/inlining.ml[76,3259+34])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[67,2968+4]..src/inlining.ml[67,2968+32])
          Tpat_var "check_no_producer_attributes/607"
        expression (src/inlining.ml[67,2968+33]..src/inlining.ml[76,3259+34]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/inlining.ml[67,2968+33]..src/inlining.ml[67,2968+41])
                Tpat_var "producer/609"
              expression (src/inlining.ml[68,3012+2]..src/inlining.ml[76,3259+34])
                Texp_match
                expression (src/inlining.ml[68,3012+8]..src/inlining.ml[68,3012+36])
                  Texp_apply
                  expression (src/inlining.ml[68,3012+8]..src/inlining.ml[68,3012+27])
                    Texp_ident "Dune__exe!.BasicSyntax.producer_attributes"
                  [
                    <arg>
                      Nolabel
                      expression (src/inlining.ml[68,3012+28]..src/inlining.ml[68,3012+36])
                        Texp_ident "producer/609"
                  ]
                [
                  <case>
                    pattern (src/inlining.ml[69,3054+4]..src/inlining.ml[69,3054+6])
                      Tpat_value
                      pattern (src/inlining.ml[69,3054+4]..src/inlining.ml[69,3054+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/inlining.ml[70,3064+6]..src/inlining.ml[70,3064+8])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/inlining.ml[71,3073+4]..src/inlining.ml[71,3073+33])
                      Tpat_value
                      pattern (src/inlining.ml[71,3073+4]..src/inlining.ml[71,3073+33])
                        Tpat_construct "::"
                        [
                          pattern (src/inlining.ml[71,3073+4]..src/inlining.ml[71,3073+18])
                            Tpat_tuple
                            [
                              pattern (src/inlining.ml[71,3073+5]..src/inlining.ml[71,3073+7])
                                Tpat_var "id/665"
                              pattern (src/inlining.ml[71,3073+9]..src/inlining.ml[71,3073+17])
                                Tpat_var "_payload/666"
                            ]
                          pattern (src/inlining.ml[71,3073+22]..src/inlining.ml[71,3073+33])
                            Tpat_var "_attributes/667"
                        ]
                        None
                    expression (src/inlining.ml[72,3110+6]..src/inlining.ml[76,3259+34])
                      Texp_apply
                      expression (src/inlining.ml[72,3110+6]..src/inlining.ml[72,3110+17])
                        Texp_ident "Dune__exe!.Error.error"
                      [
                        <arg>
                          Nolabel
                          expression (src/inlining.ml[73,3128+8]..src/inlining.ml[73,3128+21])
                            Texp_construct "::"
                            [
                              expression (src/inlining.ml[73,3128+9]..src/inlining.ml[73,3128+20])
                                Texp_apply
                                expression (src/inlining.ml[73,3128+9]..src/inlining.ml[73,3128+17])
                                  Texp_ident "position/396"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/inlining.ml[73,3128+18]..src/inlining.ml[73,3128+20])
                                      Texp_ident "id/665"
                                ]
                              expression (src/inlining.ml[73,3128+20]..src/inlining.ml[73,3128+21]) ghost
                                Texp_construct "[]"
                                []
                            ]
                        <arg>
                          Nolabel
                          expression (src/inlining.ml[74,3150+8]..src/inlining.ml[75,3210+48])
                            Texp_construct "CamlinternalFormatBasics.Format"
                            [
                              expression (src/inlining.ml[74,3150+8]..src/inlining.ml[75,3210+48]) ghost
                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                [
                                  expression (src/inlining.ml[74,3150+8]..src/inlining.ml[75,3210+48]) ghost
                                    Texp_constant Const_string("the nonterminal symbol ",(src/inlining.ml[74,3150+8]..src/inlining.ml[75,3210+48]) ghost,None)
                                  expression (src/inlining.ml[74,3150+8]..src/inlining.ml[75,3210+48]) ghost
                                    Texp_construct "CamlinternalFormatBasics.String"
                                    [
                                      expression (src/inlining.ml[74,3150+8]..src/inlining.ml[75,3210+48]) ghost
                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                        []
                                      expression (src/inlining.ml[74,3150+8]..src/inlining.ml[75,3210+48]) ghost
                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                        [
                                          expression (src/inlining.ml[74,3150+8]..src/inlining.ml[75,3210+48]) ghost
                                            Texp_constant Const_string(" is declared ",(src/inlining.ml[74,3150+8]..src/inlining.ml[75,3210+48]) ghost,None)
                                          expression (src/inlining.ml[74,3150+8]..src/inlining.ml[75,3210+48]) ghost
                                            Texp_construct "CamlinternalFormatBasics.Char_literal"
                                            [
                                              expression (src/inlining.ml[74,3150+8]..src/inlining.ml[75,3210+48]) ghost
                                                Texp_constant Const_char 25
                                              expression (src/inlining.ml[74,3150+8]..src/inlining.ml[75,3210+48]) ghost
                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                [
                                                  expression (src/inlining.ml[74,3150+8]..src/inlining.ml[75,3210+48]) ghost
                                                    Texp_constant Const_string("inline.\nA use of it cannot carry an attribute.",(src/inlining.ml[74,3150+8]..src/inlining.ml[75,3210+48]) ghost,None)
                                                  expression (src/inlining.ml[74,3150+8]..src/inlining.ml[75,3210+48]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                    []
                                                ]
                                            ]
                                        ]
                                    ]
                                ]
                              expression (src/inlining.ml[74,3150+8]..src/inlining.ml[75,3210+48]) ghost
                                Texp_constant Const_string("the nonterminal symbol %s is declared %%inline.\nA use of it cannot carry an attribute.",(src/inlining.ml[74,3150+8]..src/inlining.ml[75,3210+48]) ghost,None)
                            ]
                        <arg>
                          Nolabel
                          expression (src/inlining.ml[76,3259+8]..src/inlining.ml[76,3259+34])
                            Texp_apply
                            expression (src/inlining.ml[76,3259+9]..src/inlining.ml[76,3259+24])
                              Texp_ident "Dune__exe!.BasicSyntax.producer_symbol"
                            [
                              <arg>
                                Nolabel
                                expression (src/inlining.ml[76,3259+25]..src/inlining.ml[76,3259+33])
                                  Texp_ident "producer/609"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/inlining.ml[86,3723+0]..src/inlining.ml[108,4750+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[86,3723+4]..src/inlining.ml[86,3723+21])
          Tpat_var "check_prec_inline/743"
        expression (src/inlining.ml[86,3723+22]..src/inlining.ml[108,4750+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/inlining.ml[86,3723+22]..src/inlining.ml[86,3723+28])
                Tpat_var "caller/745"
              expression (src/inlining.ml[86,3723+29]..src/inlining.ml[108,4750+3]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/inlining.ml[86,3723+29]..src/inlining.ml[86,3723+37])
                      Tpat_var "producer/746"
                    expression (src/inlining.ml[86,3723+38]..src/inlining.ml[108,4750+3]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/inlining.ml[86,3723+38]..src/inlining.ml[86,3723+45])
                            Tpat_var "nsuffix/747"
                          expression (src/inlining.ml[86,3723+46]..src/inlining.ml[108,4750+3]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/inlining.ml[86,3723+46]..src/inlining.ml[86,3723+52])
                                  Tpat_var "callee/748"
                                expression (src/inlining.ml[87,3778+2]..src/inlining.ml[108,4750+3])
                                  Texp_apply
                                  expression (src/inlining.ml[87,3778+35]..src/inlining.ml[108,4750+3])
                                    Texp_apply
                                    expression (src/inlining.ml[87,3778+35]..src/inlining.ml[87,3778+46])
                                      Texp_ident "Dune__exe!.Option.iter"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/inlining.ml[87,3778+47]..src/inlining.ml[108,4750+3])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/inlining.ml[87,3778+52]..src/inlining.ml[87,3778+63])
                                                Tpat_var "callee_prec/760"
                                              expression (src/inlining.ml[90,3919+4]..src/inlining.ml[107,4744+5])
                                                Texp_sequence
                                                expression (src/inlining.ml[90,3919+4]..src/inlining.ml[97,4269+7])
                                                  Texp_ifthenelse
                                                  expression (src/inlining.ml[90,3919+7]..src/inlining.ml[90,3919+18])
                                                    Texp_apply
                                                    expression (src/inlining.ml[90,3919+15]..src/inlining.ml[90,3919+16])
                                                      Texp_ident "Stdlib!.>"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/inlining.ml[90,3919+7]..src/inlining.ml[90,3919+14])
                                                          Texp_ident "nsuffix/747"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/inlining.ml[90,3919+17]..src/inlining.ml[90,3919+18])
                                                          Texp_constant Const_int 0
                                                    ]
                                                  expression (src/inlining.ml[90,3919+24]..src/inlining.ml[97,4269+7])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (src/inlining.ml[91,3949+10]..src/inlining.ml[91,3949+16])
                                                          Tpat_var "symbol/761"
                                                        expression (src/inlining.ml[91,3949+19]..src/inlining.ml[91,3949+43])
                                                          Texp_apply
                                                          expression (src/inlining.ml[91,3949+19]..src/inlining.ml[91,3949+34])
                                                            Texp_ident "Dune__exe!.BasicSyntax.producer_symbol"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/inlining.ml[91,3949+35]..src/inlining.ml[91,3949+43])
                                                                Texp_ident "producer/746"
                                                          ]
                                                    ]
                                                    expression (src/inlining.ml[92,3996+6]..src/inlining.ml[96,4247+21])
                                                      Texp_apply
                                                      expression (src/inlining.ml[92,3996+6]..src/inlining.ml[92,3996+17])
                                                        Texp_ident "Dune__exe!.Error.error"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/inlining.ml[92,3996+18]..src/inlining.ml[92,3996+66])
                                                            Texp_construct "::"
                                                            [
                                                              expression (src/inlining.ml[92,3996+20]..src/inlining.ml[92,3996+40])
                                                                Texp_apply
                                                                expression (src/inlining.ml[92,3996+20]..src/inlining.ml[92,3996+28])
                                                                  Texp_ident "position/396"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/inlining.ml[92,3996+29]..src/inlining.ml[92,3996+40])
                                                                      Texp_ident "callee_prec/760"
                                                                ]
                                                              expression (src/inlining.ml[92,3996+42]..src/inlining.ml[92,3996+66]) ghost
                                                                Texp_construct "::"
                                                                [
                                                                  expression (src/inlining.ml[92,3996+42]..src/inlining.ml[92,3996+64])
                                                                    Texp_field
                                                                    expression (src/inlining.ml[92,3996+42]..src/inlining.ml[92,3996+48])
                                                                      Texp_ident "caller/745"
                                                                    "branch_position"
                                                                  expression (src/inlining.ml[92,3996+65]..src/inlining.ml[92,3996+66]) ghost
                                                                    Texp_construct "[]"
                                                                    []
                                                                ]
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64])
                                                            Texp_construct "CamlinternalFormatBasics.Format"
                                                            [
                                                              expression (src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                [
                                                                  expression (src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost
                                                                    Texp_constant Const_string("this production carries a ",(src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost,None)
                                                                  expression (src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                    [
                                                                      expression (src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost
                                                                        Texp_constant Const_char 25
                                                                      expression (src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                        [
                                                                          expression (src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost
                                                                            Texp_constant Const_string("prec annotation,\nand the nonterminal symbol ",(src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost,None)
                                                                          expression (src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.String"
                                                                            [
                                                                              expression (src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                []
                                                                              expression (src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                [
                                                                                  expression (src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost
                                                                                    Texp_constant Const_string(" is marked ",(src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost,None)
                                                                                  expression (src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                    [
                                                                                      expression (src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost
                                                                                        Texp_constant Const_char 25
                                                                                      expression (src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                        [
                                                                                          expression (src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost
                                                                                            Texp_constant Const_string("inline.\nFor this reason, ",(src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost,None)
                                                                                          expression (src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.String"
                                                                                            [
                                                                                              expression (src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost
                                                                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                []
                                                                                              expression (src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost
                                                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                [
                                                                                                  expression (src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost
                                                                                                    Texp_constant Const_string(" can be used only in tail position.",(src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost,None)
                                                                                                  expression (src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost
                                                                                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                    []
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                              expression (src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost
                                                                Texp_constant Const_string("this production carries a %%prec annotation,\nand the nonterminal symbol %s is marked %%inline.\nFor this reason, %s can be used only in tail position.",(src/inlining.ml[93,4063+8]..src/inlining.ml[95,4182+64]) ghost,None)
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/inlining.ml[96,4247+8]..src/inlining.ml[96,4247+14])
                                                            Texp_ident "symbol/761"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/inlining.ml[96,4247+15]..src/inlining.ml[96,4247+21])
                                                            Texp_ident "symbol/761"
                                                      ]
                                                  None
                                                expression (src/inlining.ml[99,4307+4]..src/inlining.ml[107,4744+5])
                                                  Texp_apply
                                                  expression (src/inlining.ml[99,4307+37]..src/inlining.ml[107,4744+5])
                                                    Texp_apply
                                                    expression (src/inlining.ml[99,4307+37]..src/inlining.ml[99,4307+48])
                                                      Texp_ident "Dune__exe!.Option.iter"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/inlining.ml[99,4307+49]..src/inlining.ml[107,4744+5])
                                                          Texp_function
                                                          Nolabel
                                                          [
                                                            <case>
                                                              pattern (src/inlining.ml[99,4307+54]..src/inlining.ml[99,4307+65])
                                                                Tpat_var "caller_prec/762"
                                                              expression (src/inlining.ml[100,4376+6]..src/inlining.ml[106,4722+21])
                                                                Texp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (src/inlining.ml[100,4376+10]..src/inlining.ml[100,4376+16])
                                                                      Tpat_var "symbol/763"
                                                                    expression (src/inlining.ml[100,4376+19]..src/inlining.ml[100,4376+43])
                                                                      Texp_apply
                                                                      expression (src/inlining.ml[100,4376+19]..src/inlining.ml[100,4376+34])
                                                                        Texp_ident "Dune__exe!.BasicSyntax.producer_symbol"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/inlining.ml[100,4376+35]..src/inlining.ml[100,4376+43])
                                                                            Texp_ident "producer/746"
                                                                      ]
                                                                ]
                                                                expression (src/inlining.ml[101,4423+6]..src/inlining.ml[106,4722+21])
                                                                  Texp_apply
                                                                  expression (src/inlining.ml[101,4423+6]..src/inlining.ml[101,4423+17])
                                                                    Texp_ident "Dune__exe!.Error.error"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/inlining.ml[101,4423+18]..src/inlining.ml[101,4423+64])
                                                                        Texp_construct "::"
                                                                        [
                                                                          expression (src/inlining.ml[101,4423+20]..src/inlining.ml[101,4423+40])
                                                                            Texp_apply
                                                                            expression (src/inlining.ml[101,4423+20]..src/inlining.ml[101,4423+28])
                                                                              Texp_ident "position/396"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/inlining.ml[101,4423+29]..src/inlining.ml[101,4423+40])
                                                                                  Texp_ident "callee_prec/760"
                                                                            ]
                                                                          expression (src/inlining.ml[101,4423+42]..src/inlining.ml[101,4423+64]) ghost
                                                                            Texp_construct "::"
                                                                            [
                                                                              expression (src/inlining.ml[101,4423+42]..src/inlining.ml[101,4423+62])
                                                                                Texp_apply
                                                                                expression (src/inlining.ml[101,4423+42]..src/inlining.ml[101,4423+50])
                                                                                  Texp_ident "position/396"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/inlining.ml[101,4423+51]..src/inlining.ml[101,4423+62])
                                                                                      Texp_ident "caller_prec/762"
                                                                                ]
                                                                              expression (src/inlining.ml[101,4423+63]..src/inlining.ml[101,4423+64]) ghost
                                                                                Texp_construct "[]"
                                                                                []
                                                                            ]
                                                                        ]
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51])
                                                                        Texp_construct "CamlinternalFormatBasics.Format"
                                                                        [
                                                                          expression (src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                            [
                                                                              expression (src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost
                                                                                Texp_constant Const_string("this production carries a ",(src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost,None)
                                                                              expression (src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                [
                                                                                  expression (src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost
                                                                                    Texp_constant Const_char 25
                                                                                  expression (src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                    [
                                                                                      expression (src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost
                                                                                        Texp_constant Const_string("prec annotation,\nand the nonterminal symbol ",(src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost,None)
                                                                                      expression (src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.String"
                                                                                        [
                                                                                          expression (src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                            []
                                                                                          expression (src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                            [
                                                                                              expression (src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost
                                                                                                Texp_constant Const_string(" is marked ",(src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost,None)
                                                                                              expression (src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost
                                                                                                Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                                [
                                                                                                  expression (src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost
                                                                                                    Texp_constant Const_char 25
                                                                                                  expression (src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost
                                                                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                    [
                                                                                                      expression (src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost
                                                                                                        Texp_constant Const_string("inline.\nFor this reason, ",(src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost,None)
                                                                                                      expression (src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost
                                                                                                        Texp_construct "CamlinternalFormatBasics.String"
                                                                                                        [
                                                                                                          expression (src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost
                                                                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                                            []
                                                                                                          expression (src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost
                                                                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                            [
                                                                                                              expression (src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost
                                                                                                                Texp_constant Const_string(" cannot be used in a production\nwhich itself carries a ",(src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost,None)
                                                                                                              expression (src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost
                                                                                                                Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                                                [
                                                                                                                  expression (src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost
                                                                                                                    Texp_constant Const_char 25
                                                                                                                  expression (src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost
                                                                                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                                    [
                                                                                                                      expression (src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost
                                                                                                                        Texp_constant Const_string("prec annotation.",(src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost,None)
                                                                                                                      expression (src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost
                                                                                                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                                        []
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                        ]
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                          expression (src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost
                                                                            Texp_constant Const_string("this production carries a %%prec annotation,\nand the nonterminal symbol %s is marked %%inline.\nFor this reason, %s cannot be used in a production\nwhich itself carries a %%prec annotation.",(src/inlining.ml[102,4488+8]..src/inlining.ml[105,4670+51]) ghost,None)
                                                                        ]
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/inlining.ml[106,4722+8]..src/inlining.ml[106,4722+14])
                                                                        Texp_ident "symbol/763"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/inlining.ml[106,4722+15]..src/inlining.ml[106,4722+21])
                                                                        Texp_ident "symbol/763"
                                                                  ]
                                                          ]
                                                    ]
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/inlining.ml[99,4307+4]..src/inlining.ml[99,4307+33])
                                                        Texp_field
                                                        expression (src/inlining.ml[99,4307+4]..src/inlining.ml[99,4307+10])
                                                          Texp_ident "caller/745"
                                                        "branch_prec_annotation"
                                                  ]
                                          ]
                                    ]
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/inlining.ml[87,3778+2]..src/inlining.ml[87,3778+31])
                                        Texp_field
                                        expression (src/inlining.ml[87,3778+2]..src/inlining.ml[87,3778+8])
                                          Texp_ident "callee/748"
                                        "branch_prec_annotation"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/inlining.ml[117,5095+0]..src/inlining.ml[123,5296+35])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[117,5095+4]..src/inlining.ml[117,5095+29])
          Tpat_var "propagate_prec_annotation/764"
        expression (src/inlining.ml[117,5095+30]..src/inlining.ml[123,5296+35]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/inlining.ml[117,5095+30]..src/inlining.ml[117,5095+36])
                Tpat_var "caller/766"
              expression (src/inlining.ml[117,5095+37]..src/inlining.ml[123,5296+35]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/inlining.ml[117,5095+37]..src/inlining.ml[117,5095+43])
                      Tpat_var "callee/767"
                    expression (src/inlining.ml[118,5141+2]..src/inlining.ml[123,5296+35])
                      Texp_match
                      expression (src/inlining.ml[118,5141+8]..src/inlining.ml[118,5141+37])
                        Texp_field
                        expression (src/inlining.ml[118,5141+8]..src/inlining.ml[118,5141+14])
                          Texp_ident "callee/767"
                        "branch_prec_annotation"
                      [
                        <case>
                          pattern (src/inlining.ml[119,5184+4]..src/inlining.ml[119,5184+26])
                            Tpat_value
                            pattern (src/inlining.ml[119,5184+4]..src/inlining.ml[119,5184+26])
                              Tpat_alias "annotation/768"
                              pattern (src/inlining.ml[119,5184+4]..src/inlining.ml[119,5184+12])
                                Tpat_construct "Some"
                                [
                                  pattern (src/inlining.ml[119,5184+10]..src/inlining.ml[119,5184+11])
                                    Tpat_any
                                ]
                                None
                          expression (src/inlining.ml[120,5214+6]..src/inlining.ml[121,5267+16])
                            Texp_sequence
                            expression (src/inlining.ml[120,5214+6]..src/inlining.ml[120,5214+51])
                              Texp_assert                              expression (src/inlining.ml[120,5214+13]..src/inlining.ml[120,5214+51])
                                Texp_apply
                                expression (src/inlining.ml[120,5214+44]..src/inlining.ml[120,5214+45])
                                  Texp_ident "Stdlib!.="
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/inlining.ml[120,5214+14]..src/inlining.ml[120,5214+43])
                                      Texp_field
                                      expression (src/inlining.ml[120,5214+14]..src/inlining.ml[120,5214+20])
                                        Texp_ident "caller/766"
                                      "branch_prec_annotation"
                                  <arg>
                                    Nolabel
                                    expression (src/inlining.ml[120,5214+46]..src/inlining.ml[120,5214+50])
                                      Texp_construct "None"
                                      []
                                ]
                            expression (src/inlining.ml[121,5267+6]..src/inlining.ml[121,5267+16])
                              Texp_ident "annotation/768"
                        <case>
                          pattern (src/inlining.ml[122,5284+4]..src/inlining.ml[122,5284+8])
                            Tpat_value
                            pattern (src/inlining.ml[122,5284+4]..src/inlining.ml[122,5284+8])
                              Tpat_construct "None"
                              []
                              None
                          expression (src/inlining.ml[123,5296+6]..src/inlining.ml[123,5296+35])
                            Texp_field
                            expression (src/inlining.ml[123,5296+6]..src/inlining.ml[123,5296+12])
                              Texp_ident "caller/766"
                            "branch_prec_annotation"
                      ]
                ]
          ]
    ]
  structure_item (src/inlining.ml[139,6123+0]..src/inlining.ml[141,6201+41])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[139,6123+4]..src/inlining.ml[139,6123+17])
          Tpat_var "new_candidate/769"
        expression (src/inlining.ml[139,6123+18]..src/inlining.ml[141,6201+41]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/inlining.ml[139,6123+18]..src/inlining.ml[139,6123+19])
                Tpat_var "x/771"
              expression (src/inlining.ml[140,6145+2]..src/inlining.ml[141,6201+41])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/inlining.ml[140,6145+6]..src/inlining.ml[140,6145+10])
                      Tpat_tuple
                      [
                        pattern (src/inlining.ml[140,6145+6]..src/inlining.ml[140,6145+7])
                          Tpat_var "x/772"
                        pattern (src/inlining.ml[140,6145+9]..src/inlining.ml[140,6145+10])
                          Tpat_var "n/773"
                      ]
                    expression (src/inlining.ml[140,6145+13]..src/inlining.ml[140,6145+52])
                      Texp_apply
                      expression (src/inlining.ml[140,6145+13]..src/inlining.ml[140,6145+29])
                        Texp_ident "Dune__exe!.ChopInlined.chop"
                      [
                        <arg>
                          Nolabel
                          expression (src/inlining.ml[140,6145+30]..src/inlining.ml[140,6145+52])
                            Texp_apply
                            expression (src/inlining.ml[140,6145+31]..src/inlining.ml[140,6145+49])
                              Texp_ident "Stdlib!.Lexing.from_string"
                            [
                              <arg>
                                Optional "with_positions"
                                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                  Texp_construct "None"
                                  []
                              <arg>
                                Nolabel
                                expression (src/inlining.ml[140,6145+50]..src/inlining.ml[140,6145+51])
                                  Texp_ident "x/771"
                            ]
                      ]
                ]
                expression (src/inlining.ml[141,6201+2]..src/inlining.ml[141,6201+41])
                  Texp_apply
                  expression (src/inlining.ml[141,6201+2]..src/inlining.ml[141,6201+16])
                    Texp_ident "Stdlib!.Printf.sprintf"
                  [
                    <arg>
                      Nolabel
                      expression (src/inlining.ml[141,6201+17]..src/inlining.ml[141,6201+31])
                        Texp_construct "CamlinternalFormatBasics.Format"
                        [
                          expression (src/inlining.ml[141,6201+17]..src/inlining.ml[141,6201+31]) ghost
                            Texp_construct "CamlinternalFormatBasics.String"
                            [
                              expression (src/inlining.ml[141,6201+17]..src/inlining.ml[141,6201+31]) ghost
                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                []
                              expression (src/inlining.ml[141,6201+17]..src/inlining.ml[141,6201+31]) ghost
                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                [
                                  expression (src/inlining.ml[141,6201+17]..src/inlining.ml[141,6201+31]) ghost
                                    Texp_constant Const_string("_inlined",(src/inlining.ml[141,6201+17]..src/inlining.ml[141,6201+31]) ghost,None)
                                  expression (src/inlining.ml[141,6201+17]..src/inlining.ml[141,6201+31]) ghost
                                    Texp_construct "CamlinternalFormatBasics.Int"
                                    [
                                      expression (src/inlining.ml[141,6201+17]..src/inlining.ml[141,6201+31]) ghost
                                        Texp_construct "CamlinternalFormatBasics.Int_d"
                                        []
                                      expression (src/inlining.ml[141,6201+17]..src/inlining.ml[141,6201+31]) ghost
                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                        []
                                      expression (src/inlining.ml[141,6201+17]..src/inlining.ml[141,6201+31]) ghost
                                        Texp_construct "CamlinternalFormatBasics.No_precision"
                                        []
                                      expression (src/inlining.ml[141,6201+17]..src/inlining.ml[141,6201+31]) ghost
                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                        []
                                    ]
                                ]
                            ]
                          expression (src/inlining.ml[141,6201+17]..src/inlining.ml[141,6201+31]) ghost
                            Texp_constant Const_string("%s_inlined%d",(src/inlining.ml[141,6201+17]..src/inlining.ml[141,6201+31]) ghost,None)
                        ]
                    <arg>
                      Nolabel
                      expression (src/inlining.ml[141,6201+32]..src/inlining.ml[141,6201+33])
                        Texp_ident "x/772"
                    <arg>
                      Nolabel
                      expression (src/inlining.ml[141,6201+34]..src/inlining.ml[141,6201+41])
                        Texp_apply
                        expression (src/inlining.ml[141,6201+37]..src/inlining.ml[141,6201+38])
                          Texp_ident "Stdlib!.+"
                        [
                          <arg>
                            Nolabel
                            expression (src/inlining.ml[141,6201+35]..src/inlining.ml[141,6201+36])
                              Texp_ident "n/773"
                          <arg>
                            Nolabel
                            expression (src/inlining.ml[141,6201+39]..src/inlining.ml[141,6201+40])
                              Texp_constant Const_int 1
                        ]
                  ]
          ]
    ]
  structure_item (src/inlining.ml[147,6419+0]..src/inlining.ml[148,6443+68])
    Tstr_value Rec
    [
      <def>
        pattern (src/inlining.ml[147,6419+8]..src/inlining.ml[147,6419+13])
          Tpat_var "fresh/838"
        expression (src/inlining.ml[147,6419+14]..src/inlining.ml[148,6443+68]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/inlining.ml[147,6419+14]..src/inlining.ml[147,6419+19])
                Tpat_var "names/839"
              expression (src/inlining.ml[147,6419+20]..src/inlining.ml[148,6443+68]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/inlining.ml[147,6419+20]..src/inlining.ml[147,6419+21])
                      Tpat_var "x/840"
                    expression (src/inlining.ml[148,6443+2]..src/inlining.ml[148,6443+68])
                      Texp_ifthenelse
                      expression (src/inlining.ml[148,6443+5]..src/inlining.ml[148,6443+26])
                        Texp_apply
                        expression (src/inlining.ml[148,6443+5]..src/inlining.ml[148,6443+18])
                          Texp_ident "Dune__exe!.StringSet.mem"
                        [
                          <arg>
                            Nolabel
                            expression (src/inlining.ml[148,6443+19]..src/inlining.ml[148,6443+20])
                              Texp_ident "x/840"
                          <arg>
                            Nolabel
                            expression (src/inlining.ml[148,6443+21]..src/inlining.ml[148,6443+26])
                              Texp_ident "names/839"
                        ]
                      expression (src/inlining.ml[148,6443+32]..src/inlining.ml[148,6443+61])
                        Texp_apply
                        expression (src/inlining.ml[148,6443+32]..src/inlining.ml[148,6443+37])
                          Texp_ident "fresh/838"
                        [
                          <arg>
                            Nolabel
                            expression (src/inlining.ml[148,6443+38]..src/inlining.ml[148,6443+43])
                              Texp_ident "names/839"
                          <arg>
                            Nolabel
                            expression (src/inlining.ml[148,6443+44]..src/inlining.ml[148,6443+61])
                              Texp_apply
                              expression (src/inlining.ml[148,6443+45]..src/inlining.ml[148,6443+58])
                                Texp_ident "new_candidate/769"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/inlining.ml[148,6443+59]..src/inlining.ml[148,6443+60])
                                    Texp_ident "x/840"
                              ]
                        ]
                      Some
                        expression (src/inlining.ml[148,6443+67]..src/inlining.ml[148,6443+68])
                          Texp_ident "x/840"
                ]
          ]
    ]
  structure_item (src/inlining.ml[161,7113+0]..src/inlining.ml[176,7728+25])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[161,7113+4]..src/inlining.ml[161,7113+10])
          Tpat_var "rename/933"
        expression (src/inlining.ml[161,7113+11]..src/inlining.ml[176,7728+25]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/inlining.ml[161,7113+12]..src/inlining.ml[161,7113+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/inlining.ml[161,7113+19]..src/inlining.ml[161,7113+30])
                    Ttyp_constr "Dune__exe!.StringSet.t"
                    []
                Tpat_alias "used/935"
                pattern (src/inlining.ml[161,7113+12]..src/inlining.ml[161,7113+16])
                  Tpat_any
              expression (src/inlining.ml[161,7113+32]..src/inlining.ml[176,7728+25]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/inlining.ml[161,7113+32]..src/inlining.ml[161,7113+41])
                      Tpat_var "producers/936"
                    expression (src/inlining.ml[162,7183+2]..src/inlining.ml[176,7728+25])
                      extra
                        Texp_constraint
                        core_type (src/inlining.ml[161,7113+43]..src/inlining.ml[161,7113+67])
                          Ttyp_tuple
                          [
                            core_type (src/inlining.ml[161,7113+43]..src/inlining.ml[161,7113+55])
                              Ttyp_constr "Dune__exe!.Action.subst"
                              []
                            core_type (src/inlining.ml[161,7113+58]..src/inlining.ml[161,7113+67])
                              Ttyp_constr "Dune__exe!.BasicSyntax.producers"
                              []
                          ]
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/inlining.ml[162,7183+6]..src/inlining.ml[162,7183+27])
                            Tpat_tuple
                            [
                              pattern (src/inlining.ml[162,7183+6]..src/inlining.ml[162,7183+9])
                                Tpat_var "phi/955"
                              pattern (src/inlining.ml[162,7183+11]..src/inlining.ml[162,7183+16])
                                Tpat_var "_used/956"
                              pattern (src/inlining.ml[162,7183+18]..src/inlining.ml[162,7183+27])
                                Tpat_var "producers/957"
                            ]
                          expression (src/inlining.ml[163,7213+4]..src/inlining.ml[174,7682+40])
                            Texp_apply
                            expression (src/inlining.ml[163,7213+4]..src/inlining.ml[163,7213+18])
                              Texp_ident "Stdlib!.List.fold_left"
                            [
                              <arg>
                                Nolabel
                                expression (src/inlining.ml[163,7213+19]..src/inlining.ml[174,7682+5])
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/inlining.ml[163,7213+24]..src/inlining.ml[163,7213+46])
                                        Tpat_tuple
                                        [
                                          pattern (src/inlining.ml[163,7213+25]..src/inlining.ml[163,7213+28])
                                            Tpat_var "phi/1024"
                                          pattern (src/inlining.ml[163,7213+30]..src/inlining.ml[163,7213+34])
                                            Tpat_var "used/1025"
                                          pattern (src/inlining.ml[163,7213+36]..src/inlining.ml[163,7213+45])
                                            Tpat_var "producers/1026"
                                        ]
                                      expression (src/inlining.ml[163,7213+47]..src/inlining.ml[173,7623+58]) ghost
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/inlining.ml[163,7213+47]..src/inlining.ml[163,7213+55])
                                              Tpat_var "producer/1027"
                                            expression (src/inlining.ml[164,7272+6]..src/inlining.ml[173,7623+58])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/inlining.ml[164,7272+10]..src/inlining.ml[164,7272+12])
                                                    Tpat_var "id/1028"
                                                  expression (src/inlining.ml[164,7272+15]..src/inlining.ml[164,7272+51])
                                                    Texp_apply
                                                    expression (src/inlining.ml[164,7272+15]..src/inlining.ml[164,7272+42])
                                                      Texp_ident "Dune__exe!.BasicSyntax.producer_identifier_located"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/inlining.ml[164,7272+43]..src/inlining.ml[164,7272+51])
                                                          Texp_ident "producer/1027"
                                                    ]
                                              ]
                                              expression (src/inlining.ml[165,7327+6]..src/inlining.ml[173,7623+58])
                                                Texp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (src/inlining.ml[165,7327+10]..src/inlining.ml[165,7327+11])
                                                      Tpat_var "x/1029"
                                                    expression (src/inlining.ml[165,7327+14]..src/inlining.ml[165,7327+32])
                                                      Texp_apply
                                                      expression (src/inlining.ml[165,7327+14]..src/inlining.ml[165,7327+29])
                                                        Texp_ident "Dune__exe!.Positions.value"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/inlining.ml[165,7327+30]..src/inlining.ml[165,7327+32])
                                                            Texp_ident "id/1028"
                                                      ]
                                                ]
                                                expression (src/inlining.ml[166,7363+6]..src/inlining.ml[173,7623+58])
                                                  Texp_ifthenelse
                                                  expression (src/inlining.ml[166,7363+9]..src/inlining.ml[166,7363+29])
                                                    Texp_apply
                                                    expression (src/inlining.ml[166,7363+9]..src/inlining.ml[166,7363+22])
                                                      Texp_ident "Dune__exe!.StringSet.mem"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/inlining.ml[166,7363+23]..src/inlining.ml[166,7363+24])
                                                          Texp_ident "x/1029"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/inlining.ml[166,7363+25]..src/inlining.ml[166,7363+29])
                                                          Texp_ident "used/1025"
                                                    ]
                                                  expression (src/inlining.ml[167,7398+8]..src/inlining.ml[171,7547+64])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (src/inlining.ml[167,7398+12]..src/inlining.ml[167,7398+14])
                                                          Tpat_var "x'/1030"
                                                        expression (src/inlining.ml[167,7398+17]..src/inlining.ml[167,7398+29])
                                                          Texp_apply
                                                          expression (src/inlining.ml[167,7398+17]..src/inlining.ml[167,7398+22])
                                                            Texp_ident "fresh/838"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/inlining.ml[167,7398+23]..src/inlining.ml[167,7398+27])
                                                                Texp_ident "used/1025"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/inlining.ml[167,7398+28]..src/inlining.ml[167,7398+29])
                                                                Texp_ident "x/1029"
                                                          ]
                                                    ]
                                                    expression (src/inlining.ml[168,7431+8]..src/inlining.ml[171,7547+64])
                                                      Texp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (src/inlining.ml[168,7431+12]..src/inlining.ml[168,7431+15])
                                                            Tpat_var "id'/1031"
                                                          expression (src/inlining.ml[168,7431+18]..src/inlining.ml[168,7431+49])
                                                            Texp_apply
                                                            expression (src/inlining.ml[168,7431+18]..src/inlining.ml[168,7431+31])
                                                              Texp_ident "Dune__exe!.Positions.map"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/inlining.ml[168,7431+32]..src/inlining.ml[168,7431+46])
                                                                  Texp_function
                                                                  Nolabel
                                                                  [
                                                                    <case>
                                                                      pattern (src/inlining.ml[168,7431+37]..src/inlining.ml[168,7431+39])
                                                                        Tpat_var "_x/1032"
                                                                      expression (src/inlining.ml[168,7431+43]..src/inlining.ml[168,7431+45])
                                                                        Texp_ident "x'/1030"
                                                                  ]
                                                              <arg>
                                                                Nolabel
                                                                expression (src/inlining.ml[168,7431+47]..src/inlining.ml[168,7431+49])
                                                                  Texp_ident "id/1028"
                                                            ]
                                                      ]
                                                      expression (src/inlining.ml[169,7484+8]..src/inlining.ml[171,7547+64])
                                                        Texp_tuple
                                                        [
                                                          expression (src/inlining.ml[169,7484+8]..src/inlining.ml[169,7484+30])
                                                            Texp_apply
                                                            expression (src/inlining.ml[169,7484+8]..src/inlining.ml[169,7484+21])
                                                              Texp_ident "Dune__exe!.Action.extend"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/inlining.ml[169,7484+22]..src/inlining.ml[169,7484+23])
                                                                  Texp_ident "x/1029"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/inlining.ml[169,7484+24]..src/inlining.ml[169,7484+26])
                                                                  Texp_ident "x'/1030"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/inlining.ml[169,7484+27]..src/inlining.ml[169,7484+30])
                                                                  Texp_ident "phi/1024"
                                                            ]
                                                          expression (src/inlining.ml[170,7516+8]..src/inlining.ml[170,7516+29])
                                                            Texp_apply
                                                            expression (src/inlining.ml[170,7516+8]..src/inlining.ml[170,7516+21])
                                                              Texp_ident "Dune__exe!.StringSet.add"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/inlining.ml[170,7516+22]..src/inlining.ml[170,7516+24])
                                                                  Texp_ident "x'/1030"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/inlining.ml[170,7516+25]..src/inlining.ml[170,7516+29])
                                                                  Texp_ident "used/1025"
                                                            ]
                                                          expression (src/inlining.ml[171,7547+8]..src/inlining.ml[171,7547+64])
                                                            Texp_construct "::"
                                                            [
                                                              expression (src/inlining.ml[171,7547+8]..src/inlining.ml[171,7547+51])
                                                                Texp_record
                                                                  fields =
                                                                    [
                                                                      "producer_identifier"
                                                                        expression (src/inlining.ml[171,7547+46]..src/inlining.ml[171,7547+49])
                                                                          Texp_ident "id'/1031"
                                                                      <kept>                                                                      <kept>                                                                    ]
                                                                  representation =
                                                                    Record_regular
                                                                  extended_expression =
                                                                    Some
                                                                      expression (src/inlining.ml[171,7547+10]..src/inlining.ml[171,7547+18])
                                                                        Texp_ident "producer/1027"
                                                              expression (src/inlining.ml[171,7547+55]..src/inlining.ml[171,7547+64])
                                                                Texp_ident "producers/1026"
                                                            ]
                                                        ]
                                                  Some
                                                    expression (src/inlining.ml[173,7623+8]..src/inlining.ml[173,7623+58])
                                                      Texp_tuple
                                                      [
                                                        expression (src/inlining.ml[173,7623+9]..src/inlining.ml[173,7623+12])
                                                          Texp_ident "phi/1024"
                                                        expression (src/inlining.ml[173,7623+14]..src/inlining.ml[173,7623+34])
                                                          Texp_apply
                                                          expression (src/inlining.ml[173,7623+14]..src/inlining.ml[173,7623+27])
                                                            Texp_ident "Dune__exe!.StringSet.add"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/inlining.ml[173,7623+28]..src/inlining.ml[173,7623+29])
                                                                Texp_ident "x/1029"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/inlining.ml[173,7623+30]..src/inlining.ml[173,7623+34])
                                                                Texp_ident "used/1025"
                                                          ]
                                                        expression (src/inlining.ml[173,7623+36]..src/inlining.ml[173,7623+57])
                                                          Texp_construct "::"
                                                          [
                                                            expression (src/inlining.ml[173,7623+36]..src/inlining.ml[173,7623+44])
                                                              Texp_ident "producer/1027"
                                                            expression (src/inlining.ml[173,7623+48]..src/inlining.ml[173,7623+57])
                                                              Texp_ident "producers/1026"
                                                          ]
                                                      ]
                                        ]
                                  ]
                              <arg>
                                Nolabel
                                expression (src/inlining.ml[174,7682+6]..src/inlining.ml[174,7682+30])
                                  Texp_tuple
                                  [
                                    expression (src/inlining.ml[174,7682+7]..src/inlining.ml[174,7682+19])
                                      Texp_ident "Dune__exe!.Action.empty"
                                    expression (src/inlining.ml[174,7682+21]..src/inlining.ml[174,7682+25])
                                      Texp_ident "used/935"
                                    expression (src/inlining.ml[174,7682+27]..src/inlining.ml[174,7682+29])
                                      Texp_construct "[]"
                                      []
                                  ]
                              <arg>
                                Nolabel
                                expression (src/inlining.ml[174,7682+31]..src/inlining.ml[174,7682+40])
                                  Texp_ident "producers/936"
                            ]
                      ]
                      expression (src/inlining.ml[176,7728+2]..src/inlining.ml[176,7728+25])
                        Texp_tuple
                        [
                          expression (src/inlining.ml[176,7728+2]..src/inlining.ml[176,7728+5])
                            Texp_ident "phi/955"
                          expression (src/inlining.ml[176,7728+7]..src/inlining.ml[176,7728+25])
                            Texp_apply
                            expression (src/inlining.ml[176,7728+7]..src/inlining.ml[176,7728+15])
                              Texp_ident "Stdlib!.List.rev"
                            [
                              <arg>
                                Nolabel
                                expression (src/inlining.ml[176,7728+16]..src/inlining.ml[176,7728+25])
                                  Texp_ident "producers/957"
                            ]
                        ]
                ]
          ]
    ]
  structure_item (src/inlining.ml[202,8703+0]..src/inlining.ml[254,10823+26])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[202,8703+4]..src/inlining.ml[202,8703+20])
          Tpat_var "define_positions/1052"
        expression (src/inlining.ml[202,8703+21]..src/inlining.ml[254,10823+26]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/inlining.ml[202,8703+22]..src/inlining.ml[202,8703+26])
                extra
                  Tpat_extra_constraint
                  core_type (src/inlining.ml[202,8703+29]..src/inlining.ml[202,8703+41])
                    Ttyp_constr "array/8!"
                    [
                      core_type (src/inlining.ml[202,8703+29]..src/inlining.ml[202,8703+35])
                        Ttyp_constr "string/15!"
                        []
                    ]
                Tpat_alias "name/1054"
                pattern (src/inlining.ml[202,8703+22]..src/inlining.ml[202,8703+26])
                  Tpat_any
              expression (src/inlining.ml[202,8703+43]..src/inlining.ml[254,10823+26]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/inlining.ml[202,8703+43]..src/inlining.ml[202,8703+50])
                      Tpat_var "nprefix/1055"
                    expression (src/inlining.ml[202,8703+51]..src/inlining.ml[254,10823+26]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/inlining.ml[202,8703+51]..src/inlining.ml[202,8703+58])
                            Tpat_var "ncallee/1056"
                          expression (src/inlining.ml[204,8780+2]..src/inlining.ml[254,10823+26])
                            extra
                              Texp_constraint
                              core_type (src/inlining.ml[202,8703+61]..src/inlining.ml[202,8703+73])
                                Ttyp_tuple
                                [
                                  core_type (src/inlining.ml[202,8703+61]..src/inlining.ml[202,8703+63])
                                    Ttyp_constr "sw/438"
                                    []
                                  core_type (src/inlining.ml[202,8703+66]..src/inlining.ml[202,8703+68])
                                    Ttyp_constr "sw/438"
                                    []
                                  core_type (src/inlining.ml[202,8703+71]..src/inlining.ml[202,8703+73])
                                    Ttyp_constr "sw/438"
                                    []
                                ]
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/inlining.ml[204,8780+6]..src/inlining.ml[204,8780+12])
                                  Tpat_var "startp/1057"
                                expression (src/inlining.ml[205,8795+4]..src/inlining.ml[222,9684+22])
                                  Texp_ifthenelse
                                  expression (src/inlining.ml[205,8795+7]..src/inlining.ml[205,8795+18])
                                    Texp_apply
                                    expression (src/inlining.ml[205,8795+15]..src/inlining.ml[205,8795+16])
                                      Texp_ident "Stdlib!.>"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/inlining.ml[205,8795+7]..src/inlining.ml[205,8795+14])
                                          Texp_ident "ncallee/1056"
                                      <arg>
                                        Nolabel
                                        expression (src/inlining.ml[205,8795+17]..src/inlining.ml[205,8795+18])
                                          Texp_constant Const_int 0
                                    ]
                                  expression (src/inlining.ml[209,8993+6]..src/inlining.ml[209,8993+43])
                                    Texp_tuple
                                    [
                                      expression (src/inlining.ml[209,8993+6]..src/inlining.ml[209,8993+31])
                                        Texp_construct "RightNamed"
                                        [
                                          expression (src/inlining.ml[209,8993+17]..src/inlining.ml[209,8993+31])
                                            Texp_apply
                                            expression (src/inlining.ml[209,8993+17]..src/inlining.ml[209,8993+31]) ghost
                                              Texp_ident "Stdlib!.Array.get"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/inlining.ml[209,8993+17]..src/inlining.ml[209,8993+21])
                                                  Texp_ident "name/1054"
                                              <arg>
                                                Nolabel
                                                expression (src/inlining.ml[209,8993+23]..src/inlining.ml[209,8993+30])
                                                  Texp_ident "nprefix/1055"
                                            ]
                                        ]
                                      expression (src/inlining.ml[209,8993+33]..src/inlining.ml[209,8993+43])
                                        Texp_construct "WhereStart"
                                        []
                                    ]
                                  Some
                                    expression (src/inlining.ml[210,9037+9]..src/inlining.ml[222,9684+22])
                                      Texp_ifthenelse
                                      expression (src/inlining.ml[210,9037+12]..src/inlining.ml[210,9037+23])
                                        Texp_apply
                                        expression (src/inlining.ml[210,9037+20]..src/inlining.ml[210,9037+21])
                                          Texp_ident "Stdlib!.>"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/inlining.ml[210,9037+12]..src/inlining.ml[210,9037+19])
                                              Texp_ident "nprefix/1055"
                                          <arg>
                                            Nolabel
                                            expression (src/inlining.ml[210,9037+22]..src/inlining.ml[210,9037+23])
                                              Texp_constant Const_int 0
                                        ]
                                      expression (src/inlining.ml[215,9310+6]..src/inlining.ml[215,9310+47])
                                        Texp_tuple
                                        [
                                          expression (src/inlining.ml[215,9310+6]..src/inlining.ml[215,9310+37])
                                            Texp_construct "RightNamed"
                                            [
                                              expression (src/inlining.ml[215,9310+17]..src/inlining.ml[215,9310+37])
                                                Texp_apply
                                                expression (src/inlining.ml[215,9310+18]..src/inlining.ml[215,9310+36]) ghost
                                                  Texp_ident "Stdlib!.Array.get"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/inlining.ml[215,9310+18]..src/inlining.ml[215,9310+22])
                                                      Texp_ident "name/1054"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/inlining.ml[215,9310+24]..src/inlining.ml[215,9310+35])
                                                      Texp_apply
                                                      expression (src/inlining.ml[215,9310+32]..src/inlining.ml[215,9310+33])
                                                        Texp_ident "Stdlib!.-"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/inlining.ml[215,9310+24]..src/inlining.ml[215,9310+31])
                                                            Texp_ident "nprefix/1055"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/inlining.ml[215,9310+34]..src/inlining.ml[215,9310+35])
                                                            Texp_constant Const_int 1
                                                      ]
                                                ]
                                            ]
                                          expression (src/inlining.ml[215,9310+39]..src/inlining.ml[215,9310+47])
                                            Texp_construct "WhereEnd"
                                            []
                                        ]
                                      Some
                                        expression (src/inlining.ml[222,9684+6]..src/inlining.ml[222,9684+22])
                                          Texp_tuple
                                          [
                                            expression (src/inlining.ml[222,9684+6]..src/inlining.ml[222,9684+12])
                                              Texp_construct "Before"
                                              []
                                            expression (src/inlining.ml[222,9684+14]..src/inlining.ml[222,9684+22])
                                              Texp_construct "WhereEnd"
                                              []
                                          ]
                            ]
                            expression (src/inlining.ml[231,9990+2]..src/inlining.ml[254,10823+26])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/inlining.ml[231,9990+6]..src/inlining.ml[231,9990+10])
                                    Tpat_var "endp/1106"
                                  expression (src/inlining.ml[232,10003+4]..src/inlining.ml[239,10341+12])
                                    Texp_ifthenelse
                                    expression (src/inlining.ml[232,10003+7]..src/inlining.ml[232,10003+18])
                                      Texp_apply
                                      expression (src/inlining.ml[232,10003+15]..src/inlining.ml[232,10003+16])
                                        Texp_ident "Stdlib!.>"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/inlining.ml[232,10003+7]..src/inlining.ml[232,10003+14])
                                            Texp_ident "ncallee/1056"
                                        <arg>
                                          Nolabel
                                          expression (src/inlining.ml[232,10003+17]..src/inlining.ml[232,10003+18])
                                            Texp_constant Const_int 0
                                      ]
                                    expression (src/inlining.ml[235,10163+6]..src/inlining.ml[235,10163+57])
                                      Texp_tuple
                                      [
                                        expression (src/inlining.ml[235,10163+6]..src/inlining.ml[235,10163+47])
                                          Texp_construct "RightNamed"
                                          [
                                            expression (src/inlining.ml[235,10163+17]..src/inlining.ml[235,10163+47])
                                              Texp_apply
                                              expression (src/inlining.ml[235,10163+18]..src/inlining.ml[235,10163+46]) ghost
                                                Texp_ident "Stdlib!.Array.get"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/inlining.ml[235,10163+18]..src/inlining.ml[235,10163+22])
                                                    Texp_ident "name/1054"
                                                <arg>
                                                  Nolabel
                                                  expression (src/inlining.ml[235,10163+24]..src/inlining.ml[235,10163+45])
                                                    Texp_apply
                                                    expression (src/inlining.ml[235,10163+42]..src/inlining.ml[235,10163+43])
                                                      Texp_ident "Stdlib!.-"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/inlining.ml[235,10163+24]..src/inlining.ml[235,10163+41])
                                                          Texp_apply
                                                          expression (src/inlining.ml[235,10163+32]..src/inlining.ml[235,10163+33])
                                                            Texp_ident "Stdlib!.+"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/inlining.ml[235,10163+24]..src/inlining.ml[235,10163+31])
                                                                Texp_ident "nprefix/1055"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/inlining.ml[235,10163+34]..src/inlining.ml[235,10163+41])
                                                                Texp_ident "ncallee/1056"
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (src/inlining.ml[235,10163+44]..src/inlining.ml[235,10163+45])
                                                          Texp_constant Const_int 1
                                                    ]
                                              ]
                                          ]
                                        expression (src/inlining.ml[235,10163+49]..src/inlining.ml[235,10163+57])
                                          Texp_construct "WhereEnd"
                                          []
                                      ]
                                    Some
                                      expression (src/inlining.ml[239,10341+6]..src/inlining.ml[239,10341+12])
                                        Texp_ident "startp/1057"
                                <def>
                                  pattern (src/inlining.ml[247,10694+6]..src/inlining.ml[247,10694+16])
                                    Tpat_var "beforeendp/1107"
                                  expression (src/inlining.ml[248,10713+4]..src/inlining.ml[251,10794+22])
                                    Texp_ifthenelse
                                    expression (src/inlining.ml[248,10713+7]..src/inlining.ml[248,10713+18])
                                      Texp_apply
                                      expression (src/inlining.ml[248,10713+15]..src/inlining.ml[248,10713+16])
                                        Texp_ident "Stdlib!.>"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/inlining.ml[248,10713+7]..src/inlining.ml[248,10713+14])
                                            Texp_ident "nprefix/1055"
                                        <arg>
                                          Nolabel
                                          expression (src/inlining.ml[248,10713+17]..src/inlining.ml[248,10713+18])
                                            Texp_constant Const_int 0
                                      ]
                                    expression (src/inlining.ml[249,10737+6]..src/inlining.ml[249,10737+47])
                                      Texp_tuple
                                      [
                                        expression (src/inlining.ml[249,10737+6]..src/inlining.ml[249,10737+37])
                                          Texp_construct "RightNamed"
                                          [
                                            expression (src/inlining.ml[249,10737+17]..src/inlining.ml[249,10737+37])
                                              Texp_apply
                                              expression (src/inlining.ml[249,10737+18]..src/inlining.ml[249,10737+36]) ghost
                                                Texp_ident "Stdlib!.Array.get"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/inlining.ml[249,10737+18]..src/inlining.ml[249,10737+22])
                                                    Texp_ident "name/1054"
                                                <arg>
                                                  Nolabel
                                                  expression (src/inlining.ml[249,10737+24]..src/inlining.ml[249,10737+35])
                                                    Texp_apply
                                                    expression (src/inlining.ml[249,10737+32]..src/inlining.ml[249,10737+33])
                                                      Texp_ident "Stdlib!.-"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/inlining.ml[249,10737+24]..src/inlining.ml[249,10737+31])
                                                          Texp_ident "nprefix/1055"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/inlining.ml[249,10737+34]..src/inlining.ml[249,10737+35])
                                                          Texp_constant Const_int 1
                                                    ]
                                              ]
                                          ]
                                        expression (src/inlining.ml[249,10737+39]..src/inlining.ml[249,10737+47])
                                          Texp_construct "WhereEnd"
                                          []
                                      ]
                                    Some
                                      expression (src/inlining.ml[251,10794+6]..src/inlining.ml[251,10794+22])
                                        Texp_tuple
                                        [
                                          expression (src/inlining.ml[251,10794+6]..src/inlining.ml[251,10794+12])
                                            Texp_construct "Before"
                                            []
                                          expression (src/inlining.ml[251,10794+14]..src/inlining.ml[251,10794+22])
                                            Texp_construct "WhereEnd"
                                            []
                                        ]
                              ]
                              expression (src/inlining.ml[254,10823+2]..src/inlining.ml[254,10823+26])
                                Texp_tuple
                                [
                                  expression (src/inlining.ml[254,10823+2]..src/inlining.ml[254,10823+8])
                                    Texp_ident "startp/1057"
                                  expression (src/inlining.ml[254,10823+10]..src/inlining.ml[254,10823+14])
                                    Texp_ident "endp/1106"
                                  expression (src/inlining.ml[254,10823+16]..src/inlining.ml[254,10823+26])
                                    Texp_ident "beforeendp/1107"
                                ]
                      ]
                ]
          ]
    ]
  structure_item (src/inlining.ml[262,11166+0]..src/inlining.ml[277,11655+18])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[262,11166+4]..src/inlining.ml[262,11166+19])
          Tpat_var "rename_sw_outer/1108"
        expression (src/inlining.ml[262,11166+20]..src/inlining.ml[277,11655+18]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/inlining.ml[262,11166+20]..src/inlining.ml[262,11166+39])
                Tpat_tuple
                [
                  pattern (src/inlining.ml[262,11166+21]..src/inlining.ml[262,11166+22])
                    Tpat_var "x/1110"
                  pattern (src/inlining.ml[262,11166+24]..src/inlining.ml[262,11166+31])
                    Tpat_var "startpx/1111"
                  pattern (src/inlining.ml[262,11166+33]..src/inlining.ml[262,11166+38])
                    Tpat_var "endpx/1112"
                ]
              expression (src/inlining.ml[262,11166+40]..src/inlining.ml[277,11655+18]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/inlining.ml[262,11166+41]..src/inlining.ml[262,11166+43])
                      extra
                        Tpat_extra_constraint
                        core_type (src/inlining.ml[262,11166+46]..src/inlining.ml[262,11166+48])
                          Ttyp_constr "sw/438"
                          []
                      Tpat_alias "sw/1113"
                      pattern (src/inlining.ml[262,11166+41]..src/inlining.ml[262,11166+43])
                        Tpat_any
                    expression (src/inlining.ml[263,11230+2]..src/inlining.ml[277,11655+18])
                      extra
                        Texp_constraint
                        core_type (src/inlining.ml[262,11166+52]..src/inlining.ml[262,11166+61])
                          Ttyp_constr "option/10!"
                          [
                            core_type (src/inlining.ml[262,11166+52]..src/inlining.ml[262,11166+54])
                              Ttyp_constr "sw/438"
                              []
                          ]
                      Texp_match
                      expression (src/inlining.ml[263,11230+8]..src/inlining.ml[263,11230+10])
                        Texp_ident "sw/1113"
                      [
                        <case>
                          pattern (src/inlining.ml[264,11246+4]..src/inlining.ml[264,11246+13])
                            Tpat_value
                            pattern (src/inlining.ml[264,11246+4]..src/inlining.ml[264,11246+13])
                              Tpat_tuple
                              [
                                pattern (src/inlining.ml[264,11246+4]..src/inlining.ml[264,11246+10])
                                  Tpat_construct "Before"
                                  []
                                  None
                                pattern (src/inlining.ml[264,11246+12]..src/inlining.ml[264,11246+13])
                                  Tpat_any
                              ]
                          expression (src/inlining.ml[265,11263+6]..src/inlining.ml[265,11263+10])
                            Texp_construct "None"
                            []
                        <case>
                          pattern (src/inlining.ml[266,11274+4]..src/inlining.ml[266,11274+24])
                            Tpat_value
                            pattern (src/inlining.ml[266,11274+4]..src/inlining.ml[266,11274+24])
                              Tpat_tuple
                              [
                                pattern (src/inlining.ml[266,11274+4]..src/inlining.ml[266,11274+17])
                                  Tpat_construct "RightNamed"
                                  [
                                    pattern (src/inlining.ml[266,11274+15]..src/inlining.ml[266,11274+17])
                                      Tpat_var "x'/1114"
                                  ]
                                  None
                                pattern (src/inlining.ml[266,11274+19]..src/inlining.ml[266,11274+24])
                                  Tpat_var "where/1115"
                              ]
                          expression (src/inlining.ml[267,11302+6]..src/inlining.ml[273,11503+12])
                            Texp_ifthenelse
                            expression (src/inlining.ml[267,11302+9]..src/inlining.ml[267,11302+15])
                              Texp_apply
                              expression (src/inlining.ml[267,11302+12]..src/inlining.ml[267,11302+13])
                                Texp_ident "Stdlib!.="
                              [
                                <arg>
                                  Nolabel
                                  expression (src/inlining.ml[267,11302+9]..src/inlining.ml[267,11302+11])
                                    Texp_ident "x'/1114"
                                <arg>
                                  Nolabel
                                  expression (src/inlining.ml[267,11302+14]..src/inlining.ml[267,11302+15])
                                    Texp_ident "x/1110"
                              ]
                            expression (src/inlining.ml[268,11323+8]..src/inlining.ml[271,11420+42])
                              Texp_match
                              expression (src/inlining.ml[268,11323+14]..src/inlining.ml[268,11323+19])
                                Texp_ident "where/1115"
                              [
                                <case>
                                  pattern (src/inlining.ml[269,11348+10]..src/inlining.ml[269,11348+20])
                                    Tpat_value
                                    pattern (src/inlining.ml[269,11348+10]..src/inlining.ml[269,11348+20])
                                      Tpat_construct "WhereStart"
                                      []
                                      None
                                  expression (src/inlining.ml[269,11348+24]..src/inlining.ml[269,11348+36])
                                    Texp_construct "Some"
                                    [
                                      expression (src/inlining.ml[269,11348+29]..src/inlining.ml[269,11348+36])
                                        Texp_ident "startpx/1111"
                                    ]
                                <case>
                                  pattern (src/inlining.ml[270,11385+10]..src/inlining.ml[270,11385+18])
                                    Tpat_value
                                    pattern (src/inlining.ml[270,11385+10]..src/inlining.ml[270,11385+18])
                                      Tpat_construct "WhereEnd"
                                      []
                                      None
                                  expression (src/inlining.ml[270,11385+24]..src/inlining.ml[270,11385+34])
                                    Texp_construct "Some"
                                    [
                                      expression (src/inlining.ml[270,11385+29]..src/inlining.ml[270,11385+34])
                                        Texp_ident "endpx/1112"
                                    ]
                                <case>
                                  pattern (src/inlining.ml[271,11420+10]..src/inlining.ml[271,11420+26])
                                    Tpat_value
                                    pattern (src/inlining.ml[271,11420+10]..src/inlining.ml[271,11420+26])
                                      Tpat_construct "WhereSymbolStart"
                                      []
                                      None
                                  expression (src/inlining.ml[271,11420+30]..src/inlining.ml[271,11420+42])
                                    Texp_assert                                    expression (src/inlining.ml[271,11420+37]..src/inlining.ml[271,11420+42])
                                      Texp_construct "false"
                                      []
                              ]
                            Some
                              expression (src/inlining.ml[273,11503+8]..src/inlining.ml[273,11503+12])
                                Texp_construct "None"
                                []
                        <case>
                          pattern (src/inlining.ml[274,11516+4]..src/inlining.ml[274,11516+11])
                            Tpat_value
                            pattern (src/inlining.ml[274,11516+4]..src/inlining.ml[274,11516+11])
                              Tpat_tuple
                              [
                                pattern (src/inlining.ml[274,11516+4]..src/inlining.ml[274,11516+8])
                                  Tpat_construct "Left"
                                  []
                                  None
                                pattern (src/inlining.ml[274,11516+10]..src/inlining.ml[274,11516+11])
                                  Tpat_any
                              ]
                          expression (src/inlining.ml[277,11655+6]..src/inlining.ml[277,11655+18])
                            Texp_assert                            expression (src/inlining.ml[277,11655+13]..src/inlining.ml[277,11655+18])
                              Texp_construct "false"
                              []
                      ]
                ]
          ]
    ]
  structure_item (src/inlining.ml[284,11908+0]..src/inlining.ml[294,12208+18])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[284,11908+4]..src/inlining.ml[284,11908+19])
          Tpat_var "rename_sw_inner/1117"
        expression (src/inlining.ml[284,11908+20]..src/inlining.ml[294,12208+18]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/inlining.ml[284,11908+20]..src/inlining.ml[284,11908+30])
                Tpat_var "beforeendp/1119"
              expression (src/inlining.ml[284,11908+31]..src/inlining.ml[294,12208+18]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/inlining.ml[284,11908+32]..src/inlining.ml[284,11908+34])
                      extra
                        Tpat_extra_constraint
                        core_type (src/inlining.ml[284,11908+37]..src/inlining.ml[284,11908+39])
                          Ttyp_constr "sw/438"
                          []
                      Tpat_alias "sw/1120"
                      pattern (src/inlining.ml[284,11908+32]..src/inlining.ml[284,11908+34])
                        Tpat_any
                    expression (src/inlining.ml[285,11963+2]..src/inlining.ml[294,12208+18])
                      extra
                        Texp_constraint
                        core_type (src/inlining.ml[284,11908+43]..src/inlining.ml[284,11908+52])
                          Ttyp_constr "option/10!"
                          [
                            core_type (src/inlining.ml[284,11908+43]..src/inlining.ml[284,11908+45])
                              Ttyp_constr "sw/438"
                              []
                          ]
                      Texp_match
                      expression (src/inlining.ml[285,11963+8]..src/inlining.ml[285,11963+10])
                        Texp_ident "sw/1120"
                      [
                        <case>
                          pattern (src/inlining.ml[286,11979+4]..src/inlining.ml[286,11979+17])
                            Tpat_value
                            pattern (src/inlining.ml[286,11979+4]..src/inlining.ml[286,11979+17])
                              Tpat_tuple
                              [
                                pattern (src/inlining.ml[286,11979+4]..src/inlining.ml[286,11979+10])
                                  Tpat_construct "Before"
                                  []
                                  None
                                pattern (src/inlining.ml[286,11979+12]..src/inlining.ml[286,11979+17])
                                  Tpat_var "where/1121"
                              ]
                          expression (src/inlining.ml[287,12000+6]..src/inlining.ml[288,12033+21])
                            Texp_sequence
                            expression (src/inlining.ml[287,12000+6]..src/inlining.ml[287,12000+31])
                              Texp_assert                              expression (src/inlining.ml[287,12000+13]..src/inlining.ml[287,12000+31])
                                Texp_apply
                                expression (src/inlining.ml[287,12000+20]..src/inlining.ml[287,12000+21])
                                  Texp_ident "Stdlib!.="
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/inlining.ml[287,12000+14]..src/inlining.ml[287,12000+19])
                                      Texp_ident "where/1121"
                                  <arg>
                                    Nolabel
                                    expression (src/inlining.ml[287,12000+22]..src/inlining.ml[287,12000+30])
                                      Texp_construct "WhereEnd"
                                      []
                                ]
                            expression (src/inlining.ml[288,12033+6]..src/inlining.ml[288,12033+21])
                              Texp_construct "Some"
                              [
                                expression (src/inlining.ml[288,12033+11]..src/inlining.ml[288,12033+21])
                                  Texp_ident "beforeendp/1119"
                              ]
                        <case>
                          pattern (src/inlining.ml[289,12055+4]..src/inlining.ml[289,12055+19])
                            Tpat_value
                            pattern (src/inlining.ml[289,12055+4]..src/inlining.ml[289,12055+19])
                              Tpat_tuple
                              [
                                pattern (src/inlining.ml[289,12055+4]..src/inlining.ml[289,12055+16])
                                  Tpat_construct "RightNamed"
                                  [
                                    pattern (src/inlining.ml[289,12055+15]..src/inlining.ml[289,12055+16])
                                      Tpat_any
                                  ]
                                  None
                                pattern (src/inlining.ml[289,12055+18]..src/inlining.ml[289,12055+19])
                                  Tpat_any
                              ]
                          expression (src/inlining.ml[290,12078+6]..src/inlining.ml[290,12078+10])
                            Texp_construct "None"
                            []
                        <case>
                          pattern (src/inlining.ml[291,12089+4]..src/inlining.ml[291,12089+11])
                            Tpat_value
                            pattern (src/inlining.ml[291,12089+4]..src/inlining.ml[291,12089+11])
                              Tpat_tuple
                              [
                                pattern (src/inlining.ml[291,12089+4]..src/inlining.ml[291,12089+8])
                                  Tpat_construct "Left"
                                  []
                                  None
                                pattern (src/inlining.ml[291,12089+10]..src/inlining.ml[291,12089+11])
                                  Tpat_any
                              ]
                          expression (src/inlining.ml[294,12208+6]..src/inlining.ml[294,12208+18])
                            Texp_assert                            expression (src/inlining.ml[294,12208+13]..src/inlining.ml[294,12208+18])
                              Texp_construct "false"
                              []
                      ]
                ]
          ]
    ]
  structure_item (src/inlining.ml[304,12694+0]..src/inlining.ml[305,12706+16])
    Tstr_type Rec
    [
      type_declaration site/1122 (src/inlining.ml[304,12694+0]..src/inlining.ml[305,12706+16])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/inlining.ml[305,12706+2]..src/inlining.ml[305,12706+16])
              Ttyp_tuple
              [
                core_type (src/inlining.ml[305,12706+2]..src/inlining.ml[305,12706+5])
                  Ttyp_constr "int/1!"
                  []
                core_type (src/inlining.ml[305,12706+8]..src/inlining.ml[305,12706+16])
                  Ttyp_constr "Dune__exe!.BasicSyntax.producer"
                  []
              ]
    ]
  structure_item (src/inlining.ml[307,12724+0]..src/inlining.ml[375,15612+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[307,12724+4]..src/inlining.ml[307,12724+17])
          Tpat_var "inline_branch/1123"
        expression (src/inlining.ml[307,12724+18]..src/inlining.ml[375,15612+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/inlining.ml[307,12724+18]..src/inlining.ml[307,12724+24])
                Tpat_var "caller/1125"
              expression (src/inlining.ml[307,12724+25]..src/inlining.ml[375,15612+3]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/inlining.ml[307,12724+26]..src/inlining.ml[307,12724+37])
                      extra
                        Tpat_extra_constraint
                        core_type (src/inlining.ml[307,12724+40]..src/inlining.ml[307,12724+44])
                          Ttyp_constr "site/1122"
                          []
                      Tpat_tuple
                      [
                        pattern (src/inlining.ml[307,12724+26]..src/inlining.ml[307,12724+27])
                          Tpat_var "i/1126"
                        pattern (src/inlining.ml[307,12724+29]..src/inlining.ml[307,12724+37])
                          Tpat_var "producer/1127"
                      ]
                    expression (src/inlining.ml[307,12724+46]..src/inlining.ml[375,15612+3]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/inlining.ml[307,12724+47]..src/inlining.ml[307,12724+53])
                            extra
                              Tpat_extra_constraint
                              core_type (src/inlining.ml[307,12724+56]..src/inlining.ml[307,12724+62])
                                Ttyp_constr "Dune__exe!.BasicSyntax.branch"
                                []
                            Tpat_alias "callee/1128"
                            pattern (src/inlining.ml[307,12724+47]..src/inlining.ml[307,12724+53])
                              Tpat_any
                          expression (src/inlining.ml[315,13040+2]..src/inlining.ml[375,15612+3])
                            extra
                              Texp_constraint
                              core_type (src/inlining.ml[307,12724+66]..src/inlining.ml[307,12724+72])
                                Ttyp_constr "Dune__exe!.BasicSyntax.branch"
                                []
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/inlining.ml[315,13040+6]..src/inlining.ml[315,13040+13])
                                  Tpat_var "nprefix/1129"
                                expression (src/inlining.ml[315,13040+16]..src/inlining.ml[315,13040+17])
                                  Texp_ident "i/1126"
                            ]
                            expression (src/inlining.ml[316,13061+2]..src/inlining.ml[375,15612+3])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/inlining.ml[316,13061+6]..src/inlining.ml[316,13061+13])
                                    Tpat_var "nsuffix/1130"
                                  expression (src/inlining.ml[316,13061+16]..src/inlining.ml[316,13061+54])
                                    Texp_apply
                                    expression (src/inlining.ml[316,13061+45]..src/inlining.ml[316,13061+46])
                                      Texp_ident "Stdlib!.-"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/inlining.ml[316,13061+16]..src/inlining.ml[316,13061+44])
                                          Texp_apply
                                          expression (src/inlining.ml[316,13061+16]..src/inlining.ml[316,13061+27])
                                            Texp_ident "Stdlib!.List.length"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/inlining.ml[316,13061+28]..src/inlining.ml[316,13061+44])
                                                Texp_field
                                                expression (src/inlining.ml[316,13061+28]..src/inlining.ml[316,13061+34])
                                                  Texp_ident "caller/1125"
                                                "producers"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (src/inlining.ml[316,13061+47]..src/inlining.ml[316,13061+54])
                                          Texp_apply
                                          expression (src/inlining.ml[316,13061+50]..src/inlining.ml[316,13061+51])
                                            Texp_ident "Stdlib!.+"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/inlining.ml[316,13061+48]..src/inlining.ml[316,13061+49])
                                                Texp_ident "i/1126"
                                            <arg>
                                              Nolabel
                                              expression (src/inlining.ml[316,13061+52]..src/inlining.ml[316,13061+53])
                                                Texp_constant Const_int 1
                                          ]
                                    ]
                              ]
                              expression (src/inlining.ml[320,13162+2]..src/inlining.ml[375,15612+3])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (src/inlining.ml[320,13162+6]..src/inlining.ml[320,13162+12])
                                      Tpat_var "prefix/1131"
                                    expression (src/inlining.ml[320,13162+15]..src/inlining.ml[320,13162+44])
                                      Texp_apply
                                      expression (src/inlining.ml[320,13162+15]..src/inlining.ml[320,13162+19])
                                        Texp_ident "take/495"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/inlining.ml[320,13162+20]..src/inlining.ml[320,13162+27])
                                            Texp_ident "nprefix/1129"
                                        <arg>
                                          Nolabel
                                          expression (src/inlining.ml[320,13162+28]..src/inlining.ml[320,13162+44])
                                            Texp_field
                                            expression (src/inlining.ml[320,13162+28]..src/inlining.ml[320,13162+34])
                                              Texp_ident "caller/1125"
                                            "producers"
                                      ]
                                  <def>
                                    pattern (src/inlining.ml[321,13207+6]..src/inlining.ml[321,13207+12])
                                      Tpat_var "suffix/1132"
                                    expression (src/inlining.ml[321,13207+15]..src/inlining.ml[321,13207+50])
                                      Texp_apply
                                      expression (src/inlining.ml[321,13207+15]..src/inlining.ml[321,13207+19])
                                        Texp_ident "drop/469"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/inlining.ml[321,13207+20]..src/inlining.ml[321,13207+33])
                                            Texp_apply
                                            expression (src/inlining.ml[321,13207+29]..src/inlining.ml[321,13207+30])
                                              Texp_ident "Stdlib!.+"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/inlining.ml[321,13207+21]..src/inlining.ml[321,13207+28])
                                                  Texp_ident "nprefix/1129"
                                              <arg>
                                                Nolabel
                                                expression (src/inlining.ml[321,13207+31]..src/inlining.ml[321,13207+32])
                                                  Texp_constant Const_int 1
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/inlining.ml[321,13207+34]..src/inlining.ml[321,13207+50])
                                            Texp_field
                                            expression (src/inlining.ml[321,13207+34]..src/inlining.ml[321,13207+40])
                                              Texp_ident "caller/1125"
                                            "producers"
                                      ]
                                ]
                                expression (src/inlining.ml[326,13421+2]..src/inlining.ml[375,15612+3])
                                  Texp_sequence
                                  expression (src/inlining.ml[326,13421+2]..src/inlining.ml[326,13421+50])
                                    Texp_apply
                                    expression (src/inlining.ml[326,13421+2]..src/inlining.ml[326,13421+19])
                                      Texp_ident "check_prec_inline/743"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/inlining.ml[326,13421+20]..src/inlining.ml[326,13421+26])
                                          Texp_ident "caller/1125"
                                      <arg>
                                        Nolabel
                                        expression (src/inlining.ml[326,13421+27]..src/inlining.ml[326,13421+35])
                                          Texp_ident "producer/1127"
                                      <arg>
                                        Nolabel
                                        expression (src/inlining.ml[326,13421+36]..src/inlining.ml[326,13421+43])
                                          Texp_ident "nsuffix/1130"
                                      <arg>
                                        Nolabel
                                        expression (src/inlining.ml[326,13421+44]..src/inlining.ml[326,13421+50])
                                          Texp_ident "callee/1128"
                                    ]
                                  expression (src/inlining.ml[327,13473+2]..src/inlining.ml[375,15612+3])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/inlining.ml[327,13473+6]..src/inlining.ml[327,13473+28])
                                          Tpat_var "branch_prec_annotation/1133"
                                        expression (src/inlining.ml[327,13473+31]..src/inlining.ml[327,13473+70])
                                          Texp_apply
                                          expression (src/inlining.ml[327,13473+31]..src/inlining.ml[327,13473+56])
                                            Texp_ident "propagate_prec_annotation/764"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/inlining.ml[327,13473+57]..src/inlining.ml[327,13473+63])
                                                Texp_ident "caller/1125"
                                            <arg>
                                              Nolabel
                                              expression (src/inlining.ml[327,13473+64]..src/inlining.ml[327,13473+70])
                                                Texp_ident "callee/1128"
                                          ]
                                    ]
                                    expression (src/inlining.ml[334,13907+2]..src/inlining.ml[375,15612+3])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/inlining.ml[334,13907+6]..src/inlining.ml[334,13907+10])
                                            Tpat_var "used/1134"
                                          expression (src/inlining.ml[334,13907+13]..src/inlining.ml[334,13907+58])
                                            Texp_apply
                                            expression (src/inlining.ml[334,13907+13]..src/inlining.ml[334,13907+28])
                                              Texp_ident "Dune__exe!.StringSet.union"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/inlining.ml[334,13907+29]..src/inlining.ml[334,13907+43])
                                                  Texp_apply
                                                  expression (src/inlining.ml[334,13907+30]..src/inlining.ml[334,13907+35])
                                                    Texp_ident "Dune__exe!.BasicSyntax.names"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/inlining.ml[334,13907+36]..src/inlining.ml[334,13907+42])
                                                        Texp_ident "prefix/1131"
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (src/inlining.ml[334,13907+44]..src/inlining.ml[334,13907+58])
                                                  Texp_apply
                                                  expression (src/inlining.ml[334,13907+45]..src/inlining.ml[334,13907+50])
                                                    Texp_ident "Dune__exe!.BasicSyntax.names"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/inlining.ml[334,13907+51]..src/inlining.ml[334,13907+57])
                                                        Texp_ident "suffix/1132"
                                                  ]
                                            ]
                                      ]
                                      expression (src/inlining.ml[335,13969+2]..src/inlining.ml[375,15612+3])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/inlining.ml[335,13969+6]..src/inlining.ml[335,13969+28])
                                              Tpat_tuple
                                              [
                                                pattern (src/inlining.ml[335,13969+6]..src/inlining.ml[335,13969+9])
                                                  Tpat_var "phi/1135"
                                                pattern (src/inlining.ml[335,13969+11]..src/inlining.ml[335,13969+28])
                                                  Tpat_var "inlined_producers/1136"
                                              ]
                                            expression (src/inlining.ml[335,13969+31]..src/inlining.ml[335,13969+59])
                                              Texp_apply
                                              expression (src/inlining.ml[335,13969+31]..src/inlining.ml[335,13969+37])
                                                Texp_ident "rename/933"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/inlining.ml[335,13969+38]..src/inlining.ml[335,13969+42])
                                                    Texp_ident "used/1134"
                                                <arg>
                                                  Nolabel
                                                  expression (src/inlining.ml[335,13969+43]..src/inlining.ml[335,13969+59])
                                                    Texp_field
                                                    expression (src/inlining.ml[335,13969+43]..src/inlining.ml[335,13969+49])
                                                      Texp_ident "callee/1128"
                                                    "producers"
                                              ]
                                        ]
                                        expression (src/inlining.ml[341,14321+2]..src/inlining.ml[375,15612+3])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/inlining.ml[341,14321+6]..src/inlining.ml[341,14321+15])
                                                Tpat_var "producers/1137"
                                              expression (src/inlining.ml[341,14321+18]..src/inlining.ml[341,14321+53])
                                                Texp_apply
                                                expression (src/inlining.ml[341,14321+25]..src/inlining.ml[341,14321+26])
                                                  Texp_ident "Stdlib!.@"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/inlining.ml[341,14321+18]..src/inlining.ml[341,14321+24])
                                                      Texp_ident "prefix/1131"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/inlining.ml[341,14321+27]..src/inlining.ml[341,14321+53])
                                                      Texp_apply
                                                      expression (src/inlining.ml[341,14321+45]..src/inlining.ml[341,14321+46])
                                                        Texp_ident "Stdlib!.@"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/inlining.ml[341,14321+27]..src/inlining.ml[341,14321+44])
                                                            Texp_ident "inlined_producers/1136"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/inlining.ml[341,14321+47]..src/inlining.ml[341,14321+53])
                                                            Texp_ident "suffix/1132"
                                                      ]
                                                ]
                                          ]
                                          expression (src/inlining.ml[342,14378+2]..src/inlining.ml[375,15612+3])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/inlining.ml[342,14378+7]..src/inlining.ml[342,14378+8])
                                                  extra
                                                    Tpat_extra_constraint
                                                    core_type (src/inlining.ml[342,14378+11]..src/inlining.ml[342,14378+22])
                                                      Ttyp_constr "Dune__exe!.StringSet.t"
                                                      []
                                                  Tpat_any
                                                expression (src/inlining.ml[342,14378+26]..src/inlining.ml[342,14378+41])
                                                  Texp_apply
                                                  expression (src/inlining.ml[342,14378+26]..src/inlining.ml[342,14378+31])
                                                    Texp_ident "Dune__exe!.BasicSyntax.names"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/inlining.ml[342,14378+32]..src/inlining.ml[342,14378+41])
                                                        Texp_ident "producers/1137"
                                                  ]
                                            ]
                                            expression (src/inlining.ml[347,14548+2]..src/inlining.ml[375,15612+3])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/inlining.ml[347,14548+6]..src/inlining.ml[347,14548+30])
                                                    Tpat_tuple
                                                    [
                                                      pattern (src/inlining.ml[347,14548+6]..src/inlining.ml[347,14548+12])
                                                        Tpat_var "startp/1138"
                                                      pattern (src/inlining.ml[347,14548+14]..src/inlining.ml[347,14548+18])
                                                        Tpat_var "endp/1139"
                                                      pattern (src/inlining.ml[347,14548+20]..src/inlining.ml[347,14548+30])
                                                        Tpat_var "beforeendp/1140"
                                                    ]
                                                  expression (src/inlining.ml[348,14581+4]..src/inlining.ml[350,14709+41])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (src/inlining.ml[348,14581+8]..src/inlining.ml[348,14581+12])
                                                          Tpat_var "name/1141"
                                                        expression (src/inlining.ml[348,14581+15]..src/inlining.ml[348,14581+74])
                                                          Texp_apply
                                                          expression (src/inlining.ml[348,14581+45]..src/inlining.ml[348,14581+74])
                                                            Texp_apply
                                                            expression (src/inlining.ml[348,14581+45]..src/inlining.ml[348,14581+54])
                                                              Texp_ident "Stdlib!.Array.map"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/inlining.ml[348,14581+55]..src/inlining.ml[348,14581+74])
                                                                  Texp_ident "Dune__exe!.BasicSyntax.producer_identifier"
                                                            ]
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/inlining.ml[348,14581+15]..src/inlining.ml[348,14581+41])
                                                                Texp_apply
                                                                expression (src/inlining.ml[348,14581+28]..src/inlining.ml[348,14581+41])
                                                                  Texp_ident "Stdlib!.Array.of_list"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/inlining.ml[348,14581+15]..src/inlining.ml[348,14581+24])
                                                                      Texp_ident "producers/1137"
                                                                ]
                                                          ]
                                                    ]
                                                    expression (src/inlining.ml[349,14659+4]..src/inlining.ml[350,14709+41])
                                                      Texp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (src/inlining.ml[349,14659+8]..src/inlining.ml[349,14659+15])
                                                            Tpat_var "ncallee/1142"
                                                          expression (src/inlining.ml[349,14659+18]..src/inlining.ml[349,14659+46])
                                                            Texp_apply
                                                            expression (src/inlining.ml[349,14659+18]..src/inlining.ml[349,14659+29])
                                                              Texp_ident "Stdlib!.List.length"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/inlining.ml[349,14659+30]..src/inlining.ml[349,14659+46])
                                                                  Texp_field
                                                                  expression (src/inlining.ml[349,14659+30]..src/inlining.ml[349,14659+36])
                                                                    Texp_ident "callee/1128"
                                                                  "producers"
                                                            ]
                                                      ]
                                                      expression (src/inlining.ml[350,14709+4]..src/inlining.ml[350,14709+41])
                                                        Texp_apply
                                                        expression (src/inlining.ml[350,14709+4]..src/inlining.ml[350,14709+20])
                                                          Texp_ident "define_positions/1052"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/inlining.ml[350,14709+21]..src/inlining.ml[350,14709+25])
                                                              Texp_ident "name/1141"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/inlining.ml[350,14709+26]..src/inlining.ml[350,14709+33])
                                                              Texp_ident "nprefix/1129"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/inlining.ml[350,14709+34]..src/inlining.ml[350,14709+41])
                                                              Texp_ident "ncallee/1142"
                                                        ]
                                              ]
                                              expression (src/inlining.ml[359,15100+2]..src/inlining.ml[375,15612+3])
                                                Texp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (src/inlining.ml[359,15100+6]..src/inlining.ml[359,15100+7])
                                                      Tpat_var "x/1143"
                                                    expression (src/inlining.ml[359,15100+10]..src/inlining.ml[359,15100+38])
                                                      Texp_apply
                                                      expression (src/inlining.ml[359,15100+10]..src/inlining.ml[359,15100+29])
                                                        Texp_ident "Dune__exe!.BasicSyntax.producer_identifier"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/inlining.ml[359,15100+30]..src/inlining.ml[359,15100+38])
                                                            Texp_ident "producer/1127"
                                                      ]
                                                ]
                                                expression (src/inlining.ml[360,15142+2]..src/inlining.ml[375,15612+3])
                                                  Texp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (src/inlining.ml[360,15142+6]..src/inlining.ml[360,15142+34])
                                                        Tpat_tuple
                                                        [
                                                          pattern (src/inlining.ml[360,15142+6]..src/inlining.ml[360,15142+19])
                                                            Tpat_var "caller_action/1144"
                                                          pattern (src/inlining.ml[360,15142+21]..src/inlining.ml[360,15142+34])
                                                            Tpat_var "callee_action/1145"
                                                        ]
                                                      expression (src/inlining.ml[361,15179+4]..src/inlining.ml[362,15261+64])
                                                        Texp_tuple
                                                        [
                                                          expression (src/inlining.ml[361,15179+4]..src/inlining.ml[361,15179+80])
                                                            Texp_apply
                                                            expression (src/inlining.ml[361,15179+4]..src/inlining.ml[361,15179+17])
                                                              Texp_ident "Dune__exe!.Action.rename"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/inlining.ml[361,15179+18]..src/inlining.ml[361,15179+53])
                                                                  Texp_apply
                                                                  expression (src/inlining.ml[361,15179+19]..src/inlining.ml[361,15179+34])
                                                                    Texp_ident "rename_sw_outer/1108"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/inlining.ml[361,15179+35]..src/inlining.ml[361,15179+52])
                                                                        Texp_tuple
                                                                        [
                                                                          expression (src/inlining.ml[361,15179+36]..src/inlining.ml[361,15179+37])
                                                                            Texp_ident "x/1143"
                                                                          expression (src/inlining.ml[361,15179+39]..src/inlining.ml[361,15179+45])
                                                                            Texp_ident "startp/1138"
                                                                          expression (src/inlining.ml[361,15179+47]..src/inlining.ml[361,15179+51])
                                                                            Texp_ident "endp/1139"
                                                                        ]
                                                                  ]
                                                              <arg>
                                                                Nolabel
                                                                expression (src/inlining.ml[361,15179+54]..src/inlining.ml[361,15179+66])
                                                                  Texp_ident "Dune__exe!.Action.empty"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/inlining.ml[361,15179+67]..src/inlining.ml[361,15179+80])
                                                                  Texp_field
                                                                  expression (src/inlining.ml[361,15179+67]..src/inlining.ml[361,15179+73])
                                                                    Texp_ident "caller/1125"
                                                                  "action"
                                                            ]
                                                          expression (src/inlining.ml[362,15261+4]..src/inlining.ml[362,15261+64])
                                                            Texp_apply
                                                            expression (src/inlining.ml[362,15261+4]..src/inlining.ml[362,15261+17])
                                                              Texp_ident "Dune__exe!.Action.rename"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/inlining.ml[362,15261+18]..src/inlining.ml[362,15261+46])
                                                                  Texp_apply
                                                                  expression (src/inlining.ml[362,15261+19]..src/inlining.ml[362,15261+34])
                                                                    Texp_ident "rename_sw_inner/1117"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/inlining.ml[362,15261+35]..src/inlining.ml[362,15261+45])
                                                                        Texp_ident "beforeendp/1140"
                                                                  ]
                                                              <arg>
                                                                Nolabel
                                                                expression (src/inlining.ml[362,15261+47]..src/inlining.ml[362,15261+50])
                                                                  Texp_ident "phi/1135"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/inlining.ml[362,15261+51]..src/inlining.ml[362,15261+64])
                                                                  Texp_field
                                                                  expression (src/inlining.ml[362,15261+51]..src/inlining.ml[362,15261+57])
                                                                    Texp_ident "callee/1128"
                                                                  "action"
                                                            ]
                                                        ]
                                                  ]
                                                  expression (src/inlining.ml[364,15331+2]..src/inlining.ml[375,15612+3])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (src/inlining.ml[364,15331+6]..src/inlining.ml[364,15331+12])
                                                          Tpat_var "action/1146"
                                                        expression (src/inlining.ml[364,15331+15]..src/inlining.ml[364,15331+59])
                                                          Texp_apply
                                                          expression (src/inlining.ml[364,15331+15]..src/inlining.ml[364,15331+29])
                                                            Texp_ident "Dune__exe!.Action.compose"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/inlining.ml[364,15331+30]..src/inlining.ml[364,15331+31])
                                                                Texp_ident "x/1143"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/inlining.ml[364,15331+32]..src/inlining.ml[364,15331+45])
                                                                Texp_ident "callee_action/1145"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/inlining.ml[364,15331+46]..src/inlining.ml[364,15331+59])
                                                                Texp_ident "caller_action/1144"
                                                          ]
                                                    ]
                                                    expression (src/inlining.ml[368,15437+2]..src/inlining.ml[375,15612+3])
                                                      Texp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (src/inlining.ml[368,15437+6]..src/inlining.ml[368,15437+53])
                                                            Tpat_record
                                                            [
                                                              "branch_position"
                                                                pattern (src/inlining.ml[368,15437+8]..src/inlining.ml[368,15437+23])
                                                                  Tpat_var "branch_position/1147"
                                                              "branch_production_level"
                                                                pattern (src/inlining.ml[368,15437+25]..src/inlining.ml[368,15437+48])
                                                                  Tpat_var "branch_production_level/1148"
                                                            ]
                                                          expression (src/inlining.ml[368,15437+56]..src/inlining.ml[368,15437+62])
                                                            Texp_ident "caller/1125"
                                                      ]
                                                      expression (src/inlining.ml[369,15503+2]..src/inlining.ml[375,15612+3])
                                                        Texp_record
                                                          fields =
                                                            [
                                                              "branch_position"
                                                                expression (src/inlining.ml[370,15507+4]..src/inlining.ml[370,15507+19])
                                                                  Texp_ident "branch_position/1147"
                                                              "producers"
                                                                expression (src/inlining.ml[371,15528+4]..src/inlining.ml[371,15528+13])
                                                                  Texp_ident "producers/1137"
                                                              "action"
                                                                expression (src/inlining.ml[372,15543+4]..src/inlining.ml[372,15543+10])
                                                                  Texp_ident "action/1146"
                                                              "branch_prec_annotation"
                                                                expression (src/inlining.ml[373,15555+4]..src/inlining.ml[373,15555+26])
                                                                  Texp_ident "branch_prec_annotation/1133"
                                                              "branch_production_level"
                                                                expression (src/inlining.ml[374,15583+4]..src/inlining.ml[374,15583+27])
                                                                  Texp_ident "branch_production_level/1148"
                                                            ]
                                                          representation =
                                                            Record_regular
                                                          extended_expression =
                                                            None
                      ]
                ]
          ]
    ]
  structure_item (src/inlining.ml[381,15780+0]..src/inlining.ml[382,15846+46])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[381,15780+4]..src/inlining.ml[381,15780+19])
          Tpat_var "inline_branches/1185"
        expression (src/inlining.ml[381,15780+20]..src/inlining.ml[382,15846+46]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/inlining.ml[381,15780+20]..src/inlining.ml[381,15780+26])
                Tpat_var "caller/1187"
              expression (src/inlining.ml[381,15780+27]..src/inlining.ml[382,15846+46]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/inlining.ml[381,15780+27]..src/inlining.ml[381,15780+31])
                      Tpat_var "site/1188"
                    expression (src/inlining.ml[381,15780+32]..src/inlining.ml[382,15846+46]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/inlining.ml[381,15780+33]..src/inlining.ml[381,15780+40])
                            extra
                              Tpat_extra_constraint
                              core_type (src/inlining.ml[381,15780+43]..src/inlining.ml[381,15780+51])
                                Ttyp_constr "Dune__exe!.BasicSyntax.branches"
                                []
                            Tpat_alias "callees/1189"
                            pattern (src/inlining.ml[381,15780+33]..src/inlining.ml[381,15780+40])
                              Tpat_any
                          expression (src/inlining.ml[382,15846+2]..src/inlining.ml[382,15846+46])
                            extra
                              Texp_constraint
                              core_type (src/inlining.ml[381,15780+55]..src/inlining.ml[381,15780+63])
                                Ttyp_constr "Dune__exe!.BasicSyntax.branches"
                                []
                            Texp_apply
                            expression (src/inlining.ml[382,15846+2]..src/inlining.ml[382,15846+10])
                              Texp_ident "Stdlib!.List.map"
                            [
                              <arg>
                                Nolabel
                                expression (src/inlining.ml[382,15846+11]..src/inlining.ml[382,15846+38])
                                  Texp_apply
                                  expression (src/inlining.ml[382,15846+12]..src/inlining.ml[382,15846+25])
                                    Texp_ident "inline_branch/1123"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/inlining.ml[382,15846+26]..src/inlining.ml[382,15846+32])
                                        Texp_ident "caller/1187"
                                    <arg>
                                      Nolabel
                                      expression (src/inlining.ml[382,15846+33]..src/inlining.ml[382,15846+37])
                                        Texp_ident "site/1188"
                                  ]
                              <arg>
                                Nolabel
                                expression (src/inlining.ml[382,15846+39]..src/inlining.ml[382,15846+46])
                                  Texp_ident "callees/1189"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/inlining.ml[401,16938+0]..src/inlining.ml[539,22242+3])
    Tstr_module
    Inline/1482
      module_expr (src/inlining.ml[401,16938+14]..src/inlining.ml[539,22242+3])
        Tmod_functor "G/1191"
        module_type (src/inlining.ml[401,16938+19]..src/inlining.ml[401,16938+47])
          Tmty_signature
          [
            signature_item (src/inlining.ml[401,16938+23]..src/inlining.ml[401,16938+43])
              Tsig_value
              value_description grammar/1190 (src/inlining.ml[401,16938+23]..src/inlining.ml[401,16938+43])
                core_type (src/inlining.ml[401,16938+36]..src/inlining.ml[401,16938+43])
                  Ttyp_constr "Dune__exe!.BasicSyntax.grammar"
                  []
                []
          ]
        module_expr (src/inlining.ml[401,16938+51]..src/inlining.ml[539,22242+3])
          module_expr (src/inlining.ml[401,16938+51]..src/inlining.ml[539,22242+3])
            Tmod_structure
            [
              structure_item (src/inlining.ml[403,16997+2]..src/inlining.ml[403,16997+8])
                Tstr_open Fresh
                module_expr (src/inlining.ml[403,16997+7]..src/inlining.ml[403,16997+8])
                  Tmod_ident "G/1191"
              structure_item (src/inlining.ml[405,17007+2]..src/inlining.ml[406,17032+28])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/inlining.ml[405,17007+6]..src/inlining.ml[405,17007+22])
                      Tpat_var "is_inline_symbol/1192"
                    expression (src/inlining.ml[406,17032+4]..src/inlining.ml[406,17032+28])
                      Texp_apply
                      expression (src/inlining.ml[406,17032+4]..src/inlining.ml[406,17032+20])
                        Texp_ident "Dune__exe!.BasicSyntax.is_inline_symbol"
                      [
                        <arg>
                          Nolabel
                          expression (src/inlining.ml[406,17032+21]..src/inlining.ml[406,17032+28])
                            Texp_ident "G/1191.grammar"
                      ]
                ]
              structure_item (src/inlining.ml[408,17062+2]..src/inlining.ml[409,17089+30])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/inlining.ml[408,17062+6]..src/inlining.ml[408,17062+24])
                      Tpat_var "is_inline_producer/1193"
                    expression (src/inlining.ml[409,17089+4]..src/inlining.ml[409,17089+30])
                      Texp_apply
                      expression (src/inlining.ml[409,17089+4]..src/inlining.ml[409,17089+22])
                        Texp_ident "Dune__exe!.BasicSyntax.is_inline_producer"
                      [
                        <arg>
                          Nolabel
                          expression (src/inlining.ml[409,17089+23]..src/inlining.ml[409,17089+30])
                            Texp_ident "G/1191.grammar"
                      ]
                ]
              structure_item (src/inlining.ml[411,17121+2]..src/inlining.ml[412,17134+16])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/inlining.ml[411,17121+6]..src/inlining.ml[411,17121+10])
                      Tpat_var "find/1194"
                    expression (src/inlining.ml[412,17134+4]..src/inlining.ml[412,17134+16])
                      Texp_apply
                      expression (src/inlining.ml[412,17134+4]..src/inlining.ml[412,17134+8])
                        Texp_ident "find/507"
                      [
                        <arg>
                          Nolabel
                          expression (src/inlining.ml[412,17134+9]..src/inlining.ml[412,17134+16])
                            Texp_ident "G/1191.grammar"
                      ]
                ]
              structure_item (src/inlining.ml[424,17780+2]..src/inlining.ml[430,17983+21])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/inlining.ml[424,17780+6]..src/inlining.ml[424,17780+8])
                      Tpat_construct "()"
                      []
                      None
                    expression (src/inlining.ml[425,17791+4]..src/inlining.ml[430,17983+21])
                      Texp_ifthenelse
                      expression (src/inlining.ml[425,17791+7]..src/inlining.ml[425,17791+19])
                        Texp_ident "Dune__exe!.Settings.coq"
                      expression (src/inlining.ml[426,17816+6]..src/inlining.ml[430,17983+21])
                        Texp_apply
                        expression (src/inlining.ml[426,17816+6]..src/inlining.ml[426,17816+20])
                          Texp_ident "Dune__exe!.StringMap.iter"
                        [
                          <arg>
                            Nolabel
                            expression (src/inlining.ml[426,17816+21]..src/inlining.ml[430,17983+7])
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/inlining.ml[426,17816+26]..src/inlining.ml[426,17816+27])
                                    Tpat_any
                                  expression (src/inlining.ml[426,17816+28]..src/inlining.ml[429,17922+60]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/inlining.ml[426,17816+28]..src/inlining.ml[426,17816+32])
                                          Tpat_var "rule/1255"
                                        expression (src/inlining.ml[427,17852+8]..src/inlining.ml[429,17922+60])
                                          Texp_ifthenelse
                                          expression (src/inlining.ml[427,17852+11]..src/inlining.ml[427,17852+27])
                                            Texp_field
                                            expression (src/inlining.ml[427,17852+11]..src/inlining.ml[427,17852+15])
                                              Texp_ident "rule/1255"
                                            "inline_flag"
                                          expression (src/inlining.ml[428,17885+10]..src/inlining.ml[429,17922+60])
                                            Texp_apply
                                            expression (src/inlining.ml[428,17885+10]..src/inlining.ml[428,17885+21])
                                              Texp_ident "Dune__exe!.Error.error"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/inlining.ml[428,17885+22]..src/inlining.ml[428,17885+36])
                                                  Texp_field
                                                  expression (src/inlining.ml[428,17885+22]..src/inlining.ml[428,17885+26])
                                                    Texp_ident "rule/1255"
                                                  "positions"
                                              <arg>
                                                Nolabel
                                                expression (src/inlining.ml[429,17922+12]..src/inlining.ml[429,17922+60])
                                                  Texp_construct "CamlinternalFormatBasics.Format"
                                                  [
                                                    expression (src/inlining.ml[429,17922+12]..src/inlining.ml[429,17922+60]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                      [
                                                        expression (src/inlining.ml[429,17922+12]..src/inlining.ml[429,17922+60]) ghost
                                                          Texp_constant Const_char 25
                                                        expression (src/inlining.ml[429,17922+12]..src/inlining.ml[429,17922+60]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                                          [
                                                            expression (src/inlining.ml[429,17922+12]..src/inlining.ml[429,17922+60]) ghost
                                                              Texp_constant Const_string("inline is not supported by the Coq back-end.",(src/inlining.ml[429,17922+12]..src/inlining.ml[429,17922+60]) ghost,None)
                                                            expression (src/inlining.ml[429,17922+12]..src/inlining.ml[429,17922+60]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                              []
                                                          ]
                                                      ]
                                                    expression (src/inlining.ml[429,17922+12]..src/inlining.ml[429,17922+60]) ghost
                                                      Texp_constant Const_string("%%inline is not supported by the Coq back-end.",(src/inlining.ml[429,17922+12]..src/inlining.ml[429,17922+60]) ghost,None)
                                                  ]
                                            ]
                                          None
                                    ]
                              ]
                          <arg>
                            Nolabel
                            expression (src/inlining.ml[430,17983+8]..src/inlining.ml[430,17983+21])
                              Texp_field
                              expression (src/inlining.ml[430,17983+8]..src/inlining.ml[430,17983+15])
                                Texp_ident "G/1191.grammar"
                              "rules"
                        ]
                      None
                ]
              structure_item (src/inlining.ml[439,18441+2]..src/inlining.ml[460,19556+44])
                Tstr_value Rec
                [
                  <def>
                    pattern (src/inlining.ml[439,18441+10]..src/inlining.ml[439,18441+25])
                      Tpat_var "expand_branches/1257"
                    expression (src/inlining.ml[439,18441+26]..src/inlining.ml[460,19556+44]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/inlining.ml[439,18441+26]..src/inlining.ml[439,18441+39])
                            Tpat_var "expand_symbol/1258"
                          expression (src/inlining.ml[439,18441+40]..src/inlining.ml[460,19556+44]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/inlining.ml[439,18441+40]..src/inlining.ml[439,18441+41])
                                  Tpat_var "i/1259"
                                expression (src/inlining.ml[439,18441+42]..src/inlining.ml[460,19556+44]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/inlining.ml[439,18441+42]..src/inlining.ml[439,18441+50])
                                        Tpat_var "branches/1260"
                                      expression (src/inlining.ml[441,18564+4]..src/inlining.ml[460,19556+44])
                                        extra
                                          Texp_constraint
                                          core_type (src/inlining.ml[439,18441+53]..src/inlining.ml[439,18441+61])
                                            Ttyp_constr "Dune__exe!.BasicSyntax.branches"
                                            []
                                        Texp_apply
                                        expression (src/inlining.ml[441,18564+13]..src/inlining.ml[441,18564+16])
                                          Texp_ident "Dune__exe!.ListMonad.>>="
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/inlining.ml[441,18564+4]..src/inlining.ml[441,18564+12])
                                              Texp_ident "branches/1260"
                                          <arg>
                                            Nolabel
                                            expression (src/inlining.ml[441,18564+17]..src/inlining.ml[460,19556+44])
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/inlining.ml[441,18564+22]..src/inlining.ml[441,18564+28])
                                                    extra
                                                      Tpat_extra_constraint
                                                      core_type (src/inlining.ml[441,18564+31]..src/inlining.ml[441,18564+37])
                                                        Ttyp_constr "Dune__exe!.BasicSyntax.branch"
                                                        []
                                                    Tpat_alias "caller/1261"
                                                    pattern (src/inlining.ml[441,18564+22]..src/inlining.ml[441,18564+28])
                                                      Tpat_any
                                                  expression (src/inlining.ml[445,18812+6]..src/inlining.ml[460,19556+44])
                                                    Texp_match
                                                    expression (src/inlining.ml[445,18812+12]..src/inlining.ml[445,18812+59])
                                                      Texp_apply
                                                      expression (src/inlining.ml[445,18812+12]..src/inlining.ml[445,18812+21])
                                                        Texp_ident "search_at/502"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/inlining.ml[445,18812+22]..src/inlining.ml[445,18812+40])
                                                            Texp_ident "is_inline_producer/1193"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/inlining.ml[445,18812+41]..src/inlining.ml[445,18812+42])
                                                            Texp_ident "i/1259"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/inlining.ml[445,18812+43]..src/inlining.ml[445,18812+59])
                                                            Texp_field
                                                            expression (src/inlining.ml[445,18812+43]..src/inlining.ml[445,18812+49])
                                                              Texp_ident "caller/1261"
                                                            "producers"
                                                      ]
                                                    [
                                                      <case>
                                                        pattern (src/inlining.ml[446,18877+8]..src/inlining.ml[446,18877+12])
                                                          Tpat_value
                                                          pattern (src/inlining.ml[446,18877+8]..src/inlining.ml[446,18877+12])
                                                            Tpat_construct "None"
                                                            []
                                                            None
                                                        expression (src/inlining.ml[448,18937+10]..src/inlining.ml[448,18937+23])
                                                          Texp_apply
                                                          expression (src/inlining.ml[448,18937+10]..src/inlining.ml[448,18937+16])
                                                            Texp_ident "Dune__exe!.ListMonad.return"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/inlining.ml[448,18937+17]..src/inlining.ml[448,18937+23])
                                                                Texp_ident "caller/1261"
                                                          ]
                                                      <case>
                                                        pattern (src/inlining.ml[449,18961+8]..src/inlining.ml[449,18961+36])
                                                          Tpat_value
                                                          pattern (src/inlining.ml[449,18961+8]..src/inlining.ml[449,18961+36])
                                                            Tpat_construct "Some"
                                                            [
                                                              pattern (src/inlining.ml[449,18961+13]..src/inlining.ml[449,18961+36])
                                                                Tpat_alias "site/1264"
                                                                pattern (src/inlining.ml[449,18961+14]..src/inlining.ml[449,18961+27])
                                                                  Tpat_tuple
                                                                  [
                                                                    pattern (src/inlining.ml[449,18961+15]..src/inlining.ml[449,18961+16])
                                                                      Tpat_var "i/1262"
                                                                    pattern (src/inlining.ml[449,18961+18]..src/inlining.ml[449,18961+26])
                                                                      Tpat_var "producer/1263"
                                                                  ]
                                                            ]
                                                            None
                                                        expression (src/inlining.ml[455,19358+10]..src/inlining.ml[460,19556+44])
                                                          Texp_sequence
                                                          expression (src/inlining.ml[455,19358+10]..src/inlining.ml[455,19358+47])
                                                            Texp_apply
                                                            expression (src/inlining.ml[455,19358+10]..src/inlining.ml[455,19358+38])
                                                              Texp_ident "check_no_producer_attributes/607"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/inlining.ml[455,19358+39]..src/inlining.ml[455,19358+47])
                                                                  Texp_ident "producer/1263"
                                                            ]
                                                          expression (src/inlining.ml[456,19407+10]..src/inlining.ml[460,19556+44])
                                                            Texp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (src/inlining.ml[456,19407+14]..src/inlining.ml[456,19407+20])
                                                                  Tpat_var "symbol/1265"
                                                                expression (src/inlining.ml[456,19407+23]..src/inlining.ml[456,19407+47])
                                                                  Texp_apply
                                                                  expression (src/inlining.ml[456,19407+23]..src/inlining.ml[456,19407+38])
                                                                    Texp_ident "Dune__exe!.BasicSyntax.producer_symbol"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/inlining.ml[456,19407+39]..src/inlining.ml[456,19407+47])
                                                                        Texp_ident "producer/1263"
                                                                  ]
                                                            ]
                                                            expression (src/inlining.ml[457,19458+10]..src/inlining.ml[460,19556+44])
                                                              Texp_apply
                                                              expression (src/inlining.ml[460,19556+13]..src/inlining.ml[460,19556+44])
                                                                Texp_apply
                                                                expression (src/inlining.ml[460,19556+13]..src/inlining.ml[460,19556+28])
                                                                  Texp_ident "expand_branches/1257"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/inlining.ml[460,19556+29]..src/inlining.ml[460,19556+42])
                                                                      Texp_ident "expand_symbol/1258"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/inlining.ml[460,19556+43]..src/inlining.ml[460,19556+44])
                                                                      Texp_ident "i/1262"
                                                                ]
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/inlining.ml[457,19458+10]..src/inlining.ml[459,19515+40])
                                                                    Texp_apply
                                                                    expression (src/inlining.ml[459,19515+13]..src/inlining.ml[459,19515+40])
                                                                      Texp_apply
                                                                      expression (src/inlining.ml[459,19515+13]..src/inlining.ml[459,19515+28])
                                                                        Texp_ident "inline_branches/1185"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/inlining.ml[459,19515+29]..src/inlining.ml[459,19515+35])
                                                                            Texp_ident "caller/1261"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/inlining.ml[459,19515+36]..src/inlining.ml[459,19515+40])
                                                                            Texp_ident "site/1264"
                                                                      ]
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/inlining.ml[457,19458+10]..src/inlining.ml[458,19489+25])
                                                                          Texp_apply
                                                                          expression (src/inlining.ml[458,19489+13]..src/inlining.ml[458,19489+25])
                                                                            Texp_ident "Dune__exe!.BasicSyntax.get_branches"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/inlining.ml[457,19458+10]..src/inlining.ml[457,19458+30])
                                                                                Texp_apply
                                                                                expression (src/inlining.ml[457,19458+10]..src/inlining.ml[457,19458+23])
                                                                                  Texp_ident "expand_symbol/1258"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/inlining.ml[457,19458+24]..src/inlining.ml[457,19458+30])
                                                                                      Texp_ident "symbol/1265"
                                                                                ]
                                                                          ]
                                                                    ]
                                                              ]
                                                    ]
                                              ]
                                        ]
                                  ]
                            ]
                      ]
                ]
              structure_item (src/inlining.ml[464,19661+2]..src/inlining.ml[469,19907+59])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/inlining.ml[464,19661+6]..src/inlining.ml[464,19661+19])
                      Tpat_var "expand_symbol/1266"
                    expression (src/inlining.ml[464,19661+20]..src/inlining.ml[469,19907+59]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/inlining.ml[464,19661+20]..src/inlining.ml[464,19661+33])
                            Tpat_var "expand_symbol/1268"
                          expression (src/inlining.ml[464,19661+34]..src/inlining.ml[469,19907+59]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/inlining.ml[464,19661+34]..src/inlining.ml[464,19661+40])
                                  Tpat_var "symbol/1269"
                                expression (src/inlining.ml[468,19891+4]..src/inlining.ml[469,19907+59])
                                  extra
                                    Texp_constraint
                                    core_type (src/inlining.ml[464,19661+43]..src/inlining.ml[464,19661+47])
                                      Ttyp_constr "Dune__exe!.BasicSyntax.rule"
                                      []
                                  Texp_apply
                                  expression (src/inlining.ml[469,19907+7]..src/inlining.ml[469,19907+59])
                                    Texp_apply
                                    expression (src/inlining.ml[469,19907+7]..src/inlining.ml[469,19907+25])
                                      Texp_ident "Dune__exe!.BasicSyntax.transform_branches"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/inlining.ml[469,19907+26]..src/inlining.ml[469,19907+59])
                                          Texp_apply
                                          expression (src/inlining.ml[469,19907+27]..src/inlining.ml[469,19907+42])
                                            Texp_ident "expand_branches/1257"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/inlining.ml[469,19907+43]..src/inlining.ml[469,19907+56])
                                                Texp_ident "expand_symbol/1268"
                                            <arg>
                                              Nolabel
                                              expression (src/inlining.ml[469,19907+57]..src/inlining.ml[469,19907+58])
                                                Texp_constant Const_int 0
                                          ]
                                    ]
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/inlining.ml[468,19891+4]..src/inlining.ml[468,19891+15])
                                        Texp_apply
                                        expression (src/inlining.ml[468,19891+4]..src/inlining.ml[468,19891+8])
                                          Texp_ident "find/1194"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/inlining.ml[468,19891+9]..src/inlining.ml[468,19891+15])
                                              Texp_ident "symbol/1269"
                                        ]
                                  ]
                            ]
                      ]
                ]
              structure_item (src/inlining.ml[473,20044+2]..src/inlining.ml[474,20090+50])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/inlining.ml[473,20044+6]..src/inlining.ml[473,20044+19])
                      extra
                        Tpat_extra_constraint
                        core_type (src/inlining.ml[473,20044+22]..src/inlining.ml[473,20044+43])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/inlining.ml[473,20044+22]..src/inlining.ml[473,20044+35])
                            Ttyp_constr "Dune__exe!.Syntax.symbol"
                            []
                          core_type (src/inlining.ml[473,20044+39]..src/inlining.ml[473,20044+43])
                            Ttyp_constr "Dune__exe!.BasicSyntax.rule"
                            []
                      Tpat_alias "expand_symbol/1270"
                      pattern (src/inlining.ml[473,20044+6]..src/inlining.ml[473,20044+19])
                        Tpat_any
                    expression (src/inlining.ml[474,20090+4]..src/inlining.ml[474,20090+50])
                      extra
                        Texp_constraint
                        core_type (src/inlining.ml[473,20044+22]..src/inlining.ml[473,20044+43])
                          Ttyp_arrow
                          Nolabel
                          core_type (src/inlining.ml[473,20044+22]..src/inlining.ml[473,20044+35])
                            Ttyp_constr "Dune__exe!.Syntax.symbol"
                            []
                          core_type (src/inlining.ml[473,20044+39]..src/inlining.ml[473,20044+43])
                            Ttyp_constr "Dune__exe!.BasicSyntax.rule"
                            []
                      Texp_apply
                      expression (src/inlining.ml[474,20090+4]..src/inlining.ml[474,20090+36])
                        Texp_ident "Dune__exe!.Fix.Memoize.String.defensive_fix"
                      [
                        <arg>
                          Nolabel
                          expression (src/inlining.ml[474,20090+37]..src/inlining.ml[474,20090+50])
                            Texp_ident "expand_symbol/1266"
                      ]
                ]
              structure_item (src/inlining.ml[480,20308+2]..src/inlining.ml[501,21077+57])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/inlining.ml[480,20308+6]..src/inlining.ml[480,20308+19])
                      Tpat_var "expand_symbol/1372"
                    expression (src/inlining.ml[480,20308+20]..src/inlining.ml[501,21077+57]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/inlining.ml[480,20308+20]..src/inlining.ml[480,20308+26])
                            Tpat_var "symbol/1373"
                          expression (src/inlining.ml[481,20337+4]..src/inlining.ml[501,21077+57])
                            Texp_try
                            expression (src/inlining.ml[482,20345+6]..src/inlining.ml[482,20345+26])
                              Texp_apply
                              expression (src/inlining.ml[482,20345+6]..src/inlining.ml[482,20345+19])
                                Texp_ident "expand_symbol/1270"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/inlining.ml[482,20345+20]..src/inlining.ml[482,20345+26])
                                    Texp_ident "symbol/1373"
                              ]
                            [
                              <case>
                                pattern (src/inlining.ml[483,20372+9]..src/inlining.ml[483,20372+51])
                                  Tpat_construct "Fix.Memoize.String.Cycle"
                                  [
                                    pattern (src/inlining.ml[483,20372+35]..src/inlining.ml[483,20372+42])
                                      Tpat_var "symbols/1374"
                                    pattern (src/inlining.ml[483,20372+44]..src/inlining.ml[483,20372+50])
                                      Tpat_var "symbol/1375"
                                  ]
                                  None
                                expression (src/inlining.ml[484,20427+6]..src/inlining.ml[501,21077+57])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/inlining.ml[484,20427+10]..src/inlining.ml[484,20427+14])
                                        Tpat_var "rule/1376"
                                      expression (src/inlining.ml[484,20427+17]..src/inlining.ml[484,20427+28])
                                        Texp_apply
                                        expression (src/inlining.ml[484,20427+17]..src/inlining.ml[484,20427+21])
                                          Texp_ident "find/1194"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/inlining.ml[484,20427+22]..src/inlining.ml[484,20427+28])
                                              Texp_ident "symbol/1375"
                                        ]
                                  ]
                                  expression (src/inlining.ml[485,20459+6]..src/inlining.ml[501,21077+57])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/inlining.ml[485,20459+10]..src/inlining.ml[485,20459+11])
                                          Tpat_var "b/1377"
                                        expression (src/inlining.ml[485,20459+14]..src/inlining.ml[485,20459+31])
                                          Texp_apply
                                          expression (src/inlining.ml[485,20459+14]..src/inlining.ml[485,20459+27])
                                            Texp_ident "Stdlib!.Buffer.create"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/inlining.ml[485,20459+28]..src/inlining.ml[485,20459+31])
                                                Texp_constant Const_int 128
                                          ]
                                    ]
                                    expression (src/inlining.ml[486,20494+6]..src/inlining.ml[501,21077+57])
                                      Texp_sequence
                                      expression (src/inlining.ml[486,20494+6]..src/inlining.ml[486,20494+76])
                                        Texp_apply
                                        expression (src/inlining.ml[486,20494+6]..src/inlining.ml[486,20494+20])
                                          Texp_ident "Stdlib!.Printf.bprintf"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/inlining.ml[486,20494+21]..src/inlining.ml[486,20494+22])
                                              Texp_ident "b/1377"
                                          <arg>
                                            Nolabel
                                            expression (src/inlining.ml[486,20494+23]..src/inlining.ml[486,20494+76])
                                              Texp_construct "CamlinternalFormatBasics.Format"
                                              [
                                                expression (src/inlining.ml[486,20494+23]..src/inlining.ml[486,20494+76]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                  [
                                                    expression (src/inlining.ml[486,20494+23]..src/inlining.ml[486,20494+76]) ghost
                                                      Texp_constant Const_string("there is a cycle of ",(src/inlining.ml[486,20494+23]..src/inlining.ml[486,20494+76]) ghost,None)
                                                    expression (src/inlining.ml[486,20494+23]..src/inlining.ml[486,20494+76]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                      [
                                                        expression (src/inlining.ml[486,20494+23]..src/inlining.ml[486,20494+76]) ghost
                                                          Texp_constant Const_char 25
                                                        expression (src/inlining.ml[486,20494+23]..src/inlining.ml[486,20494+76]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                                          [
                                                            expression (src/inlining.ml[486,20494+23]..src/inlining.ml[486,20494+76]) ghost
                                                              Texp_constant Const_string("inline nonterminal symbols:\n",(src/inlining.ml[486,20494+23]..src/inlining.ml[486,20494+76]) ghost,None)
                                                            expression (src/inlining.ml[486,20494+23]..src/inlining.ml[486,20494+76]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                              []
                                                          ]
                                                      ]
                                                  ]
                                                expression (src/inlining.ml[486,20494+23]..src/inlining.ml[486,20494+76]) ghost
                                                  Texp_constant Const_string("there is a cycle of %%inline nonterminal symbols:\n",(src/inlining.ml[486,20494+23]..src/inlining.ml[486,20494+76]) ghost,None)
                                              ]
                                        ]
                                      expression (src/inlining.ml[487,20572+6]..src/inlining.ml[501,21077+57])
                                        Texp_sequence
                                        expression (src/inlining.ml[487,20572+6]..src/inlining.ml[500,21066+9])
                                          Texp_match
                                          expression (src/inlining.ml[487,20572+18]..src/inlining.ml[487,20572+25])
                                            Texp_ident "symbols/1374"
                                          [
                                            <case>
                                              pattern (src/inlining.ml[488,20603+8]..src/inlining.ml[488,20603+10])
                                                Tpat_value
                                                pattern (src/inlining.ml[488,20603+8]..src/inlining.ml[488,20603+10])
                                                  Tpat_construct "[]"
                                                  []
                                                  None
                                              expression (src/inlining.ml[489,20617+10]..src/inlining.ml[489,20617+22])
                                                Texp_assert                                                expression (src/inlining.ml[489,20617+17]..src/inlining.ml[489,20617+22])
                                                  Texp_construct "false"
                                                  []
                                            <case>
                                              pattern (src/inlining.ml[490,20640+8]..src/inlining.ml[490,20640+18])
                                                Tpat_value
                                                pattern (src/inlining.ml[490,20640+8]..src/inlining.ml[490,20640+18])
                                                  Tpat_construct "::"
                                                  [
                                                    pattern (src/inlining.ml[490,20640+8]..src/inlining.ml[490,20640+12])
                                                      Tpat_var "head/1460"
                                                    pattern (src/inlining.ml[490,20640+16]..src/inlining.ml[490,20640+18])
                                                      Tpat_construct "[]"
                                                      []
                                                      None
                                                  ]
                                                  None
                                              expression (src/inlining.ml[491,20662+10]..src/inlining.ml[492,20696+58])
                                                Texp_sequence
                                                expression (src/inlining.ml[491,20662+10]..src/inlining.ml[491,20662+32])
                                                  Texp_assert                                                  expression (src/inlining.ml[491,20662+17]..src/inlining.ml[491,20662+32])
                                                    Texp_apply
                                                    expression (src/inlining.ml[491,20662+23]..src/inlining.ml[491,20662+24])
                                                      Texp_ident "Stdlib!.="
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/inlining.ml[491,20662+18]..src/inlining.ml[491,20662+22])
                                                          Texp_ident "head/1460"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/inlining.ml[491,20662+25]..src/inlining.ml[491,20662+31])
                                                          Texp_ident "symbol/1375"
                                                    ]
                                                expression (src/inlining.ml[492,20696+10]..src/inlining.ml[492,20696+58])
                                                  Texp_apply
                                                  expression (src/inlining.ml[492,20696+10]..src/inlining.ml[492,20696+24])
                                                    Texp_ident "Stdlib!.Printf.bprintf"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/inlining.ml[492,20696+25]..src/inlining.ml[492,20696+26])
                                                        Texp_ident "b/1377"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/inlining.ml[492,20696+27]..src/inlining.ml[492,20696+51])
                                                        Texp_construct "CamlinternalFormatBasics.Format"
                                                        [
                                                          expression (src/inlining.ml[492,20696+27]..src/inlining.ml[492,20696+51]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                            [
                                                              expression (src/inlining.ml[492,20696+27]..src/inlining.ml[492,20696+51]) ghost
                                                                Texp_constant Const_string("  ",(src/inlining.ml[492,20696+27]..src/inlining.ml[492,20696+51]) ghost,None)
                                                              expression (src/inlining.ml[492,20696+27]..src/inlining.ml[492,20696+51]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.String"
                                                                [
                                                                  expression (src/inlining.ml[492,20696+27]..src/inlining.ml[492,20696+51]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                    []
                                                                  expression (src/inlining.ml[492,20696+27]..src/inlining.ml[492,20696+51]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                    [
                                                                      expression (src/inlining.ml[492,20696+27]..src/inlining.ml[492,20696+51]) ghost
                                                                        Texp_constant Const_string(" refers to itself.",(src/inlining.ml[492,20696+27]..src/inlining.ml[492,20696+51]) ghost,None)
                                                                      expression (src/inlining.ml[492,20696+27]..src/inlining.ml[492,20696+51]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                        []
                                                                    ]
                                                                ]
                                                            ]
                                                          expression (src/inlining.ml[492,20696+27]..src/inlining.ml[492,20696+51]) ghost
                                                            Texp_constant Const_string("  %s refers to itself.",(src/inlining.ml[492,20696+27]..src/inlining.ml[492,20696+51]) ghost,None)
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (src/inlining.ml[492,20696+52]..src/inlining.ml[492,20696+58])
                                                        Texp_ident "symbol/1375"
                                                  ]
                                            <case>
                                              pattern (src/inlining.ml[493,20755+8]..src/inlining.ml[493,20755+31])
                                                Tpat_value
                                                pattern (src/inlining.ml[493,20755+8]..src/inlining.ml[493,20755+31])
                                                  Tpat_construct "::"
                                                  [
                                                    pattern (src/inlining.ml[493,20755+8]..src/inlining.ml[493,20755+12])
                                                      Tpat_var "head/1461"
                                                    pattern (src/inlining.ml[493,20755+16]..src/inlining.ml[493,20755+31])
                                                      Tpat_construct "::"
                                                      [
                                                        pattern (src/inlining.ml[493,20755+16]..src/inlining.ml[493,20755+20])
                                                          Tpat_var "next/1462"
                                                        pattern (src/inlining.ml[493,20755+24]..src/inlining.ml[493,20755+31])
                                                          Tpat_var "symbols/1463"
                                                      ]
                                                      None
                                                  ]
                                                  None
                                              expression (src/inlining.ml[494,20790+10]..src/inlining.ml[499,21003+62])
                                                Texp_sequence
                                                expression (src/inlining.ml[494,20790+10]..src/inlining.ml[494,20790+32])
                                                  Texp_assert                                                  expression (src/inlining.ml[494,20790+17]..src/inlining.ml[494,20790+32])
                                                    Texp_apply
                                                    expression (src/inlining.ml[494,20790+23]..src/inlining.ml[494,20790+24])
                                                      Texp_ident "Stdlib!.="
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/inlining.ml[494,20790+18]..src/inlining.ml[494,20790+22])
                                                          Texp_ident "head/1461"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/inlining.ml[494,20790+25]..src/inlining.ml[494,20790+31])
                                                          Texp_ident "symbol/1375"
                                                    ]
                                                expression (src/inlining.ml[495,20824+10]..src/inlining.ml[499,21003+62])
                                                  Texp_sequence
                                                  expression (src/inlining.ml[495,20824+10]..src/inlining.ml[495,20824+59])
                                                    Texp_apply
                                                    expression (src/inlining.ml[495,20824+10]..src/inlining.ml[495,20824+24])
                                                      Texp_ident "Stdlib!.Printf.bprintf"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/inlining.ml[495,20824+25]..src/inlining.ml[495,20824+26])
                                                          Texp_ident "b/1377"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/inlining.ml[495,20824+27]..src/inlining.ml[495,20824+49])
                                                          Texp_construct "CamlinternalFormatBasics.Format"
                                                          [
                                                            expression (src/inlining.ml[495,20824+27]..src/inlining.ml[495,20824+49]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                              [
                                                                expression (src/inlining.ml[495,20824+27]..src/inlining.ml[495,20824+49]) ghost
                                                                  Texp_constant Const_string("  ",(src/inlining.ml[495,20824+27]..src/inlining.ml[495,20824+49]) ghost,None)
                                                                expression (src/inlining.ml[495,20824+27]..src/inlining.ml[495,20824+49]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.String"
                                                                  [
                                                                    expression (src/inlining.ml[495,20824+27]..src/inlining.ml[495,20824+49]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                      []
                                                                    expression (src/inlining.ml[495,20824+27]..src/inlining.ml[495,20824+49]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                      [
                                                                        expression (src/inlining.ml[495,20824+27]..src/inlining.ml[495,20824+49]) ghost
                                                                          Texp_constant Const_string(" refers to ",(src/inlining.ml[495,20824+27]..src/inlining.ml[495,20824+49]) ghost,None)
                                                                        expression (src/inlining.ml[495,20824+27]..src/inlining.ml[495,20824+49]) ghost
                                                                          Texp_construct "CamlinternalFormatBasics.String"
                                                                          [
                                                                            expression (src/inlining.ml[495,20824+27]..src/inlining.ml[495,20824+49]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                              []
                                                                            expression (src/inlining.ml[495,20824+27]..src/inlining.ml[495,20824+49]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                              [
                                                                                expression (src/inlining.ml[495,20824+27]..src/inlining.ml[495,20824+49]) ghost
                                                                                  Texp_constant Const_string(",\n",(src/inlining.ml[495,20824+27]..src/inlining.ml[495,20824+49]) ghost,None)
                                                                                expression (src/inlining.ml[495,20824+27]..src/inlining.ml[495,20824+49]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                  []
                                                                              ]
                                                                          ]
                                                                      ]
                                                                  ]
                                                              ]
                                                            expression (src/inlining.ml[495,20824+27]..src/inlining.ml[495,20824+49]) ghost
                                                              Texp_constant Const_string("  %s refers to %s,\n",(src/inlining.ml[495,20824+27]..src/inlining.ml[495,20824+49]) ghost,None)
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (src/inlining.ml[495,20824+50]..src/inlining.ml[495,20824+54])
                                                          Texp_ident "head/1461"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/inlining.ml[495,20824+55]..src/inlining.ml[495,20824+59])
                                                          Texp_ident "next/1462"
                                                    ]
                                                  expression (src/inlining.ml[496,20885+10]..src/inlining.ml[499,21003+62])
                                                    Texp_sequence
                                                    expression (src/inlining.ml[496,20885+10]..src/inlining.ml[498,20982+19])
                                                      Texp_apply
                                                      expression (src/inlining.ml[496,20885+10]..src/inlining.ml[496,20885+19])
                                                        Texp_ident "Stdlib!.List.iter"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/inlining.ml[496,20885+20]..src/inlining.ml[498,20982+11])
                                                            Texp_function
                                                            Nolabel
                                                            [
                                                              <case>
                                                                pattern (src/inlining.ml[496,20885+25]..src/inlining.ml[496,20885+31])
                                                                  Tpat_var "symbol/1464"
                                                                expression (src/inlining.ml[497,20920+12]..src/inlining.ml[497,20920+61])
                                                                  Texp_apply
                                                                  expression (src/inlining.ml[497,20920+12]..src/inlining.ml[497,20920+26])
                                                                    Texp_ident "Stdlib!.Printf.bprintf"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/inlining.ml[497,20920+27]..src/inlining.ml[497,20920+28])
                                                                        Texp_ident "b/1377"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/inlining.ml[497,20920+29]..src/inlining.ml[497,20920+54])
                                                                        Texp_construct "CamlinternalFormatBasics.Format"
                                                                        [
                                                                          expression (src/inlining.ml[497,20920+29]..src/inlining.ml[497,20920+54]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                            [
                                                                              expression (src/inlining.ml[497,20920+29]..src/inlining.ml[497,20920+54]) ghost
                                                                                Texp_constant Const_string("  which refers to ",(src/inlining.ml[497,20920+29]..src/inlining.ml[497,20920+54]) ghost,None)
                                                                              expression (src/inlining.ml[497,20920+29]..src/inlining.ml[497,20920+54]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.String"
                                                                                [
                                                                                  expression (src/inlining.ml[497,20920+29]..src/inlining.ml[497,20920+54]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                    []
                                                                                  expression (src/inlining.ml[497,20920+29]..src/inlining.ml[497,20920+54]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                    [
                                                                                      expression (src/inlining.ml[497,20920+29]..src/inlining.ml[497,20920+54]) ghost
                                                                                        Texp_constant Const_string(",\n",(src/inlining.ml[497,20920+29]..src/inlining.ml[497,20920+54]) ghost,None)
                                                                                      expression (src/inlining.ml[497,20920+29]..src/inlining.ml[497,20920+54]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                        []
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                          expression (src/inlining.ml[497,20920+29]..src/inlining.ml[497,20920+54]) ghost
                                                                            Texp_constant Const_string("  which refers to %s,\n",(src/inlining.ml[497,20920+29]..src/inlining.ml[497,20920+54]) ghost,None)
                                                                        ]
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/inlining.ml[497,20920+55]..src/inlining.ml[497,20920+61])
                                                                        Texp_ident "symbol/1464"
                                                                  ]
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/inlining.ml[498,20982+12]..src/inlining.ml[498,20982+19])
                                                            Texp_ident "symbols/1463"
                                                      ]
                                                    expression (src/inlining.ml[499,21003+10]..src/inlining.ml[499,21003+62])
                                                      Texp_apply
                                                      expression (src/inlining.ml[499,21003+10]..src/inlining.ml[499,21003+24])
                                                        Texp_ident "Stdlib!.Printf.bprintf"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/inlining.ml[499,21003+25]..src/inlining.ml[499,21003+26])
                                                            Texp_ident "b/1377"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/inlining.ml[499,21003+27]..src/inlining.ml[499,21003+55])
                                                            Texp_construct "CamlinternalFormatBasics.Format"
                                                            [
                                                              expression (src/inlining.ml[499,21003+27]..src/inlining.ml[499,21003+55]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                [
                                                                  expression (src/inlining.ml[499,21003+27]..src/inlining.ml[499,21003+55]) ghost
                                                                    Texp_constant Const_string("  which refers back to ",(src/inlining.ml[499,21003+27]..src/inlining.ml[499,21003+55]) ghost,None)
                                                                  expression (src/inlining.ml[499,21003+27]..src/inlining.ml[499,21003+55]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.String"
                                                                    [
                                                                      expression (src/inlining.ml[499,21003+27]..src/inlining.ml[499,21003+55]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                        []
                                                                      expression (src/inlining.ml[499,21003+27]..src/inlining.ml[499,21003+55]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                        [
                                                                          expression (src/inlining.ml[499,21003+27]..src/inlining.ml[499,21003+55]) ghost
                                                                            Texp_constant Const_char 2e
                                                                          expression (src/inlining.ml[499,21003+27]..src/inlining.ml[499,21003+55]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                            []
                                                                        ]
                                                                    ]
                                                                ]
                                                              expression (src/inlining.ml[499,21003+27]..src/inlining.ml[499,21003+55]) ghost
                                                                Texp_constant Const_string("  which refers back to %s.",(src/inlining.ml[499,21003+27]..src/inlining.ml[499,21003+55]) ghost,None)
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/inlining.ml[499,21003+56]..src/inlining.ml[499,21003+62])
                                                            Texp_ident "symbol/1375"
                                                      ]
                                          ]
                                        expression (src/inlining.ml[501,21077+6]..src/inlining.ml[501,21077+57])
                                          Texp_apply
                                          expression (src/inlining.ml[501,21077+6]..src/inlining.ml[501,21077+17])
                                            Texp_ident "Dune__exe!.Error.error"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/inlining.ml[501,21077+18]..src/inlining.ml[501,21077+32])
                                                Texp_field
                                                expression (src/inlining.ml[501,21077+18]..src/inlining.ml[501,21077+22])
                                                  Texp_ident "rule/1376"
                                                "positions"
                                            <arg>
                                              Nolabel
                                              expression (src/inlining.ml[501,21077+33]..src/inlining.ml[501,21077+37])
                                                Texp_construct "CamlinternalFormatBasics.Format"
                                                [
                                                  expression (src/inlining.ml[501,21077+33]..src/inlining.ml[501,21077+37]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.String"
                                                    [
                                                      expression (src/inlining.ml[501,21077+33]..src/inlining.ml[501,21077+37]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                        []
                                                      expression (src/inlining.ml[501,21077+33]..src/inlining.ml[501,21077+37]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                        []
                                                    ]
                                                  expression (src/inlining.ml[501,21077+33]..src/inlining.ml[501,21077+37]) ghost
                                                    Texp_constant Const_string("%s",(src/inlining.ml[501,21077+33]..src/inlining.ml[501,21077+37]) ghost,None)
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/inlining.ml[501,21077+38]..src/inlining.ml[501,21077+57])
                                                Texp_apply
                                                expression (src/inlining.ml[501,21077+39]..src/inlining.ml[501,21077+54])
                                                  Texp_ident "Stdlib!.Buffer.contents"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/inlining.ml[501,21077+55]..src/inlining.ml[501,21077+56])
                                                      Texp_ident "b/1377"
                                                ]
                                          ]
                            ]
                      ]
                ]
              structure_item (src/inlining.ml[506,21263+2]..src/inlining.ml[509,21356+64])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/inlining.ml[506,21263+6]..src/inlining.ml[506,21263+11])
                      Tpat_var "rules/1465"
                    expression (src/inlining.ml[507,21277+4]..src/inlining.ml[509,21356+64])
                      Texp_apply
                      expression (src/inlining.ml[509,21356+7]..src/inlining.ml[509,21356+64])
                        Texp_apply
                        expression (src/inlining.ml[509,21356+7]..src/inlining.ml[509,21356+21])
                          Texp_ident "Dune__exe!.StringMap.mapi"
                        [
                          <arg>
                            Nolabel
                            expression (src/inlining.ml[509,21356+22]..src/inlining.ml[509,21356+64])
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/inlining.ml[509,21356+27]..src/inlining.ml[509,21356+33])
                                    Tpat_var "symbol/1466"
                                  expression (src/inlining.ml[509,21356+34]..src/inlining.ml[509,21356+63]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/inlining.ml[509,21356+34]..src/inlining.ml[509,21356+39])
                                          Tpat_var "_rule/1467"
                                        expression (src/inlining.ml[509,21356+43]..src/inlining.ml[509,21356+63])
                                          Texp_apply
                                          expression (src/inlining.ml[509,21356+43]..src/inlining.ml[509,21356+56])
                                            Texp_ident "expand_symbol/1372"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/inlining.ml[509,21356+57]..src/inlining.ml[509,21356+63])
                                                Texp_ident "symbol/1466"
                                          ]
                                    ]
                              ]
                        ]
                      [
                        <arg>
                          Nolabel
                          expression (src/inlining.ml[507,21277+4]..src/inlining.ml[508,21295+60])
                            Texp_apply
                            expression (src/inlining.ml[508,21295+7]..src/inlining.ml[508,21295+60])
                              Texp_apply
                              expression (src/inlining.ml[508,21295+7]..src/inlining.ml[508,21295+23])
                                Texp_ident "Dune__exe!.StringMap.filter"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/inlining.ml[508,21295+24]..src/inlining.ml[508,21295+60])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/inlining.ml[508,21295+29]..src/inlining.ml[508,21295+30])
                                          Tpat_any
                                        expression (src/inlining.ml[508,21295+31]..src/inlining.ml[508,21295+59]) ghost
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/inlining.ml[508,21295+31]..src/inlining.ml[508,21295+35])
                                                Tpat_var "rule/1468"
                                              expression (src/inlining.ml[508,21295+39]..src/inlining.ml[508,21295+59])
                                                Texp_apply
                                                expression (src/inlining.ml[508,21295+39]..src/inlining.ml[508,21295+42])
                                                  Texp_ident "Stdlib!.not"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/inlining.ml[508,21295+43]..src/inlining.ml[508,21295+59])
                                                      Texp_field
                                                      expression (src/inlining.ml[508,21295+43]..src/inlining.ml[508,21295+47])
                                                        Texp_ident "rule/1468"
                                                      "inline_flag"
                                                ]
                                          ]
                                    ]
                              ]
                            [
                              <arg>
                                Nolabel
                                expression (src/inlining.ml[507,21277+4]..src/inlining.ml[507,21277+17])
                                  Texp_field
                                  expression (src/inlining.ml[507,21277+4]..src/inlining.ml[507,21277+11])
                                    Texp_ident "G/1191.grammar"
                                  "rules"
                            ]
                      ]
                ]
              structure_item (src/inlining.ml[513,21485+2]..src/inlining.ml[514,21518+33])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/inlining.ml[513,21485+6]..src/inlining.ml[513,21485+10])
                      Tpat_var "keep/1470"
                    expression (src/inlining.ml[513,21485+11]..src/inlining.ml[514,21518+33]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/inlining.ml[513,21485+11]..src/inlining.ml[513,21485+17])
                            Tpat_var "symbol/1472"
                          expression (src/inlining.ml[513,21485+18]..src/inlining.ml[514,21518+33]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/inlining.ml[513,21485+18]..src/inlining.ml[513,21485+23])
                                  Tpat_var "_rule/1473"
                                expression (src/inlining.ml[514,21518+4]..src/inlining.ml[514,21518+33])
                                  extra
                                    Texp_constraint
                                    core_type (src/inlining.ml[513,21485+26]..src/inlining.ml[513,21485+30])
                                      Ttyp_constr "bool/5!"
                                      []
                                  Texp_apply
                                  expression (src/inlining.ml[514,21518+4]..src/inlining.ml[514,21518+7])
                                    Texp_ident "Stdlib!.not"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/inlining.ml[514,21518+8]..src/inlining.ml[514,21518+33])
                                        Texp_apply
                                        expression (src/inlining.ml[514,21518+9]..src/inlining.ml[514,21518+25])
                                          Texp_ident "is_inline_symbol/1192"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/inlining.ml[514,21518+26]..src/inlining.ml[514,21518+32])
                                              Texp_ident "symbol/1472"
                                        ]
                                  ]
                            ]
                      ]
                ]
              structure_item (src/inlining.ml[516,21553+2]..src/inlining.ml[517,21567+39])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/inlining.ml[516,21553+6]..src/inlining.ml[516,21553+11])
                      Tpat_var "types/1474"
                    expression (src/inlining.ml[517,21567+4]..src/inlining.ml[517,21567+39])
                      Texp_apply
                      expression (src/inlining.ml[517,21567+4]..src/inlining.ml[517,21567+20])
                        Texp_ident "Dune__exe!.StringMap.filter"
                      [
                        <arg>
                          Nolabel
                          expression (src/inlining.ml[517,21567+21]..src/inlining.ml[517,21567+25])
                            Texp_ident "keep/1470"
                        <arg>
                          Nolabel
                          expression (src/inlining.ml[517,21567+26]..src/inlining.ml[517,21567+39])
                            Texp_field
                            expression (src/inlining.ml[517,21567+26]..src/inlining.ml[517,21567+33])
                              Texp_ident "G/1191.grammar"
                            "types"
                      ]
                ]
              structure_item (src/inlining.ml[523,21784+2]..src/inlining.ml[529,22059+8])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/inlining.ml[523,21784+6]..src/inlining.ml[523,21784+18])
                      Tpat_var "keep_or_warn/1475"
                    expression (src/inlining.ml[523,21784+19]..src/inlining.ml[529,22059+8]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/inlining.ml[523,21784+20]..src/inlining.ml[523,21784+26])
                            extra
                              Tpat_extra_constraint
                              core_type (src/inlining.ml[523,21784+29]..src/inlining.ml[523,21784+35])
                                Ttyp_constr "string/15!"
                                []
                            Tpat_alias "symbol/1477"
                            pattern (src/inlining.ml[523,21784+20]..src/inlining.ml[523,21784+26])
                              Tpat_any
                          expression (src/inlining.ml[523,21784+37]..src/inlining.ml[529,22059+8]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/inlining.ml[523,21784+37]..src/inlining.ml[523,21784+42])
                                  Tpat_var "_rule/1478"
                                expression (src/inlining.ml[524,21836+4]..src/inlining.ml[529,22059+8])
                                  extra
                                    Texp_constraint
                                    core_type (src/inlining.ml[523,21784+45]..src/inlining.ml[523,21784+49])
                                      Ttyp_constr "bool/5!"
                                      []
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/inlining.ml[524,21836+8]..src/inlining.ml[524,21836+12])
                                        Tpat_var "keep/1479"
                                      expression (src/inlining.ml[524,21836+15]..src/inlining.ml[524,21836+32])
                                        Texp_apply
                                        expression (src/inlining.ml[524,21836+15]..src/inlining.ml[524,21836+19])
                                          Texp_ident "keep/1470"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/inlining.ml[524,21836+20]..src/inlining.ml[524,21836+26])
                                              Texp_ident "symbol/1477"
                                          <arg>
                                            Nolabel
                                            expression (src/inlining.ml[524,21836+27]..src/inlining.ml[524,21836+32])
                                              Texp_ident "_rule/1478"
                                        ]
                                  ]
                                  expression (src/inlining.ml[525,21872+4]..src/inlining.ml[529,22059+8])
                                    Texp_sequence
                                    expression (src/inlining.ml[525,21872+4]..src/inlining.ml[528,21973+84])
                                      Texp_ifthenelse
                                      expression (src/inlining.ml[525,21872+7]..src/inlining.ml[525,21872+15])
                                        Texp_apply
                                        expression (src/inlining.ml[525,21872+7]..src/inlining.ml[525,21872+10])
                                          Texp_ident "Stdlib!.not"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/inlining.ml[525,21872+11]..src/inlining.ml[525,21872+15])
                                              Texp_ident "keep/1479"
                                        ]
                                      expression (src/inlining.ml[526,21893+6]..src/inlining.ml[528,21973+84])
                                        Texp_apply
                                        expression (src/inlining.ml[526,21893+6]..src/inlining.ml[526,21893+27])
                                          Texp_ident "Dune__exe!.Error.grammar_warning"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/inlining.ml[526,21893+28]..src/inlining.ml[526,21893+30])
                                              Texp_construct "[]"
                                              []
                                          <arg>
                                            Nolabel
                                            expression (src/inlining.ml[527,21924+8]..src/inlining.ml[528,21973+77])
                                              Texp_construct "CamlinternalFormatBasics.Format"
                                              [
                                                expression (src/inlining.ml[527,21924+8]..src/inlining.ml[528,21973+77]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                  [
                                                    expression (src/inlining.ml[527,21924+8]..src/inlining.ml[528,21973+77]) ghost
                                                      Texp_constant Const_string("the declaration ",(src/inlining.ml[527,21924+8]..src/inlining.ml[528,21973+77]) ghost,None)
                                                    expression (src/inlining.ml[527,21924+8]..src/inlining.ml[528,21973+77]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                      [
                                                        expression (src/inlining.ml[527,21924+8]..src/inlining.ml[528,21973+77]) ghost
                                                          Texp_constant Const_char 25
                                                        expression (src/inlining.ml[527,21924+8]..src/inlining.ml[528,21973+77]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                                          [
                                                            expression (src/inlining.ml[527,21924+8]..src/inlining.ml[528,21973+77]) ghost
                                                              Texp_constant Const_string("on_error_reduce ",(src/inlining.ml[527,21924+8]..src/inlining.ml[528,21973+77]) ghost,None)
                                                            expression (src/inlining.ml[527,21924+8]..src/inlining.ml[528,21973+77]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.String"
                                                              [
                                                                expression (src/inlining.ml[527,21924+8]..src/inlining.ml[528,21973+77]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                  []
                                                                expression (src/inlining.ml[527,21924+8]..src/inlining.ml[528,21973+77]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                  [
                                                                    expression (src/inlining.ml[527,21924+8]..src/inlining.ml[528,21973+77]) ghost
                                                                      Texp_constant Const_string("\nhas no effect: this symbol is marked ",(src/inlining.ml[527,21924+8]..src/inlining.ml[528,21973+77]) ghost,None)
                                                                    expression (src/inlining.ml[527,21924+8]..src/inlining.ml[528,21973+77]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                      [
                                                                        expression (src/inlining.ml[527,21924+8]..src/inlining.ml[528,21973+77]) ghost
                                                                          Texp_constant Const_char 25
                                                                        expression (src/inlining.ml[527,21924+8]..src/inlining.ml[528,21973+77]) ghost
                                                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                          [
                                                                            expression (src/inlining.ml[527,21924+8]..src/inlining.ml[528,21973+77]) ghost
                                                                              Texp_constant Const_string("inline and is expanded away.",(src/inlining.ml[527,21924+8]..src/inlining.ml[528,21973+77]) ghost,None)
                                                                            expression (src/inlining.ml[527,21924+8]..src/inlining.ml[528,21973+77]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                              []
                                                                          ]
                                                                      ]
                                                                  ]
                                                              ]
                                                          ]
                                                      ]
                                                  ]
                                                expression (src/inlining.ml[527,21924+8]..src/inlining.ml[528,21973+77]) ghost
                                                  Texp_constant Const_string("the declaration %%on_error_reduce %s\nhas no effect: this symbol is marked %%inline and is expanded away.",(src/inlining.ml[527,21924+8]..src/inlining.ml[528,21973+77]) ghost,None)
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/inlining.ml[528,21973+78]..src/inlining.ml[528,21973+84])
                                              Texp_ident "symbol/1477"
                                        ]
                                      None
                                    expression (src/inlining.ml[529,22059+4]..src/inlining.ml[529,22059+8])
                                      Texp_ident "keep/1479"
                            ]
                      ]
                ]
              structure_item (src/inlining.ml[531,22069+2]..src/inlining.ml[532,22093+57])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/inlining.ml[531,22069+6]..src/inlining.ml[531,22069+21])
                      Tpat_var "on_error_reduce/1480"
                    expression (src/inlining.ml[532,22093+4]..src/inlining.ml[532,22093+57])
                      Texp_apply
                      expression (src/inlining.ml[532,22093+4]..src/inlining.ml[532,22093+20])
                        Texp_ident "Dune__exe!.StringMap.filter"
                      [
                        <arg>
                          Nolabel
                          expression (src/inlining.ml[532,22093+21]..src/inlining.ml[532,22093+33])
                            Texp_ident "keep_or_warn/1475"
                        <arg>
                          Nolabel
                          expression (src/inlining.ml[532,22093+34]..src/inlining.ml[532,22093+57])
                            Texp_field
                            expression (src/inlining.ml[532,22093+34]..src/inlining.ml[532,22093+41])
                              Texp_ident "G/1191.grammar"
                            "on_error_reduce"
                      ]
                ]
              structure_item (src/inlining.ml[536,22174+2]..src/inlining.ml[537,22190+50])
                Tstr_value Nonrec
                [
                  <def>
                    pattern (src/inlining.ml[536,22174+6]..src/inlining.ml[536,22174+13])
                      Tpat_var "grammar/1481"
                    expression (src/inlining.ml[537,22190+4]..src/inlining.ml[537,22190+50])
                      Texp_record
                        fields =
                          [
                            <kept>                            <kept>                            <kept>                            <kept>                            "types"
                              expression (src/inlining.ml[537,22190+26]..src/inlining.ml[537,22190+31])
                                Texp_ident "types/1474"
                            <kept>                            "on_error_reduce"
                              expression (src/inlining.ml[537,22190+33]..src/inlining.ml[537,22190+48])
                                Texp_ident "on_error_reduce/1480"
                            <kept>                            "rules"
                              expression (src/inlining.ml[537,22190+19]..src/inlining.ml[537,22190+24])
                                Texp_ident "rules/1465"
                          ]
                        representation =
                          Record_regular
                        extended_expression =
                          Some
                            expression (src/inlining.ml[537,22190+6]..src/inlining.ml[537,22190+13])
                              Texp_ident "G/1191.grammar"
                ]
            ]
  structure_item (src/inlining.ml[545,22380+0]..src/inlining.ml[547,22462+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/inlining.ml[545,22380+4]..src/inlining.ml[545,22380+10])
          Tpat_var "inline/1483"
        expression (src/inlining.ml[545,22380+11]..src/inlining.ml[547,22462+11]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/inlining.ml[545,22380+11]..src/inlining.ml[545,22380+18])
                Tpat_var "grammar/1485"
              expression (src/inlining.ml[546,22401+2]..src/inlining.ml[547,22462+11])
                Texp_letmodule "I/1498"
                module_expr (src/inlining.ml[546,22401+17]..src/inlining.ml[546,22401+57])
                  Tmod_apply
                  module_expr (src/inlining.ml[546,22401+17]..src/inlining.ml[546,22401+23])
                    Tmod_ident "Inline/1482"
                  module_expr (src/inlining.ml[546,22401+24]..src/inlining.ml[546,22401+56])
                    Tmod_structure
                    [
                      structure_item (src/inlining.ml[546,22401+31]..src/inlining.ml[546,22401+52])
                        Tstr_value Nonrec
                        [
                          <def>
                            pattern (src/inlining.ml[546,22401+35]..src/inlining.ml[546,22401+42])
                              Tpat_var "grammar/1486"
                            expression (src/inlining.ml[546,22401+45]..src/inlining.ml[546,22401+52])
                              Texp_ident "grammar/1485"
                        ]
                    ]
                expression (src/inlining.ml[547,22462+2]..src/inlining.ml[547,22462+11])
                  Texp_ident "I/1498.grammar"
          ]
    ]
]

{<Dune__exe__Inlining>
 "inline"[value] -> <Dune__exe__Inlining.150>;
 }

(seq
  (let (position/396 = (field_imm 1 (global Dune__exe__Positions!)))
    (setfield_ptr(root-init) 1 (global Dune__exe__Inlining!) position/396))
  (let (drop/469 = (field_imm 1 (field_imm 0 (global MenhirLib!))))
    (setfield_ptr(root-init) 2 (global Dune__exe__Inlining!) drop/469))
  (let (take/495 = (field_imm 0 (field_imm 0 (global MenhirLib!))))
    (setfield_ptr(root-init) 3 (global Dune__exe__Inlining!) take/495))
  (letrec
    (search/496
       (function p/497 i/498[int] xs/499
         (if (isint xs/499) 0
           (let
             (xs/501 =a (field_imm 1 xs/499) x/500 =a (field_imm 0 xs/499))
             (if (apply p/497 x/500)
               (makeblock 0 (makeblock 0 (int,*) i/498 x/500))
               (apply search/496 p/497 (+ i/498 1) xs/501))))))
    (setfield_ptr(root-init) 4 (global Dune__exe__Inlining!) search/496))
  (let
    (search_at/502 =
       (function p/504 i/505[int] xs/506
         (apply (field_imm 4 (global Dune__exe__Inlining!)) p/504 i/505
           (apply (field_imm 2 (global Dune__exe__Inlining!)) i/505 xs/506))))
    (setfield_ptr(root-init) 5 (global Dune__exe__Inlining!) search_at/502))
  (let
    (find/507 =
       (function grammar/509 symbol/510
         (try
           (apply (field_imm 15 (global Dune__exe__StringMap!)) symbol/510
             (field_imm 8 grammar/509))
          with exn/3597
           (catch
             (if (== exn/3597 (field_imm 7 (global Stdlib!)))
               (raise
                 (makeblock 0 (global Assert_failure/28!)
                   [0: "src/inlining.ml" 59 4]))
               (exit 1))
            with (1) (reraise exn/3597)))))
    (setfield_ptr(root-init) 6 (global Dune__exe__Inlining!) find/507))
  (let
    (check_no_producer_attributes/607 =
       (function producer/609 : int
         (let
           (*match*/3598 =
              (apply (field_imm 3 (global Dune__exe__BasicSyntax!))
                producer/609))
           (if (isint *match*/3598) 0
             (let
               (_attributes/667 =a (field_imm 1 *match*/3598)
                *match*/3599 =a (field_imm 0 *match*/3598)
                _payload/666 =a (field_imm 1 *match*/3599)
                id/665 =a (field_imm 0 *match*/3599))
               (apply (field_imm 5 (global Dune__exe__Error!))
                 (makeblock 0
                   (apply (field_imm 1 (global Dune__exe__Inlining!)) id/665)
                   0)
                 [0:
                  [11:
                   "the nonterminal symbol "
                   [2:
                    0
                    [11:
                     " is declared "
                     [12:
                      '%'
                      [11:
                       "inline.\nA use of it cannot carry an attribute." 0]]]]]
                  "the nonterminal symbol %s is declared %%inline.\nA use of it cannot carry an attribute."]
                 (apply (field_imm 2 (global Dune__exe__BasicSyntax!))
                   producer/609)))))))
    (setfield_ptr(root-init) 7 (global Dune__exe__Inlining!)
      check_no_producer_attributes/607))
  (let
    (check_prec_inline/743 =
       (function caller/745 producer/746 nsuffix/747[int] callee/748 : int
         (apply (field_imm 2 (global Dune__exe__Option!))
           (function callee_prec/760 : int
             (seq
               (if (> nsuffix/747 0)
                 (let
                   (symbol/761 =
                      (apply (field_imm 2 (global Dune__exe__BasicSyntax!))
                        producer/746))
                   (apply (field_imm 5 (global Dune__exe__Error!))
                     (makeblock 0
                       (apply (field_imm 1 (global Dune__exe__Inlining!))
                         callee_prec/760)
                       (makeblock 0 (field_imm 0 caller/745) 0))
                     [0:
                      [11:
                       "this production carries a "
                       [12:
                        '%'
                        [11:
                         "prec annotation,\nand the nonterminal symbol "
                         [2:
                          0
                          [11:
                           " is marked "
                           [12:
                            '%'
                            [11:
                             "inline.\nFor this reason, "
                             [2:
                              0 [11: " can be used only in tail position." 0]]]]]]]]]
                      "this production carries a %%prec annotation,\nand the nonterminal symbol %s is marked %%inline.\nFor this reason, %s can be used only in tail position."]
                     symbol/761 symbol/761))
                 0)
               (apply (field_imm 2 (global Dune__exe__Option!))
                 (function caller_prec/762 : int
                   (let
                     (symbol/763 =
                        (apply (field_imm 2 (global Dune__exe__BasicSyntax!))
                          producer/746))
                     (apply (field_imm 5 (global Dune__exe__Error!))
                       (makeblock 0
                         (apply (field_imm 1 (global Dune__exe__Inlining!))
                           callee_prec/760)
                         (makeblock 0
                           (apply (field_imm 1 (global Dune__exe__Inlining!))
                             caller_prec/762)
                           0))
                       [0:
                        [11:
                         "this production carries a "
                         [12:
                          '%'
                          [11:
                           "prec annotation,\nand the nonterminal symbol "
                           [2:
                            0
                            [11:
                             " is marked "
                             [12:
                              '%'
                              [11:
                               "inline.\nFor this reason, "
                               [2:
                                0
                                [11:
                                 " cannot be used in a production\nwhich itself carries a "
                                 [12: '%' [11: "prec annotation." 0]]]]]]]]]]]
                        "this production carries a %%prec annotation,\nand the nonterminal symbol %s is marked %%inline.\nFor this reason, %s cannot be used in a production\nwhich itself carries a %%prec annotation."]
                       symbol/763 symbol/763)))
                 (field_imm 3 caller/745))))
           (field_imm 3 callee/748))))
    (setfield_ptr(root-init) 8 (global Dune__exe__Inlining!)
      check_prec_inline/743))
  (let
    (propagate_prec_annotation/764 =
       (function caller/766 callee/767
         (let (annotation/768 = (field_imm 3 callee/767))
           (if (isint annotation/768) (field_imm 3 caller/766)
             (let (*match*/3600 =a (field_imm 0 annotation/768))
               (seq
                 (if (== (field_imm 3 caller/766) 0) 0
                   (raise
                     (makeblock 0 (global Assert_failure/28!)
                       [0: "src/inlining.ml" 120 6])))
                 annotation/768))))))
    (setfield_ptr(root-init) 9 (global Dune__exe__Inlining!)
      propagate_prec_annotation/764))
  (let
    (new_candidate/769 =
       (function x/771
         (let
           (*match*/3604 =
              (apply (field_imm 1 (global Dune__exe__ChopInlined!))
                (apply (field_imm 2 (global Stdlib__Lexing!)) 0 x/771))
            n/773 =a (field_imm 1 *match*/3604)
            x/772 =a (field_imm 0 *match*/3604))
           (apply (field_imm 3 (global Stdlib__Printf!))
             [0: [2: 0 [11: "_inlined" [4: 0 0 0 0]]] "%s_inlined%d"] x/772
             (+ n/773 1)))))
    (setfield_ptr(root-init) 10 (global Dune__exe__Inlining!)
      new_candidate/769))
  (letrec
    (fresh/838
       (function names/839 x/840
         (if
           (apply (field_imm 29 (global Dune__exe__StringSet!)) x/840
             names/839)
           (apply fresh/838 names/839
             (apply (field_imm 10 (global Dune__exe__Inlining!)) x/840))
           x/840)))
    (setfield_ptr(root-init) 11 (global Dune__exe__Inlining!) fresh/838))
  (let
    (rename/933 =
       (function used/935 producers/936
         (let
           (*match*/3610 =
              (apply (field_imm 25 (global Stdlib__List!))
                (function param/1051 producer/1027
                  (let
                    (producers/1026 =a (field_imm 2 param/1051)
                     used/1025 =a (field_imm 1 param/1051)
                     phi/1024 =a (field_imm 0 param/1051)
                     id/1028 =
                       (apply (field_imm 1 (global Dune__exe__BasicSyntax!))
                         producer/1027)
                     x/1029 =
                       (apply (field_imm 0 (global Dune__exe__Positions!))
                         id/1028))
                    (if
                      (apply (field_imm 29 (global Dune__exe__StringSet!))
                        x/1029 used/1025)
                      (let
                        (x'/1030 =
                           (apply
                             (field_imm 11 (global Dune__exe__Inlining!))
                             used/1025 x/1029)
                         id'/1031 =
                           (apply
                             (field_imm 7 (global Dune__exe__Positions!))
                             (function _x/1032 x'/1030) id/1028))
                        (makeblock 0
                          (apply (field_imm 14 (global Dune__exe__Action!))
                            x/1029 x'/1030 phi/1024)
                          (apply (field_imm 1 (global Dune__exe__StringSet!))
                            x'/1030 used/1025)
                          (makeblock 0
                            (let (init/3605 = producer/1027)
                              (makeblock 0 id'/1031 (field_imm 1 init/3605)
                                (field_imm 2 init/3605)))
                            producers/1026)))
                      (makeblock 0 phi/1024
                        (apply (field_imm 1 (global Dune__exe__StringSet!))
                          x/1029 used/1025)
                        (makeblock 0 producer/1027 producers/1026)))))
                (makeblock 0 (field_imm 13 (global Dune__exe__Action!))
                  used/935 0)
                producers/936)
            producers/957 =a (field_imm 2 *match*/3610)
            _used/956 =a (field_imm 1 *match*/3610)
            phi/955 =a (field_imm 0 *match*/3610))
           (makeblock 0 phi/955
             (apply (field_imm 9 (global Stdlib__List!)) producers/957)))))
    (setfield_ptr(root-init) 12 (global Dune__exe__Inlining!) rename/933))
  (let
    (define_positions/1052 =
       (function name/1054 nprefix/1055[int] ncallee/1056[int]
         (let
           (startp/1057 =
              (if (> ncallee/1056 0)
                (makeblock 0 (*,int)
                  (makeblock 0 (array.get[addr] name/1054 nprefix/1055)) 1)
                (if (> nprefix/1055 0)
                  (makeblock 0 (*,int)
                    (makeblock 0
                      (array.get[addr] name/1054 (- nprefix/1055 1)))
                    2)
                  [0: 0 2]))
            endp/1106 =
              (if (> ncallee/1056 0)
                (makeblock 0 (*,int)
                  (makeblock 0
                    (array.get[addr] name/1054
                      (- (+ nprefix/1055 ncallee/1056) 1)))
                  2)
                startp/1057)
            beforeendp/1107 =
              (if (> nprefix/1055 0)
                (makeblock 0 (*,int)
                  (makeblock 0
                    (array.get[addr] name/1054 (- nprefix/1055 1)))
                  2)
                [0: 0 2]))
           (makeblock 0 startp/1057 endp/1106 beforeendp/1107))))
    (setfield_ptr(root-init) 13 (global Dune__exe__Inlining!)
      define_positions/1052))
  (let
    (rename_sw_outer/1108 =
       (function param/1116 sw/1113
         (let
           (*match*/3611 =a (field_imm 0 sw/1113)
            endpx/1112 =a (field_imm 2 param/1116)
            startpx/1111 =a (field_imm 1 param/1116)
            x/1110 =a (field_imm 0 param/1116))
           (if (isint *match*/3611)
             (if *match*/3611
               (let (*match*/3613 =a (field_imm 1 sw/1113))
                 (raise
                   (makeblock 0 (global Assert_failure/28!)
                     [0: "src/inlining.ml" 277 6])))
               (let (*match*/3612 =a (field_imm 1 sw/1113)) 0))
             (let (x'/1114 =a (field_imm 0 *match*/3611))
               (if (caml_string_equal x'/1114 x/1110)
                 (let (where/1115 =a (field_imm 1 sw/1113))
                   (switch* where/1115
                    case int 0:
                     (raise
                       (makeblock 0 (global Assert_failure/28!)
                         [0: "src/inlining.ml" 271 30]))
                    case int 1: (makeblock 0 startpx/1111)
                    case int 2: (makeblock 0 endpx/1112)))
                 0))))))
    (setfield_ptr(root-init) 14 (global Dune__exe__Inlining!)
      rename_sw_outer/1108))
  (let
    (rename_sw_inner/1117 =
       (function beforeendp/1119 sw/1120
         (let (*match*/3614 =a (field_imm 0 sw/1120))
           (if (isint *match*/3614)
             (if *match*/3614
               (let (*match*/3617 =a (field_imm 1 sw/1120))
                 (raise
                   (makeblock 0 (global Assert_failure/28!)
                     [0: "src/inlining.ml" 294 6])))
               (let (where/1121 =a (field_imm 1 sw/1120))
                 (seq
                   (if (== where/1121 2) 0
                     (raise
                       (makeblock 0 (global Assert_failure/28!)
                         [0: "src/inlining.ml" 287 6])))
                   (makeblock 0 beforeendp/1119))))
             (let
               (*match*/3616 =a (field_imm 1 sw/1120)
                *match*/3615 =a (field_imm 0 *match*/3614))
               0)))))
    (setfield_ptr(root-init) 15 (global Dune__exe__Inlining!)
      rename_sw_inner/1117))
  (let
    (inline_branch/1123 =
       (function caller/1125 param/1184 callee/1128
         (let
           (producer/1127 =a (field_imm 1 param/1184)
            i/1126 =a (field_imm 0 param/1184)
            nprefix/1129 =[int] i/1126
            nsuffix/1130 =[int]
              (-
                (apply (field_imm 0 (global Stdlib__List!))
                  (field_imm 1 caller/1125))
                (+ i/1126 1))
            prefix/1131 =
              (apply (field_imm 3 (global Dune__exe__Inlining!)) nprefix/1129
                (field_imm 1 caller/1125))
            suffix/1132 =
              (apply (field_imm 2 (global Dune__exe__Inlining!))
                (+ nprefix/1129 1) (field_imm 1 caller/1125)))
           (seq
             (apply (field_imm 8 (global Dune__exe__Inlining!)) caller/1125
               producer/1127 nsuffix/1130 callee/1128)
             (let
               (branch_prec_annotation/1133 =
                  (apply (field_imm 9 (global Dune__exe__Inlining!))
                    caller/1125 callee/1128)
                used/1134 =
                  (apply (field_imm 4 (global Dune__exe__StringSet!))
                    (apply (field_imm 13 (global Dune__exe__BasicSyntax!))
                      prefix/1131)
                    (apply (field_imm 13 (global Dune__exe__BasicSyntax!))
                      suffix/1132))
                *match*/3637 =
                  (apply (field_imm 12 (global Dune__exe__Inlining!))
                    used/1134 (field_imm 1 callee/1128))
                inlined_producers/1136 =a (field_imm 1 *match*/3637)
                phi/1135 =a (field_imm 0 *match*/3637)
                producers/1137 =
                  (apply (field_imm 36 (global Stdlib!)) prefix/1131
                    (apply (field_imm 36 (global Stdlib!))
                      inlined_producers/1136 suffix/1132)))
               (seq
                 (apply (field_imm 13 (global Dune__exe__BasicSyntax!))
                   producers/1137)
                 (let
                   (*match*/3633 =
                      (let
                        (name/1141 =
                           (apply (field_imm 12 (global Stdlib__Array!))
                             (field_imm 0 (global Dune__exe__BasicSyntax!))
                             (apply (field_imm 9 (global Stdlib__Array!))
                               producers/1137))
                         ncallee/1142 =[int]
                           (apply (field_imm 0 (global Stdlib__List!))
                             (field_imm 1 callee/1128)))
                        (apply (field_imm 13 (global Dune__exe__Inlining!))
                          name/1141 nprefix/1129 ncallee/1142))
                    beforeendp/1140 =a (field_imm 2 *match*/3633)
                    endp/1139 =a (field_imm 1 *match*/3633)
                    startp/1138 =a (field_imm 0 *match*/3633)
                    x/1143 =
                      (apply (field_imm 0 (global Dune__exe__BasicSyntax!))
                        producer/1127))
                   (catch
                     (let
                       (callee_action/3628 =
                          (apply (field_imm 15 (global Dune__exe__Action!))
                            (apply
                              (field_imm 15 (global Dune__exe__Inlining!))
                              beforeendp/1140)
                            phi/1135 (field_imm 2 callee/1128))
                        caller_action/3627 =
                          (apply (field_imm 15 (global Dune__exe__Action!))
                            (apply
                              (field_imm 14 (global Dune__exe__Inlining!))
                              (makeblock 0 x/1143 startp/1138 endp/1139))
                            (field_imm 13 (global Dune__exe__Action!))
                            (field_imm 2 caller/1125)))
                       (exit 11 caller_action/3627 callee_action/3628))
                    with (11 caller_action/1144 callee_action/1145)
                     (let
                       (action/1146 =
                          (apply (field_imm 2 (global Dune__exe__Action!))
                            x/1143 callee_action/1145 caller_action/1144)
                        branch_production_level/1148 =a
                          (field_imm 4 caller/1125)
                        *match*/3626 =a (field_imm 3 caller/1125)
                        *match*/3625 =a (field_imm 2 caller/1125)
                        *match*/3624 =a (field_imm 1 caller/1125)
                        branch_position/1147 =a (field_imm 0 caller/1125))
                       (makeblock 0 branch_position/1147 producers/1137
                         action/1146 branch_prec_annotation/1133
                         branch_production_level/1148))))))))))
    (setfield_ptr(root-init) 16 (global Dune__exe__Inlining!)
      inline_branch/1123))
  (let
    (inline_branches/1185 =
       (function caller/1187 site/1188 callees/1189
         (apply (field_imm 19 (global Stdlib__List!))
           (apply (field_imm 16 (global Dune__exe__Inlining!)) caller/1187
             site/1188)
           callees/1189)))
    (setfield_ptr(root-init) 17 (global Dune__exe__Inlining!)
      inline_branches/1185))
  (let
    (Inline/1482 =
       (function G/3647 is_a_functor
         (let
           (G/1191 =a G/3647
            is_inline_symbol/1192 =
              (apply (field_imm 11 (global Dune__exe__BasicSyntax!))
                (field_imm 0 G/1191))
            is_inline_producer/1193 =
              (apply (field_imm 12 (global Dune__exe__BasicSyntax!))
                (field_imm 0 G/1191))
            find/1194 =
              (apply (field_imm 6 (global Dune__exe__Inlining!))
                (field_imm 0 G/1191))
            *match*/3646 =
              (if (field_imm 32 (global Dune__exe__Settings!))
                (apply (field_imm 21 (global Dune__exe__StringMap!))
                  (function param/1256 rule/1255 : int
                    (if (field_int 2 rule/1255)
                      (apply (field_imm 5 (global Dune__exe__Error!))
                        (field_imm 1 rule/1255)
                        [0:
                         [12:
                          '%'
                          [11:
                           "inline is not supported by the Coq back-end." 0]]
                         "%%inline is not supported by the Coq back-end."])
                      0))
                  (field_imm 8 (field_imm 0 G/1191)))
                0))
           (letrec
             (expand_branches/1257
                (function expand_symbol/1258 i/1259[int] branches/1260
                  (apply (field_imm 1 (global Dune__exe__ListMonad!))
                    branches/1260
                    (function caller/1261
                      (let
                        (*match*/3638 =
                           (apply (field_imm 5 (global Dune__exe__Inlining!))
                             is_inline_producer/1193 i/1259
                             (field_imm 1 caller/1261)))
                        (if (isint *match*/3638)
                          (apply (field_imm 2 (global Dune__exe__ListMonad!))
                            caller/1261)
                          (let
                            (site/1264 =a (field_imm 0 *match*/3638)
                             producer/1263 =a (field_imm 1 site/1264)
                             i/1262 =a (field_imm 0 site/1264))
                            (seq
                              (apply
                                (field_imm 7 (global Dune__exe__Inlining!))
                                producer/1263)
                              (let
                                (symbol/1265 =
                                   (apply
                                     (field_imm 2
                                       (global Dune__exe__BasicSyntax!))
                                     producer/1263))
                                (apply expand_branches/1257
                                  expand_symbol/1258 i/1262
                                  (apply
                                    (field_imm 17
                                      (global Dune__exe__Inlining!))
                                    caller/1261 site/1264
                                    (apply
                                      (field_imm 4
                                        (global Dune__exe__BasicSyntax!))
                                      (apply expand_symbol/1258 symbol/1265)))))))))))))
             (let
               (expand_symbol/1266 =
                  (function expand_symbol/1268 symbol/1269
                    (apply (field_imm 5 (global Dune__exe__BasicSyntax!))
                      (apply expand_branches/1257 expand_symbol/1268 0)
                      (apply find/1194 symbol/1269)))
                expand_symbol/1270 =
                  (apply
                    (field_imm 4
                      (field_imm 6 (global Vendored_fix__Memoize!)))
                    expand_symbol/1266)
                expand_symbol/1372 =
                  (function symbol/1373
                    (try (apply expand_symbol/1270 symbol/1373) with exn/3639
                      (catch
                        (let (tag/3641 =a (field_imm 0 exn/3639))
                          (if
                            (== tag/3641
                              (field_imm 3
                                (field_imm 6 (global Vendored_fix__Memoize!))))
                            (let
                              (symbol/1375 =a (field_imm 2 exn/3639)
                               symbols/1374 =a (field_imm 1 exn/3639)
                               rule/1376 = (apply find/1194 symbol/1375)
                               b/1377 =
                                 (apply
                                   (field_imm 0 (global Stdlib__Buffer!))
                                   128))
                              (seq
                                (apply (field_imm 4 (global Stdlib__Printf!))
                                  b/1377
                                  [0:
                                   [11:
                                    "there is a cycle of "
                                    [12:
                                     '%'
                                     [11: "inline nonterminal symbols:\n" 0]]]
                                   "there is a cycle of %%inline nonterminal symbols:\n"])
                                (if (isint symbols/1374)
                                  (raise
                                    (makeblock 0 (global Assert_failure/28!)
                                      [0: "src/inlining.ml" 489 10]))
                                  (let
                                    (*match*/3640 =a
                                       (field_imm 1 symbols/1374)
                                     head/1460 =a (field_imm 0 symbols/1374))
                                    (if (isint *match*/3640)
                                      (seq
                                        (if
                                          (caml_string_equal head/1460
                                            symbol/1375)
                                          0
                                          (raise
                                            (makeblock 0
                                              (global Assert_failure/28!)
                                              [0: "src/inlining.ml" 491 10])))
                                        (apply
                                          (field_imm 4
                                            (global Stdlib__Printf!))
                                          b/1377
                                          [0:
                                           [11:
                                            "  "
                                            [2:
                                             0 [11: " refers to itself." 0]]]
                                           "  %s refers to itself."]
                                          symbol/1375))
                                      (let
                                        (head/1461 =a head/1460
                                         symbols/1463 =a
                                           (field_imm 1 *match*/3640)
                                         next/1462 =a
                                           (field_imm 0 *match*/3640))
                                        (seq
                                          (if
                                            (caml_string_equal head/1461
                                              symbol/1375)
                                            0
                                            (raise
                                              (makeblock 0
                                                (global Assert_failure/28!)
                                                [0: "src/inlining.ml" 494 10])))
                                          (apply
                                            (field_imm 4
                                              (global Stdlib__Printf!))
                                            b/1377
                                            [0:
                                             [11:
                                              "  "
                                              [2:
                                               0
                                               [11:
                                                " refers to "
                                                [2: 0 [11: ",\n" 0]]]]]
                                             "  %s refers to %s,\n"]
                                            head/1461 next/1462)
                                          (apply
                                            (field_imm 17
                                              (global Stdlib__List!))
                                            (function symbol/1464 : int
                                              (apply
                                                (field_imm 4
                                                  (global Stdlib__Printf!))
                                                b/1377
                                                [0:
                                                 [11:
                                                  "  which refers to "
                                                  [2: 0 [11: ",\n" 0]]]
                                                 "  which refers to %s,\n"]
                                                symbol/1464))
                                            symbols/1463)
                                          (apply
                                            (field_imm 4
                                              (global Stdlib__Printf!))
                                            b/1377
                                            [0:
                                             [11:
                                              "  which refers back to "
                                              [2: 0 [12: '.' 0]]]
                                             "  which refers back to %s."]
                                            symbol/1375))))))
                                (apply
                                  (field_imm 5 (global Dune__exe__Error!))
                                  (field_imm 1 rule/1376) [0: [2: 0 0] "%s"]
                                  (apply
                                    (field_imm 1 (global Stdlib__Buffer!))
                                    b/1377))))
                            (exit 20)))
                       with (20) (reraise exn/3639))))
                rules/1465 =
                  (apply (field_imm 24 (global Dune__exe__StringMap!))
                    (function symbol/1466 _rule/1467
                      (apply expand_symbol/1372 symbol/1466))
                    (apply (field_imm 42 (global Dune__exe__StringMap!))
                      (function param/1469 rule/1468 : int
                        (not (field_int 2 rule/1468)))
                      (field_imm 8 (field_imm 0 G/1191))))
                keep/1470 =
                  (function symbol/1472 _rule/1473 : int
                    (not (apply is_inline_symbol/1192 symbol/1472)))
                types/1474 =
                  (apply (field_imm 42 (global Dune__exe__StringMap!))
                    keep/1470 (field_imm 4 (field_imm 0 G/1191)))
                keep_or_warn/1475 =
                  (function symbol/1477 _rule/1478 : int
                    (let
                      (keep/1479 =[int]
                         (apply keep/1470 symbol/1477 _rule/1478))
                      (seq
                        (if (not keep/1479)
                          (apply (field_imm 13 (global Dune__exe__Error!)) 0
                            [0:
                             [11:
                              "the declaration "
                              [12:
                               '%'
                               [11:
                                "on_error_reduce "
                                [2:
                                 0
                                 [11:
                                  "\nhas no effect: this symbol is marked "
                                  [12:
                                   '%' [11: "inline and is expanded away." 0]]]]]]]
                             "the declaration %%on_error_reduce %s\nhas no effect: this symbol is marked %%inline and is expanded away."]
                            symbol/1477)
                          0)
                        keep/1479)))
                on_error_reduce/1480 =
                  (apply (field_imm 42 (global Dune__exe__StringMap!))
                    keep_or_warn/1475 (field_imm 6 (field_imm 0 G/1191)))
                grammar/1481 =
                  (let (init/3642 = (field_imm 0 G/1191))
                    (makeblock 0 (field_imm 0 init/3642)
                      (field_imm 1 init/3642) (field_imm 2 init/3642)
                      (field_imm 3 init/3642) types/1474
                      (field_imm 5 init/3642) on_error_reduce/1480
                      (field_imm 7 init/3642) rules/1465)))
               (makeblock 0 is_inline_symbol/1192 is_inline_producer/1193
                 find/1194 expand_branches/1257 expand_symbol/1372 rules/1465
                 keep/1470 types/1474 keep_or_warn/1475 on_error_reduce/1480
                 grammar/1481))))))
    (seq
      (setfield_ptr(root-init) 18 (global Dune__exe__Inlining!) Inline/1482)
      (let
        (inline/1483 =
           (function grammar/1485
             (let
               (I/1498 =
                  (apply (field_imm 18 (global Dune__exe__Inlining!))
                    (let (grammar/1486 = grammar/1485)
                      (makeblock 0 grammar/1486))))
               (field_imm 10 I/1498))))
        (setfield_ptr(root-init) 0 (global Dune__exe__Inlining!) inline/1483))
      0)))
(seq
  (let (position/396 = (field_imm 1 (global Dune__exe__Positions!)))
    (setfield_ptr(root-init) 1 (global Dune__exe__Inlining!) position/396))
  (let (drop/469 = (field_imm 1 (field_imm 0 (global MenhirLib!))))
    (setfield_ptr(root-init) 2 (global Dune__exe__Inlining!) drop/469))
  (let (take/495 = (field_imm 0 (field_imm 0 (global MenhirLib!))))
    (setfield_ptr(root-init) 3 (global Dune__exe__Inlining!) take/495))
  (letrec
    (search/496
       (function p/497 i/498[int] xs/499
         (if (isint xs/499) 0
           (let (x/500 =a (field_imm 0 xs/499))
             (if (apply p/497 x/500)
               (makeblock 0 (makeblock 0 (int,*) i/498 x/500))
               (apply search/496 p/497 (+ i/498 1) (field_imm 1 xs/499)))))))
    (setfield_ptr(root-init) 4 (global Dune__exe__Inlining!) search/496))
  (let
    (search_at/502 =
       (function p/504 i/505[int] xs/506
         (apply (field_imm 4 (global Dune__exe__Inlining!)) p/504 i/505
           (apply (field_imm 2 (global Dune__exe__Inlining!)) i/505 xs/506))))
    (setfield_ptr(root-init) 5 (global Dune__exe__Inlining!) search_at/502))
  (let
    (find/507 =
       (function grammar/509 symbol/510
         (try
           (apply (field_imm 15 (global Dune__exe__StringMap!)) symbol/510
             (field_imm 8 grammar/509))
          with exn/3597
           (if (== exn/3597 (field_imm 7 (global Stdlib!)))
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "src/inlining.ml" 59 4]))
             (reraise exn/3597)))))
    (setfield_ptr(root-init) 6 (global Dune__exe__Inlining!) find/507))
  (let
    (check_no_producer_attributes/607 =
       (function producer/609 : int
         (let
           (*match*/3598 =
              (apply (field_imm 3 (global Dune__exe__BasicSyntax!))
                producer/609))
           (if (isint *match*/3598) 0
             (apply (field_imm 5 (global Dune__exe__Error!))
               (makeblock 0
                 (apply (field_imm 1 (global Dune__exe__Inlining!))
                   (field_imm 0 (field_imm 0 *match*/3598)))
                 0)
               [0:
                [11:
                 "the nonterminal symbol "
                 [2:
                  0
                  [11:
                   " is declared "
                   [12:
                    '%'
                    [11: "inline.\nA use of it cannot carry an attribute." 0]]]]]
                "the nonterminal symbol %s is declared %%inline.\nA use of it cannot carry an attribute."]
               (apply (field_imm 2 (global Dune__exe__BasicSyntax!))
                 producer/609))))))
    (setfield_ptr(root-init) 7 (global Dune__exe__Inlining!)
      check_no_producer_attributes/607))
  (let
    (check_prec_inline/743 =
       (function caller/745 producer/746 nsuffix/747[int] callee/748 : int
         (apply (field_imm 2 (global Dune__exe__Option!))
           (function callee_prec/760 : int
             (seq
               (if (> nsuffix/747 0)
                 (let
                   (symbol/761 =
                      (apply (field_imm 2 (global Dune__exe__BasicSyntax!))
                        producer/746))
                   (apply (field_imm 5 (global Dune__exe__Error!))
                     (makeblock 0
                       (apply (field_imm 1 (global Dune__exe__Inlining!))
                         callee_prec/760)
                       (makeblock 0 (field_imm 0 caller/745) 0))
                     [0:
                      [11:
                       "this production carries a "
                       [12:
                        '%'
                        [11:
                         "prec annotation,\nand the nonterminal symbol "
                         [2:
                          0
                          [11:
                           " is marked "
                           [12:
                            '%'
                            [11:
                             "inline.\nFor this reason, "
                             [2:
                              0 [11: " can be used only in tail position." 0]]]]]]]]]
                      "this production carries a %%prec annotation,\nand the nonterminal symbol %s is marked %%inline.\nFor this reason, %s can be used only in tail position."]
                     symbol/761 symbol/761))
                 0)
               (apply (field_imm 2 (global Dune__exe__Option!))
                 (function caller_prec/762 : int
                   (let
                     (symbol/763 =
                        (apply (field_imm 2 (global Dune__exe__BasicSyntax!))
                          producer/746))
                     (apply (field_imm 5 (global Dune__exe__Error!))
                       (makeblock 0
                         (apply (field_imm 1 (global Dune__exe__Inlining!))
                           callee_prec/760)
                         (makeblock 0
                           (apply (field_imm 1 (global Dune__exe__Inlining!))
                             caller_prec/762)
                           0))
                       [0:
                        [11:
                         "this production carries a "
                         [12:
                          '%'
                          [11:
                           "prec annotation,\nand the nonterminal symbol "
                           [2:
                            0
                            [11:
                             " is marked "
                             [12:
                              '%'
                              [11:
                               "inline.\nFor this reason, "
                               [2:
                                0
                                [11:
                                 " cannot be used in a production\nwhich itself carries a "
                                 [12: '%' [11: "prec annotation." 0]]]]]]]]]]]
                        "this production carries a %%prec annotation,\nand the nonterminal symbol %s is marked %%inline.\nFor this reason, %s cannot be used in a production\nwhich itself carries a %%prec annotation."]
                       symbol/763 symbol/763)))
                 (field_imm 3 caller/745))))
           (field_imm 3 callee/748))))
    (setfield_ptr(root-init) 8 (global Dune__exe__Inlining!)
      check_prec_inline/743))
  (let
    (propagate_prec_annotation/764 =
       (function caller/766 callee/767
         (let (annotation/768 = (field_imm 3 callee/767))
           (if (isint annotation/768) (field_imm 3 caller/766)
             (seq
               (if (== (field_imm 3 caller/766) 0) 0
                 (raise
                   (makeblock 0 (global Assert_failure/28!)
                     [0: "src/inlining.ml" 120 6])))
               annotation/768)))))
    (setfield_ptr(root-init) 9 (global Dune__exe__Inlining!)
      propagate_prec_annotation/764))
  (let
    (new_candidate/769 =
       (function x/771
         (let
           (*match*/3604 =
              (apply (field_imm 1 (global Dune__exe__ChopInlined!))
                (apply (field_imm 2 (global Stdlib__Lexing!)) 0 x/771)))
           (apply (field_imm 3 (global Stdlib__Printf!))
             [0: [2: 0 [11: "_inlined" [4: 0 0 0 0]]] "%s_inlined%d"]
             (field_imm 0 *match*/3604) (+ (field_imm 1 *match*/3604) 1)))))
    (setfield_ptr(root-init) 10 (global Dune__exe__Inlining!)
      new_candidate/769))
  (letrec
    (fresh/838
       (function names/839 x/840
         (if
           (apply (field_imm 29 (global Dune__exe__StringSet!)) x/840
             names/839)
           (apply fresh/838 names/839
             (apply (field_imm 10 (global Dune__exe__Inlining!)) x/840))
           x/840)))
    (setfield_ptr(root-init) 11 (global Dune__exe__Inlining!) fresh/838))
  (let
    (rename/933 =
       (function used/935 producers/936
         (let
           (*match*/3610 =
              (apply (field_imm 25 (global Stdlib__List!))
                (function param/1051 producer/1027
                  (let
                    (producers/1026 =a (field_imm 2 param/1051)
                     used/1025 =a (field_imm 1 param/1051)
                     phi/1024 =a (field_imm 0 param/1051)
                     id/1028 =
                       (apply (field_imm 1 (global Dune__exe__BasicSyntax!))
                         producer/1027)
                     x/1029 =
                       (apply (field_imm 0 (global Dune__exe__Positions!))
                         id/1028))
                    (if
                      (apply (field_imm 29 (global Dune__exe__StringSet!))
                        x/1029 used/1025)
                      (let
                        (x'/1030 =
                           (apply
                             (field_imm 11 (global Dune__exe__Inlining!))
                             used/1025 x/1029)
                         id'/1031 =
                           (apply
                             (field_imm 7 (global Dune__exe__Positions!))
                             (function _x/1032 x'/1030) id/1028))
                        (makeblock 0
                          (apply (field_imm 14 (global Dune__exe__Action!))
                            x/1029 x'/1030 phi/1024)
                          (apply (field_imm 1 (global Dune__exe__StringSet!))
                            x'/1030 used/1025)
                          (makeblock 0
                            (makeblock 0 id'/1031 (field_imm 1 producer/1027)
                              (field_imm 2 producer/1027))
                            producers/1026)))
                      (makeblock 0 phi/1024
                        (apply (field_imm 1 (global Dune__exe__StringSet!))
                          x/1029 used/1025)
                        (makeblock 0 producer/1027 producers/1026)))))
                (makeblock 0 (field_imm 13 (global Dune__exe__Action!))
                  used/935 0)
                producers/936))
           (makeblock 0 (field_imm 0 *match*/3610)
             (apply (field_imm 9 (global Stdlib__List!))
               (field_imm 2 *match*/3610))))))
    (setfield_ptr(root-init) 12 (global Dune__exe__Inlining!) rename/933))
  (let
    (define_positions/1052 =
       (function name/1054 nprefix/1055[int] ncallee/1056[int]
         (let
           (startp/1057 =
              (if (> ncallee/1056 0)
                (makeblock 0 (*,int)
                  (makeblock 0 (array.get[addr] name/1054 nprefix/1055)) 1)
                (if (> nprefix/1055 0)
                  (makeblock 0 (*,int)
                    (makeblock 0
                      (array.get[addr] name/1054 (- nprefix/1055 1)))
                    2)
                  [0: 0 2]))
            endp/1106 =
              (if (> ncallee/1056 0)
                (makeblock 0 (*,int)
                  (makeblock 0
                    (array.get[addr] name/1054
                      (- (+ nprefix/1055 ncallee/1056) 1)))
                  2)
                startp/1057)
            beforeendp/1107 =
              (if (> nprefix/1055 0)
                (makeblock 0 (*,int)
                  (makeblock 0
                    (array.get[addr] name/1054 (- nprefix/1055 1)))
                  2)
                [0: 0 2]))
           (makeblock 0 startp/1057 endp/1106 beforeendp/1107))))
    (setfield_ptr(root-init) 13 (global Dune__exe__Inlining!)
      define_positions/1052))
  (let
    (rename_sw_outer/1108 =
       (function param/1116 sw/1113
         (let (*match*/3611 =a (field_imm 0 sw/1113))
           (if (isint *match*/3611)
             (if *match*/3611
               (raise
                 (makeblock 0 (global Assert_failure/28!)
                   [0: "src/inlining.ml" 277 6]))
               0)
             (if
               (caml_string_equal (field_imm 0 *match*/3611)
                 (field_imm 0 param/1116))
               (switch* (field_imm 1 sw/1113)
                case int 0:
                 (raise
                   (makeblock 0 (global Assert_failure/28!)
                     [0: "src/inlining.ml" 271 30]))
                case int 1: (makeblock 0 (field_imm 1 param/1116))
                case int 2: (makeblock 0 (field_imm 2 param/1116)))
               0)))))
    (setfield_ptr(root-init) 14 (global Dune__exe__Inlining!)
      rename_sw_outer/1108))
  (let
    (rename_sw_inner/1117 =
       (function beforeendp/1119 sw/1120
         (let (*match*/3614 =a (field_imm 0 sw/1120))
           (if (isint *match*/3614)
             (if *match*/3614
               (raise
                 (makeblock 0 (global Assert_failure/28!)
                   [0: "src/inlining.ml" 294 6]))
               (seq
                 (if (== (field_imm 1 sw/1120) 2) 0
                   (raise
                     (makeblock 0 (global Assert_failure/28!)
                       [0: "src/inlining.ml" 287 6])))
                 (makeblock 0 beforeendp/1119)))
             0))))
    (setfield_ptr(root-init) 15 (global Dune__exe__Inlining!)
      rename_sw_inner/1117))
  (let
    (inline_branch/1123 =
       (function caller/1125 param/1184 callee/1128
         (let
           (producer/1127 =a (field_imm 1 param/1184)
            i/1126 =a (field_imm 0 param/1184)
            nsuffix/1130 =[int]
              (-
                (apply (field_imm 0 (global Stdlib__List!))
                  (field_imm 1 caller/1125))
                (+ i/1126 1))
            prefix/1131 =
              (apply (field_imm 3 (global Dune__exe__Inlining!)) i/1126
                (field_imm 1 caller/1125))
            suffix/1132 =
              (apply (field_imm 2 (global Dune__exe__Inlining!)) (+ i/1126 1)
                (field_imm 1 caller/1125)))
           (seq
             (apply (field_imm 8 (global Dune__exe__Inlining!)) caller/1125
               producer/1127 nsuffix/1130 callee/1128)
             (let
               (branch_prec_annotation/1133 =
                  (apply (field_imm 9 (global Dune__exe__Inlining!))
                    caller/1125 callee/1128)
                used/1134 =
                  (apply (field_imm 4 (global Dune__exe__StringSet!))
                    (apply (field_imm 13 (global Dune__exe__BasicSyntax!))
                      prefix/1131)
                    (apply (field_imm 13 (global Dune__exe__BasicSyntax!))
                      suffix/1132))
                *match*/3637 =
                  (apply (field_imm 12 (global Dune__exe__Inlining!))
                    used/1134 (field_imm 1 callee/1128))
                producers/1137 =
                  (apply (field_imm 36 (global Stdlib!)) prefix/1131
                    (apply (field_imm 36 (global Stdlib!))
                      (field_imm 1 *match*/3637) suffix/1132)))
               (seq
                 (apply (field_imm 13 (global Dune__exe__BasicSyntax!))
                   producers/1137)
                 (let
                   (*match*/3633 =
                      (let
                        (name/1141 =
                           (apply (field_imm 12 (global Stdlib__Array!))
                             (field_imm 0 (global Dune__exe__BasicSyntax!))
                             (apply (field_imm 9 (global Stdlib__Array!))
                               producers/1137))
                         ncallee/1142 =[int]
                           (apply (field_imm 0 (global Stdlib__List!))
                             (field_imm 1 callee/1128)))
                        (apply (field_imm 13 (global Dune__exe__Inlining!))
                          name/1141 i/1126 ncallee/1142))
                    x/1143 =
                      (apply (field_imm 0 (global Dune__exe__BasicSyntax!))
                        producer/1127)
                    callee_action/3628 =
                      (apply (field_imm 15 (global Dune__exe__Action!))
                        (apply (field_imm 15 (global Dune__exe__Inlining!))
                          (field_imm 2 *match*/3633))
                        (field_imm 0 *match*/3637) (field_imm 2 callee/1128))
                    caller_action/3627 =
                      (apply (field_imm 15 (global Dune__exe__Action!))
                        (apply (field_imm 14 (global Dune__exe__Inlining!))
                          (makeblock 0 x/1143 (field_imm 0 *match*/3633)
                            (field_imm 1 *match*/3633)))
                        (field_imm 13 (global Dune__exe__Action!))
                        (field_imm 2 caller/1125))
                    action/1146 =
                      (apply (field_imm 2 (global Dune__exe__Action!)) x/1143
                        callee_action/3628 caller_action/3627))
                   (makeblock 0 (field_imm 0 caller/1125) producers/1137
                     action/1146 branch_prec_annotation/1133
                     (field_imm 4 caller/1125)))))))))
    (setfield_ptr(root-init) 16 (global Dune__exe__Inlining!)
      inline_branch/1123))
  (let
    (inline_branches/1185 =
       (function caller/1187 site/1188 callees/1189
         (apply (field_imm 19 (global Stdlib__List!))
           (apply (field_imm 16 (global Dune__exe__Inlining!)) caller/1187
             site/1188)
           callees/1189)))
    (setfield_ptr(root-init) 17 (global Dune__exe__Inlining!)
      inline_branches/1185))
  (let
    (Inline/1482 =
       (function G/3647 is_a_functor
         (let
           (is_inline_symbol/1192 =
              (apply (field_imm 11 (global Dune__exe__BasicSyntax!))
                (field_imm 0 G/3647))
            is_inline_producer/1193 =
              (apply (field_imm 12 (global Dune__exe__BasicSyntax!))
                (field_imm 0 G/3647))
            find/1194 =
              (apply (field_imm 6 (global Dune__exe__Inlining!))
                (field_imm 0 G/3647))
            *match*/3646 =
              (if (field_imm 32 (global Dune__exe__Settings!))
                (apply (field_imm 21 (global Dune__exe__StringMap!))
                  (function param/1256 rule/1255 : int
                    (if (field_int 2 rule/1255)
                      (apply (field_imm 5 (global Dune__exe__Error!))
                        (field_imm 1 rule/1255)
                        [0:
                         [12:
                          '%'
                          [11:
                           "inline is not supported by the Coq back-end." 0]]
                         "%%inline is not supported by the Coq back-end."])
                      0))
                  (field_imm 8 (field_imm 0 G/3647)))
                0))
           (letrec
             (expand_branches/1257
                (function expand_symbol/1258 i/1259[int] branches/1260
                  (apply (field_imm 1 (global Dune__exe__ListMonad!))
                    branches/1260
                    (function caller/1261
                      (let
                        (*match*/3638 =
                           (apply (field_imm 5 (global Dune__exe__Inlining!))
                             is_inline_producer/1193 i/1259
                             (field_imm 1 caller/1261)))
                        (if (isint *match*/3638)
                          (apply (field_imm 2 (global Dune__exe__ListMonad!))
                            caller/1261)
                          (let
                            (site/1264 =a (field_imm 0 *match*/3638)
                             producer/1263 =a (field_imm 1 site/1264))
                            (seq
                              (apply
                                (field_imm 7 (global Dune__exe__Inlining!))
                                producer/1263)
                              (let
                                (symbol/1265 =
                                   (apply
                                     (field_imm 2
                                       (global Dune__exe__BasicSyntax!))
                                     producer/1263))
                                (apply expand_branches/1257
                                  expand_symbol/1258 (field_imm 0 site/1264)
                                  (apply
                                    (field_imm 17
                                      (global Dune__exe__Inlining!))
                                    caller/1261 site/1264
                                    (apply
                                      (field_imm 4
                                        (global Dune__exe__BasicSyntax!))
                                      (apply expand_symbol/1258 symbol/1265)))))))))))))
             (let
               (expand_symbol/1266 =
                  (function expand_symbol/1268 symbol/1269
                    (apply (field_imm 5 (global Dune__exe__BasicSyntax!))
                      (apply expand_branches/1257 expand_symbol/1268 0)
                      (apply find/1194 symbol/1269)))
                expand_symbol/1270 =
                  (apply
                    (field_imm 4
                      (field_imm 6 (global Vendored_fix__Memoize!)))
                    expand_symbol/1266)
                expand_symbol/1372 =
                  (function symbol/1373
                    (try (apply expand_symbol/1270 symbol/1373) with exn/3639
                      (if
                        (== (field_imm 0 exn/3639)
                          (field_imm 3
                            (field_imm 6 (global Vendored_fix__Memoize!))))
                        (let
                          (symbol/1375 =a (field_imm 2 exn/3639)
                           symbols/1374 =a (field_imm 1 exn/3639)
                           rule/1376 = (apply find/1194 symbol/1375)
                           b/1377 =
                             (apply (field_imm 0 (global Stdlib__Buffer!))
                               128))
                          (seq
                            (apply (field_imm 4 (global Stdlib__Printf!))
                              b/1377
                              [0:
                               [11:
                                "there is a cycle of "
                                [12:
                                 '%' [11: "inline nonterminal symbols:\n" 0]]]
                               "there is a cycle of %%inline nonterminal symbols:\n"])
                            (if (isint symbols/1374)
                              (raise
                                (makeblock 0 (global Assert_failure/28!)
                                  [0: "src/inlining.ml" 489 10]))
                              (let
                                (*match*/3640 =a (field_imm 1 symbols/1374)
                                 head/1460 =a (field_imm 0 symbols/1374))
                                (if (isint *match*/3640)
                                  (seq
                                    (if
                                      (caml_string_equal head/1460
                                        symbol/1375)
                                      0
                                      (raise
                                        (makeblock 0
                                          (global Assert_failure/28!)
                                          [0: "src/inlining.ml" 491 10])))
                                    (apply
                                      (field_imm 4 (global Stdlib__Printf!))
                                      b/1377
                                      [0:
                                       [11:
                                        "  "
                                        [2: 0 [11: " refers to itself." 0]]]
                                       "  %s refers to itself."]
                                      symbol/1375))
                                  (seq
                                    (if
                                      (caml_string_equal head/1460
                                        symbol/1375)
                                      0
                                      (raise
                                        (makeblock 0
                                          (global Assert_failure/28!)
                                          [0: "src/inlining.ml" 494 10])))
                                    (apply
                                      (field_imm 4 (global Stdlib__Printf!))
                                      b/1377
                                      [0:
                                       [11:
                                        "  "
                                        [2:
                                         0
                                         [11:
                                          " refers to " [2: 0 [11: ",\n" 0]]]]]
                                       "  %s refers to %s,\n"]
                                      head/1460 (field_imm 0 *match*/3640))
                                    (apply
                                      (field_imm 17 (global Stdlib__List!))
                                      (function symbol/1464 : int
                                        (apply
                                          (field_imm 4
                                            (global Stdlib__Printf!))
                                          b/1377
                                          [0:
                                           [11:
                                            "  which refers to "
                                            [2: 0 [11: ",\n" 0]]]
                                           "  which refers to %s,\n"]
                                          symbol/1464))
                                      (field_imm 1 *match*/3640))
                                    (apply
                                      (field_imm 4 (global Stdlib__Printf!))
                                      b/1377
                                      [0:
                                       [11:
                                        "  which refers back to "
                                        [2: 0 [12: '.' 0]]]
                                       "  which refers back to %s."]
                                      symbol/1375)))))
                            (apply (field_imm 5 (global Dune__exe__Error!))
                              (field_imm 1 rule/1376) [0: [2: 0 0] "%s"]
                              (apply (field_imm 1 (global Stdlib__Buffer!))
                                b/1377))))
                        (reraise exn/3639))))
                rules/1465 =
                  (apply (field_imm 24 (global Dune__exe__StringMap!))
                    (function symbol/1466 _rule/1467
                      (apply expand_symbol/1372 symbol/1466))
                    (apply (field_imm 42 (global Dune__exe__StringMap!))
                      (function param/1469 rule/1468 : int
                        (not (field_int 2 rule/1468)))
                      (field_imm 8 (field_imm 0 G/3647))))
                keep/1470 =
                  (function symbol/1472 _rule/1473 : int
                    (not (apply is_inline_symbol/1192 symbol/1472)))
                types/1474 =
                  (apply (field_imm 42 (global Dune__exe__StringMap!))
                    keep/1470 (field_imm 4 (field_imm 0 G/3647)))
                keep_or_warn/1475 =
                  (function symbol/1477 _rule/1478 : int
                    (let
                      (keep/1479 =[int]
                         (apply keep/1470 symbol/1477 _rule/1478))
                      (seq
                        (if (not keep/1479)
                          (apply (field_imm 13 (global Dune__exe__Error!)) 0
                            [0:
                             [11:
                              "the declaration "
                              [12:
                               '%'
                               [11:
                                "on_error_reduce "
                                [2:
                                 0
                                 [11:
                                  "\nhas no effect: this symbol is marked "
                                  [12:
                                   '%' [11: "inline and is expanded away." 0]]]]]]]
                             "the declaration %%on_error_reduce %s\nhas no effect: this symbol is marked %%inline and is expanded away."]
                            symbol/1477)
                          0)
                        keep/1479)))
                on_error_reduce/1480 =
                  (apply (field_imm 42 (global Dune__exe__StringMap!))
                    keep_or_warn/1475 (field_imm 6 (field_imm 0 G/3647)))
                grammar/1481 =
                  (let (init/3642 = (field_imm 0 G/3647))
                    (makeblock 0 (field_imm 0 init/3642)
                      (field_imm 1 init/3642) (field_imm 2 init/3642)
                      (field_imm 3 init/3642) types/1474
                      (field_imm 5 init/3642) on_error_reduce/1480
                      (field_imm 7 init/3642) rules/1465)))
               (makeblock 0 is_inline_symbol/1192 is_inline_producer/1193
                 find/1194 expand_branches/1257 expand_symbol/1372 rules/1465
                 keep/1470 types/1474 keep_or_warn/1475 on_error_reduce/1480
                 grammar/1481))))))
    (seq
      (setfield_ptr(root-init) 18 (global Dune__exe__Inlining!) Inline/1482)
      (let
        (inline/1483 =
           (function grammar/1485
             (let
               (I/1498 =
                  (apply (field_imm 18 (global Dune__exe__Inlining!))
                    (makeblock 0 grammar/1485)))
               (field_imm 10 I/1498))))
        (setfield_ptr(root-init) 0 (global Dune__exe__Inlining!) inline/1483))
      0)))
