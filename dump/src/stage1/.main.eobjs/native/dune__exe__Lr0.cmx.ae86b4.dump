[
  structure_item (src/lr0.ml[14,993+0]..[14,993+12])
    Pstr_open Fresh
    module_expr (src/lr0.ml[14,993+5]..[14,993+12])
      Pmod_ident "Grammar" (src/lr0.ml[14,993+5]..[14,993+12])
  structure_item (src/lr0.ml[16,1007+0]..[17,1030+25])
    Pstr_module
    "InfiniteArray" (src/lr0.ml[16,1007+7]..[16,1007+20])
      module_expr (src/lr0.ml[17,1030+2]..[17,1030+25])
        Pmod_ident "MenhirLib.InfiniteArray" (src/lr0.ml[17,1030+2]..[17,1030+25])
  structure_item (src/lr0.ml[23,1216+0]..[25,1258+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[23,1216+4]..[23,1216+6])
          Ppat_construct "()" (src/lr0.ml[23,1216+4]..[23,1216+6])
          None
        expression (src/lr0.ml[24,1225+2]..[25,1258+4])
          Pexp_letmodule "M" (src/lr0.ml[24,1225+13]..[24,1225+14])
          module_expr (src/lr0.ml[24,1225+17]..[24,1225+29])
            Pmod_apply_unit
            module_expr (src/lr0.ml[24,1225+17]..[24,1225+27])
              Pmod_ident "Middle.Run" (src/lr0.ml[24,1225+17]..[24,1225+27])
          expression (src/lr0.ml[25,1258+2]..[25,1258+4])
            Pexp_construct "()" (src/lr0.ml[25,1258+2]..[25,1258+4])
            None
    ]
  structure_item (src/lr0.ml[31,1422+0]..[33,1471+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[31,1422+4]..[31,1422+6])
          Ppat_construct "()" (src/lr0.ml[31,1422+4]..[31,1422+6])
          None
        expression (src/lr0.ml[32,1431+2]..[33,1471+4])
          Pexp_letmodule "L" (src/lr0.ml[32,1431+13]..[32,1431+14])
          module_expr (src/lr0.ml[32,1431+17]..[32,1431+36])
            Pmod_apply_unit
            module_expr (src/lr0.ml[32,1431+17]..[32,1431+34])
              Pmod_ident "LoopDetection.Run" (src/lr0.ml[32,1431+17]..[32,1431+34])
          expression (src/lr0.ml[33,1471+2]..[33,1471+4])
            Pexp_construct "()" (src/lr0.ml[33,1471+2]..[33,1471+4])
            None
    ]
  structure_item (src/lr0.ml[42,1760+0]..[42,1760+28])
    Pstr_module
    "VarSet" (src/lr0.ml[42,1760+7]..[42,1760+13])
      module_expr (src/lr0.ml[42,1760+16]..[42,1760+28])
        Pmod_ident "SparseBitSet" (src/lr0.ml[42,1760+16]..[42,1760+28])
  structure_item (src/lr0.ml[44,1790+0]..[70,2335+3])
    Pstr_module
    "SymbolicLookahead" (src/lr0.ml[44,1790+7]..[44,1790+24])
      module_expr (src/lr0.ml[44,1790+27]..[70,2335+3])
        Pmod_structure
        [
          structure_item (src/lr0.ml[46,1825+2]..[47,1836+28])
            Pstr_type Rec
            [
              type_declaration "t" (src/lr0.ml[46,1825+7]..[46,1825+8]) (src/lr0.ml[46,1825+2]..[47,1836+28])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/lr0.ml[47,1836+4]..[47,1836+28])
                      Ptyp_tuple
                      [
                        core_type (src/lr0.ml[47,1836+4]..[47,1836+17])
                          Ptyp_constr "TerminalSet.t" (src/lr0.ml[47,1836+4]..[47,1836+17])
                          []
                        core_type (src/lr0.ml[47,1836+20]..[47,1836+28])
                          Ptyp_constr "VarSet.t" (src/lr0.ml[47,1836+20]..[47,1836+28])
                          []
                      ]
            ]
          structure_item (src/lr0.ml[49,1866+2]..[50,1888+24])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/lr0.ml[49,1866+6]..[49,1866+14])
                  Ppat_var "constant" (src/lr0.ml[49,1866+6]..[49,1866+14])
                expression (src/lr0.ml[49,1866+15]..[50,1888+24]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/lr0.ml[49,1866+15]..[49,1866+19])
                    Ppat_var "toks" (src/lr0.ml[49,1866+15]..[49,1866+19])
                  expression (src/lr0.ml[50,1888+4]..[50,1888+24])
                    Pexp_tuple
                    [
                      expression (src/lr0.ml[50,1888+5]..[50,1888+9])
                        Pexp_ident "toks" (src/lr0.ml[50,1888+5]..[50,1888+9])
                      expression (src/lr0.ml[50,1888+11]..[50,1888+23])
                        Pexp_ident "VarSet.empty" (src/lr0.ml[50,1888+11]..[50,1888+23])
                    ]
            ]
          structure_item (src/lr0.ml[52,1914+2]..[53,1928+30])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/lr0.ml[52,1914+6]..[52,1914+11])
                  Ppat_var "empty" (src/lr0.ml[52,1914+6]..[52,1914+11])
                expression (src/lr0.ml[53,1928+4]..[53,1928+30])
                  Pexp_apply
                  expression (src/lr0.ml[53,1928+4]..[53,1928+12])
                    Pexp_ident "constant" (src/lr0.ml[53,1928+4]..[53,1928+12])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[53,1928+13]..[53,1928+30])
                        Pexp_ident "TerminalSet.empty" (src/lr0.ml[53,1928+13]..[53,1928+30])
                  ]
            ]
          structure_item (src/lr0.ml[55,1960+2]..[61,2161+18])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/lr0.ml[55,1960+6]..[55,1960+11])
                  Ppat_var "union" (src/lr0.ml[55,1960+6]..[55,1960+11])
                expression (src/lr0.ml[55,1960+12]..[61,2161+18]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/lr0.ml[55,1960+12]..[55,1960+26])
                    Ppat_tuple
                    [
                      pattern (src/lr0.ml[55,1960+13]..[55,1960+18])
                        Ppat_var "toks1" (src/lr0.ml[55,1960+13]..[55,1960+18])
                      pattern (src/lr0.ml[55,1960+20]..[55,1960+25])
                        Ppat_var "vars1" (src/lr0.ml[55,1960+20]..[55,1960+25])
                    ]
                  expression (src/lr0.ml[55,1960+27]..[61,2161+18]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/lr0.ml[55,1960+27]..[55,1960+49])
                      Ppat_alias "s2" (src/lr0.ml[55,1960+46]..[55,1960+48])
                      pattern (src/lr0.ml[55,1960+28]..[55,1960+42])
                        Ppat_tuple
                        [
                          pattern (src/lr0.ml[55,1960+29]..[55,1960+34])
                            Ppat_var "toks2" (src/lr0.ml[55,1960+29]..[55,1960+34])
                          pattern (src/lr0.ml[55,1960+36]..[55,1960+41])
                            Ppat_var "vars2" (src/lr0.ml[55,1960+36]..[55,1960+41])
                        ]
                    expression (src/lr0.ml[56,2012+4]..[61,2161+18])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/lr0.ml[56,2012+8]..[56,2012+12])
                            Ppat_var "toks" (src/lr0.ml[56,2012+8]..[56,2012+12])
                          expression (src/lr0.ml[56,2012+15]..[56,2012+44])
                            Pexp_apply
                            expression (src/lr0.ml[56,2012+15]..[56,2012+32])
                              Pexp_ident "TerminalSet.union" (src/lr0.ml[56,2012+15]..[56,2012+32])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[56,2012+33]..[56,2012+38])
                                  Pexp_ident "toks1" (src/lr0.ml[56,2012+33]..[56,2012+38])
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[56,2012+39]..[56,2012+44])
                                  Pexp_ident "toks2" (src/lr0.ml[56,2012+39]..[56,2012+44])
                            ]
                        <def>
                          pattern (src/lr0.ml[57,2057+8]..[57,2057+12])
                            Ppat_var "vars" (src/lr0.ml[57,2057+8]..[57,2057+12])
                          expression (src/lr0.ml[57,2057+15]..[57,2057+39])
                            Pexp_apply
                            expression (src/lr0.ml[57,2057+15]..[57,2057+27])
                              Pexp_ident "VarSet.union" (src/lr0.ml[57,2057+15]..[57,2057+27])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[57,2057+28]..[57,2057+33])
                                  Pexp_ident "vars1" (src/lr0.ml[57,2057+28]..[57,2057+33])
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[57,2057+34]..[57,2057+39])
                                  Pexp_ident "vars2" (src/lr0.ml[57,2057+34]..[57,2057+39])
                            ]
                      ]
                      expression (src/lr0.ml[58,2100+4]..[61,2161+18])
                        Pexp_ifthenelse
                        expression (src/lr0.ml[58,2100+7]..[58,2100+37])
                          Pexp_apply
                          expression (src/lr0.ml[58,2100+21]..[58,2100+23])
                            Pexp_ident "&&" (src/lr0.ml[58,2100+21]..[58,2100+23])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[58,2100+7]..[58,2100+20])
                                Pexp_apply
                                expression (src/lr0.ml[58,2100+13]..[58,2100+15])
                                  Pexp_ident "==" (src/lr0.ml[58,2100+13]..[58,2100+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[58,2100+7]..[58,2100+12])
                                      Pexp_ident "toks2" (src/lr0.ml[58,2100+7]..[58,2100+12])
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[58,2100+16]..[58,2100+20])
                                      Pexp_ident "toks" (src/lr0.ml[58,2100+16]..[58,2100+20])
                                ]
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[58,2100+24]..[58,2100+37])
                                Pexp_apply
                                expression (src/lr0.ml[58,2100+30]..[58,2100+32])
                                  Pexp_ident "==" (src/lr0.ml[58,2100+30]..[58,2100+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[58,2100+24]..[58,2100+29])
                                      Pexp_ident "vars2" (src/lr0.ml[58,2100+24]..[58,2100+29])
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[58,2100+33]..[58,2100+37])
                                      Pexp_ident "vars" (src/lr0.ml[58,2100+33]..[58,2100+37])
                                ]
                          ]
                        expression (src/lr0.ml[59,2143+6]..[59,2143+8])
                          Pexp_ident "s2" (src/lr0.ml[59,2143+6]..[59,2143+8])
                        Some
                          expression (src/lr0.ml[61,2161+6]..[61,2161+18])
                            Pexp_tuple
                            [
                              expression (src/lr0.ml[61,2161+7]..[61,2161+11])
                                Pexp_ident "toks" (src/lr0.ml[61,2161+7]..[61,2161+11])
                              expression (src/lr0.ml[61,2161+13]..[61,2161+17])
                                Pexp_ident "vars" (src/lr0.ml[61,2161+13]..[61,2161+17])
                            ]
            ]
          structure_item (src/lr0.ml[63,2181+2]..[64,2214+45])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/lr0.ml[63,2181+6]..[63,2181+14])
                  Ppat_var "variable" (src/lr0.ml[63,2181+6]..[63,2181+14])
                expression (src/lr0.ml[63,2181+15]..[64,2214+45]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/lr0.ml[63,2181+15]..[63,2181+26])
                    Ppat_constraint
                    pattern (src/lr0.ml[63,2181+16]..[63,2181+19])
                      Ppat_var "var" (src/lr0.ml[63,2181+16]..[63,2181+19])
                    core_type (src/lr0.ml[63,2181+22]..[63,2181+25])
                      Ptyp_constr "int" (src/lr0.ml[63,2181+22]..[63,2181+25])
                      []
                  expression (src/lr0.ml[63,2181+27]..[64,2214+45])
                    Pexp_constraint
                    expression (src/lr0.ml[64,2214+4]..[64,2214+45])
                      Pexp_tuple
                      [
                        expression (src/lr0.ml[64,2214+5]..[64,2214+22])
                          Pexp_ident "TerminalSet.empty" (src/lr0.ml[64,2214+5]..[64,2214+22])
                        expression (src/lr0.ml[64,2214+24]..[64,2214+44])
                          Pexp_apply
                          expression (src/lr0.ml[64,2214+24]..[64,2214+40])
                            Pexp_ident "VarSet.singleton" (src/lr0.ml[64,2214+24]..[64,2214+40])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[64,2214+41]..[64,2214+44])
                                Pexp_ident "var" (src/lr0.ml[64,2214+41]..[64,2214+44])
                          ]
                      ]
                    core_type (src/lr0.ml[63,2181+29]..[63,2181+30])
                      Ptyp_constr "t" (src/lr0.ml[63,2181+29]..[63,2181+30])
                      []
            ]
          structure_item (src/lr0.ml[66,2261+2]..[68,2325+8])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/lr0.ml[66,2261+6]..[66,2261+13])
                  Ppat_var "project" (src/lr0.ml[66,2261+6]..[66,2261+13])
                expression (src/lr0.ml[66,2261+14]..[68,2325+8]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/lr0.ml[66,2261+14]..[66,2261+26])
                    Ppat_tuple
                    [
                      pattern (src/lr0.ml[66,2261+15]..[66,2261+19])
                        Ppat_var "toks" (src/lr0.ml[66,2261+15]..[66,2261+19])
                      pattern (src/lr0.ml[66,2261+21]..[66,2261+25])
                        Ppat_var "vars" (src/lr0.ml[66,2261+21]..[66,2261+25])
                    ]
                  expression (src/lr0.ml[67,2290+4]..[68,2325+8])
                    Pexp_sequence
                    expression (src/lr0.ml[67,2290+4]..[67,2290+33])
                      Pexp_assert
                      expression (src/lr0.ml[67,2290+11]..[67,2290+33])
                        Pexp_apply
                        expression (src/lr0.ml[67,2290+12]..[67,2290+27])
                          Pexp_ident "VarSet.is_empty" (src/lr0.ml[67,2290+12]..[67,2290+27])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr0.ml[67,2290+28]..[67,2290+32])
                              Pexp_ident "vars" (src/lr0.ml[67,2290+28]..[67,2290+32])
                        ]
                    expression (src/lr0.ml[68,2325+4]..[68,2325+8])
                      Pexp_ident "toks" (src/lr0.ml[68,2325+4]..[68,2325+8])
            ]
        ]
  structure_item (src/lr0.ml[76,2539+0]..[77,2564+33])
    Pstr_module
    "SymbolicClosure" (src/lr0.ml[76,2539+7]..[76,2539+22])
      module_expr (src/lr0.ml[77,2564+2]..[77,2564+33])
        Pmod_apply
        module_expr (src/lr0.ml[77,2564+2]..[77,2564+14])
          Pmod_ident "Item.Closure" (src/lr0.ml[77,2564+2]..[77,2564+14])
        module_expr (src/lr0.ml[77,2564+15]..[77,2564+32])
          Pmod_ident "SymbolicLookahead" (src/lr0.ml[77,2564+15]..[77,2564+32])
  structure_item (src/lr0.ml[86,2955+0]..[87,2979+28])
    Pstr_type Rec
    [
      type_declaration "concretelr1state" (src/lr0.ml[86,2955+5]..[86,2955+21]) (src/lr0.ml[86,2955+0]..[87,2979+28])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/lr0.ml[87,2979+4]..[87,2979+28])
              Ptyp_constr "Item.Map.t" (src/lr0.ml[87,2979+18]..[87,2979+28])
              [
                core_type (src/lr0.ml[87,2979+4]..[87,2979+17])
                  Ptyp_constr "TerminalSet.t" (src/lr0.ml[87,2979+4]..[87,2979+17])
                  []
              ]
    ]
  structure_item (src/lr0.ml[89,3009+0]..[92,3141+55])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[89,3009+4]..[89,3009+11])
          Ppat_var "closure" (src/lr0.ml[89,3009+4]..[89,3009+11])
        expression (src/lr0.ml[89,3009+12]..[92,3141+55]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[89,3009+12]..[89,3009+38])
            Ppat_constraint
            pattern (src/lr0.ml[89,3009+13]..[89,3009+18])
              Ppat_var "state" (src/lr0.ml[89,3009+13]..[89,3009+18])
            core_type (src/lr0.ml[89,3009+21]..[89,3009+37])
              Ptyp_constr "concretelr1state" (src/lr0.ml[89,3009+21]..[89,3009+37])
              []
          expression (src/lr0.ml[89,3009+39]..[92,3141+55])
            Pexp_constraint
            expression (src/lr0.ml[90,3069+3]..[92,3141+55])
              Pexp_apply
              expression (src/lr0.ml[90,3069+3]..[90,3069+15])
                Pexp_ident "Item.Map.map" (src/lr0.ml[90,3069+3]..[90,3069+15])
              [
                <arg>
                Nolabel
                  expression (src/lr0.ml[90,3069+16]..[90,3069+41])
                    Pexp_ident "SymbolicLookahead.project" (src/lr0.ml[90,3069+16]..[90,3069+41])
                <arg>
                Nolabel
                  expression (src/lr0.ml[91,3111+5]..[92,3141+55])
                    Pexp_apply
                    expression (src/lr0.ml[91,3111+6]..[91,3111+29])
                      Pexp_ident "SymbolicClosure.closure" (src/lr0.ml[91,3111+6]..[91,3111+29])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr0.ml[92,3141+7]..[92,3141+54])
                          Pexp_apply
                          expression (src/lr0.ml[92,3141+8]..[92,3141+20])
                            Pexp_ident "Item.Map.map" (src/lr0.ml[92,3141+8]..[92,3141+20])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[92,3141+21]..[92,3141+47])
                                Pexp_ident "SymbolicLookahead.constant" (src/lr0.ml[92,3141+21]..[92,3141+47])
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[92,3141+48]..[92,3141+53])
                                Pexp_ident "state" (src/lr0.ml[92,3141+48]..[92,3141+53])
                          ]
                    ]
              ]
            core_type (src/lr0.ml[89,3009+41]..[89,3009+57])
              Ptyp_constr "concretelr1state" (src/lr0.ml[89,3009+41]..[89,3009+57])
              []
    ]
  structure_item (src/lr0.ml[98,3404+0]..[112,3869+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[98,3404+4]..[98,3404+15])
          Ppat_var "transitions" (src/lr0.ml[98,3404+4]..[98,3404+15])
        expression (src/lr0.ml[98,3404+16]..[112,3869+25]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[98,3404+16]..[98,3404+39])
            Ppat_constraint
            pattern (src/lr0.ml[98,3404+17]..[98,3404+22])
              Ppat_var "state" (src/lr0.ml[98,3404+17]..[98,3404+22])
            core_type (src/lr0.ml[98,3404+25]..[98,3404+38])
              Ptyp_constr "Item.Map.t" (src/lr0.ml[98,3404+28]..[98,3404+38])
              [
                core_type (src/lr0.ml[98,3404+25]..[98,3404+27])
                  Ptyp_var a
              ]
          expression (src/lr0.ml[98,3404+40]..[112,3869+25])
            Pexp_constraint
            expression (src/lr0.ml[100,3475+2]..[112,3869+25])
              Pexp_apply
              expression (src/lr0.ml[100,3475+2]..[100,3475+15])
                Pexp_ident "Item.Map.fold" (src/lr0.ml[100,3475+2]..[100,3475+15])
              [
                <arg>
                Nolabel
                  expression (src/lr0.ml[100,3475+16]..[112,3869+3])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/lr0.ml[100,3475+21]..[100,3475+25])
                      Ppat_var "item" (src/lr0.ml[100,3475+21]..[100,3475+25])
                    expression (src/lr0.ml[100,3475+26]..[111,3849+19]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/lr0.ml[100,3475+26]..[100,3475+30])
                        Ppat_var "toks" (src/lr0.ml[100,3475+26]..[100,3475+30])
                      expression (src/lr0.ml[100,3475+31]..[111,3849+19]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/lr0.ml[100,3475+31]..[100,3475+42])
                          Ppat_var "transitions" (src/lr0.ml[100,3475+31]..[100,3475+42])
                        expression (src/lr0.ml[101,3521+4]..[111,3849+19])
                          Pexp_match
                          expression (src/lr0.ml[101,3521+10]..[101,3521+28])
                            Pexp_apply
                            expression (src/lr0.ml[101,3521+10]..[101,3521+23])
                              Pexp_ident "Item.classify" (src/lr0.ml[101,3521+10]..[101,3521+23])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[101,3521+24]..[101,3521+28])
                                  Pexp_ident "item" (src/lr0.ml[101,3521+24]..[101,3521+28])
                            ]
                          [
                            <case>
                              pattern (src/lr0.ml[102,3555+6]..[102,3555+32])
                                Ppat_construct "Item.Shift" (src/lr0.ml[102,3555+6]..[102,3555+16])
                                Some
                                  []
                                  pattern (src/lr0.ml[102,3555+17]..[102,3555+32])
                                    Ppat_tuple
                                    [
                                      pattern (src/lr0.ml[102,3555+18]..[102,3555+24])
                                        Ppat_var "symbol" (src/lr0.ml[102,3555+18]..[102,3555+24])
                                      pattern (src/lr0.ml[102,3555+26]..[102,3555+31])
                                        Ppat_var "item'" (src/lr0.ml[102,3555+26]..[102,3555+31])
                                    ]
                              expression (src/lr0.ml[103,3591+8]..[109,3753+72])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/lr0.ml[103,3591+12]..[103,3591+17])
                                      Ppat_var "items" (src/lr0.ml[103,3591+12]..[103,3591+17])
                                    core_type (src/lr0.ml[103,3591+20]..[103,3591+33])
                                      Ptyp_constr "Item.Map.t" (src/lr0.ml[103,3591+23]..[103,3591+33])
                                      [
                                        core_type (src/lr0.ml[103,3591+20]..[103,3591+22])
                                          Ptyp_var a
                                      ]
                                    expression (src/lr0.ml[104,3627+10]..[107,3715+26])
                                      Pexp_try
                                      expression (src/lr0.ml[105,3641+12]..[105,3641+45])
                                        Pexp_apply
                                        expression (src/lr0.ml[105,3641+12]..[105,3641+26])
                                          Pexp_ident "SymbolMap.find" (src/lr0.ml[105,3641+12]..[105,3641+26])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/lr0.ml[105,3641+27]..[105,3641+33])
                                              Pexp_ident "symbol" (src/lr0.ml[105,3641+27]..[105,3641+33])
                                          <arg>
                                          Nolabel
                                            expression (src/lr0.ml[105,3641+34]..[105,3641+45])
                                              Pexp_ident "transitions" (src/lr0.ml[105,3641+34]..[105,3641+45])
                                        ]
                                      [
                                        <case>
                                          pattern (src/lr0.ml[106,3687+15]..[106,3687+24])
                                            Ppat_construct "Not_found" (src/lr0.ml[106,3687+15]..[106,3687+24])
                                            None
                                          expression (src/lr0.ml[107,3715+12]..[107,3715+26])
                                            Pexp_ident "Item.Map.empty" (src/lr0.ml[107,3715+12]..[107,3715+26])
                                      ]
                                ]
                                expression (src/lr0.ml[109,3753+8]..[109,3753+72])
                                  Pexp_apply
                                  expression (src/lr0.ml[109,3753+8]..[109,3753+21])
                                    Pexp_ident "SymbolMap.add" (src/lr0.ml[109,3753+8]..[109,3753+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/lr0.ml[109,3753+22]..[109,3753+28])
                                        Pexp_ident "symbol" (src/lr0.ml[109,3753+22]..[109,3753+28])
                                    <arg>
                                    Nolabel
                                      expression (src/lr0.ml[109,3753+29]..[109,3753+60])
                                        Pexp_apply
                                        expression (src/lr0.ml[109,3753+30]..[109,3753+42])
                                          Pexp_ident "Item.Map.add" (src/lr0.ml[109,3753+30]..[109,3753+42])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/lr0.ml[109,3753+43]..[109,3753+48])
                                              Pexp_ident "item'" (src/lr0.ml[109,3753+43]..[109,3753+48])
                                          <arg>
                                          Nolabel
                                            expression (src/lr0.ml[109,3753+49]..[109,3753+53])
                                              Pexp_ident "toks" (src/lr0.ml[109,3753+49]..[109,3753+53])
                                          <arg>
                                          Nolabel
                                            expression (src/lr0.ml[109,3753+54]..[109,3753+59])
                                              Pexp_ident "items" (src/lr0.ml[109,3753+54]..[109,3753+59])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/lr0.ml[109,3753+61]..[109,3753+72])
                                        Pexp_ident "transitions" (src/lr0.ml[109,3753+61]..[109,3753+72])
                                  ]
                            <case>
                              pattern (src/lr0.ml[110,3826+6]..[110,3826+19])
                                Ppat_construct "Item.Reduce" (src/lr0.ml[110,3826+6]..[110,3826+17])
                                Some
                                  []
                                  pattern (src/lr0.ml[110,3826+18]..[110,3826+19])
                                    Ppat_any
                              expression (src/lr0.ml[111,3849+8]..[111,3849+19])
                                Pexp_ident "transitions" (src/lr0.ml[111,3849+8]..[111,3849+19])
                          ]
                <arg>
                Nolabel
                  expression (src/lr0.ml[112,3869+4]..[112,3869+9])
                    Pexp_ident "state" (src/lr0.ml[112,3869+4]..[112,3869+9])
                <arg>
                Nolabel
                  expression (src/lr0.ml[112,3869+10]..[112,3869+25])
                    Pexp_ident "SymbolMap.empty" (src/lr0.ml[112,3869+10]..[112,3869+25])
              ]
            core_type (src/lr0.ml[98,3404+42]..[98,3404+67])
              Ptyp_constr "SymbolMap.t" (src/lr0.ml[98,3404+56]..[98,3404+67])
              [
                core_type (src/lr0.ml[98,3404+42]..[98,3404+55])
                  Ptyp_constr "Item.Map.t" (src/lr0.ml[98,3404+45]..[98,3404+55])
                  [
                    core_type (src/lr0.ml[98,3404+42]..[98,3404+44])
                      Ptyp_var a
                  ]
              ]
    ]
  structure_item (src/lr0.ml[120,4198+0]..[127,4433+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[120,4198+4]..[120,4198+14])
          Ppat_var "reductions" (src/lr0.ml[120,4198+4]..[120,4198+14])
        expression (src/lr0.ml[120,4198+15]..[127,4433+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[120,4198+15]..[120,4198+38])
            Ppat_constraint
            pattern (src/lr0.ml[120,4198+16]..[120,4198+21])
              Ppat_var "state" (src/lr0.ml[120,4198+16]..[120,4198+21])
            core_type (src/lr0.ml[120,4198+24]..[120,4198+37])
              Ptyp_constr "Item.Map.t" (src/lr0.ml[120,4198+27]..[120,4198+37])
              [
                core_type (src/lr0.ml[120,4198+24]..[120,4198+26])
                  Ptyp_var a
              ]
          expression (src/lr0.ml[120,4198+39]..[127,4433+12])
            Pexp_constraint
            expression (src/lr0.ml[121,4270+2]..[127,4433+12])
              Pexp_apply
              expression (src/lr0.ml[121,4270+2]..[121,4270+15])
                Pexp_ident "Item.Map.fold" (src/lr0.ml[121,4270+2]..[121,4270+15])
              [
                <arg>
                Nolabel
                  expression (src/lr0.ml[121,4270+16]..[127,4433+3])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/lr0.ml[121,4270+21]..[121,4270+25])
                      Ppat_var "item" (src/lr0.ml[121,4270+21]..[121,4270+25])
                    expression (src/lr0.ml[121,4270+26]..[126,4420+12]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/lr0.ml[121,4270+26]..[121,4270+30])
                        Ppat_var "toks" (src/lr0.ml[121,4270+26]..[121,4270+30])
                      expression (src/lr0.ml[121,4270+31]..[126,4420+12]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/lr0.ml[121,4270+31]..[121,4270+35])
                          Ppat_var "accu" (src/lr0.ml[121,4270+31]..[121,4270+35])
                        expression (src/lr0.ml[122,4309+4]..[126,4420+12])
                          Pexp_match
                          expression (src/lr0.ml[122,4309+10]..[122,4309+28])
                            Pexp_apply
                            expression (src/lr0.ml[122,4309+10]..[122,4309+23])
                              Pexp_ident "Item.classify" (src/lr0.ml[122,4309+10]..[122,4309+23])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[122,4309+24]..[122,4309+28])
                                  Pexp_ident "item" (src/lr0.ml[122,4309+24]..[122,4309+28])
                            ]
                          [
                            <case>
                              pattern (src/lr0.ml[123,4343+6]..[123,4343+22])
                                Ppat_construct "Item.Reduce" (src/lr0.ml[123,4343+6]..[123,4343+17])
                                Some
                                  []
                                  pattern (src/lr0.ml[123,4343+18]..[123,4343+22])
                                    Ppat_var "prod" (src/lr0.ml[123,4343+18]..[123,4343+22])
                              expression (src/lr0.ml[124,4369+8]..[124,4369+28])
                                Pexp_construct "::" (src/lr0.ml[124,4369+21]..[124,4369+23])
                                Some
                                  expression (src/lr0.ml[124,4369+8]..[124,4369+28]) ghost
                                    Pexp_tuple
                                    [
                                      expression (src/lr0.ml[124,4369+8]..[124,4369+20])
                                        Pexp_tuple
                                        [
                                          expression (src/lr0.ml[124,4369+9]..[124,4369+13])
                                            Pexp_ident "toks" (src/lr0.ml[124,4369+9]..[124,4369+13])
                                          expression (src/lr0.ml[124,4369+15]..[124,4369+19])
                                            Pexp_ident "prod" (src/lr0.ml[124,4369+15]..[124,4369+19])
                                        ]
                                      expression (src/lr0.ml[124,4369+24]..[124,4369+28])
                                        Pexp_ident "accu" (src/lr0.ml[124,4369+24]..[124,4369+28])
                                    ]
                            <case>
                              pattern (src/lr0.ml[125,4398+6]..[125,4398+18])
                                Ppat_construct "Item.Shift" (src/lr0.ml[125,4398+6]..[125,4398+16])
                                Some
                                  []
                                  pattern (src/lr0.ml[125,4398+17]..[125,4398+18])
                                    Ppat_any
                              expression (src/lr0.ml[126,4420+8]..[126,4420+12])
                                Pexp_ident "accu" (src/lr0.ml[126,4420+8]..[126,4420+12])
                          ]
                <arg>
                Nolabel
                  expression (src/lr0.ml[127,4433+4]..[127,4433+9])
                    Pexp_ident "state" (src/lr0.ml[127,4433+4]..[127,4433+9])
                <arg>
                Nolabel
                  expression (src/lr0.ml[127,4433+10]..[127,4433+12])
                    Pexp_construct "[]" (src/lr0.ml[127,4433+10]..[127,4433+12])
                    None
              ]
            core_type (src/lr0.ml[120,4198+41]..[120,4198+69])
              Ptyp_constr "list" (src/lr0.ml[120,4198+65]..[120,4198+69])
              [
                core_type (src/lr0.ml[120,4198+42]..[120,4198+63])
                  Ptyp_tuple
                  [
                    core_type (src/lr0.ml[120,4198+42]..[120,4198+44])
                      Ptyp_var a
                    core_type (src/lr0.ml[120,4198+47]..[120,4198+63])
                      Ptyp_constr "Production.index" (src/lr0.ml[120,4198+47]..[120,4198+63])
                      []
                  ]
              ]
    ]
  structure_item (src/lr0.ml[134,4614+0]..[135,4626+7])
    Pstr_type Rec
    [
      type_declaration "node" (src/lr0.ml[134,4614+5]..[134,4614+9]) (src/lr0.ml[134,4614+0]..[135,4626+7])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/lr0.ml[135,4626+4]..[135,4626+7])
              Ptyp_constr "int" (src/lr0.ml[135,4626+4]..[135,4626+7])
              []
    ]
  structure_item (src/lr0.ml[143,4930+0]..[144,4964+36])
    Pstr_type Rec
    [
      type_declaration "symbolic_transition_target" (src/lr0.ml[143,4930+5]..[143,4930+31]) (src/lr0.ml[143,4930+0]..[144,4964+36])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/lr0.ml[144,4964+4]..[144,4964+36])
              Ptyp_tuple
              [
                core_type (src/lr0.ml[144,4964+4]..[144,4964+8])
                  Ptyp_constr "node" (src/lr0.ml[144,4964+4]..[144,4964+8])
                  []
                core_type (src/lr0.ml[144,4964+11]..[144,4964+36])
                  Ptyp_constr "array" (src/lr0.ml[144,4964+31]..[144,4964+36])
                  [
                    core_type (src/lr0.ml[144,4964+11]..[144,4964+30])
                      Ptyp_constr "SymbolicLookahead.t" (src/lr0.ml[144,4964+11]..[144,4964+30])
                      []
                  ]
              ]
    ]
  structure_item (src/lr0.ml[151,5258+0]..[152,5266+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[151,5258+4]..[151,5258+5])
          Ppat_var "n" (src/lr0.ml[151,5258+4]..[151,5258+5])
        expression (src/lr0.ml[152,5266+2]..[152,5266+7])
          Pexp_apply
          expression (src/lr0.ml[152,5266+2]..[152,5266+5])
            Pexp_ident "ref" (src/lr0.ml[152,5266+2]..[152,5266+5])
          [
            <arg>
            Nolabel
              expression (src/lr0.ml[152,5266+6]..[152,5266+7])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (src/lr0.ml[154,5275+0]..[155,5317+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[154,5275+4]..[154,5275+10])
          Ppat_var "states" (src/lr0.ml[154,5275+4]..[154,5275+10])
        core_type (src/lr0.ml[154,5275+13]..[154,5275+39])
          Ptyp_constr "InfiniteArray.t" (src/lr0.ml[154,5275+24]..[154,5275+39])
          [
            core_type (src/lr0.ml[154,5275+13]..[154,5275+23])
              Ptyp_constr "Item.Set.t" (src/lr0.ml[154,5275+13]..[154,5275+23])
              []
          ]
        expression (src/lr0.ml[155,5317+2]..[155,5317+35])
          Pexp_apply
          expression (src/lr0.ml[155,5317+2]..[155,5317+20])
            Pexp_ident "InfiniteArray.make" (src/lr0.ml[155,5317+2]..[155,5317+20])
          [
            <arg>
            Nolabel
              expression (src/lr0.ml[155,5317+21]..[155,5317+35])
                Pexp_ident "Item.Set.empty" (src/lr0.ml[155,5317+21]..[155,5317+35])
          ]
    ]
  structure_item (src/lr0.ml[157,5354+0]..[158,5430+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[157,5354+4]..[157,5354+16])
          Ppat_var "_transitions" (src/lr0.ml[157,5354+4]..[157,5354+16])
        core_type (src/lr0.ml[157,5354+19]..[157,5354+73])
          Ptyp_constr "InfiniteArray.t" (src/lr0.ml[157,5354+58]..[157,5354+73])
          [
            core_type (src/lr0.ml[157,5354+19]..[157,5354+57])
              Ptyp_constr "SymbolMap.t" (src/lr0.ml[157,5354+46]..[157,5354+57])
              [
                core_type (src/lr0.ml[157,5354+19]..[157,5354+45])
                  Ptyp_constr "symbolic_transition_target" (src/lr0.ml[157,5354+19]..[157,5354+45])
                  []
              ]
          ]
        expression (src/lr0.ml[158,5430+2]..[158,5430+36])
          Pexp_apply
          expression (src/lr0.ml[158,5430+2]..[158,5430+20])
            Pexp_ident "InfiniteArray.make" (src/lr0.ml[158,5430+2]..[158,5430+20])
          [
            <arg>
            Nolabel
              expression (src/lr0.ml[158,5430+21]..[158,5430+36])
                Pexp_ident "SymbolMap.empty" (src/lr0.ml[158,5430+21]..[158,5430+36])
          ]
    ]
  structure_item (src/lr0.ml[160,5468+0]..[161,5550+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[160,5468+4]..[160,5468+15])
          Ppat_var "_reductions" (src/lr0.ml[160,5468+4]..[160,5468+15])
        core_type (src/lr0.ml[160,5468+18]..[160,5468+79])
          Ptyp_constr "InfiniteArray.t" (src/lr0.ml[160,5468+64]..[160,5468+79])
          [
            core_type (src/lr0.ml[160,5468+18]..[160,5468+63])
              Ptyp_constr "list" (src/lr0.ml[160,5468+59]..[160,5468+63])
              [
                core_type (src/lr0.ml[160,5468+19]..[160,5468+57])
                  Ptyp_tuple
                  [
                    core_type (src/lr0.ml[160,5468+19]..[160,5468+38])
                      Ptyp_constr "SymbolicLookahead.t" (src/lr0.ml[160,5468+19]..[160,5468+38])
                      []
                    core_type (src/lr0.ml[160,5468+41]..[160,5468+57])
                      Ptyp_constr "Production.index" (src/lr0.ml[160,5468+41]..[160,5468+57])
                      []
                  ]
              ]
          ]
        expression (src/lr0.ml[161,5550+2]..[161,5550+23])
          Pexp_apply
          expression (src/lr0.ml[161,5550+2]..[161,5550+20])
            Pexp_ident "InfiniteArray.make" (src/lr0.ml[161,5550+2]..[161,5550+20])
          [
            <arg>
            Nolabel
              expression (src/lr0.ml[161,5550+21]..[161,5550+23])
                Pexp_construct "[]" (src/lr0.ml[161,5550+21]..[161,5550+23])
                None
          ]
    ]
  structure_item (src/lr0.ml[163,5575+0]..[164,5616+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[163,5575+4]..[163,5575+7])
          Ppat_var "map" (src/lr0.ml[163,5575+4]..[163,5575+7])
        core_type (src/lr0.ml[163,5575+10]..[163,5575+38])
          Ptyp_constr "Hashtbl.t" (src/lr0.ml[163,5575+29]..[163,5575+38])
          [
            core_type (src/lr0.ml[163,5575+11]..[163,5575+21])
              Ptyp_constr "Item.Set.t" (src/lr0.ml[163,5575+11]..[163,5575+21])
              []
            core_type (src/lr0.ml[163,5575+23]..[163,5575+27])
              Ptyp_constr "node" (src/lr0.ml[163,5575+23]..[163,5575+27])
              []
          ]
        expression (src/lr0.ml[164,5616+2]..[164,5616+22])
          Pexp_apply
          expression (src/lr0.ml[164,5616+2]..[164,5616+16])
            Pexp_ident "Hashtbl.create" (src/lr0.ml[164,5616+2]..[164,5616+16])
          [
            <arg>
            Nolabel
              expression (src/lr0.ml[164,5616+17]..[164,5616+22])
                Pexp_constant PConst_int (50021,None)
          ]
    ]
  structure_item (src/lr0.ml[166,5640+0]..[167,5689+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[166,5640+4]..[166,5640+12])
          Ppat_var "incoming" (src/lr0.ml[166,5640+4]..[166,5640+12])
        core_type (src/lr0.ml[166,5640+15]..[166,5640+46])
          Ptyp_constr "InfiniteArray.t" (src/lr0.ml[166,5640+31]..[166,5640+46])
          [
            core_type (src/lr0.ml[166,5640+15]..[166,5640+30])
              Ptyp_constr "option" (src/lr0.ml[166,5640+24]..[166,5640+30])
              [
                core_type (src/lr0.ml[166,5640+15]..[166,5640+23])
                  Ptyp_constr "Symbol.t" (src/lr0.ml[166,5640+15]..[166,5640+23])
                  []
              ]
          ]
        expression (src/lr0.ml[167,5689+2]..[167,5689+25])
          Pexp_apply
          expression (src/lr0.ml[167,5689+2]..[167,5689+20])
            Pexp_ident "InfiniteArray.make" (src/lr0.ml[167,5689+2]..[167,5689+20])
          [
            <arg>
            Nolabel
              expression (src/lr0.ml[167,5689+21]..[167,5689+25])
                Pexp_construct "None" (src/lr0.ml[167,5689+21]..[167,5689+25])
                None
          ]
    ]
  structure_item (src/lr0.ml[171,5759+0]..[222,7457+5])
    Pstr_value Rec
    [
      <def>
        pattern (src/lr0.ml[171,5759+8]..[171,5759+15])
          Ppat_var "explore" (src/lr0.ml[171,5759+8]..[171,5759+15])
        expression (src/lr0.ml[171,5759+16]..[222,7457+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[171,5759+16]..[171,5759+42])
            Ppat_constraint
            pattern (src/lr0.ml[171,5759+17]..[171,5759+23])
              Ppat_var "symbol" (src/lr0.ml[171,5759+17]..[171,5759+23])
            core_type (src/lr0.ml[171,5759+26]..[171,5759+41])
              Ptyp_constr "option" (src/lr0.ml[171,5759+35]..[171,5759+41])
              [
                core_type (src/lr0.ml[171,5759+26]..[171,5759+34])
                  Ptyp_constr "Symbol.t" (src/lr0.ml[171,5759+26]..[171,5759+34])
                  []
              ]
          expression (src/lr0.ml[171,5759+43]..[222,7457+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/lr0.ml[171,5759+43]..[171,5759+63])
              Ppat_constraint
              pattern (src/lr0.ml[171,5759+44]..[171,5759+49])
                Ppat_var "state" (src/lr0.ml[171,5759+44]..[171,5759+49])
              core_type (src/lr0.ml[171,5759+52]..[171,5759+62])
                Ptyp_constr "Item.Set.t" (src/lr0.ml[171,5759+52]..[171,5759+62])
                []
            expression (src/lr0.ml[171,5759+64]..[222,7457+5])
              Pexp_constraint
              expression (src/lr0.ml[175,5892+2]..[222,7457+5])
                Pexp_try
                expression (src/lr0.ml[176,5898+4]..[176,5898+26])
                  Pexp_apply
                  expression (src/lr0.ml[176,5898+4]..[176,5898+16])
                    Pexp_ident "Hashtbl.find" (src/lr0.ml[176,5898+4]..[176,5898+16])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[176,5898+17]..[176,5898+20])
                        Pexp_ident "map" (src/lr0.ml[176,5898+17]..[176,5898+20])
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[176,5898+21]..[176,5898+26])
                        Pexp_ident "state" (src/lr0.ml[176,5898+21]..[176,5898+26])
                  ]
                [
                  <case>
                    pattern (src/lr0.ml[177,5925+7]..[177,5925+16])
                      Ppat_construct "Not_found" (src/lr0.ml[177,5925+7]..[177,5925+16])
                      None
                    expression (src/lr0.ml[181,5984+4]..[222,7457+5])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/lr0.ml[181,5984+8]..[181,5984+9])
                            Ppat_var "k" (src/lr0.ml[181,5984+8]..[181,5984+9])
                          expression (src/lr0.ml[181,5984+12]..[181,5984+14])
                            Pexp_apply
                            expression (src/lr0.ml[181,5984+12]..[181,5984+13])
                              Pexp_ident "!" (src/lr0.ml[181,5984+12]..[181,5984+13])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[181,5984+13]..[181,5984+14])
                                  Pexp_ident "n" (src/lr0.ml[181,5984+13]..[181,5984+14])
                            ]
                      ]
                      expression (src/lr0.ml[182,6002+4]..[222,7457+5])
                        Pexp_sequence
                        expression (src/lr0.ml[182,6002+4]..[182,6002+14])
                          Pexp_apply
                          expression (src/lr0.ml[182,6002+6]..[182,6002+8])
                            Pexp_ident ":=" (src/lr0.ml[182,6002+6]..[182,6002+8])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[182,6002+4]..[182,6002+5])
                                Pexp_ident "n" (src/lr0.ml[182,6002+4]..[182,6002+5])
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[182,6002+9]..[182,6002+14])
                                Pexp_apply
                                expression (src/lr0.ml[182,6002+11]..[182,6002+12])
                                  Pexp_ident "+" (src/lr0.ml[182,6002+11]..[182,6002+12])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[182,6002+9]..[182,6002+10])
                                      Pexp_ident "k" (src/lr0.ml[182,6002+9]..[182,6002+10])
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[182,6002+13]..[182,6002+14])
                                      Pexp_constant PConst_int (1,None)
                                ]
                          ]
                        expression (src/lr0.ml[183,6018+4]..[222,7457+5])
                          Pexp_sequence
                          expression (src/lr0.ml[183,6018+4]..[183,6018+36])
                            Pexp_apply
                            expression (src/lr0.ml[183,6018+4]..[183,6018+21])
                              Pexp_ident "InfiniteArray.set" (src/lr0.ml[183,6018+4]..[183,6018+21])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[183,6018+22]..[183,6018+28])
                                  Pexp_ident "states" (src/lr0.ml[183,6018+22]..[183,6018+28])
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[183,6018+29]..[183,6018+30])
                                  Pexp_ident "k" (src/lr0.ml[183,6018+29]..[183,6018+30])
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[183,6018+31]..[183,6018+36])
                                  Pexp_ident "state" (src/lr0.ml[183,6018+31]..[183,6018+36])
                            ]
                          expression (src/lr0.ml[184,6056+4]..[222,7457+5])
                            Pexp_sequence
                            expression (src/lr0.ml[184,6056+4]..[184,6056+27])
                              Pexp_apply
                              expression (src/lr0.ml[184,6056+4]..[184,6056+15])
                                Pexp_ident "Hashtbl.add" (src/lr0.ml[184,6056+4]..[184,6056+15])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr0.ml[184,6056+16]..[184,6056+19])
                                    Pexp_ident "map" (src/lr0.ml[184,6056+16]..[184,6056+19])
                                <arg>
                                Nolabel
                                  expression (src/lr0.ml[184,6056+20]..[184,6056+25])
                                    Pexp_ident "state" (src/lr0.ml[184,6056+20]..[184,6056+25])
                                <arg>
                                Nolabel
                                  expression (src/lr0.ml[184,6056+26]..[184,6056+27])
                                    Pexp_ident "k" (src/lr0.ml[184,6056+26]..[184,6056+27])
                              ]
                            expression (src/lr0.ml[188,6125+4]..[222,7457+5])
                              Pexp_sequence
                              expression (src/lr0.ml[188,6125+4]..[188,6125+39])
                                Pexp_apply
                                expression (src/lr0.ml[188,6125+4]..[188,6125+21])
                                  Pexp_ident "InfiniteArray.set" (src/lr0.ml[188,6125+4]..[188,6125+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[188,6125+22]..[188,6125+30])
                                      Pexp_ident "incoming" (src/lr0.ml[188,6125+22]..[188,6125+30])
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[188,6125+31]..[188,6125+32])
                                      Pexp_ident "k" (src/lr0.ml[188,6125+31]..[188,6125+32])
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[188,6125+33]..[188,6125+39])
                                      Pexp_ident "symbol" (src/lr0.ml[188,6125+33]..[188,6125+39])
                                ]
                              expression (src/lr0.ml[194,6333+4]..[222,7457+5])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (src/lr0.ml[194,6333+8]..[194,6333+59])
                                      Ppat_tuple
                                      [
                                        pattern (src/lr0.ml[194,6333+8]..[194,6333+17])
                                          Ppat_constraint
                                          pattern (src/lr0.ml[194,6333+9]..[194,6333+10])
                                            Ppat_any
                                          core_type (src/lr0.ml[194,6333+13]..[194,6333+16])
                                            Ptyp_constr "int" (src/lr0.ml[194,6333+13]..[194,6333+16])
                                            []
                                        pattern (src/lr0.ml[194,6333+19]..[194,6333+59])
                                          Ppat_constraint
                                          pattern (src/lr0.ml[194,6333+20]..[194,6333+34])
                                            Ppat_var "symbolic_state" (src/lr0.ml[194,6333+20]..[194,6333+34])
                                          core_type (src/lr0.ml[194,6333+37]..[194,6333+58])
                                            Ptyp_constr "SymbolicClosure.state" (src/lr0.ml[194,6333+37]..[194,6333+58])
                                            []
                                      ]
                                    expression (src/lr0.ml[195,6395+6]..[197,6525+33])
                                      Pexp_apply
                                      expression (src/lr0.ml[195,6395+6]..[195,6395+19])
                                        Pexp_ident "Item.Set.fold" (src/lr0.ml[195,6395+6]..[195,6395+19])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr0.ml[195,6395+20]..[197,6525+7])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (src/lr0.ml[195,6395+25]..[195,6395+29])
                                              Ppat_var "item" (src/lr0.ml[195,6395+25]..[195,6395+29])
                                            expression (src/lr0.ml[195,6395+30]..[196,6448+76]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (src/lr0.ml[195,6395+30]..[195,6395+49])
                                                Ppat_tuple
                                                [
                                                  pattern (src/lr0.ml[195,6395+31]..[195,6395+32])
                                                    Ppat_var "i" (src/lr0.ml[195,6395+31]..[195,6395+32])
                                                  pattern (src/lr0.ml[195,6395+34]..[195,6395+48])
                                                    Ppat_var "symbolic_state" (src/lr0.ml[195,6395+34]..[195,6395+48])
                                                ]
                                              expression (src/lr0.ml[196,6448+8]..[196,6448+76])
                                                Pexp_tuple
                                                [
                                                  expression (src/lr0.ml[196,6448+8]..[196,6448+11])
                                                    Pexp_apply
                                                    expression (src/lr0.ml[196,6448+9]..[196,6448+10])
                                                      Pexp_ident "+" (src/lr0.ml[196,6448+9]..[196,6448+10])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/lr0.ml[196,6448+8]..[196,6448+9])
                                                          Pexp_ident "i" (src/lr0.ml[196,6448+8]..[196,6448+9])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/lr0.ml[196,6448+10]..[196,6448+11])
                                                          Pexp_constant PConst_int (1,None)
                                                    ]
                                                  expression (src/lr0.ml[196,6448+13]..[196,6448+76])
                                                    Pexp_apply
                                                    expression (src/lr0.ml[196,6448+13]..[196,6448+25])
                                                      Pexp_ident "Item.Map.add" (src/lr0.ml[196,6448+13]..[196,6448+25])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/lr0.ml[196,6448+26]..[196,6448+30])
                                                          Pexp_ident "item" (src/lr0.ml[196,6448+26]..[196,6448+30])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/lr0.ml[196,6448+31]..[196,6448+61])
                                                          Pexp_apply
                                                          expression (src/lr0.ml[196,6448+32]..[196,6448+58])
                                                            Pexp_ident "SymbolicLookahead.variable" (src/lr0.ml[196,6448+32]..[196,6448+58])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/lr0.ml[196,6448+59]..[196,6448+60])
                                                                Pexp_ident "i" (src/lr0.ml[196,6448+59]..[196,6448+60])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (src/lr0.ml[196,6448+62]..[196,6448+76])
                                                          Pexp_ident "symbolic_state" (src/lr0.ml[196,6448+62]..[196,6448+76])
                                                    ]
                                                ]
                                        <arg>
                                        Nolabel
                                          expression (src/lr0.ml[197,6525+8]..[197,6525+13])
                                            Pexp_ident "state" (src/lr0.ml[197,6525+8]..[197,6525+13])
                                        <arg>
                                        Nolabel
                                          expression (src/lr0.ml[197,6525+14]..[197,6525+33])
                                            Pexp_tuple
                                            [
                                              expression (src/lr0.ml[197,6525+15]..[197,6525+16])
                                                Pexp_constant PConst_int (0,None)
                                              expression (src/lr0.ml[197,6525+18]..[197,6525+32])
                                                Pexp_ident "Item.Map.empty" (src/lr0.ml[197,6525+18]..[197,6525+32])
                                            ]
                                      ]
                                ]
                                expression (src/lr0.ml[201,6604+4]..[222,7457+5])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/lr0.ml[201,6604+8]..[201,6604+15])
                                        Ppat_var "closure" (src/lr0.ml[201,6604+8]..[201,6604+15])
                                      expression (src/lr0.ml[201,6604+18]..[201,6604+56])
                                        Pexp_apply
                                        expression (src/lr0.ml[201,6604+18]..[201,6604+41])
                                          Pexp_ident "SymbolicClosure.closure" (src/lr0.ml[201,6604+18]..[201,6604+41])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/lr0.ml[201,6604+42]..[201,6604+56])
                                              Pexp_ident "symbolic_state" (src/lr0.ml[201,6604+42]..[201,6604+56])
                                        ]
                                  ]
                                  expression (src/lr0.ml[205,6723+4]..[222,7457+5])
                                    Pexp_sequence
                                    expression (src/lr0.ml[205,6723+4]..[205,6723+56])
                                      Pexp_apply
                                      expression (src/lr0.ml[205,6723+4]..[205,6723+21])
                                        Pexp_ident "InfiniteArray.set" (src/lr0.ml[205,6723+4]..[205,6723+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr0.ml[205,6723+22]..[205,6723+33])
                                            Pexp_ident "_reductions" (src/lr0.ml[205,6723+22]..[205,6723+33])
                                        <arg>
                                        Nolabel
                                          expression (src/lr0.ml[205,6723+34]..[205,6723+35])
                                            Pexp_ident "k" (src/lr0.ml[205,6723+34]..[205,6723+35])
                                        <arg>
                                        Nolabel
                                          expression (src/lr0.ml[205,6723+36]..[205,6723+56])
                                            Pexp_apply
                                            expression (src/lr0.ml[205,6723+37]..[205,6723+47])
                                              Pexp_ident "reductions" (src/lr0.ml[205,6723+37]..[205,6723+47])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/lr0.ml[205,6723+48]..[205,6723+55])
                                                  Pexp_ident "closure" (src/lr0.ml[205,6723+48]..[205,6723+55])
                                            ]
                                      ]
                                    expression (src/lr0.ml[211,6961+4]..[222,7457+5])
                                      Pexp_sequence
                                      expression (src/lr0.ml[211,6961+4]..[220,7426+28])
                                        Pexp_apply
                                        expression (src/lr0.ml[211,6961+4]..[211,6961+21])
                                          Pexp_ident "InfiniteArray.set" (src/lr0.ml[211,6961+4]..[211,6961+21])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/lr0.ml[211,6961+22]..[211,6961+34])
                                              Pexp_ident "_transitions" (src/lr0.ml[211,6961+22]..[211,6961+34])
                                          <arg>
                                          Nolabel
                                            expression (src/lr0.ml[211,6961+35]..[211,6961+36])
                                              Pexp_ident "k" (src/lr0.ml[211,6961+35]..[211,6961+36])
                                          <arg>
                                          Nolabel
                                            expression (src/lr0.ml[211,6961+37]..[220,7426+28])
                                              Pexp_apply
                                              expression (src/lr0.ml[211,6961+38]..[211,6961+52])
                                                Pexp_ident "SymbolMap.mapi" (src/lr0.ml[211,6961+38]..[211,6961+52])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/lr0.ml[211,6961+53]..[220,7426+5])
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (src/lr0.ml[211,6961+58]..[211,6961+64])
                                                      Ppat_var "symbol" (src/lr0.ml[211,6961+58]..[211,6961+64])
                                                    expression (src/lr0.ml[211,6961+65]..[219,7374+51]) ghost
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (src/lr0.ml[211,6961+65]..[211,6961+79])
                                                        Ppat_var "symbolic_state" (src/lr0.ml[211,6961+65]..[211,6961+79])
                                                      expression (src/lr0.ml[212,7044+6]..[219,7374+51])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (src/lr0.ml[212,7044+10]..[212,7044+20])
                                                              Ppat_constraint
                                                              pattern (src/lr0.ml[212,7044+11]..[212,7044+12])
                                                                Ppat_var "k" (src/lr0.ml[212,7044+11]..[212,7044+12])
                                                              core_type (src/lr0.ml[212,7044+15]..[212,7044+19])
                                                                Ptyp_constr "node" (src/lr0.ml[212,7044+15]..[212,7044+19])
                                                                []
                                                            expression (src/lr0.ml[212,7044+23]..[212,7044+77])
                                                              Pexp_apply
                                                              expression (src/lr0.ml[212,7044+23]..[212,7044+30])
                                                                Pexp_ident "explore" (src/lr0.ml[212,7044+23]..[212,7044+30])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/lr0.ml[212,7044+31]..[212,7044+44])
                                                                    Pexp_construct "Some" (src/lr0.ml[212,7044+32]..[212,7044+36])
                                                                    Some
                                                                      expression (src/lr0.ml[212,7044+37]..[212,7044+43])
Pexp_ident "symbol" (src/lr0.ml[212,7044+37]..[212,7044+43])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/lr0.ml[212,7044+45]..[212,7044+77])
                                                                    Pexp_apply
                                                                    expression (src/lr0.ml[212,7044+46]..[212,7044+61])
                                                                      Pexp_ident "Item.Map.domain" (src/lr0.ml[212,7044+46]..[212,7044+61])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/lr0.ml[212,7044+62]..[212,7044+76])
  Pexp_ident "symbolic_state" (src/lr0.ml[212,7044+62]..[212,7044+76])
                                                                    ]
                                                              ]
                                                        ]
                                                        expression (src/lr0.ml[213,7125+6]..[219,7374+51])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (src/lr0.ml[213,7125+10]..[213,7125+19])
                                                                Ppat_var "lookahead" (src/lr0.ml[213,7125+10]..[213,7125+19])
                                                              core_type (src/lr0.ml[213,7125+22]..[213,7125+47])
                                                                Ptyp_constr "array" (src/lr0.ml[213,7125+42]..[213,7125+47])
                                                                [
                                                                  core_type (src/lr0.ml[213,7125+22]..[213,7125+41])
                                                                    Ptyp_constr "SymbolicLookahead.t" (src/lr0.ml[213,7125+22]..[213,7125+41])
                                                                    []
                                                                ]
                                                              expression (src/lr0.ml[214,7175+8]..[214,7175+77])
                                                                Pexp_apply
                                                                expression (src/lr0.ml[214,7175+8]..[214,7175+18])
                                                                  Pexp_ident "Array.make" (src/lr0.ml[214,7175+8]..[214,7175+18])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr0.ml[214,7175+19]..[214,7175+53])
                                                                      Pexp_apply
                                                                      expression (src/lr0.ml[214,7175+20]..[214,7175+37])
Pexp_ident "Item.Map.cardinal" (src/lr0.ml[214,7175+20]..[214,7175+37])
                                                                      [
<arg>
Nolabel
  expression (src/lr0.ml[214,7175+38]..[214,7175+52])
    Pexp_ident "symbolic_state" (src/lr0.ml[214,7175+38]..[214,7175+52])
                                                                      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr0.ml[214,7175+54]..[214,7175+77])
                                                                      Pexp_ident "SymbolicLookahead.empty" (src/lr0.ml[214,7175+54]..[214,7175+77])
                                                                ]
                                                          ]
                                                          expression (src/lr0.ml[215,7256+6]..[219,7374+51])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (src/lr0.ml[215,7256+10]..[215,7256+19])
                                                                  Ppat_constraint
                                                                  pattern (src/lr0.ml[215,7256+11]..[215,7256+12])
                                                                    Ppat_any
                                                                  core_type (src/lr0.ml[215,7256+15]..[215,7256+18])
                                                                    Ptyp_constr "int" (src/lr0.ml[215,7256+15]..[215,7256+18])
                                                                    []
                                                                expression (src/lr0.ml[215,7256+22]..[218,7346+24])
                                                                  Pexp_apply
                                                                  expression (src/lr0.ml[215,7256+22]..[215,7256+35])
                                                                    Pexp_ident "Item.Map.fold" (src/lr0.ml[215,7256+22]..[215,7256+35])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/lr0.ml[215,7256+36]..[218,7346+7])
Pexp_fun
Nolabel
None
pattern (src/lr0.ml[215,7256+41]..[215,7256+42])
  Ppat_any
expression (src/lr0.ml[215,7256+43]..[217,7334+11]) ghost
  Pexp_fun
  Nolabel
  None
  pattern (src/lr0.ml[215,7256+43]..[215,7256+44])
    Ppat_var "s" (src/lr0.ml[215,7256+43]..[215,7256+44])
  expression (src/lr0.ml[215,7256+45]..[217,7334+11]) ghost
    Pexp_fun
    Nolabel
    None
    pattern (src/lr0.ml[215,7256+45]..[215,7256+46])
      Ppat_var "i" (src/lr0.ml[215,7256+45]..[215,7256+46])
    expression (src/lr0.ml[216,7306+8]..[217,7334+11])
      Pexp_sequence
      expression (src/lr0.ml[216,7306+8]..[216,7306+26])
        Pexp_apply
        expression (src/lr0.ml[216,7306+8]..[216,7306+26]) ghost
          Pexp_ident "Array.set" (src/lr0.ml[216,7306+8]..[216,7306+26]) ghost
        [
          <arg>
          Nolabel
            expression (src/lr0.ml[216,7306+8]..[216,7306+17])
              Pexp_ident "lookahead" (src/lr0.ml[216,7306+8]..[216,7306+17])
          <arg>
          Nolabel
            expression (src/lr0.ml[216,7306+19]..[216,7306+20])
              Pexp_ident "i" (src/lr0.ml[216,7306+19]..[216,7306+20])
          <arg>
          Nolabel
            expression (src/lr0.ml[216,7306+25]..[216,7306+26])
              Pexp_ident "s" (src/lr0.ml[216,7306+25]..[216,7306+26])
        ]
      expression (src/lr0.ml[217,7334+8]..[217,7334+11])
        Pexp_apply
        expression (src/lr0.ml[217,7334+9]..[217,7334+10])
          Pexp_ident "+" (src/lr0.ml[217,7334+9]..[217,7334+10])
        [
          <arg>
          Nolabel
            expression (src/lr0.ml[217,7334+8]..[217,7334+9])
              Pexp_ident "i" (src/lr0.ml[217,7334+8]..[217,7334+9])
          <arg>
          Nolabel
            expression (src/lr0.ml[217,7334+10]..[217,7334+11])
              Pexp_constant PConst_int (1,None)
        ]
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/lr0.ml[218,7346+8]..[218,7346+22])
Pexp_ident "symbolic_state" (src/lr0.ml[218,7346+8]..[218,7346+22])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/lr0.ml[218,7346+23]..[218,7346+24])
Pexp_constant PConst_int (0,None)
                                                                  ]
                                                            ]
                                                            expression (src/lr0.ml[219,7374+6]..[219,7374+51])
                                                              Pexp_constraint
                                                              expression (src/lr0.ml[219,7374+7]..[219,7374+21])
                                                                Pexp_tuple
                                                                [
                                                                  expression (src/lr0.ml[219,7374+8]..[219,7374+9])
                                                                    Pexp_ident "k" (src/lr0.ml[219,7374+8]..[219,7374+9])
                                                                  expression (src/lr0.ml[219,7374+11]..[219,7374+20])
                                                                    Pexp_ident "lookahead" (src/lr0.ml[219,7374+11]..[219,7374+20])
                                                                ]
                                                              core_type (src/lr0.ml[219,7374+24]..[219,7374+50])
                                                                Ptyp_constr "symbolic_transition_target" (src/lr0.ml[219,7374+24]..[219,7374+50])
                                                                []
                                                <arg>
                                                Nolabel
                                                  expression (src/lr0.ml[220,7426+6]..[220,7426+27])
                                                    Pexp_apply
                                                    expression (src/lr0.ml[220,7426+7]..[220,7426+18])
                                                      Pexp_ident "transitions" (src/lr0.ml[220,7426+7]..[220,7426+18])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/lr0.ml[220,7426+19]..[220,7426+26])
                                                          Pexp_ident "closure" (src/lr0.ml[220,7426+19]..[220,7426+26])
                                                    ]
                                              ]
                                        ]
                                      expression (src/lr0.ml[222,7457+4]..[222,7457+5])
                                        Pexp_ident "k" (src/lr0.ml[222,7457+4]..[222,7457+5])
                ]
              core_type (src/lr0.ml[171,5759+66]..[171,5759+70])
                Ptyp_constr "node" (src/lr0.ml[171,5759+66]..[171,5759+70])
                []
    ]
  structure_item (src/lr0.ml[227,7602+0]..[228,7632+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[227,7602+4]..[227,7602+9])
          Ppat_var "start" (src/lr0.ml[227,7602+4]..[227,7602+9])
        expression (src/lr0.ml[227,7602+10]..[228,7632+45]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[227,7602+10]..[227,7602+14])
            Ppat_var "prod" (src/lr0.ml[227,7602+10]..[227,7602+14])
          expression (src/lr0.ml[227,7602+15]..[228,7632+45])
            Pexp_constraint
            expression (src/lr0.ml[228,7632+3]..[228,7632+45])
              Pexp_apply
              expression (src/lr0.ml[228,7632+3]..[228,7632+21])
                Pexp_ident "Item.Set.singleton" (src/lr0.ml[228,7632+3]..[228,7632+21])
              [
                <arg>
                Nolabel
                  expression (src/lr0.ml[228,7632+22]..[228,7632+45])
                    Pexp_apply
                    expression (src/lr0.ml[228,7632+23]..[228,7632+34])
                      Pexp_ident "Item.import" (src/lr0.ml[228,7632+23]..[228,7632+34])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr0.ml[228,7632+35]..[228,7632+44])
                          Pexp_tuple
                          [
                            expression (src/lr0.ml[228,7632+36]..[228,7632+40])
                              Pexp_ident "prod" (src/lr0.ml[228,7632+36]..[228,7632+40])
                            expression (src/lr0.ml[228,7632+42]..[228,7632+43])
                              Pexp_constant PConst_int (0,None)
                          ]
                    ]
              ]
            core_type (src/lr0.ml[227,7602+17]..[227,7602+27])
              Ptyp_constr "Item.Set.t" (src/lr0.ml[227,7602+17]..[227,7602+27])
              []
    ]
  structure_item (src/lr0.ml[233,7776+0]..[236,7876+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[233,7776+4]..[233,7776+9])
          Ppat_var "entry" (src/lr0.ml[233,7776+4]..[233,7776+9])
        core_type (src/lr0.ml[233,7776+12]..[233,7776+32])
          Ptyp_constr "ProductionMap.t" (src/lr0.ml[233,7776+17]..[233,7776+32])
          [
            core_type (src/lr0.ml[233,7776+12]..[233,7776+16])
              Ptyp_constr "node" (src/lr0.ml[233,7776+12]..[233,7776+16])
              []
          ]
        expression (src/lr0.ml[234,7811+2]..[236,7876+3])
          Pexp_apply
          expression (src/lr0.ml[234,7811+2]..[234,7811+21])
            Pexp_ident "ProductionMap.start" (src/lr0.ml[234,7811+2]..[234,7811+21])
          [
            <arg>
            Nolabel
              expression (src/lr0.ml[234,7811+22]..[236,7876+3])
                Pexp_fun
                Nolabel
                None
                pattern (src/lr0.ml[234,7811+27]..[234,7811+31])
                  Ppat_var "prod" (src/lr0.ml[234,7811+27]..[234,7811+31])
                expression (src/lr0.ml[235,7846+4]..[235,7846+29])
                  Pexp_apply
                  expression (src/lr0.ml[235,7846+4]..[235,7846+11])
                    Pexp_ident "explore" (src/lr0.ml[235,7846+4]..[235,7846+11])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[235,7846+12]..[235,7846+16])
                        Pexp_construct "None" (src/lr0.ml[235,7846+12]..[235,7846+16])
                        None
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[235,7846+17]..[235,7846+29])
                        Pexp_apply
                        expression (src/lr0.ml[235,7846+18]..[235,7846+23])
                          Pexp_ident "start" (src/lr0.ml[235,7846+18]..[235,7846+23])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr0.ml[235,7846+24]..[235,7846+28])
                              Pexp_ident "prod" (src/lr0.ml[235,7846+24]..[235,7846+28])
                        ]
                  ]
          ]
    ]
  structure_item (src/lr0.ml[238,7881+0]..[239,7890+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[238,7881+4]..[238,7881+6])
          Ppat_construct "()" (src/lr0.ml[238,7881+4]..[238,7881+6])
          None
        expression (src/lr0.ml[239,7890+2]..[239,7890+19])
          Pexp_apply
          expression (src/lr0.ml[239,7890+2]..[239,7890+15])
            Pexp_ident "Hashtbl.clear" (src/lr0.ml[239,7890+2]..[239,7890+15])
          [
            <arg>
            Nolabel
              expression (src/lr0.ml[239,7890+16]..[239,7890+19])
                Pexp_ident "map" (src/lr0.ml[239,7890+16]..[239,7890+19])
          ]
    ]
  structure_item (src/lr0.ml[241,7911+0]..[242,7919+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[241,7911+4]..[241,7911+5])
          Ppat_var "n" (src/lr0.ml[241,7911+4]..[241,7911+5])
        expression (src/lr0.ml[242,7919+2]..[242,7919+4])
          Pexp_apply
          expression (src/lr0.ml[242,7919+2]..[242,7919+3])
            Pexp_ident "!" (src/lr0.ml[242,7919+2]..[242,7919+3])
          [
            <arg>
            Nolabel
              expression (src/lr0.ml[242,7919+3]..[242,7919+4])
                Pexp_ident "n" (src/lr0.ml[242,7919+3]..[242,7919+4])
          ]
    ]
  structure_item (src/lr0.ml[244,7925+0]..[246,8025+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[244,7925+4]..[244,7925+6])
          Ppat_construct "()" (src/lr0.ml[244,7925+4]..[244,7925+6])
          None
        expression (src/lr0.ml[245,7934+2]..[246,8025+49])
          Pexp_sequence
          expression (src/lr0.ml[245,7934+2]..[245,7934+89])
            Pexp_apply
            expression (src/lr0.ml[245,7934+2]..[245,7934+12])
              Pexp_ident "Error.logA" (src/lr0.ml[245,7934+2]..[245,7934+12])
            [
              <arg>
              Nolabel
                expression (src/lr0.ml[245,7934+13]..[245,7934+14])
                  Pexp_constant PConst_int (1,None)
              <arg>
              Nolabel
                expression (src/lr0.ml[245,7934+15]..[245,7934+89])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/lr0.ml[245,7934+20]..[245,7934+21])
                    Ppat_var "f" (src/lr0.ml[245,7934+20]..[245,7934+21])
                  expression (src/lr0.ml[245,7934+25]..[245,7934+88])
                    Pexp_apply
                    expression (src/lr0.ml[245,7934+25]..[245,7934+39])
                      Pexp_ident "Printf.fprintf" (src/lr0.ml[245,7934+25]..[245,7934+39])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr0.ml[245,7934+40]..[245,7934+41])
                          Pexp_ident "f" (src/lr0.ml[245,7934+40]..[245,7934+41])
                      <arg>
                      Nolabel
                        expression (src/lr0.ml[245,7934+42]..[245,7934+86])
                          Pexp_constant PConst_string("Built an LR(0) automaton with %d states.\n",(src/lr0.ml[245,7934+43]..[245,7934+85]),None)
                      <arg>
                      Nolabel
                        expression (src/lr0.ml[245,7934+87]..[245,7934+88])
                          Pexp_ident "n" (src/lr0.ml[245,7934+87]..[245,7934+88])
                    ]
            ]
          expression (src/lr0.ml[246,8025+2]..[246,8025+49])
            Pexp_apply
            expression (src/lr0.ml[246,8025+2]..[246,8025+11])
              Pexp_ident "Time.tick" (src/lr0.ml[246,8025+2]..[246,8025+11])
            [
              <arg>
              Nolabel
                expression (src/lr0.ml[246,8025+12]..[246,8025+49])
                  Pexp_constant PConst_string("Construction of the LR(0) automaton",(src/lr0.ml[246,8025+13]..[246,8025+48]),None)
            ]
    ]
  structure_item (src/lr0.ml[251,8173+0]..[252,8203+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[251,8173+4]..[251,8173+9])
          Ppat_var "items" (src/lr0.ml[251,8173+4]..[251,8173+9])
        expression (src/lr0.ml[251,8173+10]..[252,8203+31]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[251,8173+10]..[251,8173+14])
            Ppat_var "node" (src/lr0.ml[251,8173+10]..[251,8173+14])
          expression (src/lr0.ml[251,8173+15]..[252,8203+31])
            Pexp_constraint
            expression (src/lr0.ml[252,8203+2]..[252,8203+31])
              Pexp_apply
              expression (src/lr0.ml[252,8203+2]..[252,8203+19])
                Pexp_ident "InfiniteArray.get" (src/lr0.ml[252,8203+2]..[252,8203+19])
              [
                <arg>
                Nolabel
                  expression (src/lr0.ml[252,8203+20]..[252,8203+26])
                    Pexp_ident "states" (src/lr0.ml[252,8203+20]..[252,8203+26])
                <arg>
                Nolabel
                  expression (src/lr0.ml[252,8203+27]..[252,8203+31])
                    Pexp_ident "node" (src/lr0.ml[252,8203+27]..[252,8203+31])
              ]
            core_type (src/lr0.ml[251,8173+17]..[251,8173+27])
              Ptyp_constr "Item.Set.t" (src/lr0.ml[251,8173+17]..[251,8173+27])
              []
    ]
  structure_item (src/lr0.ml[254,8236+0]..[255,8281+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[254,8236+4]..[254,8236+19])
          Ppat_var "incoming_symbol" (src/lr0.ml[254,8236+4]..[254,8236+19])
        expression (src/lr0.ml[254,8236+20]..[255,8281+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[254,8236+20]..[254,8236+24])
            Ppat_var "node" (src/lr0.ml[254,8236+20]..[254,8236+24])
          expression (src/lr0.ml[254,8236+25]..[255,8281+33])
            Pexp_constraint
            expression (src/lr0.ml[255,8281+2]..[255,8281+33])
              Pexp_apply
              expression (src/lr0.ml[255,8281+2]..[255,8281+19])
                Pexp_ident "InfiniteArray.get" (src/lr0.ml[255,8281+2]..[255,8281+19])
              [
                <arg>
                Nolabel
                  expression (src/lr0.ml[255,8281+20]..[255,8281+28])
                    Pexp_ident "incoming" (src/lr0.ml[255,8281+20]..[255,8281+28])
                <arg>
                Nolabel
                  expression (src/lr0.ml[255,8281+29]..[255,8281+33])
                    Pexp_ident "node" (src/lr0.ml[255,8281+29]..[255,8281+33])
              ]
            core_type (src/lr0.ml[254,8236+27]..[254,8236+42])
              Ptyp_constr "option" (src/lr0.ml[254,8236+36]..[254,8236+42])
              [
                core_type (src/lr0.ml[254,8236+27]..[254,8236+35])
                  Ptyp_constr "Symbol.t" (src/lr0.ml[254,8236+27]..[254,8236+35])
                  []
              ]
    ]
  structure_item (src/lr0.ml[257,8316+0]..[260,8409+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[257,8316+4]..[257,8316+18])
          Ppat_var "outgoing_edges" (src/lr0.ml[257,8316+4]..[257,8316+18])
        expression (src/lr0.ml[257,8316+19]..[260,8409+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[257,8316+19]..[257,8316+23])
            Ppat_var "node" (src/lr0.ml[257,8316+19]..[257,8316+23])
          expression (src/lr0.ml[257,8316+24]..[260,8409+41])
            Pexp_constraint
            expression (src/lr0.ml[258,8361+2]..[260,8409+41])
              Pexp_apply
              expression (src/lr0.ml[258,8361+2]..[258,8361+15])
                Pexp_ident "SymbolMap.map" (src/lr0.ml[258,8361+2]..[258,8361+15])
              [
                <arg>
                Nolabel
                  expression (src/lr0.ml[259,8377+4]..[259,8377+31])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/lr0.ml[259,8377+9]..[259,8377+20])
                      Ppat_tuple
                      [
                        pattern (src/lr0.ml[259,8377+10]..[259,8377+16])
                          Ppat_var "target" (src/lr0.ml[259,8377+10]..[259,8377+16])
                        pattern (src/lr0.ml[259,8377+18]..[259,8377+19])
                          Ppat_any
                      ]
                    expression (src/lr0.ml[259,8377+24]..[259,8377+30])
                      Pexp_ident "target" (src/lr0.ml[259,8377+24]..[259,8377+30])
                <arg>
                Nolabel
                  expression (src/lr0.ml[260,8409+4]..[260,8409+41])
                    Pexp_apply
                    expression (src/lr0.ml[260,8409+5]..[260,8409+22])
                      Pexp_ident "InfiniteArray.get" (src/lr0.ml[260,8409+5]..[260,8409+22])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr0.ml[260,8409+23]..[260,8409+35])
                          Pexp_ident "_transitions" (src/lr0.ml[260,8409+23]..[260,8409+35])
                      <arg>
                      Nolabel
                        expression (src/lr0.ml[260,8409+36]..[260,8409+40])
                          Pexp_ident "node" (src/lr0.ml[260,8409+36]..[260,8409+40])
                    ]
              ]
            core_type (src/lr0.ml[257,8316+26]..[257,8316+42])
              Ptyp_constr "SymbolMap.t" (src/lr0.ml[257,8316+31]..[257,8316+42])
              [
                core_type (src/lr0.ml[257,8316+26]..[257,8316+30])
                  Ptyp_constr "node" (src/lr0.ml[257,8316+26]..[257,8316+30])
                  []
              ]
    ]
  structure_item (src/lr0.ml[262,8452+0]..[263,8496+56])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[262,8452+4]..[262,8452+20])
          Ppat_var "outgoing_symbols" (src/lr0.ml[262,8452+4]..[262,8452+20])
        expression (src/lr0.ml[262,8452+21]..[263,8496+56]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[262,8452+21]..[262,8452+25])
            Ppat_var "node" (src/lr0.ml[262,8452+21]..[262,8452+25])
          expression (src/lr0.ml[262,8452+26]..[263,8496+56])
            Pexp_constraint
            expression (src/lr0.ml[263,8496+2]..[263,8496+56])
              Pexp_apply
              expression (src/lr0.ml[263,8496+2]..[263,8496+18])
                Pexp_ident "SymbolMap.domain" (src/lr0.ml[263,8496+2]..[263,8496+18])
              [
                <arg>
                Nolabel
                  expression (src/lr0.ml[263,8496+19]..[263,8496+56])
                    Pexp_apply
                    expression (src/lr0.ml[263,8496+20]..[263,8496+37])
                      Pexp_ident "InfiniteArray.get" (src/lr0.ml[263,8496+20]..[263,8496+37])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr0.ml[263,8496+38]..[263,8496+50])
                          Pexp_ident "_transitions" (src/lr0.ml[263,8496+38]..[263,8496+50])
                      <arg>
                      Nolabel
                        expression (src/lr0.ml[263,8496+51]..[263,8496+55])
                          Pexp_ident "node" (src/lr0.ml[263,8496+51]..[263,8496+55])
                    ]
              ]
            core_type (src/lr0.ml[262,8452+28]..[262,8452+41])
              Ptyp_constr "list" (src/lr0.ml[262,8452+37]..[262,8452+41])
              [
                core_type (src/lr0.ml[262,8452+28]..[262,8452+36])
                  Ptyp_constr "Symbol.t" (src/lr0.ml[262,8452+28]..[262,8452+36])
                  []
              ]
    ]
  structure_item (src/lr0.ml[270,8800+0]..[279,9113+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[270,8800+4]..[270,8800+16])
          Ppat_var "predecessors" (src/lr0.ml[270,8800+4]..[270,8800+16])
        core_type (src/lr0.ml[270,8800+19]..[270,8800+41])
          Ptyp_constr "Lazy.t" (src/lr0.ml[270,8800+35]..[270,8800+41])
          [
            core_type (src/lr0.ml[270,8800+19]..[270,8800+34])
              Ptyp_constr "array" (src/lr0.ml[270,8800+29]..[270,8800+34])
              [
                core_type (src/lr0.ml[270,8800+19]..[270,8800+28])
                  Ptyp_constr "list" (src/lr0.ml[270,8800+24]..[270,8800+28])
                  [
                    core_type (src/lr0.ml[270,8800+19]..[270,8800+23])
                      Ptyp_constr "node" (src/lr0.ml[270,8800+19]..[270,8800+23])
                      []
                  ]
              ]
          ]
        expression (src/lr0.ml[271,8844+2]..[279,9113+3])
          Pexp_lazy
          expression (src/lr0.ml[271,8844+7]..[279,9113+3])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/lr0.ml[272,8853+8]..[272,8853+20])
                  Ppat_var "predecessors" (src/lr0.ml[272,8853+8]..[272,8853+20])
                expression (src/lr0.ml[272,8853+23]..[272,8853+38])
                  Pexp_apply
                  expression (src/lr0.ml[272,8853+23]..[272,8853+33])
                    Pexp_ident "Array.make" (src/lr0.ml[272,8853+23]..[272,8853+33])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[272,8853+34]..[272,8853+35])
                        Pexp_ident "n" (src/lr0.ml[272,8853+34]..[272,8853+35])
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[272,8853+36]..[272,8853+38])
                        Pexp_construct "[]" (src/lr0.ml[272,8853+36]..[272,8853+38])
                        None
                  ]
            ]
            expression (src/lr0.ml[273,8895+4]..[278,9096+16])
              Pexp_sequence
              expression (src/lr0.ml[273,8895+4]..[277,9086+8])
                Pexp_for Up
                pattern (src/lr0.ml[273,8895+8]..[273,8895+14])
                  Ppat_var "source" (src/lr0.ml[273,8895+8]..[273,8895+14])
                expression (src/lr0.ml[273,8895+17]..[273,8895+18])
                  Pexp_constant PConst_int (0,None)
                expression (src/lr0.ml[273,8895+22]..[273,8895+25])
                  Pexp_apply
                  expression (src/lr0.ml[273,8895+23]..[273,8895+24])
                    Pexp_ident "-" (src/lr0.ml[273,8895+23]..[273,8895+24])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[273,8895+22]..[273,8895+23])
                        Pexp_ident "n" (src/lr0.ml[273,8895+22]..[273,8895+23])
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[273,8895+24]..[273,8895+25])
                        Pexp_constant PConst_int (1,None)
                  ]
                expression (src/lr0.ml[274,8924+6]..[276,9038+47])
                  Pexp_apply
                  expression (src/lr0.ml[274,8924+6]..[274,8924+20])
                    Pexp_ident "SymbolMap.iter" (src/lr0.ml[274,8924+6]..[274,8924+20])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[274,8924+21]..[276,9038+7])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/lr0.ml[274,8924+26]..[274,8924+33])
                          Ppat_var "_symbol" (src/lr0.ml[274,8924+26]..[274,8924+33])
                        expression (src/lr0.ml[274,8924+34]..[275,8973+64]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/lr0.ml[274,8924+34]..[274,8924+45])
                            Ppat_tuple
                            [
                              pattern (src/lr0.ml[274,8924+35]..[274,8924+41])
                                Ppat_var "target" (src/lr0.ml[274,8924+35]..[274,8924+41])
                              pattern (src/lr0.ml[274,8924+43]..[274,8924+44])
                                Ppat_any
                            ]
                          expression (src/lr0.ml[275,8973+8]..[275,8973+64])
                            Pexp_apply
                            expression (src/lr0.ml[275,8973+8]..[275,8973+64]) ghost
                              Pexp_ident "Array.set" (src/lr0.ml[275,8973+8]..[275,8973+64]) ghost
                            [
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[275,8973+8]..[275,8973+20])
                                  Pexp_ident "predecessors" (src/lr0.ml[275,8973+8]..[275,8973+20])
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[275,8973+22]..[275,8973+28])
                                  Pexp_ident "target" (src/lr0.ml[275,8973+22]..[275,8973+28])
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[275,8973+33]..[275,8973+64])
                                  Pexp_construct "::" (src/lr0.ml[275,8973+40]..[275,8973+42])
                                  Some
                                    expression (src/lr0.ml[275,8973+33]..[275,8973+64]) ghost
                                      Pexp_tuple
                                      [
                                        expression (src/lr0.ml[275,8973+33]..[275,8973+39])
                                          Pexp_ident "source" (src/lr0.ml[275,8973+33]..[275,8973+39])
                                        expression (src/lr0.ml[275,8973+43]..[275,8973+64])
                                          Pexp_apply
                                          expression (src/lr0.ml[275,8973+43]..[275,8973+64]) ghost
                                            Pexp_ident "Array.get" (src/lr0.ml[275,8973+43]..[275,8973+64]) ghost
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/lr0.ml[275,8973+43]..[275,8973+55])
                                                Pexp_ident "predecessors" (src/lr0.ml[275,8973+43]..[275,8973+55])
                                            <arg>
                                            Nolabel
                                              expression (src/lr0.ml[275,8973+57]..[275,8973+63])
                                                Pexp_ident "target" (src/lr0.ml[275,8973+57]..[275,8973+63])
                                          ]
                                      ]
                            ]
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[276,9038+8]..[276,9038+47])
                        Pexp_apply
                        expression (src/lr0.ml[276,9038+9]..[276,9038+26])
                          Pexp_ident "InfiniteArray.get" (src/lr0.ml[276,9038+9]..[276,9038+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr0.ml[276,9038+27]..[276,9038+39])
                              Pexp_ident "_transitions" (src/lr0.ml[276,9038+27]..[276,9038+39])
                          <arg>
                          Nolabel
                            expression (src/lr0.ml[276,9038+40]..[276,9038+46])
                              Pexp_ident "source" (src/lr0.ml[276,9038+40]..[276,9038+46])
                        ]
                  ]
              expression (src/lr0.ml[278,9096+4]..[278,9096+16])
                Pexp_ident "predecessors" (src/lr0.ml[278,9096+4]..[278,9096+16])
    ]
  structure_item (src/lr0.ml[281,9118+0]..[282,9162+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[281,9118+4]..[281,9118+18])
          Ppat_var "incoming_edges" (src/lr0.ml[281,9118+4]..[281,9118+18])
        expression (src/lr0.ml[281,9118+19]..[282,9162+31]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[281,9118+19]..[281,9118+29])
            Ppat_constraint
            pattern (src/lr0.ml[281,9118+20]..[281,9118+21])
              Ppat_var "c" (src/lr0.ml[281,9118+20]..[281,9118+21])
            core_type (src/lr0.ml[281,9118+24]..[281,9118+28])
              Ptyp_constr "node" (src/lr0.ml[281,9118+24]..[281,9118+28])
              []
          expression (src/lr0.ml[281,9118+30]..[282,9162+31])
            Pexp_constraint
            expression (src/lr0.ml[282,9162+2]..[282,9162+31])
              Pexp_apply
              expression (src/lr0.ml[282,9162+2]..[282,9162+31]) ghost
                Pexp_ident "Array.get" (src/lr0.ml[282,9162+2]..[282,9162+31]) ghost
              [
                <arg>
                Nolabel
                  expression (src/lr0.ml[282,9162+2]..[282,9162+27])
                    Pexp_apply
                    expression (src/lr0.ml[282,9162+3]..[282,9162+13])
                      Pexp_ident "Lazy.force" (src/lr0.ml[282,9162+3]..[282,9162+13])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr0.ml[282,9162+14]..[282,9162+26])
                          Pexp_ident "predecessors" (src/lr0.ml[282,9162+14]..[282,9162+26])
                    ]
                <arg>
                Nolabel
                  expression (src/lr0.ml[282,9162+29]..[282,9162+30])
                    Pexp_ident "c" (src/lr0.ml[282,9162+29]..[282,9162+30])
              ]
            core_type (src/lr0.ml[281,9118+32]..[281,9118+41])
              Ptyp_constr "list" (src/lr0.ml[281,9118+37]..[281,9118+41])
              [
                core_type (src/lr0.ml[281,9118+32]..[281,9118+36])
                  Ptyp_constr "node" (src/lr0.ml[281,9118+32]..[281,9118+36])
                  []
              ]
    ]
  structure_item (src/lr0.ml[284,9195+0]..[285,9222+55])
    Pstr_module
    "ImperativeNodeMap" (src/lr0.ml[284,9195+7]..[284,9195+24])
      module_expr (src/lr0.ml[285,9222+2]..[285,9222+55])
        Pmod_apply
        module_expr (src/lr0.ml[285,9222+2]..[285,9222+33])
          Pmod_ident "Fix.Glue.ArraysAsImperativeMaps" (src/lr0.ml[285,9222+2]..[285,9222+33])
        module_expr (src/lr0.ml[285,9222+34]..[285,9222+54])
          Pmod_structure
          [
            structure_item (src/lr0.ml[285,9222+41]..[285,9222+50])
              Pstr_value Nonrec
              [
                <def>
                  pattern (src/lr0.ml[285,9222+45]..[285,9222+46])
                    Ppat_var "n" (src/lr0.ml[285,9222+45]..[285,9222+46])
                  expression (src/lr0.ml[285,9222+49]..[285,9222+50])
                    Pexp_ident "n" (src/lr0.ml[285,9222+49]..[285,9222+50])
              ]
          ]
  structure_item (src/lr0.ml[294,9565+0]..[295,9581+30])
    Pstr_type Rec
    [
      type_declaration "lr1state" (src/lr0.ml[294,9565+5]..[294,9565+13]) (src/lr0.ml[294,9565+0]..[295,9581+30])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/lr0.ml[295,9581+4]..[295,9581+30])
              Ptyp_tuple
              [
                core_type (src/lr0.ml[295,9581+4]..[295,9581+8])
                  Ptyp_constr "node" (src/lr0.ml[295,9581+4]..[295,9581+8])
                  []
                core_type (src/lr0.ml[295,9581+11]..[295,9581+30])
                  Ptyp_constr "array" (src/lr0.ml[295,9581+25]..[295,9581+30])
                  [
                    core_type (src/lr0.ml[295,9581+11]..[295,9581+24])
                      Ptyp_constr "TerminalSet.t" (src/lr0.ml[295,9581+11]..[295,9581+24])
                      []
                  ]
              ]
    ]
  structure_item (src/lr0.ml[302,9849+0]..[312,10330+3])
    Pstr_module
    "Lr1StateAsOrderedType" (src/lr0.ml[302,9849+7]..[302,9849+28])
      module_expr (src/lr0.ml[302,9849+31]..[312,10330+3])
        Pmod_structure
        [
          structure_item (src/lr0.ml[303,9887+2]..[303,9887+19])
            Pstr_type Rec
            [
              type_declaration "t" (src/lr0.ml[303,9887+7]..[303,9887+8]) (src/lr0.ml[303,9887+2]..[303,9887+19])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/lr0.ml[303,9887+11]..[303,9887+19])
                      Ptyp_constr "lr1state" (src/lr0.ml[303,9887+11]..[303,9887+19])
                      []
            ]
          structure_item (src/lr0.ml[304,9907+2]..[307,9993+38])
            Pstr_value Nonrec
            [
              <def>
                pattern (src/lr0.ml[304,9907+6]..[304,9907+13])
                  Ppat_var "compare" (src/lr0.ml[304,9907+6]..[304,9907+13])
                expression (src/lr0.ml[304,9907+14]..[307,9993+38]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/lr0.ml[304,9907+14]..[304,9907+26])
                    Ppat_tuple
                    [
                      pattern (src/lr0.ml[304,9907+15]..[304,9907+17])
                        Ppat_var "k1" (src/lr0.ml[304,9907+15]..[304,9907+17])
                      pattern (src/lr0.ml[304,9907+19]..[304,9907+25])
                        Ppat_var "toksr1" (src/lr0.ml[304,9907+19]..[304,9907+25])
                    ]
                  expression (src/lr0.ml[304,9907+27]..[307,9993+38]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/lr0.ml[304,9907+27]..[304,9907+39])
                      Ppat_tuple
                      [
                        pattern (src/lr0.ml[304,9907+28]..[304,9907+30])
                          Ppat_var "k2" (src/lr0.ml[304,9907+28]..[304,9907+30])
                        pattern (src/lr0.ml[304,9907+32]..[304,9907+38])
                          Ppat_var "toksr2" (src/lr0.ml[304,9907+32]..[304,9907+38])
                      ]
                    expression (src/lr0.ml[305,9949+4]..[307,9993+38])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/lr0.ml[305,9949+8]..[305,9949+9])
                            Ppat_var "c" (src/lr0.ml[305,9949+8]..[305,9949+9])
                          expression (src/lr0.ml[305,9949+12]..[305,9949+19])
                            Pexp_apply
                            expression (src/lr0.ml[305,9949+15]..[305,9949+16])
                              Pexp_ident "-" (src/lr0.ml[305,9949+15]..[305,9949+16])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[305,9949+12]..[305,9949+14])
                                  Pexp_ident "k1" (src/lr0.ml[305,9949+12]..[305,9949+14])
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[305,9949+17]..[305,9949+19])
                                  Pexp_ident "k2" (src/lr0.ml[305,9949+17]..[305,9949+19])
                            ]
                      ]
                      expression (src/lr0.ml[306,9972+4]..[307,9993+38])
                        Pexp_ifthenelse
                        expression (src/lr0.ml[306,9972+7]..[306,9972+13])
                          Pexp_apply
                          expression (src/lr0.ml[306,9972+9]..[306,9972+11])
                            Pexp_ident "<>" (src/lr0.ml[306,9972+9]..[306,9972+11])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[306,9972+7]..[306,9972+8])
                                Pexp_ident "c" (src/lr0.ml[306,9972+7]..[306,9972+8])
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[306,9972+12]..[306,9972+13])
                                Pexp_constant PConst_int (0,None)
                          ]
                        expression (src/lr0.ml[306,9972+19]..[306,9972+20])
                          Pexp_ident "c" (src/lr0.ml[306,9972+19]..[306,9972+20])
                        Some
                          expression (src/lr0.ml[307,9993+9]..[307,9993+38])
                            Pexp_apply
                            expression (src/lr0.ml[307,9993+9]..[307,9993+24])
                              Pexp_ident "Generic.compare" (src/lr0.ml[307,9993+9]..[307,9993+24])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[307,9993+25]..[307,9993+31])
                                  Pexp_ident "toksr1" (src/lr0.ml[307,9993+25]..[307,9993+31])
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[307,9993+32]..[307,9993+38])
                                  Pexp_ident "toksr2" (src/lr0.ml[307,9993+32]..[307,9993+38])
                            ]
            ]
        ]
  structure_item (src/lr0.ml[317,10470+0]..[321,10656+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[317,10470+4]..[317,10470+10])
          Ppat_var "export" (src/lr0.ml[317,10470+4]..[317,10470+10])
        expression (src/lr0.ml[317,10470+11]..[321,10656+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[317,10470+11]..[317,10470+21])
            Ppat_tuple
            [
              pattern (src/lr0.ml[317,10470+12]..[317,10470+13])
                Ppat_var "k" (src/lr0.ml[317,10470+12]..[317,10470+13])
              pattern (src/lr0.ml[317,10470+15]..[317,10470+20])
                Ppat_var "toksr" (src/lr0.ml[317,10470+15]..[317,10470+20])
            ]
          expression (src/lr0.ml[318,10494+2]..[321,10656+7])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/lr0.ml[318,10494+6]..[318,10494+22])
                  Ppat_tuple
                  [
                    pattern (src/lr0.ml[318,10494+6]..[318,10494+15])
                      Ppat_constraint
                      pattern (src/lr0.ml[318,10494+7]..[318,10494+8])
                        Ppat_any
                      core_type (src/lr0.ml[318,10494+11]..[318,10494+14])
                        Ptyp_constr "int" (src/lr0.ml[318,10494+11]..[318,10494+14])
                        []
                    pattern (src/lr0.ml[318,10494+17]..[318,10494+22])
                      Ppat_var "items" (src/lr0.ml[318,10494+17]..[318,10494+22])
                  ]
                expression (src/lr0.ml[318,10494+25]..[320,10600+52])
                  Pexp_apply
                  expression (src/lr0.ml[318,10494+25]..[318,10494+38])
                    Pexp_ident "Item.Set.fold" (src/lr0.ml[318,10494+25]..[318,10494+38])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[318,10494+39]..[320,10600+3])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/lr0.ml[318,10494+44]..[318,10494+48])
                          Ppat_var "item" (src/lr0.ml[318,10494+44]..[318,10494+48])
                        expression (src/lr0.ml[318,10494+49]..[319,10557+42]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/lr0.ml[318,10494+49]..[318,10494+59])
                            Ppat_tuple
                            [
                              pattern (src/lr0.ml[318,10494+50]..[318,10494+51])
                                Ppat_var "i" (src/lr0.ml[318,10494+50]..[318,10494+51])
                              pattern (src/lr0.ml[318,10494+53]..[318,10494+58])
                                Ppat_var "items" (src/lr0.ml[318,10494+53]..[318,10494+58])
                            ]
                          expression (src/lr0.ml[319,10557+4]..[319,10557+42])
                            Pexp_tuple
                            [
                              expression (src/lr0.ml[319,10557+4]..[319,10557+7])
                                Pexp_apply
                                expression (src/lr0.ml[319,10557+5]..[319,10557+6])
                                  Pexp_ident "+" (src/lr0.ml[319,10557+5]..[319,10557+6])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[319,10557+4]..[319,10557+5])
                                      Pexp_ident "i" (src/lr0.ml[319,10557+4]..[319,10557+5])
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[319,10557+6]..[319,10557+7])
                                      Pexp_constant PConst_int (1,None)
                                ]
                              expression (src/lr0.ml[319,10557+9]..[319,10557+42])
                                Pexp_apply
                                expression (src/lr0.ml[319,10557+9]..[319,10557+21])
                                  Pexp_ident "Item.Map.add" (src/lr0.ml[319,10557+9]..[319,10557+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[319,10557+22]..[319,10557+26])
                                      Pexp_ident "item" (src/lr0.ml[319,10557+22]..[319,10557+26])
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[319,10557+27]..[319,10557+36])
                                      Pexp_apply
                                      expression (src/lr0.ml[319,10557+27]..[319,10557+36]) ghost
                                        Pexp_ident "Array.get" (src/lr0.ml[319,10557+27]..[319,10557+36]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr0.ml[319,10557+27]..[319,10557+32])
                                            Pexp_ident "toksr" (src/lr0.ml[319,10557+27]..[319,10557+32])
                                        <arg>
                                        Nolabel
                                          expression (src/lr0.ml[319,10557+34]..[319,10557+35])
                                            Pexp_ident "i" (src/lr0.ml[319,10557+34]..[319,10557+35])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[319,10557+37]..[319,10557+42])
                                      Pexp_ident "items" (src/lr0.ml[319,10557+37]..[319,10557+42])
                                ]
                            ]
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[320,10600+4]..[320,10600+32])
                        Pexp_apply
                        expression (src/lr0.ml[320,10600+5]..[320,10600+22])
                          Pexp_ident "InfiniteArray.get" (src/lr0.ml[320,10600+5]..[320,10600+22])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr0.ml[320,10600+23]..[320,10600+29])
                              Pexp_ident "states" (src/lr0.ml[320,10600+23]..[320,10600+29])
                          <arg>
                          Nolabel
                            expression (src/lr0.ml[320,10600+30]..[320,10600+31])
                              Pexp_ident "k" (src/lr0.ml[320,10600+30]..[320,10600+31])
                        ]
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[320,10600+33]..[320,10600+52])
                        Pexp_tuple
                        [
                          expression (src/lr0.ml[320,10600+34]..[320,10600+35])
                            Pexp_constant PConst_int (0,None)
                          expression (src/lr0.ml[320,10600+37]..[320,10600+51])
                            Pexp_ident "Item.Map.empty" (src/lr0.ml[320,10600+37]..[320,10600+51])
                        ]
                  ]
            ]
            expression (src/lr0.ml[321,10656+2]..[321,10656+7])
              Pexp_ident "items" (src/lr0.ml[321,10656+2]..[321,10656+7])
    ]
  structure_item (src/lr0.ml[325,10701+0]..[333,10963+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[325,10701+4]..[325,10701+18])
          Ppat_var "print_concrete" (src/lr0.ml[325,10701+4]..[325,10701+18])
        expression (src/lr0.ml[325,10701+19]..[333,10963+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[325,10701+19]..[325,10701+26])
            Ppat_var "leading" (src/lr0.ml[325,10701+19]..[325,10701+26])
          expression (src/lr0.ml[325,10701+27]..[333,10963+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/lr0.ml[325,10701+27]..[325,10701+53])
              Ppat_constraint
              pattern (src/lr0.ml[325,10701+28]..[325,10701+33])
                Ppat_var "state" (src/lr0.ml[325,10701+28]..[325,10701+33])
              core_type (src/lr0.ml[325,10701+36]..[325,10701+52])
                Ptyp_constr "concretelr1state" (src/lr0.ml[325,10701+36]..[325,10701+52])
                []
            expression (src/lr0.ml[326,10757+2]..[333,10963+3])
              Pexp_apply
              expression (src/lr0.ml[326,10757+2]..[326,10757+18])
                Pexp_ident "Misc.with_buffer" (src/lr0.ml[326,10757+2]..[326,10757+18])
              [
                <arg>
                Nolabel
                  expression (src/lr0.ml[326,10757+19]..[326,10757+23])
                    Pexp_constant PConst_int (1024,None)
                <arg>
                Nolabel
                  expression (src/lr0.ml[326,10757+24]..[333,10963+3])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/lr0.ml[326,10757+29]..[326,10757+35])
                      Ppat_var "buffer" (src/lr0.ml[326,10757+29]..[326,10757+35])
                    expression (src/lr0.ml[327,10796+4]..[332,10951+11])
                      Pexp_apply
                      expression (src/lr0.ml[327,10796+4]..[327,10796+17])
                        Pexp_ident "Item.Map.iter" (src/lr0.ml[327,10796+4]..[327,10796+17])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr0.ml[327,10796+18]..[332,10951+5])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/lr0.ml[327,10796+23]..[327,10796+27])
                              Ppat_var "item" (src/lr0.ml[327,10796+23]..[327,10796+27])
                            expression (src/lr0.ml[327,10796+28]..[331,10918+32]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (src/lr0.ml[327,10796+28]..[327,10796+32])
                                Ppat_var "toks" (src/lr0.ml[327,10796+28]..[327,10796+32])
                              expression (src/lr0.ml[328,10832+6]..[331,10918+32])
                                Pexp_apply
                                expression (src/lr0.ml[328,10832+6]..[328,10832+20])
                                  Pexp_ident "Printf.bprintf" (src/lr0.ml[328,10832+6]..[328,10832+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[328,10832+21]..[328,10832+27])
                                      Pexp_ident "buffer" (src/lr0.ml[328,10832+21]..[328,10832+27])
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[328,10832+28]..[328,10832+43])
                                      Pexp_constant PConst_string("%s%s [ %s ]\n",(src/lr0.ml[328,10832+29]..[328,10832+42]),None)
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[329,10876+8]..[329,10876+15])
                                      Pexp_ident "leading" (src/lr0.ml[329,10876+8]..[329,10876+15])
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[330,10892+8]..[330,10892+25])
                                      Pexp_apply
                                      expression (src/lr0.ml[330,10892+9]..[330,10892+19])
                                        Pexp_ident "Item.print" (src/lr0.ml[330,10892+9]..[330,10892+19])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr0.ml[330,10892+20]..[330,10892+24])
                                            Pexp_ident "item" (src/lr0.ml[330,10892+20]..[330,10892+24])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[331,10918+8]..[331,10918+32])
                                      Pexp_apply
                                      expression (src/lr0.ml[331,10918+9]..[331,10918+26])
                                        Pexp_ident "TerminalSet.print" (src/lr0.ml[331,10918+9]..[331,10918+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr0.ml[331,10918+27]..[331,10918+31])
                                            Pexp_ident "toks" (src/lr0.ml[331,10918+27]..[331,10918+31])
                                      ]
                                ]
                        <arg>
                        Nolabel
                          expression (src/lr0.ml[332,10951+6]..[332,10951+11])
                            Pexp_ident "state" (src/lr0.ml[332,10951+6]..[332,10951+11])
                      ]
              ]
    ]
  structure_item (src/lr0.ml[338,11057+0]..[339,11083+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[338,11057+4]..[338,11057+9])
          Ppat_var "print" (src/lr0.ml[338,11057+4]..[338,11057+9])
        expression (src/lr0.ml[338,11057+10]..[339,11083+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[338,11057+10]..[338,11057+17])
            Ppat_var "leading" (src/lr0.ml[338,11057+10]..[338,11057+17])
          expression (src/lr0.ml[338,11057+18]..[339,11083+39]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/lr0.ml[338,11057+18]..[338,11057+23])
              Ppat_var "state" (src/lr0.ml[338,11057+18]..[338,11057+23])
            expression (src/lr0.ml[339,11083+2]..[339,11083+39])
              Pexp_apply
              expression (src/lr0.ml[339,11083+2]..[339,11083+16])
                Pexp_ident "print_concrete" (src/lr0.ml[339,11083+2]..[339,11083+16])
              [
                <arg>
                Nolabel
                  expression (src/lr0.ml[339,11083+17]..[339,11083+24])
                    Pexp_ident "leading" (src/lr0.ml[339,11083+17]..[339,11083+24])
                <arg>
                Nolabel
                  expression (src/lr0.ml[339,11083+25]..[339,11083+39])
                    Pexp_apply
                    expression (src/lr0.ml[339,11083+26]..[339,11083+32])
                      Pexp_ident "export" (src/lr0.ml[339,11083+26]..[339,11083+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr0.ml[339,11083+33]..[339,11083+38])
                          Pexp_ident "state" (src/lr0.ml[339,11083+33]..[339,11083+38])
                    ]
              ]
    ]
  structure_item (src/lr0.ml[341,11124+0]..[342,11158+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[341,11124+4]..[341,11124+17])
          Ppat_var "print_closure" (src/lr0.ml[341,11124+4]..[341,11124+17])
        expression (src/lr0.ml[341,11124+18]..[342,11158+49]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[341,11124+18]..[341,11124+25])
            Ppat_var "leading" (src/lr0.ml[341,11124+18]..[341,11124+25])
          expression (src/lr0.ml[341,11124+26]..[342,11158+49]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/lr0.ml[341,11124+26]..[341,11124+31])
              Ppat_var "state" (src/lr0.ml[341,11124+26]..[341,11124+31])
            expression (src/lr0.ml[342,11158+2]..[342,11158+49])
              Pexp_apply
              expression (src/lr0.ml[342,11158+2]..[342,11158+16])
                Pexp_ident "print_concrete" (src/lr0.ml[342,11158+2]..[342,11158+16])
              [
                <arg>
                Nolabel
                  expression (src/lr0.ml[342,11158+17]..[342,11158+24])
                    Pexp_ident "leading" (src/lr0.ml[342,11158+17]..[342,11158+24])
                <arg>
                Nolabel
                  expression (src/lr0.ml[342,11158+25]..[342,11158+49])
                    Pexp_apply
                    expression (src/lr0.ml[342,11158+26]..[342,11158+33])
                      Pexp_ident "closure" (src/lr0.ml[342,11158+26]..[342,11158+33])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr0.ml[342,11158+34]..[342,11158+48])
                          Pexp_apply
                          expression (src/lr0.ml[342,11158+35]..[342,11158+41])
                            Pexp_ident "export" (src/lr0.ml[342,11158+35]..[342,11158+41])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[342,11158+42]..[342,11158+47])
                                Pexp_ident "state" (src/lr0.ml[342,11158+42]..[342,11158+47])
                          ]
                    ]
              ]
    ]
  structure_item (src/lr0.ml[346,11274+0]..[347,11292+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[346,11274+4]..[346,11274+8])
          Ppat_var "core" (src/lr0.ml[346,11274+4]..[346,11274+8])
        expression (src/lr0.ml[346,11274+9]..[347,11292+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[346,11274+9]..[346,11274+15])
            Ppat_tuple
            [
              pattern (src/lr0.ml[346,11274+10]..[346,11274+11])
                Ppat_var "k" (src/lr0.ml[346,11274+10]..[346,11274+11])
              pattern (src/lr0.ml[346,11274+13]..[346,11274+14])
                Ppat_any
            ]
          expression (src/lr0.ml[347,11292+2]..[347,11292+3])
            Pexp_ident "k" (src/lr0.ml[347,11292+2]..[347,11292+3])
    ]
  structure_item (src/lr0.ml[353,11463+0]..[354,11475+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[353,11463+4]..[353,11463+9])
          Ppat_var "debug" (src/lr0.ml[353,11463+4]..[353,11463+9])
        expression (src/lr0.ml[354,11475+2]..[354,11475+7])
          Pexp_construct "false" (src/lr0.ml[354,11475+2]..[354,11475+7])
          None
    ]
  structure_item (src/lr0.ml[356,11484+0]..[358,11528+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[356,11484+4]..[356,11484+15])
          Ppat_var "well_formed" (src/lr0.ml[356,11484+4]..[356,11484+15])
        expression (src/lr0.ml[356,11484+16]..[358,11528+69]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[356,11484+16]..[356,11484+26])
            Ppat_tuple
            [
              pattern (src/lr0.ml[356,11484+17]..[356,11484+18])
                Ppat_var "k" (src/lr0.ml[356,11484+17]..[356,11484+18])
              pattern (src/lr0.ml[356,11484+20]..[356,11484+25])
                Ppat_var "toksr" (src/lr0.ml[356,11484+20]..[356,11484+25])
            ]
          expression (src/lr0.ml[357,11513+2]..[358,11528+69])
            Pexp_apply
            expression (src/lr0.ml[357,11513+12]..[357,11513+14])
              Pexp_ident "||" (src/lr0.ml[357,11513+12]..[357,11513+14])
            [
              <arg>
              Nolabel
                expression (src/lr0.ml[357,11513+2]..[357,11513+11])
                  Pexp_apply
                  expression (src/lr0.ml[357,11513+2]..[357,11513+5])
                    Pexp_ident "not" (src/lr0.ml[357,11513+2]..[357,11513+5])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[357,11513+6]..[357,11513+11])
                        Pexp_ident "debug" (src/lr0.ml[357,11513+6]..[357,11513+11])
                  ]
              <arg>
              Nolabel
                expression (src/lr0.ml[358,11528+2]..[358,11528+69])
                  Pexp_apply
                  expression (src/lr0.ml[358,11528+21]..[358,11528+22])
                    Pexp_ident "=" (src/lr0.ml[358,11528+21]..[358,11528+22])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[358,11528+2]..[358,11528+20])
                        Pexp_apply
                        expression (src/lr0.ml[358,11528+2]..[358,11528+14])
                          Pexp_ident "Array.length" (src/lr0.ml[358,11528+2]..[358,11528+14])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr0.ml[358,11528+15]..[358,11528+20])
                              Pexp_ident "toksr" (src/lr0.ml[358,11528+15]..[358,11528+20])
                        ]
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[358,11528+23]..[358,11528+69])
                        Pexp_apply
                        expression (src/lr0.ml[358,11528+23]..[358,11528+40])
                          Pexp_ident "Item.Set.cardinal" (src/lr0.ml[358,11528+23]..[358,11528+40])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr0.ml[358,11528+41]..[358,11528+69])
                              Pexp_apply
                              expression (src/lr0.ml[358,11528+42]..[358,11528+59])
                                Pexp_ident "InfiniteArray.get" (src/lr0.ml[358,11528+42]..[358,11528+59])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr0.ml[358,11528+60]..[358,11528+66])
                                    Pexp_ident "states" (src/lr0.ml[358,11528+60]..[358,11528+66])
                                <arg>
                                Nolabel
                                  expression (src/lr0.ml[358,11528+67]..[358,11528+68])
                                    Pexp_ident "k" (src/lr0.ml[358,11528+67]..[358,11528+68])
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (src/lr0.ml[364,11788+0]..[367,11897+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[364,11788+4]..[364,11788+9])
          Ppat_var "start" (src/lr0.ml[364,11788+4]..[364,11788+9])
        expression (src/lr0.ml[364,11788+10]..[367,11897+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[364,11788+10]..[364,11788+11])
            Ppat_var "k" (src/lr0.ml[364,11788+10]..[364,11788+11])
          expression (src/lr0.ml[365,11802+2]..[367,11897+7])
            Pexp_let Nonrec
            [
              <def>
                pattern (src/lr0.ml[365,11802+6]..[365,11802+11])
                  Ppat_var "state" (src/lr0.ml[365,11802+6]..[365,11802+11])
                expression (src/lr0.ml[365,11802+14]..[365,11802+61])
                  Pexp_tuple
                  [
                    expression (src/lr0.ml[365,11802+15]..[365,11802+16])
                      Pexp_ident "k" (src/lr0.ml[365,11802+15]..[365,11802+16])
                    expression (src/lr0.ml[365,11802+18]..[365,11802+60])
                      Pexp_array
                      [
                        expression (src/lr0.ml[365,11802+21]..[365,11802+57])
                          Pexp_apply
                          expression (src/lr0.ml[365,11802+21]..[365,11802+42])
                            Pexp_ident "TerminalSet.singleton" (src/lr0.ml[365,11802+21]..[365,11802+42])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[365,11802+43]..[365,11802+57])
                                Pexp_ident "Terminal.sharp" (src/lr0.ml[365,11802+43]..[365,11802+57])
                          ]
                      ]
                  ]
            ]
            expression (src/lr0.ml[366,11867+2]..[367,11897+7])
              Pexp_sequence
              expression (src/lr0.ml[366,11867+2]..[366,11867+28])
                Pexp_assert
                expression (src/lr0.ml[366,11867+9]..[366,11867+28])
                  Pexp_apply
                  expression (src/lr0.ml[366,11867+10]..[366,11867+21])
                    Pexp_ident "well_formed" (src/lr0.ml[366,11867+10]..[366,11867+21])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[366,11867+22]..[366,11867+27])
                        Pexp_ident "state" (src/lr0.ml[366,11867+22]..[366,11867+27])
                  ]
              expression (src/lr0.ml[367,11897+2]..[367,11897+7])
                Pexp_ident "state" (src/lr0.ml[367,11897+2]..[367,11897+7])
    ]
  structure_item (src/lr0.ml[374,12175+0]..[383,12441+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[374,12175+4]..[374,12175+13])
          Ppat_var "interpret" (src/lr0.ml[374,12175+4]..[374,12175+13])
        expression (src/lr0.ml[375,12189+4]..[383,12441+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[375,12189+4]..[375,12189+36])
            Ppat_constraint
            pattern (src/lr0.ml[375,12189+5]..[375,12189+24])
              Ppat_alias "state" (src/lr0.ml[375,12189+19]..[375,12189+24])
              pattern (src/lr0.ml[375,12189+5]..[375,12189+15])
                Ppat_tuple
                [
                  pattern (src/lr0.ml[375,12189+6]..[375,12189+7])
                    Ppat_any
                  pattern (src/lr0.ml[375,12189+9]..[375,12189+14])
                    Ppat_var "toksr" (src/lr0.ml[375,12189+9]..[375,12189+14])
                ]
            core_type (src/lr0.ml[375,12189+27]..[375,12189+35])
              Ptyp_constr "lr1state" (src/lr0.ml[375,12189+27]..[375,12189+35])
              []
          expression (src/lr0.ml[376,12226+4]..[383,12441+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/lr0.ml[376,12226+4]..[376,12226+40])
              Ppat_constraint
              pattern (src/lr0.ml[376,12226+5]..[376,12226+17])
                Ppat_tuple
                [
                  pattern (src/lr0.ml[376,12226+6]..[376,12226+10])
                    Ppat_var "toks" (src/lr0.ml[376,12226+6]..[376,12226+10])
                  pattern (src/lr0.ml[376,12226+12]..[376,12226+16])
                    Ppat_var "vars" (src/lr0.ml[376,12226+12]..[376,12226+16])
                ]
              core_type (src/lr0.ml[376,12226+20]..[376,12226+39])
                Ptyp_constr "SymbolicLookahead.t" (src/lr0.ml[376,12226+20]..[376,12226+39])
                []
            expression (src/lr0.ml[377,12267+4]..[383,12441+13])
              Pexp_constraint
              expression (src/lr0.ml[379,12290+2]..[383,12441+13])
                Pexp_sequence
                expression (src/lr0.ml[379,12290+2]..[379,12290+28])
                  Pexp_assert
                  expression (src/lr0.ml[379,12290+9]..[379,12290+28])
                    Pexp_apply
                    expression (src/lr0.ml[379,12290+10]..[379,12290+21])
                      Pexp_ident "well_formed" (src/lr0.ml[379,12290+10]..[379,12290+21])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr0.ml[379,12290+22]..[379,12290+27])
                          Pexp_ident "state" (src/lr0.ml[379,12290+22]..[379,12290+27])
                    ]
                expression (src/lr0.ml[380,12320+2]..[383,12441+13])
                  Pexp_apply
                  expression (src/lr0.ml[380,12320+2]..[380,12320+13])
                    Pexp_ident "VarSet.fold" (src/lr0.ml[380,12320+2]..[380,12320+13])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[380,12320+14]..[383,12441+3])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/lr0.ml[380,12320+19]..[380,12320+22])
                          Ppat_var "var" (src/lr0.ml[380,12320+19]..[380,12320+22])
                        expression (src/lr0.ml[380,12320+23]..[382,12402+38]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/lr0.ml[380,12320+23]..[380,12320+27])
                            Ppat_var "toks" (src/lr0.ml[380,12320+23]..[380,12320+27])
                          expression (src/lr0.ml[381,12351+4]..[382,12402+38])
                            Pexp_sequence
                            expression (src/lr0.ml[381,12351+4]..[381,12351+49])
                              Pexp_assert
                              expression (src/lr0.ml[381,12351+11]..[381,12351+49])
                                Pexp_apply
                                expression (src/lr0.ml[381,12351+21]..[381,12351+23])
                                  Pexp_ident "&&" (src/lr0.ml[381,12351+21]..[381,12351+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[381,12351+12]..[381,12351+20])
                                      Pexp_apply
                                      expression (src/lr0.ml[381,12351+16]..[381,12351+18])
                                        Pexp_ident ">=" (src/lr0.ml[381,12351+16]..[381,12351+18])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr0.ml[381,12351+12]..[381,12351+15])
                                            Pexp_ident "var" (src/lr0.ml[381,12351+12]..[381,12351+15])
                                        <arg>
                                        Nolabel
                                          expression (src/lr0.ml[381,12351+19]..[381,12351+20])
                                            Pexp_constant PConst_int (0,None)
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[381,12351+24]..[381,12351+48])
                                      Pexp_apply
                                      expression (src/lr0.ml[381,12351+28]..[381,12351+29])
                                        Pexp_ident "<" (src/lr0.ml[381,12351+28]..[381,12351+29])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr0.ml[381,12351+24]..[381,12351+27])
                                            Pexp_ident "var" (src/lr0.ml[381,12351+24]..[381,12351+27])
                                        <arg>
                                        Nolabel
                                          expression (src/lr0.ml[381,12351+30]..[381,12351+48])
                                            Pexp_apply
                                            expression (src/lr0.ml[381,12351+30]..[381,12351+42])
                                              Pexp_ident "Array.length" (src/lr0.ml[381,12351+30]..[381,12351+42])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/lr0.ml[381,12351+43]..[381,12351+48])
                                                  Pexp_ident "toksr" (src/lr0.ml[381,12351+43]..[381,12351+48])
                                            ]
                                      ]
                                ]
                            expression (src/lr0.ml[382,12402+4]..[382,12402+38])
                              Pexp_apply
                              expression (src/lr0.ml[382,12402+4]..[382,12402+21])
                                Pexp_ident "TerminalSet.union" (src/lr0.ml[382,12402+4]..[382,12402+21])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr0.ml[382,12402+22]..[382,12402+33])
                                    Pexp_apply
                                    expression (src/lr0.ml[382,12402+22]..[382,12402+33]) ghost
                                      Pexp_ident "Array.get" (src/lr0.ml[382,12402+22]..[382,12402+33]) ghost
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr0.ml[382,12402+22]..[382,12402+27])
                                          Pexp_ident "toksr" (src/lr0.ml[382,12402+22]..[382,12402+27])
                                      <arg>
                                      Nolabel
                                        expression (src/lr0.ml[382,12402+29]..[382,12402+32])
                                          Pexp_ident "var" (src/lr0.ml[382,12402+29]..[382,12402+32])
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/lr0.ml[382,12402+34]..[382,12402+38])
                                    Pexp_ident "toks" (src/lr0.ml[382,12402+34]..[382,12402+38])
                              ]
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[383,12441+4]..[383,12441+8])
                        Pexp_ident "vars" (src/lr0.ml[383,12441+4]..[383,12441+8])
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[383,12441+9]..[383,12441+13])
                        Pexp_ident "toks" (src/lr0.ml[383,12441+9]..[383,12441+13])
                  ]
              core_type (src/lr0.ml[377,12267+6]..[377,12267+19])
                Ptyp_constr "TerminalSet.t" (src/lr0.ml[377,12267+6]..[377,12267+19])
                []
    ]
  structure_item (src/lr0.ml[389,12665+0]..[395,12819+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[389,12665+4]..[389,12665+14])
          Ppat_var "reductions" (src/lr0.ml[389,12665+4]..[389,12665+14])
        expression (src/lr0.ml[390,12680+4]..[395,12819+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[390,12680+4]..[390,12680+32])
            Ppat_constraint
            pattern (src/lr0.ml[390,12680+5]..[390,12680+20])
              Ppat_alias "state" (src/lr0.ml[390,12680+15]..[390,12680+20])
              pattern (src/lr0.ml[390,12680+5]..[390,12680+11])
                Ppat_tuple
                [
                  pattern (src/lr0.ml[390,12680+6]..[390,12680+7])
                    Ppat_var "k" (src/lr0.ml[390,12680+6]..[390,12680+7])
                  pattern (src/lr0.ml[390,12680+9]..[390,12680+10])
                    Ppat_any
                ]
            core_type (src/lr0.ml[390,12680+23]..[390,12680+31])
              Ptyp_constr "lr1state" (src/lr0.ml[390,12680+23]..[390,12680+31])
              []
          expression (src/lr0.ml[391,12713+4]..[395,12819+37])
            Pexp_constraint
            expression (src/lr0.ml[393,12762+2]..[395,12819+37])
              Pexp_apply
              expression (src/lr0.ml[393,12762+2]..[393,12762+10])
                Pexp_ident "List.map" (src/lr0.ml[393,12762+2]..[393,12762+10])
              [
                <arg>
                Nolabel
                  expression (src/lr0.ml[393,12762+11]..[395,12819+3])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/lr0.ml[393,12762+16]..[393,12762+25])
                      Ppat_tuple
                      [
                        pattern (src/lr0.ml[393,12762+17]..[393,12762+18])
                          Ppat_var "s" (src/lr0.ml[393,12762+17]..[393,12762+18])
                        pattern (src/lr0.ml[393,12762+20]..[393,12762+24])
                          Ppat_var "prod" (src/lr0.ml[393,12762+20]..[393,12762+24])
                      ]
                    expression (src/lr0.ml[394,12791+4]..[394,12791+27])
                      Pexp_tuple
                      [
                        expression (src/lr0.ml[394,12791+4]..[394,12791+21])
                          Pexp_apply
                          expression (src/lr0.ml[394,12791+4]..[394,12791+13])
                            Pexp_ident "interpret" (src/lr0.ml[394,12791+4]..[394,12791+13])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[394,12791+14]..[394,12791+19])
                                Pexp_ident "state" (src/lr0.ml[394,12791+14]..[394,12791+19])
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[394,12791+20]..[394,12791+21])
                                Pexp_ident "s" (src/lr0.ml[394,12791+20]..[394,12791+21])
                          ]
                        expression (src/lr0.ml[394,12791+23]..[394,12791+27])
                          Pexp_ident "prod" (src/lr0.ml[394,12791+23]..[394,12791+27])
                      ]
                <arg>
                Nolabel
                  expression (src/lr0.ml[395,12819+4]..[395,12819+37])
                    Pexp_apply
                    expression (src/lr0.ml[395,12819+5]..[395,12819+22])
                      Pexp_ident "InfiniteArray.get" (src/lr0.ml[395,12819+5]..[395,12819+22])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr0.ml[395,12819+23]..[395,12819+34])
                          Pexp_ident "_reductions" (src/lr0.ml[395,12819+23]..[395,12819+34])
                      <arg>
                      Nolabel
                        expression (src/lr0.ml[395,12819+35]..[395,12819+36])
                          Pexp_ident "k" (src/lr0.ml[395,12819+35]..[395,12819+36])
                    ]
              ]
            core_type (src/lr0.ml[391,12713+6]..[391,12713+45])
              Ptyp_constr "list" (src/lr0.ml[391,12713+41]..[391,12713+45])
              [
                core_type (src/lr0.ml[391,12713+7]..[391,12713+39])
                  Ptyp_tuple
                  [
                    core_type (src/lr0.ml[391,12713+7]..[391,12713+20])
                      Ptyp_constr "TerminalSet.t" (src/lr0.ml[391,12713+7]..[391,12713+20])
                      []
                    core_type (src/lr0.ml[391,12713+23]..[391,12713+39])
                      Ptyp_constr "Production.index" (src/lr0.ml[391,12713+23]..[391,12713+39])
                      []
                  ]
              ]
    ]
  structure_item (src/lr0.ml[397,12858+0]..[403,13053+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[397,12858+4]..[397,12858+15])
          Ppat_var "transitions" (src/lr0.ml[397,12858+4]..[397,12858+15])
        expression (src/lr0.ml[398,12874+4]..[403,13053+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[398,12874+4]..[398,12874+32])
            Ppat_constraint
            pattern (src/lr0.ml[398,12874+5]..[398,12874+20])
              Ppat_alias "state" (src/lr0.ml[398,12874+15]..[398,12874+20])
              pattern (src/lr0.ml[398,12874+5]..[398,12874+11])
                Ppat_tuple
                [
                  pattern (src/lr0.ml[398,12874+6]..[398,12874+7])
                    Ppat_var "k" (src/lr0.ml[398,12874+6]..[398,12874+7])
                  pattern (src/lr0.ml[398,12874+9]..[398,12874+10])
                    Ppat_any
                ]
            core_type (src/lr0.ml[398,12874+23]..[398,12874+31])
              Ptyp_constr "lr1state" (src/lr0.ml[398,12874+23]..[398,12874+31])
              []
          expression (src/lr0.ml[399,12907+4]..[403,13053+38])
            Pexp_constraint
            expression (src/lr0.ml[401,12937+2]..[403,13053+38])
              Pexp_apply
              expression (src/lr0.ml[401,12937+2]..[401,12937+15])
                Pexp_ident "SymbolMap.map" (src/lr0.ml[401,12937+2]..[401,12937+15])
              [
                <arg>
                Nolabel
                  expression (src/lr0.ml[401,12937+16]..[403,13053+3])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/lr0.ml[401,12937+21]..[401,12937+59])
                      Ppat_constraint
                      pattern (src/lr0.ml[401,12937+22]..[401,12937+29])
                        Ppat_tuple
                        [
                          pattern (src/lr0.ml[401,12937+23]..[401,12937+24])
                            Ppat_var "k" (src/lr0.ml[401,12937+23]..[401,12937+24])
                          pattern (src/lr0.ml[401,12937+26]..[401,12937+28])
                            Ppat_var "sr" (src/lr0.ml[401,12937+26]..[401,12937+28])
                        ]
                      core_type (src/lr0.ml[401,12937+32]..[401,12937+58])
                        Ptyp_constr "symbolic_transition_target" (src/lr0.ml[401,12937+32]..[401,12937+58])
                        []
                    expression (src/lr0.ml[402,13000+4]..[402,13000+52])
                      Pexp_constraint
                      expression (src/lr0.ml[402,13000+5]..[402,13000+40])
                        Pexp_tuple
                        [
                          expression (src/lr0.ml[402,13000+6]..[402,13000+7])
                            Pexp_ident "k" (src/lr0.ml[402,13000+6]..[402,13000+7])
                          expression (src/lr0.ml[402,13000+9]..[402,13000+39])
                            Pexp_apply
                            expression (src/lr0.ml[402,13000+9]..[402,13000+18])
                              Pexp_ident "Array.map" (src/lr0.ml[402,13000+9]..[402,13000+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[402,13000+19]..[402,13000+36])
                                  Pexp_apply
                                  expression (src/lr0.ml[402,13000+20]..[402,13000+29])
                                    Pexp_ident "interpret" (src/lr0.ml[402,13000+20]..[402,13000+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/lr0.ml[402,13000+30]..[402,13000+35])
                                        Pexp_ident "state" (src/lr0.ml[402,13000+30]..[402,13000+35])
                                  ]
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[402,13000+37]..[402,13000+39])
                                  Pexp_ident "sr" (src/lr0.ml[402,13000+37]..[402,13000+39])
                            ]
                        ]
                      core_type (src/lr0.ml[402,13000+43]..[402,13000+51])
                        Ptyp_constr "lr1state" (src/lr0.ml[402,13000+43]..[402,13000+51])
                        []
                <arg>
                Nolabel
                  expression (src/lr0.ml[403,13053+4]..[403,13053+38])
                    Pexp_apply
                    expression (src/lr0.ml[403,13053+5]..[403,13053+22])
                      Pexp_ident "InfiniteArray.get" (src/lr0.ml[403,13053+5]..[403,13053+22])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr0.ml[403,13053+23]..[403,13053+35])
                          Pexp_ident "_transitions" (src/lr0.ml[403,13053+23]..[403,13053+35])
                      <arg>
                      Nolabel
                        expression (src/lr0.ml[403,13053+36]..[403,13053+37])
                          Pexp_ident "k" (src/lr0.ml[403,13053+36]..[403,13053+37])
                    ]
              ]
            core_type (src/lr0.ml[399,12907+6]..[399,12907+26])
              Ptyp_constr "SymbolMap.t" (src/lr0.ml[399,12907+15]..[399,12907+26])
              [
                core_type (src/lr0.ml[399,12907+6]..[399,12907+14])
                  Ptyp_constr "lr1state" (src/lr0.ml[399,12907+6]..[399,12907+14])
                  []
              ]
    ]
  structure_item (src/lr0.ml[405,13093+0]..[416,13372+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[405,13093+4]..[405,13093+14])
          Ppat_var "transition" (src/lr0.ml[405,13093+4]..[405,13093+14])
        expression (src/lr0.ml[406,13108+4]..[416,13372+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[406,13108+4]..[406,13108+10])
            Ppat_var "symbol" (src/lr0.ml[406,13108+4]..[406,13108+10])
          expression (src/lr0.ml[407,13119+4]..[416,13372+37]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/lr0.ml[407,13119+4]..[407,13119+32])
              Ppat_constraint
              pattern (src/lr0.ml[407,13119+5]..[407,13119+20])
                Ppat_alias "state" (src/lr0.ml[407,13119+15]..[407,13119+20])
                pattern (src/lr0.ml[407,13119+5]..[407,13119+11])
                  Ppat_tuple
                  [
                    pattern (src/lr0.ml[407,13119+6]..[407,13119+7])
                      Ppat_var "k" (src/lr0.ml[407,13119+6]..[407,13119+7])
                    pattern (src/lr0.ml[407,13119+9]..[407,13119+10])
                      Ppat_any
                  ]
              core_type (src/lr0.ml[407,13119+23]..[407,13119+31])
                Ptyp_constr "lr1state" (src/lr0.ml[407,13119+23]..[407,13119+31])
                []
            expression (src/lr0.ml[408,13152+4]..[416,13372+37])
              Pexp_constraint
              expression (src/lr0.ml[410,13170+2]..[416,13372+37])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/lr0.ml[410,13170+6]..[410,13170+44])
                      Ppat_constraint
                      pattern (src/lr0.ml[410,13170+7]..[410,13170+14])
                        Ppat_tuple
                        [
                          pattern (src/lr0.ml[410,13170+8]..[410,13170+9])
                            Ppat_var "k" (src/lr0.ml[410,13170+8]..[410,13170+9])
                          pattern (src/lr0.ml[410,13170+11]..[410,13170+13])
                            Ppat_var "sr" (src/lr0.ml[410,13170+11]..[410,13170+13])
                        ]
                      core_type (src/lr0.ml[410,13170+17]..[410,13170+43])
                        Ptyp_constr "symbolic_transition_target" (src/lr0.ml[410,13170+17]..[410,13170+43])
                        []
                    expression (src/lr0.ml[411,13217+4]..[414,13310+18])
                      Pexp_try
                      expression (src/lr0.ml[412,13225+6]..[412,13225+62])
                        Pexp_apply
                        expression (src/lr0.ml[412,13225+6]..[412,13225+20])
                          Pexp_ident "SymbolMap.find" (src/lr0.ml[412,13225+6]..[412,13225+20])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr0.ml[412,13225+21]..[412,13225+27])
                              Pexp_ident "symbol" (src/lr0.ml[412,13225+21]..[412,13225+27])
                          <arg>
                          Nolabel
                            expression (src/lr0.ml[412,13225+28]..[412,13225+62])
                              Pexp_apply
                              expression (src/lr0.ml[412,13225+29]..[412,13225+46])
                                Pexp_ident "InfiniteArray.get" (src/lr0.ml[412,13225+29]..[412,13225+46])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr0.ml[412,13225+47]..[412,13225+59])
                                    Pexp_ident "_transitions" (src/lr0.ml[412,13225+47]..[412,13225+59])
                                <arg>
                                Nolabel
                                  expression (src/lr0.ml[412,13225+60]..[412,13225+61])
                                    Pexp_ident "k" (src/lr0.ml[412,13225+60]..[412,13225+61])
                              ]
                        ]
                      [
                        <case>
                          pattern (src/lr0.ml[413,13288+9]..[413,13288+18])
                            Ppat_construct "Not_found" (src/lr0.ml[413,13288+9]..[413,13288+18])
                            None
                          expression (src/lr0.ml[414,13310+6]..[414,13310+18])
                            Pexp_assert
                            expression (src/lr0.ml[414,13310+13]..[414,13310+18])
                              Pexp_construct "false" (src/lr0.ml[414,13310+13]..[414,13310+18])
                              None
                      ]
                ]
                expression (src/lr0.ml[416,13372+2]..[416,13372+37])
                  Pexp_tuple
                  [
                    expression (src/lr0.ml[416,13372+3]..[416,13372+4])
                      Pexp_ident "k" (src/lr0.ml[416,13372+3]..[416,13372+4])
                    expression (src/lr0.ml[416,13372+6]..[416,13372+36])
                      Pexp_apply
                      expression (src/lr0.ml[416,13372+6]..[416,13372+15])
                        Pexp_ident "Array.map" (src/lr0.ml[416,13372+6]..[416,13372+15])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr0.ml[416,13372+16]..[416,13372+33])
                            Pexp_apply
                            expression (src/lr0.ml[416,13372+17]..[416,13372+26])
                              Pexp_ident "interpret" (src/lr0.ml[416,13372+17]..[416,13372+26])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[416,13372+27]..[416,13372+32])
                                  Pexp_ident "state" (src/lr0.ml[416,13372+27]..[416,13372+32])
                            ]
                        <arg>
                        Nolabel
                          expression (src/lr0.ml[416,13372+34]..[416,13372+36])
                            Pexp_ident "sr" (src/lr0.ml[416,13372+34]..[416,13372+36])
                      ]
                  ]
              core_type (src/lr0.ml[408,13152+6]..[408,13152+14])
                Ptyp_constr "lr1state" (src/lr0.ml[408,13152+6]..[408,13152+14])
                []
    ]
  structure_item (src/lr0.ml[421,13566+0]..[426,13743+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[421,13566+4]..[421,13566+21])
          Ppat_var "transition_tokens" (src/lr0.ml[421,13566+4]..[421,13566+21])
        expression (src/lr0.ml[421,13566+22]..[426,13743+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[421,13566+22]..[421,13566+33])
            Ppat_var "transitions" (src/lr0.ml[421,13566+22]..[421,13566+33])
          expression (src/lr0.ml[422,13602+2]..[426,13743+33])
            Pexp_apply
            expression (src/lr0.ml[422,13602+2]..[422,13602+16])
              Pexp_ident "SymbolMap.fold" (src/lr0.ml[422,13602+2]..[422,13602+16])
            [
              <arg>
              Nolabel
                expression (src/lr0.ml[422,13602+17]..[426,13743+3])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/lr0.ml[422,13602+22]..[422,13602+28])
                    Ppat_var "symbol" (src/lr0.ml[422,13602+22]..[422,13602+28])
                  expression (src/lr0.ml[422,13602+29]..[425,13716+26]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/lr0.ml[422,13602+29]..[422,13602+36])
                      Ppat_var "_target" (src/lr0.ml[422,13602+29]..[422,13602+36])
                    expression (src/lr0.ml[422,13602+37]..[425,13716+26]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/lr0.ml[422,13602+37]..[422,13602+41])
                        Ppat_var "toks" (src/lr0.ml[422,13602+37]..[422,13602+41])
                      expression (src/lr0.ml[423,13647+4]..[425,13716+26])
                        Pexp_match
                        expression (src/lr0.ml[423,13647+10]..[423,13647+16])
                          Pexp_ident "symbol" (src/lr0.ml[423,13647+10]..[423,13647+16])
                        [
                          <case>
                            pattern (src/lr0.ml[424,13669+6]..[424,13669+18])
                              Ppat_construct "Symbol.T" (src/lr0.ml[424,13669+6]..[424,13669+14])
                              Some
                                []
                                pattern (src/lr0.ml[424,13669+15]..[424,13669+18])
                                  Ppat_var "tok" (src/lr0.ml[424,13669+15]..[424,13669+18])
                            expression (src/lr0.ml[424,13669+22]..[424,13669+46])
                              Pexp_apply
                              expression (src/lr0.ml[424,13669+22]..[424,13669+37])
                                Pexp_ident "TerminalSet.add" (src/lr0.ml[424,13669+22]..[424,13669+37])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr0.ml[424,13669+38]..[424,13669+41])
                                    Pexp_ident "tok" (src/lr0.ml[424,13669+38]..[424,13669+41])
                                <arg>
                                Nolabel
                                  expression (src/lr0.ml[424,13669+42]..[424,13669+46])
                                    Pexp_ident "toks" (src/lr0.ml[424,13669+42]..[424,13669+46])
                              ]
                          <case>
                            pattern (src/lr0.ml[425,13716+6]..[425,13716+16])
                              Ppat_construct "Symbol.N" (src/lr0.ml[425,13716+6]..[425,13716+14])
                              Some
                                []
                                pattern (src/lr0.ml[425,13716+15]..[425,13716+16])
                                  Ppat_any
                            expression (src/lr0.ml[425,13716+22]..[425,13716+26])
                              Pexp_ident "toks" (src/lr0.ml[425,13716+22]..[425,13716+26])
                        ]
              <arg>
              Nolabel
                expression (src/lr0.ml[426,13743+4]..[426,13743+15])
                  Pexp_ident "transitions" (src/lr0.ml[426,13743+4]..[426,13743+15])
              <arg>
              Nolabel
                expression (src/lr0.ml[426,13743+16]..[426,13743+33])
                  Pexp_ident "TerminalSet.empty" (src/lr0.ml[426,13743+16]..[426,13743+33])
            ]
    ]
  structure_item (src/lr0.ml[430,13805+0]..[439,14076+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[430,13805+4]..[430,13805+9])
          Ppat_var "equal" (src/lr0.ml[430,13805+4]..[430,13805+9])
        expression (src/lr0.ml[430,13805+10]..[439,14076+28]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[430,13805+10]..[430,13805+34])
            Ppat_alias "state1" (src/lr0.ml[430,13805+27]..[430,13805+33])
            pattern (src/lr0.ml[430,13805+11]..[430,13805+23])
              Ppat_tuple
              [
                pattern (src/lr0.ml[430,13805+12]..[430,13805+14])
                  Ppat_var "k1" (src/lr0.ml[430,13805+12]..[430,13805+14])
                pattern (src/lr0.ml[430,13805+16]..[430,13805+22])
                  Ppat_var "toksr1" (src/lr0.ml[430,13805+16]..[430,13805+22])
              ]
          expression (src/lr0.ml[430,13805+35]..[439,14076+28]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/lr0.ml[430,13805+35]..[430,13805+59])
              Ppat_alias "state2" (src/lr0.ml[430,13805+52]..[430,13805+58])
              pattern (src/lr0.ml[430,13805+36]..[430,13805+48])
                Ppat_tuple
                [
                  pattern (src/lr0.ml[430,13805+37]..[430,13805+39])
                    Ppat_var "k2" (src/lr0.ml[430,13805+37]..[430,13805+39])
                  pattern (src/lr0.ml[430,13805+41]..[430,13805+47])
                    Ppat_var "toksr2" (src/lr0.ml[430,13805+41]..[430,13805+47])
                ]
            expression (src/lr0.ml[431,13867+2]..[439,14076+28])
              Pexp_sequence
              expression (src/lr0.ml[431,13867+2]..[431,13867+62])
                Pexp_assert
                expression (src/lr0.ml[431,13867+9]..[431,13867+62])
                  Pexp_apply
                  expression (src/lr0.ml[431,13867+18]..[431,13867+20])
                    Pexp_ident "&&" (src/lr0.ml[431,13867+18]..[431,13867+20])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[431,13867+10]..[431,13867+17])
                        Pexp_apply
                        expression (src/lr0.ml[431,13867+13]..[431,13867+14])
                          Pexp_ident "=" (src/lr0.ml[431,13867+13]..[431,13867+14])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr0.ml[431,13867+10]..[431,13867+12])
                              Pexp_ident "k1" (src/lr0.ml[431,13867+10]..[431,13867+12])
                          <arg>
                          Nolabel
                            expression (src/lr0.ml[431,13867+15]..[431,13867+17])
                              Pexp_ident "k2" (src/lr0.ml[431,13867+15]..[431,13867+17])
                        ]
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[431,13867+21]..[431,13867+61])
                        Pexp_apply
                        expression (src/lr0.ml[431,13867+40]..[431,13867+42])
                          Pexp_ident "&&" (src/lr0.ml[431,13867+40]..[431,13867+42])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr0.ml[431,13867+21]..[431,13867+39])
                              Pexp_apply
                              expression (src/lr0.ml[431,13867+21]..[431,13867+32])
                                Pexp_ident "well_formed" (src/lr0.ml[431,13867+21]..[431,13867+32])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr0.ml[431,13867+33]..[431,13867+39])
                                    Pexp_ident "state1" (src/lr0.ml[431,13867+33]..[431,13867+39])
                              ]
                          <arg>
                          Nolabel
                            expression (src/lr0.ml[431,13867+43]..[431,13867+61])
                              Pexp_apply
                              expression (src/lr0.ml[431,13867+43]..[431,13867+54])
                                Pexp_ident "well_formed" (src/lr0.ml[431,13867+43]..[431,13867+54])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr0.ml[431,13867+55]..[431,13867+61])
                                    Pexp_ident "state2" (src/lr0.ml[431,13867+55]..[431,13867+61])
                              ]
                        ]
                  ]
              expression (src/lr0.ml[432,13931+2]..[439,14076+28])
                Pexp_let Rec
                [
                  <def>
                    pattern (src/lr0.ml[432,13931+10]..[432,13931+14])
                      Ppat_var "loop" (src/lr0.ml[432,13931+10]..[432,13931+14])
                    expression (src/lr0.ml[432,13931+15]..[437,14011+59]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/lr0.ml[432,13931+15]..[432,13931+16])
                        Ppat_var "i" (src/lr0.ml[432,13931+15]..[432,13931+16])
                      expression (src/lr0.ml[433,13950+4]..[437,14011+59])
                        Pexp_ifthenelse
                        expression (src/lr0.ml[433,13950+7]..[433,13950+12])
                          Pexp_apply
                          expression (src/lr0.ml[433,13950+9]..[433,13950+10])
                            Pexp_ident "=" (src/lr0.ml[433,13950+9]..[433,13950+10])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[433,13950+7]..[433,13950+8])
                                Pexp_ident "i" (src/lr0.ml[433,13950+7]..[433,13950+8])
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[433,13950+11]..[433,13950+12])
                                Pexp_constant PConst_int (0,None)
                          ]
                        expression (src/lr0.ml[434,13968+6]..[434,13968+10])
                          Pexp_construct "true" (src/lr0.ml[434,13968+6]..[434,13968+10])
                          None
                        Some
                          expression (src/lr0.ml[436,13988+6]..[437,14011+59])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/lr0.ml[436,13988+10]..[436,13988+11])
                                  Ppat_var "i" (src/lr0.ml[436,13988+10]..[436,13988+11])
                                expression (src/lr0.ml[436,13988+14]..[436,13988+19])
                                  Pexp_apply
                                  expression (src/lr0.ml[436,13988+16]..[436,13988+17])
                                    Pexp_ident "-" (src/lr0.ml[436,13988+16]..[436,13988+17])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/lr0.ml[436,13988+14]..[436,13988+15])
                                        Pexp_ident "i" (src/lr0.ml[436,13988+14]..[436,13988+15])
                                    <arg>
                                    Nolabel
                                      expression (src/lr0.ml[436,13988+18]..[436,13988+19])
                                        Pexp_constant PConst_int (1,None)
                                  ]
                            ]
                            expression (src/lr0.ml[437,14011+6]..[437,14011+59])
                              Pexp_apply
                              expression (src/lr0.ml[437,14011+48]..[437,14011+50])
                                Pexp_ident "&&" (src/lr0.ml[437,14011+48]..[437,14011+50])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr0.ml[437,14011+6]..[437,14011+47])
                                    Pexp_apply
                                    expression (src/lr0.ml[437,14011+7]..[437,14011+24])
                                      Pexp_ident "TerminalSet.equal" (src/lr0.ml[437,14011+7]..[437,14011+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr0.ml[437,14011+25]..[437,14011+35])
                                          Pexp_apply
                                          expression (src/lr0.ml[437,14011+25]..[437,14011+35]) ghost
                                            Pexp_ident "Array.get" (src/lr0.ml[437,14011+25]..[437,14011+35]) ghost
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/lr0.ml[437,14011+25]..[437,14011+31])
                                                Pexp_ident "toksr1" (src/lr0.ml[437,14011+25]..[437,14011+31])
                                            <arg>
                                            Nolabel
                                              expression (src/lr0.ml[437,14011+33]..[437,14011+34])
                                                Pexp_ident "i" (src/lr0.ml[437,14011+33]..[437,14011+34])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (src/lr0.ml[437,14011+36]..[437,14011+46])
                                          Pexp_apply
                                          expression (src/lr0.ml[437,14011+36]..[437,14011+46]) ghost
                                            Pexp_ident "Array.get" (src/lr0.ml[437,14011+36]..[437,14011+46]) ghost
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/lr0.ml[437,14011+36]..[437,14011+42])
                                                Pexp_ident "toksr2" (src/lr0.ml[437,14011+36]..[437,14011+42])
                                            <arg>
                                            Nolabel
                                              expression (src/lr0.ml[437,14011+44]..[437,14011+45])
                                                Pexp_ident "i" (src/lr0.ml[437,14011+44]..[437,14011+45])
                                          ]
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/lr0.ml[437,14011+51]..[437,14011+59])
                                    Pexp_apply
                                    expression (src/lr0.ml[437,14011+52]..[437,14011+56])
                                      Pexp_ident "loop" (src/lr0.ml[437,14011+52]..[437,14011+56])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr0.ml[437,14011+57]..[437,14011+58])
                                          Pexp_ident "i" (src/lr0.ml[437,14011+57]..[437,14011+58])
                                    ]
                              ]
                ]
                expression (src/lr0.ml[439,14076+2]..[439,14076+28])
                  Pexp_apply
                  expression (src/lr0.ml[439,14076+2]..[439,14076+6])
                    Pexp_ident "loop" (src/lr0.ml[439,14076+2]..[439,14076+6])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[439,14076+7]..[439,14076+28])
                        Pexp_apply
                        expression (src/lr0.ml[439,14076+8]..[439,14076+20])
                          Pexp_ident "Array.length" (src/lr0.ml[439,14076+8]..[439,14076+20])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr0.ml[439,14076+21]..[439,14076+27])
                              Pexp_ident "toksr1" (src/lr0.ml[439,14076+21]..[439,14076+27])
                        ]
                  ]
    ]
  structure_item (src/lr0.ml[443,14141+0]..[452,14415+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[443,14141+4]..[443,14141+11])
          Ppat_var "subsume" (src/lr0.ml[443,14141+4]..[443,14141+11])
        expression (src/lr0.ml[443,14141+12]..[452,14415+28]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[443,14141+12]..[443,14141+36])
            Ppat_alias "state1" (src/lr0.ml[443,14141+29]..[443,14141+35])
            pattern (src/lr0.ml[443,14141+13]..[443,14141+25])
              Ppat_tuple
              [
                pattern (src/lr0.ml[443,14141+14]..[443,14141+16])
                  Ppat_var "k1" (src/lr0.ml[443,14141+14]..[443,14141+16])
                pattern (src/lr0.ml[443,14141+18]..[443,14141+24])
                  Ppat_var "toksr1" (src/lr0.ml[443,14141+18]..[443,14141+24])
              ]
          expression (src/lr0.ml[443,14141+37]..[452,14415+28]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/lr0.ml[443,14141+37]..[443,14141+61])
              Ppat_alias "state2" (src/lr0.ml[443,14141+54]..[443,14141+60])
              pattern (src/lr0.ml[443,14141+38]..[443,14141+50])
                Ppat_tuple
                [
                  pattern (src/lr0.ml[443,14141+39]..[443,14141+41])
                    Ppat_var "k2" (src/lr0.ml[443,14141+39]..[443,14141+41])
                  pattern (src/lr0.ml[443,14141+43]..[443,14141+49])
                    Ppat_var "toksr2" (src/lr0.ml[443,14141+43]..[443,14141+49])
                ]
            expression (src/lr0.ml[444,14205+2]..[452,14415+28])
              Pexp_sequence
              expression (src/lr0.ml[444,14205+2]..[444,14205+62])
                Pexp_assert
                expression (src/lr0.ml[444,14205+9]..[444,14205+62])
                  Pexp_apply
                  expression (src/lr0.ml[444,14205+18]..[444,14205+20])
                    Pexp_ident "&&" (src/lr0.ml[444,14205+18]..[444,14205+20])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[444,14205+10]..[444,14205+17])
                        Pexp_apply
                        expression (src/lr0.ml[444,14205+13]..[444,14205+14])
                          Pexp_ident "=" (src/lr0.ml[444,14205+13]..[444,14205+14])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr0.ml[444,14205+10]..[444,14205+12])
                              Pexp_ident "k1" (src/lr0.ml[444,14205+10]..[444,14205+12])
                          <arg>
                          Nolabel
                            expression (src/lr0.ml[444,14205+15]..[444,14205+17])
                              Pexp_ident "k2" (src/lr0.ml[444,14205+15]..[444,14205+17])
                        ]
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[444,14205+21]..[444,14205+61])
                        Pexp_apply
                        expression (src/lr0.ml[444,14205+40]..[444,14205+42])
                          Pexp_ident "&&" (src/lr0.ml[444,14205+40]..[444,14205+42])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr0.ml[444,14205+21]..[444,14205+39])
                              Pexp_apply
                              expression (src/lr0.ml[444,14205+21]..[444,14205+32])
                                Pexp_ident "well_formed" (src/lr0.ml[444,14205+21]..[444,14205+32])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr0.ml[444,14205+33]..[444,14205+39])
                                    Pexp_ident "state1" (src/lr0.ml[444,14205+33]..[444,14205+39])
                              ]
                          <arg>
                          Nolabel
                            expression (src/lr0.ml[444,14205+43]..[444,14205+61])
                              Pexp_apply
                              expression (src/lr0.ml[444,14205+43]..[444,14205+54])
                                Pexp_ident "well_formed" (src/lr0.ml[444,14205+43]..[444,14205+54])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr0.ml[444,14205+55]..[444,14205+61])
                                    Pexp_ident "state2" (src/lr0.ml[444,14205+55]..[444,14205+61])
                              ]
                        ]
                  ]
              expression (src/lr0.ml[445,14269+2]..[452,14415+28])
                Pexp_let Rec
                [
                  <def>
                    pattern (src/lr0.ml[445,14269+10]..[445,14269+14])
                      Ppat_var "loop" (src/lr0.ml[445,14269+10]..[445,14269+14])
                    expression (src/lr0.ml[445,14269+15]..[450,14349+60]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/lr0.ml[445,14269+15]..[445,14269+16])
                        Ppat_var "i" (src/lr0.ml[445,14269+15]..[445,14269+16])
                      expression (src/lr0.ml[446,14288+4]..[450,14349+60])
                        Pexp_ifthenelse
                        expression (src/lr0.ml[446,14288+7]..[446,14288+12])
                          Pexp_apply
                          expression (src/lr0.ml[446,14288+9]..[446,14288+10])
                            Pexp_ident "=" (src/lr0.ml[446,14288+9]..[446,14288+10])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[446,14288+7]..[446,14288+8])
                                Pexp_ident "i" (src/lr0.ml[446,14288+7]..[446,14288+8])
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[446,14288+11]..[446,14288+12])
                                Pexp_constant PConst_int (0,None)
                          ]
                        expression (src/lr0.ml[447,14306+6]..[447,14306+10])
                          Pexp_construct "true" (src/lr0.ml[447,14306+6]..[447,14306+10])
                          None
                        Some
                          expression (src/lr0.ml[449,14326+6]..[450,14349+60])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/lr0.ml[449,14326+10]..[449,14326+11])
                                  Ppat_var "i" (src/lr0.ml[449,14326+10]..[449,14326+11])
                                expression (src/lr0.ml[449,14326+14]..[449,14326+19])
                                  Pexp_apply
                                  expression (src/lr0.ml[449,14326+16]..[449,14326+17])
                                    Pexp_ident "-" (src/lr0.ml[449,14326+16]..[449,14326+17])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/lr0.ml[449,14326+14]..[449,14326+15])
                                        Pexp_ident "i" (src/lr0.ml[449,14326+14]..[449,14326+15])
                                    <arg>
                                    Nolabel
                                      expression (src/lr0.ml[449,14326+18]..[449,14326+19])
                                        Pexp_constant PConst_int (1,None)
                                  ]
                            ]
                            expression (src/lr0.ml[450,14349+6]..[450,14349+60])
                              Pexp_apply
                              expression (src/lr0.ml[450,14349+49]..[450,14349+51])
                                Pexp_ident "&&" (src/lr0.ml[450,14349+49]..[450,14349+51])
                              [
                                <arg>
                                Nolabel
                                  expression (src/lr0.ml[450,14349+6]..[450,14349+48])
                                    Pexp_apply
                                    expression (src/lr0.ml[450,14349+7]..[450,14349+25])
                                      Pexp_ident "TerminalSet.subset" (src/lr0.ml[450,14349+7]..[450,14349+25])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr0.ml[450,14349+26]..[450,14349+36])
                                          Pexp_apply
                                          expression (src/lr0.ml[450,14349+26]..[450,14349+36]) ghost
                                            Pexp_ident "Array.get" (src/lr0.ml[450,14349+26]..[450,14349+36]) ghost
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/lr0.ml[450,14349+26]..[450,14349+32])
                                                Pexp_ident "toksr1" (src/lr0.ml[450,14349+26]..[450,14349+32])
                                            <arg>
                                            Nolabel
                                              expression (src/lr0.ml[450,14349+34]..[450,14349+35])
                                                Pexp_ident "i" (src/lr0.ml[450,14349+34]..[450,14349+35])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (src/lr0.ml[450,14349+37]..[450,14349+47])
                                          Pexp_apply
                                          expression (src/lr0.ml[450,14349+37]..[450,14349+47]) ghost
                                            Pexp_ident "Array.get" (src/lr0.ml[450,14349+37]..[450,14349+47]) ghost
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/lr0.ml[450,14349+37]..[450,14349+43])
                                                Pexp_ident "toksr2" (src/lr0.ml[450,14349+37]..[450,14349+43])
                                            <arg>
                                            Nolabel
                                              expression (src/lr0.ml[450,14349+45]..[450,14349+46])
                                                Pexp_ident "i" (src/lr0.ml[450,14349+45]..[450,14349+46])
                                          ]
                                    ]
                                <arg>
                                Nolabel
                                  expression (src/lr0.ml[450,14349+52]..[450,14349+60])
                                    Pexp_apply
                                    expression (src/lr0.ml[450,14349+53]..[450,14349+57])
                                      Pexp_ident "loop" (src/lr0.ml[450,14349+53]..[450,14349+57])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr0.ml[450,14349+58]..[450,14349+59])
                                          Pexp_ident "i" (src/lr0.ml[450,14349+58]..[450,14349+59])
                                    ]
                              ]
                ]
                expression (src/lr0.ml[452,14415+2]..[452,14415+28])
                  Pexp_apply
                  expression (src/lr0.ml[452,14415+2]..[452,14415+6])
                    Pexp_ident "loop" (src/lr0.ml[452,14415+2]..[452,14415+6])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[452,14415+7]..[452,14415+28])
                        Pexp_apply
                        expression (src/lr0.ml[452,14415+8]..[452,14415+20])
                          Pexp_ident "Array.length" (src/lr0.ml[452,14415+8]..[452,14415+20])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr0.ml[452,14415+21]..[452,14415+27])
                              Pexp_ident "toksr1" (src/lr0.ml[452,14415+21]..[452,14415+27])
                        ]
                  ]
    ]
  structure_item (src/lr0.ml[513,17479+0]..[556,18890+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[513,17479+4]..[513,17479+14])
          Ppat_var "compatible" (src/lr0.ml[513,17479+4]..[513,17479+14])
        expression (src/lr0.ml[513,17479+15]..[556,18890+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[513,17479+15]..[513,17479+27])
            Ppat_tuple
            [
              pattern (src/lr0.ml[513,17479+16]..[513,17479+18])
                Ppat_var "k1" (src/lr0.ml[513,17479+16]..[513,17479+18])
              pattern (src/lr0.ml[513,17479+20]..[513,17479+26])
                Ppat_var "toksr1" (src/lr0.ml[513,17479+20]..[513,17479+26])
            ]
          expression (src/lr0.ml[513,17479+28]..[556,18890+9]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/lr0.ml[513,17479+28]..[513,17479+40])
              Ppat_tuple
              [
                pattern (src/lr0.ml[513,17479+29]..[513,17479+31])
                  Ppat_var "k2" (src/lr0.ml[513,17479+29]..[513,17479+31])
                pattern (src/lr0.ml[513,17479+33]..[513,17479+39])
                  Ppat_var "toksr2" (src/lr0.ml[513,17479+33]..[513,17479+39])
              ]
            expression (src/lr0.ml[514,17522+2]..[556,18890+9])
              Pexp_sequence
              expression (src/lr0.ml[514,17522+2]..[514,17522+18])
                Pexp_assert
                expression (src/lr0.ml[514,17522+9]..[514,17522+18])
                  Pexp_apply
                  expression (src/lr0.ml[514,17522+13]..[514,17522+14])
                    Pexp_ident "=" (src/lr0.ml[514,17522+13]..[514,17522+14])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[514,17522+10]..[514,17522+12])
                        Pexp_ident "k1" (src/lr0.ml[514,17522+10]..[514,17522+12])
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[514,17522+15]..[514,17522+17])
                        Pexp_ident "k2" (src/lr0.ml[514,17522+15]..[514,17522+17])
                  ]
              expression (src/lr0.ml[515,17542+2]..[556,18890+9])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/lr0.ml[515,17542+6]..[515,17542+7])
                      Ppat_var "n" (src/lr0.ml[515,17542+6]..[515,17542+7])
                    expression (src/lr0.ml[515,17542+10]..[515,17542+29])
                      Pexp_apply
                      expression (src/lr0.ml[515,17542+10]..[515,17542+22])
                        Pexp_ident "Array.length" (src/lr0.ml[515,17542+10]..[515,17542+22])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr0.ml[515,17542+23]..[515,17542+29])
                            Pexp_ident "toksr1" (src/lr0.ml[515,17542+23]..[515,17542+29])
                      ]
                ]
                expression (src/lr0.ml[518,17699+2]..[556,18890+9])
                  Pexp_let Rec
                  [
                    <def>
                      pattern (src/lr0.ml[518,17699+10]..[518,17699+15])
                        Ppat_var "loopi" (src/lr0.ml[518,17699+10]..[518,17699+15])
                      expression (src/lr0.ml[518,17699+16]..[554,18856+28]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/lr0.ml[518,17699+16]..[518,17699+17])
                          Ppat_var "i" (src/lr0.ml[518,17699+16]..[518,17699+17])
                        expression (src/lr0.ml[519,17719+4]..[554,18856+28])
                          Pexp_ifthenelse
                          expression (src/lr0.ml[519,17719+7]..[519,17719+12])
                            Pexp_apply
                            expression (src/lr0.ml[519,17719+9]..[519,17719+10])
                              Pexp_ident "=" (src/lr0.ml[519,17719+9]..[519,17719+10])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[519,17719+7]..[519,17719+8])
                                  Pexp_ident "i" (src/lr0.ml[519,17719+7]..[519,17719+8])
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[519,17719+11]..[519,17719+12])
                                  Pexp_ident "n" (src/lr0.ml[519,17719+11]..[519,17719+12])
                            ]
                          expression (src/lr0.ml[520,17737+6]..[520,17737+10])
                            Pexp_construct "true" (src/lr0.ml[520,17737+6]..[520,17737+10])
                            None
                          Some
                            expression (src/lr0.ml[522,17757+6]..[554,18856+28])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/lr0.ml[522,17757+10]..[522,17757+17])
                                    Ppat_var "toksr1i" (src/lr0.ml[522,17757+10]..[522,17757+17])
                                  expression (src/lr0.ml[522,17757+20]..[522,17757+30])
                                    Pexp_apply
                                    expression (src/lr0.ml[522,17757+20]..[522,17757+30]) ghost
                                      Pexp_ident "Array.get" (src/lr0.ml[522,17757+20]..[522,17757+30]) ghost
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr0.ml[522,17757+20]..[522,17757+26])
                                          Pexp_ident "toksr1" (src/lr0.ml[522,17757+20]..[522,17757+26])
                                      <arg>
                                      Nolabel
                                        expression (src/lr0.ml[522,17757+28]..[522,17757+29])
                                          Pexp_ident "i" (src/lr0.ml[522,17757+28]..[522,17757+29])
                                    ]
                                <def>
                                  pattern (src/lr0.ml[523,17788+10]..[523,17788+17])
                                    Ppat_var "toksr2i" (src/lr0.ml[523,17788+10]..[523,17788+17])
                                  expression (src/lr0.ml[523,17788+20]..[523,17788+30])
                                    Pexp_apply
                                    expression (src/lr0.ml[523,17788+20]..[523,17788+30]) ghost
                                      Pexp_ident "Array.get" (src/lr0.ml[523,17788+20]..[523,17788+30]) ghost
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr0.ml[523,17788+20]..[523,17788+26])
                                          Pexp_ident "toksr2" (src/lr0.ml[523,17788+20]..[523,17788+26])
                                      <arg>
                                      Nolabel
                                        expression (src/lr0.ml[523,17788+28]..[523,17788+29])
                                          Pexp_ident "i" (src/lr0.ml[523,17788+28]..[523,17788+29])
                                    ]
                              ]
                              expression (src/lr0.ml[524,17822+6]..[554,18856+28])
                                Pexp_let Rec
                                [
                                  <def>
                                    pattern (src/lr0.ml[524,17822+14]..[524,17822+19])
                                      Ppat_var "loopj" (src/lr0.ml[524,17822+14]..[524,17822+19])
                                    expression (src/lr0.ml[524,17822+20]..[552,18822+24]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (src/lr0.ml[524,17822+20]..[524,17822+21])
                                        Ppat_var "j" (src/lr0.ml[524,17822+20]..[524,17822+21])
                                      expression (src/lr0.ml[525,17846+8]..[552,18822+24])
                                        Pexp_ifthenelse
                                        expression (src/lr0.ml[525,17846+11]..[525,17846+16])
                                          Pexp_apply
                                          expression (src/lr0.ml[525,17846+13]..[525,17846+14])
                                            Pexp_ident "=" (src/lr0.ml[525,17846+13]..[525,17846+14])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/lr0.ml[525,17846+11]..[525,17846+12])
                                                Pexp_ident "j" (src/lr0.ml[525,17846+11]..[525,17846+12])
                                            <arg>
                                            Nolabel
                                              expression (src/lr0.ml[525,17846+15]..[525,17846+16])
                                                Pexp_ident "i" (src/lr0.ml[525,17846+15]..[525,17846+16])
                                          ]
                                        expression (src/lr0.ml[526,17868+10]..[526,17868+14])
                                          Pexp_construct "true" (src/lr0.ml[526,17868+10]..[526,17868+14])
                                          None
                                        Some
                                          expression (src/lr0.ml[528,17896+10]..[552,18822+24])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/lr0.ml[528,17896+14]..[528,17896+21])
                                                  Ppat_var "toksr1j" (src/lr0.ml[528,17896+14]..[528,17896+21])
                                                expression (src/lr0.ml[528,17896+24]..[528,17896+34])
                                                  Pexp_apply
                                                  expression (src/lr0.ml[528,17896+24]..[528,17896+34]) ghost
                                                    Pexp_ident "Array.get" (src/lr0.ml[528,17896+24]..[528,17896+34]) ghost
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/lr0.ml[528,17896+24]..[528,17896+30])
                                                        Pexp_ident "toksr1" (src/lr0.ml[528,17896+24]..[528,17896+30])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/lr0.ml[528,17896+32]..[528,17896+33])
                                                        Pexp_ident "j" (src/lr0.ml[528,17896+32]..[528,17896+33])
                                                  ]
                                              <def>
                                                pattern (src/lr0.ml[529,17931+14]..[529,17931+21])
                                                  Ppat_var "toksr2j" (src/lr0.ml[529,17931+14]..[529,17931+21])
                                                expression (src/lr0.ml[529,17931+24]..[529,17931+34])
                                                  Pexp_apply
                                                  expression (src/lr0.ml[529,17931+24]..[529,17931+34]) ghost
                                                    Pexp_ident "Array.get" (src/lr0.ml[529,17931+24]..[529,17931+34]) ghost
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/lr0.ml[529,17931+24]..[529,17931+30])
                                                        Pexp_ident "toksr2" (src/lr0.ml[529,17931+24]..[529,17931+30])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/lr0.ml[529,17931+32]..[529,17931+33])
                                                        Pexp_ident "j" (src/lr0.ml[529,17931+32]..[529,17931+33])
                                                  ]
                                            ]
                                            expression (src/lr0.ml[544,18528+13]..[552,18822+24])
                                              Pexp_apply
                                              expression (src/lr0.ml[547,18662+10]..[547,18662+12])
                                                Pexp_ident "&&" (src/lr0.ml[547,18662+10]..[547,18662+12])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/lr0.ml[544,18528+13]..[546,18611+50])
                                                    Pexp_apply
                                                    expression (src/lr0.ml[544,18528+13]..[544,18528+31])
                                                      Pexp_ident "TerminalSet.subset" (src/lr0.ml[544,18528+13]..[544,18528+31])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/lr0.ml[545,18560+15]..[545,18560+50])
                                                          Pexp_apply
                                                          expression (src/lr0.ml[545,18560+16]..[545,18560+33])
                                                            Pexp_ident "TerminalSet.inter" (src/lr0.ml[545,18560+16]..[545,18560+33])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/lr0.ml[545,18560+34]..[545,18560+41])
                                                                Pexp_ident "toksr2i" (src/lr0.ml[545,18560+34]..[545,18560+41])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/lr0.ml[545,18560+42]..[545,18560+49])
                                                                Pexp_ident "toksr1j" (src/lr0.ml[545,18560+42]..[545,18560+49])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (src/lr0.ml[546,18611+15]..[546,18611+50])
                                                          Pexp_apply
                                                          expression (src/lr0.ml[546,18611+16]..[546,18611+33])
                                                            Pexp_ident "TerminalSet.union" (src/lr0.ml[546,18611+16]..[546,18611+33])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/lr0.ml[546,18611+34]..[546,18611+41])
                                                                Pexp_ident "toksr1i" (src/lr0.ml[546,18611+34]..[546,18611+41])
                                                            <arg>
                                                            Nolabel
                                                              expression (src/lr0.ml[546,18611+42]..[546,18611+49])
                                                                Pexp_ident "toksr2j" (src/lr0.ml[546,18611+42]..[546,18611+49])
                                                          ]
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (src/lr0.ml[548,18675+13]..[552,18822+24])
                                                    Pexp_apply
                                                    expression (src/lr0.ml[551,18809+10]..[551,18809+12])
                                                      Pexp_ident "&&" (src/lr0.ml[551,18809+10]..[551,18809+12])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/lr0.ml[548,18675+13]..[550,18758+50])
                                                          Pexp_apply
                                                          expression (src/lr0.ml[548,18675+13]..[548,18675+31])
                                                            Pexp_ident "TerminalSet.subset" (src/lr0.ml[548,18675+13]..[548,18675+31])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/lr0.ml[549,18707+15]..[549,18707+50])
                                                                Pexp_apply
                                                                expression (src/lr0.ml[549,18707+16]..[549,18707+33])
                                                                  Pexp_ident "TerminalSet.inter" (src/lr0.ml[549,18707+16]..[549,18707+33])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr0.ml[549,18707+34]..[549,18707+41])
                                                                      Pexp_ident "toksr1i" (src/lr0.ml[549,18707+34]..[549,18707+41])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr0.ml[549,18707+42]..[549,18707+49])
                                                                      Pexp_ident "toksr2j" (src/lr0.ml[549,18707+42]..[549,18707+49])
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (src/lr0.ml[550,18758+15]..[550,18758+50])
                                                                Pexp_apply
                                                                expression (src/lr0.ml[550,18758+16]..[550,18758+33])
                                                                  Pexp_ident "TerminalSet.union" (src/lr0.ml[550,18758+16]..[550,18758+33])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr0.ml[550,18758+34]..[550,18758+41])
                                                                      Pexp_ident "toksr2i" (src/lr0.ml[550,18758+34]..[550,18758+41])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr0.ml[550,18758+42]..[550,18758+49])
                                                                      Pexp_ident "toksr1j" (src/lr0.ml[550,18758+42]..[550,18758+49])
                                                                ]
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (src/lr0.ml[552,18822+13]..[552,18822+24])
                                                          Pexp_apply
                                                          expression (src/lr0.ml[552,18822+13]..[552,18822+18])
                                                            Pexp_ident "loopj" (src/lr0.ml[552,18822+13]..[552,18822+18])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/lr0.ml[552,18822+19]..[552,18822+24])
                                                                Pexp_apply
                                                                expression (src/lr0.ml[552,18822+21]..[552,18822+22])
                                                                  Pexp_ident "+" (src/lr0.ml[552,18822+21]..[552,18822+22])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr0.ml[552,18822+20]..[552,18822+21])
                                                                      Pexp_ident "j" (src/lr0.ml[552,18822+20]..[552,18822+21])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (src/lr0.ml[552,18822+22]..[552,18822+23])
                                                                      Pexp_constant PConst_int (1,None)
                                                                ]
                                                          ]
                                                    ]
                                              ]
                                ]
                                expression (src/lr0.ml[554,18856+6]..[554,18856+28])
                                  Pexp_apply
                                  expression (src/lr0.ml[554,18856+14]..[554,18856+16])
                                    Pexp_ident "&&" (src/lr0.ml[554,18856+14]..[554,18856+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/lr0.ml[554,18856+6]..[554,18856+13])
                                        Pexp_apply
                                        expression (src/lr0.ml[554,18856+6]..[554,18856+11])
                                          Pexp_ident "loopj" (src/lr0.ml[554,18856+6]..[554,18856+11])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/lr0.ml[554,18856+12]..[554,18856+13])
                                              Pexp_constant PConst_int (0,None)
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/lr0.ml[554,18856+17]..[554,18856+28])
                                        Pexp_apply
                                        expression (src/lr0.ml[554,18856+17]..[554,18856+22])
                                          Pexp_ident "loopi" (src/lr0.ml[554,18856+17]..[554,18856+22])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/lr0.ml[554,18856+23]..[554,18856+28])
                                              Pexp_apply
                                              expression (src/lr0.ml[554,18856+25]..[554,18856+26])
                                                Pexp_ident "+" (src/lr0.ml[554,18856+25]..[554,18856+26])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/lr0.ml[554,18856+24]..[554,18856+25])
                                                    Pexp_ident "i" (src/lr0.ml[554,18856+24]..[554,18856+25])
                                                <arg>
                                                Nolabel
                                                  expression (src/lr0.ml[554,18856+26]..[554,18856+27])
                                                    Pexp_constant PConst_int (1,None)
                                              ]
                                        ]
                                  ]
                  ]
                  expression (src/lr0.ml[556,18890+2]..[556,18890+9])
                    Pexp_apply
                    expression (src/lr0.ml[556,18890+2]..[556,18890+7])
                      Pexp_ident "loopi" (src/lr0.ml[556,18890+2]..[556,18890+7])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr0.ml[556,18890+8]..[556,18890+9])
                          Pexp_constant PConst_int (0,None)
                    ]
    ]
  structure_item (src/lr0.ml[580,19820+0]..[601,20503+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[580,19820+4]..[580,19820+18])
          Ppat_var "eos_compatible" (src/lr0.ml[580,19820+4]..[580,19820+18])
        expression (src/lr0.ml[580,19820+20]..[601,20503+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[580,19820+20]..[580,19820+32])
            Ppat_tuple
            [
              pattern (src/lr0.ml[580,19820+21]..[580,19820+23])
                Ppat_var "k1" (src/lr0.ml[580,19820+21]..[580,19820+23])
              pattern (src/lr0.ml[580,19820+25]..[580,19820+31])
                Ppat_var "toksr1" (src/lr0.ml[580,19820+25]..[580,19820+31])
            ]
          expression (src/lr0.ml[580,19820+33]..[601,20503+8]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/lr0.ml[580,19820+33]..[580,19820+45])
              Ppat_tuple
              [
                pattern (src/lr0.ml[580,19820+34]..[580,19820+36])
                  Ppat_var "k2" (src/lr0.ml[580,19820+34]..[580,19820+36])
                pattern (src/lr0.ml[580,19820+38]..[580,19820+44])
                  Ppat_var "toksr2" (src/lr0.ml[580,19820+38]..[580,19820+44])
              ]
            expression (src/lr0.ml[581,19868+2]..[601,20503+8])
              Pexp_sequence
              expression (src/lr0.ml[581,19868+2]..[581,19868+18])
                Pexp_assert
                expression (src/lr0.ml[581,19868+9]..[581,19868+18])
                  Pexp_apply
                  expression (src/lr0.ml[581,19868+13]..[581,19868+14])
                    Pexp_ident "=" (src/lr0.ml[581,19868+13]..[581,19868+14])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[581,19868+10]..[581,19868+12])
                        Pexp_ident "k1" (src/lr0.ml[581,19868+10]..[581,19868+12])
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[581,19868+15]..[581,19868+17])
                        Pexp_ident "k2" (src/lr0.ml[581,19868+15]..[581,19868+17])
                  ]
              expression (src/lr0.ml[582,19888+2]..[601,20503+8])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/lr0.ml[582,19888+6]..[582,19888+7])
                      Ppat_var "n" (src/lr0.ml[582,19888+6]..[582,19888+7])
                    expression (src/lr0.ml[582,19888+10]..[582,19888+29])
                      Pexp_apply
                      expression (src/lr0.ml[582,19888+10]..[582,19888+22])
                        Pexp_ident "Array.length" (src/lr0.ml[582,19888+10]..[582,19888+22])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr0.ml[582,19888+23]..[582,19888+29])
                            Pexp_ident "toksr1" (src/lr0.ml[582,19888+23]..[582,19888+29])
                      ]
                ]
                expression (src/lr0.ml[583,19921+2]..[601,20503+8])
                  Pexp_let Rec
                  [
                    <def>
                      pattern (src/lr0.ml[583,19921+10]..[583,19921+14])
                        Ppat_var "loop" (src/lr0.ml[583,19921+10]..[583,19921+14])
                      expression (src/lr0.ml[583,19921+15]..[599,20478+19]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/lr0.ml[583,19921+15]..[583,19921+16])
                          Ppat_var "i" (src/lr0.ml[583,19921+15]..[583,19921+16])
                        expression (src/lr0.ml[584,19940+4]..[599,20478+19])
                          Pexp_ifthenelse
                          expression (src/lr0.ml[584,19940+7]..[584,19940+12])
                            Pexp_apply
                            expression (src/lr0.ml[584,19940+9]..[584,19940+10])
                              Pexp_ident "=" (src/lr0.ml[584,19940+9]..[584,19940+10])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[584,19940+7]..[584,19940+8])
                                  Pexp_ident "i" (src/lr0.ml[584,19940+7]..[584,19940+8])
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[584,19940+11]..[584,19940+12])
                                  Pexp_ident "n" (src/lr0.ml[584,19940+11]..[584,19940+12])
                            ]
                          expression (src/lr0.ml[585,19958+6]..[585,19958+10])
                            Pexp_construct "true" (src/lr0.ml[585,19958+6]..[585,19958+10])
                            None
                          Some
                            expression (src/lr0.ml[587,19978+6]..[599,20478+19])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/lr0.ml[587,19978+10]..[587,19978+15])
                                    Ppat_var "toks1" (src/lr0.ml[587,19978+10]..[587,19978+15])
                                  expression (src/lr0.ml[587,19978+18]..[587,19978+28])
                                    Pexp_apply
                                    expression (src/lr0.ml[587,19978+18]..[587,19978+28]) ghost
                                      Pexp_ident "Array.get" (src/lr0.ml[587,19978+18]..[587,19978+28]) ghost
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr0.ml[587,19978+18]..[587,19978+24])
                                          Pexp_ident "toksr1" (src/lr0.ml[587,19978+18]..[587,19978+24])
                                      <arg>
                                      Nolabel
                                        expression (src/lr0.ml[587,19978+26]..[587,19978+27])
                                          Pexp_ident "i" (src/lr0.ml[587,19978+26]..[587,19978+27])
                                    ]
                                <def>
                                  pattern (src/lr0.ml[588,20007+10]..[588,20007+15])
                                    Ppat_var "toks2" (src/lr0.ml[588,20007+10]..[588,20007+15])
                                  expression (src/lr0.ml[588,20007+18]..[588,20007+28])
                                    Pexp_apply
                                    expression (src/lr0.ml[588,20007+18]..[588,20007+28]) ghost
                                      Pexp_ident "Array.get" (src/lr0.ml[588,20007+18]..[588,20007+28]) ghost
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr0.ml[588,20007+18]..[588,20007+24])
                                          Pexp_ident "toksr2" (src/lr0.ml[588,20007+18]..[588,20007+24])
                                      <arg>
                                      Nolabel
                                        expression (src/lr0.ml[588,20007+26]..[588,20007+27])
                                          Pexp_ident "i" (src/lr0.ml[588,20007+26]..[588,20007+27])
                                    ]
                              ]
                              expression (src/lr0.ml[589,20039+6]..[599,20478+19])
                                Pexp_apply
                                expression (src/lr0.ml[599,20478+6]..[599,20478+8])
                                  Pexp_ident "&&" (src/lr0.ml[599,20478+6]..[599,20478+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[589,20039+6]..[598,20468+9])
                                      Pexp_ifthenelse
                                      expression (src/lr0.ml[590,20051+11]..[590,20051+81])
                                        Pexp_apply
                                        expression (src/lr0.ml[590,20051+48]..[590,20051+50])
                                          Pexp_ident "&&" (src/lr0.ml[590,20051+48]..[590,20051+50])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/lr0.ml[590,20051+11]..[590,20051+47])
                                              Pexp_apply
                                              expression (src/lr0.ml[590,20051+11]..[590,20051+26])
                                                Pexp_ident "TerminalSet.mem" (src/lr0.ml[590,20051+11]..[590,20051+26])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/lr0.ml[590,20051+27]..[590,20051+41])
                                                    Pexp_ident "Terminal.sharp" (src/lr0.ml[590,20051+27]..[590,20051+41])
                                                <arg>
                                                Nolabel
                                                  expression (src/lr0.ml[590,20051+42]..[590,20051+47])
                                                    Pexp_ident "toks1" (src/lr0.ml[590,20051+42]..[590,20051+47])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (src/lr0.ml[590,20051+51]..[590,20051+81])
                                              Pexp_apply
                                              expression (src/lr0.ml[590,20051+51]..[590,20051+75])
                                                Pexp_ident "TerminalSet.is_singleton" (src/lr0.ml[590,20051+51]..[590,20051+75])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/lr0.ml[590,20051+76]..[590,20051+81])
                                                    Pexp_ident "toks1" (src/lr0.ml[590,20051+76]..[590,20051+81])
                                              ]
                                        ]
                                      expression (src/lr0.ml[592,20217+10]..[592,20217+46])
                                        Pexp_apply
                                        expression (src/lr0.ml[592,20217+10]..[592,20217+25])
                                          Pexp_ident "TerminalSet.mem" (src/lr0.ml[592,20217+10]..[592,20217+25])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/lr0.ml[592,20217+26]..[592,20217+40])
                                              Pexp_ident "Terminal.sharp" (src/lr0.ml[592,20217+26]..[592,20217+40])
                                          <arg>
                                          Nolabel
                                            expression (src/lr0.ml[592,20217+41]..[592,20217+46])
                                              Pexp_ident "toks2" (src/lr0.ml[592,20217+41]..[592,20217+46])
                                        ]
                                      Some
                                        expression (src/lr0.ml[593,20264+13]..[597,20453+14])
                                          Pexp_ifthenelse
                                          expression (src/lr0.ml[593,20264+16]..[593,20264+86])
                                            Pexp_apply
                                            expression (src/lr0.ml[593,20264+53]..[593,20264+55])
                                              Pexp_ident "&&" (src/lr0.ml[593,20264+53]..[593,20264+55])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/lr0.ml[593,20264+16]..[593,20264+52])
                                                  Pexp_apply
                                                  expression (src/lr0.ml[593,20264+16]..[593,20264+31])
                                                    Pexp_ident "TerminalSet.mem" (src/lr0.ml[593,20264+16]..[593,20264+31])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/lr0.ml[593,20264+32]..[593,20264+46])
                                                        Pexp_ident "Terminal.sharp" (src/lr0.ml[593,20264+32]..[593,20264+46])
                                                    <arg>
                                                    Nolabel
                                                      expression (src/lr0.ml[593,20264+47]..[593,20264+52])
                                                        Pexp_ident "toks2" (src/lr0.ml[593,20264+47]..[593,20264+52])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (src/lr0.ml[593,20264+56]..[593,20264+86])
                                                  Pexp_apply
                                                  expression (src/lr0.ml[593,20264+56]..[593,20264+80])
                                                    Pexp_ident "TerminalSet.is_singleton" (src/lr0.ml[593,20264+56]..[593,20264+80])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/lr0.ml[593,20264+81]..[593,20264+86])
                                                        Pexp_ident "toks2" (src/lr0.ml[593,20264+81]..[593,20264+86])
                                                  ]
                                            ]
                                          expression (src/lr0.ml[595,20393+10]..[595,20393+46])
                                            Pexp_apply
                                            expression (src/lr0.ml[595,20393+10]..[595,20393+25])
                                              Pexp_ident "TerminalSet.mem" (src/lr0.ml[595,20393+10]..[595,20393+25])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/lr0.ml[595,20393+26]..[595,20393+40])
                                                  Pexp_ident "Terminal.sharp" (src/lr0.ml[595,20393+26]..[595,20393+40])
                                              <arg>
                                              Nolabel
                                                expression (src/lr0.ml[595,20393+41]..[595,20393+46])
                                                  Pexp_ident "toks1" (src/lr0.ml[595,20393+41]..[595,20393+46])
                                            ]
                                          Some
                                            expression (src/lr0.ml[597,20453+10]..[597,20453+14])
                                              Pexp_construct "true" (src/lr0.ml[597,20453+10]..[597,20453+14])
                                              None
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[599,20478+9]..[599,20478+19])
                                      Pexp_apply
                                      expression (src/lr0.ml[599,20478+9]..[599,20478+13])
                                        Pexp_ident "loop" (src/lr0.ml[599,20478+9]..[599,20478+13])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr0.ml[599,20478+14]..[599,20478+19])
                                            Pexp_apply
                                            expression (src/lr0.ml[599,20478+16]..[599,20478+17])
                                              Pexp_ident "+" (src/lr0.ml[599,20478+16]..[599,20478+17])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/lr0.ml[599,20478+15]..[599,20478+16])
                                                  Pexp_ident "i" (src/lr0.ml[599,20478+15]..[599,20478+16])
                                              <arg>
                                              Nolabel
                                                expression (src/lr0.ml[599,20478+17]..[599,20478+18])
                                                  Pexp_constant PConst_int (1,None)
                                            ]
                                      ]
                                ]
                  ]
                  expression (src/lr0.ml[601,20503+2]..[601,20503+8])
                    Pexp_apply
                    expression (src/lr0.ml[601,20503+2]..[601,20503+6])
                      Pexp_ident "loop" (src/lr0.ml[601,20503+2]..[601,20503+6])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr0.ml[601,20503+7]..[601,20503+8])
                          Pexp_constant PConst_int (0,None)
                    ]
    ]
  structure_item (src/lr0.ml[631,21796+0]..[652,22420+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[631,21796+4]..[631,21796+20])
          Ppat_var "error_compatible" (src/lr0.ml[631,21796+4]..[631,21796+20])
        expression (src/lr0.ml[631,21796+22]..[652,22420+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[631,21796+22]..[631,21796+34])
            Ppat_tuple
            [
              pattern (src/lr0.ml[631,21796+23]..[631,21796+25])
                Ppat_var "k1" (src/lr0.ml[631,21796+23]..[631,21796+25])
              pattern (src/lr0.ml[631,21796+27]..[631,21796+33])
                Ppat_var "toksr1" (src/lr0.ml[631,21796+27]..[631,21796+33])
            ]
          expression (src/lr0.ml[631,21796+35]..[652,22420+8]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/lr0.ml[631,21796+35]..[631,21796+47])
              Ppat_tuple
              [
                pattern (src/lr0.ml[631,21796+36]..[631,21796+38])
                  Ppat_var "k2" (src/lr0.ml[631,21796+36]..[631,21796+38])
                pattern (src/lr0.ml[631,21796+40]..[631,21796+46])
                  Ppat_var "toksr2" (src/lr0.ml[631,21796+40]..[631,21796+46])
              ]
            expression (src/lr0.ml[632,21846+2]..[652,22420+8])
              Pexp_sequence
              expression (src/lr0.ml[632,21846+2]..[632,21846+18])
                Pexp_assert
                expression (src/lr0.ml[632,21846+9]..[632,21846+18])
                  Pexp_apply
                  expression (src/lr0.ml[632,21846+13]..[632,21846+14])
                    Pexp_ident "=" (src/lr0.ml[632,21846+13]..[632,21846+14])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[632,21846+10]..[632,21846+12])
                        Pexp_ident "k1" (src/lr0.ml[632,21846+10]..[632,21846+12])
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[632,21846+15]..[632,21846+17])
                        Pexp_ident "k2" (src/lr0.ml[632,21846+15]..[632,21846+17])
                  ]
              expression (src/lr0.ml[633,21866+2]..[652,22420+8])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/lr0.ml[633,21866+6]..[633,21866+7])
                      Ppat_var "n" (src/lr0.ml[633,21866+6]..[633,21866+7])
                    expression (src/lr0.ml[633,21866+10]..[633,21866+29])
                      Pexp_apply
                      expression (src/lr0.ml[633,21866+10]..[633,21866+22])
                        Pexp_ident "Array.length" (src/lr0.ml[633,21866+10]..[633,21866+22])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr0.ml[633,21866+23]..[633,21866+29])
                            Pexp_ident "toksr1" (src/lr0.ml[633,21866+23]..[633,21866+29])
                      ]
                ]
                expression (src/lr0.ml[634,21899+2]..[652,22420+8])
                  Pexp_let Rec
                  [
                    <def>
                      pattern (src/lr0.ml[634,21899+10]..[634,21899+14])
                        Ppat_var "loop" (src/lr0.ml[634,21899+10]..[634,21899+14])
                      expression (src/lr0.ml[634,21899+15]..[650,22395+19]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/lr0.ml[634,21899+15]..[634,21899+16])
                          Ppat_var "i" (src/lr0.ml[634,21899+15]..[634,21899+16])
                        expression (src/lr0.ml[635,21918+4]..[650,22395+19])
                          Pexp_ifthenelse
                          expression (src/lr0.ml[635,21918+7]..[635,21918+12])
                            Pexp_apply
                            expression (src/lr0.ml[635,21918+9]..[635,21918+10])
                              Pexp_ident "=" (src/lr0.ml[635,21918+9]..[635,21918+10])
                            [
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[635,21918+7]..[635,21918+8])
                                  Pexp_ident "i" (src/lr0.ml[635,21918+7]..[635,21918+8])
                              <arg>
                              Nolabel
                                expression (src/lr0.ml[635,21918+11]..[635,21918+12])
                                  Pexp_ident "n" (src/lr0.ml[635,21918+11]..[635,21918+12])
                            ]
                          expression (src/lr0.ml[636,21936+6]..[636,21936+10])
                            Pexp_construct "true" (src/lr0.ml[636,21936+6]..[636,21936+10])
                            None
                          Some
                            expression (src/lr0.ml[638,21956+6]..[650,22395+19])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/lr0.ml[638,21956+10]..[638,21956+15])
                                    Ppat_var "toks1" (src/lr0.ml[638,21956+10]..[638,21956+15])
                                  expression (src/lr0.ml[638,21956+18]..[638,21956+28])
                                    Pexp_apply
                                    expression (src/lr0.ml[638,21956+18]..[638,21956+28]) ghost
                                      Pexp_ident "Array.get" (src/lr0.ml[638,21956+18]..[638,21956+28]) ghost
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr0.ml[638,21956+18]..[638,21956+24])
                                          Pexp_ident "toksr1" (src/lr0.ml[638,21956+18]..[638,21956+24])
                                      <arg>
                                      Nolabel
                                        expression (src/lr0.ml[638,21956+26]..[638,21956+27])
                                          Pexp_ident "i" (src/lr0.ml[638,21956+26]..[638,21956+27])
                                    ]
                                <def>
                                  pattern (src/lr0.ml[639,21985+10]..[639,21985+15])
                                    Ppat_var "toks2" (src/lr0.ml[639,21985+10]..[639,21985+15])
                                  expression (src/lr0.ml[639,21985+18]..[639,21985+28])
                                    Pexp_apply
                                    expression (src/lr0.ml[639,21985+18]..[639,21985+28]) ghost
                                      Pexp_ident "Array.get" (src/lr0.ml[639,21985+18]..[639,21985+28]) ghost
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/lr0.ml[639,21985+18]..[639,21985+24])
                                          Pexp_ident "toksr2" (src/lr0.ml[639,21985+18]..[639,21985+24])
                                      <arg>
                                      Nolabel
                                        expression (src/lr0.ml[639,21985+26]..[639,21985+27])
                                          Pexp_ident "i" (src/lr0.ml[639,21985+26]..[639,21985+27])
                                    ]
                              ]
                              expression (src/lr0.ml[640,22017+6]..[650,22395+19])
                                Pexp_apply
                                expression (src/lr0.ml[650,22395+6]..[650,22395+8])
                                  Pexp_ident "&&" (src/lr0.ml[650,22395+6]..[650,22395+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[640,22017+6]..[649,22385+9])
                                      Pexp_ifthenelse
                                      expression (src/lr0.ml[641,22029+11]..[641,22029+47])
                                        Pexp_apply
                                        expression (src/lr0.ml[641,22029+11]..[641,22029+26])
                                          Pexp_ident "TerminalSet.mem" (src/lr0.ml[641,22029+11]..[641,22029+26])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/lr0.ml[641,22029+27]..[641,22029+41])
                                              Pexp_ident "Terminal.error" (src/lr0.ml[641,22029+27]..[641,22029+41])
                                          <arg>
                                          Nolabel
                                            expression (src/lr0.ml[641,22029+42]..[641,22029+47])
                                              Pexp_ident "toks1" (src/lr0.ml[641,22029+42]..[641,22029+47])
                                        ]
                                      expression (src/lr0.ml[643,22168+10]..[643,22168+46])
                                        Pexp_apply
                                        expression (src/lr0.ml[643,22168+10]..[643,22168+25])
                                          Pexp_ident "TerminalSet.mem" (src/lr0.ml[643,22168+10]..[643,22168+25])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/lr0.ml[643,22168+26]..[643,22168+40])
                                              Pexp_ident "Terminal.error" (src/lr0.ml[643,22168+26]..[643,22168+40])
                                          <arg>
                                          Nolabel
                                            expression (src/lr0.ml[643,22168+41]..[643,22168+46])
                                              Pexp_ident "toks2" (src/lr0.ml[643,22168+41]..[643,22168+46])
                                        ]
                                      Some
                                        expression (src/lr0.ml[644,22215+13]..[648,22370+14])
                                          Pexp_ifthenelse
                                          expression (src/lr0.ml[644,22215+16]..[644,22215+52])
                                            Pexp_apply
                                            expression (src/lr0.ml[644,22215+16]..[644,22215+31])
                                              Pexp_ident "TerminalSet.mem" (src/lr0.ml[644,22215+16]..[644,22215+31])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/lr0.ml[644,22215+32]..[644,22215+46])
                                                  Pexp_ident "Terminal.error" (src/lr0.ml[644,22215+32]..[644,22215+46])
                                              <arg>
                                              Nolabel
                                                expression (src/lr0.ml[644,22215+47]..[644,22215+52])
                                                  Pexp_ident "toks2" (src/lr0.ml[644,22215+47]..[644,22215+52])
                                            ]
                                          expression (src/lr0.ml[646,22310+10]..[646,22310+46])
                                            Pexp_apply
                                            expression (src/lr0.ml[646,22310+10]..[646,22310+25])
                                              Pexp_ident "TerminalSet.mem" (src/lr0.ml[646,22310+10]..[646,22310+25])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/lr0.ml[646,22310+26]..[646,22310+40])
                                                  Pexp_ident "Terminal.error" (src/lr0.ml[646,22310+26]..[646,22310+40])
                                              <arg>
                                              Nolabel
                                                expression (src/lr0.ml[646,22310+41]..[646,22310+46])
                                                  Pexp_ident "toks1" (src/lr0.ml[646,22310+41]..[646,22310+46])
                                            ]
                                          Some
                                            expression (src/lr0.ml[648,22370+10]..[648,22370+14])
                                              Pexp_construct "true" (src/lr0.ml[648,22370+10]..[648,22370+14])
                                              None
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[650,22395+9]..[650,22395+19])
                                      Pexp_apply
                                      expression (src/lr0.ml[650,22395+9]..[650,22395+13])
                                        Pexp_ident "loop" (src/lr0.ml[650,22395+9]..[650,22395+13])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr0.ml[650,22395+14]..[650,22395+19])
                                            Pexp_apply
                                            expression (src/lr0.ml[650,22395+16]..[650,22395+17])
                                              Pexp_ident "+" (src/lr0.ml[650,22395+16]..[650,22395+17])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/lr0.ml[650,22395+15]..[650,22395+16])
                                                  Pexp_ident "i" (src/lr0.ml[650,22395+15]..[650,22395+16])
                                              <arg>
                                              Nolabel
                                                expression (src/lr0.ml[650,22395+17]..[650,22395+18])
                                                  Pexp_constant PConst_int (1,None)
                                            ]
                                      ]
                                ]
                  ]
                  expression (src/lr0.ml[652,22420+2]..[652,22420+8])
                    Pexp_apply
                    expression (src/lr0.ml[652,22420+2]..[652,22420+6])
                      Pexp_ident "loop" (src/lr0.ml[652,22420+2]..[652,22420+6])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr0.ml[652,22420+7]..[652,22420+8])
                          Pexp_constant PConst_int (0,None)
                    ]
    ]
  structure_item (src/lr0.ml[657,22569+0]..[662,22821+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[657,22569+4]..[657,22569+9])
          Ppat_var "union" (src/lr0.ml[657,22569+4]..[657,22569+9])
        expression (src/lr0.ml[657,22569+10]..[662,22821+45]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[657,22569+10]..[657,22569+22])
            Ppat_tuple
            [
              pattern (src/lr0.ml[657,22569+11]..[657,22569+13])
                Ppat_var "k1" (src/lr0.ml[657,22569+11]..[657,22569+13])
              pattern (src/lr0.ml[657,22569+15]..[657,22569+21])
                Ppat_var "toksr1" (src/lr0.ml[657,22569+15]..[657,22569+21])
            ]
          expression (src/lr0.ml[657,22569+23]..[662,22821+45]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/lr0.ml[657,22569+23]..[657,22569+43])
              Ppat_alias "s2" (src/lr0.ml[657,22569+40]..[657,22569+42])
              pattern (src/lr0.ml[657,22569+24]..[657,22569+36])
                Ppat_tuple
                [
                  pattern (src/lr0.ml[657,22569+25]..[657,22569+27])
                    Ppat_var "k2" (src/lr0.ml[657,22569+25]..[657,22569+27])
                  pattern (src/lr0.ml[657,22569+29]..[657,22569+35])
                    Ppat_var "toksr2" (src/lr0.ml[657,22569+29]..[657,22569+35])
                ]
            expression (src/lr0.ml[658,22615+2]..[662,22821+45])
              Pexp_sequence
              expression (src/lr0.ml[658,22615+2]..[658,22615+18])
                Pexp_assert
                expression (src/lr0.ml[658,22615+9]..[658,22615+18])
                  Pexp_apply
                  expression (src/lr0.ml[658,22615+13]..[658,22615+14])
                    Pexp_ident "=" (src/lr0.ml[658,22615+13]..[658,22615+14])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[658,22615+10]..[658,22615+12])
                        Pexp_ident "k1" (src/lr0.ml[658,22615+10]..[658,22615+12])
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[658,22615+15]..[658,22615+17])
                        Pexp_ident "k2" (src/lr0.ml[658,22615+15]..[658,22615+17])
                  ]
              expression (src/lr0.ml[659,22635+2]..[662,22821+45])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/lr0.ml[659,22635+6]..[659,22635+11])
                      Ppat_var "toksr" (src/lr0.ml[659,22635+6]..[659,22635+11])
                    expression (src/lr0.ml[659,22635+14]..[659,22635+61])
                      Pexp_apply
                      expression (src/lr0.ml[659,22635+14]..[659,22635+29])
                        Pexp_ident "MArray.leq_join" (src/lr0.ml[659,22635+14]..[659,22635+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr0.ml[659,22635+30]..[659,22635+47])
                            Pexp_ident "TerminalSet.union" (src/lr0.ml[659,22635+30]..[659,22635+47])
                        <arg>
                        Nolabel
                          expression (src/lr0.ml[659,22635+48]..[659,22635+54])
                            Pexp_ident "toksr1" (src/lr0.ml[659,22635+48]..[659,22635+54])
                        <arg>
                        Nolabel
                          expression (src/lr0.ml[659,22635+55]..[659,22635+61])
                            Pexp_ident "toksr2" (src/lr0.ml[659,22635+55]..[659,22635+61])
                      ]
                ]
                expression (src/lr0.ml[662,22821+2]..[662,22821+45])
                  Pexp_ifthenelse
                  expression (src/lr0.ml[662,22821+5]..[662,22821+20])
                    Pexp_apply
                    expression (src/lr0.ml[662,22821+12]..[662,22821+14])
                      Pexp_ident "==" (src/lr0.ml[662,22821+12]..[662,22821+14])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr0.ml[662,22821+5]..[662,22821+11])
                          Pexp_ident "toksr2" (src/lr0.ml[662,22821+5]..[662,22821+11])
                      <arg>
                      Nolabel
                        expression (src/lr0.ml[662,22821+15]..[662,22821+20])
                          Pexp_ident "toksr" (src/lr0.ml[662,22821+15]..[662,22821+20])
                    ]
                  expression (src/lr0.ml[662,22821+26]..[662,22821+28])
                    Pexp_ident "s2" (src/lr0.ml[662,22821+26]..[662,22821+28])
                  Some
                    expression (src/lr0.ml[662,22821+34]..[662,22821+45])
                      Pexp_tuple
                      [
                        expression (src/lr0.ml[662,22821+35]..[662,22821+37])
                          Pexp_ident "k1" (src/lr0.ml[662,22821+35]..[662,22821+37])
                        expression (src/lr0.ml[662,22821+39]..[662,22821+44])
                          Pexp_ident "toksr" (src/lr0.ml[662,22821+39]..[662,22821+44])
                      ]
    ]
  structure_item (src/lr0.ml[667,22983+0]..[670,23078+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[667,22983+4]..[667,22983+12])
          Ppat_var "restrict" (src/lr0.ml[667,22983+4]..[667,22983+12])
        expression (src/lr0.ml[667,22983+13]..[670,23078+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[667,22983+13]..[667,22983+17])
            Ppat_var "toks" (src/lr0.ml[667,22983+13]..[667,22983+17])
          expression (src/lr0.ml[667,22983+18]..[670,23078+9]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/lr0.ml[667,22983+18]..[667,22983+28])
              Ppat_tuple
              [
                pattern (src/lr0.ml[667,22983+19]..[667,22983+20])
                  Ppat_var "k" (src/lr0.ml[667,22983+19]..[667,22983+20])
                pattern (src/lr0.ml[667,22983+22]..[667,22983+27])
                  Ppat_var "toksr" (src/lr0.ml[667,22983+22]..[667,22983+27])
              ]
            expression (src/lr0.ml[668,23014+2]..[670,23078+9])
              Pexp_tuple
              [
                expression (src/lr0.ml[668,23014+2]..[668,23014+3])
                  Pexp_ident "k" (src/lr0.ml[668,23014+2]..[668,23014+3])
                expression (src/lr0.ml[668,23014+5]..[670,23078+9])
                  Pexp_apply
                  expression (src/lr0.ml[668,23014+5]..[668,23014+14])
                    Pexp_ident "Array.map" (src/lr0.ml[668,23014+5]..[668,23014+14])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[668,23014+15]..[670,23078+3])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/lr0.ml[668,23014+20]..[668,23014+26])
                          Ppat_var "toksri" (src/lr0.ml[668,23014+20]..[668,23014+26])
                        expression (src/lr0.ml[669,23044+4]..[669,23044+33])
                          Pexp_apply
                          expression (src/lr0.ml[669,23044+4]..[669,23044+21])
                            Pexp_ident "TerminalSet.inter" (src/lr0.ml[669,23044+4]..[669,23044+21])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[669,23044+22]..[669,23044+28])
                                Pexp_ident "toksri" (src/lr0.ml[669,23044+22]..[669,23044+28])
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[669,23044+29]..[669,23044+33])
                                Pexp_ident "toks" (src/lr0.ml[669,23044+29]..[669,23044+33])
                          ]
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[670,23078+4]..[670,23078+9])
                        Pexp_ident "toksr" (src/lr0.ml[670,23078+4]..[670,23078+9])
                  ]
              ]
    ]
  structure_item (src/lr0.ml[675,23205+0]..[676,23223+37])
    Pstr_type Rec
    [
      type_declaration "reductions" (src/lr0.ml[675,23205+5]..[675,23205+15]) (src/lr0.ml[675,23205+0]..[676,23223+37])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/lr0.ml[676,23223+2]..[676,23223+37])
              Ptyp_constr "TerminalMap.t" (src/lr0.ml[676,23223+24]..[676,23223+37])
              [
                core_type (src/lr0.ml[676,23223+2]..[676,23223+23])
                  Ptyp_constr "list" (src/lr0.ml[676,23223+19]..[676,23223+23])
                  [
                    core_type (src/lr0.ml[676,23223+2]..[676,23223+18])
                      Ptyp_constr "Production.index" (src/lr0.ml[676,23223+2]..[676,23223+18])
                      []
                  ]
              ]
    ]
  structure_item (src/lr0.ml[681,23371+0]..[688,23509+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[681,23371+4]..[681,23371+17])
          Ppat_var "add_reduction" (src/lr0.ml[681,23371+4]..[681,23371+17])
        expression (src/lr0.ml[681,23371+18]..[688,23509+48]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[681,23371+18]..[681,23371+22])
            Ppat_var "prod" (src/lr0.ml[681,23371+18]..[681,23371+22])
          expression (src/lr0.ml[681,23371+23]..[688,23509+48]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/lr0.ml[681,23371+23]..[681,23371+26])
              Ppat_var "tok" (src/lr0.ml[681,23371+23]..[681,23371+26])
            expression (src/lr0.ml[681,23371+27]..[688,23509+48]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/lr0.ml[681,23371+27]..[681,23371+37])
                Ppat_var "reductions" (src/lr0.ml[681,23371+27]..[681,23371+37])
              expression (src/lr0.ml[682,23411+2]..[688,23509+48])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/lr0.ml[682,23411+6]..[682,23411+11])
                      Ppat_var "prods" (src/lr0.ml[682,23411+6]..[682,23411+11])
                    expression (src/lr0.ml[683,23425+4]..[686,23495+8])
                      Pexp_try
                      expression (src/lr0.ml[684,23433+6]..[684,23433+39])
                        Pexp_apply
                        expression (src/lr0.ml[684,23433+6]..[684,23433+24])
                          Pexp_ident "TerminalMap.lookup" (src/lr0.ml[684,23433+6]..[684,23433+24])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr0.ml[684,23433+25]..[684,23433+28])
                              Pexp_ident "tok" (src/lr0.ml[684,23433+25]..[684,23433+28])
                          <arg>
                          Nolabel
                            expression (src/lr0.ml[684,23433+29]..[684,23433+39])
                              Pexp_ident "reductions" (src/lr0.ml[684,23433+29]..[684,23433+39])
                        ]
                      [
                        <case>
                          pattern (src/lr0.ml[685,23473+9]..[685,23473+18])
                            Ppat_construct "Not_found" (src/lr0.ml[685,23473+9]..[685,23473+18])
                            None
                          expression (src/lr0.ml[686,23495+6]..[686,23495+8])
                            Pexp_construct "[]" (src/lr0.ml[686,23495+6]..[686,23495+8])
                            None
                      ]
                ]
                expression (src/lr0.ml[688,23509+2]..[688,23509+48])
                  Pexp_apply
                  expression (src/lr0.ml[688,23509+2]..[688,23509+17])
                    Pexp_ident "TerminalMap.add" (src/lr0.ml[688,23509+2]..[688,23509+17])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[688,23509+18]..[688,23509+21])
                        Pexp_ident "tok" (src/lr0.ml[688,23509+18]..[688,23509+21])
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[688,23509+22]..[688,23509+37])
                        Pexp_construct "::" (src/lr0.ml[688,23509+28]..[688,23509+30])
                        Some
                          expression (src/lr0.ml[688,23509+23]..[688,23509+36]) ghost
                            Pexp_tuple
                            [
                              expression (src/lr0.ml[688,23509+23]..[688,23509+27])
                                Pexp_ident "prod" (src/lr0.ml[688,23509+23]..[688,23509+27])
                              expression (src/lr0.ml[688,23509+31]..[688,23509+36])
                                Pexp_ident "prods" (src/lr0.ml[688,23509+31]..[688,23509+36])
                            ]
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[688,23509+38]..[688,23509+48])
                        Pexp_ident "reductions" (src/lr0.ml[688,23509+38]..[688,23509+48])
                  ]
    ]
  structure_item (src/lr0.ml[693,23694+0]..[694,23736+55])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[693,23694+4]..[693,23694+18])
          Ppat_var "add_reductions" (src/lr0.ml[693,23694+4]..[693,23694+18])
        expression (src/lr0.ml[693,23694+19]..[694,23736+55]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[693,23694+19]..[693,23694+23])
            Ppat_var "prod" (src/lr0.ml[693,23694+19]..[693,23694+23])
          expression (src/lr0.ml[693,23694+24]..[694,23736+55]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/lr0.ml[693,23694+24]..[693,23694+28])
              Ppat_var "toks" (src/lr0.ml[693,23694+24]..[693,23694+28])
            expression (src/lr0.ml[693,23694+29]..[694,23736+55]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/lr0.ml[693,23694+29]..[693,23694+39])
                Ppat_var "reductions" (src/lr0.ml[693,23694+29]..[693,23694+39])
              expression (src/lr0.ml[694,23736+2]..[694,23736+55])
                Pexp_apply
                expression (src/lr0.ml[694,23736+2]..[694,23736+18])
                  Pexp_ident "TerminalSet.fold" (src/lr0.ml[694,23736+2]..[694,23736+18])
                [
                  <arg>
                  Nolabel
                    expression (src/lr0.ml[694,23736+19]..[694,23736+39])
                      Pexp_apply
                      expression (src/lr0.ml[694,23736+20]..[694,23736+33])
                        Pexp_ident "add_reduction" (src/lr0.ml[694,23736+20]..[694,23736+33])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr0.ml[694,23736+34]..[694,23736+38])
                            Pexp_ident "prod" (src/lr0.ml[694,23736+34]..[694,23736+38])
                      ]
                  <arg>
                  Nolabel
                    expression (src/lr0.ml[694,23736+40]..[694,23736+44])
                      Pexp_ident "toks" (src/lr0.ml[694,23736+40]..[694,23736+44])
                  <arg>
                  Nolabel
                    expression (src/lr0.ml[694,23736+45]..[694,23736+55])
                      Pexp_ident "reductions" (src/lr0.ml[694,23736+45]..[694,23736+55])
                ]
    ]
  structure_item (src/lr0.ml[696,23793+0]..[699,23911+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[696,23793+4]..[696,23793+20])
          Ppat_var "reductions_table" (src/lr0.ml[696,23793+4]..[696,23793+20])
        expression (src/lr0.ml[696,23793+21]..[699,23911+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[696,23793+21]..[696,23793+26])
            Ppat_var "state" (src/lr0.ml[696,23793+21]..[696,23793+26])
          expression (src/lr0.ml[697,23822+2]..[699,23911+40])
            Pexp_apply
            expression (src/lr0.ml[697,23822+2]..[697,23822+16])
              Pexp_ident "List.fold_left" (src/lr0.ml[697,23822+2]..[697,23822+16])
            [
              <arg>
              Nolabel
                expression (src/lr0.ml[697,23822+17]..[699,23911+3])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/lr0.ml[697,23822+22]..[697,23822+32])
                    Ppat_var "reductions" (src/lr0.ml[697,23822+22]..[697,23822+32])
                  expression (src/lr0.ml[697,23822+33]..[698,23871+39]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/lr0.ml[697,23822+33]..[697,23822+45])
                      Ppat_tuple
                      [
                        pattern (src/lr0.ml[697,23822+34]..[697,23822+38])
                          Ppat_var "toks" (src/lr0.ml[697,23822+34]..[697,23822+38])
                        pattern (src/lr0.ml[697,23822+40]..[697,23822+44])
                          Ppat_var "prod" (src/lr0.ml[697,23822+40]..[697,23822+44])
                      ]
                    expression (src/lr0.ml[698,23871+4]..[698,23871+39])
                      Pexp_apply
                      expression (src/lr0.ml[698,23871+4]..[698,23871+18])
                        Pexp_ident "add_reductions" (src/lr0.ml[698,23871+4]..[698,23871+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/lr0.ml[698,23871+19]..[698,23871+23])
                            Pexp_ident "prod" (src/lr0.ml[698,23871+19]..[698,23871+23])
                        <arg>
                        Nolabel
                          expression (src/lr0.ml[698,23871+24]..[698,23871+28])
                            Pexp_ident "toks" (src/lr0.ml[698,23871+24]..[698,23871+28])
                        <arg>
                        Nolabel
                          expression (src/lr0.ml[698,23871+29]..[698,23871+39])
                            Pexp_ident "reductions" (src/lr0.ml[698,23871+29]..[698,23871+39])
                      ]
              <arg>
              Nolabel
                expression (src/lr0.ml[699,23911+4]..[699,23911+21])
                  Pexp_ident "TerminalMap.empty" (src/lr0.ml[699,23911+4]..[699,23911+21])
              <arg>
              Nolabel
                expression (src/lr0.ml[699,23911+22]..[699,23911+40])
                  Pexp_apply
                  expression (src/lr0.ml[699,23911+23]..[699,23911+33])
                    Pexp_ident "reductions" (src/lr0.ml[699,23911+23]..[699,23911+33])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[699,23911+34]..[699,23911+39])
                        Pexp_ident "state" (src/lr0.ml[699,23911+34]..[699,23911+39])
                  ]
            ]
    ]
  structure_item (src/lr0.ml[704,24077+0]..[707,24185+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[704,24077+4]..[704,24077+20])
          Ppat_var "reduction_tokens" (src/lr0.ml[704,24077+4]..[704,24077+20])
        expression (src/lr0.ml[704,24077+21]..[707,24185+32]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[704,24077+21]..[704,24077+31])
            Ppat_var "reductions" (src/lr0.ml[704,24077+21]..[704,24077+31])
          expression (src/lr0.ml[705,24111+2]..[707,24185+32])
            Pexp_apply
            expression (src/lr0.ml[705,24111+2]..[705,24111+18])
              Pexp_ident "TerminalMap.fold" (src/lr0.ml[705,24111+2]..[705,24111+18])
            [
              <arg>
              Nolabel
                expression (src/lr0.ml[705,24111+19]..[707,24185+3])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/lr0.ml[705,24111+24]..[705,24111+27])
                    Ppat_var "tok" (src/lr0.ml[705,24111+24]..[705,24111+27])
                  expression (src/lr0.ml[705,24111+28]..[706,24154+30]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/lr0.ml[705,24111+28]..[705,24111+34])
                      Ppat_var "_prods" (src/lr0.ml[705,24111+28]..[705,24111+34])
                    expression (src/lr0.ml[705,24111+35]..[706,24154+30]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/lr0.ml[705,24111+35]..[705,24111+39])
                        Ppat_var "toks" (src/lr0.ml[705,24111+35]..[705,24111+39])
                      expression (src/lr0.ml[706,24154+6]..[706,24154+30])
                        Pexp_apply
                        expression (src/lr0.ml[706,24154+6]..[706,24154+21])
                          Pexp_ident "TerminalSet.add" (src/lr0.ml[706,24154+6]..[706,24154+21])
                        [
                          <arg>
                          Nolabel
                            expression (src/lr0.ml[706,24154+22]..[706,24154+25])
                              Pexp_ident "tok" (src/lr0.ml[706,24154+22]..[706,24154+25])
                          <arg>
                          Nolabel
                            expression (src/lr0.ml[706,24154+26]..[706,24154+30])
                              Pexp_ident "toks" (src/lr0.ml[706,24154+26]..[706,24154+30])
                        ]
              <arg>
              Nolabel
                expression (src/lr0.ml[707,24185+4]..[707,24185+14])
                  Pexp_ident "reductions" (src/lr0.ml[707,24185+4]..[707,24185+14])
              <arg>
              Nolabel
                expression (src/lr0.ml[707,24185+15]..[707,24185+32])
                  Pexp_ident "TerminalSet.empty" (src/lr0.ml[707,24185+15]..[707,24185+32])
            ]
    ]
  structure_item (src/lr0.ml[716,24528+0]..[727,24889+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[716,24528+4]..[716,24528+10])
          Ppat_var "invert" (src/lr0.ml[716,24528+4]..[716,24528+10])
        expression (src/lr0.ml[716,24528+11]..[727,24889+34]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[716,24528+11]..[716,24528+21])
            Ppat_var "reductions" (src/lr0.ml[716,24528+11]..[716,24528+21])
          expression (src/lr0.ml[716,24528+22]..[727,24889+34])
            Pexp_constraint
            expression (src/lr0.ml[717,24584+2]..[727,24889+34])
              Pexp_apply
              expression (src/lr0.ml[717,24584+2]..[717,24584+18])
                Pexp_ident "TerminalMap.fold" (src/lr0.ml[717,24584+2]..[717,24584+18])
              [
                <arg>
                Nolabel
                  expression (src/lr0.ml[717,24584+19]..[727,24889+3])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/lr0.ml[717,24584+24]..[717,24584+27])
                      Ppat_var "tok" (src/lr0.ml[717,24584+24]..[717,24584+27])
                    expression (src/lr0.ml[717,24584+28]..[726,24869+19]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/lr0.ml[717,24584+28]..[717,24584+33])
                        Ppat_var "prods" (src/lr0.ml[717,24584+28]..[717,24584+33])
                      expression (src/lr0.ml[717,24584+34]..[726,24869+19]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/lr0.ml[717,24584+34]..[717,24584+41])
                          Ppat_var "inverse" (src/lr0.ml[717,24584+34]..[717,24584+41])
                        expression (src/lr0.ml[718,24629+4]..[726,24869+19])
                          Pexp_apply
                          expression (src/lr0.ml[718,24629+4]..[718,24629+18])
                            Pexp_ident "List.fold_left" (src/lr0.ml[718,24629+4]..[718,24629+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[718,24629+19]..[726,24869+5])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/lr0.ml[718,24629+24]..[718,24629+31])
                                  Ppat_var "inverse" (src/lr0.ml[718,24629+24]..[718,24629+31])
                                expression (src/lr0.ml[718,24629+32]..[725,24805+63]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/lr0.ml[718,24629+32]..[718,24629+36])
                                    Ppat_var "prod" (src/lr0.ml[718,24629+32]..[718,24629+36])
                                  expression (src/lr0.ml[719,24669+6]..[725,24805+63])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (src/lr0.ml[719,24669+10]..[719,24669+14])
                                          Ppat_var "toks" (src/lr0.ml[719,24669+10]..[719,24669+14])
                                        expression (src/lr0.ml[720,24686+8]..[723,24768+27])
                                          Pexp_try
                                          expression (src/lr0.ml[721,24698+10]..[721,24698+43])
                                            Pexp_apply
                                            expression (src/lr0.ml[721,24698+10]..[721,24698+30])
                                              Pexp_ident "ProductionMap.lookup" (src/lr0.ml[721,24698+10]..[721,24698+30])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/lr0.ml[721,24698+31]..[721,24698+35])
                                                  Pexp_ident "prod" (src/lr0.ml[721,24698+31]..[721,24698+35])
                                              <arg>
                                              Nolabel
                                                expression (src/lr0.ml[721,24698+36]..[721,24698+43])
                                                  Pexp_ident "inverse" (src/lr0.ml[721,24698+36]..[721,24698+43])
                                            ]
                                          [
                                            <case>
                                              pattern (src/lr0.ml[722,24742+13]..[722,24742+22])
                                                Ppat_construct "Not_found" (src/lr0.ml[722,24742+13]..[722,24742+22])
                                                None
                                              expression (src/lr0.ml[723,24768+10]..[723,24768+27])
                                                Pexp_ident "TerminalSet.empty" (src/lr0.ml[723,24768+10]..[723,24768+27])
                                          ]
                                    ]
                                    expression (src/lr0.ml[725,24805+6]..[725,24805+63])
                                      Pexp_apply
                                      expression (src/lr0.ml[725,24805+6]..[725,24805+23])
                                        Pexp_ident "ProductionMap.add" (src/lr0.ml[725,24805+6]..[725,24805+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr0.ml[725,24805+24]..[725,24805+28])
                                            Pexp_ident "prod" (src/lr0.ml[725,24805+24]..[725,24805+28])
                                        <arg>
                                        Nolabel
                                          expression (src/lr0.ml[725,24805+29]..[725,24805+55])
                                            Pexp_apply
                                            expression (src/lr0.ml[725,24805+30]..[725,24805+45])
                                              Pexp_ident "TerminalSet.add" (src/lr0.ml[725,24805+30]..[725,24805+45])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/lr0.ml[725,24805+46]..[725,24805+49])
                                                  Pexp_ident "tok" (src/lr0.ml[725,24805+46]..[725,24805+49])
                                              <arg>
                                              Nolabel
                                                expression (src/lr0.ml[725,24805+50]..[725,24805+54])
                                                  Pexp_ident "toks" (src/lr0.ml[725,24805+50]..[725,24805+54])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (src/lr0.ml[725,24805+56]..[725,24805+63])
                                            Pexp_ident "inverse" (src/lr0.ml[725,24805+56]..[725,24805+63])
                                      ]
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[726,24869+6]..[726,24869+13])
                                Pexp_ident "inverse" (src/lr0.ml[726,24869+6]..[726,24869+13])
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[726,24869+14]..[726,24869+19])
                                Pexp_ident "prods" (src/lr0.ml[726,24869+14]..[726,24869+19])
                          ]
                <arg>
                Nolabel
                  expression (src/lr0.ml[727,24889+4]..[727,24889+14])
                    Pexp_ident "reductions" (src/lr0.ml[727,24889+4]..[727,24889+14])
                <arg>
                Nolabel
                  expression (src/lr0.ml[727,24889+15]..[727,24889+34])
                    Pexp_ident "ProductionMap.empty" (src/lr0.ml[727,24889+15]..[727,24889+34])
              ]
            core_type (src/lr0.ml[716,24528+24]..[716,24528+53])
              Ptyp_constr "ProductionMap.t" (src/lr0.ml[716,24528+38]..[716,24528+53])
              [
                core_type (src/lr0.ml[716,24528+24]..[716,24528+37])
                  Ptyp_constr "TerminalSet.t" (src/lr0.ml[716,24528+24]..[716,24528+37])
                  []
              ]
    ]
  structure_item (src/lr0.ml[733,25117+0]..[745,25728+78])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[733,25117+4]..[733,25117+20])
          Ppat_var "has_eos_conflict" (src/lr0.ml[733,25117+4]..[733,25117+20])
        expression (src/lr0.ml[733,25117+21]..[745,25728+78]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[733,25117+21]..[733,25117+32])
            Ppat_var "transitions" (src/lr0.ml[733,25117+21]..[733,25117+32])
          expression (src/lr0.ml[733,25117+33]..[745,25728+78]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/lr0.ml[733,25117+33]..[733,25117+43])
              Ppat_var "reductions" (src/lr0.ml[733,25117+33]..[733,25117+43])
            expression (src/lr0.ml[734,25163+2]..[745,25728+78])
              Pexp_match
              expression (src/lr0.ml[734,25163+8]..[734,25163+63])
                Pexp_apply
                expression (src/lr0.ml[734,25163+8]..[734,25163+37])
                  Pexp_ident "TerminalMap.lookup_and_remove" (src/lr0.ml[734,25163+8]..[734,25163+37])
                [
                  <arg>
                  Nolabel
                    expression (src/lr0.ml[734,25163+38]..[734,25163+52])
                      Pexp_ident "Terminal.sharp" (src/lr0.ml[734,25163+38]..[734,25163+52])
                  <arg>
                  Nolabel
                    expression (src/lr0.ml[734,25163+53]..[734,25163+63])
                      Pexp_ident "reductions" (src/lr0.ml[734,25163+53]..[734,25163+63])
                ]
              [
                <case>
                  pattern (src/lr0.ml[735,25232+4]..[735,25232+23])
                    Ppat_exception
                    pattern (src/lr0.ml[735,25232+14]..[735,25232+23])
                      Ppat_construct "Not_found" (src/lr0.ml[735,25232+14]..[735,25232+23])
                      None
                  expression (src/lr0.ml[737,25326+6]..[737,25326+11])
                    Pexp_construct "false" (src/lr0.ml[737,25326+6]..[737,25326+11])
                    None
                <case>
                  pattern (src/lr0.ml[738,25338+4]..[738,25338+21])
                    Ppat_tuple
                    [
                      pattern (src/lr0.ml[738,25338+4]..[738,25338+9])
                        Ppat_var "prods" (src/lr0.ml[738,25338+4]..[738,25338+9])
                      pattern (src/lr0.ml[738,25338+11]..[738,25338+21])
                        Ppat_var "reductions" (src/lr0.ml[738,25338+11]..[738,25338+21])
                    ]
                  expression (src/lr0.ml[741,25502+6]..[745,25728+78])
                    Pexp_apply
                    expression (src/lr0.ml[741,25502+28]..[741,25502+30])
                      Pexp_ident "||" (src/lr0.ml[741,25502+28]..[741,25502+30])
                    [
                      <arg>
                      Nolabel
                        expression (src/lr0.ml[741,25502+6]..[741,25502+27])
                          Pexp_apply
                          expression (src/lr0.ml[741,25502+24]..[741,25502+25])
                            Pexp_ident ">" (src/lr0.ml[741,25502+24]..[741,25502+25])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[741,25502+6]..[741,25502+23])
                                Pexp_apply
                                expression (src/lr0.ml[741,25502+6]..[741,25502+17])
                                  Pexp_ident "List.length" (src/lr0.ml[741,25502+6]..[741,25502+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[741,25502+18]..[741,25502+23])
                                      Pexp_ident "prods" (src/lr0.ml[741,25502+18]..[741,25502+23])
                                ]
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[741,25502+26]..[741,25502+27])
                                Pexp_constant PConst_int (1,None)
                          ]
                      <arg>
                      Nolabel
                        expression (src/lr0.ml[744,25681+6]..[745,25728+78])
                          Pexp_apply
                          expression (src/lr0.ml[744,25681+44]..[744,25681+46])
                            Pexp_ident "||" (src/lr0.ml[744,25681+44]..[744,25681+46])
                          [
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[744,25681+6]..[744,25681+43])
                                Pexp_apply
                                expression (src/lr0.ml[744,25681+6]..[744,25681+9])
                                  Pexp_ident "not" (src/lr0.ml[744,25681+6]..[744,25681+9])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[744,25681+10]..[744,25681+43])
                                      Pexp_apply
                                      expression (src/lr0.ml[744,25681+11]..[744,25681+31])
                                        Pexp_ident "TerminalMap.is_empty" (src/lr0.ml[744,25681+11]..[744,25681+31])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/lr0.ml[744,25681+32]..[744,25681+42])
                                            Pexp_ident "reductions" (src/lr0.ml[744,25681+32]..[744,25681+42])
                                      ]
                                ]
                            <arg>
                            Nolabel
                              expression (src/lr0.ml[745,25728+6]..[745,25728+78])
                                Pexp_apply
                                expression (src/lr0.ml[745,25728+6]..[745,25728+22])
                                  Pexp_ident "SymbolMap.exists" (src/lr0.ml[745,25728+6]..[745,25728+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[745,25728+23]..[745,25728+66])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (src/lr0.ml[745,25728+28]..[745,25728+34])
                                        Ppat_var "symbol" (src/lr0.ml[745,25728+28]..[745,25728+34])
                                      expression (src/lr0.ml[745,25728+35]..[745,25728+65]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (src/lr0.ml[745,25728+35]..[745,25728+36])
                                          Ppat_any
                                        expression (src/lr0.ml[745,25728+40]..[745,25728+65])
                                          Pexp_apply
                                          expression (src/lr0.ml[745,25728+40]..[745,25728+58])
                                            Pexp_ident "Symbol.is_terminal" (src/lr0.ml[745,25728+40]..[745,25728+58])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/lr0.ml[745,25728+59]..[745,25728+65])
                                                Pexp_ident "symbol" (src/lr0.ml[745,25728+59]..[745,25728+65])
                                          ]
                                  <arg>
                                  Nolabel
                                    expression (src/lr0.ml[745,25728+67]..[745,25728+78])
                                      Pexp_ident "transitions" (src/lr0.ml[745,25728+67]..[745,25728+78])
                                ]
                          ]
                    ]
              ]
    ]
  structure_item (src/lr0.ml[747,25808+0]..[750,25902+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[747,25808+4]..[747,25808+29])
          Ppat_var "has_eos_conflict_lr1state" (src/lr0.ml[747,25808+4]..[747,25808+29])
        expression (src/lr0.ml[747,25808+30]..[750,25902+28]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/lr0.ml[747,25808+30]..[747,25808+48])
            Ppat_constraint
            pattern (src/lr0.ml[747,25808+31]..[747,25808+36])
              Ppat_var "state" (src/lr0.ml[747,25808+31]..[747,25808+36])
            core_type (src/lr0.ml[747,25808+39]..[747,25808+47])
              Ptyp_constr "lr1state" (src/lr0.ml[747,25808+39]..[747,25808+47])
              []
          expression (src/lr0.ml[748,25859+2]..[750,25902+28])
            Pexp_apply
            expression (src/lr0.ml[748,25859+2]..[748,25859+18])
              Pexp_ident "has_eos_conflict" (src/lr0.ml[748,25859+2]..[748,25859+18])
            [
              <arg>
              Nolabel
                expression (src/lr0.ml[749,25878+4]..[749,25878+23])
                  Pexp_apply
                  expression (src/lr0.ml[749,25878+5]..[749,25878+16])
                    Pexp_ident "transitions" (src/lr0.ml[749,25878+5]..[749,25878+16])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[749,25878+17]..[749,25878+22])
                        Pexp_ident "state" (src/lr0.ml[749,25878+17]..[749,25878+22])
                  ]
              <arg>
              Nolabel
                expression (src/lr0.ml[750,25902+4]..[750,25902+28])
                  Pexp_apply
                  expression (src/lr0.ml[750,25902+5]..[750,25902+21])
                    Pexp_ident "reductions_table" (src/lr0.ml[750,25902+5]..[750,25902+21])
                  [
                    <arg>
                    Nolabel
                      expression (src/lr0.ml[750,25902+22]..[750,25902+27])
                        Pexp_ident "state" (src/lr0.ml[750,25902+22]..[750,25902+27])
                  ]
            ]
    ]
]

open Grammar
module InfiniteArray = MenhirLib.InfiniteArray
let () = let module M = (Middle.Run)() in ()
let () = let module L = (LoopDetection.Run)() in ()
module VarSet = SparseBitSet
module SymbolicLookahead =
  struct
    type t = (TerminalSet.t * VarSet.t)
    let constant toks = (toks, VarSet.empty)
    let empty = constant TerminalSet.empty
    let union (toks1, vars1) ((toks2, vars2) as s2) =
      let toks = TerminalSet.union toks1 toks2
      and vars = VarSet.union vars1 vars2 in
      if (toks2 == toks) && (vars2 == vars) then s2 else (toks, vars)
    let variable (var : int) =
      ((TerminalSet.empty, (VarSet.singleton var)) : t)
    let project (toks, vars) = assert (VarSet.is_empty vars); toks
  end
module SymbolicClosure = (Item.Closure)(SymbolicLookahead)
type concretelr1state = TerminalSet.t Item.Map.t
let closure (state : concretelr1state) =
  (Item.Map.map SymbolicLookahead.project
     (SymbolicClosure.closure (Item.Map.map SymbolicLookahead.constant state)) : 
  concretelr1state)
let transitions (state : 'a Item.Map.t) =
  (Item.Map.fold
     (fun item ->
        fun toks ->
          fun transitions ->
            match Item.classify item with
            | Item.Shift (symbol, item') ->
                let items : 'a Item.Map.t =
                  try SymbolMap.find symbol transitions
                  with | Not_found -> Item.Map.empty in
                SymbolMap.add symbol (Item.Map.add item' toks items)
                  transitions
            | Item.Reduce _ -> transitions) state SymbolMap.empty : 'a
                                                                    Item.Map.t
                                                                    SymbolMap.t)
let reductions (state : 'a Item.Map.t) =
  (Item.Map.fold
     (fun item ->
        fun toks ->
          fun accu ->
            match Item.classify item with
            | Item.Reduce prod -> (toks, prod) :: accu
            | Item.Shift _ -> accu) state [] : ('a * Production.index) list)
type node = int
type symbolic_transition_target = (node * SymbolicLookahead.t array)
let n = ref 0
let states : Item.Set.t InfiniteArray.t = InfiniteArray.make Item.Set.empty
let _transitions : symbolic_transition_target SymbolMap.t InfiniteArray.t =
  InfiniteArray.make SymbolMap.empty
let _reductions :
  (SymbolicLookahead.t * Production.index) list InfiniteArray.t =
  InfiniteArray.make []
let map : (Item.Set.t, node) Hashtbl.t = Hashtbl.create 50021
let incoming : Symbol.t option InfiniteArray.t = InfiniteArray.make None
let rec explore (symbol : Symbol.t option) (state : Item.Set.t) =
  (try Hashtbl.find map state
   with
   | Not_found ->
       let k = !n in
       (n := (k + 1);
        InfiniteArray.set states k state;
        Hashtbl.add map state k;
        InfiniteArray.set incoming k symbol;
        (let ((_ : int), (symbolic_state : SymbolicClosure.state)) =
           Item.Set.fold
             (fun item ->
                fun (i, symbolic_state) ->
                  ((i + 1),
                    (Item.Map.add item (SymbolicLookahead.variable i)
                       symbolic_state))) state (0, Item.Map.empty) in
         let closure = SymbolicClosure.closure symbolic_state in
         InfiniteArray.set _reductions k (reductions closure);
         InfiniteArray.set _transitions k
           (SymbolMap.mapi
              (fun symbol ->
                 fun symbolic_state ->
                   let (k : node) =
                     explore (Some symbol) (Item.Map.domain symbolic_state) in
                   let lookahead : SymbolicLookahead.t array =
                     Array.make (Item.Map.cardinal symbolic_state)
                       SymbolicLookahead.empty in
                   let (_ : int) =
                     Item.Map.fold
                       (fun _ -> fun s -> fun i -> lookahead.(i) <- s; i + 1)
                       symbolic_state 0 in
                   ((k, lookahead) : symbolic_transition_target))
              (transitions closure));
         k)) : node)
let start prod = (Item.Set.singleton (Item.import (prod, 0)) : Item.Set.t)
let entry : node ProductionMap.t =
  ProductionMap.start (fun prod -> explore None (start prod))
let () = Hashtbl.clear map
let n = !n
let () =
  Error.logA 1
    (fun f -> Printf.fprintf f "Built an LR(0) automaton with %d states.\n" n);
  Time.tick "Construction of the LR(0) automaton"
let items node = (InfiniteArray.get states node : Item.Set.t)
let incoming_symbol node =
  (InfiniteArray.get incoming node : Symbol.t option)
let outgoing_edges node =
  (SymbolMap.map (fun (target, _) -> target)
     (InfiniteArray.get _transitions node) : node SymbolMap.t)
let outgoing_symbols node =
  (SymbolMap.domain (InfiniteArray.get _transitions node) : Symbol.t list)
let predecessors : node list array Lazy.t =
  lazy
    (let predecessors = Array.make n [] in
     for source = 0 to n - 1 do
       SymbolMap.iter
         (fun _symbol ->
            fun (target, _) ->
              predecessors.(target) <- (source :: (predecessors.(target))))
         (InfiniteArray.get _transitions source)
     done;
     predecessors)
let incoming_edges (c : node) = ((Lazy.force predecessors).(c) : node list)
module ImperativeNodeMap =
  (Fix.Glue.ArraysAsImperativeMaps)(struct let n = n end)
type lr1state = (node * TerminalSet.t array)
module Lr1StateAsOrderedType =
  struct
    type t = lr1state
    let compare (k1, toksr1) (k2, toksr2) =
      let c = k1 - k2 in if c <> 0 then c else Generic.compare toksr1 toksr2
  end
let export (k, toksr) =
  let ((_ : int), items) =
    Item.Set.fold
      (fun item ->
         fun (i, items) -> ((i + 1), (Item.Map.add item (toksr.(i)) items)))
      (InfiniteArray.get states k) (0, Item.Map.empty) in
  items
let print_concrete leading (state : concretelr1state) =
  Misc.with_buffer 1024
    (fun buffer ->
       Item.Map.iter
         (fun item ->
            fun toks ->
              Printf.bprintf buffer "%s%s [ %s ]\n" leading (Item.print item)
                (TerminalSet.print toks)) state)
let print leading state = print_concrete leading (export state)
let print_closure leading state =
  print_concrete leading (closure (export state))
let core (k, _) = k
let debug = false
let well_formed (k, toksr) =
  (not debug) ||
    ((Array.length toksr) = (Item.Set.cardinal (InfiniteArray.get states k)))
let start k =
  let state = (k, [|(TerminalSet.singleton Terminal.sharp)|]) in
  assert (well_formed state); state
let interpret (((_, toksr) as state) : lr1state)
  ((toks, vars) : SymbolicLookahead.t) =
  (assert (well_formed state);
   VarSet.fold
     (fun var ->
        fun toks ->
          assert ((var >= 0) && (var < (Array.length toksr)));
          TerminalSet.union (toksr.(var)) toks) vars toks : TerminalSet.t)
let reductions (((k, _) as state) : lr1state) =
  (List.map (fun (s, prod) -> ((interpret state s), prod))
     (InfiniteArray.get _reductions k) : (TerminalSet.t * Production.index)
                                           list)
let transitions (((k, _) as state) : lr1state) =
  (SymbolMap.map
     (fun ((k, sr) : symbolic_transition_target) ->
        ((k, (Array.map (interpret state) sr)) : lr1state))
     (InfiniteArray.get _transitions k) : lr1state SymbolMap.t)
let transition symbol (((k, _) as state) : lr1state) =
  (let ((k, sr) : symbolic_transition_target) =
     try SymbolMap.find symbol (InfiniteArray.get _transitions k)
     with | Not_found -> assert false in
   (k, (Array.map (interpret state) sr)) : lr1state)
let transition_tokens transitions =
  SymbolMap.fold
    (fun symbol ->
       fun _target ->
         fun toks ->
           match symbol with
           | Symbol.T tok -> TerminalSet.add tok toks
           | Symbol.N _ -> toks) transitions TerminalSet.empty
let equal ((k1, toksr1) as state1) ((k2, toksr2) as state2) =
  assert ((k1 = k2) && ((well_formed state1) && (well_formed state2)));
  (let rec loop i =
     if i = 0
     then true
     else
       (let i = i - 1 in
        (TerminalSet.equal (toksr1.(i)) (toksr2.(i))) && (loop i)) in
   loop (Array.length toksr1))
let subsume ((k1, toksr1) as state1) ((k2, toksr2) as state2) =
  assert ((k1 = k2) && ((well_formed state1) && (well_formed state2)));
  (let rec loop i =
     if i = 0
     then true
     else
       (let i = i - 1 in
        (TerminalSet.subset (toksr1.(i)) (toksr2.(i))) && (loop i)) in
   loop (Array.length toksr1))
let compatible (k1, toksr1) (k2, toksr2) =
  assert (k1 = k2);
  (let n = Array.length toksr1 in
   let rec loopi i =
     if i = n
     then true
     else
       (let toksr1i = toksr1.(i)
        and toksr2i = toksr2.(i) in
        let rec loopj j =
          if j = i
          then true
          else
            (let toksr1j = toksr1.(j)
             and toksr2j = toksr2.(j) in
             (TerminalSet.subset (TerminalSet.inter toksr2i toksr1j)
                (TerminalSet.union toksr1i toksr2j))
               &&
               ((TerminalSet.subset (TerminalSet.inter toksr1i toksr2j)
                   (TerminalSet.union toksr2i toksr1j))
                  && (loopj (j + 1)))) in
        (loopj 0) && (loopi (i + 1))) in
   loopi 0)
let eos_compatible (k1, toksr1) (k2, toksr2) =
  assert (k1 = k2);
  (let n = Array.length toksr1 in
   let rec loop i =
     if i = n
     then true
     else
       (let toks1 = toksr1.(i)
        and toks2 = toksr2.(i) in
        (if
           (TerminalSet.mem Terminal.sharp toks1) &&
             (TerminalSet.is_singleton toks1)
         then TerminalSet.mem Terminal.sharp toks2
         else
           if
             (TerminalSet.mem Terminal.sharp toks2) &&
               (TerminalSet.is_singleton toks2)
           then TerminalSet.mem Terminal.sharp toks1
           else true)
          && (loop (i + 1))) in
   loop 0)
let error_compatible (k1, toksr1) (k2, toksr2) =
  assert (k1 = k2);
  (let n = Array.length toksr1 in
   let rec loop i =
     if i = n
     then true
     else
       (let toks1 = toksr1.(i)
        and toks2 = toksr2.(i) in
        (if TerminalSet.mem Terminal.error toks1
         then TerminalSet.mem Terminal.error toks2
         else
           if TerminalSet.mem Terminal.error toks2
           then TerminalSet.mem Terminal.error toks1
           else true)
          && (loop (i + 1))) in
   loop 0)
let union (k1, toksr1) ((k2, toksr2) as s2) =
  assert (k1 = k2);
  (let toksr = MArray.leq_join TerminalSet.union toksr1 toksr2 in
   if toksr2 == toksr then s2 else (k1, toksr))
let restrict toks (k, toksr) =
  (k, (Array.map (fun toksri -> TerminalSet.inter toksri toks) toksr))
type reductions = Production.index list TerminalMap.t
let add_reduction prod tok reductions =
  let prods = try TerminalMap.lookup tok reductions with | Not_found -> [] in
  TerminalMap.add tok (prod :: prods) reductions
let add_reductions prod toks reductions =
  TerminalSet.fold (add_reduction prod) toks reductions
let reductions_table state =
  List.fold_left
    (fun reductions ->
       fun (toks, prod) -> add_reductions prod toks reductions)
    TerminalMap.empty (reductions state)
let reduction_tokens reductions =
  TerminalMap.fold
    (fun tok -> fun _prods -> fun toks -> TerminalSet.add tok toks)
    reductions TerminalSet.empty
let invert reductions =
  (TerminalMap.fold
     (fun tok ->
        fun prods ->
          fun inverse ->
            List.fold_left
              (fun inverse ->
                 fun prod ->
                   let toks =
                     try ProductionMap.lookup prod inverse
                     with | Not_found -> TerminalSet.empty in
                   ProductionMap.add prod (TerminalSet.add tok toks) inverse)
              inverse prods) reductions ProductionMap.empty : TerminalSet.t
                                                                ProductionMap.t)
let has_eos_conflict transitions reductions =
  match TerminalMap.lookup_and_remove Terminal.sharp reductions with
  | exception Not_found -> false
  | (prods, reductions) ->
      ((List.length prods) > 1) ||
        ((not (TerminalMap.is_empty reductions)) ||
           (SymbolMap.exists
              (fun symbol -> fun _ -> Symbol.is_terminal symbol) transitions))
let has_eos_conflict_lr1state (state : lr1state) =
  has_eos_conflict (transitions state) (reductions_table state)
[
  structure_item (src/lr0.ml[14,993+0]..src/lr0.ml[14,993+12])
    Tstr_open Fresh
    module_expr (src/lr0.ml[14,993+5]..src/lr0.ml[14,993+12])
      Tmod_ident "Dune__exe!.Grammar"
  structure_item (src/lr0.ml[16,1007+0]..src/lr0.ml[17,1030+25])
    Tstr_module
    InfiniteArray/430
      module_expr (src/lr0.ml[17,1030+2]..src/lr0.ml[17,1030+25])
        Tmod_ident "MenhirLib!.InfiniteArray"
  structure_item (src/lr0.ml[23,1216+0]..src/lr0.ml[25,1258+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[23,1216+4]..src/lr0.ml[23,1216+6])
          Tpat_construct "()"
          []
          None
        expression (src/lr0.ml[24,1225+2]..src/lr0.ml[25,1258+4])
          Texp_letmodule "M/433"
          module_expr (src/lr0.ml[24,1225+17]..src/lr0.ml[24,1225+27])
            Tmod_apply_unit
            module_expr (src/lr0.ml[24,1225+17]..src/lr0.ml[24,1225+27])
              module_expr (src/lr0.ml[24,1225+17]..src/lr0.ml[24,1225+27])
                Tmod_ident "Dune__exe!.Middle.Run"
          expression (src/lr0.ml[25,1258+2]..src/lr0.ml[25,1258+4])
            Texp_construct "()"
            []
    ]
  structure_item (src/lr0.ml[31,1422+0]..src/lr0.ml[33,1471+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[31,1422+4]..src/lr0.ml[31,1422+6])
          Tpat_construct "()"
          []
          None
        expression (src/lr0.ml[32,1431+2]..src/lr0.ml[33,1471+4])
          Texp_letmodule "L/436"
          module_expr (src/lr0.ml[32,1431+17]..src/lr0.ml[32,1431+34])
            Tmod_apply_unit
            module_expr (src/lr0.ml[32,1431+17]..src/lr0.ml[32,1431+34])
              module_expr (src/lr0.ml[32,1431+17]..src/lr0.ml[32,1431+34])
                Tmod_ident "Dune__exe!.LoopDetection.Run"
          expression (src/lr0.ml[33,1471+2]..src/lr0.ml[33,1471+4])
            Texp_construct "()"
            []
    ]
  structure_item (src/lr0.ml[42,1760+0]..src/lr0.ml[42,1760+28])
    Tstr_module
    VarSet/437
      module_expr (src/lr0.ml[42,1760+16]..src/lr0.ml[42,1760+28])
        Tmod_ident "Dune__exe!.SparseBitSet"
  structure_item (src/lr0.ml[44,1790+0]..src/lr0.ml[70,2335+3])
    Tstr_module
    SymbolicLookahead/562
      module_expr (src/lr0.ml[44,1790+27]..src/lr0.ml[70,2335+3])
        Tmod_structure
        [
          structure_item (src/lr0.ml[46,1825+2]..src/lr0.ml[47,1836+28])
            Tstr_type Rec
            [
              type_declaration t/438 (src/lr0.ml[46,1825+2]..src/lr0.ml[47,1836+28])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/lr0.ml[47,1836+4]..src/lr0.ml[47,1836+28])
                      Ttyp_tuple
                      [
                        core_type (src/lr0.ml[47,1836+4]..src/lr0.ml[47,1836+17])
                          Ttyp_constr "Dune__exe!.Grammar.TerminalSet.t"
                          []
                        core_type (src/lr0.ml[47,1836+20]..src/lr0.ml[47,1836+28])
                          Ttyp_constr "VarSet/437.t"
                          []
                      ]
            ]
          structure_item (src/lr0.ml[49,1866+2]..src/lr0.ml[50,1888+24])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/lr0.ml[49,1866+6]..src/lr0.ml[49,1866+14])
                  Tpat_var "constant/540"
                expression (src/lr0.ml[49,1866+15]..src/lr0.ml[50,1888+24]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/lr0.ml[49,1866+15]..src/lr0.ml[49,1866+19])
                        Tpat_var "toks/542"
                      expression (src/lr0.ml[50,1888+4]..src/lr0.ml[50,1888+24])
                        Texp_tuple
                        [
                          expression (src/lr0.ml[50,1888+5]..src/lr0.ml[50,1888+9])
                            Texp_ident "toks/542"
                          expression (src/lr0.ml[50,1888+11]..src/lr0.ml[50,1888+23])
                            Texp_ident "VarSet/437.empty"
                        ]
                  ]
            ]
          structure_item (src/lr0.ml[52,1914+2]..src/lr0.ml[53,1928+30])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/lr0.ml[52,1914+6]..src/lr0.ml[52,1914+11])
                  Tpat_var "empty/543"
                expression (src/lr0.ml[53,1928+4]..src/lr0.ml[53,1928+30])
                  Texp_apply
                  expression (src/lr0.ml[53,1928+4]..src/lr0.ml[53,1928+12])
                    Texp_ident "constant/540"
                  [
                    <arg>
                      Nolabel
                      expression (src/lr0.ml[53,1928+13]..src/lr0.ml[53,1928+30])
                        Texp_ident "Dune__exe!.Grammar.TerminalSet.empty"
                  ]
            ]
          structure_item (src/lr0.ml[55,1960+2]..src/lr0.ml[61,2161+18])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/lr0.ml[55,1960+6]..src/lr0.ml[55,1960+11])
                  Tpat_var "union/544"
                expression (src/lr0.ml[55,1960+12]..src/lr0.ml[61,2161+18]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/lr0.ml[55,1960+12]..src/lr0.ml[55,1960+26])
                        Tpat_tuple
                        [
                          pattern (src/lr0.ml[55,1960+13]..src/lr0.ml[55,1960+18])
                            Tpat_var "toks1/546"
                          pattern (src/lr0.ml[55,1960+20]..src/lr0.ml[55,1960+25])
                            Tpat_var "vars1/547"
                        ]
                      expression (src/lr0.ml[55,1960+27]..src/lr0.ml[61,2161+18]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/lr0.ml[55,1960+27]..src/lr0.ml[55,1960+49])
                              Tpat_alias "s2/550"
                              pattern (src/lr0.ml[55,1960+28]..src/lr0.ml[55,1960+42])
                                Tpat_tuple
                                [
                                  pattern (src/lr0.ml[55,1960+29]..src/lr0.ml[55,1960+34])
                                    Tpat_var "toks2/548"
                                  pattern (src/lr0.ml[55,1960+36]..src/lr0.ml[55,1960+41])
                                    Tpat_var "vars2/549"
                                ]
                            expression (src/lr0.ml[56,2012+4]..src/lr0.ml[61,2161+18])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/lr0.ml[56,2012+8]..src/lr0.ml[56,2012+12])
                                    Tpat_var "toks/551"
                                  expression (src/lr0.ml[56,2012+15]..src/lr0.ml[56,2012+44])
                                    Texp_apply
                                    expression (src/lr0.ml[56,2012+15]..src/lr0.ml[56,2012+32])
                                      Texp_ident "Dune__exe!.Grammar.TerminalSet.union"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr0.ml[56,2012+33]..src/lr0.ml[56,2012+38])
                                          Texp_ident "toks1/546"
                                      <arg>
                                        Nolabel
                                        expression (src/lr0.ml[56,2012+39]..src/lr0.ml[56,2012+44])
                                          Texp_ident "toks2/548"
                                    ]
                                <def>
                                  pattern (src/lr0.ml[57,2057+8]..src/lr0.ml[57,2057+12])
                                    Tpat_var "vars/552"
                                  expression (src/lr0.ml[57,2057+15]..src/lr0.ml[57,2057+39])
                                    Texp_apply
                                    expression (src/lr0.ml[57,2057+15]..src/lr0.ml[57,2057+27])
                                      Texp_ident "VarSet/437.union"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr0.ml[57,2057+28]..src/lr0.ml[57,2057+33])
                                          Texp_ident "vars1/547"
                                      <arg>
                                        Nolabel
                                        expression (src/lr0.ml[57,2057+34]..src/lr0.ml[57,2057+39])
                                          Texp_ident "vars2/549"
                                    ]
                              ]
                              expression (src/lr0.ml[58,2100+4]..src/lr0.ml[61,2161+18])
                                Texp_ifthenelse
                                expression (src/lr0.ml[58,2100+7]..src/lr0.ml[58,2100+37])
                                  Texp_apply
                                  expression (src/lr0.ml[58,2100+21]..src/lr0.ml[58,2100+23])
                                    Texp_ident "Stdlib!.&&"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr0.ml[58,2100+7]..src/lr0.ml[58,2100+20])
                                        Texp_apply
                                        expression (src/lr0.ml[58,2100+13]..src/lr0.ml[58,2100+15])
                                          Texp_ident "Stdlib!.=="
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr0.ml[58,2100+7]..src/lr0.ml[58,2100+12])
                                              Texp_ident "toks2/548"
                                          <arg>
                                            Nolabel
                                            expression (src/lr0.ml[58,2100+16]..src/lr0.ml[58,2100+20])
                                              Texp_ident "toks/551"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/lr0.ml[58,2100+24]..src/lr0.ml[58,2100+37])
                                        Texp_apply
                                        expression (src/lr0.ml[58,2100+30]..src/lr0.ml[58,2100+32])
                                          Texp_ident "Stdlib!.=="
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr0.ml[58,2100+24]..src/lr0.ml[58,2100+29])
                                              Texp_ident "vars2/549"
                                          <arg>
                                            Nolabel
                                            expression (src/lr0.ml[58,2100+33]..src/lr0.ml[58,2100+37])
                                              Texp_ident "vars/552"
                                        ]
                                  ]
                                expression (src/lr0.ml[59,2143+6]..src/lr0.ml[59,2143+8])
                                  Texp_ident "s2/550"
                                Some
                                  expression (src/lr0.ml[61,2161+6]..src/lr0.ml[61,2161+18])
                                    Texp_tuple
                                    [
                                      expression (src/lr0.ml[61,2161+7]..src/lr0.ml[61,2161+11])
                                        Texp_ident "toks/551"
                                      expression (src/lr0.ml[61,2161+13]..src/lr0.ml[61,2161+17])
                                        Texp_ident "vars/552"
                                    ]
                        ]
                  ]
            ]
          structure_item (src/lr0.ml[63,2181+2]..src/lr0.ml[64,2214+45])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/lr0.ml[63,2181+6]..src/lr0.ml[63,2181+14])
                  Tpat_var "variable/554"
                expression (src/lr0.ml[63,2181+15]..src/lr0.ml[64,2214+45]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/lr0.ml[63,2181+16]..src/lr0.ml[63,2181+19])
                        extra
                          Tpat_extra_constraint
                          core_type (src/lr0.ml[63,2181+22]..src/lr0.ml[63,2181+25])
                            Ttyp_constr "int/1!"
                            []
                        Tpat_alias "var/556"
                        pattern (src/lr0.ml[63,2181+16]..src/lr0.ml[63,2181+19])
                          Tpat_any
                      expression (src/lr0.ml[64,2214+4]..src/lr0.ml[64,2214+45])
                        extra
                          Texp_constraint
                          core_type (src/lr0.ml[63,2181+29]..src/lr0.ml[63,2181+30])
                            Ttyp_constr "t/438"
                            []
                        Texp_tuple
                        [
                          expression (src/lr0.ml[64,2214+5]..src/lr0.ml[64,2214+22])
                            Texp_ident "Dune__exe!.Grammar.TerminalSet.empty"
                          expression (src/lr0.ml[64,2214+24]..src/lr0.ml[64,2214+44])
                            Texp_apply
                            expression (src/lr0.ml[64,2214+24]..src/lr0.ml[64,2214+40])
                              Texp_ident "VarSet/437.singleton"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr0.ml[64,2214+41]..src/lr0.ml[64,2214+44])
                                  Texp_ident "var/556"
                            ]
                        ]
                  ]
            ]
          structure_item (src/lr0.ml[66,2261+2]..src/lr0.ml[68,2325+8])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/lr0.ml[66,2261+6]..src/lr0.ml[66,2261+13])
                  Tpat_var "project/557"
                expression (src/lr0.ml[66,2261+14]..src/lr0.ml[68,2325+8]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/lr0.ml[66,2261+14]..src/lr0.ml[66,2261+26])
                        Tpat_tuple
                        [
                          pattern (src/lr0.ml[66,2261+15]..src/lr0.ml[66,2261+19])
                            Tpat_var "toks/559"
                          pattern (src/lr0.ml[66,2261+21]..src/lr0.ml[66,2261+25])
                            Tpat_var "vars/560"
                        ]
                      expression (src/lr0.ml[67,2290+4]..src/lr0.ml[68,2325+8])
                        Texp_sequence
                        expression (src/lr0.ml[67,2290+4]..src/lr0.ml[67,2290+33])
                          Texp_assert                          expression (src/lr0.ml[67,2290+11]..src/lr0.ml[67,2290+33])
                            Texp_apply
                            expression (src/lr0.ml[67,2290+12]..src/lr0.ml[67,2290+27])
                              Texp_ident "VarSet/437.is_empty"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr0.ml[67,2290+28]..src/lr0.ml[67,2290+32])
                                  Texp_ident "vars/560"
                            ]
                        expression (src/lr0.ml[68,2325+4]..src/lr0.ml[68,2325+8])
                          Texp_ident "toks/559"
                  ]
            ]
        ]
  structure_item (src/lr0.ml[76,2539+0]..src/lr0.ml[77,2564+33])
    Tstr_module
    SymbolicClosure/601
      module_expr (src/lr0.ml[77,2564+2]..src/lr0.ml[77,2564+33])
        Tmod_apply
        module_expr (src/lr0.ml[77,2564+2]..src/lr0.ml[77,2564+14])
          module_expr (src/lr0.ml[77,2564+2]..src/lr0.ml[77,2564+14])
            Tmod_ident "Dune__exe!.Item.Closure"
        module_expr (src/lr0.ml[77,2564+15]..src/lr0.ml[77,2564+32])
          Tmod_ident "SymbolicLookahead/562"
  structure_item (src/lr0.ml[86,2955+0]..src/lr0.ml[87,2979+28])
    Tstr_type Rec
    [
      type_declaration concretelr1state/602 (src/lr0.ml[86,2955+0]..src/lr0.ml[87,2979+28])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/lr0.ml[87,2979+4]..src/lr0.ml[87,2979+28])
              Ttyp_constr "Dune__exe!.Item.Map.t"
              [
                core_type (src/lr0.ml[87,2979+4]..src/lr0.ml[87,2979+17])
                  Ttyp_constr "Dune__exe!.Grammar.TerminalSet.t"
                  []
              ]
    ]
  structure_item (src/lr0.ml[89,3009+0]..src/lr0.ml[92,3141+55])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[89,3009+4]..src/lr0.ml[89,3009+11])
          Tpat_var "closure/669"
        expression (src/lr0.ml[89,3009+12]..src/lr0.ml[92,3141+55]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[89,3009+13]..src/lr0.ml[89,3009+18])
                extra
                  Tpat_extra_constraint
                  core_type (src/lr0.ml[89,3009+21]..src/lr0.ml[89,3009+37])
                    Ttyp_constr "concretelr1state/602"
                    []
                Tpat_alias "state/671"
                pattern (src/lr0.ml[89,3009+13]..src/lr0.ml[89,3009+18])
                  Tpat_any
              expression (src/lr0.ml[90,3069+3]..src/lr0.ml[92,3141+55])
                extra
                  Texp_constraint
                  core_type (src/lr0.ml[89,3009+41]..src/lr0.ml[89,3009+57])
                    Ttyp_constr "concretelr1state/602"
                    []
                Texp_apply
                expression (src/lr0.ml[90,3069+3]..src/lr0.ml[90,3069+15])
                  Texp_ident "Dune__exe!.Item.Map.map"
                [
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[90,3069+16]..src/lr0.ml[90,3069+41])
                      Texp_ident "SymbolicLookahead/562.project"
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[91,3111+5]..src/lr0.ml[92,3141+55])
                      Texp_apply
                      expression (src/lr0.ml[91,3111+6]..src/lr0.ml[91,3111+29])
                        Texp_ident "SymbolicClosure/601.closure"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[92,3141+7]..src/lr0.ml[92,3141+54])
                            Texp_apply
                            expression (src/lr0.ml[92,3141+8]..src/lr0.ml[92,3141+20])
                              Texp_ident "Dune__exe!.Item.Map.map"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr0.ml[92,3141+21]..src/lr0.ml[92,3141+47])
                                  Texp_ident "SymbolicLookahead/562.constant"
                              <arg>
                                Nolabel
                                expression (src/lr0.ml[92,3141+48]..src/lr0.ml[92,3141+53])
                                  Texp_ident "state/671"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/lr0.ml[98,3404+0]..src/lr0.ml[112,3869+25])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[98,3404+4]..src/lr0.ml[98,3404+15])
          Tpat_var "transitions/672"
        expression (src/lr0.ml[98,3404+16]..src/lr0.ml[112,3869+25]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[98,3404+17]..src/lr0.ml[98,3404+22])
                extra
                  Tpat_extra_constraint
                  core_type (src/lr0.ml[98,3404+25]..src/lr0.ml[98,3404+38])
                    Ttyp_constr "Dune__exe!.Item.Map.t"
                    [
                      core_type (src/lr0.ml[98,3404+25]..src/lr0.ml[98,3404+27])
                        Ttyp_var a
                    ]
                Tpat_alias "state/674"
                pattern (src/lr0.ml[98,3404+17]..src/lr0.ml[98,3404+22])
                  Tpat_any
              expression (src/lr0.ml[100,3475+2]..src/lr0.ml[112,3869+25])
                extra
                  Texp_constraint
                  core_type (src/lr0.ml[98,3404+42]..src/lr0.ml[98,3404+67])
                    Ttyp_constr "Dune__exe!.Grammar.SymbolMap.t"
                    [
                      core_type (src/lr0.ml[98,3404+42]..src/lr0.ml[98,3404+55])
                        Ttyp_constr "Dune__exe!.Item.Map.t"
                        [
                          core_type (src/lr0.ml[98,3404+42]..src/lr0.ml[98,3404+44])
                            Ttyp_var a
                        ]
                    ]
                Texp_apply
                expression (src/lr0.ml[100,3475+2]..src/lr0.ml[100,3475+15])
                  Texp_ident "Dune__exe!.Item.Map.fold"
                [
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[100,3475+16]..src/lr0.ml[112,3869+3])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/lr0.ml[100,3475+21]..src/lr0.ml[100,3475+25])
                            Tpat_var "item/771"
                          expression (src/lr0.ml[100,3475+26]..src/lr0.ml[111,3849+19]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/lr0.ml[100,3475+26]..src/lr0.ml[100,3475+30])
                                  Tpat_var "toks/772"
                                expression (src/lr0.ml[100,3475+31]..src/lr0.ml[111,3849+19]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/lr0.ml[100,3475+31]..src/lr0.ml[100,3475+42])
                                        Tpat_var "transitions/773"
                                      expression (src/lr0.ml[101,3521+4]..src/lr0.ml[111,3849+19])
                                        Texp_match
                                        expression (src/lr0.ml[101,3521+10]..src/lr0.ml[101,3521+28])
                                          Texp_apply
                                          expression (src/lr0.ml[101,3521+10]..src/lr0.ml[101,3521+23])
                                            Texp_ident "Dune__exe!.Item.classify"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/lr0.ml[101,3521+24]..src/lr0.ml[101,3521+28])
                                                Texp_ident "item/771"
                                          ]
                                        [
                                          <case>
                                            pattern (src/lr0.ml[102,3555+6]..src/lr0.ml[102,3555+32])
                                              Tpat_value
                                              pattern (src/lr0.ml[102,3555+6]..src/lr0.ml[102,3555+32])
                                                Tpat_construct "Item.Shift"
                                                [
                                                  pattern (src/lr0.ml[102,3555+18]..src/lr0.ml[102,3555+24])
                                                    Tpat_var "symbol/774"
                                                  pattern (src/lr0.ml[102,3555+26]..src/lr0.ml[102,3555+31])
                                                    Tpat_var "item'/775"
                                                ]
                                                None
                                            expression (src/lr0.ml[103,3591+8]..src/lr0.ml[109,3753+72])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/lr0.ml[103,3591+12]..src/lr0.ml[103,3591+17])
                                                    extra
                                                      Tpat_extra_constraint
                                                      core_type (src/lr0.ml[103,3591+20]..src/lr0.ml[103,3591+33])
                                                        Ttyp_constr "Dune__exe!.Item.Map.t"
                                                        [
                                                          core_type (src/lr0.ml[103,3591+20]..src/lr0.ml[103,3591+22])
                                                            Ttyp_var a
                                                        ]
                                                    Tpat_alias "items/776"
                                                    pattern (src/lr0.ml[103,3591+12]..src/lr0.ml[103,3591+17])
                                                      Tpat_any
                                                  expression (src/lr0.ml[104,3627+10]..src/lr0.ml[107,3715+26])
                                                    extra
                                                      Texp_constraint
                                                      core_type (src/lr0.ml[103,3591+20]..src/lr0.ml[103,3591+33])
                                                        Ttyp_constr "Dune__exe!.Item.Map.t"
                                                        [
                                                          core_type (src/lr0.ml[103,3591+20]..src/lr0.ml[103,3591+22])
                                                            Ttyp_var a
                                                        ]
                                                    Texp_try
                                                    expression (src/lr0.ml[105,3641+12]..src/lr0.ml[105,3641+45])
                                                      Texp_apply
                                                      expression (src/lr0.ml[105,3641+12]..src/lr0.ml[105,3641+26])
                                                        Texp_ident "Dune__exe!.Grammar.SymbolMap.find"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/lr0.ml[105,3641+27]..src/lr0.ml[105,3641+33])
                                                            Texp_ident "symbol/774"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/lr0.ml[105,3641+34]..src/lr0.ml[105,3641+45])
                                                            Texp_ident "transitions/773"
                                                      ]
                                                    [
                                                      <case>
                                                        pattern (src/lr0.ml[106,3687+15]..src/lr0.ml[106,3687+24])
                                                          Tpat_construct "Not_found"
                                                          []
                                                          None
                                                        expression (src/lr0.ml[107,3715+12]..src/lr0.ml[107,3715+26])
                                                          Texp_ident "Dune__exe!.Item.Map.empty"
                                                    ]
                                              ]
                                              expression (src/lr0.ml[109,3753+8]..src/lr0.ml[109,3753+72])
                                                Texp_apply
                                                expression (src/lr0.ml[109,3753+8]..src/lr0.ml[109,3753+21])
                                                  Texp_ident "Dune__exe!.Grammar.SymbolMap.add"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr0.ml[109,3753+22]..src/lr0.ml[109,3753+28])
                                                      Texp_ident "symbol/774"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr0.ml[109,3753+29]..src/lr0.ml[109,3753+60])
                                                      Texp_apply
                                                      expression (src/lr0.ml[109,3753+30]..src/lr0.ml[109,3753+42])
                                                        Texp_ident "Dune__exe!.Item.Map.add"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/lr0.ml[109,3753+43]..src/lr0.ml[109,3753+48])
                                                            Texp_ident "item'/775"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/lr0.ml[109,3753+49]..src/lr0.ml[109,3753+53])
                                                            Texp_ident "toks/772"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/lr0.ml[109,3753+54]..src/lr0.ml[109,3753+59])
                                                            Texp_ident "items/776"
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr0.ml[109,3753+61]..src/lr0.ml[109,3753+72])
                                                      Texp_ident "transitions/773"
                                                ]
                                          <case>
                                            pattern (src/lr0.ml[110,3826+6]..src/lr0.ml[110,3826+19])
                                              Tpat_value
                                              pattern (src/lr0.ml[110,3826+6]..src/lr0.ml[110,3826+19])
                                                Tpat_construct "Item.Reduce"
                                                [
                                                  pattern (src/lr0.ml[110,3826+18]..src/lr0.ml[110,3826+19])
                                                    Tpat_any
                                                ]
                                                None
                                            expression (src/lr0.ml[111,3849+8]..src/lr0.ml[111,3849+19])
                                              Texp_ident "transitions/773"
                                        ]
                                  ]
                            ]
                      ]
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[112,3869+4]..src/lr0.ml[112,3869+9])
                      Texp_ident "state/674"
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[112,3869+10]..src/lr0.ml[112,3869+25])
                      Texp_ident "Dune__exe!.Grammar.SymbolMap.empty"
                ]
          ]
    ]
  structure_item (src/lr0.ml[120,4198+0]..src/lr0.ml[127,4433+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[120,4198+4]..src/lr0.ml[120,4198+14])
          Tpat_var "reductions/867"
        expression (src/lr0.ml[120,4198+15]..src/lr0.ml[127,4433+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[120,4198+16]..src/lr0.ml[120,4198+21])
                extra
                  Tpat_extra_constraint
                  core_type (src/lr0.ml[120,4198+24]..src/lr0.ml[120,4198+37])
                    Ttyp_constr "Dune__exe!.Item.Map.t"
                    [
                      core_type (src/lr0.ml[120,4198+24]..src/lr0.ml[120,4198+26])
                        Ttyp_var a
                    ]
                Tpat_alias "state/869"
                pattern (src/lr0.ml[120,4198+16]..src/lr0.ml[120,4198+21])
                  Tpat_any
              expression (src/lr0.ml[121,4270+2]..src/lr0.ml[127,4433+12])
                extra
                  Texp_constraint
                  core_type (src/lr0.ml[120,4198+41]..src/lr0.ml[120,4198+69])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/lr0.ml[120,4198+42]..src/lr0.ml[120,4198+63])
                        Ttyp_tuple
                        [
                          core_type (src/lr0.ml[120,4198+42]..src/lr0.ml[120,4198+44])
                            Ttyp_var a
                          core_type (src/lr0.ml[120,4198+47]..src/lr0.ml[120,4198+63])
                            Ttyp_constr "Dune__exe!.Grammar.Production.index"
                            []
                        ]
                    ]
                Texp_apply
                expression (src/lr0.ml[121,4270+2]..src/lr0.ml[121,4270+15])
                  Texp_ident "Dune__exe!.Item.Map.fold"
                [
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[121,4270+16]..src/lr0.ml[127,4433+3])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/lr0.ml[121,4270+21]..src/lr0.ml[121,4270+25])
                            Tpat_var "item/870"
                          expression (src/lr0.ml[121,4270+26]..src/lr0.ml[126,4420+12]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/lr0.ml[121,4270+26]..src/lr0.ml[121,4270+30])
                                  Tpat_var "toks/871"
                                expression (src/lr0.ml[121,4270+31]..src/lr0.ml[126,4420+12]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/lr0.ml[121,4270+31]..src/lr0.ml[121,4270+35])
                                        Tpat_var "accu/872"
                                      expression (src/lr0.ml[122,4309+4]..src/lr0.ml[126,4420+12])
                                        Texp_match
                                        expression (src/lr0.ml[122,4309+10]..src/lr0.ml[122,4309+28])
                                          Texp_apply
                                          expression (src/lr0.ml[122,4309+10]..src/lr0.ml[122,4309+23])
                                            Texp_ident "Dune__exe!.Item.classify"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/lr0.ml[122,4309+24]..src/lr0.ml[122,4309+28])
                                                Texp_ident "item/870"
                                          ]
                                        [
                                          <case>
                                            pattern (src/lr0.ml[123,4343+6]..src/lr0.ml[123,4343+22])
                                              Tpat_value
                                              pattern (src/lr0.ml[123,4343+6]..src/lr0.ml[123,4343+22])
                                                Tpat_construct "Item.Reduce"
                                                [
                                                  pattern (src/lr0.ml[123,4343+18]..src/lr0.ml[123,4343+22])
                                                    Tpat_var "prod/873"
                                                ]
                                                None
                                            expression (src/lr0.ml[124,4369+8]..src/lr0.ml[124,4369+28])
                                              Texp_construct "::"
                                              [
                                                expression (src/lr0.ml[124,4369+8]..src/lr0.ml[124,4369+20])
                                                  Texp_tuple
                                                  [
                                                    expression (src/lr0.ml[124,4369+9]..src/lr0.ml[124,4369+13])
                                                      Texp_ident "toks/871"
                                                    expression (src/lr0.ml[124,4369+15]..src/lr0.ml[124,4369+19])
                                                      Texp_ident "prod/873"
                                                  ]
                                                expression (src/lr0.ml[124,4369+24]..src/lr0.ml[124,4369+28])
                                                  Texp_ident "accu/872"
                                              ]
                                          <case>
                                            pattern (src/lr0.ml[125,4398+6]..src/lr0.ml[125,4398+18])
                                              Tpat_value
                                              pattern (src/lr0.ml[125,4398+6]..src/lr0.ml[125,4398+18])
                                                Tpat_construct "Item.Shift"
                                                [
                                                  pattern (src/lr0.ml[125,4398+17]..src/lr0.ml[125,4398+18])
                                                    Tpat_any
                                                  pattern (src/lr0.ml[125,4398+17]..src/lr0.ml[125,4398+18])
                                                    Tpat_any
                                                ]
                                                None
                                            expression (src/lr0.ml[126,4420+8]..src/lr0.ml[126,4420+12])
                                              Texp_ident "accu/872"
                                        ]
                                  ]
                            ]
                      ]
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[127,4433+4]..src/lr0.ml[127,4433+9])
                      Texp_ident "state/869"
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[127,4433+10]..src/lr0.ml[127,4433+12])
                      Texp_construct "[]"
                      []
                ]
          ]
    ]
  structure_item (src/lr0.ml[134,4614+0]..src/lr0.ml[135,4626+7])
    Tstr_type Rec
    [
      type_declaration node/874 (src/lr0.ml[134,4614+0]..src/lr0.ml[135,4626+7])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/lr0.ml[135,4626+4]..src/lr0.ml[135,4626+7])
              Ttyp_constr "int/1!"
              []
    ]
  structure_item (src/lr0.ml[143,4930+0]..src/lr0.ml[144,4964+36])
    Tstr_type Rec
    [
      type_declaration symbolic_transition_target/875 (src/lr0.ml[143,4930+0]..src/lr0.ml[144,4964+36])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/lr0.ml[144,4964+4]..src/lr0.ml[144,4964+36])
              Ttyp_tuple
              [
                core_type (src/lr0.ml[144,4964+4]..src/lr0.ml[144,4964+8])
                  Ttyp_constr "node/874"
                  []
                core_type (src/lr0.ml[144,4964+11]..src/lr0.ml[144,4964+36])
                  Ttyp_constr "array/8!"
                  [
                    core_type (src/lr0.ml[144,4964+11]..src/lr0.ml[144,4964+30])
                      Ttyp_constr "SymbolicLookahead/562.t"
                      []
                  ]
              ]
    ]
  structure_item (src/lr0.ml[151,5258+0]..src/lr0.ml[152,5266+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[151,5258+4]..src/lr0.ml[151,5258+5])
          Tpat_var "n/876"
        expression (src/lr0.ml[152,5266+2]..src/lr0.ml[152,5266+7])
          Texp_apply
          expression (src/lr0.ml[152,5266+2]..src/lr0.ml[152,5266+5])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (src/lr0.ml[152,5266+6]..src/lr0.ml[152,5266+7])
                Texp_constant Const_int 0
          ]
    ]
  structure_item (src/lr0.ml[154,5275+0]..src/lr0.ml[155,5317+35])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[154,5275+4]..src/lr0.ml[154,5275+10])
          extra
            Tpat_extra_constraint
            core_type (src/lr0.ml[154,5275+13]..src/lr0.ml[154,5275+39])
              Ttyp_constr "InfiniteArray/430.t"
              [
                core_type (src/lr0.ml[154,5275+13]..src/lr0.ml[154,5275+23])
                  Ttyp_constr "Dune__exe!.Item.Set.t"
                  []
              ]
          Tpat_alias "states/903"
          pattern (src/lr0.ml[154,5275+4]..src/lr0.ml[154,5275+10])
            Tpat_any
        expression (src/lr0.ml[155,5317+2]..src/lr0.ml[155,5317+35])
          extra
            Texp_constraint
            core_type (src/lr0.ml[154,5275+13]..src/lr0.ml[154,5275+39])
              Ttyp_constr "InfiniteArray/430.t"
              [
                core_type (src/lr0.ml[154,5275+13]..src/lr0.ml[154,5275+23])
                  Ttyp_constr "Dune__exe!.Item.Set.t"
                  []
              ]
          Texp_apply
          expression (src/lr0.ml[155,5317+2]..src/lr0.ml[155,5317+20])
            Texp_ident "InfiniteArray/430.make"
          [
            <arg>
              Nolabel
              expression (src/lr0.ml[155,5317+21]..src/lr0.ml[155,5317+35])
                Texp_ident "Dune__exe!.Item.Set.empty"
          ]
    ]
  structure_item (src/lr0.ml[157,5354+0]..src/lr0.ml[158,5430+36])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[157,5354+4]..src/lr0.ml[157,5354+16])
          extra
            Tpat_extra_constraint
            core_type (src/lr0.ml[157,5354+19]..src/lr0.ml[157,5354+73])
              Ttyp_constr "InfiniteArray/430.t"
              [
                core_type (src/lr0.ml[157,5354+19]..src/lr0.ml[157,5354+57])
                  Ttyp_constr "Dune__exe!.Grammar.SymbolMap.t"
                  [
                    core_type (src/lr0.ml[157,5354+19]..src/lr0.ml[157,5354+45])
                      Ttyp_constr "symbolic_transition_target/875"
                      []
                  ]
              ]
          Tpat_alias "_transitions/910"
          pattern (src/lr0.ml[157,5354+4]..src/lr0.ml[157,5354+16])
            Tpat_any
        expression (src/lr0.ml[158,5430+2]..src/lr0.ml[158,5430+36])
          extra
            Texp_constraint
            core_type (src/lr0.ml[157,5354+19]..src/lr0.ml[157,5354+73])
              Ttyp_constr "InfiniteArray/430.t"
              [
                core_type (src/lr0.ml[157,5354+19]..src/lr0.ml[157,5354+57])
                  Ttyp_constr "Dune__exe!.Grammar.SymbolMap.t"
                  [
                    core_type (src/lr0.ml[157,5354+19]..src/lr0.ml[157,5354+45])
                      Ttyp_constr "symbolic_transition_target/875"
                      []
                  ]
              ]
          Texp_apply
          expression (src/lr0.ml[158,5430+2]..src/lr0.ml[158,5430+20])
            Texp_ident "InfiniteArray/430.make"
          [
            <arg>
              Nolabel
              expression (src/lr0.ml[158,5430+21]..src/lr0.ml[158,5430+36])
                Texp_ident "Dune__exe!.Grammar.SymbolMap.empty"
          ]
    ]
  structure_item (src/lr0.ml[160,5468+0]..src/lr0.ml[161,5550+23])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[160,5468+4]..src/lr0.ml[160,5468+15])
          extra
            Tpat_extra_constraint
            core_type (src/lr0.ml[160,5468+18]..src/lr0.ml[160,5468+79])
              Ttyp_constr "InfiniteArray/430.t"
              [
                core_type (src/lr0.ml[160,5468+18]..src/lr0.ml[160,5468+63])
                  Ttyp_constr "list/9!"
                  [
                    core_type (src/lr0.ml[160,5468+19]..src/lr0.ml[160,5468+57])
                      Ttyp_tuple
                      [
                        core_type (src/lr0.ml[160,5468+19]..src/lr0.ml[160,5468+38])
                          Ttyp_constr "SymbolicLookahead/562.t"
                          []
                        core_type (src/lr0.ml[160,5468+41]..src/lr0.ml[160,5468+57])
                          Ttyp_constr "Dune__exe!.Grammar.Production.index"
                          []
                      ]
                  ]
              ]
          Tpat_alias "_reductions/911"
          pattern (src/lr0.ml[160,5468+4]..src/lr0.ml[160,5468+15])
            Tpat_any
        expression (src/lr0.ml[161,5550+2]..src/lr0.ml[161,5550+23])
          extra
            Texp_constraint
            core_type (src/lr0.ml[160,5468+18]..src/lr0.ml[160,5468+79])
              Ttyp_constr "InfiniteArray/430.t"
              [
                core_type (src/lr0.ml[160,5468+18]..src/lr0.ml[160,5468+63])
                  Ttyp_constr "list/9!"
                  [
                    core_type (src/lr0.ml[160,5468+19]..src/lr0.ml[160,5468+57])
                      Ttyp_tuple
                      [
                        core_type (src/lr0.ml[160,5468+19]..src/lr0.ml[160,5468+38])
                          Ttyp_constr "SymbolicLookahead/562.t"
                          []
                        core_type (src/lr0.ml[160,5468+41]..src/lr0.ml[160,5468+57])
                          Ttyp_constr "Dune__exe!.Grammar.Production.index"
                          []
                      ]
                  ]
              ]
          Texp_apply
          expression (src/lr0.ml[161,5550+2]..src/lr0.ml[161,5550+20])
            Texp_ident "InfiniteArray/430.make"
          [
            <arg>
              Nolabel
              expression (src/lr0.ml[161,5550+21]..src/lr0.ml[161,5550+23])
                Texp_construct "[]"
                []
          ]
    ]
  structure_item (src/lr0.ml[163,5575+0]..src/lr0.ml[164,5616+22])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[163,5575+4]..src/lr0.ml[163,5575+7])
          extra
            Tpat_extra_constraint
            core_type (src/lr0.ml[163,5575+10]..src/lr0.ml[163,5575+38])
              Ttyp_constr "Stdlib!.Hashtbl.t"
              [
                core_type (src/lr0.ml[163,5575+11]..src/lr0.ml[163,5575+21])
                  Ttyp_constr "Dune__exe!.Item.Set.t"
                  []
                core_type (src/lr0.ml[163,5575+23]..src/lr0.ml[163,5575+27])
                  Ttyp_constr "node/874"
                  []
              ]
          Tpat_alias "map/951"
          pattern (src/lr0.ml[163,5575+4]..src/lr0.ml[163,5575+7])
            Tpat_any
        expression (src/lr0.ml[164,5616+2]..src/lr0.ml[164,5616+22])
          extra
            Texp_constraint
            core_type (src/lr0.ml[163,5575+10]..src/lr0.ml[163,5575+38])
              Ttyp_constr "Stdlib!.Hashtbl.t"
              [
                core_type (src/lr0.ml[163,5575+11]..src/lr0.ml[163,5575+21])
                  Ttyp_constr "Dune__exe!.Item.Set.t"
                  []
                core_type (src/lr0.ml[163,5575+23]..src/lr0.ml[163,5575+27])
                  Ttyp_constr "node/874"
                  []
              ]
          Texp_apply
          expression (src/lr0.ml[164,5616+2]..src/lr0.ml[164,5616+16])
            Texp_ident "Stdlib!.Hashtbl.create"
          [
            <arg>
              Optional "random"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Nolabel
              expression (src/lr0.ml[164,5616+17]..src/lr0.ml[164,5616+22])
                Texp_constant Const_int 50021
          ]
    ]
  structure_item (src/lr0.ml[166,5640+0]..src/lr0.ml[167,5689+25])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[166,5640+4]..src/lr0.ml[166,5640+12])
          extra
            Tpat_extra_constraint
            core_type (src/lr0.ml[166,5640+15]..src/lr0.ml[166,5640+46])
              Ttyp_constr "InfiniteArray/430.t"
              [
                core_type (src/lr0.ml[166,5640+15]..src/lr0.ml[166,5640+30])
                  Ttyp_constr "option/10!"
                  [
                    core_type (src/lr0.ml[166,5640+15]..src/lr0.ml[166,5640+23])
                      Ttyp_constr "Dune__exe!.Grammar.Symbol.t"
                      []
                  ]
              ]
          Tpat_alias "incoming/993"
          pattern (src/lr0.ml[166,5640+4]..src/lr0.ml[166,5640+12])
            Tpat_any
        expression (src/lr0.ml[167,5689+2]..src/lr0.ml[167,5689+25])
          extra
            Texp_constraint
            core_type (src/lr0.ml[166,5640+15]..src/lr0.ml[166,5640+46])
              Ttyp_constr "InfiniteArray/430.t"
              [
                core_type (src/lr0.ml[166,5640+15]..src/lr0.ml[166,5640+30])
                  Ttyp_constr "option/10!"
                  [
                    core_type (src/lr0.ml[166,5640+15]..src/lr0.ml[166,5640+23])
                      Ttyp_constr "Dune__exe!.Grammar.Symbol.t"
                      []
                  ]
              ]
          Texp_apply
          expression (src/lr0.ml[167,5689+2]..src/lr0.ml[167,5689+20])
            Texp_ident "InfiniteArray/430.make"
          [
            <arg>
              Nolabel
              expression (src/lr0.ml[167,5689+21]..src/lr0.ml[167,5689+25])
                Texp_construct "None"
                []
          ]
    ]
  structure_item (src/lr0.ml[171,5759+0]..src/lr0.ml[222,7457+5])
    Tstr_value Rec
    [
      <def>
        pattern (src/lr0.ml[171,5759+8]..src/lr0.ml[171,5759+15])
          Tpat_var "explore/994"
        expression (src/lr0.ml[171,5759+16]..src/lr0.ml[222,7457+5]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[171,5759+17]..src/lr0.ml[171,5759+23])
                extra
                  Tpat_extra_constraint
                  core_type (src/lr0.ml[171,5759+26]..src/lr0.ml[171,5759+41])
                    Ttyp_constr "option/10!"
                    [
                      core_type (src/lr0.ml[171,5759+26]..src/lr0.ml[171,5759+34])
                        Ttyp_constr "Dune__exe!.Grammar.Symbol.t"
                        []
                    ]
                Tpat_alias "symbol/995"
                pattern (src/lr0.ml[171,5759+17]..src/lr0.ml[171,5759+23])
                  Tpat_any
              expression (src/lr0.ml[171,5759+43]..src/lr0.ml[222,7457+5]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr0.ml[171,5759+44]..src/lr0.ml[171,5759+49])
                      extra
                        Tpat_extra_constraint
                        core_type (src/lr0.ml[171,5759+52]..src/lr0.ml[171,5759+62])
                          Ttyp_constr "Dune__exe!.Item.Set.t"
                          []
                      Tpat_alias "state/996"
                      pattern (src/lr0.ml[171,5759+44]..src/lr0.ml[171,5759+49])
                        Tpat_any
                    expression (src/lr0.ml[175,5892+2]..src/lr0.ml[222,7457+5])
                      extra
                        Texp_constraint
                        core_type (src/lr0.ml[171,5759+66]..src/lr0.ml[171,5759+70])
                          Ttyp_constr "node/874"
                          []
                      Texp_try
                      expression (src/lr0.ml[176,5898+4]..src/lr0.ml[176,5898+26])
                        Texp_apply
                        expression (src/lr0.ml[176,5898+4]..src/lr0.ml[176,5898+16])
                          Texp_ident "Stdlib!.Hashtbl.find"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr0.ml[176,5898+17]..src/lr0.ml[176,5898+20])
                              Texp_ident "map/951"
                          <arg>
                            Nolabel
                            expression (src/lr0.ml[176,5898+21]..src/lr0.ml[176,5898+26])
                              Texp_ident "state/996"
                        ]
                      [
                        <case>
                          pattern (src/lr0.ml[177,5925+7]..src/lr0.ml[177,5925+16])
                            Tpat_construct "Not_found"
                            []
                            None
                          expression (src/lr0.ml[181,5984+4]..src/lr0.ml[222,7457+5])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/lr0.ml[181,5984+8]..src/lr0.ml[181,5984+9])
                                  Tpat_var "k/1017"
                                expression (src/lr0.ml[181,5984+12]..src/lr0.ml[181,5984+14])
                                  Texp_apply
                                  expression (src/lr0.ml[181,5984+12]..src/lr0.ml[181,5984+13])
                                    Texp_ident "Stdlib!.!"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr0.ml[181,5984+13]..src/lr0.ml[181,5984+14])
                                        Texp_ident "n/876"
                                  ]
                            ]
                            expression (src/lr0.ml[182,6002+4]..src/lr0.ml[222,7457+5])
                              Texp_sequence
                              expression (src/lr0.ml[182,6002+4]..src/lr0.ml[182,6002+14])
                                Texp_apply
                                expression (src/lr0.ml[182,6002+6]..src/lr0.ml[182,6002+8])
                                  Texp_ident "Stdlib!.:="
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/lr0.ml[182,6002+4]..src/lr0.ml[182,6002+5])
                                      Texp_ident "n/876"
                                  <arg>
                                    Nolabel
                                    expression (src/lr0.ml[182,6002+9]..src/lr0.ml[182,6002+14])
                                      Texp_apply
                                      expression (src/lr0.ml[182,6002+11]..src/lr0.ml[182,6002+12])
                                        Texp_ident "Stdlib!.+"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/lr0.ml[182,6002+9]..src/lr0.ml[182,6002+10])
                                            Texp_ident "k/1017"
                                        <arg>
                                          Nolabel
                                          expression (src/lr0.ml[182,6002+13]..src/lr0.ml[182,6002+14])
                                            Texp_constant Const_int 1
                                      ]
                                ]
                              expression (src/lr0.ml[183,6018+4]..src/lr0.ml[222,7457+5])
                                Texp_sequence
                                expression (src/lr0.ml[183,6018+4]..src/lr0.ml[183,6018+36])
                                  Texp_apply
                                  expression (src/lr0.ml[183,6018+4]..src/lr0.ml[183,6018+21])
                                    Texp_ident "InfiniteArray/430.set"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr0.ml[183,6018+22]..src/lr0.ml[183,6018+28])
                                        Texp_ident "states/903"
                                    <arg>
                                      Nolabel
                                      expression (src/lr0.ml[183,6018+29]..src/lr0.ml[183,6018+30])
                                        Texp_ident "k/1017"
                                    <arg>
                                      Nolabel
                                      expression (src/lr0.ml[183,6018+31]..src/lr0.ml[183,6018+36])
                                        Texp_ident "state/996"
                                  ]
                                expression (src/lr0.ml[184,6056+4]..src/lr0.ml[222,7457+5])
                                  Texp_sequence
                                  expression (src/lr0.ml[184,6056+4]..src/lr0.ml[184,6056+27])
                                    Texp_apply
                                    expression (src/lr0.ml[184,6056+4]..src/lr0.ml[184,6056+15])
                                      Texp_ident "Stdlib!.Hashtbl.add"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr0.ml[184,6056+16]..src/lr0.ml[184,6056+19])
                                          Texp_ident "map/951"
                                      <arg>
                                        Nolabel
                                        expression (src/lr0.ml[184,6056+20]..src/lr0.ml[184,6056+25])
                                          Texp_ident "state/996"
                                      <arg>
                                        Nolabel
                                        expression (src/lr0.ml[184,6056+26]..src/lr0.ml[184,6056+27])
                                          Texp_ident "k/1017"
                                    ]
                                  expression (src/lr0.ml[188,6125+4]..src/lr0.ml[222,7457+5])
                                    Texp_sequence
                                    expression (src/lr0.ml[188,6125+4]..src/lr0.ml[188,6125+39])
                                      Texp_apply
                                      expression (src/lr0.ml[188,6125+4]..src/lr0.ml[188,6125+21])
                                        Texp_ident "InfiniteArray/430.set"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/lr0.ml[188,6125+22]..src/lr0.ml[188,6125+30])
                                            Texp_ident "incoming/993"
                                        <arg>
                                          Nolabel
                                          expression (src/lr0.ml[188,6125+31]..src/lr0.ml[188,6125+32])
                                            Texp_ident "k/1017"
                                        <arg>
                                          Nolabel
                                          expression (src/lr0.ml[188,6125+33]..src/lr0.ml[188,6125+39])
                                            Texp_ident "symbol/995"
                                      ]
                                    expression (src/lr0.ml[194,6333+4]..src/lr0.ml[222,7457+5])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/lr0.ml[194,6333+8]..src/lr0.ml[194,6333+59])
                                            Tpat_tuple
                                            [
                                              pattern (src/lr0.ml[194,6333+9]..src/lr0.ml[194,6333+10])
                                                extra
                                                  Tpat_extra_constraint
                                                  core_type (src/lr0.ml[194,6333+13]..src/lr0.ml[194,6333+16])
                                                    Ttyp_constr "int/1!"
                                                    []
                                                Tpat_any
                                              pattern (src/lr0.ml[194,6333+20]..src/lr0.ml[194,6333+34])
                                                extra
                                                  Tpat_extra_constraint
                                                  core_type (src/lr0.ml[194,6333+37]..src/lr0.ml[194,6333+58])
                                                    Ttyp_constr "SymbolicClosure/601.state"
                                                    []
                                                Tpat_alias "symbolic_state/1018"
                                                pattern (src/lr0.ml[194,6333+20]..src/lr0.ml[194,6333+34])
                                                  Tpat_any
                                            ]
                                          expression (src/lr0.ml[195,6395+6]..src/lr0.ml[197,6525+33])
                                            Texp_apply
                                            expression (src/lr0.ml[195,6395+6]..src/lr0.ml[195,6395+19])
                                              Texp_ident "Dune__exe!.Item.Set.fold"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/lr0.ml[195,6395+20]..src/lr0.ml[197,6525+7])
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (src/lr0.ml[195,6395+25]..src/lr0.ml[195,6395+29])
                                                        Tpat_var "item/1019"
                                                      expression (src/lr0.ml[195,6395+30]..src/lr0.ml[196,6448+76]) ghost
                                                        Texp_function
                                                        Nolabel
                                                        [
                                                          <case>
                                                            pattern (src/lr0.ml[195,6395+30]..src/lr0.ml[195,6395+49])
                                                              Tpat_tuple
                                                              [
                                                                pattern (src/lr0.ml[195,6395+31]..src/lr0.ml[195,6395+32])
                                                                  Tpat_var "i/1020"
                                                                pattern (src/lr0.ml[195,6395+34]..src/lr0.ml[195,6395+48])
                                                                  Tpat_var "symbolic_state/1021"
                                                              ]
                                                            expression (src/lr0.ml[196,6448+8]..src/lr0.ml[196,6448+76])
                                                              Texp_tuple
                                                              [
                                                                expression (src/lr0.ml[196,6448+8]..src/lr0.ml[196,6448+11])
                                                                  Texp_apply
                                                                  expression (src/lr0.ml[196,6448+9]..src/lr0.ml[196,6448+10])
                                                                    Texp_ident "Stdlib!.+"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/lr0.ml[196,6448+8]..src/lr0.ml[196,6448+9])
                                                                        Texp_ident "i/1020"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/lr0.ml[196,6448+10]..src/lr0.ml[196,6448+11])
                                                                        Texp_constant Const_int 1
                                                                  ]
                                                                expression (src/lr0.ml[196,6448+13]..src/lr0.ml[196,6448+76])
                                                                  Texp_apply
                                                                  expression (src/lr0.ml[196,6448+13]..src/lr0.ml[196,6448+25])
                                                                    Texp_ident "Dune__exe!.Item.Map.add"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/lr0.ml[196,6448+26]..src/lr0.ml[196,6448+30])
                                                                        Texp_ident "item/1019"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/lr0.ml[196,6448+31]..src/lr0.ml[196,6448+61])
                                                                        Texp_apply
                                                                        expression (src/lr0.ml[196,6448+32]..src/lr0.ml[196,6448+58])
                                                                          Texp_ident "SymbolicLookahead/562.variable"
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/lr0.ml[196,6448+59]..src/lr0.ml[196,6448+60])
                                                                              Texp_ident "i/1020"
                                                                        ]
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/lr0.ml[196,6448+62]..src/lr0.ml[196,6448+76])
                                                                        Texp_ident "symbolic_state/1021"
                                                                  ]
                                                              ]
                                                        ]
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (src/lr0.ml[197,6525+8]..src/lr0.ml[197,6525+13])
                                                  Texp_ident "state/996"
                                              <arg>
                                                Nolabel
                                                expression (src/lr0.ml[197,6525+14]..src/lr0.ml[197,6525+33])
                                                  Texp_tuple
                                                  [
                                                    expression (src/lr0.ml[197,6525+15]..src/lr0.ml[197,6525+16])
                                                      Texp_constant Const_int 0
                                                    expression (src/lr0.ml[197,6525+18]..src/lr0.ml[197,6525+32])
                                                      Texp_ident "Dune__exe!.Item.Map.empty"
                                                  ]
                                            ]
                                      ]
                                      expression (src/lr0.ml[201,6604+4]..src/lr0.ml[222,7457+5])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/lr0.ml[201,6604+8]..src/lr0.ml[201,6604+15])
                                              Tpat_var "closure/1023"
                                            expression (src/lr0.ml[201,6604+18]..src/lr0.ml[201,6604+56])
                                              Texp_apply
                                              expression (src/lr0.ml[201,6604+18]..src/lr0.ml[201,6604+41])
                                                Texp_ident "SymbolicClosure/601.closure"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr0.ml[201,6604+42]..src/lr0.ml[201,6604+56])
                                                    Texp_ident "symbolic_state/1018"
                                              ]
                                        ]
                                        expression (src/lr0.ml[205,6723+4]..src/lr0.ml[222,7457+5])
                                          Texp_sequence
                                          expression (src/lr0.ml[205,6723+4]..src/lr0.ml[205,6723+56])
                                            Texp_apply
                                            expression (src/lr0.ml[205,6723+4]..src/lr0.ml[205,6723+21])
                                              Texp_ident "InfiniteArray/430.set"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/lr0.ml[205,6723+22]..src/lr0.ml[205,6723+33])
                                                  Texp_ident "_reductions/911"
                                              <arg>
                                                Nolabel
                                                expression (src/lr0.ml[205,6723+34]..src/lr0.ml[205,6723+35])
                                                  Texp_ident "k/1017"
                                              <arg>
                                                Nolabel
                                                expression (src/lr0.ml[205,6723+36]..src/lr0.ml[205,6723+56])
                                                  Texp_apply
                                                  expression (src/lr0.ml[205,6723+37]..src/lr0.ml[205,6723+47])
                                                    Texp_ident "reductions/867"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/lr0.ml[205,6723+48]..src/lr0.ml[205,6723+55])
                                                        Texp_ident "closure/1023"
                                                  ]
                                            ]
                                          expression (src/lr0.ml[211,6961+4]..src/lr0.ml[222,7457+5])
                                            Texp_sequence
                                            expression (src/lr0.ml[211,6961+4]..src/lr0.ml[220,7426+28])
                                              Texp_apply
                                              expression (src/lr0.ml[211,6961+4]..src/lr0.ml[211,6961+21])
                                                Texp_ident "InfiniteArray/430.set"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr0.ml[211,6961+22]..src/lr0.ml[211,6961+34])
                                                    Texp_ident "_transitions/910"
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr0.ml[211,6961+35]..src/lr0.ml[211,6961+36])
                                                    Texp_ident "k/1017"
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr0.ml[211,6961+37]..src/lr0.ml[220,7426+28])
                                                    Texp_apply
                                                    expression (src/lr0.ml[211,6961+38]..src/lr0.ml[211,6961+52])
                                                      Texp_ident "Dune__exe!.Grammar.SymbolMap.mapi"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/lr0.ml[211,6961+53]..src/lr0.ml[220,7426+5])
                                                          Texp_function
                                                          Nolabel
                                                          [
                                                            <case>
                                                              pattern (src/lr0.ml[211,6961+58]..src/lr0.ml[211,6961+64])
                                                                Tpat_var "symbol/1024"
                                                              expression (src/lr0.ml[211,6961+65]..src/lr0.ml[219,7374+51]) ghost
                                                                Texp_function
                                                                Nolabel
                                                                [
                                                                  <case>
                                                                    pattern (src/lr0.ml[211,6961+65]..src/lr0.ml[211,6961+79])
                                                                      Tpat_var "symbolic_state/1025"
                                                                    expression (src/lr0.ml[212,7044+6]..src/lr0.ml[219,7374+51])
                                                                      Texp_let Nonrec
                                                                      [
                                                                        <def>
                                                                          pattern (src/lr0.ml[212,7044+11]..src/lr0.ml[212,7044+12])
                                                                            extra
                                                                              Tpat_extra_constraint
                                                                              core_type (src/lr0.ml[212,7044+15]..src/lr0.ml[212,7044+19])
                                                                                Ttyp_constr "node/874"
                                                                                []
                                                                            Tpat_alias "k/1026"
                                                                            pattern (src/lr0.ml[212,7044+11]..src/lr0.ml[212,7044+12])
                                                                              Tpat_any
                                                                          expression (src/lr0.ml[212,7044+23]..src/lr0.ml[212,7044+77])
                                                                            Texp_apply
                                                                            expression (src/lr0.ml[212,7044+23]..src/lr0.ml[212,7044+30])
                                                                              Texp_ident "explore/994"
                                                                            [
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/lr0.ml[212,7044+31]..src/lr0.ml[212,7044+44])
                                                                                  Texp_construct "Some"
                                                                                  [
                                                                                    expression (src/lr0.ml[212,7044+37]..src/lr0.ml[212,7044+43])
                                                                                      Texp_ident "symbol/1024"
                                                                                  ]
                                                                              <arg>
                                                                                Nolabel
                                                                                expression (src/lr0.ml[212,7044+45]..src/lr0.ml[212,7044+77])
                                                                                  Texp_apply
                                                                                  expression (src/lr0.ml[212,7044+46]..src/lr0.ml[212,7044+61])
                                                                                    Texp_ident "Dune__exe!.Item.Map.domain"
                                                                                  [
                                                                                    <arg>
                                                                                      Nolabel
                                                                                      expression (src/lr0.ml[212,7044+62]..src/lr0.ml[212,7044+76])
                                                                                        Texp_ident "symbolic_state/1025"
                                                                                  ]
                                                                            ]
                                                                      ]
                                                                      expression (src/lr0.ml[213,7125+6]..src/lr0.ml[219,7374+51])
                                                                        Texp_let Nonrec
                                                                        [
                                                                          <def>
                                                                            pattern (src/lr0.ml[213,7125+10]..src/lr0.ml[213,7125+19])
                                                                              extra
                                                                                Tpat_extra_constraint
                                                                                core_type (src/lr0.ml[213,7125+22]..src/lr0.ml[213,7125+47])
                                                                                  Ttyp_constr "array/8!"
                                                                                  [
                                                                                    core_type (src/lr0.ml[213,7125+22]..src/lr0.ml[213,7125+41])
                                                                                      Ttyp_constr "SymbolicLookahead/562.t"
                                                                                      []
                                                                                  ]
                                                                              Tpat_alias "lookahead/1047"
                                                                              pattern (src/lr0.ml[213,7125+10]..src/lr0.ml[213,7125+19])
                                                                                Tpat_any
                                                                            expression (src/lr0.ml[214,7175+8]..src/lr0.ml[214,7175+77])
                                                                              extra
                                                                                Texp_constraint
                                                                                core_type (src/lr0.ml[213,7125+22]..src/lr0.ml[213,7125+47])
                                                                                  Ttyp_constr "array/8!"
                                                                                  [
                                                                                    core_type (src/lr0.ml[213,7125+22]..src/lr0.ml[213,7125+41])
                                                                                      Ttyp_constr "SymbolicLookahead/562.t"
                                                                                      []
                                                                                  ]
                                                                              Texp_apply
                                                                              expression (src/lr0.ml[214,7175+8]..src/lr0.ml[214,7175+18])
                                                                                Texp_ident "Stdlib!.Array.make"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr0.ml[214,7175+19]..src/lr0.ml[214,7175+53])
                                                                                    Texp_apply
                                                                                    expression (src/lr0.ml[214,7175+20]..src/lr0.ml[214,7175+37])
                                                                                      Texp_ident "Dune__exe!.Item.Map.cardinal"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/lr0.ml[214,7175+38]..src/lr0.ml[214,7175+52])
                                                                                          Texp_ident "symbolic_state/1025"
                                                                                    ]
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/lr0.ml[214,7175+54]..src/lr0.ml[214,7175+77])
                                                                                    Texp_ident "SymbolicLookahead/562.empty"
                                                                              ]
                                                                        ]
                                                                        expression (src/lr0.ml[215,7256+6]..src/lr0.ml[219,7374+51])
                                                                          Texp_let Nonrec
                                                                          [
                                                                            <def>
                                                                              pattern (src/lr0.ml[215,7256+11]..src/lr0.ml[215,7256+12])
                                                                                extra
                                                                                  Tpat_extra_constraint
                                                                                  core_type (src/lr0.ml[215,7256+15]..src/lr0.ml[215,7256+18])
                                                                                    Ttyp_constr "int/1!"
                                                                                    []
                                                                                Tpat_any
                                                                              expression (src/lr0.ml[215,7256+22]..src/lr0.ml[218,7346+24])
                                                                                Texp_apply
                                                                                expression (src/lr0.ml[215,7256+22]..src/lr0.ml[215,7256+35])
                                                                                  Texp_ident "Dune__exe!.Item.Map.fold"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr0.ml[215,7256+36]..src/lr0.ml[218,7346+7])
                                                                                      Texp_function
                                                                                      Nolabel
                                                                                      [
                                                                                        <case>
                                                                                          pattern (src/lr0.ml[215,7256+41]..src/lr0.ml[215,7256+42])
                                                                                            Tpat_any
                                                                                          expression (src/lr0.ml[215,7256+43]..src/lr0.ml[217,7334+11]) ghost
                                                                                            Texp_function
                                                                                            Nolabel
                                                                                            [
                                                                                              <case>
                                                                                                pattern (src/lr0.ml[215,7256+43]..src/lr0.ml[215,7256+44])
                                                                                                  Tpat_var "s/1096"
                                                                                                expression (src/lr0.ml[215,7256+45]..src/lr0.ml[217,7334+11]) ghost
                                                                                                  Texp_function
                                                                                                  Nolabel
                                                                                                  [
                                                                                                    <case>
                                                                                                      pattern (src/lr0.ml[215,7256+45]..src/lr0.ml[215,7256+46])
                                                                                                        Tpat_var "i/1097"
                                                                                                      expression (src/lr0.ml[216,7306+8]..src/lr0.ml[217,7334+11])
                                                                                                        Texp_sequence
                                                                                                        expression (src/lr0.ml[216,7306+8]..src/lr0.ml[216,7306+26])
                                                                                                          Texp_apply
                                                                                                          expression (src/lr0.ml[216,7306+8]..src/lr0.ml[216,7306+26]) ghost
                                                                                                            Texp_ident "Stdlib!.Array.set"
                                                                                                          [
                                                                                                            <arg>
                                                                                                              Nolabel
                                                                                                              expression (src/lr0.ml[216,7306+8]..src/lr0.ml[216,7306+17])
                                                                                                                Texp_ident "lookahead/1047"
                                                                                                            <arg>
                                                                                                              Nolabel
                                                                                                              expression (src/lr0.ml[216,7306+19]..src/lr0.ml[216,7306+20])
                                                                                                                Texp_ident "i/1097"
                                                                                                            <arg>
                                                                                                              Nolabel
                                                                                                              expression (src/lr0.ml[216,7306+25]..src/lr0.ml[216,7306+26])
                                                                                                                Texp_ident "s/1096"
                                                                                                          ]
                                                                                                        expression (src/lr0.ml[217,7334+8]..src/lr0.ml[217,7334+11])
                                                                                                          Texp_apply
                                                                                                          expression (src/lr0.ml[217,7334+9]..src/lr0.ml[217,7334+10])
                                                                                                            Texp_ident "Stdlib!.+"
                                                                                                          [
                                                                                                            <arg>
                                                                                                              Nolabel
                                                                                                              expression (src/lr0.ml[217,7334+8]..src/lr0.ml[217,7334+9])
                                                                                                                Texp_ident "i/1097"
                                                                                                            <arg>
                                                                                                              Nolabel
                                                                                                              expression (src/lr0.ml[217,7334+10]..src/lr0.ml[217,7334+11])
                                                                                                                Texp_constant Const_int 1
                                                                                                          ]
                                                                                                  ]
                                                                                            ]
                                                                                      ]
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr0.ml[218,7346+8]..src/lr0.ml[218,7346+22])
                                                                                      Texp_ident "symbolic_state/1025"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr0.ml[218,7346+23]..src/lr0.ml[218,7346+24])
                                                                                      Texp_constant Const_int 0
                                                                                ]
                                                                          ]
                                                                          expression (src/lr0.ml[219,7374+7]..src/lr0.ml[219,7374+21])
                                                                            extra
                                                                              Texp_constraint
                                                                              core_type (src/lr0.ml[219,7374+24]..src/lr0.ml[219,7374+50])
                                                                                Ttyp_constr "symbolic_transition_target/875"
                                                                                []
                                                                            Texp_tuple
                                                                            [
                                                                              expression (src/lr0.ml[219,7374+8]..src/lr0.ml[219,7374+9])
                                                                                Texp_ident "k/1026"
                                                                              expression (src/lr0.ml[219,7374+11]..src/lr0.ml[219,7374+20])
                                                                                Texp_ident "lookahead/1047"
                                                                            ]
                                                                ]
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (src/lr0.ml[220,7426+6]..src/lr0.ml[220,7426+27])
                                                          Texp_apply
                                                          expression (src/lr0.ml[220,7426+7]..src/lr0.ml[220,7426+18])
                                                            Texp_ident "transitions/672"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/lr0.ml[220,7426+19]..src/lr0.ml[220,7426+26])
                                                                Texp_ident "closure/1023"
                                                          ]
                                                    ]
                                              ]
                                            expression (src/lr0.ml[222,7457+4]..src/lr0.ml[222,7457+5])
                                              Texp_ident "k/1017"
                      ]
                ]
          ]
    ]
  structure_item (src/lr0.ml[227,7602+0]..src/lr0.ml[228,7632+45])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[227,7602+4]..src/lr0.ml[227,7602+9])
          Tpat_var "start/1099"
        expression (src/lr0.ml[227,7602+10]..src/lr0.ml[228,7632+45]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[227,7602+10]..src/lr0.ml[227,7602+14])
                Tpat_var "prod/1101"
              expression (src/lr0.ml[228,7632+3]..src/lr0.ml[228,7632+45])
                extra
                  Texp_constraint
                  core_type (src/lr0.ml[227,7602+17]..src/lr0.ml[227,7602+27])
                    Ttyp_constr "Dune__exe!.Item.Set.t"
                    []
                Texp_apply
                expression (src/lr0.ml[228,7632+3]..src/lr0.ml[228,7632+21])
                  Texp_ident "Dune__exe!.Item.Set.singleton"
                [
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[228,7632+22]..src/lr0.ml[228,7632+45])
                      Texp_apply
                      expression (src/lr0.ml[228,7632+23]..src/lr0.ml[228,7632+34])
                        Texp_ident "Dune__exe!.Item.import"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[228,7632+35]..src/lr0.ml[228,7632+44])
                            Texp_tuple
                            [
                              expression (src/lr0.ml[228,7632+36]..src/lr0.ml[228,7632+40])
                                Texp_ident "prod/1101"
                              expression (src/lr0.ml[228,7632+42]..src/lr0.ml[228,7632+43])
                                Texp_constant Const_int 0
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/lr0.ml[233,7776+0]..src/lr0.ml[236,7876+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[233,7776+4]..src/lr0.ml[233,7776+9])
          extra
            Tpat_extra_constraint
            core_type (src/lr0.ml[233,7776+12]..src/lr0.ml[233,7776+32])
              Ttyp_constr "Dune__exe!.Grammar.ProductionMap.t"
              [
                core_type (src/lr0.ml[233,7776+12]..src/lr0.ml[233,7776+16])
                  Ttyp_constr "node/874"
                  []
              ]
          Tpat_alias "entry/1136"
          pattern (src/lr0.ml[233,7776+4]..src/lr0.ml[233,7776+9])
            Tpat_any
        expression (src/lr0.ml[234,7811+2]..src/lr0.ml[236,7876+3])
          extra
            Texp_constraint
            core_type (src/lr0.ml[233,7776+12]..src/lr0.ml[233,7776+32])
              Ttyp_constr "Dune__exe!.Grammar.ProductionMap.t"
              [
                core_type (src/lr0.ml[233,7776+12]..src/lr0.ml[233,7776+16])
                  Ttyp_constr "node/874"
                  []
              ]
          Texp_apply
          expression (src/lr0.ml[234,7811+2]..src/lr0.ml[234,7811+21])
            Texp_ident "Dune__exe!.Grammar.ProductionMap.start"
          [
            <arg>
              Nolabel
              expression (src/lr0.ml[234,7811+22]..src/lr0.ml[236,7876+3])
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr0.ml[234,7811+27]..src/lr0.ml[234,7811+31])
                      Tpat_var "prod/1171"
                    expression (src/lr0.ml[235,7846+4]..src/lr0.ml[235,7846+29])
                      Texp_apply
                      expression (src/lr0.ml[235,7846+4]..src/lr0.ml[235,7846+11])
                        Texp_ident "explore/994"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[235,7846+12]..src/lr0.ml[235,7846+16])
                            Texp_construct "None"
                            []
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[235,7846+17]..src/lr0.ml[235,7846+29])
                            Texp_apply
                            expression (src/lr0.ml[235,7846+18]..src/lr0.ml[235,7846+23])
                              Texp_ident "start/1099"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr0.ml[235,7846+24]..src/lr0.ml[235,7846+28])
                                  Texp_ident "prod/1171"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/lr0.ml[238,7881+0]..src/lr0.ml[239,7890+19])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[238,7881+4]..src/lr0.ml[238,7881+6])
          Tpat_construct "()"
          []
          None
        expression (src/lr0.ml[239,7890+2]..src/lr0.ml[239,7890+19])
          Texp_apply
          expression (src/lr0.ml[239,7890+2]..src/lr0.ml[239,7890+15])
            Texp_ident "Stdlib!.Hashtbl.clear"
          [
            <arg>
              Nolabel
              expression (src/lr0.ml[239,7890+16]..src/lr0.ml[239,7890+19])
                Texp_ident "map/951"
          ]
    ]
  structure_item (src/lr0.ml[241,7911+0]..src/lr0.ml[242,7919+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[241,7911+4]..src/lr0.ml[241,7911+5])
          Tpat_var "n/1172"
        expression (src/lr0.ml[242,7919+2]..src/lr0.ml[242,7919+4])
          Texp_apply
          expression (src/lr0.ml[242,7919+2]..src/lr0.ml[242,7919+3])
            Texp_ident "Stdlib!.!"
          [
            <arg>
              Nolabel
              expression (src/lr0.ml[242,7919+3]..src/lr0.ml[242,7919+4])
                Texp_ident "n/876"
          ]
    ]
  structure_item (src/lr0.ml[244,7925+0]..src/lr0.ml[246,8025+49])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[244,7925+4]..src/lr0.ml[244,7925+6])
          Tpat_construct "()"
          []
          None
        expression (src/lr0.ml[245,7934+2]..src/lr0.ml[246,8025+49])
          Texp_sequence
          expression (src/lr0.ml[245,7934+2]..src/lr0.ml[245,7934+89])
            Texp_apply
            expression (src/lr0.ml[245,7934+2]..src/lr0.ml[245,7934+12])
              Texp_ident "Dune__exe!.Error.logA"
            [
              <arg>
                Nolabel
                expression (src/lr0.ml[245,7934+13]..src/lr0.ml[245,7934+14])
                  Texp_constant Const_int 1
              <arg>
                Nolabel
                expression (src/lr0.ml[245,7934+15]..src/lr0.ml[245,7934+89])
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/lr0.ml[245,7934+20]..src/lr0.ml[245,7934+21])
                        Tpat_var "f/1188"
                      expression (src/lr0.ml[245,7934+25]..src/lr0.ml[245,7934+88])
                        Texp_apply
                        expression (src/lr0.ml[245,7934+25]..src/lr0.ml[245,7934+39])
                          Texp_ident "Stdlib!.Printf.fprintf"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr0.ml[245,7934+40]..src/lr0.ml[245,7934+41])
                              Texp_ident "f/1188"
                          <arg>
                            Nolabel
                            expression (src/lr0.ml[245,7934+42]..src/lr0.ml[245,7934+86])
                              Texp_construct "CamlinternalFormatBasics.Format"
                              [
                                expression (src/lr0.ml[245,7934+42]..src/lr0.ml[245,7934+86]) ghost
                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                  [
                                    expression (src/lr0.ml[245,7934+42]..src/lr0.ml[245,7934+86]) ghost
                                      Texp_constant Const_string("Built an LR(0) automaton with ",(src/lr0.ml[245,7934+42]..src/lr0.ml[245,7934+86]) ghost,None)
                                    expression (src/lr0.ml[245,7934+42]..src/lr0.ml[245,7934+86]) ghost
                                      Texp_construct "CamlinternalFormatBasics.Int"
                                      [
                                        expression (src/lr0.ml[245,7934+42]..src/lr0.ml[245,7934+86]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Int_d"
                                          []
                                        expression (src/lr0.ml[245,7934+42]..src/lr0.ml[245,7934+86]) ghost
                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                          []
                                        expression (src/lr0.ml[245,7934+42]..src/lr0.ml[245,7934+86]) ghost
                                          Texp_construct "CamlinternalFormatBasics.No_precision"
                                          []
                                        expression (src/lr0.ml[245,7934+42]..src/lr0.ml[245,7934+86]) ghost
                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                          [
                                            expression (src/lr0.ml[245,7934+42]..src/lr0.ml[245,7934+86]) ghost
                                              Texp_constant Const_string(" states.\n",(src/lr0.ml[245,7934+42]..src/lr0.ml[245,7934+86]) ghost,None)
                                            expression (src/lr0.ml[245,7934+42]..src/lr0.ml[245,7934+86]) ghost
                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                              []
                                          ]
                                      ]
                                  ]
                                expression (src/lr0.ml[245,7934+42]..src/lr0.ml[245,7934+86]) ghost
                                  Texp_constant Const_string("Built an LR(0) automaton with %d states.\n",(src/lr0.ml[245,7934+42]..src/lr0.ml[245,7934+86]) ghost,None)
                              ]
                          <arg>
                            Nolabel
                            expression (src/lr0.ml[245,7934+87]..src/lr0.ml[245,7934+88])
                              Texp_ident "n/1172"
                        ]
                  ]
            ]
          expression (src/lr0.ml[246,8025+2]..src/lr0.ml[246,8025+49])
            Texp_apply
            expression (src/lr0.ml[246,8025+2]..src/lr0.ml[246,8025+11])
              Texp_ident "Dune__exe!.Time.tick"
            [
              <arg>
                Nolabel
                expression (src/lr0.ml[246,8025+12]..src/lr0.ml[246,8025+49])
                  Texp_constant Const_string("Construction of the LR(0) automaton",(src/lr0.ml[246,8025+13]..src/lr0.ml[246,8025+48]),None)
            ]
    ]
  structure_item (src/lr0.ml[251,8173+0]..src/lr0.ml[252,8203+31])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[251,8173+4]..src/lr0.ml[251,8173+9])
          Tpat_var "items/1230"
        expression (src/lr0.ml[251,8173+10]..src/lr0.ml[252,8203+31]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[251,8173+10]..src/lr0.ml[251,8173+14])
                Tpat_var "node/1232"
              expression (src/lr0.ml[252,8203+2]..src/lr0.ml[252,8203+31])
                extra
                  Texp_constraint
                  core_type (src/lr0.ml[251,8173+17]..src/lr0.ml[251,8173+27])
                    Ttyp_constr "Dune__exe!.Item.Set.t"
                    []
                Texp_apply
                expression (src/lr0.ml[252,8203+2]..src/lr0.ml[252,8203+19])
                  Texp_ident "InfiniteArray/430.get"
                [
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[252,8203+20]..src/lr0.ml[252,8203+26])
                      Texp_ident "states/903"
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[252,8203+27]..src/lr0.ml[252,8203+31])
                      Texp_ident "node/1232"
                ]
          ]
    ]
  structure_item (src/lr0.ml[254,8236+0]..src/lr0.ml[255,8281+33])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[254,8236+4]..src/lr0.ml[254,8236+19])
          Tpat_var "incoming_symbol/1233"
        expression (src/lr0.ml[254,8236+20]..src/lr0.ml[255,8281+33]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[254,8236+20]..src/lr0.ml[254,8236+24])
                Tpat_var "node/1235"
              expression (src/lr0.ml[255,8281+2]..src/lr0.ml[255,8281+33])
                extra
                  Texp_constraint
                  core_type (src/lr0.ml[254,8236+27]..src/lr0.ml[254,8236+42])
                    Ttyp_constr "option/10!"
                    [
                      core_type (src/lr0.ml[254,8236+27]..src/lr0.ml[254,8236+35])
                        Ttyp_constr "Dune__exe!.Grammar.Symbol.t"
                        []
                    ]
                Texp_apply
                expression (src/lr0.ml[255,8281+2]..src/lr0.ml[255,8281+19])
                  Texp_ident "InfiniteArray/430.get"
                [
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[255,8281+20]..src/lr0.ml[255,8281+28])
                      Texp_ident "incoming/993"
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[255,8281+29]..src/lr0.ml[255,8281+33])
                      Texp_ident "node/1235"
                ]
          ]
    ]
  structure_item (src/lr0.ml[257,8316+0]..src/lr0.ml[260,8409+41])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[257,8316+4]..src/lr0.ml[257,8316+18])
          Tpat_var "outgoing_edges/1236"
        expression (src/lr0.ml[257,8316+19]..src/lr0.ml[260,8409+41]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[257,8316+19]..src/lr0.ml[257,8316+23])
                Tpat_var "node/1238"
              expression (src/lr0.ml[258,8361+2]..src/lr0.ml[260,8409+41])
                extra
                  Texp_constraint
                  core_type (src/lr0.ml[257,8316+26]..src/lr0.ml[257,8316+42])
                    Ttyp_constr "Dune__exe!.Grammar.SymbolMap.t"
                    [
                      core_type (src/lr0.ml[257,8316+26]..src/lr0.ml[257,8316+30])
                        Ttyp_constr "node/874"
                        []
                    ]
                Texp_apply
                expression (src/lr0.ml[258,8361+2]..src/lr0.ml[258,8361+15])
                  Texp_ident "Dune__exe!.Grammar.SymbolMap.map"
                [
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[259,8377+4]..src/lr0.ml[259,8377+31])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/lr0.ml[259,8377+9]..src/lr0.ml[259,8377+20])
                            Tpat_tuple
                            [
                              pattern (src/lr0.ml[259,8377+10]..src/lr0.ml[259,8377+16])
                                Tpat_var "target/1239"
                              pattern (src/lr0.ml[259,8377+18]..src/lr0.ml[259,8377+19])
                                Tpat_any
                            ]
                          expression (src/lr0.ml[259,8377+24]..src/lr0.ml[259,8377+30])
                            Texp_ident "target/1239"
                      ]
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[260,8409+4]..src/lr0.ml[260,8409+41])
                      Texp_apply
                      expression (src/lr0.ml[260,8409+5]..src/lr0.ml[260,8409+22])
                        Texp_ident "InfiniteArray/430.get"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[260,8409+23]..src/lr0.ml[260,8409+35])
                            Texp_ident "_transitions/910"
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[260,8409+36]..src/lr0.ml[260,8409+40])
                            Texp_ident "node/1238"
                      ]
                ]
          ]
    ]
  structure_item (src/lr0.ml[262,8452+0]..src/lr0.ml[263,8496+56])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[262,8452+4]..src/lr0.ml[262,8452+20])
          Tpat_var "outgoing_symbols/1241"
        expression (src/lr0.ml[262,8452+21]..src/lr0.ml[263,8496+56]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[262,8452+21]..src/lr0.ml[262,8452+25])
                Tpat_var "node/1243"
              expression (src/lr0.ml[263,8496+2]..src/lr0.ml[263,8496+56])
                extra
                  Texp_constraint
                  core_type (src/lr0.ml[262,8452+28]..src/lr0.ml[262,8452+41])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/lr0.ml[262,8452+28]..src/lr0.ml[262,8452+36])
                        Ttyp_constr "Dune__exe!.Grammar.Symbol.t"
                        []
                    ]
                Texp_apply
                expression (src/lr0.ml[263,8496+2]..src/lr0.ml[263,8496+18])
                  Texp_ident "Dune__exe!.Grammar.SymbolMap.domain"
                [
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[263,8496+19]..src/lr0.ml[263,8496+56])
                      Texp_apply
                      expression (src/lr0.ml[263,8496+20]..src/lr0.ml[263,8496+37])
                        Texp_ident "InfiniteArray/430.get"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[263,8496+38]..src/lr0.ml[263,8496+50])
                            Texp_ident "_transitions/910"
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[263,8496+51]..src/lr0.ml[263,8496+55])
                            Texp_ident "node/1243"
                      ]
                ]
          ]
    ]
  structure_item (src/lr0.ml[270,8800+0]..src/lr0.ml[279,9113+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[270,8800+4]..src/lr0.ml[270,8800+16])
          extra
            Tpat_extra_constraint
            core_type (src/lr0.ml[270,8800+19]..src/lr0.ml[270,8800+41])
              Ttyp_constr "Stdlib!.Lazy.t"
              [
                core_type (src/lr0.ml[270,8800+19]..src/lr0.ml[270,8800+34])
                  Ttyp_constr "array/8!"
                  [
                    core_type (src/lr0.ml[270,8800+19]..src/lr0.ml[270,8800+28])
                      Ttyp_constr "list/9!"
                      [
                        core_type (src/lr0.ml[270,8800+19]..src/lr0.ml[270,8800+23])
                          Ttyp_constr "node/874"
                          []
                      ]
                  ]
              ]
          Tpat_alias "predecessors/1253"
          pattern (src/lr0.ml[270,8800+4]..src/lr0.ml[270,8800+16])
            Tpat_any
        expression (src/lr0.ml[271,8844+2]..src/lr0.ml[279,9113+3])
          extra
            Texp_constraint
            core_type (src/lr0.ml[270,8800+19]..src/lr0.ml[270,8800+41])
              Ttyp_constr "Stdlib!.Lazy.t"
              [
                core_type (src/lr0.ml[270,8800+19]..src/lr0.ml[270,8800+34])
                  Ttyp_constr "array/8!"
                  [
                    core_type (src/lr0.ml[270,8800+19]..src/lr0.ml[270,8800+28])
                      Ttyp_constr "list/9!"
                      [
                        core_type (src/lr0.ml[270,8800+19]..src/lr0.ml[270,8800+23])
                          Ttyp_constr "node/874"
                          []
                      ]
                  ]
              ]
          Texp_lazy          expression (src/lr0.ml[271,8844+7]..src/lr0.ml[279,9113+3])
            Texp_let Nonrec
            [
              <def>
                pattern (src/lr0.ml[272,8853+8]..src/lr0.ml[272,8853+20])
                  Tpat_var "predecessors/1258"
                expression (src/lr0.ml[272,8853+23]..src/lr0.ml[272,8853+38])
                  Texp_apply
                  expression (src/lr0.ml[272,8853+23]..src/lr0.ml[272,8853+33])
                    Texp_ident "Stdlib!.Array.make"
                  [
                    <arg>
                      Nolabel
                      expression (src/lr0.ml[272,8853+34]..src/lr0.ml[272,8853+35])
                        Texp_ident "n/1172"
                    <arg>
                      Nolabel
                      expression (src/lr0.ml[272,8853+36]..src/lr0.ml[272,8853+38])
                        Texp_construct "[]"
                        []
                  ]
            ]
            expression (src/lr0.ml[273,8895+4]..src/lr0.ml[278,9096+16])
              Texp_sequence
              expression (src/lr0.ml[273,8895+4]..src/lr0.ml[277,9086+8])
                Texp_for "source/1259" Up
                expression (src/lr0.ml[273,8895+17]..src/lr0.ml[273,8895+18])
                  Texp_constant Const_int 0
                expression (src/lr0.ml[273,8895+22]..src/lr0.ml[273,8895+25])
                  Texp_apply
                  expression (src/lr0.ml[273,8895+23]..src/lr0.ml[273,8895+24])
                    Texp_ident "Stdlib!.-"
                  [
                    <arg>
                      Nolabel
                      expression (src/lr0.ml[273,8895+22]..src/lr0.ml[273,8895+23])
                        Texp_ident "n/1172"
                    <arg>
                      Nolabel
                      expression (src/lr0.ml[273,8895+24]..src/lr0.ml[273,8895+25])
                        Texp_constant Const_int 1
                  ]
                expression (src/lr0.ml[274,8924+6]..src/lr0.ml[276,9038+47])
                  Texp_apply
                  expression (src/lr0.ml[274,8924+6]..src/lr0.ml[274,8924+20])
                    Texp_ident "Dune__exe!.Grammar.SymbolMap.iter"
                  [
                    <arg>
                      Nolabel
                      expression (src/lr0.ml[274,8924+21]..src/lr0.ml[276,9038+7])
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/lr0.ml[274,8924+26]..src/lr0.ml[274,8924+33])
                              Tpat_var "_symbol/1260"
                            expression (src/lr0.ml[274,8924+34]..src/lr0.ml[275,8973+64]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/lr0.ml[274,8924+34]..src/lr0.ml[274,8924+45])
                                    Tpat_tuple
                                    [
                                      pattern (src/lr0.ml[274,8924+35]..src/lr0.ml[274,8924+41])
                                        Tpat_var "target/1261"
                                      pattern (src/lr0.ml[274,8924+43]..src/lr0.ml[274,8924+44])
                                        Tpat_any
                                    ]
                                  expression (src/lr0.ml[275,8973+8]..src/lr0.ml[275,8973+64])
                                    Texp_apply
                                    expression (src/lr0.ml[275,8973+8]..src/lr0.ml[275,8973+64]) ghost
                                      Texp_ident "Stdlib!.Array.set"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr0.ml[275,8973+8]..src/lr0.ml[275,8973+20])
                                          Texp_ident "predecessors/1258"
                                      <arg>
                                        Nolabel
                                        expression (src/lr0.ml[275,8973+22]..src/lr0.ml[275,8973+28])
                                          Texp_ident "target/1261"
                                      <arg>
                                        Nolabel
                                        expression (src/lr0.ml[275,8973+33]..src/lr0.ml[275,8973+64])
                                          Texp_construct "::"
                                          [
                                            expression (src/lr0.ml[275,8973+33]..src/lr0.ml[275,8973+39])
                                              Texp_ident "source/1259"
                                            expression (src/lr0.ml[275,8973+43]..src/lr0.ml[275,8973+64])
                                              Texp_apply
                                              expression (src/lr0.ml[275,8973+43]..src/lr0.ml[275,8973+64]) ghost
                                                Texp_ident "Stdlib!.Array.get"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr0.ml[275,8973+43]..src/lr0.ml[275,8973+55])
                                                    Texp_ident "predecessors/1258"
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr0.ml[275,8973+57]..src/lr0.ml[275,8973+63])
                                                    Texp_ident "target/1261"
                                              ]
                                          ]
                                    ]
                              ]
                        ]
                    <arg>
                      Nolabel
                      expression (src/lr0.ml[276,9038+8]..src/lr0.ml[276,9038+47])
                        Texp_apply
                        expression (src/lr0.ml[276,9038+9]..src/lr0.ml[276,9038+26])
                          Texp_ident "InfiniteArray/430.get"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr0.ml[276,9038+27]..src/lr0.ml[276,9038+39])
                              Texp_ident "_transitions/910"
                          <arg>
                            Nolabel
                            expression (src/lr0.ml[276,9038+40]..src/lr0.ml[276,9038+46])
                              Texp_ident "source/1259"
                        ]
                  ]
              expression (src/lr0.ml[278,9096+4]..src/lr0.ml[278,9096+16])
                Texp_ident "predecessors/1258"
    ]
  structure_item (src/lr0.ml[281,9118+0]..src/lr0.ml[282,9162+31])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[281,9118+4]..src/lr0.ml[281,9118+18])
          Tpat_var "incoming_edges/1263"
        expression (src/lr0.ml[281,9118+19]..src/lr0.ml[282,9162+31]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[281,9118+20]..src/lr0.ml[281,9118+21])
                extra
                  Tpat_extra_constraint
                  core_type (src/lr0.ml[281,9118+24]..src/lr0.ml[281,9118+28])
                    Ttyp_constr "node/874"
                    []
                Tpat_alias "c/1265"
                pattern (src/lr0.ml[281,9118+20]..src/lr0.ml[281,9118+21])
                  Tpat_any
              expression (src/lr0.ml[282,9162+2]..src/lr0.ml[282,9162+31])
                extra
                  Texp_constraint
                  core_type (src/lr0.ml[281,9118+32]..src/lr0.ml[281,9118+41])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/lr0.ml[281,9118+32]..src/lr0.ml[281,9118+36])
                        Ttyp_constr "node/874"
                        []
                    ]
                Texp_apply
                expression (src/lr0.ml[282,9162+2]..src/lr0.ml[282,9162+31]) ghost
                  Texp_ident "Stdlib!.Array.get"
                [
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[282,9162+2]..src/lr0.ml[282,9162+27])
                      Texp_apply
                      expression (src/lr0.ml[282,9162+3]..src/lr0.ml[282,9162+13])
                        Texp_ident "Stdlib!.Lazy.force"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[282,9162+14]..src/lr0.ml[282,9162+26])
                            Texp_ident "predecessors/1253"
                      ]
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[282,9162+29]..src/lr0.ml[282,9162+30])
                      Texp_ident "c/1265"
                ]
          ]
    ]
  structure_item (src/lr0.ml[284,9195+0]..src/lr0.ml[285,9222+55])
    Tstr_module
    ImperativeNodeMap/1399
      module_expr (src/lr0.ml[285,9222+2]..src/lr0.ml[285,9222+55])
        Tmod_apply
        module_expr (src/lr0.ml[285,9222+2]..src/lr0.ml[285,9222+33])
          module_expr (src/lr0.ml[285,9222+2]..src/lr0.ml[285,9222+33])
            Tmod_ident "Dune__exe!.Fix.Glue.ArraysAsImperativeMaps"
        module_expr (src/lr0.ml[285,9222+34]..src/lr0.ml[285,9222+54])
          Tmod_structure
          [
            structure_item (src/lr0.ml[285,9222+41]..src/lr0.ml[285,9222+50])
              Tstr_value Nonrec
              [
                <def>
                  pattern (src/lr0.ml[285,9222+45]..src/lr0.ml[285,9222+46])
                    Tpat_var "n/1266"
                  expression (src/lr0.ml[285,9222+49]..src/lr0.ml[285,9222+50])
                    Texp_ident "n/1172"
              ]
          ]
  structure_item (src/lr0.ml[294,9565+0]..src/lr0.ml[295,9581+30])
    Tstr_type Rec
    [
      type_declaration lr1state/1400 (src/lr0.ml[294,9565+0]..src/lr0.ml[295,9581+30])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/lr0.ml[295,9581+4]..src/lr0.ml[295,9581+30])
              Ttyp_tuple
              [
                core_type (src/lr0.ml[295,9581+4]..src/lr0.ml[295,9581+8])
                  Ttyp_constr "node/874"
                  []
                core_type (src/lr0.ml[295,9581+11]..src/lr0.ml[295,9581+30])
                  Ttyp_constr "array/8!"
                  [
                    core_type (src/lr0.ml[295,9581+11]..src/lr0.ml[295,9581+24])
                      Ttyp_constr "Dune__exe!.Grammar.TerminalSet.t"
                      []
                  ]
              ]
    ]
  structure_item (src/lr0.ml[302,9849+0]..src/lr0.ml[312,10330+3])
    Tstr_module
    Lr1StateAsOrderedType/1411
      module_expr (src/lr0.ml[302,9849+31]..src/lr0.ml[312,10330+3])
        Tmod_structure
        [
          structure_item (src/lr0.ml[303,9887+2]..src/lr0.ml[303,9887+19])
            Tstr_type Rec
            [
              type_declaration t/1401 (src/lr0.ml[303,9887+2]..src/lr0.ml[303,9887+19])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (src/lr0.ml[303,9887+11]..src/lr0.ml[303,9887+19])
                      Ttyp_constr "lr1state/1400"
                      []
            ]
          structure_item (src/lr0.ml[304,9907+2]..src/lr0.ml[307,9993+38])
            Tstr_value Nonrec
            [
              <def>
                pattern (src/lr0.ml[304,9907+6]..src/lr0.ml[304,9907+13])
                  Tpat_var "compare/1402"
                expression (src/lr0.ml[304,9907+14]..src/lr0.ml[307,9993+38]) ghost
                  Texp_function
                  Nolabel
                  [
                    <case>
                      pattern (src/lr0.ml[304,9907+14]..src/lr0.ml[304,9907+26])
                        Tpat_tuple
                        [
                          pattern (src/lr0.ml[304,9907+15]..src/lr0.ml[304,9907+17])
                            Tpat_var "k1/1403"
                          pattern (src/lr0.ml[304,9907+19]..src/lr0.ml[304,9907+25])
                            Tpat_var "toksr1/1404"
                        ]
                      expression (src/lr0.ml[304,9907+27]..src/lr0.ml[307,9993+38]) ghost
                        Texp_function
                        Nolabel
                        [
                          <case>
                            pattern (src/lr0.ml[304,9907+27]..src/lr0.ml[304,9907+39])
                              Tpat_tuple
                              [
                                pattern (src/lr0.ml[304,9907+28]..src/lr0.ml[304,9907+30])
                                  Tpat_var "k2/1405"
                                pattern (src/lr0.ml[304,9907+32]..src/lr0.ml[304,9907+38])
                                  Tpat_var "toksr2/1406"
                              ]
                            expression (src/lr0.ml[305,9949+4]..src/lr0.ml[307,9993+38])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/lr0.ml[305,9949+8]..src/lr0.ml[305,9949+9])
                                    Tpat_var "c/1407"
                                  expression (src/lr0.ml[305,9949+12]..src/lr0.ml[305,9949+19])
                                    Texp_apply
                                    expression (src/lr0.ml[305,9949+15]..src/lr0.ml[305,9949+16])
                                      Texp_ident "Stdlib!.-"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr0.ml[305,9949+12]..src/lr0.ml[305,9949+14])
                                          Texp_ident "k1/1403"
                                      <arg>
                                        Nolabel
                                        expression (src/lr0.ml[305,9949+17]..src/lr0.ml[305,9949+19])
                                          Texp_ident "k2/1405"
                                    ]
                              ]
                              expression (src/lr0.ml[306,9972+4]..src/lr0.ml[307,9993+38])
                                Texp_ifthenelse
                                expression (src/lr0.ml[306,9972+7]..src/lr0.ml[306,9972+13])
                                  Texp_apply
                                  expression (src/lr0.ml[306,9972+9]..src/lr0.ml[306,9972+11])
                                    Texp_ident "Stdlib!.<>"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr0.ml[306,9972+7]..src/lr0.ml[306,9972+8])
                                        Texp_ident "c/1407"
                                    <arg>
                                      Nolabel
                                      expression (src/lr0.ml[306,9972+12]..src/lr0.ml[306,9972+13])
                                        Texp_constant Const_int 0
                                  ]
                                expression (src/lr0.ml[306,9972+19]..src/lr0.ml[306,9972+20])
                                  Texp_ident "c/1407"
                                Some
                                  expression (src/lr0.ml[307,9993+9]..src/lr0.ml[307,9993+38])
                                    Texp_apply
                                    expression (src/lr0.ml[307,9993+9]..src/lr0.ml[307,9993+24])
                                      Texp_ident "Dune__exe!.Generic.compare"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr0.ml[307,9993+25]..src/lr0.ml[307,9993+31])
                                          Texp_ident "toksr1/1404"
                                      <arg>
                                        Nolabel
                                        expression (src/lr0.ml[307,9993+32]..src/lr0.ml[307,9993+38])
                                          Texp_ident "toksr2/1406"
                                    ]
                        ]
                  ]
            ]
        ]
  structure_item (src/lr0.ml[317,10470+0]..src/lr0.ml[321,10656+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[317,10470+4]..src/lr0.ml[317,10470+10])
          Tpat_var "export/1412"
        expression (src/lr0.ml[317,10470+11]..src/lr0.ml[321,10656+7]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[317,10470+11]..src/lr0.ml[317,10470+21])
                Tpat_tuple
                [
                  pattern (src/lr0.ml[317,10470+12]..src/lr0.ml[317,10470+13])
                    Tpat_var "k/1414"
                  pattern (src/lr0.ml[317,10470+15]..src/lr0.ml[317,10470+20])
                    Tpat_var "toksr/1415"
                ]
              expression (src/lr0.ml[318,10494+2]..src/lr0.ml[321,10656+7])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/lr0.ml[318,10494+6]..src/lr0.ml[318,10494+22])
                      Tpat_tuple
                      [
                        pattern (src/lr0.ml[318,10494+7]..src/lr0.ml[318,10494+8])
                          extra
                            Tpat_extra_constraint
                            core_type (src/lr0.ml[318,10494+11]..src/lr0.ml[318,10494+14])
                              Ttyp_constr "int/1!"
                              []
                          Tpat_any
                        pattern (src/lr0.ml[318,10494+17]..src/lr0.ml[318,10494+22])
                          Tpat_var "items/1416"
                      ]
                    expression (src/lr0.ml[318,10494+25]..src/lr0.ml[320,10600+52])
                      Texp_apply
                      expression (src/lr0.ml[318,10494+25]..src/lr0.ml[318,10494+38])
                        Texp_ident "Dune__exe!.Item.Set.fold"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[318,10494+39]..src/lr0.ml[320,10600+3])
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/lr0.ml[318,10494+44]..src/lr0.ml[318,10494+48])
                                  Tpat_var "item/1417"
                                expression (src/lr0.ml[318,10494+49]..src/lr0.ml[319,10557+42]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/lr0.ml[318,10494+49]..src/lr0.ml[318,10494+59])
                                        Tpat_tuple
                                        [
                                          pattern (src/lr0.ml[318,10494+50]..src/lr0.ml[318,10494+51])
                                            Tpat_var "i/1418"
                                          pattern (src/lr0.ml[318,10494+53]..src/lr0.ml[318,10494+58])
                                            Tpat_var "items/1419"
                                        ]
                                      expression (src/lr0.ml[319,10557+4]..src/lr0.ml[319,10557+42])
                                        Texp_tuple
                                        [
                                          expression (src/lr0.ml[319,10557+4]..src/lr0.ml[319,10557+7])
                                            Texp_apply
                                            expression (src/lr0.ml[319,10557+5]..src/lr0.ml[319,10557+6])
                                              Texp_ident "Stdlib!.+"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/lr0.ml[319,10557+4]..src/lr0.ml[319,10557+5])
                                                  Texp_ident "i/1418"
                                              <arg>
                                                Nolabel
                                                expression (src/lr0.ml[319,10557+6]..src/lr0.ml[319,10557+7])
                                                  Texp_constant Const_int 1
                                            ]
                                          expression (src/lr0.ml[319,10557+9]..src/lr0.ml[319,10557+42])
                                            Texp_apply
                                            expression (src/lr0.ml[319,10557+9]..src/lr0.ml[319,10557+21])
                                              Texp_ident "Dune__exe!.Item.Map.add"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/lr0.ml[319,10557+22]..src/lr0.ml[319,10557+26])
                                                  Texp_ident "item/1417"
                                              <arg>
                                                Nolabel
                                                expression (src/lr0.ml[319,10557+27]..src/lr0.ml[319,10557+36])
                                                  Texp_apply
                                                  expression (src/lr0.ml[319,10557+27]..src/lr0.ml[319,10557+36]) ghost
                                                    Texp_ident "Stdlib!.Array.get"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/lr0.ml[319,10557+27]..src/lr0.ml[319,10557+32])
                                                        Texp_ident "toksr/1415"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/lr0.ml[319,10557+34]..src/lr0.ml[319,10557+35])
                                                        Texp_ident "i/1418"
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (src/lr0.ml[319,10557+37]..src/lr0.ml[319,10557+42])
                                                  Texp_ident "items/1419"
                                            ]
                                        ]
                                  ]
                            ]
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[320,10600+4]..src/lr0.ml[320,10600+32])
                            Texp_apply
                            expression (src/lr0.ml[320,10600+5]..src/lr0.ml[320,10600+22])
                              Texp_ident "InfiniteArray/430.get"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr0.ml[320,10600+23]..src/lr0.ml[320,10600+29])
                                  Texp_ident "states/903"
                              <arg>
                                Nolabel
                                expression (src/lr0.ml[320,10600+30]..src/lr0.ml[320,10600+31])
                                  Texp_ident "k/1414"
                            ]
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[320,10600+33]..src/lr0.ml[320,10600+52])
                            Texp_tuple
                            [
                              expression (src/lr0.ml[320,10600+34]..src/lr0.ml[320,10600+35])
                                Texp_constant Const_int 0
                              expression (src/lr0.ml[320,10600+37]..src/lr0.ml[320,10600+51])
                                Texp_ident "Dune__exe!.Item.Map.empty"
                            ]
                      ]
                ]
                expression (src/lr0.ml[321,10656+2]..src/lr0.ml[321,10656+7])
                  Texp_ident "items/1416"
          ]
    ]
  structure_item (src/lr0.ml[325,10701+0]..src/lr0.ml[333,10963+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[325,10701+4]..src/lr0.ml[325,10701+18])
          Tpat_var "print_concrete/1422"
        expression (src/lr0.ml[325,10701+19]..src/lr0.ml[333,10963+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[325,10701+19]..src/lr0.ml[325,10701+26])
                Tpat_var "leading/1424"
              expression (src/lr0.ml[325,10701+27]..src/lr0.ml[333,10963+3]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr0.ml[325,10701+28]..src/lr0.ml[325,10701+33])
                      extra
                        Tpat_extra_constraint
                        core_type (src/lr0.ml[325,10701+36]..src/lr0.ml[325,10701+52])
                          Ttyp_constr "concretelr1state/602"
                          []
                      Tpat_alias "state/1425"
                      pattern (src/lr0.ml[325,10701+28]..src/lr0.ml[325,10701+33])
                        Tpat_any
                    expression (src/lr0.ml[326,10757+2]..src/lr0.ml[333,10963+3])
                      Texp_apply
                      expression (src/lr0.ml[326,10757+2]..src/lr0.ml[326,10757+18])
                        Texp_ident "Dune__exe!.Misc.with_buffer"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[326,10757+19]..src/lr0.ml[326,10757+23])
                            Texp_constant Const_int 1024
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[326,10757+24]..src/lr0.ml[333,10963+3])
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/lr0.ml[326,10757+29]..src/lr0.ml[326,10757+35])
                                  Tpat_var "buffer/1462"
                                expression (src/lr0.ml[327,10796+4]..src/lr0.ml[332,10951+11])
                                  Texp_apply
                                  expression (src/lr0.ml[327,10796+4]..src/lr0.ml[327,10796+17])
                                    Texp_ident "Dune__exe!.Item.Map.iter"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr0.ml[327,10796+18]..src/lr0.ml[332,10951+5])
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/lr0.ml[327,10796+23]..src/lr0.ml[327,10796+27])
                                              Tpat_var "item/1463"
                                            expression (src/lr0.ml[327,10796+28]..src/lr0.ml[331,10918+32]) ghost
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/lr0.ml[327,10796+28]..src/lr0.ml[327,10796+32])
                                                    Tpat_var "toks/1464"
                                                  expression (src/lr0.ml[328,10832+6]..src/lr0.ml[331,10918+32])
                                                    Texp_apply
                                                    expression (src/lr0.ml[328,10832+6]..src/lr0.ml[328,10832+20])
                                                      Texp_ident "Stdlib!.Printf.bprintf"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/lr0.ml[328,10832+21]..src/lr0.ml[328,10832+27])
                                                          Texp_ident "buffer/1462"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/lr0.ml[328,10832+28]..src/lr0.ml[328,10832+43])
                                                          Texp_construct "CamlinternalFormatBasics.Format"
                                                          [
                                                            expression (src/lr0.ml[328,10832+28]..src/lr0.ml[328,10832+43]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.String"
                                                              [
                                                                expression (src/lr0.ml[328,10832+28]..src/lr0.ml[328,10832+43]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                  []
                                                                expression (src/lr0.ml[328,10832+28]..src/lr0.ml[328,10832+43]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.String"
                                                                  [
                                                                    expression (src/lr0.ml[328,10832+28]..src/lr0.ml[328,10832+43]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                      []
                                                                    expression (src/lr0.ml[328,10832+28]..src/lr0.ml[328,10832+43]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                      [
                                                                        expression (src/lr0.ml[328,10832+28]..src/lr0.ml[328,10832+43]) ghost
                                                                          Texp_constant Const_string(" [ ",(src/lr0.ml[328,10832+28]..src/lr0.ml[328,10832+43]) ghost,None)
                                                                        expression (src/lr0.ml[328,10832+28]..src/lr0.ml[328,10832+43]) ghost
                                                                          Texp_construct "CamlinternalFormatBasics.String"
                                                                          [
                                                                            expression (src/lr0.ml[328,10832+28]..src/lr0.ml[328,10832+43]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                              []
                                                                            expression (src/lr0.ml[328,10832+28]..src/lr0.ml[328,10832+43]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                              [
                                                                                expression (src/lr0.ml[328,10832+28]..src/lr0.ml[328,10832+43]) ghost
                                                                                  Texp_constant Const_string(" ]\n",(src/lr0.ml[328,10832+28]..src/lr0.ml[328,10832+43]) ghost,None)
                                                                                expression (src/lr0.ml[328,10832+28]..src/lr0.ml[328,10832+43]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                  []
                                                                              ]
                                                                          ]
                                                                      ]
                                                                  ]
                                                              ]
                                                            expression (src/lr0.ml[328,10832+28]..src/lr0.ml[328,10832+43]) ghost
                                                              Texp_constant Const_string("%s%s [ %s ]\n",(src/lr0.ml[328,10832+28]..src/lr0.ml[328,10832+43]) ghost,None)
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (src/lr0.ml[329,10876+8]..src/lr0.ml[329,10876+15])
                                                          Texp_ident "leading/1424"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/lr0.ml[330,10892+8]..src/lr0.ml[330,10892+25])
                                                          Texp_apply
                                                          expression (src/lr0.ml[330,10892+9]..src/lr0.ml[330,10892+19])
                                                            Texp_ident "Dune__exe!.Item.print"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/lr0.ml[330,10892+20]..src/lr0.ml[330,10892+24])
                                                                Texp_ident "item/1463"
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (src/lr0.ml[331,10918+8]..src/lr0.ml[331,10918+32])
                                                          Texp_apply
                                                          expression (src/lr0.ml[331,10918+9]..src/lr0.ml[331,10918+26])
                                                            Texp_ident "Dune__exe!.Grammar.TerminalSet.print"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/lr0.ml[331,10918+27]..src/lr0.ml[331,10918+31])
                                                                Texp_ident "toks/1464"
                                                          ]
                                                    ]
                                              ]
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/lr0.ml[332,10951+6]..src/lr0.ml[332,10951+11])
                                        Texp_ident "state/1425"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/lr0.ml[338,11057+0]..src/lr0.ml[339,11083+39])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[338,11057+4]..src/lr0.ml[338,11057+9])
          Tpat_var "print/1547"
        expression (src/lr0.ml[338,11057+10]..src/lr0.ml[339,11083+39]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[338,11057+10]..src/lr0.ml[338,11057+17])
                Tpat_var "leading/1549"
              expression (src/lr0.ml[338,11057+18]..src/lr0.ml[339,11083+39]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr0.ml[338,11057+18]..src/lr0.ml[338,11057+23])
                      Tpat_var "state/1550"
                    expression (src/lr0.ml[339,11083+2]..src/lr0.ml[339,11083+39])
                      Texp_apply
                      expression (src/lr0.ml[339,11083+2]..src/lr0.ml[339,11083+16])
                        Texp_ident "print_concrete/1422"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[339,11083+17]..src/lr0.ml[339,11083+24])
                            Texp_ident "leading/1549"
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[339,11083+25]..src/lr0.ml[339,11083+39])
                            Texp_apply
                            expression (src/lr0.ml[339,11083+26]..src/lr0.ml[339,11083+32])
                              Texp_ident "export/1412"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr0.ml[339,11083+33]..src/lr0.ml[339,11083+38])
                                  Texp_ident "state/1550"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/lr0.ml[341,11124+0]..src/lr0.ml[342,11158+49])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[341,11124+4]..src/lr0.ml[341,11124+17])
          Tpat_var "print_closure/1551"
        expression (src/lr0.ml[341,11124+18]..src/lr0.ml[342,11158+49]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[341,11124+18]..src/lr0.ml[341,11124+25])
                Tpat_var "leading/1553"
              expression (src/lr0.ml[341,11124+26]..src/lr0.ml[342,11158+49]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr0.ml[341,11124+26]..src/lr0.ml[341,11124+31])
                      Tpat_var "state/1554"
                    expression (src/lr0.ml[342,11158+2]..src/lr0.ml[342,11158+49])
                      Texp_apply
                      expression (src/lr0.ml[342,11158+2]..src/lr0.ml[342,11158+16])
                        Texp_ident "print_concrete/1422"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[342,11158+17]..src/lr0.ml[342,11158+24])
                            Texp_ident "leading/1553"
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[342,11158+25]..src/lr0.ml[342,11158+49])
                            Texp_apply
                            expression (src/lr0.ml[342,11158+26]..src/lr0.ml[342,11158+33])
                              Texp_ident "closure/669"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr0.ml[342,11158+34]..src/lr0.ml[342,11158+48])
                                  Texp_apply
                                  expression (src/lr0.ml[342,11158+35]..src/lr0.ml[342,11158+41])
                                    Texp_ident "export/1412"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr0.ml[342,11158+42]..src/lr0.ml[342,11158+47])
                                        Texp_ident "state/1554"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/lr0.ml[346,11274+0]..src/lr0.ml[347,11292+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[346,11274+4]..src/lr0.ml[346,11274+8])
          Tpat_var "core/1555"
        expression (src/lr0.ml[346,11274+9]..src/lr0.ml[347,11292+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[346,11274+9]..src/lr0.ml[346,11274+15])
                Tpat_tuple
                [
                  pattern (src/lr0.ml[346,11274+10]..src/lr0.ml[346,11274+11])
                    Tpat_var "k/1557"
                  pattern (src/lr0.ml[346,11274+13]..src/lr0.ml[346,11274+14])
                    Tpat_any
                ]
              expression (src/lr0.ml[347,11292+2]..src/lr0.ml[347,11292+3])
                Texp_ident "k/1557"
          ]
    ]
  structure_item (src/lr0.ml[353,11463+0]..src/lr0.ml[354,11475+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[353,11463+4]..src/lr0.ml[353,11463+9])
          Tpat_var "debug/1559"
        expression (src/lr0.ml[354,11475+2]..src/lr0.ml[354,11475+7])
          Texp_construct "false"
          []
    ]
  structure_item (src/lr0.ml[356,11484+0]..src/lr0.ml[358,11528+69])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[356,11484+4]..src/lr0.ml[356,11484+15])
          Tpat_var "well_formed/1560"
        expression (src/lr0.ml[356,11484+16]..src/lr0.ml[358,11528+69]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[356,11484+16]..src/lr0.ml[356,11484+26])
                Tpat_tuple
                [
                  pattern (src/lr0.ml[356,11484+17]..src/lr0.ml[356,11484+18])
                    Tpat_var "k/1562"
                  pattern (src/lr0.ml[356,11484+20]..src/lr0.ml[356,11484+25])
                    Tpat_var "toksr/1563"
                ]
              expression (src/lr0.ml[357,11513+2]..src/lr0.ml[358,11528+69])
                Texp_apply
                expression (src/lr0.ml[357,11513+12]..src/lr0.ml[357,11513+14])
                  Texp_ident "Stdlib!.||"
                [
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[357,11513+2]..src/lr0.ml[357,11513+11])
                      Texp_apply
                      expression (src/lr0.ml[357,11513+2]..src/lr0.ml[357,11513+5])
                        Texp_ident "Stdlib!.not"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[357,11513+6]..src/lr0.ml[357,11513+11])
                            Texp_ident "debug/1559"
                      ]
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[358,11528+2]..src/lr0.ml[358,11528+69])
                      Texp_apply
                      expression (src/lr0.ml[358,11528+21]..src/lr0.ml[358,11528+22])
                        Texp_ident "Stdlib!.="
                      [
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[358,11528+2]..src/lr0.ml[358,11528+20])
                            Texp_apply
                            expression (src/lr0.ml[358,11528+2]..src/lr0.ml[358,11528+14])
                              Texp_ident "Stdlib!.Array.length"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr0.ml[358,11528+15]..src/lr0.ml[358,11528+20])
                                  Texp_ident "toksr/1563"
                            ]
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[358,11528+23]..src/lr0.ml[358,11528+69])
                            Texp_apply
                            expression (src/lr0.ml[358,11528+23]..src/lr0.ml[358,11528+40])
                              Texp_ident "Dune__exe!.Item.Set.cardinal"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr0.ml[358,11528+41]..src/lr0.ml[358,11528+69])
                                  Texp_apply
                                  expression (src/lr0.ml[358,11528+42]..src/lr0.ml[358,11528+59])
                                    Texp_ident "InfiniteArray/430.get"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr0.ml[358,11528+60]..src/lr0.ml[358,11528+66])
                                        Texp_ident "states/903"
                                    <arg>
                                      Nolabel
                                      expression (src/lr0.ml[358,11528+67]..src/lr0.ml[358,11528+68])
                                        Texp_ident "k/1562"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/lr0.ml[364,11788+0]..src/lr0.ml[367,11897+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[364,11788+4]..src/lr0.ml[364,11788+9])
          Tpat_var "start/1565"
        expression (src/lr0.ml[364,11788+10]..src/lr0.ml[367,11897+7]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[364,11788+10]..src/lr0.ml[364,11788+11])
                Tpat_var "k/1566"
              expression (src/lr0.ml[365,11802+2]..src/lr0.ml[367,11897+7])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/lr0.ml[365,11802+6]..src/lr0.ml[365,11802+11])
                      Tpat_var "state/1567"
                    expression (src/lr0.ml[365,11802+14]..src/lr0.ml[365,11802+61])
                      Texp_tuple
                      [
                        expression (src/lr0.ml[365,11802+15]..src/lr0.ml[365,11802+16])
                          Texp_ident "k/1566"
                        expression (src/lr0.ml[365,11802+18]..src/lr0.ml[365,11802+60])
                          Texp_array
                          [
                            expression (src/lr0.ml[365,11802+21]..src/lr0.ml[365,11802+57])
                              Texp_apply
                              expression (src/lr0.ml[365,11802+21]..src/lr0.ml[365,11802+42])
                                Texp_ident "Dune__exe!.Grammar.TerminalSet.singleton"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr0.ml[365,11802+43]..src/lr0.ml[365,11802+57])
                                    Texp_ident "Dune__exe!.Grammar.Terminal.sharp"
                              ]
                          ]
                      ]
                ]
                expression (src/lr0.ml[366,11867+2]..src/lr0.ml[367,11897+7])
                  Texp_sequence
                  expression (src/lr0.ml[366,11867+2]..src/lr0.ml[366,11867+28])
                    Texp_assert                    expression (src/lr0.ml[366,11867+9]..src/lr0.ml[366,11867+28])
                      Texp_apply
                      expression (src/lr0.ml[366,11867+10]..src/lr0.ml[366,11867+21])
                        Texp_ident "well_formed/1560"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[366,11867+22]..src/lr0.ml[366,11867+27])
                            Texp_ident "state/1567"
                      ]
                  expression (src/lr0.ml[367,11897+2]..src/lr0.ml[367,11897+7])
                    Texp_ident "state/1567"
          ]
    ]
  structure_item (src/lr0.ml[374,12175+0]..src/lr0.ml[383,12441+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[374,12175+4]..src/lr0.ml[374,12175+13])
          Tpat_var "interpret/1627"
        expression (src/lr0.ml[375,12189+4]..src/lr0.ml[383,12441+13]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[375,12189+5]..src/lr0.ml[375,12189+24])
                extra
                  Tpat_extra_constraint
                  core_type (src/lr0.ml[375,12189+27]..src/lr0.ml[375,12189+35])
                    Ttyp_constr "lr1state/1400"
                    []
                Tpat_alias "state/1630"
                pattern (src/lr0.ml[375,12189+5]..src/lr0.ml[375,12189+15])
                  Tpat_tuple
                  [
                    pattern (src/lr0.ml[375,12189+6]..src/lr0.ml[375,12189+7])
                      Tpat_any
                    pattern (src/lr0.ml[375,12189+9]..src/lr0.ml[375,12189+14])
                      Tpat_var "toksr/1629"
                  ]
              expression (src/lr0.ml[376,12226+4]..src/lr0.ml[383,12441+13]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr0.ml[376,12226+5]..src/lr0.ml[376,12226+17])
                      extra
                        Tpat_extra_constraint
                        core_type (src/lr0.ml[376,12226+20]..src/lr0.ml[376,12226+39])
                          Ttyp_constr "SymbolicLookahead/562.t"
                          []
                      Tpat_tuple
                      [
                        pattern (src/lr0.ml[376,12226+6]..src/lr0.ml[376,12226+10])
                          Tpat_var "toks/1631"
                        pattern (src/lr0.ml[376,12226+12]..src/lr0.ml[376,12226+16])
                          Tpat_var "vars/1632"
                      ]
                    expression (src/lr0.ml[379,12290+2]..src/lr0.ml[383,12441+13])
                      extra
                        Texp_constraint
                        core_type (src/lr0.ml[377,12267+6]..src/lr0.ml[377,12267+19])
                          Ttyp_constr "Dune__exe!.Grammar.TerminalSet.t"
                          []
                      Texp_sequence
                      expression (src/lr0.ml[379,12290+2]..src/lr0.ml[379,12290+28])
                        Texp_assert                        expression (src/lr0.ml[379,12290+9]..src/lr0.ml[379,12290+28])
                          Texp_apply
                          expression (src/lr0.ml[379,12290+10]..src/lr0.ml[379,12290+21])
                            Texp_ident "well_formed/1560"
                          [
                            <arg>
                              Nolabel
                              expression (src/lr0.ml[379,12290+22]..src/lr0.ml[379,12290+27])
                                Texp_ident "state/1630"
                          ]
                      expression (src/lr0.ml[380,12320+2]..src/lr0.ml[383,12441+13])
                        Texp_apply
                        expression (src/lr0.ml[380,12320+2]..src/lr0.ml[380,12320+13])
                          Texp_ident "VarSet/437.fold"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr0.ml[380,12320+14]..src/lr0.ml[383,12441+3])
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/lr0.ml[380,12320+19]..src/lr0.ml[380,12320+22])
                                    Tpat_var "var/1633"
                                  expression (src/lr0.ml[380,12320+23]..src/lr0.ml[382,12402+38]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/lr0.ml[380,12320+23]..src/lr0.ml[380,12320+27])
                                          Tpat_var "toks/1634"
                                        expression (src/lr0.ml[381,12351+4]..src/lr0.ml[382,12402+38])
                                          Texp_sequence
                                          expression (src/lr0.ml[381,12351+4]..src/lr0.ml[381,12351+49])
                                            Texp_assert                                            expression (src/lr0.ml[381,12351+11]..src/lr0.ml[381,12351+49])
                                              Texp_apply
                                              expression (src/lr0.ml[381,12351+21]..src/lr0.ml[381,12351+23])
                                                Texp_ident "Stdlib!.&&"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr0.ml[381,12351+12]..src/lr0.ml[381,12351+20])
                                                    Texp_apply
                                                    expression (src/lr0.ml[381,12351+16]..src/lr0.ml[381,12351+18])
                                                      Texp_ident "Stdlib!.>="
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/lr0.ml[381,12351+12]..src/lr0.ml[381,12351+15])
                                                          Texp_ident "var/1633"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/lr0.ml[381,12351+19]..src/lr0.ml[381,12351+20])
                                                          Texp_constant Const_int 0
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr0.ml[381,12351+24]..src/lr0.ml[381,12351+48])
                                                    Texp_apply
                                                    expression (src/lr0.ml[381,12351+28]..src/lr0.ml[381,12351+29])
                                                      Texp_ident "Stdlib!.<"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/lr0.ml[381,12351+24]..src/lr0.ml[381,12351+27])
                                                          Texp_ident "var/1633"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/lr0.ml[381,12351+30]..src/lr0.ml[381,12351+48])
                                                          Texp_apply
                                                          expression (src/lr0.ml[381,12351+30]..src/lr0.ml[381,12351+42])
                                                            Texp_ident "Stdlib!.Array.length"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/lr0.ml[381,12351+43]..src/lr0.ml[381,12351+48])
                                                                Texp_ident "toksr/1629"
                                                          ]
                                                    ]
                                              ]
                                          expression (src/lr0.ml[382,12402+4]..src/lr0.ml[382,12402+38])
                                            Texp_apply
                                            expression (src/lr0.ml[382,12402+4]..src/lr0.ml[382,12402+21])
                                              Texp_ident "Dune__exe!.Grammar.TerminalSet.union"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/lr0.ml[382,12402+22]..src/lr0.ml[382,12402+33])
                                                  Texp_apply
                                                  expression (src/lr0.ml[382,12402+22]..src/lr0.ml[382,12402+33]) ghost
                                                    Texp_ident "Stdlib!.Array.get"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/lr0.ml[382,12402+22]..src/lr0.ml[382,12402+27])
                                                        Texp_ident "toksr/1629"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/lr0.ml[382,12402+29]..src/lr0.ml[382,12402+32])
                                                        Texp_ident "var/1633"
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (src/lr0.ml[382,12402+34]..src/lr0.ml[382,12402+38])
                                                  Texp_ident "toks/1634"
                                            ]
                                    ]
                              ]
                          <arg>
                            Nolabel
                            expression (src/lr0.ml[383,12441+4]..src/lr0.ml[383,12441+8])
                              Texp_ident "vars/1632"
                          <arg>
                            Nolabel
                            expression (src/lr0.ml[383,12441+9]..src/lr0.ml[383,12441+13])
                              Texp_ident "toks/1631"
                        ]
                ]
          ]
    ]
  structure_item (src/lr0.ml[389,12665+0]..src/lr0.ml[395,12819+37])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[389,12665+4]..src/lr0.ml[389,12665+14])
          Tpat_var "reductions/1636"
        expression (src/lr0.ml[390,12680+4]..src/lr0.ml[395,12819+37]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[390,12680+5]..src/lr0.ml[390,12680+20])
                extra
                  Tpat_extra_constraint
                  core_type (src/lr0.ml[390,12680+23]..src/lr0.ml[390,12680+31])
                    Ttyp_constr "lr1state/1400"
                    []
                Tpat_alias "state/1638"
                pattern (src/lr0.ml[390,12680+5]..src/lr0.ml[390,12680+11])
                  Tpat_tuple
                  [
                    pattern (src/lr0.ml[390,12680+6]..src/lr0.ml[390,12680+7])
                      Tpat_var "k/1637"
                    pattern (src/lr0.ml[390,12680+9]..src/lr0.ml[390,12680+10])
                      Tpat_any
                  ]
              expression (src/lr0.ml[393,12762+2]..src/lr0.ml[395,12819+37])
                extra
                  Texp_constraint
                  core_type (src/lr0.ml[391,12713+6]..src/lr0.ml[391,12713+45])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/lr0.ml[391,12713+7]..src/lr0.ml[391,12713+39])
                        Ttyp_tuple
                        [
                          core_type (src/lr0.ml[391,12713+7]..src/lr0.ml[391,12713+20])
                            Ttyp_constr "Dune__exe!.Grammar.TerminalSet.t"
                            []
                          core_type (src/lr0.ml[391,12713+23]..src/lr0.ml[391,12713+39])
                            Ttyp_constr "Dune__exe!.Grammar.Production.index"
                            []
                        ]
                    ]
                Texp_apply
                expression (src/lr0.ml[393,12762+2]..src/lr0.ml[393,12762+10])
                  Texp_ident "Stdlib!.List.map"
                [
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[393,12762+11]..src/lr0.ml[395,12819+3])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/lr0.ml[393,12762+16]..src/lr0.ml[393,12762+25])
                            Tpat_tuple
                            [
                              pattern (src/lr0.ml[393,12762+17]..src/lr0.ml[393,12762+18])
                                Tpat_var "s/1705"
                              pattern (src/lr0.ml[393,12762+20]..src/lr0.ml[393,12762+24])
                                Tpat_var "prod/1706"
                            ]
                          expression (src/lr0.ml[394,12791+4]..src/lr0.ml[394,12791+27])
                            Texp_tuple
                            [
                              expression (src/lr0.ml[394,12791+4]..src/lr0.ml[394,12791+21])
                                Texp_apply
                                expression (src/lr0.ml[394,12791+4]..src/lr0.ml[394,12791+13])
                                  Texp_ident "interpret/1627"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/lr0.ml[394,12791+14]..src/lr0.ml[394,12791+19])
                                      Texp_ident "state/1638"
                                  <arg>
                                    Nolabel
                                    expression (src/lr0.ml[394,12791+20]..src/lr0.ml[394,12791+21])
                                      Texp_ident "s/1705"
                                ]
                              expression (src/lr0.ml[394,12791+23]..src/lr0.ml[394,12791+27])
                                Texp_ident "prod/1706"
                            ]
                      ]
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[395,12819+4]..src/lr0.ml[395,12819+37])
                      Texp_apply
                      expression (src/lr0.ml[395,12819+5]..src/lr0.ml[395,12819+22])
                        Texp_ident "InfiniteArray/430.get"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[395,12819+23]..src/lr0.ml[395,12819+34])
                            Texp_ident "_reductions/911"
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[395,12819+35]..src/lr0.ml[395,12819+36])
                            Texp_ident "k/1637"
                      ]
                ]
          ]
    ]
  structure_item (src/lr0.ml[397,12858+0]..src/lr0.ml[403,13053+38])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[397,12858+4]..src/lr0.ml[397,12858+15])
          Tpat_var "transitions/1708"
        expression (src/lr0.ml[398,12874+4]..src/lr0.ml[403,13053+38]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[398,12874+5]..src/lr0.ml[398,12874+20])
                extra
                  Tpat_extra_constraint
                  core_type (src/lr0.ml[398,12874+23]..src/lr0.ml[398,12874+31])
                    Ttyp_constr "lr1state/1400"
                    []
                Tpat_alias "state/1710"
                pattern (src/lr0.ml[398,12874+5]..src/lr0.ml[398,12874+11])
                  Tpat_tuple
                  [
                    pattern (src/lr0.ml[398,12874+6]..src/lr0.ml[398,12874+7])
                      Tpat_var "k/1709"
                    pattern (src/lr0.ml[398,12874+9]..src/lr0.ml[398,12874+10])
                      Tpat_any
                  ]
              expression (src/lr0.ml[401,12937+2]..src/lr0.ml[403,13053+38])
                extra
                  Texp_constraint
                  core_type (src/lr0.ml[399,12907+6]..src/lr0.ml[399,12907+26])
                    Ttyp_constr "Dune__exe!.Grammar.SymbolMap.t"
                    [
                      core_type (src/lr0.ml[399,12907+6]..src/lr0.ml[399,12907+14])
                        Ttyp_constr "lr1state/1400"
                        []
                    ]
                Texp_apply
                expression (src/lr0.ml[401,12937+2]..src/lr0.ml[401,12937+15])
                  Texp_ident "Dune__exe!.Grammar.SymbolMap.map"
                [
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[401,12937+16]..src/lr0.ml[403,13053+3])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/lr0.ml[401,12937+22]..src/lr0.ml[401,12937+29])
                            extra
                              Tpat_extra_constraint
                              core_type (src/lr0.ml[401,12937+32]..src/lr0.ml[401,12937+58])
                                Ttyp_constr "symbolic_transition_target/875"
                                []
                            Tpat_tuple
                            [
                              pattern (src/lr0.ml[401,12937+23]..src/lr0.ml[401,12937+24])
                                Tpat_var "k/1711"
                              pattern (src/lr0.ml[401,12937+26]..src/lr0.ml[401,12937+28])
                                Tpat_var "sr/1712"
                            ]
                          expression (src/lr0.ml[402,13000+5]..src/lr0.ml[402,13000+40])
                            extra
                              Texp_constraint
                              core_type (src/lr0.ml[402,13000+43]..src/lr0.ml[402,13000+51])
                                Ttyp_constr "lr1state/1400"
                                []
                            Texp_tuple
                            [
                              expression (src/lr0.ml[402,13000+6]..src/lr0.ml[402,13000+7])
                                Texp_ident "k/1711"
                              expression (src/lr0.ml[402,13000+9]..src/lr0.ml[402,13000+39])
                                Texp_apply
                                expression (src/lr0.ml[402,13000+9]..src/lr0.ml[402,13000+18])
                                  Texp_ident "Stdlib!.Array.map"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/lr0.ml[402,13000+19]..src/lr0.ml[402,13000+36])
                                      Texp_apply
                                      expression (src/lr0.ml[402,13000+20]..src/lr0.ml[402,13000+29])
                                        Texp_ident "interpret/1627"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/lr0.ml[402,13000+30]..src/lr0.ml[402,13000+35])
                                            Texp_ident "state/1710"
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/lr0.ml[402,13000+37]..src/lr0.ml[402,13000+39])
                                      Texp_ident "sr/1712"
                                ]
                            ]
                      ]
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[403,13053+4]..src/lr0.ml[403,13053+38])
                      Texp_apply
                      expression (src/lr0.ml[403,13053+5]..src/lr0.ml[403,13053+22])
                        Texp_ident "InfiniteArray/430.get"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[403,13053+23]..src/lr0.ml[403,13053+35])
                            Texp_ident "_transitions/910"
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[403,13053+36]..src/lr0.ml[403,13053+37])
                            Texp_ident "k/1709"
                      ]
                ]
          ]
    ]
  structure_item (src/lr0.ml[405,13093+0]..src/lr0.ml[416,13372+37])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[405,13093+4]..src/lr0.ml[405,13093+14])
          Tpat_var "transition/1714"
        expression (src/lr0.ml[406,13108+4]..src/lr0.ml[416,13372+37]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[406,13108+4]..src/lr0.ml[406,13108+10])
                Tpat_var "symbol/1716"
              expression (src/lr0.ml[407,13119+4]..src/lr0.ml[416,13372+37]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr0.ml[407,13119+5]..src/lr0.ml[407,13119+20])
                      extra
                        Tpat_extra_constraint
                        core_type (src/lr0.ml[407,13119+23]..src/lr0.ml[407,13119+31])
                          Ttyp_constr "lr1state/1400"
                          []
                      Tpat_alias "state/1718"
                      pattern (src/lr0.ml[407,13119+5]..src/lr0.ml[407,13119+11])
                        Tpat_tuple
                        [
                          pattern (src/lr0.ml[407,13119+6]..src/lr0.ml[407,13119+7])
                            Tpat_var "k/1717"
                          pattern (src/lr0.ml[407,13119+9]..src/lr0.ml[407,13119+10])
                            Tpat_any
                        ]
                    expression (src/lr0.ml[410,13170+2]..src/lr0.ml[416,13372+37])
                      extra
                        Texp_constraint
                        core_type (src/lr0.ml[408,13152+6]..src/lr0.ml[408,13152+14])
                          Ttyp_constr "lr1state/1400"
                          []
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/lr0.ml[410,13170+7]..src/lr0.ml[410,13170+14])
                            extra
                              Tpat_extra_constraint
                              core_type (src/lr0.ml[410,13170+17]..src/lr0.ml[410,13170+43])
                                Ttyp_constr "symbolic_transition_target/875"
                                []
                            Tpat_tuple
                            [
                              pattern (src/lr0.ml[410,13170+8]..src/lr0.ml[410,13170+9])
                                Tpat_var "k/1719"
                              pattern (src/lr0.ml[410,13170+11]..src/lr0.ml[410,13170+13])
                                Tpat_var "sr/1720"
                            ]
                          expression (src/lr0.ml[411,13217+4]..src/lr0.ml[414,13310+18])
                            Texp_try
                            expression (src/lr0.ml[412,13225+6]..src/lr0.ml[412,13225+62])
                              Texp_apply
                              expression (src/lr0.ml[412,13225+6]..src/lr0.ml[412,13225+20])
                                Texp_ident "Dune__exe!.Grammar.SymbolMap.find"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr0.ml[412,13225+21]..src/lr0.ml[412,13225+27])
                                    Texp_ident "symbol/1716"
                                <arg>
                                  Nolabel
                                  expression (src/lr0.ml[412,13225+28]..src/lr0.ml[412,13225+62])
                                    Texp_apply
                                    expression (src/lr0.ml[412,13225+29]..src/lr0.ml[412,13225+46])
                                      Texp_ident "InfiniteArray/430.get"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr0.ml[412,13225+47]..src/lr0.ml[412,13225+59])
                                          Texp_ident "_transitions/910"
                                      <arg>
                                        Nolabel
                                        expression (src/lr0.ml[412,13225+60]..src/lr0.ml[412,13225+61])
                                          Texp_ident "k/1717"
                                    ]
                              ]
                            [
                              <case>
                                pattern (src/lr0.ml[413,13288+9]..src/lr0.ml[413,13288+18])
                                  Tpat_construct "Not_found"
                                  []
                                  None
                                expression (src/lr0.ml[414,13310+6]..src/lr0.ml[414,13310+18])
                                  Texp_assert                                  expression (src/lr0.ml[414,13310+13]..src/lr0.ml[414,13310+18])
                                    Texp_construct "false"
                                    []
                            ]
                      ]
                      expression (src/lr0.ml[416,13372+2]..src/lr0.ml[416,13372+37])
                        Texp_tuple
                        [
                          expression (src/lr0.ml[416,13372+3]..src/lr0.ml[416,13372+4])
                            Texp_ident "k/1719"
                          expression (src/lr0.ml[416,13372+6]..src/lr0.ml[416,13372+36])
                            Texp_apply
                            expression (src/lr0.ml[416,13372+6]..src/lr0.ml[416,13372+15])
                              Texp_ident "Stdlib!.Array.map"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr0.ml[416,13372+16]..src/lr0.ml[416,13372+33])
                                  Texp_apply
                                  expression (src/lr0.ml[416,13372+17]..src/lr0.ml[416,13372+26])
                                    Texp_ident "interpret/1627"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr0.ml[416,13372+27]..src/lr0.ml[416,13372+32])
                                        Texp_ident "state/1718"
                                  ]
                              <arg>
                                Nolabel
                                expression (src/lr0.ml[416,13372+34]..src/lr0.ml[416,13372+36])
                                  Texp_ident "sr/1720"
                            ]
                        ]
                ]
          ]
    ]
  structure_item (src/lr0.ml[421,13566+0]..src/lr0.ml[426,13743+33])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[421,13566+4]..src/lr0.ml[421,13566+21])
          Tpat_var "transition_tokens/1721"
        expression (src/lr0.ml[421,13566+22]..src/lr0.ml[426,13743+33]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[421,13566+22]..src/lr0.ml[421,13566+33])
                Tpat_var "transitions/1723"
              expression (src/lr0.ml[422,13602+2]..src/lr0.ml[426,13743+33])
                Texp_apply
                expression (src/lr0.ml[422,13602+2]..src/lr0.ml[422,13602+16])
                  Texp_ident "Dune__exe!.Grammar.SymbolMap.fold"
                [
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[422,13602+17]..src/lr0.ml[426,13743+3])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/lr0.ml[422,13602+22]..src/lr0.ml[422,13602+28])
                            Tpat_var "symbol/1724"
                          expression (src/lr0.ml[422,13602+29]..src/lr0.ml[425,13716+26]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/lr0.ml[422,13602+29]..src/lr0.ml[422,13602+36])
                                  Tpat_var "_target/1725"
                                expression (src/lr0.ml[422,13602+37]..src/lr0.ml[425,13716+26]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/lr0.ml[422,13602+37]..src/lr0.ml[422,13602+41])
                                        Tpat_var "toks/1726"
                                      expression (src/lr0.ml[423,13647+4]..src/lr0.ml[425,13716+26])
                                        Texp_match
                                        expression (src/lr0.ml[423,13647+10]..src/lr0.ml[423,13647+16])
                                          Texp_ident "symbol/1724"
                                        [
                                          <case>
                                            pattern (src/lr0.ml[424,13669+6]..src/lr0.ml[424,13669+18])
                                              Tpat_value
                                              pattern (src/lr0.ml[424,13669+6]..src/lr0.ml[424,13669+18])
                                                Tpat_construct "Symbol.T"
                                                [
                                                  pattern (src/lr0.ml[424,13669+15]..src/lr0.ml[424,13669+18])
                                                    Tpat_var "tok/1727"
                                                ]
                                                None
                                            expression (src/lr0.ml[424,13669+22]..src/lr0.ml[424,13669+46])
                                              Texp_apply
                                              expression (src/lr0.ml[424,13669+22]..src/lr0.ml[424,13669+37])
                                                Texp_ident "Dune__exe!.Grammar.TerminalSet.add"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr0.ml[424,13669+38]..src/lr0.ml[424,13669+41])
                                                    Texp_ident "tok/1727"
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr0.ml[424,13669+42]..src/lr0.ml[424,13669+46])
                                                    Texp_ident "toks/1726"
                                              ]
                                          <case>
                                            pattern (src/lr0.ml[425,13716+6]..src/lr0.ml[425,13716+16])
                                              Tpat_value
                                              pattern (src/lr0.ml[425,13716+6]..src/lr0.ml[425,13716+16])
                                                Tpat_construct "Symbol.N"
                                                [
                                                  pattern (src/lr0.ml[425,13716+15]..src/lr0.ml[425,13716+16])
                                                    Tpat_any
                                                ]
                                                None
                                            expression (src/lr0.ml[425,13716+22]..src/lr0.ml[425,13716+26])
                                              Texp_ident "toks/1726"
                                        ]
                                  ]
                            ]
                      ]
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[426,13743+4]..src/lr0.ml[426,13743+15])
                      Texp_ident "transitions/1723"
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[426,13743+16]..src/lr0.ml[426,13743+33])
                      Texp_ident "Dune__exe!.Grammar.TerminalSet.empty"
                ]
          ]
    ]
  structure_item (src/lr0.ml[430,13805+0]..src/lr0.ml[439,14076+28])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[430,13805+4]..src/lr0.ml[430,13805+9])
          Tpat_var "equal/1748"
        expression (src/lr0.ml[430,13805+10]..src/lr0.ml[439,14076+28]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[430,13805+10]..src/lr0.ml[430,13805+34])
                Tpat_alias "state1/1752"
                pattern (src/lr0.ml[430,13805+11]..src/lr0.ml[430,13805+23])
                  Tpat_tuple
                  [
                    pattern (src/lr0.ml[430,13805+12]..src/lr0.ml[430,13805+14])
                      Tpat_var "k1/1750"
                    pattern (src/lr0.ml[430,13805+16]..src/lr0.ml[430,13805+22])
                      Tpat_var "toksr1/1751"
                  ]
              expression (src/lr0.ml[430,13805+35]..src/lr0.ml[439,14076+28]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr0.ml[430,13805+35]..src/lr0.ml[430,13805+59])
                      Tpat_alias "state2/1755"
                      pattern (src/lr0.ml[430,13805+36]..src/lr0.ml[430,13805+48])
                        Tpat_tuple
                        [
                          pattern (src/lr0.ml[430,13805+37]..src/lr0.ml[430,13805+39])
                            Tpat_var "k2/1753"
                          pattern (src/lr0.ml[430,13805+41]..src/lr0.ml[430,13805+47])
                            Tpat_var "toksr2/1754"
                        ]
                    expression (src/lr0.ml[431,13867+2]..src/lr0.ml[439,14076+28])
                      Texp_sequence
                      expression (src/lr0.ml[431,13867+2]..src/lr0.ml[431,13867+62])
                        Texp_assert                        expression (src/lr0.ml[431,13867+9]..src/lr0.ml[431,13867+62])
                          Texp_apply
                          expression (src/lr0.ml[431,13867+18]..src/lr0.ml[431,13867+20])
                            Texp_ident "Stdlib!.&&"
                          [
                            <arg>
                              Nolabel
                              expression (src/lr0.ml[431,13867+10]..src/lr0.ml[431,13867+17])
                                Texp_apply
                                expression (src/lr0.ml[431,13867+13]..src/lr0.ml[431,13867+14])
                                  Texp_ident "Stdlib!.="
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/lr0.ml[431,13867+10]..src/lr0.ml[431,13867+12])
                                      Texp_ident "k1/1750"
                                  <arg>
                                    Nolabel
                                    expression (src/lr0.ml[431,13867+15]..src/lr0.ml[431,13867+17])
                                      Texp_ident "k2/1753"
                                ]
                            <arg>
                              Nolabel
                              expression (src/lr0.ml[431,13867+21]..src/lr0.ml[431,13867+61])
                                Texp_apply
                                expression (src/lr0.ml[431,13867+40]..src/lr0.ml[431,13867+42])
                                  Texp_ident "Stdlib!.&&"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/lr0.ml[431,13867+21]..src/lr0.ml[431,13867+39])
                                      Texp_apply
                                      expression (src/lr0.ml[431,13867+21]..src/lr0.ml[431,13867+32])
                                        Texp_ident "well_formed/1560"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/lr0.ml[431,13867+33]..src/lr0.ml[431,13867+39])
                                            Texp_ident "state1/1752"
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/lr0.ml[431,13867+43]..src/lr0.ml[431,13867+61])
                                      Texp_apply
                                      expression (src/lr0.ml[431,13867+43]..src/lr0.ml[431,13867+54])
                                        Texp_ident "well_formed/1560"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/lr0.ml[431,13867+55]..src/lr0.ml[431,13867+61])
                                            Texp_ident "state2/1755"
                                      ]
                                ]
                          ]
                      expression (src/lr0.ml[432,13931+2]..src/lr0.ml[439,14076+28])
                        Texp_let Rec
                        [
                          <def>
                            pattern (src/lr0.ml[432,13931+10]..src/lr0.ml[432,13931+14])
                              Tpat_var "loop/1756"
                            expression (src/lr0.ml[432,13931+15]..src/lr0.ml[437,14011+59]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/lr0.ml[432,13931+15]..src/lr0.ml[432,13931+16])
                                    Tpat_var "i/1757"
                                  expression (src/lr0.ml[433,13950+4]..src/lr0.ml[437,14011+59])
                                    Texp_ifthenelse
                                    expression (src/lr0.ml[433,13950+7]..src/lr0.ml[433,13950+12])
                                      Texp_apply
                                      expression (src/lr0.ml[433,13950+9]..src/lr0.ml[433,13950+10])
                                        Texp_ident "Stdlib!.="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/lr0.ml[433,13950+7]..src/lr0.ml[433,13950+8])
                                            Texp_ident "i/1757"
                                        <arg>
                                          Nolabel
                                          expression (src/lr0.ml[433,13950+11]..src/lr0.ml[433,13950+12])
                                            Texp_constant Const_int 0
                                      ]
                                    expression (src/lr0.ml[434,13968+6]..src/lr0.ml[434,13968+10])
                                      Texp_construct "true"
                                      []
                                    Some
                                      expression (src/lr0.ml[436,13988+6]..src/lr0.ml[437,14011+59])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/lr0.ml[436,13988+10]..src/lr0.ml[436,13988+11])
                                              Tpat_var "i/1758"
                                            expression (src/lr0.ml[436,13988+14]..src/lr0.ml[436,13988+19])
                                              Texp_apply
                                              expression (src/lr0.ml[436,13988+16]..src/lr0.ml[436,13988+17])
                                                Texp_ident "Stdlib!.-"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr0.ml[436,13988+14]..src/lr0.ml[436,13988+15])
                                                    Texp_ident "i/1757"
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr0.ml[436,13988+18]..src/lr0.ml[436,13988+19])
                                                    Texp_constant Const_int 1
                                              ]
                                        ]
                                        expression (src/lr0.ml[437,14011+6]..src/lr0.ml[437,14011+59])
                                          Texp_apply
                                          expression (src/lr0.ml[437,14011+48]..src/lr0.ml[437,14011+50])
                                            Texp_ident "Stdlib!.&&"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/lr0.ml[437,14011+6]..src/lr0.ml[437,14011+47])
                                                Texp_apply
                                                expression (src/lr0.ml[437,14011+7]..src/lr0.ml[437,14011+24])
                                                  Texp_ident "Dune__exe!.Grammar.TerminalSet.equal"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr0.ml[437,14011+25]..src/lr0.ml[437,14011+35])
                                                      Texp_apply
                                                      expression (src/lr0.ml[437,14011+25]..src/lr0.ml[437,14011+35]) ghost
                                                        Texp_ident "Stdlib!.Array.get"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/lr0.ml[437,14011+25]..src/lr0.ml[437,14011+31])
                                                            Texp_ident "toksr1/1751"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/lr0.ml[437,14011+33]..src/lr0.ml[437,14011+34])
                                                            Texp_ident "i/1758"
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr0.ml[437,14011+36]..src/lr0.ml[437,14011+46])
                                                      Texp_apply
                                                      expression (src/lr0.ml[437,14011+36]..src/lr0.ml[437,14011+46]) ghost
                                                        Texp_ident "Stdlib!.Array.get"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/lr0.ml[437,14011+36]..src/lr0.ml[437,14011+42])
                                                            Texp_ident "toksr2/1754"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/lr0.ml[437,14011+44]..src/lr0.ml[437,14011+45])
                                                            Texp_ident "i/1758"
                                                      ]
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/lr0.ml[437,14011+51]..src/lr0.ml[437,14011+59])
                                                Texp_apply
                                                expression (src/lr0.ml[437,14011+52]..src/lr0.ml[437,14011+56])
                                                  Texp_ident "loop/1756"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr0.ml[437,14011+57]..src/lr0.ml[437,14011+58])
                                                      Texp_ident "i/1758"
                                                ]
                                          ]
                              ]
                        ]
                        expression (src/lr0.ml[439,14076+2]..src/lr0.ml[439,14076+28])
                          Texp_apply
                          expression (src/lr0.ml[439,14076+2]..src/lr0.ml[439,14076+6])
                            Texp_ident "loop/1756"
                          [
                            <arg>
                              Nolabel
                              expression (src/lr0.ml[439,14076+7]..src/lr0.ml[439,14076+28])
                                Texp_apply
                                expression (src/lr0.ml[439,14076+8]..src/lr0.ml[439,14076+20])
                                  Texp_ident "Stdlib!.Array.length"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/lr0.ml[439,14076+21]..src/lr0.ml[439,14076+27])
                                      Texp_ident "toksr1/1751"
                                ]
                          ]
                ]
          ]
    ]
  structure_item (src/lr0.ml[443,14141+0]..src/lr0.ml[452,14415+28])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[443,14141+4]..src/lr0.ml[443,14141+11])
          Tpat_var "subsume/1759"
        expression (src/lr0.ml[443,14141+12]..src/lr0.ml[452,14415+28]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[443,14141+12]..src/lr0.ml[443,14141+36])
                Tpat_alias "state1/1763"
                pattern (src/lr0.ml[443,14141+13]..src/lr0.ml[443,14141+25])
                  Tpat_tuple
                  [
                    pattern (src/lr0.ml[443,14141+14]..src/lr0.ml[443,14141+16])
                      Tpat_var "k1/1761"
                    pattern (src/lr0.ml[443,14141+18]..src/lr0.ml[443,14141+24])
                      Tpat_var "toksr1/1762"
                  ]
              expression (src/lr0.ml[443,14141+37]..src/lr0.ml[452,14415+28]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr0.ml[443,14141+37]..src/lr0.ml[443,14141+61])
                      Tpat_alias "state2/1766"
                      pattern (src/lr0.ml[443,14141+38]..src/lr0.ml[443,14141+50])
                        Tpat_tuple
                        [
                          pattern (src/lr0.ml[443,14141+39]..src/lr0.ml[443,14141+41])
                            Tpat_var "k2/1764"
                          pattern (src/lr0.ml[443,14141+43]..src/lr0.ml[443,14141+49])
                            Tpat_var "toksr2/1765"
                        ]
                    expression (src/lr0.ml[444,14205+2]..src/lr0.ml[452,14415+28])
                      Texp_sequence
                      expression (src/lr0.ml[444,14205+2]..src/lr0.ml[444,14205+62])
                        Texp_assert                        expression (src/lr0.ml[444,14205+9]..src/lr0.ml[444,14205+62])
                          Texp_apply
                          expression (src/lr0.ml[444,14205+18]..src/lr0.ml[444,14205+20])
                            Texp_ident "Stdlib!.&&"
                          [
                            <arg>
                              Nolabel
                              expression (src/lr0.ml[444,14205+10]..src/lr0.ml[444,14205+17])
                                Texp_apply
                                expression (src/lr0.ml[444,14205+13]..src/lr0.ml[444,14205+14])
                                  Texp_ident "Stdlib!.="
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/lr0.ml[444,14205+10]..src/lr0.ml[444,14205+12])
                                      Texp_ident "k1/1761"
                                  <arg>
                                    Nolabel
                                    expression (src/lr0.ml[444,14205+15]..src/lr0.ml[444,14205+17])
                                      Texp_ident "k2/1764"
                                ]
                            <arg>
                              Nolabel
                              expression (src/lr0.ml[444,14205+21]..src/lr0.ml[444,14205+61])
                                Texp_apply
                                expression (src/lr0.ml[444,14205+40]..src/lr0.ml[444,14205+42])
                                  Texp_ident "Stdlib!.&&"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/lr0.ml[444,14205+21]..src/lr0.ml[444,14205+39])
                                      Texp_apply
                                      expression (src/lr0.ml[444,14205+21]..src/lr0.ml[444,14205+32])
                                        Texp_ident "well_formed/1560"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/lr0.ml[444,14205+33]..src/lr0.ml[444,14205+39])
                                            Texp_ident "state1/1763"
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (src/lr0.ml[444,14205+43]..src/lr0.ml[444,14205+61])
                                      Texp_apply
                                      expression (src/lr0.ml[444,14205+43]..src/lr0.ml[444,14205+54])
                                        Texp_ident "well_formed/1560"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/lr0.ml[444,14205+55]..src/lr0.ml[444,14205+61])
                                            Texp_ident "state2/1766"
                                      ]
                                ]
                          ]
                      expression (src/lr0.ml[445,14269+2]..src/lr0.ml[452,14415+28])
                        Texp_let Rec
                        [
                          <def>
                            pattern (src/lr0.ml[445,14269+10]..src/lr0.ml[445,14269+14])
                              Tpat_var "loop/1767"
                            expression (src/lr0.ml[445,14269+15]..src/lr0.ml[450,14349+60]) ghost
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/lr0.ml[445,14269+15]..src/lr0.ml[445,14269+16])
                                    Tpat_var "i/1768"
                                  expression (src/lr0.ml[446,14288+4]..src/lr0.ml[450,14349+60])
                                    Texp_ifthenelse
                                    expression (src/lr0.ml[446,14288+7]..src/lr0.ml[446,14288+12])
                                      Texp_apply
                                      expression (src/lr0.ml[446,14288+9]..src/lr0.ml[446,14288+10])
                                        Texp_ident "Stdlib!.="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/lr0.ml[446,14288+7]..src/lr0.ml[446,14288+8])
                                            Texp_ident "i/1768"
                                        <arg>
                                          Nolabel
                                          expression (src/lr0.ml[446,14288+11]..src/lr0.ml[446,14288+12])
                                            Texp_constant Const_int 0
                                      ]
                                    expression (src/lr0.ml[447,14306+6]..src/lr0.ml[447,14306+10])
                                      Texp_construct "true"
                                      []
                                    Some
                                      expression (src/lr0.ml[449,14326+6]..src/lr0.ml[450,14349+60])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (src/lr0.ml[449,14326+10]..src/lr0.ml[449,14326+11])
                                              Tpat_var "i/1769"
                                            expression (src/lr0.ml[449,14326+14]..src/lr0.ml[449,14326+19])
                                              Texp_apply
                                              expression (src/lr0.ml[449,14326+16]..src/lr0.ml[449,14326+17])
                                                Texp_ident "Stdlib!.-"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr0.ml[449,14326+14]..src/lr0.ml[449,14326+15])
                                                    Texp_ident "i/1768"
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr0.ml[449,14326+18]..src/lr0.ml[449,14326+19])
                                                    Texp_constant Const_int 1
                                              ]
                                        ]
                                        expression (src/lr0.ml[450,14349+6]..src/lr0.ml[450,14349+60])
                                          Texp_apply
                                          expression (src/lr0.ml[450,14349+49]..src/lr0.ml[450,14349+51])
                                            Texp_ident "Stdlib!.&&"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/lr0.ml[450,14349+6]..src/lr0.ml[450,14349+48])
                                                Texp_apply
                                                expression (src/lr0.ml[450,14349+7]..src/lr0.ml[450,14349+25])
                                                  Texp_ident "Dune__exe!.Grammar.TerminalSet.subset"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr0.ml[450,14349+26]..src/lr0.ml[450,14349+36])
                                                      Texp_apply
                                                      expression (src/lr0.ml[450,14349+26]..src/lr0.ml[450,14349+36]) ghost
                                                        Texp_ident "Stdlib!.Array.get"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/lr0.ml[450,14349+26]..src/lr0.ml[450,14349+32])
                                                            Texp_ident "toksr1/1762"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/lr0.ml[450,14349+34]..src/lr0.ml[450,14349+35])
                                                            Texp_ident "i/1769"
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr0.ml[450,14349+37]..src/lr0.ml[450,14349+47])
                                                      Texp_apply
                                                      expression (src/lr0.ml[450,14349+37]..src/lr0.ml[450,14349+47]) ghost
                                                        Texp_ident "Stdlib!.Array.get"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/lr0.ml[450,14349+37]..src/lr0.ml[450,14349+43])
                                                            Texp_ident "toksr2/1765"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/lr0.ml[450,14349+45]..src/lr0.ml[450,14349+46])
                                                            Texp_ident "i/1769"
                                                      ]
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (src/lr0.ml[450,14349+52]..src/lr0.ml[450,14349+60])
                                                Texp_apply
                                                expression (src/lr0.ml[450,14349+53]..src/lr0.ml[450,14349+57])
                                                  Texp_ident "loop/1767"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr0.ml[450,14349+58]..src/lr0.ml[450,14349+59])
                                                      Texp_ident "i/1769"
                                                ]
                                          ]
                              ]
                        ]
                        expression (src/lr0.ml[452,14415+2]..src/lr0.ml[452,14415+28])
                          Texp_apply
                          expression (src/lr0.ml[452,14415+2]..src/lr0.ml[452,14415+6])
                            Texp_ident "loop/1767"
                          [
                            <arg>
                              Nolabel
                              expression (src/lr0.ml[452,14415+7]..src/lr0.ml[452,14415+28])
                                Texp_apply
                                expression (src/lr0.ml[452,14415+8]..src/lr0.ml[452,14415+20])
                                  Texp_ident "Stdlib!.Array.length"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/lr0.ml[452,14415+21]..src/lr0.ml[452,14415+27])
                                      Texp_ident "toksr1/1762"
                                ]
                          ]
                ]
          ]
    ]
  structure_item (src/lr0.ml[513,17479+0]..src/lr0.ml[556,18890+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[513,17479+4]..src/lr0.ml[513,17479+14])
          Tpat_var "compatible/1770"
        expression (src/lr0.ml[513,17479+15]..src/lr0.ml[556,18890+9]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[513,17479+15]..src/lr0.ml[513,17479+27])
                Tpat_tuple
                [
                  pattern (src/lr0.ml[513,17479+16]..src/lr0.ml[513,17479+18])
                    Tpat_var "k1/1772"
                  pattern (src/lr0.ml[513,17479+20]..src/lr0.ml[513,17479+26])
                    Tpat_var "toksr1/1773"
                ]
              expression (src/lr0.ml[513,17479+28]..src/lr0.ml[556,18890+9]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr0.ml[513,17479+28]..src/lr0.ml[513,17479+40])
                      Tpat_tuple
                      [
                        pattern (src/lr0.ml[513,17479+29]..src/lr0.ml[513,17479+31])
                          Tpat_var "k2/1774"
                        pattern (src/lr0.ml[513,17479+33]..src/lr0.ml[513,17479+39])
                          Tpat_var "toksr2/1775"
                      ]
                    expression (src/lr0.ml[514,17522+2]..src/lr0.ml[556,18890+9])
                      Texp_sequence
                      expression (src/lr0.ml[514,17522+2]..src/lr0.ml[514,17522+18])
                        Texp_assert                        expression (src/lr0.ml[514,17522+9]..src/lr0.ml[514,17522+18])
                          Texp_apply
                          expression (src/lr0.ml[514,17522+13]..src/lr0.ml[514,17522+14])
                            Texp_ident "Stdlib!.="
                          [
                            <arg>
                              Nolabel
                              expression (src/lr0.ml[514,17522+10]..src/lr0.ml[514,17522+12])
                                Texp_ident "k1/1772"
                            <arg>
                              Nolabel
                              expression (src/lr0.ml[514,17522+15]..src/lr0.ml[514,17522+17])
                                Texp_ident "k2/1774"
                          ]
                      expression (src/lr0.ml[515,17542+2]..src/lr0.ml[556,18890+9])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/lr0.ml[515,17542+6]..src/lr0.ml[515,17542+7])
                              Tpat_var "n/1776"
                            expression (src/lr0.ml[515,17542+10]..src/lr0.ml[515,17542+29])
                              Texp_apply
                              expression (src/lr0.ml[515,17542+10]..src/lr0.ml[515,17542+22])
                                Texp_ident "Stdlib!.Array.length"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr0.ml[515,17542+23]..src/lr0.ml[515,17542+29])
                                    Texp_ident "toksr1/1773"
                              ]
                        ]
                        expression (src/lr0.ml[518,17699+2]..src/lr0.ml[556,18890+9])
                          Texp_let Rec
                          [
                            <def>
                              pattern (src/lr0.ml[518,17699+10]..src/lr0.ml[518,17699+15])
                                Tpat_var "loopi/1777"
                              expression (src/lr0.ml[518,17699+16]..src/lr0.ml[554,18856+28]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/lr0.ml[518,17699+16]..src/lr0.ml[518,17699+17])
                                      Tpat_var "i/1778"
                                    expression (src/lr0.ml[519,17719+4]..src/lr0.ml[554,18856+28])
                                      Texp_ifthenelse
                                      expression (src/lr0.ml[519,17719+7]..src/lr0.ml[519,17719+12])
                                        Texp_apply
                                        expression (src/lr0.ml[519,17719+9]..src/lr0.ml[519,17719+10])
                                          Texp_ident "Stdlib!.="
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr0.ml[519,17719+7]..src/lr0.ml[519,17719+8])
                                              Texp_ident "i/1778"
                                          <arg>
                                            Nolabel
                                            expression (src/lr0.ml[519,17719+11]..src/lr0.ml[519,17719+12])
                                              Texp_ident "n/1776"
                                        ]
                                      expression (src/lr0.ml[520,17737+6]..src/lr0.ml[520,17737+10])
                                        Texp_construct "true"
                                        []
                                      Some
                                        expression (src/lr0.ml[522,17757+6]..src/lr0.ml[554,18856+28])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/lr0.ml[522,17757+10]..src/lr0.ml[522,17757+17])
                                                Tpat_var "toksr1i/1779"
                                              expression (src/lr0.ml[522,17757+20]..src/lr0.ml[522,17757+30])
                                                Texp_apply
                                                expression (src/lr0.ml[522,17757+20]..src/lr0.ml[522,17757+30]) ghost
                                                  Texp_ident "Stdlib!.Array.get"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr0.ml[522,17757+20]..src/lr0.ml[522,17757+26])
                                                      Texp_ident "toksr1/1773"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr0.ml[522,17757+28]..src/lr0.ml[522,17757+29])
                                                      Texp_ident "i/1778"
                                                ]
                                            <def>
                                              pattern (src/lr0.ml[523,17788+10]..src/lr0.ml[523,17788+17])
                                                Tpat_var "toksr2i/1780"
                                              expression (src/lr0.ml[523,17788+20]..src/lr0.ml[523,17788+30])
                                                Texp_apply
                                                expression (src/lr0.ml[523,17788+20]..src/lr0.ml[523,17788+30]) ghost
                                                  Texp_ident "Stdlib!.Array.get"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr0.ml[523,17788+20]..src/lr0.ml[523,17788+26])
                                                      Texp_ident "toksr2/1775"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr0.ml[523,17788+28]..src/lr0.ml[523,17788+29])
                                                      Texp_ident "i/1778"
                                                ]
                                          ]
                                          expression (src/lr0.ml[524,17822+6]..src/lr0.ml[554,18856+28])
                                            Texp_let Rec
                                            [
                                              <def>
                                                pattern (src/lr0.ml[524,17822+14]..src/lr0.ml[524,17822+19])
                                                  Tpat_var "loopj/1781"
                                                expression (src/lr0.ml[524,17822+20]..src/lr0.ml[552,18822+24]) ghost
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (src/lr0.ml[524,17822+20]..src/lr0.ml[524,17822+21])
                                                        Tpat_var "j/1782"
                                                      expression (src/lr0.ml[525,17846+8]..src/lr0.ml[552,18822+24])
                                                        Texp_ifthenelse
                                                        expression (src/lr0.ml[525,17846+11]..src/lr0.ml[525,17846+16])
                                                          Texp_apply
                                                          expression (src/lr0.ml[525,17846+13]..src/lr0.ml[525,17846+14])
                                                            Texp_ident "Stdlib!.="
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/lr0.ml[525,17846+11]..src/lr0.ml[525,17846+12])
                                                                Texp_ident "j/1782"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/lr0.ml[525,17846+15]..src/lr0.ml[525,17846+16])
                                                                Texp_ident "i/1778"
                                                          ]
                                                        expression (src/lr0.ml[526,17868+10]..src/lr0.ml[526,17868+14])
                                                          Texp_construct "true"
                                                          []
                                                        Some
                                                          expression (src/lr0.ml[528,17896+10]..src/lr0.ml[552,18822+24])
                                                            Texp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (src/lr0.ml[528,17896+14]..src/lr0.ml[528,17896+21])
                                                                  Tpat_var "toksr1j/1783"
                                                                expression (src/lr0.ml[528,17896+24]..src/lr0.ml[528,17896+34])
                                                                  Texp_apply
                                                                  expression (src/lr0.ml[528,17896+24]..src/lr0.ml[528,17896+34]) ghost
                                                                    Texp_ident "Stdlib!.Array.get"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/lr0.ml[528,17896+24]..src/lr0.ml[528,17896+30])
                                                                        Texp_ident "toksr1/1773"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/lr0.ml[528,17896+32]..src/lr0.ml[528,17896+33])
                                                                        Texp_ident "j/1782"
                                                                  ]
                                                              <def>
                                                                pattern (src/lr0.ml[529,17931+14]..src/lr0.ml[529,17931+21])
                                                                  Tpat_var "toksr2j/1784"
                                                                expression (src/lr0.ml[529,17931+24]..src/lr0.ml[529,17931+34])
                                                                  Texp_apply
                                                                  expression (src/lr0.ml[529,17931+24]..src/lr0.ml[529,17931+34]) ghost
                                                                    Texp_ident "Stdlib!.Array.get"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/lr0.ml[529,17931+24]..src/lr0.ml[529,17931+30])
                                                                        Texp_ident "toksr2/1775"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/lr0.ml[529,17931+32]..src/lr0.ml[529,17931+33])
                                                                        Texp_ident "j/1782"
                                                                  ]
                                                            ]
                                                            expression (src/lr0.ml[544,18528+13]..src/lr0.ml[552,18822+24])
                                                              Texp_apply
                                                              expression (src/lr0.ml[547,18662+10]..src/lr0.ml[547,18662+12])
                                                                Texp_ident "Stdlib!.&&"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/lr0.ml[544,18528+13]..src/lr0.ml[546,18611+50])
                                                                    Texp_apply
                                                                    expression (src/lr0.ml[544,18528+13]..src/lr0.ml[544,18528+31])
                                                                      Texp_ident "Dune__exe!.Grammar.TerminalSet.subset"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/lr0.ml[545,18560+15]..src/lr0.ml[545,18560+50])
                                                                          Texp_apply
                                                                          expression (src/lr0.ml[545,18560+16]..src/lr0.ml[545,18560+33])
                                                                            Texp_ident "Dune__exe!.Grammar.TerminalSet.inter"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/lr0.ml[545,18560+34]..src/lr0.ml[545,18560+41])
                                                                                Texp_ident "toksr2i/1780"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/lr0.ml[545,18560+42]..src/lr0.ml[545,18560+49])
                                                                                Texp_ident "toksr1j/1783"
                                                                          ]
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/lr0.ml[546,18611+15]..src/lr0.ml[546,18611+50])
                                                                          Texp_apply
                                                                          expression (src/lr0.ml[546,18611+16]..src/lr0.ml[546,18611+33])
                                                                            Texp_ident "Dune__exe!.Grammar.TerminalSet.union"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/lr0.ml[546,18611+34]..src/lr0.ml[546,18611+41])
                                                                                Texp_ident "toksr1i/1779"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/lr0.ml[546,18611+42]..src/lr0.ml[546,18611+49])
                                                                                Texp_ident "toksr2j/1784"
                                                                          ]
                                                                    ]
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/lr0.ml[548,18675+13]..src/lr0.ml[552,18822+24])
                                                                    Texp_apply
                                                                    expression (src/lr0.ml[551,18809+10]..src/lr0.ml[551,18809+12])
                                                                      Texp_ident "Stdlib!.&&"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/lr0.ml[548,18675+13]..src/lr0.ml[550,18758+50])
                                                                          Texp_apply
                                                                          expression (src/lr0.ml[548,18675+13]..src/lr0.ml[548,18675+31])
                                                                            Texp_ident "Dune__exe!.Grammar.TerminalSet.subset"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/lr0.ml[549,18707+15]..src/lr0.ml[549,18707+50])
                                                                                Texp_apply
                                                                                expression (src/lr0.ml[549,18707+16]..src/lr0.ml[549,18707+33])
                                                                                  Texp_ident "Dune__exe!.Grammar.TerminalSet.inter"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr0.ml[549,18707+34]..src/lr0.ml[549,18707+41])
                                                                                      Texp_ident "toksr1i/1779"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr0.ml[549,18707+42]..src/lr0.ml[549,18707+49])
                                                                                      Texp_ident "toksr2j/1784"
                                                                                ]
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/lr0.ml[550,18758+15]..src/lr0.ml[550,18758+50])
                                                                                Texp_apply
                                                                                expression (src/lr0.ml[550,18758+16]..src/lr0.ml[550,18758+33])
                                                                                  Texp_ident "Dune__exe!.Grammar.TerminalSet.union"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr0.ml[550,18758+34]..src/lr0.ml[550,18758+41])
                                                                                      Texp_ident "toksr2i/1780"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr0.ml[550,18758+42]..src/lr0.ml[550,18758+49])
                                                                                      Texp_ident "toksr1j/1783"
                                                                                ]
                                                                          ]
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/lr0.ml[552,18822+13]..src/lr0.ml[552,18822+24])
                                                                          Texp_apply
                                                                          expression (src/lr0.ml[552,18822+13]..src/lr0.ml[552,18822+18])
                                                                            Texp_ident "loopj/1781"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/lr0.ml[552,18822+19]..src/lr0.ml[552,18822+24])
                                                                                Texp_apply
                                                                                expression (src/lr0.ml[552,18822+21]..src/lr0.ml[552,18822+22])
                                                                                  Texp_ident "Stdlib!.+"
                                                                                [
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr0.ml[552,18822+20]..src/lr0.ml[552,18822+21])
                                                                                      Texp_ident "j/1782"
                                                                                  <arg>
                                                                                    Nolabel
                                                                                    expression (src/lr0.ml[552,18822+22]..src/lr0.ml[552,18822+23])
                                                                                      Texp_constant Const_int 1
                                                                                ]
                                                                          ]
                                                                    ]
                                                              ]
                                                  ]
                                            ]
                                            expression (src/lr0.ml[554,18856+6]..src/lr0.ml[554,18856+28])
                                              Texp_apply
                                              expression (src/lr0.ml[554,18856+14]..src/lr0.ml[554,18856+16])
                                                Texp_ident "Stdlib!.&&"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr0.ml[554,18856+6]..src/lr0.ml[554,18856+13])
                                                    Texp_apply
                                                    expression (src/lr0.ml[554,18856+6]..src/lr0.ml[554,18856+11])
                                                      Texp_ident "loopj/1781"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/lr0.ml[554,18856+12]..src/lr0.ml[554,18856+13])
                                                          Texp_constant Const_int 0
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr0.ml[554,18856+17]..src/lr0.ml[554,18856+28])
                                                    Texp_apply
                                                    expression (src/lr0.ml[554,18856+17]..src/lr0.ml[554,18856+22])
                                                      Texp_ident "loopi/1777"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/lr0.ml[554,18856+23]..src/lr0.ml[554,18856+28])
                                                          Texp_apply
                                                          expression (src/lr0.ml[554,18856+25]..src/lr0.ml[554,18856+26])
                                                            Texp_ident "Stdlib!.+"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/lr0.ml[554,18856+24]..src/lr0.ml[554,18856+25])
                                                                Texp_ident "i/1778"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/lr0.ml[554,18856+26]..src/lr0.ml[554,18856+27])
                                                                Texp_constant Const_int 1
                                                          ]
                                                    ]
                                              ]
                                ]
                          ]
                          expression (src/lr0.ml[556,18890+2]..src/lr0.ml[556,18890+9])
                            Texp_apply
                            expression (src/lr0.ml[556,18890+2]..src/lr0.ml[556,18890+7])
                              Texp_ident "loopi/1777"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr0.ml[556,18890+8]..src/lr0.ml[556,18890+9])
                                  Texp_constant Const_int 0
                            ]
                ]
          ]
    ]
  structure_item (src/lr0.ml[580,19820+0]..src/lr0.ml[601,20503+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[580,19820+4]..src/lr0.ml[580,19820+18])
          Tpat_var "eos_compatible/1787"
        expression (src/lr0.ml[580,19820+20]..src/lr0.ml[601,20503+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[580,19820+20]..src/lr0.ml[580,19820+32])
                Tpat_tuple
                [
                  pattern (src/lr0.ml[580,19820+21]..src/lr0.ml[580,19820+23])
                    Tpat_var "k1/1789"
                  pattern (src/lr0.ml[580,19820+25]..src/lr0.ml[580,19820+31])
                    Tpat_var "toksr1/1790"
                ]
              expression (src/lr0.ml[580,19820+33]..src/lr0.ml[601,20503+8]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr0.ml[580,19820+33]..src/lr0.ml[580,19820+45])
                      Tpat_tuple
                      [
                        pattern (src/lr0.ml[580,19820+34]..src/lr0.ml[580,19820+36])
                          Tpat_var "k2/1791"
                        pattern (src/lr0.ml[580,19820+38]..src/lr0.ml[580,19820+44])
                          Tpat_var "toksr2/1792"
                      ]
                    expression (src/lr0.ml[581,19868+2]..src/lr0.ml[601,20503+8])
                      Texp_sequence
                      expression (src/lr0.ml[581,19868+2]..src/lr0.ml[581,19868+18])
                        Texp_assert                        expression (src/lr0.ml[581,19868+9]..src/lr0.ml[581,19868+18])
                          Texp_apply
                          expression (src/lr0.ml[581,19868+13]..src/lr0.ml[581,19868+14])
                            Texp_ident "Stdlib!.="
                          [
                            <arg>
                              Nolabel
                              expression (src/lr0.ml[581,19868+10]..src/lr0.ml[581,19868+12])
                                Texp_ident "k1/1789"
                            <arg>
                              Nolabel
                              expression (src/lr0.ml[581,19868+15]..src/lr0.ml[581,19868+17])
                                Texp_ident "k2/1791"
                          ]
                      expression (src/lr0.ml[582,19888+2]..src/lr0.ml[601,20503+8])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/lr0.ml[582,19888+6]..src/lr0.ml[582,19888+7])
                              Tpat_var "n/1793"
                            expression (src/lr0.ml[582,19888+10]..src/lr0.ml[582,19888+29])
                              Texp_apply
                              expression (src/lr0.ml[582,19888+10]..src/lr0.ml[582,19888+22])
                                Texp_ident "Stdlib!.Array.length"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr0.ml[582,19888+23]..src/lr0.ml[582,19888+29])
                                    Texp_ident "toksr1/1790"
                              ]
                        ]
                        expression (src/lr0.ml[583,19921+2]..src/lr0.ml[601,20503+8])
                          Texp_let Rec
                          [
                            <def>
                              pattern (src/lr0.ml[583,19921+10]..src/lr0.ml[583,19921+14])
                                Tpat_var "loop/1794"
                              expression (src/lr0.ml[583,19921+15]..src/lr0.ml[599,20478+19]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/lr0.ml[583,19921+15]..src/lr0.ml[583,19921+16])
                                      Tpat_var "i/1795"
                                    expression (src/lr0.ml[584,19940+4]..src/lr0.ml[599,20478+19])
                                      Texp_ifthenelse
                                      expression (src/lr0.ml[584,19940+7]..src/lr0.ml[584,19940+12])
                                        Texp_apply
                                        expression (src/lr0.ml[584,19940+9]..src/lr0.ml[584,19940+10])
                                          Texp_ident "Stdlib!.="
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr0.ml[584,19940+7]..src/lr0.ml[584,19940+8])
                                              Texp_ident "i/1795"
                                          <arg>
                                            Nolabel
                                            expression (src/lr0.ml[584,19940+11]..src/lr0.ml[584,19940+12])
                                              Texp_ident "n/1793"
                                        ]
                                      expression (src/lr0.ml[585,19958+6]..src/lr0.ml[585,19958+10])
                                        Texp_construct "true"
                                        []
                                      Some
                                        expression (src/lr0.ml[587,19978+6]..src/lr0.ml[599,20478+19])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/lr0.ml[587,19978+10]..src/lr0.ml[587,19978+15])
                                                Tpat_var "toks1/1796"
                                              expression (src/lr0.ml[587,19978+18]..src/lr0.ml[587,19978+28])
                                                Texp_apply
                                                expression (src/lr0.ml[587,19978+18]..src/lr0.ml[587,19978+28]) ghost
                                                  Texp_ident "Stdlib!.Array.get"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr0.ml[587,19978+18]..src/lr0.ml[587,19978+24])
                                                      Texp_ident "toksr1/1790"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr0.ml[587,19978+26]..src/lr0.ml[587,19978+27])
                                                      Texp_ident "i/1795"
                                                ]
                                            <def>
                                              pattern (src/lr0.ml[588,20007+10]..src/lr0.ml[588,20007+15])
                                                Tpat_var "toks2/1797"
                                              expression (src/lr0.ml[588,20007+18]..src/lr0.ml[588,20007+28])
                                                Texp_apply
                                                expression (src/lr0.ml[588,20007+18]..src/lr0.ml[588,20007+28]) ghost
                                                  Texp_ident "Stdlib!.Array.get"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr0.ml[588,20007+18]..src/lr0.ml[588,20007+24])
                                                      Texp_ident "toksr2/1792"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr0.ml[588,20007+26]..src/lr0.ml[588,20007+27])
                                                      Texp_ident "i/1795"
                                                ]
                                          ]
                                          expression (src/lr0.ml[589,20039+6]..src/lr0.ml[599,20478+19])
                                            Texp_apply
                                            expression (src/lr0.ml[599,20478+6]..src/lr0.ml[599,20478+8])
                                              Texp_ident "Stdlib!.&&"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/lr0.ml[589,20039+6]..src/lr0.ml[598,20468+9])
                                                  Texp_ifthenelse
                                                  expression (src/lr0.ml[590,20051+11]..src/lr0.ml[590,20051+81])
                                                    Texp_apply
                                                    expression (src/lr0.ml[590,20051+48]..src/lr0.ml[590,20051+50])
                                                      Texp_ident "Stdlib!.&&"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/lr0.ml[590,20051+11]..src/lr0.ml[590,20051+47])
                                                          Texp_apply
                                                          expression (src/lr0.ml[590,20051+11]..src/lr0.ml[590,20051+26])
                                                            Texp_ident "Dune__exe!.Grammar.TerminalSet.mem"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/lr0.ml[590,20051+27]..src/lr0.ml[590,20051+41])
                                                                Texp_ident "Dune__exe!.Grammar.Terminal.sharp"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/lr0.ml[590,20051+42]..src/lr0.ml[590,20051+47])
                                                                Texp_ident "toks1/1796"
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (src/lr0.ml[590,20051+51]..src/lr0.ml[590,20051+81])
                                                          Texp_apply
                                                          expression (src/lr0.ml[590,20051+51]..src/lr0.ml[590,20051+75])
                                                            Texp_ident "Dune__exe!.Grammar.TerminalSet.is_singleton"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/lr0.ml[590,20051+76]..src/lr0.ml[590,20051+81])
                                                                Texp_ident "toks1/1796"
                                                          ]
                                                    ]
                                                  expression (src/lr0.ml[592,20217+10]..src/lr0.ml[592,20217+46])
                                                    Texp_apply
                                                    expression (src/lr0.ml[592,20217+10]..src/lr0.ml[592,20217+25])
                                                      Texp_ident "Dune__exe!.Grammar.TerminalSet.mem"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/lr0.ml[592,20217+26]..src/lr0.ml[592,20217+40])
                                                          Texp_ident "Dune__exe!.Grammar.Terminal.sharp"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/lr0.ml[592,20217+41]..src/lr0.ml[592,20217+46])
                                                          Texp_ident "toks2/1797"
                                                    ]
                                                  Some
                                                    expression (src/lr0.ml[593,20264+13]..src/lr0.ml[597,20453+14])
                                                      Texp_ifthenelse
                                                      expression (src/lr0.ml[593,20264+16]..src/lr0.ml[593,20264+86])
                                                        Texp_apply
                                                        expression (src/lr0.ml[593,20264+53]..src/lr0.ml[593,20264+55])
                                                          Texp_ident "Stdlib!.&&"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/lr0.ml[593,20264+16]..src/lr0.ml[593,20264+52])
                                                              Texp_apply
                                                              expression (src/lr0.ml[593,20264+16]..src/lr0.ml[593,20264+31])
                                                                Texp_ident "Dune__exe!.Grammar.TerminalSet.mem"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/lr0.ml[593,20264+32]..src/lr0.ml[593,20264+46])
                                                                    Texp_ident "Dune__exe!.Grammar.Terminal.sharp"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/lr0.ml[593,20264+47]..src/lr0.ml[593,20264+52])
                                                                    Texp_ident "toks2/1797"
                                                              ]
                                                          <arg>
                                                            Nolabel
                                                            expression (src/lr0.ml[593,20264+56]..src/lr0.ml[593,20264+86])
                                                              Texp_apply
                                                              expression (src/lr0.ml[593,20264+56]..src/lr0.ml[593,20264+80])
                                                                Texp_ident "Dune__exe!.Grammar.TerminalSet.is_singleton"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/lr0.ml[593,20264+81]..src/lr0.ml[593,20264+86])
                                                                    Texp_ident "toks2/1797"
                                                              ]
                                                        ]
                                                      expression (src/lr0.ml[595,20393+10]..src/lr0.ml[595,20393+46])
                                                        Texp_apply
                                                        expression (src/lr0.ml[595,20393+10]..src/lr0.ml[595,20393+25])
                                                          Texp_ident "Dune__exe!.Grammar.TerminalSet.mem"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/lr0.ml[595,20393+26]..src/lr0.ml[595,20393+40])
                                                              Texp_ident "Dune__exe!.Grammar.Terminal.sharp"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/lr0.ml[595,20393+41]..src/lr0.ml[595,20393+46])
                                                              Texp_ident "toks1/1796"
                                                        ]
                                                      Some
                                                        expression (src/lr0.ml[597,20453+10]..src/lr0.ml[597,20453+14])
                                                          Texp_construct "true"
                                                          []
                                              <arg>
                                                Nolabel
                                                expression (src/lr0.ml[599,20478+9]..src/lr0.ml[599,20478+19])
                                                  Texp_apply
                                                  expression (src/lr0.ml[599,20478+9]..src/lr0.ml[599,20478+13])
                                                    Texp_ident "loop/1794"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/lr0.ml[599,20478+14]..src/lr0.ml[599,20478+19])
                                                        Texp_apply
                                                        expression (src/lr0.ml[599,20478+16]..src/lr0.ml[599,20478+17])
                                                          Texp_ident "Stdlib!.+"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/lr0.ml[599,20478+15]..src/lr0.ml[599,20478+16])
                                                              Texp_ident "i/1795"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/lr0.ml[599,20478+17]..src/lr0.ml[599,20478+18])
                                                              Texp_constant Const_int 1
                                                        ]
                                                  ]
                                            ]
                                ]
                          ]
                          expression (src/lr0.ml[601,20503+2]..src/lr0.ml[601,20503+8])
                            Texp_apply
                            expression (src/lr0.ml[601,20503+2]..src/lr0.ml[601,20503+6])
                              Texp_ident "loop/1794"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr0.ml[601,20503+7]..src/lr0.ml[601,20503+8])
                                  Texp_constant Const_int 0
                            ]
                ]
          ]
    ]
  structure_item (src/lr0.ml[631,21796+0]..src/lr0.ml[652,22420+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[631,21796+4]..src/lr0.ml[631,21796+20])
          Tpat_var "error_compatible/1800"
        expression (src/lr0.ml[631,21796+22]..src/lr0.ml[652,22420+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[631,21796+22]..src/lr0.ml[631,21796+34])
                Tpat_tuple
                [
                  pattern (src/lr0.ml[631,21796+23]..src/lr0.ml[631,21796+25])
                    Tpat_var "k1/1802"
                  pattern (src/lr0.ml[631,21796+27]..src/lr0.ml[631,21796+33])
                    Tpat_var "toksr1/1803"
                ]
              expression (src/lr0.ml[631,21796+35]..src/lr0.ml[652,22420+8]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr0.ml[631,21796+35]..src/lr0.ml[631,21796+47])
                      Tpat_tuple
                      [
                        pattern (src/lr0.ml[631,21796+36]..src/lr0.ml[631,21796+38])
                          Tpat_var "k2/1804"
                        pattern (src/lr0.ml[631,21796+40]..src/lr0.ml[631,21796+46])
                          Tpat_var "toksr2/1805"
                      ]
                    expression (src/lr0.ml[632,21846+2]..src/lr0.ml[652,22420+8])
                      Texp_sequence
                      expression (src/lr0.ml[632,21846+2]..src/lr0.ml[632,21846+18])
                        Texp_assert                        expression (src/lr0.ml[632,21846+9]..src/lr0.ml[632,21846+18])
                          Texp_apply
                          expression (src/lr0.ml[632,21846+13]..src/lr0.ml[632,21846+14])
                            Texp_ident "Stdlib!.="
                          [
                            <arg>
                              Nolabel
                              expression (src/lr0.ml[632,21846+10]..src/lr0.ml[632,21846+12])
                                Texp_ident "k1/1802"
                            <arg>
                              Nolabel
                              expression (src/lr0.ml[632,21846+15]..src/lr0.ml[632,21846+17])
                                Texp_ident "k2/1804"
                          ]
                      expression (src/lr0.ml[633,21866+2]..src/lr0.ml[652,22420+8])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/lr0.ml[633,21866+6]..src/lr0.ml[633,21866+7])
                              Tpat_var "n/1806"
                            expression (src/lr0.ml[633,21866+10]..src/lr0.ml[633,21866+29])
                              Texp_apply
                              expression (src/lr0.ml[633,21866+10]..src/lr0.ml[633,21866+22])
                                Texp_ident "Stdlib!.Array.length"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr0.ml[633,21866+23]..src/lr0.ml[633,21866+29])
                                    Texp_ident "toksr1/1803"
                              ]
                        ]
                        expression (src/lr0.ml[634,21899+2]..src/lr0.ml[652,22420+8])
                          Texp_let Rec
                          [
                            <def>
                              pattern (src/lr0.ml[634,21899+10]..src/lr0.ml[634,21899+14])
                                Tpat_var "loop/1807"
                              expression (src/lr0.ml[634,21899+15]..src/lr0.ml[650,22395+19]) ghost
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/lr0.ml[634,21899+15]..src/lr0.ml[634,21899+16])
                                      Tpat_var "i/1808"
                                    expression (src/lr0.ml[635,21918+4]..src/lr0.ml[650,22395+19])
                                      Texp_ifthenelse
                                      expression (src/lr0.ml[635,21918+7]..src/lr0.ml[635,21918+12])
                                        Texp_apply
                                        expression (src/lr0.ml[635,21918+9]..src/lr0.ml[635,21918+10])
                                          Texp_ident "Stdlib!.="
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr0.ml[635,21918+7]..src/lr0.ml[635,21918+8])
                                              Texp_ident "i/1808"
                                          <arg>
                                            Nolabel
                                            expression (src/lr0.ml[635,21918+11]..src/lr0.ml[635,21918+12])
                                              Texp_ident "n/1806"
                                        ]
                                      expression (src/lr0.ml[636,21936+6]..src/lr0.ml[636,21936+10])
                                        Texp_construct "true"
                                        []
                                      Some
                                        expression (src/lr0.ml[638,21956+6]..src/lr0.ml[650,22395+19])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/lr0.ml[638,21956+10]..src/lr0.ml[638,21956+15])
                                                Tpat_var "toks1/1809"
                                              expression (src/lr0.ml[638,21956+18]..src/lr0.ml[638,21956+28])
                                                Texp_apply
                                                expression (src/lr0.ml[638,21956+18]..src/lr0.ml[638,21956+28]) ghost
                                                  Texp_ident "Stdlib!.Array.get"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr0.ml[638,21956+18]..src/lr0.ml[638,21956+24])
                                                      Texp_ident "toksr1/1803"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr0.ml[638,21956+26]..src/lr0.ml[638,21956+27])
                                                      Texp_ident "i/1808"
                                                ]
                                            <def>
                                              pattern (src/lr0.ml[639,21985+10]..src/lr0.ml[639,21985+15])
                                                Tpat_var "toks2/1810"
                                              expression (src/lr0.ml[639,21985+18]..src/lr0.ml[639,21985+28])
                                                Texp_apply
                                                expression (src/lr0.ml[639,21985+18]..src/lr0.ml[639,21985+28]) ghost
                                                  Texp_ident "Stdlib!.Array.get"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr0.ml[639,21985+18]..src/lr0.ml[639,21985+24])
                                                      Texp_ident "toksr2/1805"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/lr0.ml[639,21985+26]..src/lr0.ml[639,21985+27])
                                                      Texp_ident "i/1808"
                                                ]
                                          ]
                                          expression (src/lr0.ml[640,22017+6]..src/lr0.ml[650,22395+19])
                                            Texp_apply
                                            expression (src/lr0.ml[650,22395+6]..src/lr0.ml[650,22395+8])
                                              Texp_ident "Stdlib!.&&"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/lr0.ml[640,22017+6]..src/lr0.ml[649,22385+9])
                                                  Texp_ifthenelse
                                                  expression (src/lr0.ml[641,22029+11]..src/lr0.ml[641,22029+47])
                                                    Texp_apply
                                                    expression (src/lr0.ml[641,22029+11]..src/lr0.ml[641,22029+26])
                                                      Texp_ident "Dune__exe!.Grammar.TerminalSet.mem"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/lr0.ml[641,22029+27]..src/lr0.ml[641,22029+41])
                                                          Texp_ident "Dune__exe!.Grammar.Terminal.error"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/lr0.ml[641,22029+42]..src/lr0.ml[641,22029+47])
                                                          Texp_ident "toks1/1809"
                                                    ]
                                                  expression (src/lr0.ml[643,22168+10]..src/lr0.ml[643,22168+46])
                                                    Texp_apply
                                                    expression (src/lr0.ml[643,22168+10]..src/lr0.ml[643,22168+25])
                                                      Texp_ident "Dune__exe!.Grammar.TerminalSet.mem"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/lr0.ml[643,22168+26]..src/lr0.ml[643,22168+40])
                                                          Texp_ident "Dune__exe!.Grammar.Terminal.error"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/lr0.ml[643,22168+41]..src/lr0.ml[643,22168+46])
                                                          Texp_ident "toks2/1810"
                                                    ]
                                                  Some
                                                    expression (src/lr0.ml[644,22215+13]..src/lr0.ml[648,22370+14])
                                                      Texp_ifthenelse
                                                      expression (src/lr0.ml[644,22215+16]..src/lr0.ml[644,22215+52])
                                                        Texp_apply
                                                        expression (src/lr0.ml[644,22215+16]..src/lr0.ml[644,22215+31])
                                                          Texp_ident "Dune__exe!.Grammar.TerminalSet.mem"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/lr0.ml[644,22215+32]..src/lr0.ml[644,22215+46])
                                                              Texp_ident "Dune__exe!.Grammar.Terminal.error"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/lr0.ml[644,22215+47]..src/lr0.ml[644,22215+52])
                                                              Texp_ident "toks2/1810"
                                                        ]
                                                      expression (src/lr0.ml[646,22310+10]..src/lr0.ml[646,22310+46])
                                                        Texp_apply
                                                        expression (src/lr0.ml[646,22310+10]..src/lr0.ml[646,22310+25])
                                                          Texp_ident "Dune__exe!.Grammar.TerminalSet.mem"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/lr0.ml[646,22310+26]..src/lr0.ml[646,22310+40])
                                                              Texp_ident "Dune__exe!.Grammar.Terminal.error"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/lr0.ml[646,22310+41]..src/lr0.ml[646,22310+46])
                                                              Texp_ident "toks1/1809"
                                                        ]
                                                      Some
                                                        expression (src/lr0.ml[648,22370+10]..src/lr0.ml[648,22370+14])
                                                          Texp_construct "true"
                                                          []
                                              <arg>
                                                Nolabel
                                                expression (src/lr0.ml[650,22395+9]..src/lr0.ml[650,22395+19])
                                                  Texp_apply
                                                  expression (src/lr0.ml[650,22395+9]..src/lr0.ml[650,22395+13])
                                                    Texp_ident "loop/1807"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/lr0.ml[650,22395+14]..src/lr0.ml[650,22395+19])
                                                        Texp_apply
                                                        expression (src/lr0.ml[650,22395+16]..src/lr0.ml[650,22395+17])
                                                          Texp_ident "Stdlib!.+"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (src/lr0.ml[650,22395+15]..src/lr0.ml[650,22395+16])
                                                              Texp_ident "i/1808"
                                                          <arg>
                                                            Nolabel
                                                            expression (src/lr0.ml[650,22395+17]..src/lr0.ml[650,22395+18])
                                                              Texp_constant Const_int 1
                                                        ]
                                                  ]
                                            ]
                                ]
                          ]
                          expression (src/lr0.ml[652,22420+2]..src/lr0.ml[652,22420+8])
                            Texp_apply
                            expression (src/lr0.ml[652,22420+2]..src/lr0.ml[652,22420+6])
                              Texp_ident "loop/1807"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr0.ml[652,22420+7]..src/lr0.ml[652,22420+8])
                                  Texp_constant Const_int 0
                            ]
                ]
          ]
    ]
  structure_item (src/lr0.ml[657,22569+0]..src/lr0.ml[662,22821+45])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[657,22569+4]..src/lr0.ml[657,22569+9])
          Tpat_var "union/1813"
        expression (src/lr0.ml[657,22569+10]..src/lr0.ml[662,22821+45]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[657,22569+10]..src/lr0.ml[657,22569+22])
                Tpat_tuple
                [
                  pattern (src/lr0.ml[657,22569+11]..src/lr0.ml[657,22569+13])
                    Tpat_var "k1/1815"
                  pattern (src/lr0.ml[657,22569+15]..src/lr0.ml[657,22569+21])
                    Tpat_var "toksr1/1816"
                ]
              expression (src/lr0.ml[657,22569+23]..src/lr0.ml[662,22821+45]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr0.ml[657,22569+23]..src/lr0.ml[657,22569+43])
                      Tpat_alias "s2/1819"
                      pattern (src/lr0.ml[657,22569+24]..src/lr0.ml[657,22569+36])
                        Tpat_tuple
                        [
                          pattern (src/lr0.ml[657,22569+25]..src/lr0.ml[657,22569+27])
                            Tpat_var "k2/1817"
                          pattern (src/lr0.ml[657,22569+29]..src/lr0.ml[657,22569+35])
                            Tpat_var "toksr2/1818"
                        ]
                    expression (src/lr0.ml[658,22615+2]..src/lr0.ml[662,22821+45])
                      Texp_sequence
                      expression (src/lr0.ml[658,22615+2]..src/lr0.ml[658,22615+18])
                        Texp_assert                        expression (src/lr0.ml[658,22615+9]..src/lr0.ml[658,22615+18])
                          Texp_apply
                          expression (src/lr0.ml[658,22615+13]..src/lr0.ml[658,22615+14])
                            Texp_ident "Stdlib!.="
                          [
                            <arg>
                              Nolabel
                              expression (src/lr0.ml[658,22615+10]..src/lr0.ml[658,22615+12])
                                Texp_ident "k1/1815"
                            <arg>
                              Nolabel
                              expression (src/lr0.ml[658,22615+15]..src/lr0.ml[658,22615+17])
                                Texp_ident "k2/1817"
                          ]
                      expression (src/lr0.ml[659,22635+2]..src/lr0.ml[662,22821+45])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (src/lr0.ml[659,22635+6]..src/lr0.ml[659,22635+11])
                              Tpat_var "toksr/1820"
                            expression (src/lr0.ml[659,22635+14]..src/lr0.ml[659,22635+61])
                              Texp_apply
                              expression (src/lr0.ml[659,22635+14]..src/lr0.ml[659,22635+29])
                                Texp_ident "Dune__exe!.MArray.leq_join"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr0.ml[659,22635+30]..src/lr0.ml[659,22635+47])
                                    Texp_ident "Dune__exe!.Grammar.TerminalSet.union"
                                <arg>
                                  Nolabel
                                  expression (src/lr0.ml[659,22635+48]..src/lr0.ml[659,22635+54])
                                    Texp_ident "toksr1/1816"
                                <arg>
                                  Nolabel
                                  expression (src/lr0.ml[659,22635+55]..src/lr0.ml[659,22635+61])
                                    Texp_ident "toksr2/1818"
                              ]
                        ]
                        expression (src/lr0.ml[662,22821+2]..src/lr0.ml[662,22821+45])
                          Texp_ifthenelse
                          expression (src/lr0.ml[662,22821+5]..src/lr0.ml[662,22821+20])
                            Texp_apply
                            expression (src/lr0.ml[662,22821+12]..src/lr0.ml[662,22821+14])
                              Texp_ident "Stdlib!.=="
                            [
                              <arg>
                                Nolabel
                                expression (src/lr0.ml[662,22821+5]..src/lr0.ml[662,22821+11])
                                  Texp_ident "toksr2/1818"
                              <arg>
                                Nolabel
                                expression (src/lr0.ml[662,22821+15]..src/lr0.ml[662,22821+20])
                                  Texp_ident "toksr/1820"
                            ]
                          expression (src/lr0.ml[662,22821+26]..src/lr0.ml[662,22821+28])
                            Texp_ident "s2/1819"
                          Some
                            expression (src/lr0.ml[662,22821+34]..src/lr0.ml[662,22821+45])
                              Texp_tuple
                              [
                                expression (src/lr0.ml[662,22821+35]..src/lr0.ml[662,22821+37])
                                  Texp_ident "k1/1815"
                                expression (src/lr0.ml[662,22821+39]..src/lr0.ml[662,22821+44])
                                  Texp_ident "toksr/1820"
                              ]
                ]
          ]
    ]
  structure_item (src/lr0.ml[667,22983+0]..src/lr0.ml[670,23078+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[667,22983+4]..src/lr0.ml[667,22983+12])
          Tpat_var "restrict/1886"
        expression (src/lr0.ml[667,22983+13]..src/lr0.ml[670,23078+9]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[667,22983+13]..src/lr0.ml[667,22983+17])
                Tpat_var "toks/1888"
              expression (src/lr0.ml[667,22983+18]..src/lr0.ml[670,23078+9]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr0.ml[667,22983+18]..src/lr0.ml[667,22983+28])
                      Tpat_tuple
                      [
                        pattern (src/lr0.ml[667,22983+19]..src/lr0.ml[667,22983+20])
                          Tpat_var "k/1889"
                        pattern (src/lr0.ml[667,22983+22]..src/lr0.ml[667,22983+27])
                          Tpat_var "toksr/1890"
                      ]
                    expression (src/lr0.ml[668,23014+2]..src/lr0.ml[670,23078+9])
                      Texp_tuple
                      [
                        expression (src/lr0.ml[668,23014+2]..src/lr0.ml[668,23014+3])
                          Texp_ident "k/1889"
                        expression (src/lr0.ml[668,23014+5]..src/lr0.ml[670,23078+9])
                          Texp_apply
                          expression (src/lr0.ml[668,23014+5]..src/lr0.ml[668,23014+14])
                            Texp_ident "Stdlib!.Array.map"
                          [
                            <arg>
                              Nolabel
                              expression (src/lr0.ml[668,23014+15]..src/lr0.ml[670,23078+3])
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/lr0.ml[668,23014+20]..src/lr0.ml[668,23014+26])
                                      Tpat_var "toksri/1891"
                                    expression (src/lr0.ml[669,23044+4]..src/lr0.ml[669,23044+33])
                                      Texp_apply
                                      expression (src/lr0.ml[669,23044+4]..src/lr0.ml[669,23044+21])
                                        Texp_ident "Dune__exe!.Grammar.TerminalSet.inter"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/lr0.ml[669,23044+22]..src/lr0.ml[669,23044+28])
                                            Texp_ident "toksri/1891"
                                        <arg>
                                          Nolabel
                                          expression (src/lr0.ml[669,23044+29]..src/lr0.ml[669,23044+33])
                                            Texp_ident "toks/1888"
                                      ]
                                ]
                            <arg>
                              Nolabel
                              expression (src/lr0.ml[670,23078+4]..src/lr0.ml[670,23078+9])
                                Texp_ident "toksr/1890"
                          ]
                      ]
                ]
          ]
    ]
  structure_item (src/lr0.ml[675,23205+0]..src/lr0.ml[676,23223+37])
    Tstr_type Rec
    [
      type_declaration reductions/1893 (src/lr0.ml[675,23205+0]..src/lr0.ml[676,23223+37])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (src/lr0.ml[676,23223+2]..src/lr0.ml[676,23223+37])
              Ttyp_constr "Dune__exe!.Grammar.TerminalMap.t"
              [
                core_type (src/lr0.ml[676,23223+2]..src/lr0.ml[676,23223+23])
                  Ttyp_constr "list/9!"
                  [
                    core_type (src/lr0.ml[676,23223+2]..src/lr0.ml[676,23223+18])
                      Ttyp_constr "Dune__exe!.Grammar.Production.index"
                      []
                  ]
              ]
    ]
  structure_item (src/lr0.ml[681,23371+0]..src/lr0.ml[688,23509+48])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[681,23371+4]..src/lr0.ml[681,23371+17])
          Tpat_var "add_reduction/1960"
        expression (src/lr0.ml[681,23371+18]..src/lr0.ml[688,23509+48]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[681,23371+18]..src/lr0.ml[681,23371+22])
                Tpat_var "prod/1962"
              expression (src/lr0.ml[681,23371+23]..src/lr0.ml[688,23509+48]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr0.ml[681,23371+23]..src/lr0.ml[681,23371+26])
                      Tpat_var "tok/1963"
                    expression (src/lr0.ml[681,23371+27]..src/lr0.ml[688,23509+48]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/lr0.ml[681,23371+27]..src/lr0.ml[681,23371+37])
                            Tpat_var "reductions/1964"
                          expression (src/lr0.ml[682,23411+2]..src/lr0.ml[688,23509+48])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/lr0.ml[682,23411+6]..src/lr0.ml[682,23411+11])
                                  Tpat_var "prods/1965"
                                expression (src/lr0.ml[683,23425+4]..src/lr0.ml[686,23495+8])
                                  Texp_try
                                  expression (src/lr0.ml[684,23433+6]..src/lr0.ml[684,23433+39])
                                    Texp_apply
                                    expression (src/lr0.ml[684,23433+6]..src/lr0.ml[684,23433+24])
                                      Texp_ident "Dune__exe!.Grammar.TerminalMap.lookup"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/lr0.ml[684,23433+25]..src/lr0.ml[684,23433+28])
                                          Texp_ident "tok/1963"
                                      <arg>
                                        Nolabel
                                        expression (src/lr0.ml[684,23433+29]..src/lr0.ml[684,23433+39])
                                          Texp_ident "reductions/1964"
                                    ]
                                  [
                                    <case>
                                      pattern (src/lr0.ml[685,23473+9]..src/lr0.ml[685,23473+18])
                                        Tpat_construct "Not_found"
                                        []
                                        None
                                      expression (src/lr0.ml[686,23495+6]..src/lr0.ml[686,23495+8])
                                        Texp_construct "[]"
                                        []
                                  ]
                            ]
                            expression (src/lr0.ml[688,23509+2]..src/lr0.ml[688,23509+48])
                              Texp_apply
                              expression (src/lr0.ml[688,23509+2]..src/lr0.ml[688,23509+17])
                                Texp_ident "Dune__exe!.Grammar.TerminalMap.add"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/lr0.ml[688,23509+18]..src/lr0.ml[688,23509+21])
                                    Texp_ident "tok/1963"
                                <arg>
                                  Nolabel
                                  expression (src/lr0.ml[688,23509+22]..src/lr0.ml[688,23509+37])
                                    Texp_construct "::"
                                    [
                                      expression (src/lr0.ml[688,23509+23]..src/lr0.ml[688,23509+27])
                                        Texp_ident "prod/1962"
                                      expression (src/lr0.ml[688,23509+31]..src/lr0.ml[688,23509+36])
                                        Texp_ident "prods/1965"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/lr0.ml[688,23509+38]..src/lr0.ml[688,23509+48])
                                    Texp_ident "reductions/1964"
                              ]
                      ]
                ]
          ]
    ]
  structure_item (src/lr0.ml[693,23694+0]..src/lr0.ml[694,23736+55])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[693,23694+4]..src/lr0.ml[693,23694+18])
          Tpat_var "add_reductions/1966"
        expression (src/lr0.ml[693,23694+19]..src/lr0.ml[694,23736+55]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[693,23694+19]..src/lr0.ml[693,23694+23])
                Tpat_var "prod/1968"
              expression (src/lr0.ml[693,23694+24]..src/lr0.ml[694,23736+55]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr0.ml[693,23694+24]..src/lr0.ml[693,23694+28])
                      Tpat_var "toks/1969"
                    expression (src/lr0.ml[693,23694+29]..src/lr0.ml[694,23736+55]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/lr0.ml[693,23694+29]..src/lr0.ml[693,23694+39])
                            Tpat_var "reductions/1970"
                          expression (src/lr0.ml[694,23736+2]..src/lr0.ml[694,23736+55])
                            Texp_apply
                            expression (src/lr0.ml[694,23736+2]..src/lr0.ml[694,23736+18])
                              Texp_ident "Dune__exe!.Grammar.TerminalSet.fold"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr0.ml[694,23736+19]..src/lr0.ml[694,23736+39])
                                  Texp_apply
                                  expression (src/lr0.ml[694,23736+20]..src/lr0.ml[694,23736+33])
                                    Texp_ident "add_reduction/1960"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr0.ml[694,23736+34]..src/lr0.ml[694,23736+38])
                                        Texp_ident "prod/1968"
                                  ]
                              <arg>
                                Nolabel
                                expression (src/lr0.ml[694,23736+40]..src/lr0.ml[694,23736+44])
                                  Texp_ident "toks/1969"
                              <arg>
                                Nolabel
                                expression (src/lr0.ml[694,23736+45]..src/lr0.ml[694,23736+55])
                                  Texp_ident "reductions/1970"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/lr0.ml[696,23793+0]..src/lr0.ml[699,23911+40])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[696,23793+4]..src/lr0.ml[696,23793+20])
          Tpat_var "reductions_table/1971"
        expression (src/lr0.ml[696,23793+21]..src/lr0.ml[699,23911+40]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[696,23793+21]..src/lr0.ml[696,23793+26])
                Tpat_var "state/1973"
              expression (src/lr0.ml[697,23822+2]..src/lr0.ml[699,23911+40])
                Texp_apply
                expression (src/lr0.ml[697,23822+2]..src/lr0.ml[697,23822+16])
                  Texp_ident "Stdlib!.List.fold_left"
                [
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[697,23822+17]..src/lr0.ml[699,23911+3])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/lr0.ml[697,23822+22]..src/lr0.ml[697,23822+32])
                            Tpat_var "reductions/1974"
                          expression (src/lr0.ml[697,23822+33]..src/lr0.ml[698,23871+39]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/lr0.ml[697,23822+33]..src/lr0.ml[697,23822+45])
                                  Tpat_tuple
                                  [
                                    pattern (src/lr0.ml[697,23822+34]..src/lr0.ml[697,23822+38])
                                      Tpat_var "toks/1975"
                                    pattern (src/lr0.ml[697,23822+40]..src/lr0.ml[697,23822+44])
                                      Tpat_var "prod/1976"
                                  ]
                                expression (src/lr0.ml[698,23871+4]..src/lr0.ml[698,23871+39])
                                  Texp_apply
                                  expression (src/lr0.ml[698,23871+4]..src/lr0.ml[698,23871+18])
                                    Texp_ident "add_reductions/1966"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr0.ml[698,23871+19]..src/lr0.ml[698,23871+23])
                                        Texp_ident "prod/1976"
                                    <arg>
                                      Nolabel
                                      expression (src/lr0.ml[698,23871+24]..src/lr0.ml[698,23871+28])
                                        Texp_ident "toks/1975"
                                    <arg>
                                      Nolabel
                                      expression (src/lr0.ml[698,23871+29]..src/lr0.ml[698,23871+39])
                                        Texp_ident "reductions/1974"
                                  ]
                            ]
                      ]
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[699,23911+4]..src/lr0.ml[699,23911+21])
                      Texp_ident "Dune__exe!.Grammar.TerminalMap.empty"
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[699,23911+22]..src/lr0.ml[699,23911+40])
                      Texp_apply
                      expression (src/lr0.ml[699,23911+23]..src/lr0.ml[699,23911+33])
                        Texp_ident "reductions/1636"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[699,23911+34]..src/lr0.ml[699,23911+39])
                            Texp_ident "state/1973"
                      ]
                ]
          ]
    ]
  structure_item (src/lr0.ml[704,24077+0]..src/lr0.ml[707,24185+32])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[704,24077+4]..src/lr0.ml[704,24077+20])
          Tpat_var "reduction_tokens/1978"
        expression (src/lr0.ml[704,24077+21]..src/lr0.ml[707,24185+32]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[704,24077+21]..src/lr0.ml[704,24077+31])
                Tpat_var "reductions/1980"
              expression (src/lr0.ml[705,24111+2]..src/lr0.ml[707,24185+32])
                Texp_apply
                expression (src/lr0.ml[705,24111+2]..src/lr0.ml[705,24111+18])
                  Texp_ident "Dune__exe!.Grammar.TerminalMap.fold"
                [
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[705,24111+19]..src/lr0.ml[707,24185+3])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/lr0.ml[705,24111+24]..src/lr0.ml[705,24111+27])
                            Tpat_var "tok/1981"
                          expression (src/lr0.ml[705,24111+28]..src/lr0.ml[706,24154+30]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/lr0.ml[705,24111+28]..src/lr0.ml[705,24111+34])
                                  Tpat_var "_prods/1982"
                                expression (src/lr0.ml[705,24111+35]..src/lr0.ml[706,24154+30]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/lr0.ml[705,24111+35]..src/lr0.ml[705,24111+39])
                                        Tpat_var "toks/1983"
                                      expression (src/lr0.ml[706,24154+6]..src/lr0.ml[706,24154+30])
                                        Texp_apply
                                        expression (src/lr0.ml[706,24154+6]..src/lr0.ml[706,24154+21])
                                          Texp_ident "Dune__exe!.Grammar.TerminalSet.add"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr0.ml[706,24154+22]..src/lr0.ml[706,24154+25])
                                              Texp_ident "tok/1981"
                                          <arg>
                                            Nolabel
                                            expression (src/lr0.ml[706,24154+26]..src/lr0.ml[706,24154+30])
                                              Texp_ident "toks/1983"
                                        ]
                                  ]
                            ]
                      ]
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[707,24185+4]..src/lr0.ml[707,24185+14])
                      Texp_ident "reductions/1980"
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[707,24185+15]..src/lr0.ml[707,24185+32])
                      Texp_ident "Dune__exe!.Grammar.TerminalSet.empty"
                ]
          ]
    ]
  structure_item (src/lr0.ml[716,24528+0]..src/lr0.ml[727,24889+34])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[716,24528+4]..src/lr0.ml[716,24528+10])
          Tpat_var "invert/1984"
        expression (src/lr0.ml[716,24528+11]..src/lr0.ml[727,24889+34]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[716,24528+11]..src/lr0.ml[716,24528+21])
                Tpat_var "reductions/1986"
              expression (src/lr0.ml[717,24584+2]..src/lr0.ml[727,24889+34])
                extra
                  Texp_constraint
                  core_type (src/lr0.ml[716,24528+24]..src/lr0.ml[716,24528+53])
                    Ttyp_constr "Dune__exe!.Grammar.ProductionMap.t"
                    [
                      core_type (src/lr0.ml[716,24528+24]..src/lr0.ml[716,24528+37])
                        Ttyp_constr "Dune__exe!.Grammar.TerminalSet.t"
                        []
                    ]
                Texp_apply
                expression (src/lr0.ml[717,24584+2]..src/lr0.ml[717,24584+18])
                  Texp_ident "Dune__exe!.Grammar.TerminalMap.fold"
                [
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[717,24584+19]..src/lr0.ml[727,24889+3])
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/lr0.ml[717,24584+24]..src/lr0.ml[717,24584+27])
                            Tpat_var "tok/1987"
                          expression (src/lr0.ml[717,24584+28]..src/lr0.ml[726,24869+19]) ghost
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/lr0.ml[717,24584+28]..src/lr0.ml[717,24584+33])
                                  Tpat_var "prods/1988"
                                expression (src/lr0.ml[717,24584+34]..src/lr0.ml[726,24869+19]) ghost
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/lr0.ml[717,24584+34]..src/lr0.ml[717,24584+41])
                                        Tpat_var "inverse/1989"
                                      expression (src/lr0.ml[718,24629+4]..src/lr0.ml[726,24869+19])
                                        Texp_apply
                                        expression (src/lr0.ml[718,24629+4]..src/lr0.ml[718,24629+18])
                                          Texp_ident "Stdlib!.List.fold_left"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr0.ml[718,24629+19]..src/lr0.ml[726,24869+5])
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/lr0.ml[718,24629+24]..src/lr0.ml[718,24629+31])
                                                    Tpat_var "inverse/1990"
                                                  expression (src/lr0.ml[718,24629+32]..src/lr0.ml[725,24805+63]) ghost
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (src/lr0.ml[718,24629+32]..src/lr0.ml[718,24629+36])
                                                          Tpat_var "prod/1991"
                                                        expression (src/lr0.ml[719,24669+6]..src/lr0.ml[725,24805+63])
                                                          Texp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (src/lr0.ml[719,24669+10]..src/lr0.ml[719,24669+14])
                                                                Tpat_var "toks/1992"
                                                              expression (src/lr0.ml[720,24686+8]..src/lr0.ml[723,24768+27])
                                                                Texp_try
                                                                expression (src/lr0.ml[721,24698+10]..src/lr0.ml[721,24698+43])
                                                                  Texp_apply
                                                                  expression (src/lr0.ml[721,24698+10]..src/lr0.ml[721,24698+30])
                                                                    Texp_ident "Dune__exe!.Grammar.ProductionMap.lookup"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/lr0.ml[721,24698+31]..src/lr0.ml[721,24698+35])
                                                                        Texp_ident "prod/1991"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/lr0.ml[721,24698+36]..src/lr0.ml[721,24698+43])
                                                                        Texp_ident "inverse/1990"
                                                                  ]
                                                                [
                                                                  <case>
                                                                    pattern (src/lr0.ml[722,24742+13]..src/lr0.ml[722,24742+22])
                                                                      Tpat_construct "Not_found"
                                                                      []
                                                                      None
                                                                    expression (src/lr0.ml[723,24768+10]..src/lr0.ml[723,24768+27])
                                                                      Texp_ident "Dune__exe!.Grammar.TerminalSet.empty"
                                                                ]
                                                          ]
                                                          expression (src/lr0.ml[725,24805+6]..src/lr0.ml[725,24805+63])
                                                            Texp_apply
                                                            expression (src/lr0.ml[725,24805+6]..src/lr0.ml[725,24805+23])
                                                              Texp_ident "Dune__exe!.Grammar.ProductionMap.add"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/lr0.ml[725,24805+24]..src/lr0.ml[725,24805+28])
                                                                  Texp_ident "prod/1991"
                                                              <arg>
                                                                Nolabel
                                                                expression (src/lr0.ml[725,24805+29]..src/lr0.ml[725,24805+55])
                                                                  Texp_apply
                                                                  expression (src/lr0.ml[725,24805+30]..src/lr0.ml[725,24805+45])
                                                                    Texp_ident "Dune__exe!.Grammar.TerminalSet.add"
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/lr0.ml[725,24805+46]..src/lr0.ml[725,24805+49])
                                                                        Texp_ident "tok/1987"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/lr0.ml[725,24805+50]..src/lr0.ml[725,24805+54])
                                                                        Texp_ident "toks/1992"
                                                                  ]
                                                              <arg>
                                                                Nolabel
                                                                expression (src/lr0.ml[725,24805+56]..src/lr0.ml[725,24805+63])
                                                                  Texp_ident "inverse/1990"
                                                            ]
                                                    ]
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/lr0.ml[726,24869+6]..src/lr0.ml[726,24869+13])
                                              Texp_ident "inverse/1989"
                                          <arg>
                                            Nolabel
                                            expression (src/lr0.ml[726,24869+14]..src/lr0.ml[726,24869+19])
                                              Texp_ident "prods/1988"
                                        ]
                                  ]
                            ]
                      ]
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[727,24889+4]..src/lr0.ml[727,24889+14])
                      Texp_ident "reductions/1986"
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[727,24889+15]..src/lr0.ml[727,24889+34])
                      Texp_ident "Dune__exe!.Grammar.ProductionMap.empty"
                ]
          ]
    ]
  structure_item (src/lr0.ml[733,25117+0]..src/lr0.ml[745,25728+78])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[733,25117+4]..src/lr0.ml[733,25117+20])
          Tpat_var "has_eos_conflict/1993"
        expression (src/lr0.ml[733,25117+21]..src/lr0.ml[745,25728+78]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[733,25117+21]..src/lr0.ml[733,25117+32])
                Tpat_var "transitions/1995"
              expression (src/lr0.ml[733,25117+33]..src/lr0.ml[745,25728+78]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/lr0.ml[733,25117+33]..src/lr0.ml[733,25117+43])
                      Tpat_var "reductions/1996"
                    expression (src/lr0.ml[734,25163+2]..src/lr0.ml[745,25728+78])
                      Texp_match
                      expression (src/lr0.ml[734,25163+8]..src/lr0.ml[734,25163+63])
                        Texp_apply
                        expression (src/lr0.ml[734,25163+8]..src/lr0.ml[734,25163+37])
                          Texp_ident "Dune__exe!.Grammar.TerminalMap.lookup_and_remove"
                        [
                          <arg>
                            Nolabel
                            expression (src/lr0.ml[734,25163+38]..src/lr0.ml[734,25163+52])
                              Texp_ident "Dune__exe!.Grammar.Terminal.sharp"
                          <arg>
                            Nolabel
                            expression (src/lr0.ml[734,25163+53]..src/lr0.ml[734,25163+63])
                              Texp_ident "reductions/1996"
                        ]
                      [
                        <case>
                          pattern (src/lr0.ml[735,25232+4]..src/lr0.ml[735,25232+23])
                            Tpat_exception
                            pattern (src/lr0.ml[735,25232+14]..src/lr0.ml[735,25232+23])
                              Tpat_construct "Not_found"
                              []
                              None
                          expression (src/lr0.ml[737,25326+6]..src/lr0.ml[737,25326+11])
                            Texp_construct "false"
                            []
                        <case>
                          pattern (src/lr0.ml[738,25338+4]..src/lr0.ml[738,25338+21])
                            Tpat_value
                            pattern (src/lr0.ml[738,25338+4]..src/lr0.ml[738,25338+21])
                              Tpat_tuple
                              [
                                pattern (src/lr0.ml[738,25338+4]..src/lr0.ml[738,25338+9])
                                  Tpat_var "prods/1997"
                                pattern (src/lr0.ml[738,25338+11]..src/lr0.ml[738,25338+21])
                                  Tpat_var "reductions/1998"
                              ]
                          expression (src/lr0.ml[741,25502+6]..src/lr0.ml[745,25728+78])
                            Texp_apply
                            expression (src/lr0.ml[741,25502+28]..src/lr0.ml[741,25502+30])
                              Texp_ident "Stdlib!.||"
                            [
                              <arg>
                                Nolabel
                                expression (src/lr0.ml[741,25502+6]..src/lr0.ml[741,25502+27])
                                  Texp_apply
                                  expression (src/lr0.ml[741,25502+24]..src/lr0.ml[741,25502+25])
                                    Texp_ident "Stdlib!.>"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr0.ml[741,25502+6]..src/lr0.ml[741,25502+23])
                                        Texp_apply
                                        expression (src/lr0.ml[741,25502+6]..src/lr0.ml[741,25502+17])
                                          Texp_ident "Stdlib!.List.length"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr0.ml[741,25502+18]..src/lr0.ml[741,25502+23])
                                              Texp_ident "prods/1997"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/lr0.ml[741,25502+26]..src/lr0.ml[741,25502+27])
                                        Texp_constant Const_int 1
                                  ]
                              <arg>
                                Nolabel
                                expression (src/lr0.ml[744,25681+6]..src/lr0.ml[745,25728+78])
                                  Texp_apply
                                  expression (src/lr0.ml[744,25681+44]..src/lr0.ml[744,25681+46])
                                    Texp_ident "Stdlib!.||"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/lr0.ml[744,25681+6]..src/lr0.ml[744,25681+43])
                                        Texp_apply
                                        expression (src/lr0.ml[744,25681+6]..src/lr0.ml[744,25681+9])
                                          Texp_ident "Stdlib!.not"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr0.ml[744,25681+10]..src/lr0.ml[744,25681+43])
                                              Texp_apply
                                              expression (src/lr0.ml[744,25681+11]..src/lr0.ml[744,25681+31])
                                                Texp_ident "Dune__exe!.Grammar.TerminalMap.is_empty"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/lr0.ml[744,25681+32]..src/lr0.ml[744,25681+42])
                                                    Texp_ident "reductions/1998"
                                              ]
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (src/lr0.ml[745,25728+6]..src/lr0.ml[745,25728+78])
                                        Texp_apply
                                        expression (src/lr0.ml[745,25728+6]..src/lr0.ml[745,25728+22])
                                          Texp_ident "Dune__exe!.Grammar.SymbolMap.exists"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/lr0.ml[745,25728+23]..src/lr0.ml[745,25728+66])
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/lr0.ml[745,25728+28]..src/lr0.ml[745,25728+34])
                                                    Tpat_var "symbol/1999"
                                                  expression (src/lr0.ml[745,25728+35]..src/lr0.ml[745,25728+65]) ghost
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (src/lr0.ml[745,25728+35]..src/lr0.ml[745,25728+36])
                                                          Tpat_any
                                                        expression (src/lr0.ml[745,25728+40]..src/lr0.ml[745,25728+65])
                                                          Texp_apply
                                                          expression (src/lr0.ml[745,25728+40]..src/lr0.ml[745,25728+58])
                                                            Texp_ident "Dune__exe!.Grammar.Symbol.is_terminal"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/lr0.ml[745,25728+59]..src/lr0.ml[745,25728+65])
                                                                Texp_ident "symbol/1999"
                                                          ]
                                                    ]
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (src/lr0.ml[745,25728+67]..src/lr0.ml[745,25728+78])
                                              Texp_ident "transitions/1995"
                                        ]
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/lr0.ml[747,25808+0]..src/lr0.ml[750,25902+28])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/lr0.ml[747,25808+4]..src/lr0.ml[747,25808+29])
          Tpat_var "has_eos_conflict_lr1state/2001"
        expression (src/lr0.ml[747,25808+30]..src/lr0.ml[750,25902+28]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/lr0.ml[747,25808+31]..src/lr0.ml[747,25808+36])
                extra
                  Tpat_extra_constraint
                  core_type (src/lr0.ml[747,25808+39]..src/lr0.ml[747,25808+47])
                    Ttyp_constr "lr1state/1400"
                    []
                Tpat_alias "state/2003"
                pattern (src/lr0.ml[747,25808+31]..src/lr0.ml[747,25808+36])
                  Tpat_any
              expression (src/lr0.ml[748,25859+2]..src/lr0.ml[750,25902+28])
                Texp_apply
                expression (src/lr0.ml[748,25859+2]..src/lr0.ml[748,25859+18])
                  Texp_ident "has_eos_conflict/1993"
                [
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[749,25878+4]..src/lr0.ml[749,25878+23])
                      Texp_apply
                      expression (src/lr0.ml[749,25878+5]..src/lr0.ml[749,25878+16])
                        Texp_ident "transitions/1708"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[749,25878+17]..src/lr0.ml[749,25878+22])
                            Texp_ident "state/2003"
                      ]
                  <arg>
                    Nolabel
                    expression (src/lr0.ml[750,25902+4]..src/lr0.ml[750,25902+28])
                      Texp_apply
                      expression (src/lr0.ml[750,25902+5]..src/lr0.ml[750,25902+21])
                        Texp_ident "reductions_table/1971"
                      [
                        <arg>
                          Nolabel
                          expression (src/lr0.ml[750,25902+22]..src/lr0.ml[750,25902+27])
                            Texp_ident "state/2003"
                      ]
                ]
          ]
    ]
]

{<Dune__exe__Lr0>
 "ImperativeNodeMap"[module] ->
   {<Dune__exe__Lr0.86>
    "add"[value] ->
      CU Dune__exe . "Fix"[module] . "Glue"[module] .
      "ArraysAsImperativeMaps"[module](
      {
       "n"[value] -> <Dune__exe__Lr0.85>;
       })<Dune__exe__Lr0.86>
      . "add"[value];
    "create"[value] ->
      CU Dune__exe . "Fix"[module] . "Glue"[module] .
      "ArraysAsImperativeMaps"[module](
      {
       "n"[value] -> <Dune__exe__Lr0.85>;
       })<Dune__exe__Lr0.86>
      . "create"[value];
    "find"[value] ->
      CU Dune__exe . "Fix"[module] . "Glue"[module] .
      "ArraysAsImperativeMaps"[module](
      {
       "n"[value] -> <Dune__exe__Lr0.85>;
       })<Dune__exe__Lr0.86>
      . "find"[value];
    "key"[type] ->
      CU Dune__exe . "Fix"[module] . "Glue"[module] .
      "ArraysAsImperativeMaps"[module](
      {
       "n"[value] -> <Dune__exe__Lr0.85>;
       })<Dune__exe__Lr0.86>
      . "key"[type];
    "t"[type] ->
      CU Dune__exe . "Fix"[module] . "Glue"[module] .
      "ArraysAsImperativeMaps"[module](
      {
       "n"[value] -> <Dune__exe__Lr0.85>;
       })<Dune__exe__Lr0.86>
      . "t"[type];
    };
 "Lr1StateAsOrderedType"[module] ->
   {<Dune__exe__Lr0.95>
    "compare"[value] -> <Dune__exe__Lr0.89>;
    "t"[type] -> <Dune__exe__Lr0.88>;
    };
 "add_reduction"[value] -> <Dune__exe__Lr0.220>;
 "add_reductions"[value] -> <Dune__exe__Lr0.225>;
 "closure"[value] -> <Dune__exe__Lr0.24>;
 "compatible"[value] -> <Dune__exe__Lr0.173>;
 "concretelr1state"[type] -> <Dune__exe__Lr0.23>;
 "core"[value] -> <Dune__exe__Lr0.115>;
 "entry"[value] -> <Dune__exe__Lr0.65>;
 "eos_compatible"[value] -> <Dune__exe__Lr0.187>;
 "equal"[value] -> <Dune__exe__Lr0.153>;
 "error_compatible"[value] -> <Dune__exe__Lr0.197>;
 "export"[value] -> <Dune__exe__Lr0.96>;
 "has_eos_conflict"[value] -> <Dune__exe__Lr0.247>;
 "has_eos_conflict_lr1state"[value] -> <Dune__exe__Lr0.253>;
 "incoming_edges"[value] -> <Dune__exe__Lr0.83>;
 "incoming_symbol"[value] -> <Dune__exe__Lr0.71>;
 "invert"[value] -> <Dune__exe__Lr0.239>;
 "items"[value] -> <Dune__exe__Lr0.69>;
 "lr1state"[type] -> <Dune__exe__Lr0.87>;
 "n"[value] -> <Dune__exe__Lr0.67>;
 "node"[type] -> <Dune__exe__Lr0.40>;
 "outgoing_edges"[value] -> <Dune__exe__Lr0.73>;
 "outgoing_symbols"[value] -> <Dune__exe__Lr0.76>;
 "print"[value] -> <Dune__exe__Lr0.109>;
 "print_closure"[value] -> <Dune__exe__Lr0.112>;
 "print_concrete"[value] -> <Dune__exe__Lr0.103>;
 "reduction_tokens"[value] -> <Dune__exe__Lr0.234>;
 "reductions"[value] -> <Dune__exe__Lr0.131>;
 "reductions"[type] -> <Dune__exe__Lr0.219>;
 "reductions_table"[value] -> <Dune__exe__Lr0.229>;
 "restrict"[value] -> <Dune__exe__Lr0.214>;
 "start"[value] -> <Dune__exe__Lr0.121>;
 "subsume"[value] -> <Dune__exe__Lr0.163>;
 "transition"[value] -> <Dune__exe__Lr0.141>;
 "transition_tokens"[value] -> <Dune__exe__Lr0.147>;
 "transitions"[value] -> <Dune__exe__Lr0.136>;
 "union"[value] -> <Dune__exe__Lr0.207>;
 }

(seq
  (let
    (*match*/5302 =
       (let
         (M/433 =
            (apply
              (let (let/5300 = (field_imm 0 (global Dune__exe__Middle!)))
                (field_imm 0 (global Dune__exe__Middle!)))
              0))
         0))
    0)
  (let
    (*match*/5305 =
       (let
         (L/436 =
            (apply
              (let
                (let/5303 = (field_imm 0 (global Dune__exe__LoopDetection!)))
                (field_imm 0 (global Dune__exe__LoopDetection!)))
              0))
         0))
    0)
  (let
    (constant/540 =
       (function toks/542
         (makeblock 0 toks/542
           (field_imm 0 (global Dune__exe__SparseBitSet!)))))
    (setfield_ptr(root-init) 50 (global Dune__exe__Lr0!) constant/540))
  (let
    (empty/543 =
       (apply (field_imm 50 (global Dune__exe__Lr0!))
         (field_imm 0 (field_imm 3 (global Dune__exe__Grammar!)))))
    (setfield_ptr(root-init) 51 (global Dune__exe__Lr0!) empty/543))
  (let
    (union/544 =
       (function param/553 s2/550
         (let
           (vars2/549 =a (field_imm 1 s2/550)
            toks2/548 =a (field_imm 0 s2/550)
            vars1/547 =a (field_imm 1 param/553)
            toks1/546 =a (field_imm 0 param/553)
            toks/551 =
              (apply (field_imm 9 (field_imm 3 (global Dune__exe__Grammar!)))
                toks1/546 toks2/548)
            vars/552 =
              (apply (field_imm 9 (global Dune__exe__SparseBitSet!))
                vars1/547 vars2/549))
           (if (&& (== toks2/548 toks/551) (== vars2/549 vars/552)) s2/550
             (makeblock 0 toks/551 vars/552)))))
    (setfield_ptr(root-init) 52 (global Dune__exe__Lr0!) union/544))
  (let
    (variable/554 =
       (function var/556[int]
         (makeblock 0
           (field_imm 0 (field_imm 3 (global Dune__exe__Grammar!)))
           (apply (field_imm 2 (global Dune__exe__SparseBitSet!)) var/556))))
    (setfield_ptr(root-init) 53 (global Dune__exe__Lr0!) variable/554))
  (let
    (project/557 =
       (function (param/5306, param/5307)
         (let (vars/560 =a param/5307 toks/559 =a param/5306)
           (seq
             (if
               (apply (field_imm 1 (global Dune__exe__SparseBitSet!))
                 vars/560)
               0
               (raise
                 (makeblock 0 (global Assert_failure/28!)
                   [0: "src/lr0.ml" 67 4])))
             toks/559))))
    (setfield_ptr(root-init) 54 (global Dune__exe__Lr0!) project/557))
  0
  (let
    (SymbolicLookahead/562 =
       (makeblock 0 (field_imm 50 (global Dune__exe__Lr0!))
         (field_imm 51 (global Dune__exe__Lr0!))
         (field_imm 52 (global Dune__exe__Lr0!))
         (field_imm 53 (global Dune__exe__Lr0!))
         (field_imm 54 (global Dune__exe__Lr0!))))
    (seq
      (setfield_ptr(root-init) 34 (global Dune__exe__Lr0!)
        SymbolicLookahead/562)
      (let
        (SymbolicClosure/601 =
           (apply
             (let (let/5308 = (field_imm 10 (global Dune__exe__Item!)))
               (field_imm 10 (global Dune__exe__Item!)))
             (makeblock 0
               (field_mut 1 (field_imm 34 (global Dune__exe__Lr0!)))
               (field_mut 0 (field_imm 34 (global Dune__exe__Lr0!)))
               (field_mut 2 (field_imm 34 (global Dune__exe__Lr0!))))))
        (seq
          (setfield_ptr(root-init) 35 (global Dune__exe__Lr0!)
            SymbolicClosure/601)
          (let
            (closure/669 =
               (function state/671
                 (apply
                   (field_imm 23 (field_imm 9 (global Dune__exe__Item!)))
                   (field_imm 4 (field_imm 34 (global Dune__exe__Lr0!)))
                   (apply
                     (field_imm 0 (field_imm 35 (global Dune__exe__Lr0!)))
                     (apply
                       (field_imm 23 (field_imm 9 (global Dune__exe__Item!)))
                       (field_imm 0 (field_imm 34 (global Dune__exe__Lr0!)))
                       state/671)))))
            (setfield_ptr(root-init) 10 (global Dune__exe__Lr0!) closure/669))
          (let
            (transitions/672 =
               (function state/674
                 (apply
                   (field_imm 19 (field_imm 9 (global Dune__exe__Item!)))
                   (function item/771 toks/772 transitions/773
                     (let
                       (*match*/5312 =
                          (apply (field_imm 7 (global Dune__exe__Item!))
                            item/771))
                       (switch* *match*/5312
                        case tag 0:
                         (let
                           (item'/775 =a (field_imm 1 *match*/5312)
                            symbol/774 =a (field_imm 0 *match*/5312)
                            items/776 =
                              (try
                                (apply
                                  (field_imm 16
                                    (field_imm 7
                                      (global Dune__exe__Grammar!)))
                                  symbol/774 transitions/773)
                               with exn/5309
                                (catch
                                  (if
                                    (== exn/5309
                                      (field_imm 7 (global Stdlib!)))
                                    (field_imm 0
                                      (field_imm 9 (global Dune__exe__Item!)))
                                    (exit 7))
                                 with (7) (reraise exn/5309))))
                           (apply
                             (field_imm 1
                               (field_imm 7 (global Dune__exe__Grammar!)))
                             symbol/774
                             (apply
                               (field_imm 3
                                 (field_imm 9 (global Dune__exe__Item!)))
                               item'/775 toks/772 items/776)
                             transitions/773))
                        case tag 1:
                         (let (*match*/5313 =a (field_imm 0 *match*/5312))
                           transitions/773))))
                   state/674
                   (field_imm 0 (field_imm 7 (global Dune__exe__Grammar!))))))
            (setfield_ptr(root-init) 36 (global Dune__exe__Lr0!)
              transitions/672))
          (let
            (reductions/867 =
               (function state/869
                 (apply
                   (field_imm 19 (field_imm 9 (global Dune__exe__Item!)))
                   (function item/870 toks/871 accu/872
                     (let
                       (*match*/5314 =
                          (apply (field_imm 7 (global Dune__exe__Item!))
                            item/870))
                       (switch* *match*/5314
                        case tag 0:
                         (let
                           (*match*/5316 =a (field_imm 1 *match*/5314)
                            *match*/5315 =a (field_imm 0 *match*/5314))
                           accu/872)
                        case tag 1:
                         (let (prod/873 =a (field_imm 0 *match*/5314))
                           (makeblock 0 (makeblock 0 toks/871 prod/873)
                             accu/872)))))
                   state/869 0)))
            (setfield_ptr(root-init) 37 (global Dune__exe__Lr0!)
              reductions/867))
          (let (n/876 = (makemutable 0 (int) 0))
            (setfield_ptr(root-init) 38 (global Dune__exe__Lr0!) n/876))
          (let
            (states/903 =
               (apply (field_imm 0 (field_imm 8 (global MenhirLib!)))
                 (field_imm 0 (field_imm 8 (global Dune__exe__Item!)))))
            (setfield_ptr(root-init) 39 (global Dune__exe__Lr0!) states/903))
          (let
            (_transitions/910 =
               (apply (field_imm 0 (field_imm 8 (global MenhirLib!)))
                 (field_imm 0 (field_imm 7 (global Dune__exe__Grammar!)))))
            (setfield_ptr(root-init) 40 (global Dune__exe__Lr0!)
              _transitions/910))
          (let
            (_reductions/911 =
               (apply (field_imm 0 (field_imm 8 (global MenhirLib!))) 0))
            (setfield_ptr(root-init) 41 (global Dune__exe__Lr0!)
              _reductions/911))
          (let
            (map/951 =
               (apply (field_imm 0 (global Stdlib__Hashtbl!)) 0 50021))
            (setfield_ptr(root-init) 42 (global Dune__exe__Lr0!) map/951))
          (let
            (incoming/993 =
               (apply (field_imm 0 (field_imm 8 (global MenhirLib!))) 0))
            (setfield_ptr(root-init) 43 (global Dune__exe__Lr0!)
              incoming/993))
          (letrec
            (explore/994
               (function symbol/995 state/996 : int
                 (try
                   (apply (field_imm 5 (global Stdlib__Hashtbl!))
                     (field_imm 42 (global Dune__exe__Lr0!)) state/996)
                  with exn/5322
                   (catch
                     (if (== exn/5322 (field_imm 7 (global Stdlib!)))
                       (let
                         (k/1017 =[int]
                            (field_int 0
                              (field_imm 38 (global Dune__exe__Lr0!))))
                         (seq
                           (setfield_imm 0
                             (field_imm 38 (global Dune__exe__Lr0!))
                             (+ k/1017 1))
                           (apply
                             (field_imm 2 (field_imm 8 (global MenhirLib!)))
                             (field_imm 39 (global Dune__exe__Lr0!)) k/1017
                             state/996)
                           (apply (field_imm 4 (global Stdlib__Hashtbl!))
                             (field_imm 42 (global Dune__exe__Lr0!))
                             state/996 k/1017)
                           (apply
                             (field_imm 2 (field_imm 8 (global MenhirLib!)))
                             (field_imm 43 (global Dune__exe__Lr0!)) k/1017
                             symbol/995)
                           (let
                             (*match*/5328 =
                                (apply
                                  (field_imm 13
                                    (field_imm 8 (global Dune__exe__Item!)))
                                  (function item/1019 param/1022
                                    (let
                                      (symbolic_state/1021 =a
                                         (field_imm 1 param/1022)
                                       i/1020 =a (field_imm 0 param/1022))
                                      (makeblock 0 (int,*) (+ i/1020 1)
                                        (apply
                                          (field_imm 3
                                            (field_imm 9
                                              (global Dune__exe__Item!)))
                                          item/1019
                                          (apply
                                            (field_imm 3
                                              (field_imm 34
                                                (global Dune__exe__Lr0!)))
                                            i/1020)
                                          symbolic_state/1021))))
                                  state/996
                                  (makeblock 0 (int,*) 0
                                    (field_imm 0
                                      (field_imm 9 (global Dune__exe__Item!)))))
                              symbolic_state/1018 =a
                                (field_imm 1 *match*/5328)
                              *match*/5329 =a (field_imm 0 *match*/5328)
                              closure/1023 =
                                (apply
                                  (field_imm 0
                                    (field_imm 35 (global Dune__exe__Lr0!)))
                                  symbolic_state/1018))
                             (seq
                               (apply
                                 (field_imm 2
                                   (field_imm 8 (global MenhirLib!)))
                                 (field_imm 41 (global Dune__exe__Lr0!))
                                 k/1017
                                 (apply
                                   (field_imm 37 (global Dune__exe__Lr0!))
                                   closure/1023))
                               (apply
                                 (field_imm 2
                                   (field_imm 8 (global MenhirLib!)))
                                 (field_imm 40 (global Dune__exe__Lr0!))
                                 k/1017
                                 (apply
                                   (field_imm 25
                                     (field_imm 7
                                       (global Dune__exe__Grammar!)))
                                   (function symbol/1024 symbolic_state/1025
                                     (let
                                       (k/1026 =
                                          (apply explore/994
                                            (makeblock 0 symbol/1024)
                                            (apply
                                              (field_imm 27
                                                (field_imm 9
                                                  (global Dune__exe__Item!)))
                                              symbolic_state/1025))
                                        lookahead/1047 =
                                          (caml_make_vect
                                            (apply
                                              (field_imm 11
                                                (field_imm 9
                                                  (global Dune__exe__Item!)))
                                              symbolic_state/1025)
                                            (field_imm 1
                                              (field_imm 34
                                                (global Dune__exe__Lr0!)))))
                                       (seq
                                         (apply
                                           (field_imm 19
                                             (field_imm 9
                                               (global Dune__exe__Item!)))
                                           (function param/1098 s/1096
                                             i/1097[int] : int
                                             (seq
                                               (array.set[addr]
                                                 lookahead/1047 i/1097
                                                 s/1096)
                                               (+ i/1097 1)))
                                           symbolic_state/1025 0)
                                         (makeblock 0 (int,*) k/1026
                                           lookahead/1047))))
                                   (apply
                                     (field_imm 36 (global Dune__exe__Lr0!))
                                     closure/1023)))
                               k/1017))))
                       (exit 36))
                    with (36) (reraise exn/5322)))))
            (setfield_ptr(root-init) 44 (global Dune__exe__Lr0!) explore/994))
          (let
            (start/1099 =
               (function prod/1101
                 (apply (field_imm 2 (field_imm 8 (global Dune__exe__Item!)))
                   (apply (field_imm 0 (global Dune__exe__Item!))
                     (makeblock 0 (*,int) prod/1101 0)))))
            (setfield_ptr(root-init) 45 (global Dune__exe__Lr0!) start/1099))
          (let
            (entry/1136 =
               (apply
                 (field_imm 30 (field_imm 9 (global Dune__exe__Grammar!)))
                 (function prod/1171 : int
                   (apply (field_imm 44 (global Dune__exe__Lr0!)) 0
                     (apply (field_imm 45 (global Dune__exe__Lr0!))
                       prod/1171)))))
            (setfield_ptr(root-init) 1 (global Dune__exe__Lr0!) entry/1136))
          (let
            (*match*/5332 =
               (apply (field_imm 1 (global Stdlib__Hashtbl!))
                 (field_imm 42 (global Dune__exe__Lr0!))))
            0)
          (let
            (n/1172 =[int]
               (field_int 0 (field_imm 38 (global Dune__exe__Lr0!))))
            (setfield_ptr(root-init) 0 (global Dune__exe__Lr0!) n/1172))
          (let
            (*match*/5334 =
               (seq
                 (apply (field_imm 3 (global Dune__exe__Error!)) 1
                   (function f/1188 : int
                     (apply (field_imm 0 (global Stdlib__Printf!)) f/1188
                       [0:
                        [11:
                         "Built an LR(0) automaton with "
                         [4: 0 0 0 [11: " states.\n" 0]]]
                        "Built an LR(0) automaton with %d states.\n"]
                       (field_imm 0 (global Dune__exe__Lr0!)))))
                 (apply (field_imm 0 (global Dune__exe__Time!))
                   "Construction of the LR(0) automaton")))
            0)
          (let
            (items/1230 =
               (function node/1232[int]
                 (apply (field_imm 1 (field_imm 8 (global MenhirLib!)))
                   (field_imm 39 (global Dune__exe__Lr0!)) node/1232)))
            (setfield_ptr(root-init) 2 (global Dune__exe__Lr0!) items/1230))
          (let
            (incoming_symbol/1233 =
               (function node/1235[int]
                 (apply (field_imm 1 (field_imm 8 (global MenhirLib!)))
                   (field_imm 43 (global Dune__exe__Lr0!)) node/1235)))
            (setfield_ptr(root-init) 3 (global Dune__exe__Lr0!)
              incoming_symbol/1233))
          (let
            (outgoing_edges/1236 =
               (function node/1238[int]
                 (apply
                   (field_imm 24 (field_imm 7 (global Dune__exe__Grammar!)))
                   (function (param/5335[int], param/5336) : int
                     (let (target/1239 =a param/5335) target/1239))
                   (apply (field_imm 1 (field_imm 8 (global MenhirLib!)))
                     (field_imm 40 (global Dune__exe__Lr0!)) node/1238))))
            (setfield_ptr(root-init) 5 (global Dune__exe__Lr0!)
              outgoing_edges/1236))
          (let
            (outgoing_symbols/1241 =
               (function node/1243[int]
                 (apply
                   (field_imm 43 (field_imm 7 (global Dune__exe__Grammar!)))
                   (apply (field_imm 1 (field_imm 8 (global MenhirLib!)))
                     (field_imm 40 (global Dune__exe__Lr0!)) node/1243))))
            (setfield_ptr(root-init) 6 (global Dune__exe__Lr0!)
              outgoing_symbols/1241))
          (let
            (predecessors/1253 =
               (makemutable 246
                 (function param/5338
                   (let
                     (predecessors/1258 =
                        (caml_make_vect
                          (field_imm 0 (global Dune__exe__Lr0!)) 0))
                     (seq
                       (for source/1259 0 to
                         (- (field_imm 0 (global Dune__exe__Lr0!)) 1)
                         (apply
                           (field_imm 22
                             (field_imm 7 (global Dune__exe__Grammar!)))
                           (function _symbol/1260 param/1262 : int
                             (let
                               (*match*/5337 =a (field_imm 1 param/1262)
                                target/1261 =a (field_imm 0 param/1262))
                               (array.set[addr] predecessors/1258 target/1261
                                 (makeblock 0 (int,*) source/1259
                                   (array.get[addr] predecessors/1258
                                     target/1261)))))
                           (apply
                             (field_imm 1 (field_imm 8 (global MenhirLib!)))
                             (field_imm 40 (global Dune__exe__Lr0!))
                             source/1259)))
                       predecessors/1258)))))
            (setfield_ptr(root-init) 46 (global Dune__exe__Lr0!)
              predecessors/1253))
          (let
            (incoming_edges/1263 =
               (function c/1265[int]
                 (array.get[addr]
                   (let
                     (lzarg/5340 = (field_imm 46 (global Dune__exe__Lr0!)))
                     (if (isint lzarg/5340) lzarg/5340
                       (switch (caml_obj_tag lzarg/5340)
                        case int 250: (field_mut 0 lzarg/5340)
                        case int 246:
                         (apply (field_imm 1 (global CamlinternalLazy!))
                           (opaque lzarg/5340))
                        case int 244:
                         (apply (field_imm 1 (global CamlinternalLazy!))
                           (opaque lzarg/5340))
                        default: lzarg/5340)))
                   c/1265)))
            (setfield_ptr(root-init) 4 (global Dune__exe__Lr0!)
              incoming_edges/1263))
          (let
            (ImperativeNodeMap/1399 =
               (apply
                 (let
                   (let/5341 = (field_imm 10 (global Vendored_fix__Glue!)))
                   (field_imm 10 (global Vendored_fix__Glue!)))
                 (let (n/1266 =[int] (field_imm 0 (global Dune__exe__Lr0!)))
                   (makeblock 0 n/1266))))
            (seq
              (setfield_ptr(root-init) 7 (global Dune__exe__Lr0!)
                (makeblock 0 (field_mut 0 ImperativeNodeMap/1399)
                  (field_mut 1 ImperativeNodeMap/1399)
                  (field_mut 2 ImperativeNodeMap/1399)))
              (let
                (compare/1402 =
                   (function param/1410 param/1409 : int
                     (let
                       (toksr2/1406 =a (field_imm 1 param/1409)
                        k2/1405 =a (field_imm 0 param/1409)
                        toksr1/1404 =a (field_imm 1 param/1410)
                        k1/1403 =a (field_imm 0 param/1410)
                        c/1407 =[int] (- k1/1403 k2/1405))
                       (if (!= c/1407 0) c/1407
                         (apply (field_imm 0 (global Dune__exe__Generic!))
                           toksr1/1404 toksr2/1406)))))
                (setfield_ptr(root-init) 55 (global Dune__exe__Lr0!)
                  compare/1402))
              0
              (let
                (Lr1StateAsOrderedType/1411 =
                   (makeblock 0 (field_imm 55 (global Dune__exe__Lr0!))))
                (seq
                  (setfield_ptr(root-init) 8 (global Dune__exe__Lr0!)
                    Lr1StateAsOrderedType/1411)
                  (let
                    (export/1412 =
                       (function (param/5342[int], param/5343)
                         (let
                           (toksr/1415 =a param/5343
                            k/1414 =a param/5342
                            *match*/5347 =
                              (apply
                                (field_imm 13
                                  (field_imm 8 (global Dune__exe__Item!)))
                                (function item/1417 param/1420
                                  (let
                                    (items/1419 =a (field_imm 1 param/1420)
                                     i/1418 =a (field_imm 0 param/1420))
                                    (makeblock 0 (int,*) (+ i/1418 1)
                                      (apply
                                        (field_imm 3
                                          (field_imm 9
                                            (global Dune__exe__Item!)))
                                        item/1417
                                        (array.get[gen] toksr/1415 i/1418)
                                        items/1419))))
                                (apply
                                  (field_imm 1
                                    (field_imm 8 (global MenhirLib!)))
                                  (field_imm 39 (global Dune__exe__Lr0!))
                                  k/1414)
                                (makeblock 0 (int,*) 0
                                  (field_imm 0
                                    (field_imm 9 (global Dune__exe__Item!)))))
                            items/1416 =a (field_imm 1 *match*/5347)
                            *match*/5348 =a (field_imm 0 *match*/5347))
                           items/1416)))
                    (setfield_ptr(root-init) 9 (global Dune__exe__Lr0!)
                      export/1412))
                  (let
                    (print_concrete/1422 =
                       (function leading/1424 state/1425
                         (apply (field_imm 4 (global Dune__exe__Misc!)) 1024
                           (function buffer/1462 : int
                             (apply
                               (field_imm 18
                                 (field_imm 9 (global Dune__exe__Item!)))
                               (function item/1463 toks/1464 : int
                                 (apply
                                   (field_imm 4 (global Stdlib__Printf!))
                                   buffer/1462
                                   [0:
                                    [2:
                                     0
                                     [2: 0 [11: " [ " [2: 0 [11: " ]\n" 0]]]]]
                                    "%s%s [ %s ]\n"]
                                   leading/1424
                                   (apply
                                     (field_imm 6 (global Dune__exe__Item!))
                                     item/1463)
                                   (apply
                                     (field_imm 18
                                       (field_imm 3
                                         (global Dune__exe__Grammar!)))
                                     toks/1464)))
                               state/1425)))))
                    (setfield_ptr(root-init) 24 (global Dune__exe__Lr0!)
                      print_concrete/1422))
                  (let
                    (print/1547 =
                       (function leading/1549 state/1550
                         (apply (field_imm 24 (global Dune__exe__Lr0!))
                           leading/1549
                           (apply (field_imm 9 (global Dune__exe__Lr0!))
                             state/1550))))
                    (setfield_ptr(root-init) 25 (global Dune__exe__Lr0!)
                      print/1547))
                  (let
                    (print_closure/1551 =
                       (function leading/1553 state/1554
                         (apply (field_imm 24 (global Dune__exe__Lr0!))
                           leading/1553
                           (apply (field_imm 10 (global Dune__exe__Lr0!))
                             (apply (field_imm 9 (global Dune__exe__Lr0!))
                               state/1554)))))
                    (setfield_ptr(root-init) 26 (global Dune__exe__Lr0!)
                      print_closure/1551))
                  (let
                    (core/1555 =
                       (function (param/5349, param/5350)
                         (let (k/1557 =a param/5349) k/1557)))
                    (setfield_ptr(root-init) 11 (global Dune__exe__Lr0!)
                      core/1555))
                  (let (debug/1559 =[int] 0)
                    (setfield_ptr(root-init) 47 (global Dune__exe__Lr0!)
                      debug/1559))
                  (let
                    (well_formed/1560 =
                       (function (param/5351[int], param/5352) : int
                         (let (toksr/1563 =a param/5352 k/1562 =a param/5351)
                           (|| (not (field_imm 47 (global Dune__exe__Lr0!)))
                             (== (array.length[gen] toksr/1563)
                               (apply
                                 (field_imm 4
                                   (field_imm 8 (global Dune__exe__Item!)))
                                 (apply
                                   (field_imm 1
                                     (field_imm 8 (global MenhirLib!)))
                                   (field_imm 39 (global Dune__exe__Lr0!))
                                   k/1562)))))))
                    (setfield_ptr(root-init) 48 (global Dune__exe__Lr0!)
                      well_formed/1560))
                  (let
                    (start/1565 =
                       (function k/1566[int]
                         (let
                           (state/1567 =
                              (makeblock 0 (int,*) k/1566
                                (makearray[gen]
                                  (apply
                                    (field_imm 2
                                      (field_imm 3
                                        (global Dune__exe__Grammar!)))
                                    (field_imm 9
                                      (field_imm 2
                                        (global Dune__exe__Grammar!)))))))
                           (seq
                             (if
                               (apply (field_imm 48 (global Dune__exe__Lr0!))
                                 state/1567)
                               0
                               (raise
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "src/lr0.ml" 366 2])))
                             state/1567))))
                    (setfield_ptr(root-init) 12 (global Dune__exe__Lr0!)
                      start/1565))
                  (let
                    (interpret/1627 =
                       (function state/1630 param/1635
                         (let
                           (vars/1632 =a (field_imm 1 param/1635)
                            toks/1631 =a (field_imm 0 param/1635)
                            toksr/1629 =a (field_imm 1 state/1630)
                            *match*/5353 =a (field_imm 0 state/1630))
                           (seq
                             (if
                               (apply (field_imm 48 (global Dune__exe__Lr0!))
                                 state/1630)
                               0
                               (raise
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "src/lr0.ml" 379 2])))
                             (apply
                               (field_imm 13
                                 (global Dune__exe__SparseBitSet!))
                               (function var/1633[int] toks/1634
                                 (seq
                                   (if
                                     (&& (>= var/1633 0)
                                       (< var/1633
                                         (array.length[gen] toksr/1629)))
                                     0
                                     (raise
                                       (makeblock 0
                                         (global Assert_failure/28!)
                                         [0: "src/lr0.ml" 381 4])))
                                   (apply
                                     (field_imm 9
                                       (field_imm 3
                                         (global Dune__exe__Grammar!)))
                                     (array.get[gen] toksr/1629 var/1633)
                                     toks/1634)))
                               vars/1632 toks/1631)))))
                    (setfield_ptr(root-init) 49 (global Dune__exe__Lr0!)
                      interpret/1627))
                  (let
                    (reductions/1636 =
                       (function state/1638
                         (let
                           (*match*/5356 =a (field_imm 1 state/1638)
                            k/1637 =a (field_imm 0 state/1638))
                           (apply (field_imm 19 (global Stdlib__List!))
                             (function (param/5354, param/5355)
                               (let
                                 (prod/1706 =a param/5355
                                  s/1705 =a param/5354)
                                 (makeblock 0
                                   (apply
                                     (field_imm 49 (global Dune__exe__Lr0!))
                                     state/1638 s/1705)
                                   prod/1706)))
                             (apply
                               (field_imm 1
                                 (field_imm 8 (global MenhirLib!)))
                               (field_imm 41 (global Dune__exe__Lr0!))
                               k/1637)))))
                    (setfield_ptr(root-init) 16 (global Dune__exe__Lr0!)
                      reductions/1636))
                  (let
                    (transitions/1708 =
                       (function state/1710
                         (let
                           (*match*/5359 =a (field_imm 1 state/1710)
                            k/1709 =a (field_imm 0 state/1710))
                           (apply
                             (field_imm 24
                               (field_imm 7 (global Dune__exe__Grammar!)))
                             (function (param/5357[int], param/5358)
                               (let
                                 (sr/1712 =a param/5358 k/1711 =a param/5357)
                                 (makeblock 0 (int,*) k/1711
                                   (apply
                                     (field_imm 12 (global Stdlib__Array!))
                                     (apply
                                       (field_imm 49
                                         (global Dune__exe__Lr0!))
                                       state/1710)
                                     sr/1712))))
                             (apply
                               (field_imm 1
                                 (field_imm 8 (global MenhirLib!)))
                               (field_imm 40 (global Dune__exe__Lr0!))
                               k/1709)))))
                    (setfield_ptr(root-init) 13 (global Dune__exe__Lr0!)
                      transitions/1708))
                  (let
                    (transition/1714 =
                       (function symbol/1716 state/1718
                         (let
                           (*match*/5365 =a (field_imm 1 state/1718)
                            k/1717 =a (field_imm 0 state/1718)
                            *match*/5364 =
                              (try
                                (apply
                                  (field_imm 16
                                    (field_imm 7
                                      (global Dune__exe__Grammar!)))
                                  symbol/1716
                                  (apply
                                    (field_imm 1
                                      (field_imm 8 (global MenhirLib!)))
                                    (field_imm 40 (global Dune__exe__Lr0!))
                                    k/1717))
                               with exn/5360
                                (catch
                                  (if
                                    (== exn/5360
                                      (field_imm 7 (global Stdlib!)))
                                    (raise
                                      (makeblock 0
                                        (global Assert_failure/28!)
                                        [0: "src/lr0.ml" 414 6]))
                                    (exit 52))
                                 with (52) (reraise exn/5360)))
                            sr/1720 =a (field_imm 1 *match*/5364)
                            k/1719 =a (field_imm 0 *match*/5364))
                           (makeblock 0 (int,*) k/1719
                             (apply (field_imm 12 (global Stdlib__Array!))
                               (apply (field_imm 49 (global Dune__exe__Lr0!))
                                 state/1718)
                               sr/1720)))))
                    (setfield_ptr(root-init) 14 (global Dune__exe__Lr0!)
                      transition/1714))
                  (let
                    (transition_tokens/1721 =
                       (function transitions/1723
                         (apply
                           (field_imm 23
                             (field_imm 7 (global Dune__exe__Grammar!)))
                           (function symbol/1724 _target/1725 toks/1726
                             (switch* symbol/1724
                              case tag 0:
                               (let
                                 (*match*/5366 =a (field_imm 0 symbol/1724))
                                 toks/1726)
                              case tag 1:
                               (let (tok/1727 =a (field_imm 0 symbol/1724))
                                 (apply
                                   (field_imm 7
                                     (field_imm 3
                                       (global Dune__exe__Grammar!)))
                                   tok/1727 toks/1726))))
                           transitions/1723
                           (field_imm 0
                             (field_imm 3 (global Dune__exe__Grammar!))))))
                    (setfield_ptr(root-init) 15 (global Dune__exe__Lr0!)
                      transition_tokens/1721))
                  (let
                    (equal/1748 =
                       (function state1/1752 state2/1755 : int
                         (let
                           (toksr2/1754 =a (field_imm 1 state2/1755)
                            k2/1753 =a (field_imm 0 state2/1755)
                            toksr1/1751 =a (field_imm 1 state1/1752)
                            k1/1750 =a (field_imm 0 state1/1752))
                           (seq
                             (if
                               (&& (== k1/1750 k2/1753)
                                 (&&
                                   (apply
                                     (field_imm 48 (global Dune__exe__Lr0!))
                                     state1/1752)
                                   (apply
                                     (field_imm 48 (global Dune__exe__Lr0!))
                                     state2/1755)))
                               0
                               (raise
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "src/lr0.ml" 431 2])))
                             (letrec
                               (loop/1756
                                  (function i/1757[int] : int
                                    (if (== i/1757 0) 1
                                      (let (i/1758 =[int] (- i/1757 1))
                                        (&&
                                          (apply
                                            (field_imm 16
                                              (field_imm 3
                                                (global Dune__exe__Grammar!)))
                                            (array.get[gen] toksr1/1751
                                              i/1758)
                                            (array.get[gen] toksr2/1754
                                              i/1758))
                                          (apply loop/1756 i/1758))))))
                               (apply loop/1756
                                 (array.length[gen] toksr1/1751)))))))
                    (setfield_ptr(root-init) 17 (global Dune__exe__Lr0!)
                      equal/1748))
                  (let
                    (subsume/1759 =
                       (function state1/1763 state2/1766 : int
                         (let
                           (toksr2/1765 =a (field_imm 1 state2/1766)
                            k2/1764 =a (field_imm 0 state2/1766)
                            toksr1/1762 =a (field_imm 1 state1/1763)
                            k1/1761 =a (field_imm 0 state1/1763))
                           (seq
                             (if
                               (&& (== k1/1761 k2/1764)
                                 (&&
                                   (apply
                                     (field_imm 48 (global Dune__exe__Lr0!))
                                     state1/1763)
                                   (apply
                                     (field_imm 48 (global Dune__exe__Lr0!))
                                     state2/1766)))
                               0
                               (raise
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "src/lr0.ml" 444 2])))
                             (letrec
                               (loop/1767
                                  (function i/1768[int] : int
                                    (if (== i/1768 0) 1
                                      (let (i/1769 =[int] (- i/1768 1))
                                        (&&
                                          (apply
                                            (field_imm 17
                                              (field_imm 3
                                                (global Dune__exe__Grammar!)))
                                            (array.get[gen] toksr1/1762
                                              i/1769)
                                            (array.get[gen] toksr2/1765
                                              i/1769))
                                          (apply loop/1767 i/1769))))))
                               (apply loop/1767
                                 (array.length[gen] toksr1/1762)))))))
                    (setfield_ptr(root-init) 18 (global Dune__exe__Lr0!)
                      subsume/1759))
                  (let
                    (compatible/1770 =
                       (function param/1786 param/1785 : int
                         (let
                           (toksr2/1775 =a (field_imm 1 param/1785)
                            k2/1774 =a (field_imm 0 param/1785)
                            toksr1/1773 =a (field_imm 1 param/1786)
                            k1/1772 =a (field_imm 0 param/1786))
                           (seq
                             (if (caml_equal k1/1772 k2/1774) 0
                               (raise
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "src/lr0.ml" 514 2])))
                             (let
                               (n/1776 =[int] (array.length[gen] toksr1/1773))
                               (letrec
                                 (loopi/1777
                                    (function i/1778[int] : int
                                      (if (== i/1778 n/1776) 1
                                        (let
                                          (toksr1i/1779 =
                                             (array.get[gen] toksr1/1773
                                               i/1778)
                                           toksr2i/1780 =
                                             (array.get[gen] toksr2/1775
                                               i/1778))
                                          (letrec
                                            (loopj/1781
                                               (function j/1782[int] : int
                                                 (if (== j/1782 i/1778) 1
                                                   (let
                                                     (toksr1j/1783 =
                                                        (array.get[gen]
                                                          toksr1/1773 j/1782)
                                                      toksr2j/1784 =
                                                        (array.get[gen]
                                                          toksr2/1775 j/1782))
                                                     (&&
                                                       (apply
                                                         (field_imm 17
                                                           (field_imm 3
                                                             (global Dune__exe__Grammar!)))
                                                         (apply
                                                           (field_imm 10
                                                             (field_imm 3
                                                               (global Dune__exe__Grammar!)))
                                                           toksr2i/1780
                                                           toksr1j/1783)
                                                         (apply
                                                           (field_imm 9
                                                             (field_imm 3
                                                               (global Dune__exe__Grammar!)))
                                                           toksr1i/1779
                                                           toksr2j/1784))
                                                       (&&
                                                         (apply
                                                           (field_imm 17
                                                             (field_imm 3
                                                               (global Dune__exe__Grammar!)))
                                                           (apply
                                                             (field_imm 10
                                                               (field_imm 3
                                                                 (global Dune__exe__Grammar!)))
                                                             toksr1i/1779
                                                             toksr2j/1784)
                                                           (apply
                                                             (field_imm 9
                                                               (field_imm 3
                                                                 (global Dune__exe__Grammar!)))
                                                             toksr2i/1780
                                                             toksr1j/1783))
                                                         (apply loopj/1781
                                                           (+ j/1782 1))))))))
                                            (&& (apply loopj/1781 0)
                                              (apply loopi/1777 (+ i/1778 1))))))))
                                 (apply loopi/1777 0)))))))
                    (setfield_ptr(root-init) 19 (global Dune__exe__Lr0!)
                      compatible/1770))
                  (let
                    (eos_compatible/1787 =
                       (function param/1799 param/1798 : int
                         (let
                           (toksr2/1792 =a (field_imm 1 param/1798)
                            k2/1791 =a (field_imm 0 param/1798)
                            toksr1/1790 =a (field_imm 1 param/1799)
                            k1/1789 =a (field_imm 0 param/1799))
                           (seq
                             (if (caml_equal k1/1789 k2/1791) 0
                               (raise
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "src/lr0.ml" 581 2])))
                             (let
                               (n/1793 =[int] (array.length[gen] toksr1/1790))
                               (letrec
                                 (loop/1794
                                    (function i/1795[int] : int
                                      (if (== i/1795 n/1793) 1
                                        (let
                                          (toks1/1796 =
                                             (array.get[gen] toksr1/1790
                                               i/1795)
                                           toks2/1797 =
                                             (array.get[gen] toksr2/1792
                                               i/1795))
                                          (&&
                                            (if
                                              (&&
                                                (apply
                                                  (field_imm 6
                                                    (field_imm 3
                                                      (global Dune__exe__Grammar!)))
                                                  (field_imm 9
                                                    (field_imm 2
                                                      (global Dune__exe__Grammar!)))
                                                  toks1/1796)
                                                (apply
                                                  (field_imm 3
                                                    (field_imm 3
                                                      (global Dune__exe__Grammar!)))
                                                  toks1/1796))
                                              (apply
                                                (field_imm 6
                                                  (field_imm 3
                                                    (global Dune__exe__Grammar!)))
                                                (field_imm 9
                                                  (field_imm 2
                                                    (global Dune__exe__Grammar!)))
                                                toks2/1797)
                                              (if
                                                (&&
                                                  (apply
                                                    (field_imm 6
                                                      (field_imm 3
                                                        (global Dune__exe__Grammar!)))
                                                    (field_imm 9
                                                      (field_imm 2
                                                        (global Dune__exe__Grammar!)))
                                                    toks2/1797)
                                                  (apply
                                                    (field_imm 3
                                                      (field_imm 3
                                                        (global Dune__exe__Grammar!)))
                                                    toks2/1797))
                                                (apply
                                                  (field_imm 6
                                                    (field_imm 3
                                                      (global Dune__exe__Grammar!)))
                                                  (field_imm 9
                                                    (field_imm 2
                                                      (global Dune__exe__Grammar!)))
                                                  toks1/1796)
                                                1))
                                            (apply loop/1794 (+ i/1795 1)))))))
                                 (apply loop/1794 0)))))))
                    (setfield_ptr(root-init) 20 (global Dune__exe__Lr0!)
                      eos_compatible/1787))
                  (let
                    (error_compatible/1800 =
                       (function param/1812 param/1811 : int
                         (let
                           (toksr2/1805 =a (field_imm 1 param/1811)
                            k2/1804 =a (field_imm 0 param/1811)
                            toksr1/1803 =a (field_imm 1 param/1812)
                            k1/1802 =a (field_imm 0 param/1812))
                           (seq
                             (if (caml_equal k1/1802 k2/1804) 0
                               (raise
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "src/lr0.ml" 632 2])))
                             (let
                               (n/1806 =[int] (array.length[gen] toksr1/1803))
                               (letrec
                                 (loop/1807
                                    (function i/1808[int] : int
                                      (if (== i/1808 n/1806) 1
                                        (let
                                          (toks1/1809 =
                                             (array.get[gen] toksr1/1803
                                               i/1808)
                                           toks2/1810 =
                                             (array.get[gen] toksr2/1805
                                               i/1808))
                                          (&&
                                            (if
                                              (apply
                                                (field_imm 6
                                                  (field_imm 3
                                                    (global Dune__exe__Grammar!)))
                                                (field_imm 10
                                                  (field_imm 2
                                                    (global Dune__exe__Grammar!)))
                                                toks1/1809)
                                              (apply
                                                (field_imm 6
                                                  (field_imm 3
                                                    (global Dune__exe__Grammar!)))
                                                (field_imm 10
                                                  (field_imm 2
                                                    (global Dune__exe__Grammar!)))
                                                toks2/1810)
                                              (if
                                                (apply
                                                  (field_imm 6
                                                    (field_imm 3
                                                      (global Dune__exe__Grammar!)))
                                                  (field_imm 10
                                                    (field_imm 2
                                                      (global Dune__exe__Grammar!)))
                                                  toks2/1810)
                                                (apply
                                                  (field_imm 6
                                                    (field_imm 3
                                                      (global Dune__exe__Grammar!)))
                                                  (field_imm 10
                                                    (field_imm 2
                                                      (global Dune__exe__Grammar!)))
                                                  toks1/1809)
                                                1))
                                            (apply loop/1807 (+ i/1808 1)))))))
                                 (apply loop/1807 0)))))))
                    (setfield_ptr(root-init) 21 (global Dune__exe__Lr0!)
                      error_compatible/1800))
                  (let
                    (union/1813 =
                       (function param/1885 s2/1819
                         (let
                           (toksr2/1818 =a (field_imm 1 s2/1819)
                            k2/1817 =a (field_imm 0 s2/1819)
                            toksr1/1816 =a (field_imm 1 param/1885)
                            k1/1815 =a (field_imm 0 param/1885))
                           (seq
                             (if (caml_equal k1/1815 k2/1817) 0
                               (raise
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "src/lr0.ml" 658 2])))
                             (let
                               (toksr/1820 =
                                  (apply
                                    (field_imm 54
                                      (global Dune__exe__MArray!))
                                    (field_imm 9
                                      (field_imm 3
                                        (global Dune__exe__Grammar!)))
                                    toksr1/1816 toksr2/1818))
                               (if (== toksr2/1818 toksr/1820) s2/1819
                                 (makeblock 0 k1/1815 toksr/1820)))))))
                    (setfield_ptr(root-init) 22 (global Dune__exe__Lr0!)
                      union/1813))
                  (let
                    (restrict/1886 =
                       (function toks/1888 param/1892
                         (let
                           (toksr/1890 =a (field_imm 1 param/1892)
                            k/1889 =a (field_imm 0 param/1892))
                           (makeblock 0 k/1889
                             (apply (field_imm 12 (global Stdlib__Array!))
                               (function toksri/1891
                                 (apply
                                   (field_imm 10
                                     (field_imm 3
                                       (global Dune__exe__Grammar!)))
                                   toksri/1891 toks/1888))
                               toksr/1890)))))
                    (setfield_ptr(root-init) 23 (global Dune__exe__Lr0!)
                      restrict/1886))
                  (let
                    (add_reduction/1960 =
                       (function prod/1962 tok/1963 reductions/1964
                         (let
                           (prods/1965 =
                              (try
                                (apply
                                  (field_imm 1
                                    (field_imm 4
                                      (global Dune__exe__Grammar!)))
                                  tok/1963 reductions/1964)
                               with exn/5367
                                (catch
                                  (if
                                    (== exn/5367
                                      (field_imm 7 (global Stdlib!)))
                                    0 (exit 56))
                                 with (56) (reraise exn/5367))))
                           (apply
                             (field_imm 3
                               (field_imm 4 (global Dune__exe__Grammar!)))
                             tok/1963 (makeblock 0 prod/1962 prods/1965)
                             reductions/1964))))
                    (setfield_ptr(root-init) 27 (global Dune__exe__Lr0!)
                      add_reduction/1960))
                  (let
                    (add_reductions/1966 =
                       (function prod/1968 toks/1969 reductions/1970
                         (apply
                           (field_imm 13
                             (field_imm 3 (global Dune__exe__Grammar!)))
                           (apply (field_imm 27 (global Dune__exe__Lr0!))
                             prod/1968)
                           toks/1969 reductions/1970)))
                    (setfield_ptr(root-init) 28 (global Dune__exe__Lr0!)
                      add_reductions/1966))
                  (let
                    (reductions_table/1971 =
                       (function state/1973
                         (apply (field_imm 25 (global Stdlib__List!))
                           (function reductions/1974 param/1977
                             (let
                               (prod/1976 =a (field_imm 1 param/1977)
                                toks/1975 =a (field_imm 0 param/1977))
                               (apply (field_imm 28 (global Dune__exe__Lr0!))
                                 prod/1976 toks/1975 reductions/1974)))
                           (field_imm 0
                             (field_imm 4 (global Dune__exe__Grammar!)))
                           (apply (field_imm 16 (global Dune__exe__Lr0!))
                             state/1973))))
                    (setfield_ptr(root-init) 29 (global Dune__exe__Lr0!)
                      reductions_table/1971))
                  (let
                    (reduction_tokens/1978 =
                       (function reductions/1980
                         (apply
                           (field_imm 19
                             (field_imm 4 (global Dune__exe__Grammar!)))
                           (function tok/1981 _prods/1982 toks/1983
                             (apply
                               (field_imm 7
                                 (field_imm 3 (global Dune__exe__Grammar!)))
                               tok/1981 toks/1983))
                           reductions/1980
                           (field_imm 0
                             (field_imm 3 (global Dune__exe__Grammar!))))))
                    (setfield_ptr(root-init) 31 (global Dune__exe__Lr0!)
                      reduction_tokens/1978))
                  (let
                    (invert/1984 =
                       (function reductions/1986
                         (apply
                           (field_imm 19
                             (field_imm 4 (global Dune__exe__Grammar!)))
                           (function tok/1987 prods/1988 inverse/1989
                             (apply (field_imm 25 (global Stdlib__List!))
                               (function inverse/1990 prod/1991
                                 (let
                                   (toks/1992 =
                                      (try
                                        (apply
                                          (field_imm 1
                                            (field_imm 9
                                              (global Dune__exe__Grammar!)))
                                          prod/1991 inverse/1990)
                                       with exn/5368
                                        (catch
                                          (if
                                            (== exn/5368
                                              (field_imm 7 (global Stdlib!)))
                                            (field_imm 0
                                              (field_imm 3
                                                (global Dune__exe__Grammar!)))
                                            (exit 57))
                                         with (57) (reraise exn/5368))))
                                   (apply
                                     (field_imm 3
                                       (field_imm 9
                                         (global Dune__exe__Grammar!)))
                                     prod/1991
                                     (apply
                                       (field_imm 7
                                         (field_imm 3
                                           (global Dune__exe__Grammar!)))
                                       tok/1987 toks/1992)
                                     inverse/1990)))
                               inverse/1989 prods/1988))
                           reductions/1986
                           (field_imm 0
                             (field_imm 9 (global Dune__exe__Grammar!))))))
                    (setfield_ptr(root-init) 30 (global Dune__exe__Lr0!)
                      invert/1984))
                  (let
                    (has_eos_conflict/1993 =
                       (function transitions/1995 reductions/1996 : int
                         (catch
                           (try
                             (exit 58
                               (apply
                                 (field_imm 13
                                   (field_imm 4 (global Dune__exe__Grammar!)))
                                 (field_imm 9
                                   (field_imm 2 (global Dune__exe__Grammar!)))
                                 reductions/1996))
                            with exn/5370
                             (catch
                               (if
                                 (== exn/5370 (field_imm 7 (global Stdlib!)))
                                 0 (exit 59))
                              with (59) (reraise exn/5370)))
                          with (58 val/5369)
                           (let
                             (reductions/1998 =a (field_imm 1 val/5369)
                              prods/1997 =a (field_imm 0 val/5369))
                             (||
                               (>
                                 (apply (field_imm 0 (global Stdlib__List!))
                                   prods/1997)
                                 1)
                               (||
                                 (not
                                   (apply
                                     (field_imm 9
                                       (field_imm 4
                                         (global Dune__exe__Grammar!)))
                                     reductions/1998))
                                 (apply
                                   (field_imm 35
                                     (field_imm 7
                                       (global Dune__exe__Grammar!)))
                                   (function symbol/1999 param/2000 : int
                                     (apply
                                       (field_imm 0
                                         (field_imm 5
                                           (global Dune__exe__Grammar!)))
                                       symbol/1999))
                                   transitions/1995)))))))
                    (setfield_ptr(root-init) 32 (global Dune__exe__Lr0!)
                      has_eos_conflict/1993))
                  (let
                    (has_eos_conflict_lr1state/2001 =
                       (function state/2003 : int
                         (apply (field_imm 32 (global Dune__exe__Lr0!))
                           (apply (field_imm 13 (global Dune__exe__Lr0!))
                             state/2003)
                           (apply (field_imm 29 (global Dune__exe__Lr0!))
                             state/2003))))
                    (setfield_ptr(root-init) 33 (global Dune__exe__Lr0!)
                      has_eos_conflict_lr1state/2001))
                  0)))))))))
(seq
  (let
    (*match*/5302 =
       (let
         (M/433 =
            (apply
              (let (let/5300 = (field_imm 0 (global Dune__exe__Middle!)))
                (field_imm 0 (global Dune__exe__Middle!)))
              0))
         0))
    0)
  (let
    (*match*/5305 =
       (let
         (L/436 =
            (apply
              (let
                (let/5303 = (field_imm 0 (global Dune__exe__LoopDetection!)))
                (field_imm 0 (global Dune__exe__LoopDetection!)))
              0))
         0))
    0)
  (let
    (constant/540 =
       (function toks/542
         (makeblock 0 toks/542
           (field_imm 0 (global Dune__exe__SparseBitSet!)))))
    (setfield_ptr(root-init) 50 (global Dune__exe__Lr0!) constant/540))
  (let
    (empty/543 =
       (apply (field_imm 50 (global Dune__exe__Lr0!))
         (field_imm 0 (field_imm 3 (global Dune__exe__Grammar!)))))
    (setfield_ptr(root-init) 51 (global Dune__exe__Lr0!) empty/543))
  (let
    (union/544 =
       (function param/553 s2/550
         (let
           (vars2/549 =a (field_imm 1 s2/550)
            toks2/548 =a (field_imm 0 s2/550)
            toks/551 =
              (apply (field_imm 9 (field_imm 3 (global Dune__exe__Grammar!)))
                (field_imm 0 param/553) toks2/548)
            vars/552 =
              (apply (field_imm 9 (global Dune__exe__SparseBitSet!))
                (field_imm 1 param/553) vars2/549))
           (if (&& (== toks2/548 toks/551) (== vars2/549 vars/552)) s2/550
             (makeblock 0 toks/551 vars/552)))))
    (setfield_ptr(root-init) 52 (global Dune__exe__Lr0!) union/544))
  (let
    (variable/554 =
       (function var/556[int]
         (makeblock 0
           (field_imm 0 (field_imm 3 (global Dune__exe__Grammar!)))
           (apply (field_imm 2 (global Dune__exe__SparseBitSet!)) var/556))))
    (setfield_ptr(root-init) 53 (global Dune__exe__Lr0!) variable/554))
  (let
    (project/557 =
       (function (param/5306, param/5307)
         (seq
           (if
             (apply (field_imm 1 (global Dune__exe__SparseBitSet!))
               param/5307)
             0
             (raise
               (makeblock 0 (global Assert_failure/28!)
                 [0: "src/lr0.ml" 67 4])))
           param/5306)))
    (setfield_ptr(root-init) 54 (global Dune__exe__Lr0!) project/557))
  0
  (let
    (SymbolicLookahead/562 =
       (makeblock 0 (field_imm 50 (global Dune__exe__Lr0!))
         (field_imm 51 (global Dune__exe__Lr0!))
         (field_imm 52 (global Dune__exe__Lr0!))
         (field_imm 53 (global Dune__exe__Lr0!))
         (field_imm 54 (global Dune__exe__Lr0!))))
    (seq
      (setfield_ptr(root-init) 34 (global Dune__exe__Lr0!)
        SymbolicLookahead/562)
      (let
        (SymbolicClosure/601 =
           (apply
             (let (let/5308 = (field_imm 10 (global Dune__exe__Item!)))
               (field_imm 10 (global Dune__exe__Item!)))
             (makeblock 0
               (field_mut 1 (field_imm 34 (global Dune__exe__Lr0!)))
               (field_mut 0 (field_imm 34 (global Dune__exe__Lr0!)))
               (field_mut 2 (field_imm 34 (global Dune__exe__Lr0!))))))
        (seq
          (setfield_ptr(root-init) 35 (global Dune__exe__Lr0!)
            SymbolicClosure/601)
          (let
            (closure/669 =
               (function state/671
                 (apply
                   (field_imm 23 (field_imm 9 (global Dune__exe__Item!)))
                   (field_imm 4 (field_imm 34 (global Dune__exe__Lr0!)))
                   (apply
                     (field_imm 0 (field_imm 35 (global Dune__exe__Lr0!)))
                     (apply
                       (field_imm 23 (field_imm 9 (global Dune__exe__Item!)))
                       (field_imm 0 (field_imm 34 (global Dune__exe__Lr0!)))
                       state/671)))))
            (setfield_ptr(root-init) 10 (global Dune__exe__Lr0!) closure/669))
          (let
            (transitions/672 =
               (function state/674
                 (apply
                   (field_imm 19 (field_imm 9 (global Dune__exe__Item!)))
                   (function item/771 toks/772 transitions/773
                     (let
                       (*match*/5312 =
                          (apply (field_imm 7 (global Dune__exe__Item!))
                            item/771))
                       (switch* *match*/5312
                        case tag 0:
                         (let
                           (symbol/774 =a (field_imm 0 *match*/5312)
                            items/776 =
                              (try
                                (apply
                                  (field_imm 16
                                    (field_imm 7
                                      (global Dune__exe__Grammar!)))
                                  symbol/774 transitions/773)
                               with exn/5309
                                (if
                                  (== exn/5309
                                    (field_imm 7 (global Stdlib!)))
                                  (field_imm 0
                                    (field_imm 9 (global Dune__exe__Item!)))
                                  (reraise exn/5309))))
                           (apply
                             (field_imm 1
                               (field_imm 7 (global Dune__exe__Grammar!)))
                             symbol/774
                             (apply
                               (field_imm 3
                                 (field_imm 9 (global Dune__exe__Item!)))
                               (field_imm 1 *match*/5312) toks/772 items/776)
                             transitions/773))
                        case tag 1: transitions/773)))
                   state/674
                   (field_imm 0 (field_imm 7 (global Dune__exe__Grammar!))))))
            (setfield_ptr(root-init) 36 (global Dune__exe__Lr0!)
              transitions/672))
          (let
            (reductions/867 =
               (function state/869
                 (apply
                   (field_imm 19 (field_imm 9 (global Dune__exe__Item!)))
                   (function item/870 toks/871 accu/872
                     (let
                       (*match*/5314 =
                          (apply (field_imm 7 (global Dune__exe__Item!))
                            item/870))
                       (switch* *match*/5314
                        case tag 0: accu/872
                        case tag 1:
                         (makeblock 0
                           (makeblock 0 toks/871 (field_imm 0 *match*/5314))
                           accu/872))))
                   state/869 0)))
            (setfield_ptr(root-init) 37 (global Dune__exe__Lr0!)
              reductions/867))
          (let (n/876 = (makemutable 0 (int) 0))
            (setfield_ptr(root-init) 38 (global Dune__exe__Lr0!) n/876))
          (let
            (states/903 =
               (apply (field_imm 0 (field_imm 8 (global MenhirLib!)))
                 (field_imm 0 (field_imm 8 (global Dune__exe__Item!)))))
            (setfield_ptr(root-init) 39 (global Dune__exe__Lr0!) states/903))
          (let
            (_transitions/910 =
               (apply (field_imm 0 (field_imm 8 (global MenhirLib!)))
                 (field_imm 0 (field_imm 7 (global Dune__exe__Grammar!)))))
            (setfield_ptr(root-init) 40 (global Dune__exe__Lr0!)
              _transitions/910))
          (let
            (_reductions/911 =
               (apply (field_imm 0 (field_imm 8 (global MenhirLib!))) 0))
            (setfield_ptr(root-init) 41 (global Dune__exe__Lr0!)
              _reductions/911))
          (let
            (map/951 =
               (apply (field_imm 0 (global Stdlib__Hashtbl!)) 0 50021))
            (setfield_ptr(root-init) 42 (global Dune__exe__Lr0!) map/951))
          (let
            (incoming/993 =
               (apply (field_imm 0 (field_imm 8 (global MenhirLib!))) 0))
            (setfield_ptr(root-init) 43 (global Dune__exe__Lr0!)
              incoming/993))
          (letrec
            (explore/994
               (function symbol/995 state/996 : int
                 (try
                   (apply (field_imm 5 (global Stdlib__Hashtbl!))
                     (field_imm 42 (global Dune__exe__Lr0!)) state/996)
                  with exn/5322
                   (if (== exn/5322 (field_imm 7 (global Stdlib!)))
                     (let
                       (k/1017 =[int]
                          (field_int 0
                            (field_imm 38 (global Dune__exe__Lr0!))))
                       (seq
                         (setfield_imm 0
                           (field_imm 38 (global Dune__exe__Lr0!))
                           (+ k/1017 1))
                         (apply
                           (field_imm 2 (field_imm 8 (global MenhirLib!)))
                           (field_imm 39 (global Dune__exe__Lr0!)) k/1017
                           state/996)
                         (apply (field_imm 4 (global Stdlib__Hashtbl!))
                           (field_imm 42 (global Dune__exe__Lr0!)) state/996
                           k/1017)
                         (apply
                           (field_imm 2 (field_imm 8 (global MenhirLib!)))
                           (field_imm 43 (global Dune__exe__Lr0!)) k/1017
                           symbol/995)
                         (let
                           (*match*/5328 =
                              (apply
                                (field_imm 13
                                  (field_imm 8 (global Dune__exe__Item!)))
                                (function item/1019 param/1022
                                  (let (i/1020 =a (field_imm 0 param/1022))
                                    (makeblock 0 (int,*) (+ i/1020 1)
                                      (apply
                                        (field_imm 3
                                          (field_imm 9
                                            (global Dune__exe__Item!)))
                                        item/1019
                                        (apply
                                          (field_imm 3
                                            (field_imm 34
                                              (global Dune__exe__Lr0!)))
                                          i/1020)
                                        (field_imm 1 param/1022)))))
                                state/996
                                (makeblock 0 (int,*) 0
                                  (field_imm 0
                                    (field_imm 9 (global Dune__exe__Item!)))))
                            closure/1023 =
                              (apply
                                (field_imm 0
                                  (field_imm 35 (global Dune__exe__Lr0!)))
                                (field_imm 1 *match*/5328)))
                           (seq
                             (apply
                               (field_imm 2
                                 (field_imm 8 (global MenhirLib!)))
                               (field_imm 41 (global Dune__exe__Lr0!)) k/1017
                               (apply (field_imm 37 (global Dune__exe__Lr0!))
                                 closure/1023))
                             (apply
                               (field_imm 2
                                 (field_imm 8 (global MenhirLib!)))
                               (field_imm 40 (global Dune__exe__Lr0!)) k/1017
                               (apply
                                 (field_imm 25
                                   (field_imm 7 (global Dune__exe__Grammar!)))
                                 (function symbol/1024 symbolic_state/1025
                                   (let
                                     (k/1026 =
                                        (apply explore/994
                                          (makeblock 0 symbol/1024)
                                          (apply
                                            (field_imm 27
                                              (field_imm 9
                                                (global Dune__exe__Item!)))
                                            symbolic_state/1025))
                                      lookahead/1047 =
                                        (caml_make_vect
                                          (apply
                                            (field_imm 11
                                              (field_imm 9
                                                (global Dune__exe__Item!)))
                                            symbolic_state/1025)
                                          (field_imm 1
                                            (field_imm 34
                                              (global Dune__exe__Lr0!)))))
                                     (seq
                                       (apply
                                         (field_imm 19
                                           (field_imm 9
                                             (global Dune__exe__Item!)))
                                         (function param/1098 s/1096
                                           i/1097[int] : int
                                           (seq
                                             (array.set[addr] lookahead/1047
                                               i/1097 s/1096)
                                             (+ i/1097 1)))
                                         symbolic_state/1025 0)
                                       (makeblock 0 (int,*) k/1026
                                         lookahead/1047))))
                                 (apply
                                   (field_imm 36 (global Dune__exe__Lr0!))
                                   closure/1023)))
                             k/1017))))
                     (reraise exn/5322)))))
            (setfield_ptr(root-init) 44 (global Dune__exe__Lr0!) explore/994))
          (let
            (start/1099 =
               (function prod/1101
                 (apply (field_imm 2 (field_imm 8 (global Dune__exe__Item!)))
                   (apply (field_imm 0 (global Dune__exe__Item!))
                     (makeblock 0 (*,int) prod/1101 0)))))
            (setfield_ptr(root-init) 45 (global Dune__exe__Lr0!) start/1099))
          (let
            (entry/1136 =
               (apply
                 (field_imm 30 (field_imm 9 (global Dune__exe__Grammar!)))
                 (function prod/1171 : int
                   (apply (field_imm 44 (global Dune__exe__Lr0!)) 0
                     (apply (field_imm 45 (global Dune__exe__Lr0!))
                       prod/1171)))))
            (setfield_ptr(root-init) 1 (global Dune__exe__Lr0!) entry/1136))
          (let
            (*match*/5332 =
               (apply (field_imm 1 (global Stdlib__Hashtbl!))
                 (field_imm 42 (global Dune__exe__Lr0!))))
            0)
          (let
            (n/1172 =[int]
               (field_int 0 (field_imm 38 (global Dune__exe__Lr0!))))
            (setfield_ptr(root-init) 0 (global Dune__exe__Lr0!) n/1172))
          (let
            (*match*/5334 =
               (seq
                 (apply (field_imm 3 (global Dune__exe__Error!)) 1
                   (function f/1188 : int
                     (apply (field_imm 0 (global Stdlib__Printf!)) f/1188
                       [0:
                        [11:
                         "Built an LR(0) automaton with "
                         [4: 0 0 0 [11: " states.\n" 0]]]
                        "Built an LR(0) automaton with %d states.\n"]
                       (field_imm 0 (global Dune__exe__Lr0!)))))
                 (apply (field_imm 0 (global Dune__exe__Time!))
                   "Construction of the LR(0) automaton")))
            0)
          (let
            (items/1230 =
               (function node/1232[int]
                 (apply (field_imm 1 (field_imm 8 (global MenhirLib!)))
                   (field_imm 39 (global Dune__exe__Lr0!)) node/1232)))
            (setfield_ptr(root-init) 2 (global Dune__exe__Lr0!) items/1230))
          (let
            (incoming_symbol/1233 =
               (function node/1235[int]
                 (apply (field_imm 1 (field_imm 8 (global MenhirLib!)))
                   (field_imm 43 (global Dune__exe__Lr0!)) node/1235)))
            (setfield_ptr(root-init) 3 (global Dune__exe__Lr0!)
              incoming_symbol/1233))
          (let
            (outgoing_edges/1236 =
               (function node/1238[int]
                 (apply
                   (field_imm 24 (field_imm 7 (global Dune__exe__Grammar!)))
                   (function (param/5335[int], param/5336) : int param/5335)
                   (apply (field_imm 1 (field_imm 8 (global MenhirLib!)))
                     (field_imm 40 (global Dune__exe__Lr0!)) node/1238))))
            (setfield_ptr(root-init) 5 (global Dune__exe__Lr0!)
              outgoing_edges/1236))
          (let
            (outgoing_symbols/1241 =
               (function node/1243[int]
                 (apply
                   (field_imm 43 (field_imm 7 (global Dune__exe__Grammar!)))
                   (apply (field_imm 1 (field_imm 8 (global MenhirLib!)))
                     (field_imm 40 (global Dune__exe__Lr0!)) node/1243))))
            (setfield_ptr(root-init) 6 (global Dune__exe__Lr0!)
              outgoing_symbols/1241))
          (let
            (predecessors/1253 =
               (makemutable 246
                 (function param/5338
                   (let
                     (predecessors/1258 =
                        (caml_make_vect
                          (field_imm 0 (global Dune__exe__Lr0!)) 0))
                     (seq
                       (for source/1259 0 to
                         (- (field_imm 0 (global Dune__exe__Lr0!)) 1)
                         (apply
                           (field_imm 22
                             (field_imm 7 (global Dune__exe__Grammar!)))
                           (function _symbol/1260 param/1262 : int
                             (let (target/1261 =a (field_imm 0 param/1262))
                               (array.set[addr] predecessors/1258 target/1261
                                 (makeblock 0 (int,*) source/1259
                                   (array.get[addr] predecessors/1258
                                     target/1261)))))
                           (apply
                             (field_imm 1 (field_imm 8 (global MenhirLib!)))
                             (field_imm 40 (global Dune__exe__Lr0!))
                             source/1259)))
                       predecessors/1258)))))
            (setfield_ptr(root-init) 46 (global Dune__exe__Lr0!)
              predecessors/1253))
          (let
            (incoming_edges/1263 =
               (function c/1265[int]
                 (array.get[addr]
                   (let
                     (lzarg/5340 = (field_imm 46 (global Dune__exe__Lr0!)))
                     (if (isint lzarg/5340) lzarg/5340
                       (switch (caml_obj_tag lzarg/5340)
                        case int 250: (field_mut 0 lzarg/5340)
                        case int 246:
                         (apply (field_imm 1 (global CamlinternalLazy!))
                           (opaque lzarg/5340))
                        case int 244:
                         (apply (field_imm 1 (global CamlinternalLazy!))
                           (opaque lzarg/5340))
                        default: lzarg/5340)))
                   c/1265)))
            (setfield_ptr(root-init) 4 (global Dune__exe__Lr0!)
              incoming_edges/1263))
          (let
            (ImperativeNodeMap/1399 =
               (apply
                 (let
                   (let/5341 = (field_imm 10 (global Vendored_fix__Glue!)))
                   (field_imm 10 (global Vendored_fix__Glue!)))
                 (let (n/1266 =[int] (field_imm 0 (global Dune__exe__Lr0!)))
                   (makeblock 0 n/1266))))
            (seq
              (setfield_ptr(root-init) 7 (global Dune__exe__Lr0!)
                (makeblock 0 (field_mut 0 ImperativeNodeMap/1399)
                  (field_mut 1 ImperativeNodeMap/1399)
                  (field_mut 2 ImperativeNodeMap/1399)))
              (let
                (compare/1402 =
                   (function param/1410 param/1409 : int
                     (let
                       (c/1407 =[int]
                          (- (field_imm 0 param/1410)
                            (field_imm 0 param/1409)))
                       (if (!= c/1407 0) c/1407
                         (apply (field_imm 0 (global Dune__exe__Generic!))
                           (field_imm 1 param/1410) (field_imm 1 param/1409))))))
                (setfield_ptr(root-init) 55 (global Dune__exe__Lr0!)
                  compare/1402))
              0
              (let
                (Lr1StateAsOrderedType/1411 =
                   (makeblock 0 (field_imm 55 (global Dune__exe__Lr0!))))
                (seq
                  (setfield_ptr(root-init) 8 (global Dune__exe__Lr0!)
                    Lr1StateAsOrderedType/1411)
                  (let
                    (export/1412 =
                       (function (param/5342[int], param/5343)
                         (let
                           (*match*/5347 =
                              (apply
                                (field_imm 13
                                  (field_imm 8 (global Dune__exe__Item!)))
                                (function item/1417 param/1420
                                  (let (i/1418 =a (field_imm 0 param/1420))
                                    (makeblock 0 (int,*) (+ i/1418 1)
                                      (apply
                                        (field_imm 3
                                          (field_imm 9
                                            (global Dune__exe__Item!)))
                                        item/1417
                                        (array.get[gen] param/5343 i/1418)
                                        (field_imm 1 param/1420)))))
                                (apply
                                  (field_imm 1
                                    (field_imm 8 (global MenhirLib!)))
                                  (field_imm 39 (global Dune__exe__Lr0!))
                                  param/5342)
                                (makeblock 0 (int,*) 0
                                  (field_imm 0
                                    (field_imm 9 (global Dune__exe__Item!))))))
                           (field_imm 1 *match*/5347))))
                    (setfield_ptr(root-init) 9 (global Dune__exe__Lr0!)
                      export/1412))
                  (let
                    (print_concrete/1422 =
                       (function leading/1424 state/1425
                         (apply (field_imm 4 (global Dune__exe__Misc!)) 1024
                           (function buffer/1462 : int
                             (apply
                               (field_imm 18
                                 (field_imm 9 (global Dune__exe__Item!)))
                               (function item/1463 toks/1464 : int
                                 (apply
                                   (field_imm 4 (global Stdlib__Printf!))
                                   buffer/1462
                                   [0:
                                    [2:
                                     0
                                     [2: 0 [11: " [ " [2: 0 [11: " ]\n" 0]]]]]
                                    "%s%s [ %s ]\n"]
                                   leading/1424
                                   (apply
                                     (field_imm 6 (global Dune__exe__Item!))
                                     item/1463)
                                   (apply
                                     (field_imm 18
                                       (field_imm 3
                                         (global Dune__exe__Grammar!)))
                                     toks/1464)))
                               state/1425)))))
                    (setfield_ptr(root-init) 24 (global Dune__exe__Lr0!)
                      print_concrete/1422))
                  (let
                    (print/1547 =
                       (function leading/1549 state/1550
                         (apply (field_imm 24 (global Dune__exe__Lr0!))
                           leading/1549
                           (apply (field_imm 9 (global Dune__exe__Lr0!))
                             state/1550))))
                    (setfield_ptr(root-init) 25 (global Dune__exe__Lr0!)
                      print/1547))
                  (let
                    (print_closure/1551 =
                       (function leading/1553 state/1554
                         (apply (field_imm 24 (global Dune__exe__Lr0!))
                           leading/1553
                           (apply (field_imm 10 (global Dune__exe__Lr0!))
                             (apply (field_imm 9 (global Dune__exe__Lr0!))
                               state/1554)))))
                    (setfield_ptr(root-init) 26 (global Dune__exe__Lr0!)
                      print_closure/1551))
                  (let
                    (core/1555 =
                       (function (param/5349, param/5350) param/5349))
                    (setfield_ptr(root-init) 11 (global Dune__exe__Lr0!)
                      core/1555))
                  (let (debug/1559 =[int] 0)
                    (setfield_ptr(root-init) 47 (global Dune__exe__Lr0!)
                      debug/1559))
                  (let
                    (well_formed/1560 =
                       (function (param/5351[int], param/5352) : int
                         (|| (not (field_imm 47 (global Dune__exe__Lr0!)))
                           (== (array.length[gen] param/5352)
                             (apply
                               (field_imm 4
                                 (field_imm 8 (global Dune__exe__Item!)))
                               (apply
                                 (field_imm 1
                                   (field_imm 8 (global MenhirLib!)))
                                 (field_imm 39 (global Dune__exe__Lr0!))
                                 param/5351))))))
                    (setfield_ptr(root-init) 48 (global Dune__exe__Lr0!)
                      well_formed/1560))
                  (let
                    (start/1565 =
                       (function k/1566[int]
                         (let
                           (state/1567 =
                              (makeblock 0 (int,*) k/1566
                                (makearray[gen]
                                  (apply
                                    (field_imm 2
                                      (field_imm 3
                                        (global Dune__exe__Grammar!)))
                                    (field_imm 9
                                      (field_imm 2
                                        (global Dune__exe__Grammar!)))))))
                           (seq
                             (if
                               (apply (field_imm 48 (global Dune__exe__Lr0!))
                                 state/1567)
                               0
                               (raise
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "src/lr0.ml" 366 2])))
                             state/1567))))
                    (setfield_ptr(root-init) 12 (global Dune__exe__Lr0!)
                      start/1565))
                  (let
                    (interpret/1627 =
                       (function state/1630 param/1635
                         (let (toksr/1629 =a (field_imm 1 state/1630))
                           (seq
                             (if
                               (apply (field_imm 48 (global Dune__exe__Lr0!))
                                 state/1630)
                               0
                               (raise
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "src/lr0.ml" 379 2])))
                             (apply
                               (field_imm 13
                                 (global Dune__exe__SparseBitSet!))
                               (function var/1633[int] toks/1634
                                 (seq
                                   (if
                                     (&& (>= var/1633 0)
                                       (< var/1633
                                         (array.length[gen] toksr/1629)))
                                     0
                                     (raise
                                       (makeblock 0
                                         (global Assert_failure/28!)
                                         [0: "src/lr0.ml" 381 4])))
                                   (apply
                                     (field_imm 9
                                       (field_imm 3
                                         (global Dune__exe__Grammar!)))
                                     (array.get[gen] toksr/1629 var/1633)
                                     toks/1634)))
                               (field_imm 1 param/1635)
                               (field_imm 0 param/1635))))))
                    (setfield_ptr(root-init) 49 (global Dune__exe__Lr0!)
                      interpret/1627))
                  (let
                    (reductions/1636 =
                       (function state/1638
                         (apply (field_imm 19 (global Stdlib__List!))
                           (function (param/5354, param/5355)
                             (makeblock 0
                               (apply (field_imm 49 (global Dune__exe__Lr0!))
                                 state/1638 param/5354)
                               param/5355))
                           (apply
                             (field_imm 1 (field_imm 8 (global MenhirLib!)))
                             (field_imm 41 (global Dune__exe__Lr0!))
                             (field_imm 0 state/1638)))))
                    (setfield_ptr(root-init) 16 (global Dune__exe__Lr0!)
                      reductions/1636))
                  (let
                    (transitions/1708 =
                       (function state/1710
                         (apply
                           (field_imm 24
                             (field_imm 7 (global Dune__exe__Grammar!)))
                           (function (param/5357[int], param/5358)
                             (makeblock 0 (int,*) param/5357
                               (apply (field_imm 12 (global Stdlib__Array!))
                                 (apply
                                   (field_imm 49 (global Dune__exe__Lr0!))
                                   state/1710)
                                 param/5358)))
                           (apply
                             (field_imm 1 (field_imm 8 (global MenhirLib!)))
                             (field_imm 40 (global Dune__exe__Lr0!))
                             (field_imm 0 state/1710)))))
                    (setfield_ptr(root-init) 13 (global Dune__exe__Lr0!)
                      transitions/1708))
                  (let
                    (transition/1714 =
                       (function symbol/1716 state/1718
                         (let
                           (*match*/5364 =
                              (try
                                (apply
                                  (field_imm 16
                                    (field_imm 7
                                      (global Dune__exe__Grammar!)))
                                  symbol/1716
                                  (apply
                                    (field_imm 1
                                      (field_imm 8 (global MenhirLib!)))
                                    (field_imm 40 (global Dune__exe__Lr0!))
                                    (field_imm 0 state/1718)))
                               with exn/5360
                                (if
                                  (== exn/5360
                                    (field_imm 7 (global Stdlib!)))
                                  (raise
                                    (makeblock 0 (global Assert_failure/28!)
                                      [0: "src/lr0.ml" 414 6]))
                                  (reraise exn/5360))))
                           (makeblock 0 (int,*) (field_imm 0 *match*/5364)
                             (apply (field_imm 12 (global Stdlib__Array!))
                               (apply (field_imm 49 (global Dune__exe__Lr0!))
                                 state/1718)
                               (field_imm 1 *match*/5364))))))
                    (setfield_ptr(root-init) 14 (global Dune__exe__Lr0!)
                      transition/1714))
                  (let
                    (transition_tokens/1721 =
                       (function transitions/1723
                         (apply
                           (field_imm 23
                             (field_imm 7 (global Dune__exe__Grammar!)))
                           (function symbol/1724 _target/1725 toks/1726
                             (switch* symbol/1724
                              case tag 0: toks/1726
                              case tag 1:
                               (apply
                                 (field_imm 7
                                   (field_imm 3 (global Dune__exe__Grammar!)))
                                 (field_imm 0 symbol/1724) toks/1726)))
                           transitions/1723
                           (field_imm 0
                             (field_imm 3 (global Dune__exe__Grammar!))))))
                    (setfield_ptr(root-init) 15 (global Dune__exe__Lr0!)
                      transition_tokens/1721))
                  (let
                    (equal/1748 =
                       (function state1/1752 state2/1755 : int
                         (let
                           (toksr2/1754 =a (field_imm 1 state2/1755)
                            toksr1/1751 =a (field_imm 1 state1/1752))
                           (seq
                             (if
                               (&&
                                 (== (field_imm 0 state1/1752)
                                   (field_imm 0 state2/1755))
                                 (&&
                                   (apply
                                     (field_imm 48 (global Dune__exe__Lr0!))
                                     state1/1752)
                                   (apply
                                     (field_imm 48 (global Dune__exe__Lr0!))
                                     state2/1755)))
                               0
                               (raise
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "src/lr0.ml" 431 2])))
                             (letrec
                               (loop/1756
                                  (function i/1757[int] : int
                                    (if (== i/1757 0) 1
                                      (let (i/1758 =[int] (- i/1757 1))
                                        (&&
                                          (apply
                                            (field_imm 16
                                              (field_imm 3
                                                (global Dune__exe__Grammar!)))
                                            (array.get[gen] toksr1/1751
                                              i/1758)
                                            (array.get[gen] toksr2/1754
                                              i/1758))
                                          (apply loop/1756 i/1758))))))
                               (apply loop/1756
                                 (array.length[gen] toksr1/1751)))))))
                    (setfield_ptr(root-init) 17 (global Dune__exe__Lr0!)
                      equal/1748))
                  (let
                    (subsume/1759 =
                       (function state1/1763 state2/1766 : int
                         (let
                           (toksr2/1765 =a (field_imm 1 state2/1766)
                            toksr1/1762 =a (field_imm 1 state1/1763))
                           (seq
                             (if
                               (&&
                                 (== (field_imm 0 state1/1763)
                                   (field_imm 0 state2/1766))
                                 (&&
                                   (apply
                                     (field_imm 48 (global Dune__exe__Lr0!))
                                     state1/1763)
                                   (apply
                                     (field_imm 48 (global Dune__exe__Lr0!))
                                     state2/1766)))
                               0
                               (raise
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "src/lr0.ml" 444 2])))
                             (letrec
                               (loop/1767
                                  (function i/1768[int] : int
                                    (if (== i/1768 0) 1
                                      (let (i/1769 =[int] (- i/1768 1))
                                        (&&
                                          (apply
                                            (field_imm 17
                                              (field_imm 3
                                                (global Dune__exe__Grammar!)))
                                            (array.get[gen] toksr1/1762
                                              i/1769)
                                            (array.get[gen] toksr2/1765
                                              i/1769))
                                          (apply loop/1767 i/1769))))))
                               (apply loop/1767
                                 (array.length[gen] toksr1/1762)))))))
                    (setfield_ptr(root-init) 18 (global Dune__exe__Lr0!)
                      subsume/1759))
                  (let
                    (compatible/1770 =
                       (function param/1786 param/1785 : int
                         (let
                           (toksr2/1775 =a (field_imm 1 param/1785)
                            toksr1/1773 =a (field_imm 1 param/1786))
                           (seq
                             (if
                               (caml_equal (field_imm 0 param/1786)
                                 (field_imm 0 param/1785))
                               0
                               (raise
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "src/lr0.ml" 514 2])))
                             (let
                               (n/1776 =[int] (array.length[gen] toksr1/1773))
                               (letrec
                                 (loopi/1777
                                    (function i/1778[int] : int
                                      (if (== i/1778 n/1776) 1
                                        (let
                                          (toksr1i/1779 =
                                             (array.get[gen] toksr1/1773
                                               i/1778)
                                           toksr2i/1780 =
                                             (array.get[gen] toksr2/1775
                                               i/1778))
                                          (letrec
                                            (loopj/1781
                                               (function j/1782[int] : int
                                                 (if (== j/1782 i/1778) 1
                                                   (let
                                                     (toksr1j/1783 =
                                                        (array.get[gen]
                                                          toksr1/1773 j/1782)
                                                      toksr2j/1784 =
                                                        (array.get[gen]
                                                          toksr2/1775 j/1782))
                                                     (&&
                                                       (apply
                                                         (field_imm 17
                                                           (field_imm 3
                                                             (global Dune__exe__Grammar!)))
                                                         (apply
                                                           (field_imm 10
                                                             (field_imm 3
                                                               (global Dune__exe__Grammar!)))
                                                           toksr2i/1780
                                                           toksr1j/1783)
                                                         (apply
                                                           (field_imm 9
                                                             (field_imm 3
                                                               (global Dune__exe__Grammar!)))
                                                           toksr1i/1779
                                                           toksr2j/1784))
                                                       (&&
                                                         (apply
                                                           (field_imm 17
                                                             (field_imm 3
                                                               (global Dune__exe__Grammar!)))
                                                           (apply
                                                             (field_imm 10
                                                               (field_imm 3
                                                                 (global Dune__exe__Grammar!)))
                                                             toksr1i/1779
                                                             toksr2j/1784)
                                                           (apply
                                                             (field_imm 9
                                                               (field_imm 3
                                                                 (global Dune__exe__Grammar!)))
                                                             toksr2i/1780
                                                             toksr1j/1783))
                                                         (apply loopj/1781
                                                           (+ j/1782 1))))))))
                                            (&& (apply loopj/1781 0)
                                              (apply loopi/1777 (+ i/1778 1))))))))
                                 (apply loopi/1777 0)))))))
                    (setfield_ptr(root-init) 19 (global Dune__exe__Lr0!)
                      compatible/1770))
                  (let
                    (eos_compatible/1787 =
                       (function param/1799 param/1798 : int
                         (let
                           (toksr2/1792 =a (field_imm 1 param/1798)
                            toksr1/1790 =a (field_imm 1 param/1799))
                           (seq
                             (if
                               (caml_equal (field_imm 0 param/1799)
                                 (field_imm 0 param/1798))
                               0
                               (raise
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "src/lr0.ml" 581 2])))
                             (let
                               (n/1793 =[int] (array.length[gen] toksr1/1790))
                               (letrec
                                 (loop/1794
                                    (function i/1795[int] : int
                                      (if (== i/1795 n/1793) 1
                                        (let
                                          (toks1/1796 =
                                             (array.get[gen] toksr1/1790
                                               i/1795)
                                           toks2/1797 =
                                             (array.get[gen] toksr2/1792
                                               i/1795))
                                          (&&
                                            (if
                                              (&&
                                                (apply
                                                  (field_imm 6
                                                    (field_imm 3
                                                      (global Dune__exe__Grammar!)))
                                                  (field_imm 9
                                                    (field_imm 2
                                                      (global Dune__exe__Grammar!)))
                                                  toks1/1796)
                                                (apply
                                                  (field_imm 3
                                                    (field_imm 3
                                                      (global Dune__exe__Grammar!)))
                                                  toks1/1796))
                                              (apply
                                                (field_imm 6
                                                  (field_imm 3
                                                    (global Dune__exe__Grammar!)))
                                                (field_imm 9
                                                  (field_imm 2
                                                    (global Dune__exe__Grammar!)))
                                                toks2/1797)
                                              (if
                                                (&&
                                                  (apply
                                                    (field_imm 6
                                                      (field_imm 3
                                                        (global Dune__exe__Grammar!)))
                                                    (field_imm 9
                                                      (field_imm 2
                                                        (global Dune__exe__Grammar!)))
                                                    toks2/1797)
                                                  (apply
                                                    (field_imm 3
                                                      (field_imm 3
                                                        (global Dune__exe__Grammar!)))
                                                    toks2/1797))
                                                (apply
                                                  (field_imm 6
                                                    (field_imm 3
                                                      (global Dune__exe__Grammar!)))
                                                  (field_imm 9
                                                    (field_imm 2
                                                      (global Dune__exe__Grammar!)))
                                                  toks1/1796)
                                                1))
                                            (apply loop/1794 (+ i/1795 1)))))))
                                 (apply loop/1794 0)))))))
                    (setfield_ptr(root-init) 20 (global Dune__exe__Lr0!)
                      eos_compatible/1787))
                  (let
                    (error_compatible/1800 =
                       (function param/1812 param/1811 : int
                         (let
                           (toksr2/1805 =a (field_imm 1 param/1811)
                            toksr1/1803 =a (field_imm 1 param/1812))
                           (seq
                             (if
                               (caml_equal (field_imm 0 param/1812)
                                 (field_imm 0 param/1811))
                               0
                               (raise
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "src/lr0.ml" 632 2])))
                             (let
                               (n/1806 =[int] (array.length[gen] toksr1/1803))
                               (letrec
                                 (loop/1807
                                    (function i/1808[int] : int
                                      (if (== i/1808 n/1806) 1
                                        (let
                                          (toks1/1809 =
                                             (array.get[gen] toksr1/1803
                                               i/1808)
                                           toks2/1810 =
                                             (array.get[gen] toksr2/1805
                                               i/1808))
                                          (&&
                                            (if
                                              (apply
                                                (field_imm 6
                                                  (field_imm 3
                                                    (global Dune__exe__Grammar!)))
                                                (field_imm 10
                                                  (field_imm 2
                                                    (global Dune__exe__Grammar!)))
                                                toks1/1809)
                                              (apply
                                                (field_imm 6
                                                  (field_imm 3
                                                    (global Dune__exe__Grammar!)))
                                                (field_imm 10
                                                  (field_imm 2
                                                    (global Dune__exe__Grammar!)))
                                                toks2/1810)
                                              (if
                                                (apply
                                                  (field_imm 6
                                                    (field_imm 3
                                                      (global Dune__exe__Grammar!)))
                                                  (field_imm 10
                                                    (field_imm 2
                                                      (global Dune__exe__Grammar!)))
                                                  toks2/1810)
                                                (apply
                                                  (field_imm 6
                                                    (field_imm 3
                                                      (global Dune__exe__Grammar!)))
                                                  (field_imm 10
                                                    (field_imm 2
                                                      (global Dune__exe__Grammar!)))
                                                  toks1/1809)
                                                1))
                                            (apply loop/1807 (+ i/1808 1)))))))
                                 (apply loop/1807 0)))))))
                    (setfield_ptr(root-init) 21 (global Dune__exe__Lr0!)
                      error_compatible/1800))
                  (let
                    (union/1813 =
                       (function param/1885 s2/1819
                         (let
                           (toksr2/1818 =a (field_imm 1 s2/1819)
                            k1/1815 =a (field_imm 0 param/1885))
                           (seq
                             (if (caml_equal k1/1815 (field_imm 0 s2/1819)) 0
                               (raise
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "src/lr0.ml" 658 2])))
                             (let
                               (toksr/1820 =
                                  (apply
                                    (field_imm 54
                                      (global Dune__exe__MArray!))
                                    (field_imm 9
                                      (field_imm 3
                                        (global Dune__exe__Grammar!)))
                                    (field_imm 1 param/1885) toksr2/1818))
                               (if (== toksr2/1818 toksr/1820) s2/1819
                                 (makeblock 0 k1/1815 toksr/1820)))))))
                    (setfield_ptr(root-init) 22 (global Dune__exe__Lr0!)
                      union/1813))
                  (let
                    (restrict/1886 =
                       (function toks/1888 param/1892
                         (makeblock 0 (field_imm 0 param/1892)
                           (apply (field_imm 12 (global Stdlib__Array!))
                             (function toksri/1891
                               (apply
                                 (field_imm 10
                                   (field_imm 3 (global Dune__exe__Grammar!)))
                                 toksri/1891 toks/1888))
                             (field_imm 1 param/1892)))))
                    (setfield_ptr(root-init) 23 (global Dune__exe__Lr0!)
                      restrict/1886))
                  (let
                    (add_reduction/1960 =
                       (function prod/1962 tok/1963 reductions/1964
                         (let
                           (prods/1965 =
                              (try
                                (apply
                                  (field_imm 1
                                    (field_imm 4
                                      (global Dune__exe__Grammar!)))
                                  tok/1963 reductions/1964)
                               with exn/5367
                                (if
                                  (== exn/5367
                                    (field_imm 7 (global Stdlib!)))
                                  0 (reraise exn/5367))))
                           (apply
                             (field_imm 3
                               (field_imm 4 (global Dune__exe__Grammar!)))
                             tok/1963 (makeblock 0 prod/1962 prods/1965)
                             reductions/1964))))
                    (setfield_ptr(root-init) 27 (global Dune__exe__Lr0!)
                      add_reduction/1960))
                  (let
                    (add_reductions/1966 =
                       (function prod/1968 toks/1969 reductions/1970
                         (apply
                           (field_imm 13
                             (field_imm 3 (global Dune__exe__Grammar!)))
                           (apply (field_imm 27 (global Dune__exe__Lr0!))
                             prod/1968)
                           toks/1969 reductions/1970)))
                    (setfield_ptr(root-init) 28 (global Dune__exe__Lr0!)
                      add_reductions/1966))
                  (let
                    (reductions_table/1971 =
                       (function state/1973
                         (apply (field_imm 25 (global Stdlib__List!))
                           (function reductions/1974 param/1977
                             (apply (field_imm 28 (global Dune__exe__Lr0!))
                               (field_imm 1 param/1977)
                               (field_imm 0 param/1977) reductions/1974))
                           (field_imm 0
                             (field_imm 4 (global Dune__exe__Grammar!)))
                           (apply (field_imm 16 (global Dune__exe__Lr0!))
                             state/1973))))
                    (setfield_ptr(root-init) 29 (global Dune__exe__Lr0!)
                      reductions_table/1971))
                  (let
                    (reduction_tokens/1978 =
                       (function reductions/1980
                         (apply
                           (field_imm 19
                             (field_imm 4 (global Dune__exe__Grammar!)))
                           (function tok/1981 _prods/1982 toks/1983
                             (apply
                               (field_imm 7
                                 (field_imm 3 (global Dune__exe__Grammar!)))
                               tok/1981 toks/1983))
                           reductions/1980
                           (field_imm 0
                             (field_imm 3 (global Dune__exe__Grammar!))))))
                    (setfield_ptr(root-init) 31 (global Dune__exe__Lr0!)
                      reduction_tokens/1978))
                  (let
                    (invert/1984 =
                       (function reductions/1986
                         (apply
                           (field_imm 19
                             (field_imm 4 (global Dune__exe__Grammar!)))
                           (function tok/1987 prods/1988 inverse/1989
                             (apply (field_imm 25 (global Stdlib__List!))
                               (function inverse/1990 prod/1991
                                 (let
                                   (toks/1992 =
                                      (try
                                        (apply
                                          (field_imm 1
                                            (field_imm 9
                                              (global Dune__exe__Grammar!)))
                                          prod/1991 inverse/1990)
                                       with exn/5368
                                        (if
                                          (== exn/5368
                                            (field_imm 7 (global Stdlib!)))
                                          (field_imm 0
                                            (field_imm 3
                                              (global Dune__exe__Grammar!)))
                                          (reraise exn/5368))))
                                   (apply
                                     (field_imm 3
                                       (field_imm 9
                                         (global Dune__exe__Grammar!)))
                                     prod/1991
                                     (apply
                                       (field_imm 7
                                         (field_imm 3
                                           (global Dune__exe__Grammar!)))
                                       tok/1987 toks/1992)
                                     inverse/1990)))
                               inverse/1989 prods/1988))
                           reductions/1986
                           (field_imm 0
                             (field_imm 9 (global Dune__exe__Grammar!))))))
                    (setfield_ptr(root-init) 30 (global Dune__exe__Lr0!)
                      invert/1984))
                  (let
                    (has_eos_conflict/1993 =
                       (function transitions/1995 reductions/1996 : int
                         (catch
                           (try
                             (exit 58
                               (apply
                                 (field_imm 13
                                   (field_imm 4 (global Dune__exe__Grammar!)))
                                 (field_imm 9
                                   (field_imm 2 (global Dune__exe__Grammar!)))
                                 reductions/1996))
                            with exn/5370
                             (if (== exn/5370 (field_imm 7 (global Stdlib!)))
                               0 (reraise exn/5370)))
                          with (58 val/5369)
                           (||
                             (>
                               (apply (field_imm 0 (global Stdlib__List!))
                                 (field_imm 0 val/5369))
                               1)
                             (||
                               (not
                                 (apply
                                   (field_imm 9
                                     (field_imm 4
                                       (global Dune__exe__Grammar!)))
                                   (field_imm 1 val/5369)))
                               (apply
                                 (field_imm 35
                                   (field_imm 7 (global Dune__exe__Grammar!)))
                                 (function symbol/1999 param/2000 : int
                                   (apply
                                     (field_imm 0
                                       (field_imm 5
                                         (global Dune__exe__Grammar!)))
                                     symbol/1999))
                                 transitions/1995))))))
                    (setfield_ptr(root-init) 32 (global Dune__exe__Lr0!)
                      has_eos_conflict/1993))
                  (let
                    (has_eos_conflict_lr1state/2001 =
                       (function state/2003 : int
                         (apply (field_imm 32 (global Dune__exe__Lr0!))
                           (apply (field_imm 13 (global Dune__exe__Lr0!))
                             state/2003)
                           (apply (field_imm 29 (global Dune__exe__Lr0!))
                             state/2003))))
                    (setfield_ptr(root-init) 33 (global Dune__exe__Lr0!)
                      has_eos_conflict_lr1state/2001))
                  0)))))))))
