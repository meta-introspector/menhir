[
  structure_item (src/stage1/Driver.ml[23,1385+0]..[27,1480+57])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/stage1/Driver.ml[23,1385+4]..[23,1385+11])
          Ppat_var "grammar" (src/stage1/Driver.ml[23,1385+4]..[23,1385+11])
        expression (src/stage1/Driver.ml[23,1385+12]..[27,1480+57]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/stage1/Driver.ml[23,1385+12]..[23,1385+17])
            Ppat_var "lexer" (src/stage1/Driver.ml[23,1385+12]..[23,1385+17])
          expression (src/stage1/Driver.ml[23,1385+18]..[27,1480+57]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/stage1/Driver.ml[23,1385+18]..[23,1385+24])
              Ppat_var "lexbuf" (src/stage1/Driver.ml[23,1385+18]..[23,1385+24])
            expression (src/stage1/Driver.ml[24,1412+2]..[27,1480+57])
              Pexp_try
              expression (src/stage1/Driver.ml[25,1418+4]..[25,1418+31])
                Pexp_apply
                expression (src/stage1/Driver.ml[25,1418+4]..[25,1418+18])
                  Pexp_ident "Parser.grammar" (src/stage1/Driver.ml[25,1418+4]..[25,1418+18])
                [
                  <arg>
                  Nolabel
                    expression (src/stage1/Driver.ml[25,1418+19]..[25,1418+24])
                      Pexp_ident "lexer" (src/stage1/Driver.ml[25,1418+19]..[25,1418+24])
                  <arg>
                  Nolabel
                    expression (src/stage1/Driver.ml[25,1418+25]..[25,1418+31])
                      Pexp_ident "lexbuf" (src/stage1/Driver.ml[25,1418+25]..[25,1418+31])
                ]
              [
                <case>
                  pattern (src/stage1/Driver.ml[26,1450+7]..[26,1450+26])
                    Ppat_construct "Parsing.Parse_error" (src/stage1/Driver.ml[26,1450+7]..[26,1450+26])
                    None
                  expression (src/stage1/Driver.ml[27,1480+4]..[27,1480+57])
                    Pexp_apply
                    expression (src/stage1/Driver.ml[27,1480+4]..[27,1480+15])
                      Pexp_ident "Error.error" (src/stage1/Driver.ml[27,1480+4]..[27,1480+15])
                    [
                      <arg>
                      Nolabel
                        expression (src/stage1/Driver.ml[27,1480+16]..[27,1480+41])
                          Pexp_apply
                          expression (src/stage1/Driver.ml[27,1480+17]..[27,1480+33])
                            Pexp_ident "Positions.lexbuf" (src/stage1/Driver.ml[27,1480+17]..[27,1480+33])
                          [
                            <arg>
                            Nolabel
                              expression (src/stage1/Driver.ml[27,1480+34]..[27,1480+40])
                                Pexp_ident "lexbuf" (src/stage1/Driver.ml[27,1480+34]..[27,1480+40])
                          ]
                      <arg>
                      Nolabel
                        expression (src/stage1/Driver.ml[27,1480+42]..[27,1480+57])
                          Pexp_constant PConst_string("syntax error.",(src/stage1/Driver.ml[27,1480+43]..[27,1480+56]),None)
                    ]
              ]
    ]
]

let grammar lexer lexbuf =
  try Parser.grammar lexer lexbuf
  with
  | Parsing.Parse_error ->
      Error.error (Positions.lexbuf lexbuf) "syntax error."
[
  structure_item (src/stage1/Driver.ml[23,1385+0]..src/stage1/Driver.ml[27,1480+57])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/stage1/Driver.ml[23,1385+4]..src/stage1/Driver.ml[23,1385+11])
          Tpat_var "grammar/396"
        expression (src/stage1/Driver.ml[23,1385+12]..src/stage1/Driver.ml[27,1480+57]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/stage1/Driver.ml[23,1385+12]..src/stage1/Driver.ml[23,1385+17])
                Tpat_var "lexer/398"
              expression (src/stage1/Driver.ml[23,1385+18]..src/stage1/Driver.ml[27,1480+57]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/stage1/Driver.ml[23,1385+18]..src/stage1/Driver.ml[23,1385+24])
                      Tpat_var "lexbuf/399"
                    expression (src/stage1/Driver.ml[24,1412+2]..src/stage1/Driver.ml[27,1480+57])
                      Texp_try
                      expression (src/stage1/Driver.ml[25,1418+4]..src/stage1/Driver.ml[25,1418+31])
                        Texp_apply
                        expression (src/stage1/Driver.ml[25,1418+4]..src/stage1/Driver.ml[25,1418+18])
                          Texp_ident "Dune__exe!.Parser.grammar"
                        [
                          <arg>
                            Nolabel
                            expression (src/stage1/Driver.ml[25,1418+19]..src/stage1/Driver.ml[25,1418+24])
                              Texp_ident "lexer/398"
                          <arg>
                            Nolabel
                            expression (src/stage1/Driver.ml[25,1418+25]..src/stage1/Driver.ml[25,1418+31])
                              Texp_ident "lexbuf/399"
                        ]
                      [
                        <case>
                          pattern (src/stage1/Driver.ml[26,1450+7]..src/stage1/Driver.ml[26,1450+26])
                            Tpat_construct "Parsing.Parse_error"
                            []
                            None
                          expression (src/stage1/Driver.ml[27,1480+4]..src/stage1/Driver.ml[27,1480+57])
                            Texp_apply
                            expression (src/stage1/Driver.ml[27,1480+4]..src/stage1/Driver.ml[27,1480+15])
                              Texp_ident "Dune__exe!.Error.error"
                            [
                              <arg>
                                Nolabel
                                expression (src/stage1/Driver.ml[27,1480+16]..src/stage1/Driver.ml[27,1480+41])
                                  Texp_apply
                                  expression (src/stage1/Driver.ml[27,1480+17]..src/stage1/Driver.ml[27,1480+33])
                                    Texp_ident "Dune__exe!.Positions.lexbuf"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/stage1/Driver.ml[27,1480+34]..src/stage1/Driver.ml[27,1480+40])
                                        Texp_ident "lexbuf/399"
                                  ]
                              <arg>
                                Nolabel
                                expression (src/stage1/Driver.ml[27,1480+42]..src/stage1/Driver.ml[27,1480+57])
                                  Texp_construct "CamlinternalFormatBasics.Format"
                                  [
                                    expression (src/stage1/Driver.ml[27,1480+42]..src/stage1/Driver.ml[27,1480+57]) ghost
                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                      [
                                        expression (src/stage1/Driver.ml[27,1480+42]..src/stage1/Driver.ml[27,1480+57]) ghost
                                          Texp_constant Const_string("syntax error.",(src/stage1/Driver.ml[27,1480+42]..src/stage1/Driver.ml[27,1480+57]) ghost,None)
                                        expression (src/stage1/Driver.ml[27,1480+42]..src/stage1/Driver.ml[27,1480+57]) ghost
                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                          []
                                      ]
                                    expression (src/stage1/Driver.ml[27,1480+42]..src/stage1/Driver.ml[27,1480+57]) ghost
                                      Texp_constant Const_string("syntax error.",(src/stage1/Driver.ml[27,1480+42]..src/stage1/Driver.ml[27,1480+57]) ghost,None)
                                  ]
                            ]
                      ]
                ]
          ]
    ]
]

{<Dune__exe__Driver>
 "grammar"[value] -> <Dune__exe__Driver.0>;
 }

(seq
  (let
    (grammar/396 =
       (function lexer/398 lexbuf/399
         (try
           (apply (field_imm 0 (global Dune__exe__Parser!)) lexer/398
             lexbuf/399)
          with exn/1122
           (catch
             (if (== exn/1122 (field_imm 9 (global Stdlib__Parsing!)))
               (apply (field_imm 5 (global Dune__exe__Error!))
                 (apply (field_imm 30 (global Dune__exe__Positions!))
                   lexbuf/399)
                 [0: [11: "syntax error." 0] "syntax error."])
               (exit 1))
            with (1) (reraise exn/1122)))))
    (setfield_ptr(root-init) 0 (global Dune__exe__Driver!) grammar/396))
  0)
(seq
  (let
    (grammar/396 =
       (function lexer/398 lexbuf/399
         (try
           (apply (field_imm 0 (global Dune__exe__Parser!)) lexer/398
             lexbuf/399)
          with exn/1122
           (if (== exn/1122 (field_imm 9 (global Stdlib__Parsing!)))
             (apply (field_imm 5 (global Dune__exe__Error!))
               (apply (field_imm 30 (global Dune__exe__Positions!))
                 lexbuf/399)
               [0: [11: "syntax error." 0] "syntax error."])
             (reraise exn/1122)))))
    (setfield_ptr(root-init) 0 (global Dune__exe__Driver!) grammar/396))
  0)
