[
  structure_item (src/PPrint.ml[23,1449+0]..[23,1449+23])
    Pstr_include    module_expr (src/PPrint.ml[23,1449+8]..[23,1449+23])
      Pmod_ident "Vendored_pprint" (src/PPrint.ml[23,1449+8]..[23,1449+23])
]

include Vendored_pprint
[
  structure_item (src/PPrint.ml[23,1449+0]..src/PPrint.ml[23,1449+23])
    Tstr_include    module_expr (src/PPrint.ml[23,1449+8]..src/PPrint.ml[23,1449+23])
      Tmod_ident "Vendored_pprint!"
]

{<Dune__exe__PPrint>
 "!^"[value] -> CU Vendored_pprint . "!^"[value];
 "OCaml"[module] -> CU Vendored_pprint . "OCaml"[module];
 "ToBuffer"[module] -> CU Vendored_pprint . "ToBuffer"[module];
 "ToChannel"[module] -> CU Vendored_pprint . "ToChannel"[module];
 "ToFormatter"[module] -> CU Vendored_pprint . "ToFormatter"[module];
 "^//^"[value] -> CU Vendored_pprint . "^//^"[value];
 "^/^"[value] -> CU Vendored_pprint . "^/^"[value];
 "^^"[value] -> CU Vendored_pprint . "^^"[value];
 "align"[value] -> CU Vendored_pprint . "align"[value];
 "ampersand"[value] -> CU Vendored_pprint . "ampersand"[value];
 "angles"[value] -> CU Vendored_pprint . "angles"[value];
 "arbitrary_string"[value] -> CU Vendored_pprint . "arbitrary_string"[value];
 "at"[value] -> CU Vendored_pprint . "at"[value];
 "backslash"[value] -> CU Vendored_pprint . "backslash"[value];
 "bang"[value] -> CU Vendored_pprint . "bang"[value];
 "bar"[value] -> CU Vendored_pprint . "bar"[value];
 "blank"[value] -> CU Vendored_pprint . "blank"[value];
 "bquote"[value] -> CU Vendored_pprint . "bquote"[value];
 "bquotes"[value] -> CU Vendored_pprint . "bquotes"[value];
 "braces"[value] -> CU Vendored_pprint . "braces"[value];
 "brackets"[value] -> CU Vendored_pprint . "brackets"[value];
 "break"[value] -> CU Vendored_pprint . "break"[value];
 "caret"[value] -> CU Vendored_pprint . "caret"[value];
 "char"[value] -> CU Vendored_pprint . "char"[value];
 "colon"[value] -> CU Vendored_pprint . "colon"[value];
 "comma"[value] -> CU Vendored_pprint . "comma"[value];
 "compact"[value] -> CU Vendored_pprint . "compact"[value];
 "concat"[value] -> CU Vendored_pprint . "concat"[value];
 "concat_map"[value] -> CU Vendored_pprint . "concat_map"[value];
 "custom"[value] -> CU Vendored_pprint . "custom"[value];
 "custom"[type] -> CU Vendored_pprint . "custom"[type];
 "custom"[class type] -> CU Vendored_pprint . "custom"[class type];
 "document"[type] -> CU Vendored_pprint . "document"[type];
 "dollar"[value] -> CU Vendored_pprint . "dollar"[value];
 "dot"[value] -> CU Vendored_pprint . "dot"[value];
 "dquote"[value] -> CU Vendored_pprint . "dquote"[value];
 "dquotes"[value] -> CU Vendored_pprint . "dquotes"[value];
 "empty"[value] -> CU Vendored_pprint . "empty"[value];
 "enclose"[value] -> CU Vendored_pprint . "enclose"[value];
 "equals"[value] -> CU Vendored_pprint . "equals"[value];
 "fancystring"[value] -> CU Vendored_pprint . "fancystring"[value];
 "fancysubstring"[value] -> CU Vendored_pprint . "fancysubstring"[value];
 "flow"[value] -> CU Vendored_pprint . "flow"[value];
 "flow_map"[value] -> CU Vendored_pprint . "flow_map"[value];
 "group"[value] -> CU Vendored_pprint . "group"[value];
 "hang"[value] -> CU Vendored_pprint . "hang"[value];
 "hardline"[value] -> CU Vendored_pprint . "hardline"[value];
 "ifflat"[value] -> CU Vendored_pprint . "ifflat"[value];
 "infinity"[value] -> CU Vendored_pprint . "infinity"[value];
 "infix"[value] -> CU Vendored_pprint . "infix"[value];
 "jump"[value] -> CU Vendored_pprint . "jump"[value];
 "langle"[value] -> CU Vendored_pprint . "langle"[value];
 "lbrace"[value] -> CU Vendored_pprint . "lbrace"[value];
 "lbracket"[value] -> CU Vendored_pprint . "lbracket"[value];
 "lines"[value] -> CU Vendored_pprint . "lines"[value];
 "lparen"[value] -> CU Vendored_pprint . "lparen"[value];
 "minus"[value] -> CU Vendored_pprint . "minus"[value];
 "nest"[value] -> CU Vendored_pprint . "nest"[value];
 "optional"[value] -> CU Vendored_pprint . "optional"[value];
 "output"[type] -> CU Vendored_pprint . "output"[type];
 "output"[class type] -> CU Vendored_pprint . "output"[class type];
 "parens"[value] -> CU Vendored_pprint . "parens"[value];
 "percent"[value] -> CU Vendored_pprint . "percent"[value];
 "plus"[value] -> CU Vendored_pprint . "plus"[value];
 "point"[type] -> CU Vendored_pprint . "point"[type];
 "precede"[value] -> CU Vendored_pprint . "precede"[value];
 "prefix"[value] -> CU Vendored_pprint . "prefix"[value];
 "pretty"[value] -> CU Vendored_pprint . "pretty"[value];
 "qmark"[value] -> CU Vendored_pprint . "qmark"[value];
 "range"[value] -> CU Vendored_pprint . "range"[value];
 "range"[type] -> CU Vendored_pprint . "range"[type];
 "rangle"[value] -> CU Vendored_pprint . "rangle"[value];
 "rbrace"[value] -> CU Vendored_pprint . "rbrace"[value];
 "rbracket"[value] -> CU Vendored_pprint . "rbracket"[value];
 "repeat"[value] -> CU Vendored_pprint . "repeat"[value];
 "requirement"[value] -> CU Vendored_pprint . "requirement"[value];
 "requirement"[type] -> CU Vendored_pprint . "requirement"[type];
 "rparen"[value] -> CU Vendored_pprint . "rparen"[value];
 "semi"[value] -> CU Vendored_pprint . "semi"[value];
 "separate"[value] -> CU Vendored_pprint . "separate"[value];
 "separate2"[value] -> CU Vendored_pprint . "separate2"[value];
 "separate_map"[value] -> CU Vendored_pprint . "separate_map"[value];
 "sharp"[value] -> CU Vendored_pprint . "sharp"[value];
 "slash"[value] -> CU Vendored_pprint . "slash"[value];
 "soft_surround"[value] -> CU Vendored_pprint . "soft_surround"[value];
 "space"[value] -> CU Vendored_pprint . "space"[value];
 "split"[value] -> CU Vendored_pprint . "split"[value];
 "squote"[value] -> CU Vendored_pprint . "squote"[value];
 "squotes"[value] -> CU Vendored_pprint . "squotes"[value];
 "star"[value] -> CU Vendored_pprint . "star"[value];
 "state"[type] -> CU Vendored_pprint . "state"[type];
 "string"[value] -> CU Vendored_pprint . "string"[value];
 "substring"[value] -> CU Vendored_pprint . "substring"[value];
 "surround"[value] -> CU Vendored_pprint . "surround"[value];
 "surround_separate"[value] ->
   CU Vendored_pprint . "surround_separate"[value];
 "surround_separate_map"[value] ->
   CU Vendored_pprint . "surround_separate_map"[value];
 "terminate"[value] -> CU Vendored_pprint . "terminate"[value];
 "tilde"[value] -> CU Vendored_pprint . "tilde"[value];
 "twice"[value] -> CU Vendored_pprint . "twice"[value];
 "underscore"[value] -> CU Vendored_pprint . "underscore"[value];
 "url"[value] -> CU Vendored_pprint . "url"[value];
 "utf8format"[value] -> CU Vendored_pprint . "utf8format"[value];
 "utf8string"[value] -> CU Vendored_pprint . "utf8string"[value];
 "words"[value] -> CU Vendored_pprint . "words"[value];
 }

(setglobal Dune__exe__PPrint!
  (let
    (include/766 =a (global Vendored_pprint!)
     empty/502 =a (field_mut 0 include/766)
     char/503 =a (field_mut 1 include/766)
     string/504 =a (field_mut 2 include/766)
     substring/505 =a (field_mut 3 include/766)
     fancystring/506 =a (field_mut 4 include/766)
     fancysubstring/507 =a (field_mut 5 include/766)
     utf8string/508 =a (field_mut 6 include/766)
     utf8format/509 =a (field_mut 7 include/766)
     hardline/510 =a (field_mut 8 include/766)
     blank/511 =a (field_mut 9 include/766)
     break/512 =a (field_mut 10 include/766)
     ^^/513 =a (field_mut 11 include/766)
     nest/514 =a (field_mut 12 include/766)
     group/515 =a (field_mut 13 include/766)
     ifflat/516 =a (field_mut 14 include/766)
     align/517 =a (field_mut 15 include/766)
     range/520 =a (field_mut 16 include/766)
     ToChannel/521 =a (field_mut 17 include/766)
     ToBuffer/522 =a (field_mut 18 include/766)
     ToFormatter/523 =a (field_mut 19 include/766)
     infinity/525 =a (field_mut 20 include/766)
     custom/531 =a (field_mut 21 include/766)
     requirement/532 =a (field_mut 22 include/766)
     pretty/533 =a (field_mut 23 include/766)
     compact/534 =a (field_mut 24 include/766)
     lparen/535 =a (field_mut 25 include/766)
     rparen/536 =a (field_mut 26 include/766)
     langle/537 =a (field_mut 27 include/766)
     rangle/538 =a (field_mut 28 include/766)
     lbrace/539 =a (field_mut 29 include/766)
     rbrace/540 =a (field_mut 30 include/766)
     lbracket/541 =a (field_mut 31 include/766)
     rbracket/542 =a (field_mut 32 include/766)
     squote/543 =a (field_mut 33 include/766)
     dquote/544 =a (field_mut 34 include/766)
     bquote/545 =a (field_mut 35 include/766)
     semi/546 =a (field_mut 36 include/766)
     colon/547 =a (field_mut 37 include/766)
     comma/548 =a (field_mut 38 include/766)
     space/549 =a (field_mut 39 include/766)
     dot/550 =a (field_mut 40 include/766)
     sharp/551 =a (field_mut 41 include/766)
     slash/552 =a (field_mut 42 include/766)
     backslash/553 =a (field_mut 43 include/766)
     equals/554 =a (field_mut 44 include/766)
     qmark/555 =a (field_mut 45 include/766)
     tilde/556 =a (field_mut 46 include/766)
     at/557 =a (field_mut 47 include/766)
     percent/558 =a (field_mut 48 include/766)
     dollar/559 =a (field_mut 49 include/766)
     caret/560 =a (field_mut 50 include/766)
     ampersand/561 =a (field_mut 51 include/766)
     star/562 =a (field_mut 52 include/766)
     plus/563 =a (field_mut 53 include/766)
     minus/564 =a (field_mut 54 include/766)
     underscore/565 =a (field_mut 55 include/766)
     bang/566 =a (field_mut 56 include/766)
     bar/567 =a (field_mut 57 include/766)
     precede/568 =a (field_mut 58 include/766)
     terminate/569 =a (field_mut 59 include/766)
     enclose/570 =a (field_mut 60 include/766)
     squotes/571 =a (field_mut 61 include/766)
     dquotes/572 =a (field_mut 62 include/766)
     bquotes/573 =a (field_mut 63 include/766)
     braces/574 =a (field_mut 64 include/766)
     parens/575 =a (field_mut 65 include/766)
     angles/576 =a (field_mut 66 include/766)
     brackets/577 =a (field_mut 67 include/766)
     twice/578 =a (field_mut 68 include/766)
     repeat/579 =a (field_mut 69 include/766)
     concat/580 =a (field_mut 70 include/766)
     separate/581 =a (field_mut 71 include/766)
     concat_map/582 =a (field_mut 72 include/766)
     separate_map/583 =a (field_mut 73 include/766)
     separate2/584 =a (field_mut 74 include/766)
     optional/585 =a (field_mut 75 include/766)
     lines/586 =a (field_mut 76 include/766)
     arbitrary_string/587 =a (field_mut 77 include/766)
     words/588 =a (field_mut 78 include/766)
     split/589 =a (field_mut 79 include/766)
     flow/590 =a (field_mut 80 include/766)
     flow_map/591 =a (field_mut 81 include/766)
     url/592 =a (field_mut 82 include/766)
     hang/593 =a (field_mut 83 include/766)
     prefix/594 =a (field_mut 84 include/766)
     jump/595 =a (field_mut 85 include/766)
     infix/596 =a (field_mut 86 include/766)
     surround/597 =a (field_mut 87 include/766)
     soft_surround/598 =a (field_mut 88 include/766)
     surround_separate/599 =a (field_mut 89 include/766)
     surround_separate_map/600 =a (field_mut 90 include/766)
     !^/601 =a (field_mut 91 include/766)
     ^/^/602 =a (field_mut 92 include/766)
     ^//^/603 =a (field_mut 93 include/766))
    (pseudo <unknown location>
      (makeblock 0 empty/502 char/503 string/504 substring/505
        fancystring/506 fancysubstring/507 utf8string/508 utf8format/509
        hardline/510 blank/511 break/512 ^^/513 nest/514 group/515 ifflat/516
        align/517 range/520 ToChannel/521 ToBuffer/522 ToFormatter/523
        infinity/525 custom/531 requirement/532 pretty/533 compact/534
        lparen/535 rparen/536 langle/537 rangle/538 lbrace/539 rbrace/540
        lbracket/541 rbracket/542 squote/543 dquote/544 bquote/545 semi/546
        colon/547 comma/548 space/549 dot/550 sharp/551 slash/552
        backslash/553 equals/554 qmark/555 tilde/556 at/557 percent/558
        dollar/559 caret/560 ampersand/561 star/562 plus/563 minus/564
        underscore/565 bang/566 bar/567 precede/568 terminate/569 enclose/570
        squotes/571 dquotes/572 bquotes/573 braces/574 parens/575 angles/576
        brackets/577 twice/578 repeat/579 concat/580 separate/581
        concat_map/582 separate_map/583 separate2/584 optional/585 lines/586
        arbitrary_string/587 words/588 split/589 flow/590 flow_map/591
        url/592 hang/593 prefix/594 jump/595 infix/596 surround/597
        soft_surround/598 surround_separate/599 surround_separate_map/600
        !^/601 ^/^/602 ^//^/603))))
(setglobal Dune__exe__PPrint!
  (let
    (include/766 =a (global Vendored_pprint!)
     empty/502 =a (field_mut 0 include/766)
     char/503 =a (field_mut 1 include/766)
     string/504 =a (field_mut 2 include/766)
     substring/505 =a (field_mut 3 include/766)
     fancystring/506 =a (field_mut 4 include/766)
     fancysubstring/507 =a (field_mut 5 include/766)
     utf8string/508 =a (field_mut 6 include/766)
     utf8format/509 =a (field_mut 7 include/766)
     hardline/510 =a (field_mut 8 include/766)
     blank/511 =a (field_mut 9 include/766)
     break/512 =a (field_mut 10 include/766)
     ^^/513 =a (field_mut 11 include/766)
     nest/514 =a (field_mut 12 include/766)
     group/515 =a (field_mut 13 include/766)
     ifflat/516 =a (field_mut 14 include/766)
     align/517 =a (field_mut 15 include/766)
     range/520 =a (field_mut 16 include/766)
     ToChannel/521 =a (field_mut 17 include/766)
     ToBuffer/522 =a (field_mut 18 include/766)
     ToFormatter/523 =a (field_mut 19 include/766)
     infinity/525 =a (field_mut 20 include/766)
     custom/531 =a (field_mut 21 include/766)
     requirement/532 =a (field_mut 22 include/766)
     pretty/533 =a (field_mut 23 include/766)
     compact/534 =a (field_mut 24 include/766)
     lparen/535 =a (field_mut 25 include/766)
     rparen/536 =a (field_mut 26 include/766)
     langle/537 =a (field_mut 27 include/766)
     rangle/538 =a (field_mut 28 include/766)
     lbrace/539 =a (field_mut 29 include/766)
     rbrace/540 =a (field_mut 30 include/766)
     lbracket/541 =a (field_mut 31 include/766)
     rbracket/542 =a (field_mut 32 include/766)
     squote/543 =a (field_mut 33 include/766)
     dquote/544 =a (field_mut 34 include/766)
     bquote/545 =a (field_mut 35 include/766)
     semi/546 =a (field_mut 36 include/766)
     colon/547 =a (field_mut 37 include/766)
     comma/548 =a (field_mut 38 include/766)
     space/549 =a (field_mut 39 include/766)
     dot/550 =a (field_mut 40 include/766)
     sharp/551 =a (field_mut 41 include/766)
     slash/552 =a (field_mut 42 include/766)
     backslash/553 =a (field_mut 43 include/766)
     equals/554 =a (field_mut 44 include/766)
     qmark/555 =a (field_mut 45 include/766)
     tilde/556 =a (field_mut 46 include/766)
     at/557 =a (field_mut 47 include/766)
     percent/558 =a (field_mut 48 include/766)
     dollar/559 =a (field_mut 49 include/766)
     caret/560 =a (field_mut 50 include/766)
     ampersand/561 =a (field_mut 51 include/766)
     star/562 =a (field_mut 52 include/766)
     plus/563 =a (field_mut 53 include/766)
     minus/564 =a (field_mut 54 include/766)
     underscore/565 =a (field_mut 55 include/766)
     bang/566 =a (field_mut 56 include/766)
     bar/567 =a (field_mut 57 include/766)
     precede/568 =a (field_mut 58 include/766)
     terminate/569 =a (field_mut 59 include/766)
     enclose/570 =a (field_mut 60 include/766)
     squotes/571 =a (field_mut 61 include/766)
     dquotes/572 =a (field_mut 62 include/766)
     bquotes/573 =a (field_mut 63 include/766)
     braces/574 =a (field_mut 64 include/766)
     parens/575 =a (field_mut 65 include/766)
     angles/576 =a (field_mut 66 include/766)
     brackets/577 =a (field_mut 67 include/766)
     twice/578 =a (field_mut 68 include/766)
     repeat/579 =a (field_mut 69 include/766)
     concat/580 =a (field_mut 70 include/766)
     separate/581 =a (field_mut 71 include/766)
     concat_map/582 =a (field_mut 72 include/766)
     separate_map/583 =a (field_mut 73 include/766)
     separate2/584 =a (field_mut 74 include/766)
     optional/585 =a (field_mut 75 include/766)
     lines/586 =a (field_mut 76 include/766)
     arbitrary_string/587 =a (field_mut 77 include/766)
     words/588 =a (field_mut 78 include/766)
     split/589 =a (field_mut 79 include/766)
     flow/590 =a (field_mut 80 include/766)
     flow_map/591 =a (field_mut 81 include/766)
     url/592 =a (field_mut 82 include/766)
     hang/593 =a (field_mut 83 include/766)
     prefix/594 =a (field_mut 84 include/766)
     jump/595 =a (field_mut 85 include/766)
     infix/596 =a (field_mut 86 include/766)
     surround/597 =a (field_mut 87 include/766)
     soft_surround/598 =a (field_mut 88 include/766)
     surround_separate/599 =a (field_mut 89 include/766)
     surround_separate_map/600 =a (field_mut 90 include/766)
     !^/601 =a (field_mut 91 include/766)
     ^/^/602 =a (field_mut 92 include/766)
     ^//^/603 =a (field_mut 93 include/766))
    (pseudo <unknown location>
      (makeblock 0 empty/502 char/503 string/504 substring/505
        fancystring/506 fancysubstring/507 utf8string/508 utf8format/509
        hardline/510 blank/511 break/512 ^^/513 nest/514 group/515 ifflat/516
        align/517 range/520 ToChannel/521 ToBuffer/522 ToFormatter/523
        infinity/525 custom/531 requirement/532 pretty/533 compact/534
        lparen/535 rparen/536 langle/537 rangle/538 lbrace/539 rbrace/540
        lbracket/541 rbracket/542 squote/543 dquote/544 bquote/545 semi/546
        colon/547 comma/548 space/549 dot/550 sharp/551 slash/552
        backslash/553 equals/554 qmark/555 tilde/556 at/557 percent/558
        dollar/559 caret/560 ampersand/561 star/562 plus/563 minus/564
        underscore/565 bang/566 bar/567 precede/568 terminate/569 enclose/570
        squotes/571 dquotes/572 bquotes/573 braces/574 parens/575 angles/576
        brackets/577 twice/578 repeat/579 concat/580 separate/581
        concat_map/582 separate_map/583 separate2/584 optional/585 lines/586
        arbitrary_string/587 words/588 split/589 flow/590 flow_map/591
        url/592 hang/593 prefix/594 jump/595 infix/596 surround/597
        soft_surround/598 surround_separate/599 surround_separate_map/600
        !^/601 ^/^/602 ^//^/603))))
